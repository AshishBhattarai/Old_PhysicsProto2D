!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
*	asio/src/doc/reference.xsl	/^<xsl:template match="*" mode="class-detail"\/>$/;"	m
/doxygen	asio/src/doc/reference.xsl	/^<xsl:template match="\/doxygen">$/;"	m
/doxygen	asio/src/doc/tutorial.xsl	/^<xsl:template match="\/doxygen">$/;"	m
@*|node()	asio/src/doc/asioref.xsl	/^<xsl:template match="@*|node()">$/;"	m
AI_CANONNAME	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define AI_CANONNAME /;"	d
AI_NUMERICHOST	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define AI_NUMERICHOST /;"	d
AI_PASSIVE	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define AI_PASSIVE /;"	d
ALLOCATOR_HPP	asio/src/tests/latency/allocator.hpp	/^#define ALLOCATOR_HPP$/;"	d
AM_CXXFLAGS	asio/src/examples/cpp03/Makefile.am	/^AM_CXXFLAGS = -I$(srcdir)\/..\/..\/..\/include$/;"	m
AM_CXXFLAGS	asio/src/examples/cpp11/Makefile.am	/^AM_CXXFLAGS = -I$(srcdir)\/..\/..\/..\/include$/;"	m
AM_CXXFLAGS	asio/src/examples/cpp14/Makefile.am	/^AM_CXXFLAGS = -I$(srcdir)\/..\/..\/..\/include$/;"	m
AM_CXXFLAGS	asio/src/tests/Makefile.am	/^AM_CXXFLAGS = -I$(srcdir)\/..\/..\/include$/;"	m
ARCHETYPES_ASYNC_OPS_HPP	asio/src/tests/unit/archetypes/async_ops.hpp	/^#define ARCHETYPES_ASYNC_OPS_HPP$/;"	d
ARCHETYPES_ASYNC_RESULT_HPP	asio/src/tests/unit/archetypes/async_result.hpp	/^#define ARCHETYPES_ASYNC_RESULT_HPP$/;"	d
ARCHETYPES_GETTABLE_SOCKET_OPTION_HPP	asio/src/tests/unit/archetypes/gettable_socket_option.hpp	/^#define ARCHETYPES_GETTABLE_SOCKET_OPTION_HPP$/;"	d
ARCHETYPES_IO_CONTROL_COMMAND_HPP	asio/src/tests/unit/archetypes/io_control_command.hpp	/^#define ARCHETYPES_IO_CONTROL_COMMAND_HPP$/;"	d
ARCHETYPES_SETTABLE_SOCKET_OPTION_HPP	asio/src/tests/unit/archetypes/settable_socket_option.hpp	/^#define ARCHETYPES_SETTABLE_SOCKET_OPTION_HPP$/;"	d
ASIO_ACCEPT_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_ACCEPT_HANDLER_CHECK(/;"	d
ASIO_ALSO_INHERIT_TRACKED_HANDLER	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_ALSO_INHERIT_TRACKED_HANDLER /;"	d
ASIO_ASSERT	asio/include/asio/detail/assert.hpp	/^# define ASIO_ASSERT(/;"	d
ASIO_ASSOCIATED_ALLOCATOR_HPP	asio/include/asio/associated_allocator.hpp	/^#define ASIO_ASSOCIATED_ALLOCATOR_HPP$/;"	d
ASIO_ASSOCIATED_EXECUTOR_HPP	asio/include/asio/associated_executor.hpp	/^#define ASIO_ASSOCIATED_EXECUTOR_HPP$/;"	d
ASIO_ASYNC_RESULT_HPP	asio/include/asio/async_result.hpp	/^#define ASIO_ASYNC_RESULT_HPP$/;"	d
ASIO_AWAITABLE_HPP	asio/include/asio/awaitable.hpp	/^#define ASIO_AWAITABLE_HPP$/;"	d
ASIO_BASIC_DATAGRAM_SOCKET_FWD_DECL	asio/include/asio/basic_datagram_socket.hpp	/^#define ASIO_BASIC_DATAGRAM_SOCKET_FWD_DECL$/;"	d
ASIO_BASIC_DATAGRAM_SOCKET_FWD_DECL	asio/include/asio/ts/netfwd.hpp	/^#define ASIO_BASIC_DATAGRAM_SOCKET_FWD_DECL$/;"	d
ASIO_BASIC_DATAGRAM_SOCKET_HPP	asio/include/asio/basic_datagram_socket.hpp	/^#define ASIO_BASIC_DATAGRAM_SOCKET_HPP$/;"	d
ASIO_BASIC_DEADLINE_TIMER_HPP	asio/include/asio/basic_deadline_timer.hpp	/^#define ASIO_BASIC_DEADLINE_TIMER_HPP$/;"	d
ASIO_BASIC_IO_OBJECT_HPP	asio/include/asio/basic_io_object.hpp	/^#define ASIO_BASIC_IO_OBJECT_HPP$/;"	d
ASIO_BASIC_RAW_SOCKET_FWD_DECL	asio/include/asio/basic_raw_socket.hpp	/^#define ASIO_BASIC_RAW_SOCKET_FWD_DECL$/;"	d
ASIO_BASIC_RAW_SOCKET_HPP	asio/include/asio/basic_raw_socket.hpp	/^#define ASIO_BASIC_RAW_SOCKET_HPP$/;"	d
ASIO_BASIC_SEQ_PACKET_SOCKET_FWD_DECL	asio/include/asio/basic_seq_packet_socket.hpp	/^#define ASIO_BASIC_SEQ_PACKET_SOCKET_FWD_DECL$/;"	d
ASIO_BASIC_SEQ_PACKET_SOCKET_HPP	asio/include/asio/basic_seq_packet_socket.hpp	/^#define ASIO_BASIC_SEQ_PACKET_SOCKET_HPP$/;"	d
ASIO_BASIC_SERIAL_PORT_HPP	asio/include/asio/basic_serial_port.hpp	/^#define ASIO_BASIC_SERIAL_PORT_HPP$/;"	d
ASIO_BASIC_SIGNAL_SET_HPP	asio/include/asio/basic_signal_set.hpp	/^#define ASIO_BASIC_SIGNAL_SET_HPP$/;"	d
ASIO_BASIC_SOCKET_ACCEPTOR_FWD_DECL	asio/include/asio/basic_socket_acceptor.hpp	/^#define ASIO_BASIC_SOCKET_ACCEPTOR_FWD_DECL$/;"	d
ASIO_BASIC_SOCKET_ACCEPTOR_FWD_DECL	asio/include/asio/ts/netfwd.hpp	/^#define ASIO_BASIC_SOCKET_ACCEPTOR_FWD_DECL$/;"	d
ASIO_BASIC_SOCKET_ACCEPTOR_HPP	asio/include/asio/basic_socket_acceptor.hpp	/^#define ASIO_BASIC_SOCKET_ACCEPTOR_HPP$/;"	d
ASIO_BASIC_SOCKET_FWD_DECL	asio/include/asio/basic_socket.hpp	/^#define ASIO_BASIC_SOCKET_FWD_DECL$/;"	d
ASIO_BASIC_SOCKET_FWD_DECL	asio/include/asio/ts/netfwd.hpp	/^#define ASIO_BASIC_SOCKET_FWD_DECL$/;"	d
ASIO_BASIC_SOCKET_HPP	asio/include/asio/basic_socket.hpp	/^#define ASIO_BASIC_SOCKET_HPP$/;"	d
ASIO_BASIC_SOCKET_IOSTREAM_FWD_DECL	asio/include/asio/basic_socket_iostream.hpp	/^#define ASIO_BASIC_SOCKET_IOSTREAM_FWD_DECL$/;"	d
ASIO_BASIC_SOCKET_IOSTREAM_FWD_DECL	asio/include/asio/ts/netfwd.hpp	/^#define ASIO_BASIC_SOCKET_IOSTREAM_FWD_DECL$/;"	d
ASIO_BASIC_SOCKET_IOSTREAM_HPP	asio/include/asio/basic_socket_iostream.hpp	/^#define ASIO_BASIC_SOCKET_IOSTREAM_HPP$/;"	d
ASIO_BASIC_SOCKET_STREAMBUF_FWD_DECL	asio/include/asio/basic_socket_streambuf.hpp	/^#define ASIO_BASIC_SOCKET_STREAMBUF_FWD_DECL$/;"	d
ASIO_BASIC_SOCKET_STREAMBUF_FWD_DECL	asio/include/asio/ts/netfwd.hpp	/^#define ASIO_BASIC_SOCKET_STREAMBUF_FWD_DECL$/;"	d
ASIO_BASIC_SOCKET_STREAMBUF_HPP	asio/include/asio/basic_socket_streambuf.hpp	/^#define ASIO_BASIC_SOCKET_STREAMBUF_HPP$/;"	d
ASIO_BASIC_STREAMBUF_FWD_HPP	asio/include/asio/basic_streambuf_fwd.hpp	/^#define ASIO_BASIC_STREAMBUF_FWD_HPP$/;"	d
ASIO_BASIC_STREAMBUF_HPP	asio/include/asio/basic_streambuf.hpp	/^#define ASIO_BASIC_STREAMBUF_HPP$/;"	d
ASIO_BASIC_STREAM_SOCKET_FWD_DECL	asio/include/asio/basic_stream_socket.hpp	/^#define ASIO_BASIC_STREAM_SOCKET_FWD_DECL$/;"	d
ASIO_BASIC_STREAM_SOCKET_FWD_DECL	asio/include/asio/ts/netfwd.hpp	/^#define ASIO_BASIC_STREAM_SOCKET_FWD_DECL$/;"	d
ASIO_BASIC_STREAM_SOCKET_HPP	asio/include/asio/basic_stream_socket.hpp	/^#define ASIO_BASIC_STREAM_SOCKET_HPP$/;"	d
ASIO_BASIC_WAITABLE_TIMER_FWD_DECL	asio/include/asio/basic_waitable_timer.hpp	/^#define ASIO_BASIC_WAITABLE_TIMER_FWD_DECL$/;"	d
ASIO_BASIC_WAITABLE_TIMER_FWD_DECL	asio/include/asio/ts/netfwd.hpp	/^#define ASIO_BASIC_WAITABLE_TIMER_FWD_DECL$/;"	d
ASIO_BASIC_WAITABLE_TIMER_HPP	asio/include/asio/basic_waitable_timer.hpp	/^#define ASIO_BASIC_WAITABLE_TIMER_HPP$/;"	d
ASIO_BIND_EXECUTOR_HPP	asio/include/asio/bind_executor.hpp	/^#define ASIO_BIND_EXECUTOR_HPP$/;"	d
ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK(/;"	d
ASIO_BUFFERED_READ_STREAM_FWD_HPP	asio/include/asio/buffered_read_stream_fwd.hpp	/^#define ASIO_BUFFERED_READ_STREAM_FWD_HPP$/;"	d
ASIO_BUFFERED_READ_STREAM_HPP	asio/include/asio/buffered_read_stream.hpp	/^#define ASIO_BUFFERED_READ_STREAM_HPP$/;"	d
ASIO_BUFFERED_STREAM_FWD_HPP	asio/include/asio/buffered_stream_fwd.hpp	/^#define ASIO_BUFFERED_STREAM_FWD_HPP$/;"	d
ASIO_BUFFERED_STREAM_HPP	asio/include/asio/buffered_stream.hpp	/^#define ASIO_BUFFERED_STREAM_HPP$/;"	d
ASIO_BUFFERED_WRITE_STREAM_FWD_HPP	asio/include/asio/buffered_write_stream_fwd.hpp	/^#define ASIO_BUFFERED_WRITE_STREAM_FWD_HPP$/;"	d
ASIO_BUFFERED_WRITE_STREAM_HPP	asio/include/asio/buffered_write_stream.hpp	/^#define ASIO_BUFFERED_WRITE_STREAM_HPP$/;"	d
ASIO_BUFFERS_ITERATOR_HPP	asio/include/asio/buffers_iterator.hpp	/^#define ASIO_BUFFERS_ITERATOR_HPP$/;"	d
ASIO_BUFFER_HPP	asio/include/asio/buffer.hpp	/^#define ASIO_BUFFER_HPP$/;"	d
ASIO_CHECK	asio/src/tests/unit/unit_test.hpp	/^#define ASIO_CHECK(/;"	d
ASIO_CHECK_MESSAGE	asio/src/tests/unit/unit_test.hpp	/^#define ASIO_CHECK_MESSAGE(/;"	d
ASIO_CLR_WORKAROUND	asio/include/asio/detail/push_options.hpp	/^#    define ASIO_CLR_WORKAROUND$/;"	d
ASIO_COMPILE_TEST_CASE	asio/src/tests/unit/unit_test.hpp	/^#define ASIO_COMPILE_TEST_CASE(/;"	d
ASIO_COMPLETION_CONDITION_HPP	asio/include/asio/completion_condition.hpp	/^#define ASIO_COMPLETION_CONDITION_HPP$/;"	d
ASIO_COMPLETION_HANDLER_FOR	asio/include/asio/async_result.hpp	/^#define ASIO_COMPLETION_HANDLER_FOR(/;"	d
ASIO_COMPLETION_SIGNATURE	asio/include/asio/async_result.hpp	/^#define ASIO_COMPLETION_SIGNATURE /;"	d
ASIO_COMPLETION_TOKEN_FOR	asio/include/asio/async_result.hpp	/^#define ASIO_COMPLETION_TOKEN_FOR(/;"	d
ASIO_COMPOSE_HPP	asio/include/asio/compose.hpp	/^#define ASIO_COMPOSE_HPP$/;"	d
ASIO_CONCEPT	asio/include/asio/detail/config.hpp	/^#   define ASIO_CONCEPT /;"	d
ASIO_CONCURRENCY_HINT_1	asio/include/asio/detail/concurrency_hint.hpp	/^# define ASIO_CONCURRENCY_HINT_1 /;"	d
ASIO_CONCURRENCY_HINT_DEFAULT	asio/include/asio/detail/concurrency_hint.hpp	/^# define ASIO_CONCURRENCY_HINT_DEFAULT /;"	d
ASIO_CONCURRENCY_HINT_ID	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_CONCURRENCY_HINT_ID /;"	d
ASIO_CONCURRENCY_HINT_ID_MASK	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_CONCURRENCY_HINT_ID_MASK /;"	d
ASIO_CONCURRENCY_HINT_IS_LOCKING	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_CONCURRENCY_HINT_IS_LOCKING(/;"	d
ASIO_CONCURRENCY_HINT_IS_SPECIAL	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_CONCURRENCY_HINT_IS_SPECIAL(/;"	d
ASIO_CONCURRENCY_HINT_LOCKING_REACTOR_IO	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_CONCURRENCY_HINT_LOCKING_REACTOR_IO /;"	d
ASIO_CONCURRENCY_HINT_LOCKING_REACTOR_REGISTRATION	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_CONCURRENCY_HINT_LOCKING_REACTOR_REGISTRATION /;"	d
ASIO_CONCURRENCY_HINT_LOCKING_SCHEDULER	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_CONCURRENCY_HINT_LOCKING_SCHEDULER /;"	d
ASIO_CONCURRENCY_HINT_SAFE	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_CONCURRENCY_HINT_SAFE /;"	d
ASIO_CONCURRENCY_HINT_UNSAFE	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_CONCURRENCY_HINT_UNSAFE /;"	d
ASIO_CONCURRENCY_HINT_UNSAFE_IO	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_CONCURRENCY_HINT_UNSAFE_IO /;"	d
ASIO_CONNECT_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_CONNECT_HANDLER_CHECK(/;"	d
ASIO_CONNECT_HPP	asio/include/asio/connect.hpp	/^#define ASIO_CONNECT_HPP$/;"	d
ASIO_CONSTEXPR	asio/include/asio/detail/config.hpp	/^#  define ASIO_CONSTEXPR /;"	d
ASIO_CONSTEXPR	asio/include/asio/detail/config.hpp	/^#  define ASIO_CONSTEXPR$/;"	d
ASIO_CONST_BUFFER	asio/include/asio/buffer.hpp	/^# define ASIO_CONST_BUFFER /;"	d
ASIO_COROUTINE_HPP	asio/include/asio/coroutine.hpp	/^#define ASIO_COROUTINE_HPP$/;"	d
ASIO_CORO_FORK	asio/include/asio/coroutine.hpp	/^# define ASIO_CORO_FORK /;"	d
ASIO_CORO_FORK_IMPL	asio/include/asio/coroutine.hpp	/^#define ASIO_CORO_FORK_IMPL(/;"	d
ASIO_CORO_REENTER	asio/include/asio/coroutine.hpp	/^#define ASIO_CORO_REENTER(/;"	d
ASIO_CORO_YIELD	asio/include/asio/coroutine.hpp	/^# define ASIO_CORO_YIELD /;"	d
ASIO_CORO_YIELD_IMPL	asio/include/asio/coroutine.hpp	/^#define ASIO_CORO_YIELD_IMPL(/;"	d
ASIO_CO_SPAWN_HPP	asio/include/asio/co_spawn.hpp	/^#define ASIO_CO_SPAWN_HPP$/;"	d
ASIO_DEADLINE_TIMER_HPP	asio/include/asio/deadline_timer.hpp	/^#define ASIO_DEADLINE_TIMER_HPP$/;"	d
ASIO_DECL	asio/include/asio/detail/config.hpp	/^#    define ASIO_DECL /;"	d
ASIO_DECL	asio/include/asio/detail/config.hpp	/^# define ASIO_DECL /;"	d
ASIO_DECL	asio/include/asio/detail/config.hpp	/^# define ASIO_DECL$/;"	d
ASIO_DEFAULT_COMPLETION_TOKEN	asio/include/asio/async_result.hpp	/^#define ASIO_DEFAULT_COMPLETION_TOKEN(/;"	d
ASIO_DEFAULT_COMPLETION_TOKEN_TYPE	asio/include/asio/async_result.hpp	/^#define ASIO_DEFAULT_COMPLETION_TOKEN_TYPE(/;"	d
ASIO_DEFER_HPP	asio/include/asio/defer.hpp	/^#define ASIO_DEFER_HPP$/;"	d
ASIO_DELETED	asio/include/asio/detail/config.hpp	/^#    define ASIO_DELETED /;"	d
ASIO_DELETED	asio/include/asio/detail/config.hpp	/^#   define ASIO_DELETED /;"	d
ASIO_DELETED	asio/include/asio/detail/config.hpp	/^#  define ASIO_DELETED$/;"	d
ASIO_DETACHED_HPP	asio/include/asio/detached.hpp	/^#define ASIO_DETACHED_HPP$/;"	d
ASIO_DETAIL_ARRAY_FWD_HPP	asio/include/asio/detail/array_fwd.hpp	/^#define ASIO_DETAIL_ARRAY_FWD_HPP$/;"	d
ASIO_DETAIL_ARRAY_HPP	asio/include/asio/detail/array.hpp	/^#define ASIO_DETAIL_ARRAY_HPP$/;"	d
ASIO_DETAIL_ASSERT_HPP	asio/include/asio/detail/assert.hpp	/^#define ASIO_DETAIL_ASSERT_HPP$/;"	d
ASIO_DETAIL_ATOMIC_COUNT_HPP	asio/include/asio/detail/atomic_count.hpp	/^#define ASIO_DETAIL_ATOMIC_COUNT_HPP$/;"	d
ASIO_DETAIL_BASE_FROM_COMPLETION_COND_HPP	asio/include/asio/detail/base_from_completion_cond.hpp	/^#define ASIO_DETAIL_BASE_FROM_COMPLETION_COND_HPP$/;"	d
ASIO_DETAIL_BIND_HANDLER_HPP	asio/include/asio/detail/bind_handler.hpp	/^#define ASIO_DETAIL_BIND_HANDLER_HPP$/;"	d
ASIO_DETAIL_BUFFERED_STREAM_STORAGE_HPP	asio/include/asio/detail/buffered_stream_storage.hpp	/^#define ASIO_DETAIL_BUFFERED_STREAM_STORAGE_HPP$/;"	d
ASIO_DETAIL_BUFFER_RESIZE_GUARD_HPP	asio/include/asio/detail/buffer_resize_guard.hpp	/^#define ASIO_DETAIL_BUFFER_RESIZE_GUARD_HPP$/;"	d
ASIO_DETAIL_BUFFER_SEQUENCE_ADAPTER_HPP	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^#define ASIO_DETAIL_BUFFER_SEQUENCE_ADAPTER_HPP$/;"	d
ASIO_DETAIL_CALL_STACK_HPP	asio/include/asio/detail/call_stack.hpp	/^#define ASIO_DETAIL_CALL_STACK_HPP$/;"	d
ASIO_DETAIL_CHRONO_HPP	asio/include/asio/detail/chrono.hpp	/^#define ASIO_DETAIL_CHRONO_HPP$/;"	d
ASIO_DETAIL_CHRONO_TIME_TRAITS_HPP	asio/include/asio/detail/chrono_time_traits.hpp	/^#define ASIO_DETAIL_CHRONO_TIME_TRAITS_HPP$/;"	d
ASIO_DETAIL_COMPLETION_HANDLER_HPP	asio/include/asio/detail/completion_handler.hpp	/^#define ASIO_DETAIL_COMPLETION_HANDLER_HPP$/;"	d
ASIO_DETAIL_CONCURRENCY_HINT_HPP	asio/include/asio/detail/concurrency_hint.hpp	/^#define ASIO_DETAIL_CONCURRENCY_HINT_HPP$/;"	d
ASIO_DETAIL_CONDITIONALLY_ENABLED_EVENT_HPP	asio/include/asio/detail/conditionally_enabled_event.hpp	/^#define ASIO_DETAIL_CONDITIONALLY_ENABLED_EVENT_HPP$/;"	d
ASIO_DETAIL_CONDITIONALLY_ENABLED_MUTEX_HPP	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^#define ASIO_DETAIL_CONDITIONALLY_ENABLED_MUTEX_HPP$/;"	d
ASIO_DETAIL_CONFIG_HPP	asio/include/asio/detail/config.hpp	/^#define ASIO_DETAIL_CONFIG_HPP$/;"	d
ASIO_DETAIL_CONSUMING_BUFFERS_HPP	asio/include/asio/detail/consuming_buffers.hpp	/^#define ASIO_DETAIL_CONSUMING_BUFFERS_HPP$/;"	d
ASIO_DETAIL_CSTDDEF_HPP	asio/include/asio/detail/cstddef.hpp	/^#define ASIO_DETAIL_CSTDDEF_HPP$/;"	d
ASIO_DETAIL_CSTDINT_HPP	asio/include/asio/detail/cstdint.hpp	/^#define ASIO_DETAIL_CSTDINT_HPP$/;"	d
ASIO_DETAIL_DATE_TIME_FWD_HPP	asio/include/asio/detail/date_time_fwd.hpp	/^#define ASIO_DETAIL_DATE_TIME_FWD_HPP$/;"	d
ASIO_DETAIL_DEADLINE_TIMER_SERVICE_HPP	asio/include/asio/detail/deadline_timer_service.hpp	/^#define ASIO_DETAIL_DEADLINE_TIMER_SERVICE_HPP$/;"	d
ASIO_DETAIL_DEPENDENT_TYPE_HPP	asio/include/asio/detail/dependent_type.hpp	/^#define ASIO_DETAIL_DEPENDENT_TYPE_HPP$/;"	d
ASIO_DETAIL_DESCRIPTOR_OPS_HPP	asio/include/asio/detail/descriptor_ops.hpp	/^#define ASIO_DETAIL_DESCRIPTOR_OPS_HPP$/;"	d
ASIO_DETAIL_DESCRIPTOR_READ_OP_HPP	asio/include/asio/detail/descriptor_read_op.hpp	/^#define ASIO_DETAIL_DESCRIPTOR_READ_OP_HPP$/;"	d
ASIO_DETAIL_DESCRIPTOR_WRITE_OP_HPP	asio/include/asio/detail/descriptor_write_op.hpp	/^#define ASIO_DETAIL_DESCRIPTOR_WRITE_OP_HPP$/;"	d
ASIO_DETAIL_DEV_POLL_REACTOR_HPP	asio/include/asio/detail/dev_poll_reactor.hpp	/^#define ASIO_DETAIL_DEV_POLL_REACTOR_HPP$/;"	d
ASIO_DETAIL_EPOLL_REACTOR_HPP	asio/include/asio/detail/epoll_reactor.hpp	/^#define ASIO_DETAIL_EPOLL_REACTOR_HPP$/;"	d
ASIO_DETAIL_EVENTFD_SELECT_INTERRUPTER_HPP	asio/include/asio/detail/eventfd_select_interrupter.hpp	/^#define ASIO_DETAIL_EVENTFD_SELECT_INTERRUPTER_HPP$/;"	d
ASIO_DETAIL_EVENT_HPP	asio/include/asio/detail/event.hpp	/^#define ASIO_DETAIL_EVENT_HPP$/;"	d
ASIO_DETAIL_EXECUTOR_FUNCTION_HPP	asio/include/asio/detail/executor_function.hpp	/^#define ASIO_DETAIL_EXECUTOR_FUNCTION_HPP$/;"	d
ASIO_DETAIL_EXECUTOR_OP_HPP	asio/include/asio/detail/executor_op.hpp	/^#define ASIO_DETAIL_EXECUTOR_OP_HPP$/;"	d
ASIO_DETAIL_FD_SET_ADAPTER_HPP	asio/include/asio/detail/fd_set_adapter.hpp	/^#define ASIO_DETAIL_FD_SET_ADAPTER_HPP$/;"	d
ASIO_DETAIL_FENCED_BLOCK_HPP	asio/include/asio/detail/fenced_block.hpp	/^#define ASIO_DETAIL_FENCED_BLOCK_HPP$/;"	d
ASIO_DETAIL_FUNCTIONAL_HPP	asio/include/asio/detail/functional.hpp	/^#define ASIO_DETAIL_FUNCTIONAL_HPP$/;"	d
ASIO_DETAIL_FUTURE_HPP	asio/include/asio/detail/future.hpp	/^#define ASIO_DETAIL_FUTURE_HPP$/;"	d
ASIO_DETAIL_GCC_ARM_FENCED_BLOCK_HPP	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^#define ASIO_DETAIL_GCC_ARM_FENCED_BLOCK_HPP$/;"	d
ASIO_DETAIL_GCC_HPPA_FENCED_BLOCK_HPP	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^#define ASIO_DETAIL_GCC_HPPA_FENCED_BLOCK_HPP$/;"	d
ASIO_DETAIL_GCC_SYNC_FENCED_BLOCK_HPP	asio/include/asio/detail/gcc_sync_fenced_block.hpp	/^#define ASIO_DETAIL_GCC_SYNC_FENCED_BLOCK_HPP$/;"	d
ASIO_DETAIL_GCC_X86_FENCED_BLOCK_HPP	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^#define ASIO_DETAIL_GCC_X86_FENCED_BLOCK_HPP$/;"	d
ASIO_DETAIL_GLOBAL_HPP	asio/include/asio/detail/global.hpp	/^#define ASIO_DETAIL_GLOBAL_HPP$/;"	d
ASIO_DETAIL_HANDLER_ALLOC_HELPERS_HPP	asio/include/asio/detail/handler_alloc_helpers.hpp	/^#define ASIO_DETAIL_HANDLER_ALLOC_HELPERS_HPP$/;"	d
ASIO_DETAIL_HANDLER_CONT_HELPERS_HPP	asio/include/asio/detail/handler_cont_helpers.hpp	/^#define ASIO_DETAIL_HANDLER_CONT_HELPERS_HPP$/;"	d
ASIO_DETAIL_HANDLER_INVOKE_HELPERS_HPP	asio/include/asio/detail/handler_invoke_helpers.hpp	/^#define ASIO_DETAIL_HANDLER_INVOKE_HELPERS_HPP$/;"	d
ASIO_DETAIL_HANDLER_TRACKING_HPP	asio/include/asio/detail/handler_tracking.hpp	/^#define ASIO_DETAIL_HANDLER_TRACKING_HPP$/;"	d
ASIO_DETAIL_HANDLER_TYPE_REQUIREMENTS_HPP	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_DETAIL_HANDLER_TYPE_REQUIREMENTS_HPP$/;"	d
ASIO_DETAIL_HANDLER_WORK_HPP	asio/include/asio/detail/handler_work.hpp	/^#define ASIO_DETAIL_HANDLER_WORK_HPP$/;"	d
ASIO_DETAIL_HASH_MAP_HPP	asio/include/asio/detail/hash_map.hpp	/^#define ASIO_DETAIL_HASH_MAP_HPP$/;"	d
ASIO_DETAIL_IMPL_DEV_POLL_REACTOR_HPP	asio/include/asio/detail/impl/dev_poll_reactor.hpp	/^#define ASIO_DETAIL_IMPL_DEV_POLL_REACTOR_HPP$/;"	d
ASIO_DETAIL_IMPL_EPOLL_REACTOR_HPP	asio/include/asio/detail/impl/epoll_reactor.hpp	/^#define ASIO_DETAIL_IMPL_EPOLL_REACTOR_HPP$/;"	d
ASIO_DETAIL_IMPL_KQUEUE_REACTOR_HPP	asio/include/asio/detail/impl/kqueue_reactor.hpp	/^#define ASIO_DETAIL_IMPL_KQUEUE_REACTOR_HPP$/;"	d
ASIO_DETAIL_IMPL_SELECT_REACTOR_HPP	asio/include/asio/detail/impl/select_reactor.hpp	/^#define ASIO_DETAIL_IMPL_SELECT_REACTOR_HPP$/;"	d
ASIO_DETAIL_IMPL_SERVICE_REGISTRY_HPP	asio/include/asio/detail/impl/service_registry.hpp	/^#define ASIO_DETAIL_IMPL_SERVICE_REGISTRY_HPP$/;"	d
ASIO_DETAIL_IMPL_STRAND_EXECUTOR_SERVICE_HPP	asio/include/asio/detail/impl/strand_executor_service.hpp	/^#define ASIO_DETAIL_IMPL_STRAND_EXECUTOR_SERVICE_HPP$/;"	d
ASIO_DETAIL_IMPL_STRAND_SERVICE_HPP	asio/include/asio/detail/impl/strand_service.hpp	/^#define ASIO_DETAIL_IMPL_STRAND_SERVICE_HPP$/;"	d
ASIO_DETAIL_IMPL_WINRT_TIMER_SCHEDULER_HPP	asio/include/asio/detail/impl/winrt_timer_scheduler.hpp	/^#define ASIO_DETAIL_IMPL_WINRT_TIMER_SCHEDULER_HPP$/;"	d
ASIO_DETAIL_IMPL_WIN_IOCP_IO_CONTEXT_HPP	asio/include/asio/detail/impl/win_iocp_io_context.hpp	/^#define ASIO_DETAIL_IMPL_WIN_IOCP_IO_CONTEXT_HPP$/;"	d
ASIO_DETAIL_IO_CONTROL_HPP	asio/include/asio/detail/io_control.hpp	/^#define ASIO_DETAIL_IO_CONTROL_HPP$/;"	d
ASIO_DETAIL_IO_OBJECT_EXECUTOR_HPP	asio/include/asio/detail/io_object_executor.hpp	/^#define ASIO_DETAIL_IO_OBJECT_EXECUTOR_HPP$/;"	d
ASIO_DETAIL_IO_OBJECT_IMPL_HPP	asio/include/asio/detail/io_object_impl.hpp	/^#define ASIO_DETAIL_IO_OBJECT_IMPL_HPP$/;"	d
ASIO_DETAIL_IS_BUFFER_SEQUENCE_HPP	asio/include/asio/detail/is_buffer_sequence.hpp	/^#define ASIO_DETAIL_IS_BUFFER_SEQUENCE_HPP$/;"	d
ASIO_DETAIL_IS_EXECUTOR_HPP	asio/include/asio/detail/is_executor.hpp	/^#define ASIO_DETAIL_IS_EXECUTOR_HPP$/;"	d
ASIO_DETAIL_KEYWORD_TSS_PTR_HPP	asio/include/asio/detail/keyword_tss_ptr.hpp	/^#define ASIO_DETAIL_KEYWORD_TSS_PTR_HPP$/;"	d
ASIO_DETAIL_KQUEUE_REACTOR_HPP	asio/include/asio/detail/kqueue_reactor.hpp	/^#define ASIO_DETAIL_KQUEUE_REACTOR_HPP$/;"	d
ASIO_DETAIL_LIMITS_HPP	asio/include/asio/detail/limits.hpp	/^#define ASIO_DETAIL_LIMITS_HPP$/;"	d
ASIO_DETAIL_LOCAL_FREE_ON_BLOCK_EXIT_HPP	asio/include/asio/detail/local_free_on_block_exit.hpp	/^#define ASIO_DETAIL_LOCAL_FREE_ON_BLOCK_EXIT_HPP$/;"	d
ASIO_DETAIL_MACOS_FENCED_BLOCK_HPP	asio/include/asio/detail/macos_fenced_block.hpp	/^#define ASIO_DETAIL_MACOS_FENCED_BLOCK_HPP$/;"	d
ASIO_DETAIL_MEMORY_HPP	asio/include/asio/detail/memory.hpp	/^#define ASIO_DETAIL_MEMORY_HPP$/;"	d
ASIO_DETAIL_MUTEX_HPP	asio/include/asio/detail/mutex.hpp	/^#define ASIO_DETAIL_MUTEX_HPP$/;"	d
ASIO_DETAIL_NONCOPYABLE_HPP	asio/include/asio/detail/noncopyable.hpp	/^#define ASIO_DETAIL_NONCOPYABLE_HPP$/;"	d
ASIO_DETAIL_NON_CONST_LVALUE_HPP	asio/include/asio/detail/non_const_lvalue.hpp	/^#define ASIO_DETAIL_NON_CONST_LVALUE_HPP$/;"	d
ASIO_DETAIL_NULL_EVENT_HPP	asio/include/asio/detail/null_event.hpp	/^#define ASIO_DETAIL_NULL_EVENT_HPP$/;"	d
ASIO_DETAIL_NULL_FENCED_BLOCK_HPP	asio/include/asio/detail/null_fenced_block.hpp	/^#define ASIO_DETAIL_NULL_FENCED_BLOCK_HPP$/;"	d
ASIO_DETAIL_NULL_GLOBAL_HPP	asio/include/asio/detail/null_global.hpp	/^#define ASIO_DETAIL_NULL_GLOBAL_HPP$/;"	d
ASIO_DETAIL_NULL_MUTEX_HPP	asio/include/asio/detail/null_mutex.hpp	/^#define ASIO_DETAIL_NULL_MUTEX_HPP$/;"	d
ASIO_DETAIL_NULL_REACTOR_HPP	asio/include/asio/detail/null_reactor.hpp	/^#define ASIO_DETAIL_NULL_REACTOR_HPP$/;"	d
ASIO_DETAIL_NULL_SIGNAL_BLOCKER_HPP	asio/include/asio/detail/null_signal_blocker.hpp	/^#define ASIO_DETAIL_NULL_SIGNAL_BLOCKER_HPP$/;"	d
ASIO_DETAIL_NULL_SOCKET_SERVICE_HPP	asio/include/asio/detail/null_socket_service.hpp	/^#define ASIO_DETAIL_NULL_SOCKET_SERVICE_HPP$/;"	d
ASIO_DETAIL_NULL_STATIC_MUTEX_HPP	asio/include/asio/detail/null_static_mutex.hpp	/^#define ASIO_DETAIL_NULL_STATIC_MUTEX_HPP$/;"	d
ASIO_DETAIL_NULL_THREAD_HPP	asio/include/asio/detail/null_thread.hpp	/^#define ASIO_DETAIL_NULL_THREAD_HPP$/;"	d
ASIO_DETAIL_NULL_TSS_PTR_HPP	asio/include/asio/detail/null_tss_ptr.hpp	/^#define ASIO_DETAIL_NULL_TSS_PTR_HPP$/;"	d
ASIO_DETAIL_OBJECT_POOL_HPP	asio/include/asio/detail/object_pool.hpp	/^#define ASIO_DETAIL_OBJECT_POOL_HPP$/;"	d
ASIO_DETAIL_OLD_WIN_SDK_COMPAT_HPP	asio/include/asio/detail/old_win_sdk_compat.hpp	/^#define ASIO_DETAIL_OLD_WIN_SDK_COMPAT_HPP$/;"	d
ASIO_DETAIL_OPERATION_HPP	asio/include/asio/detail/operation.hpp	/^#define ASIO_DETAIL_OPERATION_HPP$/;"	d
ASIO_DETAIL_OP_QUEUE_HPP	asio/include/asio/detail/op_queue.hpp	/^#define ASIO_DETAIL_OP_QUEUE_HPP$/;"	d
ASIO_DETAIL_PIPE_SELECT_INTERRUPTER_HPP	asio/include/asio/detail/pipe_select_interrupter.hpp	/^#define ASIO_DETAIL_PIPE_SELECT_INTERRUPTER_HPP$/;"	d
ASIO_DETAIL_POSIX_EVENT_HPP	asio/include/asio/detail/posix_event.hpp	/^#define ASIO_DETAIL_POSIX_EVENT_HPP$/;"	d
ASIO_DETAIL_POSIX_FD_SET_ADAPTER_HPP	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^#define ASIO_DETAIL_POSIX_FD_SET_ADAPTER_HPP$/;"	d
ASIO_DETAIL_POSIX_GLOBAL_HPP	asio/include/asio/detail/posix_global.hpp	/^#define ASIO_DETAIL_POSIX_GLOBAL_HPP$/;"	d
ASIO_DETAIL_POSIX_MUTEX_HPP	asio/include/asio/detail/posix_mutex.hpp	/^#define ASIO_DETAIL_POSIX_MUTEX_HPP$/;"	d
ASIO_DETAIL_POSIX_SIGNAL_BLOCKER_HPP	asio/include/asio/detail/posix_signal_blocker.hpp	/^#define ASIO_DETAIL_POSIX_SIGNAL_BLOCKER_HPP$/;"	d
ASIO_DETAIL_POSIX_STATIC_MUTEX_HPP	asio/include/asio/detail/posix_static_mutex.hpp	/^#define ASIO_DETAIL_POSIX_STATIC_MUTEX_HPP$/;"	d
ASIO_DETAIL_POSIX_THREAD_HPP	asio/include/asio/detail/posix_thread.hpp	/^#define ASIO_DETAIL_POSIX_THREAD_HPP$/;"	d
ASIO_DETAIL_POSIX_TSS_PTR_HPP	asio/include/asio/detail/posix_tss_ptr.hpp	/^#define ASIO_DETAIL_POSIX_TSS_PTR_HPP$/;"	d
ASIO_DETAIL_REACTIVE_DESCRIPTOR_SERVICE_HPP	asio/include/asio/detail/reactive_descriptor_service.hpp	/^#define ASIO_DETAIL_REACTIVE_DESCRIPTOR_SERVICE_HPP$/;"	d
ASIO_DETAIL_REACTIVE_NULL_BUFFERS_OP_HPP	asio/include/asio/detail/reactive_null_buffers_op.hpp	/^#define ASIO_DETAIL_REACTIVE_NULL_BUFFERS_OP_HPP$/;"	d
ASIO_DETAIL_REACTIVE_SERIAL_PORT_SERVICE_HPP	asio/include/asio/detail/reactive_serial_port_service.hpp	/^#define ASIO_DETAIL_REACTIVE_SERIAL_PORT_SERVICE_HPP$/;"	d
ASIO_DETAIL_REACTIVE_SOCKET_ACCEPT_OP_HPP	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^#define ASIO_DETAIL_REACTIVE_SOCKET_ACCEPT_OP_HPP$/;"	d
ASIO_DETAIL_REACTIVE_SOCKET_CONNECT_OP_HPP	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^#define ASIO_DETAIL_REACTIVE_SOCKET_CONNECT_OP_HPP$/;"	d
ASIO_DETAIL_REACTIVE_SOCKET_RECVFROM_OP_HPP	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^#define ASIO_DETAIL_REACTIVE_SOCKET_RECVFROM_OP_HPP$/;"	d
ASIO_DETAIL_REACTIVE_SOCKET_RECVMSG_OP_HPP	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^#define ASIO_DETAIL_REACTIVE_SOCKET_RECVMSG_OP_HPP$/;"	d
ASIO_DETAIL_REACTIVE_SOCKET_RECV_OP_HPP	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^#define ASIO_DETAIL_REACTIVE_SOCKET_RECV_OP_HPP$/;"	d
ASIO_DETAIL_REACTIVE_SOCKET_SENDTO_OP_HPP	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^#define ASIO_DETAIL_REACTIVE_SOCKET_SENDTO_OP_HPP$/;"	d
ASIO_DETAIL_REACTIVE_SOCKET_SEND_OP_HPP	asio/include/asio/detail/reactive_socket_send_op.hpp	/^#define ASIO_DETAIL_REACTIVE_SOCKET_SEND_OP_HPP$/;"	d
ASIO_DETAIL_REACTIVE_SOCKET_SERVICE_BASE_HPP	asio/include/asio/detail/reactive_socket_service_base.hpp	/^#define ASIO_DETAIL_REACTIVE_SOCKET_SERVICE_BASE_HPP$/;"	d
ASIO_DETAIL_REACTIVE_SOCKET_SERVICE_HPP	asio/include/asio/detail/reactive_socket_service.hpp	/^#define ASIO_DETAIL_REACTIVE_SOCKET_SERVICE_HPP$/;"	d
ASIO_DETAIL_REACTIVE_WAIT_OP_HPP	asio/include/asio/detail/reactive_wait_op.hpp	/^#define ASIO_DETAIL_REACTIVE_WAIT_OP_HPP$/;"	d
ASIO_DETAIL_REACTOR_FWD_HPP	asio/include/asio/detail/reactor_fwd.hpp	/^#define ASIO_DETAIL_REACTOR_FWD_HPP$/;"	d
ASIO_DETAIL_REACTOR_HPP	asio/include/asio/detail/reactor.hpp	/^#define ASIO_DETAIL_REACTOR_HPP$/;"	d
ASIO_DETAIL_REACTOR_OP_HPP	asio/include/asio/detail/reactor_op.hpp	/^#define ASIO_DETAIL_REACTOR_OP_HPP$/;"	d
ASIO_DETAIL_REACTOR_OP_QUEUE_HPP	asio/include/asio/detail/reactor_op_queue.hpp	/^#define ASIO_DETAIL_REACTOR_OP_QUEUE_HPP$/;"	d
ASIO_DETAIL_RECYCLING_ALLOCATOR_HPP	asio/include/asio/detail/recycling_allocator.hpp	/^#define ASIO_DETAIL_RECYCLING_ALLOCATOR_HPP$/;"	d
ASIO_DETAIL_REGEX_FWD_HPP	asio/include/asio/detail/regex_fwd.hpp	/^#define ASIO_DETAIL_REGEX_FWD_HPP$/;"	d
ASIO_DETAIL_RESOLVER_ENDPOINT_OP_HPP	asio/include/asio/detail/resolve_endpoint_op.hpp	/^#define ASIO_DETAIL_RESOLVER_ENDPOINT_OP_HPP$/;"	d
ASIO_DETAIL_RESOLVER_SERVICE_BASE_HPP	asio/include/asio/detail/resolver_service_base.hpp	/^#define ASIO_DETAIL_RESOLVER_SERVICE_BASE_HPP$/;"	d
ASIO_DETAIL_RESOLVER_SERVICE_HPP	asio/include/asio/detail/resolver_service.hpp	/^#define ASIO_DETAIL_RESOLVER_SERVICE_HPP$/;"	d
ASIO_DETAIL_RESOLVE_OP_HPP	asio/include/asio/detail/resolve_op.hpp	/^#define ASIO_DETAIL_RESOLVE_OP_HPP$/;"	d
ASIO_DETAIL_RESOLVE_QUERY_OP_HPP	asio/include/asio/detail/resolve_query_op.hpp	/^#define ASIO_DETAIL_RESOLVE_QUERY_OP_HPP$/;"	d
ASIO_DETAIL_SCHEDULER_HPP	asio/include/asio/detail/scheduler.hpp	/^#define ASIO_DETAIL_SCHEDULER_HPP$/;"	d
ASIO_DETAIL_SCHEDULER_OPERATION_HPP	asio/include/asio/detail/scheduler_operation.hpp	/^#define ASIO_DETAIL_SCHEDULER_OPERATION_HPP$/;"	d
ASIO_DETAIL_SCHEDULER_THREAD_INFO_HPP	asio/include/asio/detail/scheduler_thread_info.hpp	/^#define ASIO_DETAIL_SCHEDULER_THREAD_INFO_HPP$/;"	d
ASIO_DETAIL_SCOPED_LOCK_HPP	asio/include/asio/detail/scoped_lock.hpp	/^#define ASIO_DETAIL_SCOPED_LOCK_HPP$/;"	d
ASIO_DETAIL_SCOPED_PTR_HPP	asio/include/asio/detail/scoped_ptr.hpp	/^#define ASIO_DETAIL_SCOPED_PTR_HPP$/;"	d
ASIO_DETAIL_SELECT_INTERRUPTER_HPP	asio/include/asio/detail/select_interrupter.hpp	/^#define ASIO_DETAIL_SELECT_INTERRUPTER_HPP$/;"	d
ASIO_DETAIL_SELECT_REACTOR_HPP	asio/include/asio/detail/select_reactor.hpp	/^#define ASIO_DETAIL_SELECT_REACTOR_HPP$/;"	d
ASIO_DETAIL_SERVICE_REGISTRY_HPP	asio/include/asio/detail/service_registry.hpp	/^#define ASIO_DETAIL_SERVICE_REGISTRY_HPP$/;"	d
ASIO_DETAIL_SIGNAL_BLOCKER_HPP	asio/include/asio/detail/signal_blocker.hpp	/^#define ASIO_DETAIL_SIGNAL_BLOCKER_HPP$/;"	d
ASIO_DETAIL_SIGNAL_HANDLER_HPP	asio/include/asio/detail/signal_handler.hpp	/^#define ASIO_DETAIL_SIGNAL_HANDLER_HPP$/;"	d
ASIO_DETAIL_SIGNAL_INIT_HPP	asio/include/asio/detail/signal_init.hpp	/^#define ASIO_DETAIL_SIGNAL_INIT_HPP$/;"	d
ASIO_DETAIL_SIGNAL_OP_HPP	asio/include/asio/detail/signal_op.hpp	/^#define ASIO_DETAIL_SIGNAL_OP_HPP$/;"	d
ASIO_DETAIL_SIGNAL_SET_SERVICE_HPP	asio/include/asio/detail/signal_set_service.hpp	/^#define ASIO_DETAIL_SIGNAL_SET_SERVICE_HPP$/;"	d
ASIO_DETAIL_SOCKET_HOLDER_HPP	asio/include/asio/detail/socket_holder.hpp	/^#define ASIO_DETAIL_SOCKET_HOLDER_HPP$/;"	d
ASIO_DETAIL_SOCKET_OPS_HPP	asio/include/asio/detail/socket_ops.hpp	/^#define ASIO_DETAIL_SOCKET_OPS_HPP$/;"	d
ASIO_DETAIL_SOCKET_OPTION_HPP	asio/include/asio/detail/socket_option.hpp	/^#define ASIO_DETAIL_SOCKET_OPTION_HPP$/;"	d
ASIO_DETAIL_SOCKET_SELECT_INTERRUPTER_HPP	asio/include/asio/detail/socket_select_interrupter.hpp	/^#define ASIO_DETAIL_SOCKET_SELECT_INTERRUPTER_HPP$/;"	d
ASIO_DETAIL_SOCKET_TYPES_HPP	asio/include/asio/detail/socket_types.hpp	/^#define ASIO_DETAIL_SOCKET_TYPES_HPP$/;"	d
ASIO_DETAIL_SOLARIS_FENCED_BLOCK_HPP	asio/include/asio/detail/solaris_fenced_block.hpp	/^#define ASIO_DETAIL_SOLARIS_FENCED_BLOCK_HPP$/;"	d
ASIO_DETAIL_STATIC_MUTEX_HPP	asio/include/asio/detail/static_mutex.hpp	/^#define ASIO_DETAIL_STATIC_MUTEX_HPP$/;"	d
ASIO_DETAIL_STD_EVENT_HPP	asio/include/asio/detail/std_event.hpp	/^#define ASIO_DETAIL_STD_EVENT_HPP$/;"	d
ASIO_DETAIL_STD_FENCED_BLOCK_HPP	asio/include/asio/detail/std_fenced_block.hpp	/^#define ASIO_DETAIL_STD_FENCED_BLOCK_HPP$/;"	d
ASIO_DETAIL_STD_GLOBAL_HPP	asio/include/asio/detail/std_global.hpp	/^#define ASIO_DETAIL_STD_GLOBAL_HPP$/;"	d
ASIO_DETAIL_STD_MUTEX_HPP	asio/include/asio/detail/std_mutex.hpp	/^#define ASIO_DETAIL_STD_MUTEX_HPP$/;"	d
ASIO_DETAIL_STD_STATIC_MUTEX_HPP	asio/include/asio/detail/std_static_mutex.hpp	/^#define ASIO_DETAIL_STD_STATIC_MUTEX_HPP$/;"	d
ASIO_DETAIL_STD_THREAD_HPP	asio/include/asio/detail/std_thread.hpp	/^#define ASIO_DETAIL_STD_THREAD_HPP$/;"	d
ASIO_DETAIL_STRAND_EXECUTOR_SERVICE_HPP	asio/include/asio/detail/strand_executor_service.hpp	/^#define ASIO_DETAIL_STRAND_EXECUTOR_SERVICE_HPP$/;"	d
ASIO_DETAIL_STRAND_SERVICE_HPP	asio/include/asio/detail/strand_service.hpp	/^#define ASIO_DETAIL_STRAND_SERVICE_HPP$/;"	d
ASIO_DETAIL_STRING_VIEW_HPP	asio/include/asio/detail/string_view.hpp	/^#define ASIO_DETAIL_STRING_VIEW_HPP$/;"	d
ASIO_DETAIL_THREAD_CONTEXT_HPP	asio/include/asio/detail/thread_context.hpp	/^#define ASIO_DETAIL_THREAD_CONTEXT_HPP$/;"	d
ASIO_DETAIL_THREAD_GROUP_HPP	asio/include/asio/detail/thread_group.hpp	/^#define ASIO_DETAIL_THREAD_GROUP_HPP$/;"	d
ASIO_DETAIL_THREAD_HPP	asio/include/asio/detail/thread.hpp	/^#define ASIO_DETAIL_THREAD_HPP$/;"	d
ASIO_DETAIL_THREAD_INFO_BASE_HPP	asio/include/asio/detail/thread_info_base.hpp	/^#define ASIO_DETAIL_THREAD_INFO_BASE_HPP$/;"	d
ASIO_DETAIL_THROW_ERROR_HPP	asio/include/asio/detail/throw_error.hpp	/^#define ASIO_DETAIL_THROW_ERROR_HPP$/;"	d
ASIO_DETAIL_THROW_EXCEPTION_HPP	asio/include/asio/detail/throw_exception.hpp	/^#define ASIO_DETAIL_THROW_EXCEPTION_HPP$/;"	d
ASIO_DETAIL_TIMER_QUEUE_BASE_HPP	asio/include/asio/detail/timer_queue_base.hpp	/^#define ASIO_DETAIL_TIMER_QUEUE_BASE_HPP$/;"	d
ASIO_DETAIL_TIMER_QUEUE_HPP	asio/include/asio/detail/timer_queue.hpp	/^#define ASIO_DETAIL_TIMER_QUEUE_HPP$/;"	d
ASIO_DETAIL_TIMER_QUEUE_PTIME_HPP	asio/include/asio/detail/timer_queue_ptime.hpp	/^#define ASIO_DETAIL_TIMER_QUEUE_PTIME_HPP$/;"	d
ASIO_DETAIL_TIMER_QUEUE_SET_HPP	asio/include/asio/detail/timer_queue_set.hpp	/^#define ASIO_DETAIL_TIMER_QUEUE_SET_HPP$/;"	d
ASIO_DETAIL_TIMER_SCHEDULER_FWD_HPP	asio/include/asio/detail/timer_scheduler_fwd.hpp	/^#define ASIO_DETAIL_TIMER_SCHEDULER_FWD_HPP$/;"	d
ASIO_DETAIL_TIMER_SCHEDULER_HPP	asio/include/asio/detail/timer_scheduler.hpp	/^#define ASIO_DETAIL_TIMER_SCHEDULER_HPP$/;"	d
ASIO_DETAIL_TSS_PTR_HPP	asio/include/asio/detail/tss_ptr.hpp	/^#define ASIO_DETAIL_TSS_PTR_HPP$/;"	d
ASIO_DETAIL_TYPE_TRAITS_HPP	asio/include/asio/detail/type_traits.hpp	/^#define ASIO_DETAIL_TYPE_TRAITS_HPP$/;"	d
ASIO_DETAIL_VARIADIC_TEMPLATES_HPP	asio/include/asio/detail/variadic_templates.hpp	/^#define ASIO_DETAIL_VARIADIC_TEMPLATES_HPP$/;"	d
ASIO_DETAIL_WAIT_HANDLER_HPP	asio/include/asio/detail/wait_handler.hpp	/^#define ASIO_DETAIL_WAIT_HANDLER_HPP$/;"	d
ASIO_DETAIL_WAIT_OP_HPP	asio/include/asio/detail/wait_op.hpp	/^#define ASIO_DETAIL_WAIT_OP_HPP$/;"	d
ASIO_DETAIL_WINAPP_THREAD_HPP	asio/include/asio/detail/winapp_thread.hpp	/^#define ASIO_DETAIL_WINAPP_THREAD_HPP$/;"	d
ASIO_DETAIL_WINCE_THREAD_HPP	asio/include/asio/detail/wince_thread.hpp	/^#define ASIO_DETAIL_WINCE_THREAD_HPP$/;"	d
ASIO_DETAIL_WINRT_ASYNC_MANAGER_HPP	asio/include/asio/detail/winrt_async_manager.hpp	/^#define ASIO_DETAIL_WINRT_ASYNC_MANAGER_HPP$/;"	d
ASIO_DETAIL_WINRT_ASYNC_OP_HPP	asio/include/asio/detail/winrt_async_op.hpp	/^#define ASIO_DETAIL_WINRT_ASYNC_OP_HPP$/;"	d
ASIO_DETAIL_WINRT_RESOLVER_SERVICE_HPP	asio/include/asio/detail/winrt_resolver_service.hpp	/^#define ASIO_DETAIL_WINRT_RESOLVER_SERVICE_HPP$/;"	d
ASIO_DETAIL_WINRT_RESOLVE_OP_HPP	asio/include/asio/detail/winrt_resolve_op.hpp	/^#define ASIO_DETAIL_WINRT_RESOLVE_OP_HPP$/;"	d
ASIO_DETAIL_WINRT_SOCKET_CONNECT_OP_HPP	asio/include/asio/detail/winrt_socket_connect_op.hpp	/^#define ASIO_DETAIL_WINRT_SOCKET_CONNECT_OP_HPP$/;"	d
ASIO_DETAIL_WINRT_SOCKET_RECV_OP_HPP	asio/include/asio/detail/winrt_socket_recv_op.hpp	/^#define ASIO_DETAIL_WINRT_SOCKET_RECV_OP_HPP$/;"	d
ASIO_DETAIL_WINRT_SOCKET_SEND_OP_HPP	asio/include/asio/detail/winrt_socket_send_op.hpp	/^#define ASIO_DETAIL_WINRT_SOCKET_SEND_OP_HPP$/;"	d
ASIO_DETAIL_WINRT_SSOCKET_SERVICE_BASE_HPP	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^#define ASIO_DETAIL_WINRT_SSOCKET_SERVICE_BASE_HPP$/;"	d
ASIO_DETAIL_WINRT_SSOCKET_SERVICE_HPP	asio/include/asio/detail/winrt_ssocket_service.hpp	/^#define ASIO_DETAIL_WINRT_SSOCKET_SERVICE_HPP$/;"	d
ASIO_DETAIL_WINRT_TIMER_SCHEDULER_HPP	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^#define ASIO_DETAIL_WINRT_TIMER_SCHEDULER_HPP$/;"	d
ASIO_DETAIL_WINRT_UTILS_HPP	asio/include/asio/detail/winrt_utils.hpp	/^#define ASIO_DETAIL_WINRT_UTILS_HPP$/;"	d
ASIO_DETAIL_WINSOCK_INIT_HPP	asio/include/asio/detail/winsock_init.hpp	/^#define ASIO_DETAIL_WINSOCK_INIT_HPP$/;"	d
ASIO_DETAIL_WIN_EVENT_HPP	asio/include/asio/detail/win_event.hpp	/^#define ASIO_DETAIL_WIN_EVENT_HPP$/;"	d
ASIO_DETAIL_WIN_FD_SET_ADAPTER_HPP	asio/include/asio/detail/win_fd_set_adapter.hpp	/^#define ASIO_DETAIL_WIN_FD_SET_ADAPTER_HPP$/;"	d
ASIO_DETAIL_WIN_FENCED_BLOCK_HPP	asio/include/asio/detail/win_fenced_block.hpp	/^#define ASIO_DETAIL_WIN_FENCED_BLOCK_HPP$/;"	d
ASIO_DETAIL_WIN_GLOBAL_HPP	asio/include/asio/detail/win_global.hpp	/^#define ASIO_DETAIL_WIN_GLOBAL_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_HANDLE_READ_OP_HPP	asio/include/asio/detail/win_iocp_handle_read_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_HANDLE_READ_OP_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_HANDLE_SERVICE_HPP	asio/include/asio/detail/win_iocp_handle_service.hpp	/^#define ASIO_DETAIL_WIN_IOCP_HANDLE_SERVICE_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_HANDLE_WRITE_OP_HPP	asio/include/asio/detail/win_iocp_handle_write_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_HANDLE_WRITE_OP_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_IO_CONTEXT_HPP	asio/include/asio/detail/win_iocp_io_context.hpp	/^#define ASIO_DETAIL_WIN_IOCP_IO_CONTEXT_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_NULL_BUFFERS_OP_HPP	asio/include/asio/detail/win_iocp_null_buffers_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_NULL_BUFFERS_OP_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_OPERATION_HPP	asio/include/asio/detail/win_iocp_operation.hpp	/^#define ASIO_DETAIL_WIN_IOCP_OPERATION_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_OVERLAPPED_OP_HPP	asio/include/asio/detail/win_iocp_overlapped_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_OVERLAPPED_OP_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_OVERLAPPED_PTR_HPP	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^#define ASIO_DETAIL_WIN_IOCP_OVERLAPPED_PTR_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_SERIAL_PORT_SERVICE_HPP	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^#define ASIO_DETAIL_WIN_IOCP_SERIAL_PORT_SERVICE_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_SOCKET_ACCEPT_OP_HPP	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_SOCKET_ACCEPT_OP_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_SOCKET_CONNECT_OP_HPP	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_SOCKET_CONNECT_OP_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_SOCKET_RECVFROM_OP_HPP	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_SOCKET_RECVFROM_OP_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_SOCKET_RECVMSG_OP_HPP	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_SOCKET_RECVMSG_OP_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_SOCKET_RECV_OP_HPP	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_SOCKET_RECV_OP_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_SOCKET_SEND_OP_HPP	asio/include/asio/detail/win_iocp_socket_send_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_SOCKET_SEND_OP_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_SOCKET_SERVICE_BASE_HPP	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^#define ASIO_DETAIL_WIN_IOCP_SOCKET_SERVICE_BASE_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_SOCKET_SERVICE_HPP	asio/include/asio/detail/win_iocp_socket_service.hpp	/^#define ASIO_DETAIL_WIN_IOCP_SOCKET_SERVICE_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_THREAD_INFO_HPP	asio/include/asio/detail/win_iocp_thread_info.hpp	/^#define ASIO_DETAIL_WIN_IOCP_THREAD_INFO_HPP$/;"	d
ASIO_DETAIL_WIN_IOCP_WAIT_OP_HPP	asio/include/asio/detail/win_iocp_wait_op.hpp	/^#define ASIO_DETAIL_WIN_IOCP_WAIT_OP_HPP$/;"	d
ASIO_DETAIL_WIN_MUTEX_HPP	asio/include/asio/detail/win_mutex.hpp	/^#define ASIO_DETAIL_WIN_MUTEX_HPP$/;"	d
ASIO_DETAIL_WIN_OBJECT_HANDLE_SERVICE_HPP	asio/include/asio/detail/win_object_handle_service.hpp	/^#define ASIO_DETAIL_WIN_OBJECT_HANDLE_SERVICE_HPP$/;"	d
ASIO_DETAIL_WIN_STATIC_MUTEX_HPP	asio/include/asio/detail/win_static_mutex.hpp	/^#define ASIO_DETAIL_WIN_STATIC_MUTEX_HPP$/;"	d
ASIO_DETAIL_WIN_THREAD_HPP	asio/include/asio/detail/win_thread.hpp	/^#define ASIO_DETAIL_WIN_THREAD_HPP$/;"	d
ASIO_DETAIL_WIN_TSS_PTR_HPP	asio/include/asio/detail/win_tss_ptr.hpp	/^#define ASIO_DETAIL_WIN_TSS_PTR_HPP$/;"	d
ASIO_DETAIL_WORK_DISPATCHER_HPP	asio/include/asio/detail/work_dispatcher.hpp	/^#define ASIO_DETAIL_WORK_DISPATCHER_HPP$/;"	d
ASIO_DETAIL_WRAPPED_HANDLER_HPP	asio/include/asio/detail/wrapped_handler.hpp	/^#define ASIO_DETAIL_WRAPPED_HANDLER_HPP$/;"	d
ASIO_DISABLE_BOOST_ARRAY	asio/include/asio/detail/config.hpp	/^# define ASIO_DISABLE_BOOST_ARRAY /;"	d
ASIO_DISABLE_BOOST_ASSERT	asio/include/asio/detail/config.hpp	/^# define ASIO_DISABLE_BOOST_ASSERT /;"	d
ASIO_DISABLE_BOOST_BIND	asio/include/asio/detail/config.hpp	/^# define ASIO_DISABLE_BOOST_BIND /;"	d
ASIO_DISABLE_BOOST_CHRONO	asio/include/asio/detail/config.hpp	/^# define ASIO_DISABLE_BOOST_CHRONO /;"	d
ASIO_DISABLE_BOOST_DATE_TIME	asio/include/asio/detail/config.hpp	/^# define ASIO_DISABLE_BOOST_DATE_TIME /;"	d
ASIO_DISABLE_BOOST_LIMITS	asio/include/asio/detail/config.hpp	/^# define ASIO_DISABLE_BOOST_LIMITS /;"	d
ASIO_DISABLE_BOOST_REGEX	asio/include/asio/detail/config.hpp	/^# define ASIO_DISABLE_BOOST_REGEX /;"	d
ASIO_DISABLE_BOOST_STATIC_CONSTANT	asio/include/asio/detail/config.hpp	/^# define ASIO_DISABLE_BOOST_STATIC_CONSTANT /;"	d
ASIO_DISABLE_BOOST_THROW_EXCEPTION	asio/include/asio/detail/config.hpp	/^# define ASIO_DISABLE_BOOST_THROW_EXCEPTION /;"	d
ASIO_DISABLE_BOOST_WORKAROUND	asio/include/asio/detail/config.hpp	/^# define ASIO_DISABLE_BOOST_WORKAROUND /;"	d
ASIO_DISPATCH_HPP	asio/include/asio/dispatch.hpp	/^#define ASIO_DISPATCH_HPP$/;"	d
ASIO_ENABLE_ARRAY_BUFFER_WORKAROUND	asio/include/asio/buffer.hpp	/^#  define ASIO_ENABLE_ARRAY_BUFFER_WORKAROUND$/;"	d
ASIO_ENABLE_BUFFER_DEBUGGING	asio/include/asio/buffer.hpp	/^#   define ASIO_ENABLE_BUFFER_DEBUGGING$/;"	d
ASIO_ENABLE_CANCELIO	asio/src/tests/unit/ip/tcp.cpp	/^#define ASIO_ENABLE_CANCELIO /;"	d	file:
ASIO_ENABLE_HANDLER_TRACKING	asio/include/asio/detail/handler_tracking.hpp	/^#  define ASIO_ENABLE_HANDLER_TRACKING /;"	d
ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS	asio/include/asio/detail/handler_type_requirements.hpp	/^#  define ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS /;"	d
ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS_ASSERT	asio/include/asio/detail/handler_type_requirements.hpp	/^#    define ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS_ASSERT /;"	d
ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS_ASSERT	asio/include/asio/detail/handler_type_requirements.hpp	/^#   define ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS_ASSERT /;"	d
ASIO_ERROR	asio/src/tests/unit/unit_test.hpp	/^#define ASIO_ERROR(/;"	d
ASIO_ERROR_CATEGORY_NOEXCEPT	asio/include/asio/detail/config.hpp	/^#     define ASIO_ERROR_CATEGORY_NOEXCEPT /;"	d
ASIO_ERROR_CATEGORY_NOEXCEPT	asio/include/asio/detail/config.hpp	/^#   define ASIO_ERROR_CATEGORY_NOEXCEPT /;"	d
ASIO_ERROR_CATEGORY_NOEXCEPT	asio/include/asio/detail/config.hpp	/^#  define ASIO_ERROR_CATEGORY_NOEXCEPT /;"	d
ASIO_ERROR_CATEGORY_NOEXCEPT	asio/include/asio/detail/config.hpp	/^#  define ASIO_ERROR_CATEGORY_NOEXCEPT$/;"	d
ASIO_ERROR_CODE_HPP	asio/include/asio/error_code.hpp	/^#define ASIO_ERROR_CODE_HPP$/;"	d
ASIO_ERROR_HPP	asio/include/asio/error.hpp	/^#define ASIO_ERROR_HPP$/;"	d
ASIO_EXECUTION_CONTEXT_HPP	asio/include/asio/execution_context.hpp	/^#define ASIO_EXECUTION_CONTEXT_HPP$/;"	d
ASIO_EXECUTOR_HPP	asio/include/asio/executor.hpp	/^#define ASIO_EXECUTOR_HPP$/;"	d
ASIO_EXECUTOR_WORK_GUARD_HPP	asio/include/asio/executor_work_guard.hpp	/^#define ASIO_EXECUTOR_WORK_GUARD_HPP$/;"	d
ASIO_GENERIC_BASIC_ENDPOINT_HPP	asio/include/asio/generic/basic_endpoint.hpp	/^#define ASIO_GENERIC_BASIC_ENDPOINT_HPP$/;"	d
ASIO_GENERIC_DATAGRAM_PROTOCOL_HPP	asio/include/asio/generic/datagram_protocol.hpp	/^#define ASIO_GENERIC_DATAGRAM_PROTOCOL_HPP$/;"	d
ASIO_GENERIC_DETAIL_ENDPOINT_HPP	asio/include/asio/generic/detail/endpoint.hpp	/^#define ASIO_GENERIC_DETAIL_ENDPOINT_HPP$/;"	d
ASIO_GENERIC_RAW_PROTOCOL_HPP	asio/include/asio/generic/raw_protocol.hpp	/^#define ASIO_GENERIC_RAW_PROTOCOL_HPP$/;"	d
ASIO_GENERIC_SEQ_PACKET_PROTOCOL_HPP	asio/include/asio/generic/seq_packet_protocol.hpp	/^#define ASIO_GENERIC_SEQ_PACKET_PROTOCOL_HPP$/;"	d
ASIO_GENERIC_STREAM_PROTOCOL_HPP	asio/include/asio/generic/stream_protocol.hpp	/^#define ASIO_GENERIC_STREAM_PROTOCOL_HPP$/;"	d
ASIO_GETADDRINFO_ERROR	asio/include/asio/error.hpp	/^# define ASIO_GETADDRINFO_ERROR(/;"	d
ASIO_HANDLER_ALLOC_HOOK_HPP	asio/include/asio/handler_alloc_hook.hpp	/^#define ASIO_HANDLER_ALLOC_HOOK_HPP$/;"	d
ASIO_HANDLER_COMPLETION	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_COMPLETION(/;"	d
ASIO_HANDLER_CONTINUATION_HOOK_HPP	asio/include/asio/handler_continuation_hook.hpp	/^#define ASIO_HANDLER_CONTINUATION_HOOK_HPP$/;"	d
ASIO_HANDLER_CREATION	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_CREATION(/;"	d
ASIO_HANDLER_INVOCATION_BEGIN	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_INVOCATION_BEGIN(/;"	d
ASIO_HANDLER_INVOCATION_END	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_INVOCATION_END /;"	d
ASIO_HANDLER_INVOKE_HOOK_HPP	asio/include/asio/handler_invoke_hook.hpp	/^#define ASIO_HANDLER_INVOKE_HOOK_HPP$/;"	d
ASIO_HANDLER_OPERATION	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_OPERATION(/;"	d
ASIO_HANDLER_REACTOR_DEREGISTRATION	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_REACTOR_DEREGISTRATION(/;"	d
ASIO_HANDLER_REACTOR_ERROR_EVENT	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_REACTOR_ERROR_EVENT /;"	d
ASIO_HANDLER_REACTOR_EVENTS	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_REACTOR_EVENTS(/;"	d
ASIO_HANDLER_REACTOR_OPERATION	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_REACTOR_OPERATION(/;"	d
ASIO_HANDLER_REACTOR_READ_EVENT	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_REACTOR_READ_EVENT /;"	d
ASIO_HANDLER_REACTOR_REGISTRATION	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_REACTOR_REGISTRATION(/;"	d
ASIO_HANDLER_REACTOR_WRITE_EVENT	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_REACTOR_WRITE_EVENT /;"	d
ASIO_HANDLER_TRACKING_INIT	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_HANDLER_TRACKING_INIT /;"	d
ASIO_HANDLER_TYPE	asio/include/asio/async_result.hpp	/^#define ASIO_HANDLER_TYPE(/;"	d
ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT	asio/include/asio/detail/handler_type_requirements.hpp	/^#  define ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT(/;"	d
ASIO_HANDSHAKE_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_HANDSHAKE_HANDLER_CHECK(/;"	d
ASIO_HAS_ALIAS_TEMPLATES	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_ALIAS_TEMPLATES /;"	d
ASIO_HAS_ALIAS_TEMPLATES	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_ALIAS_TEMPLATES /;"	d
ASIO_HAS_BOOST_ARRAY	asio/include/asio/detail/config.hpp	/^#  define ASIO_HAS_BOOST_ARRAY /;"	d
ASIO_HAS_BOOST_ASSERT	asio/include/asio/detail/config.hpp	/^#  define ASIO_HAS_BOOST_ASSERT /;"	d
ASIO_HAS_BOOST_BIND	asio/include/asio/detail/config.hpp	/^#  define ASIO_HAS_BOOST_BIND /;"	d
ASIO_HAS_BOOST_CHRONO	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_BOOST_CHRONO /;"	d
ASIO_HAS_BOOST_CONFIG	asio/include/asio/detail/config.hpp	/^# define ASIO_HAS_BOOST_CONFIG /;"	d
ASIO_HAS_BOOST_DATE_TIME	asio/include/asio/detail/config.hpp	/^#  define ASIO_HAS_BOOST_DATE_TIME /;"	d
ASIO_HAS_BOOST_LIMITS	asio/include/asio/detail/config.hpp	/^#  define ASIO_HAS_BOOST_LIMITS /;"	d
ASIO_HAS_BOOST_REGEX	asio/include/asio/detail/config.hpp	/^#  define ASIO_HAS_BOOST_REGEX /;"	d
ASIO_HAS_BOOST_THROW_EXCEPTION	asio/include/asio/detail/config.hpp	/^#  define ASIO_HAS_BOOST_THROW_EXCEPTION /;"	d
ASIO_HAS_BOOST_WORKAROUND	asio/include/asio/detail/config.hpp	/^#  define ASIO_HAS_BOOST_WORKAROUND /;"	d
ASIO_HAS_CHRONO	asio/include/asio/detail/config.hpp	/^#  define ASIO_HAS_CHRONO /;"	d
ASIO_HAS_CLANG_LIBCXX	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_CLANG_LIBCXX /;"	d
ASIO_HAS_CONCEPTS	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_CONCEPTS /;"	d
ASIO_HAS_CONSTEXPR	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_CONSTEXPR /;"	d
ASIO_HAS_CONSTEXPR	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_CONSTEXPR /;"	d
ASIO_HAS_CO_AWAIT	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_CO_AWAIT /;"	d
ASIO_HAS_CO_AWAIT	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_CO_AWAIT /;"	d
ASIO_HAS_CSTDINT	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_CSTDINT /;"	d
ASIO_HAS_CSTDINT	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_CSTDINT /;"	d
ASIO_HAS_CXX11_ALLOCATORS	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_CXX11_ALLOCATORS /;"	d
ASIO_HAS_CXX11_ALLOCATORS	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_CXX11_ALLOCATORS /;"	d
ASIO_HAS_DECLTYPE	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_DECLTYPE /;"	d
ASIO_HAS_DECLTYPE	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_DECLTYPE /;"	d
ASIO_HAS_DEFAULT_FUNCTION_TEMPLATE_ARGUMENTS	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_DEFAULT_FUNCTION_TEMPLATE_ARGUMENTS /;"	d
ASIO_HAS_DEV_POLL	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_DEV_POLL /;"	d
ASIO_HAS_EPOLL	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_EPOLL /;"	d
ASIO_HAS_EVENTFD	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_EVENTFD /;"	d
ASIO_HAS_GETADDRINFO	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_GETADDRINFO /;"	d
ASIO_HAS_GETADDRINFO	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_GETADDRINFO /;"	d
ASIO_HAS_GETADDRINFO	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_GETADDRINFO /;"	d
ASIO_HAS_HANDLER_HOOKS	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_HANDLER_HOOKS /;"	d
ASIO_HAS_HANDLER_HOOKS	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_HANDLER_HOOKS /;"	d
ASIO_HAS_IOCP	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_IOCP /;"	d
ASIO_HAS_KQUEUE	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_KQUEUE /;"	d
ASIO_HAS_LOCAL_SOCKETS	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_LOCAL_SOCKETS /;"	d
ASIO_HAS_MOVE	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_MOVE /;"	d
ASIO_HAS_MOVE	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_MOVE /;"	d
ASIO_HAS_NULLPTR	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_NULLPTR /;"	d
ASIO_HAS_NULLPTR	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_NULLPTR /;"	d
ASIO_HAS_OLD_WIN_SDK	asio/include/asio/detail/old_win_sdk_compat.hpp	/^#define ASIO_HAS_OLD_WIN_SDK /;"	d
ASIO_HAS_POSIX_STREAM_DESCRIPTOR	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_POSIX_STREAM_DESCRIPTOR /;"	d
ASIO_HAS_PTHREADS	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_PTHREADS /;"	d
ASIO_HAS_RETURN_TYPE_DEDUCTION	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_RETURN_TYPE_DEDUCTION /;"	d
ASIO_HAS_RETURN_TYPE_DEDUCTION	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_RETURN_TYPE_DEDUCTION /;"	d
ASIO_HAS_SECURE_RTL	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_SECURE_RTL /;"	d
ASIO_HAS_SERIAL_PORT	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_SERIAL_PORT /;"	d
ASIO_HAS_SIGACTION	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_SIGACTION /;"	d
ASIO_HAS_SIGNAL	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_SIGNAL /;"	d
ASIO_HAS_SSIZE_T	asio/include/asio/detail/config.hpp	/^#  define ASIO_HAS_SSIZE_T /;"	d
ASIO_HAS_STD_ADDRESSOF	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_ADDRESSOF /;"	d
ASIO_HAS_STD_ADDRESSOF	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_ADDRESSOF /;"	d
ASIO_HAS_STD_ALLOCATOR_ARG	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_ALLOCATOR_ARG /;"	d
ASIO_HAS_STD_ALLOCATOR_ARG	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_ALLOCATOR_ARG /;"	d
ASIO_HAS_STD_ARRAY	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_ARRAY /;"	d
ASIO_HAS_STD_ARRAY	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_ARRAY /;"	d
ASIO_HAS_STD_ATOMIC	asio/include/asio/detail/config.hpp	/^#      define ASIO_HAS_STD_ATOMIC /;"	d
ASIO_HAS_STD_ATOMIC	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_ATOMIC /;"	d
ASIO_HAS_STD_ATOMIC	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_ATOMIC /;"	d
ASIO_HAS_STD_CALL_ONCE	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_CALL_ONCE /;"	d
ASIO_HAS_STD_CALL_ONCE	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_CALL_ONCE /;"	d
ASIO_HAS_STD_CHRONO	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_CHRONO /;"	d
ASIO_HAS_STD_CHRONO	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_CHRONO /;"	d
ASIO_HAS_STD_CHRONO_MONOTONIC_CLOCK	asio/include/asio/detail/config.hpp	/^#      define ASIO_HAS_STD_CHRONO_MONOTONIC_CLOCK /;"	d
ASIO_HAS_STD_EXPERIMENTAL_STRING_VIEW	asio/include/asio/detail/config.hpp	/^#       define ASIO_HAS_STD_EXPERIMENTAL_STRING_VIEW /;"	d
ASIO_HAS_STD_EXPERIMENTAL_STRING_VIEW	asio/include/asio/detail/config.hpp	/^#      define ASIO_HAS_STD_EXPERIMENTAL_STRING_VIEW /;"	d
ASIO_HAS_STD_EXPERIMENTAL_STRING_VIEW	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_EXPERIMENTAL_STRING_VIEW /;"	d
ASIO_HAS_STD_FUNCTION	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_FUNCTION /;"	d
ASIO_HAS_STD_FUNCTION	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_FUNCTION /;"	d
ASIO_HAS_STD_FUTURE	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_FUTURE /;"	d
ASIO_HAS_STD_FUTURE	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_FUTURE /;"	d
ASIO_HAS_STD_FUTURE_CLASS	asio/include/asio/detail/future.hpp	/^#   define ASIO_HAS_STD_FUTURE_CLASS /;"	d
ASIO_HAS_STD_FUTURE_CLASS	asio/include/asio/detail/future.hpp	/^#  define ASIO_HAS_STD_FUTURE_CLASS /;"	d
ASIO_HAS_STD_INVOKE_RESULT	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_INVOKE_RESULT /;"	d
ASIO_HAS_STD_IOSTREAM_MOVE	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_IOSTREAM_MOVE /;"	d
ASIO_HAS_STD_IOSTREAM_MOVE	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_IOSTREAM_MOVE /;"	d
ASIO_HAS_STD_MUTEX_AND_CONDVAR	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_MUTEX_AND_CONDVAR /;"	d
ASIO_HAS_STD_MUTEX_AND_CONDVAR	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_MUTEX_AND_CONDVAR /;"	d
ASIO_HAS_STD_SHARED_PTR	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_SHARED_PTR /;"	d
ASIO_HAS_STD_SHARED_PTR	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_SHARED_PTR /;"	d
ASIO_HAS_STD_STRING_VIEW	asio/include/asio/detail/config.hpp	/^#      define ASIO_HAS_STD_STRING_VIEW /;"	d
ASIO_HAS_STD_STRING_VIEW	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_STRING_VIEW /;"	d
ASIO_HAS_STD_STRING_VIEW	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_STRING_VIEW /;"	d
ASIO_HAS_STD_SYSTEM_ERROR	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_SYSTEM_ERROR /;"	d
ASIO_HAS_STD_SYSTEM_ERROR	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_SYSTEM_ERROR /;"	d
ASIO_HAS_STD_THREAD	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_THREAD /;"	d
ASIO_HAS_STD_THREAD	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_THREAD /;"	d
ASIO_HAS_STD_TYPE_TRAITS	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_STD_TYPE_TRAITS /;"	d
ASIO_HAS_STD_TYPE_TRAITS	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_STD_TYPE_TRAITS /;"	d
ASIO_HAS_STRING_VIEW	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_STRING_VIEW /;"	d
ASIO_HAS_THREADS	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_THREADS /;"	d
ASIO_HAS_THREAD_KEYWORD_EXTENSION	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_THREAD_KEYWORD_EXTENSION /;"	d
ASIO_HAS_THREAD_KEYWORD_EXTENSION	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_THREAD_KEYWORD_EXTENSION /;"	d
ASIO_HAS_TIMERFD	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_TIMERFD /;"	d
ASIO_HAS_UNISTD_H	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_UNISTD_H /;"	d
ASIO_HAS_VARIADIC_TEMPLATES	asio/include/asio/detail/config.hpp	/^#     define ASIO_HAS_VARIADIC_TEMPLATES /;"	d
ASIO_HAS_VARIADIC_TEMPLATES	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_VARIADIC_TEMPLATES /;"	d
ASIO_HAS_WINDOWS_OBJECT_HANDLE	asio/include/asio/detail/config.hpp	/^#    define ASIO_HAS_WINDOWS_OBJECT_HANDLE /;"	d
ASIO_HAS_WINDOWS_OVERLAPPED_PTR	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_WINDOWS_OVERLAPPED_PTR /;"	d
ASIO_HAS_WINDOWS_RANDOM_ACCESS_HANDLE	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_WINDOWS_RANDOM_ACCESS_HANDLE /;"	d
ASIO_HAS_WINDOWS_STREAM_HANDLE	asio/include/asio/detail/config.hpp	/^#   define ASIO_HAS_WINDOWS_STREAM_HANDLE /;"	d
ASIO_HEADER_ONLY	asio/include/asio/detail/config.hpp	/^#   define ASIO_HEADER_ONLY /;"	d
ASIO_HIGH_RESOLUTION_TIMER_HPP	asio/include/asio/high_resolution_timer.hpp	/^#define ASIO_HIGH_RESOLUTION_TIMER_HPP$/;"	d
ASIO_HPP	asio/include/asio.hpp	/^#define ASIO_HPP$/;"	d
ASIO_IMPL_AWAITABLE_HPP	asio/include/asio/impl/awaitable.hpp	/^#define ASIO_IMPL_AWAITABLE_HPP$/;"	d
ASIO_IMPL_BUFFERED_READ_STREAM_HPP	asio/include/asio/impl/buffered_read_stream.hpp	/^#define ASIO_IMPL_BUFFERED_READ_STREAM_HPP$/;"	d
ASIO_IMPL_BUFFERED_WRITE_STREAM_HPP	asio/include/asio/impl/buffered_write_stream.hpp	/^#define ASIO_IMPL_BUFFERED_WRITE_STREAM_HPP$/;"	d
ASIO_IMPL_COMPOSE_HPP	asio/include/asio/impl/compose.hpp	/^#define ASIO_IMPL_COMPOSE_HPP$/;"	d
ASIO_IMPL_CONNECT_HPP	asio/include/asio/impl/connect.hpp	/^#define ASIO_IMPL_CONNECT_HPP$/;"	d
ASIO_IMPL_CO_SPAWN_HPP	asio/include/asio/impl/co_spawn.hpp	/^#define ASIO_IMPL_CO_SPAWN_HPP$/;"	d
ASIO_IMPL_DEFER_HPP	asio/include/asio/impl/defer.hpp	/^#define ASIO_IMPL_DEFER_HPP$/;"	d
ASIO_IMPL_DETACHED_HPP	asio/include/asio/impl/detached.hpp	/^#define ASIO_IMPL_DETACHED_HPP$/;"	d
ASIO_IMPL_DISPATCH_HPP	asio/include/asio/impl/dispatch.hpp	/^#define ASIO_IMPL_DISPATCH_HPP$/;"	d
ASIO_IMPL_EXECUTION_CONTEXT_HPP	asio/include/asio/impl/execution_context.hpp	/^#define ASIO_IMPL_EXECUTION_CONTEXT_HPP$/;"	d
ASIO_IMPL_EXECUTOR_HPP	asio/include/asio/impl/executor.hpp	/^#define ASIO_IMPL_EXECUTOR_HPP$/;"	d
ASIO_IMPL_IO_CONTEXT_HPP	asio/include/asio/impl/io_context.hpp	/^#define ASIO_IMPL_IO_CONTEXT_HPP$/;"	d
ASIO_IMPL_POST_HPP	asio/include/asio/impl/post.hpp	/^#define ASIO_IMPL_POST_HPP$/;"	d
ASIO_IMPL_READ_AT_HPP	asio/include/asio/impl/read_at.hpp	/^#define ASIO_IMPL_READ_AT_HPP$/;"	d
ASIO_IMPL_READ_HPP	asio/include/asio/impl/read.hpp	/^#define ASIO_IMPL_READ_HPP$/;"	d
ASIO_IMPL_READ_UNTIL_HPP	asio/include/asio/impl/read_until.hpp	/^#define ASIO_IMPL_READ_UNTIL_HPP$/;"	d
ASIO_IMPL_REDIRECT_ERROR_HPP	asio/include/asio/impl/redirect_error.hpp	/^#define ASIO_IMPL_REDIRECT_ERROR_HPP$/;"	d
ASIO_IMPL_SERIAL_PORT_BASE_HPP	asio/include/asio/impl/serial_port_base.hpp	/^#define ASIO_IMPL_SERIAL_PORT_BASE_HPP$/;"	d
ASIO_IMPL_SPAWN_HPP	asio/include/asio/impl/spawn.hpp	/^#define ASIO_IMPL_SPAWN_HPP$/;"	d
ASIO_IMPL_SRC_HPP	asio/include/asio/impl/src.hpp	/^#define ASIO_IMPL_SRC_HPP$/;"	d
ASIO_IMPL_SYSTEM_CONTEXT_HPP	asio/include/asio/impl/system_context.hpp	/^#define ASIO_IMPL_SYSTEM_CONTEXT_HPP$/;"	d
ASIO_IMPL_SYSTEM_EXECUTOR_HPP	asio/include/asio/impl/system_executor.hpp	/^#define ASIO_IMPL_SYSTEM_EXECUTOR_HPP$/;"	d
ASIO_IMPL_THREAD_POOL_HPP	asio/include/asio/impl/thread_pool.hpp	/^#define ASIO_IMPL_THREAD_POOL_HPP$/;"	d
ASIO_IMPL_USE_AWAITABLE_HPP	asio/include/asio/impl/use_awaitable.hpp	/^#define ASIO_IMPL_USE_AWAITABLE_HPP$/;"	d
ASIO_IMPL_USE_FUTURE_HPP	asio/include/asio/impl/use_future.hpp	/^#define ASIO_IMPL_USE_FUTURE_HPP$/;"	d
ASIO_IMPL_WRITE_AT_HPP	asio/include/asio/impl/write_at.hpp	/^#define ASIO_IMPL_WRITE_AT_HPP$/;"	d
ASIO_IMPL_WRITE_HPP	asio/include/asio/impl/write.hpp	/^#define ASIO_IMPL_WRITE_HPP$/;"	d
ASIO_INHERIT_TRACKED_HANDLER	asio/include/asio/detail/scheduler_operation.hpp	/^class scheduler_operation ASIO_INHERIT_TRACKED_HANDLER$/;"	c	namespace:asio::detail
ASIO_INHERIT_TRACKED_HANDLER	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^# define ASIO_INHERIT_TRACKED_HANDLER /;"	d
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/async_result.hpp	/^# define ASIO_INITFN_AUTO_RESULT_TYPE(/;"	d
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_datagram_socket.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::basic_datagram_socket
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_datagram_socket.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::basic_datagram_socket
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_deadline_timer.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WaitHandler,$/;"	f	class:asio::basic_deadline_timer
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_raw_socket.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::basic_raw_socket
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_raw_socket.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::basic_raw_socket
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_seq_packet_socket.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::basic_seq_packet_socket
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_seq_packet_socket.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::basic_seq_packet_socket
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_serial_port.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::basic_serial_port
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_serial_port.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::basic_serial_port
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_signal_set.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(SignalHandler,$/;"	f	class:asio::basic_signal_set
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_socket.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ConnectHandler,$/;"	f	class:asio::basic_socket
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_socket.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WaitHandler,$/;"	f	class:asio::basic_socket
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(AcceptHandler,$/;"	f	class:asio::basic_socket_acceptor
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(MoveAcceptHandler,$/;"	f	class:asio::basic_socket_acceptor
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WaitHandler,$/;"	f	class:asio::basic_socket_acceptor
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_stream_socket.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::basic_stream_socket
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_stream_socket.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::basic_stream_socket
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/basic_waitable_timer.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WaitHandler,$/;"	f	class:asio::basic_waitable_timer
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/buffered_read_stream.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::buffered_read_stream
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/buffered_stream.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::buffered_stream
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/buffered_stream.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::buffered_stream
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/buffered_write_stream.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::buffered_write_stream
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/buffered_read_stream.hpp	/^ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/buffered_write_stream.hpp	/^ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/co_spawn.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(CompletionToken,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/compose.hpp	/^ASIO_INITFN_AUTO_RESULT_TYPE(CompletionToken, Signature)$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/connect.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(IteratorConnectHandler,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/connect.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(RangeConnectHandler,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/defer.hpp	/^ASIO_INITFN_AUTO_RESULT_TYPE(CompletionToken, void()) defer($/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/defer.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(CompletionToken, void()) defer($/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/dispatch.hpp	/^ASIO_INITFN_AUTO_RESULT_TYPE(CompletionToken, void()) dispatch($/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/dispatch.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(CompletionToken, void()) dispatch($/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/io_context.hpp	/^ASIO_INITFN_AUTO_RESULT_TYPE(LegacyCompletionHandler, void ())$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/post.hpp	/^ASIO_INITFN_AUTO_RESULT_TYPE(CompletionToken, void()) post($/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/post.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(CompletionToken, void()) post($/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/read.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/read_at.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/read_until.hpp	/^ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/read_until.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/write.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/impl/write_at.hpp	/^inline ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	namespace:asio
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/io_context_strand.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(LegacyCompletionHandler, void ())$/;"	f	class:asio::io_context::strand
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/ip/basic_resolver.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ResolveHandler,$/;"	f	class:asio::ip::basic_resolver
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/posix/basic_descriptor.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WaitHandler,$/;"	f	class:asio::posix::basic_descriptor
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::posix::basic_stream_descriptor
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::posix::basic_stream_descriptor
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/ssl/stream.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(BufferedHandshakeHandler,$/;"	f	class:asio::ssl::stream
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/ssl/stream.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(HandshakeHandler,$/;"	f	class:asio::ssl::stream
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/ssl/stream.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::ssl::stream
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/ssl/stream.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ShutdownHandler,$/;"	f	class:asio::ssl::stream
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/ssl/stream.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::ssl::stream
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/windows/basic_object_handle.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WaitHandler,$/;"	f	class:asio::windows::basic_object_handle
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/windows/basic_random_access_handle.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::windows::basic_random_access_handle
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/windows/basic_random_access_handle.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::windows::basic_random_access_handle
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/windows/basic_stream_handle.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(ReadHandler,$/;"	f	class:asio::windows::basic_stream_handle
ASIO_INITFN_AUTO_RESULT_TYPE	asio/include/asio/windows/basic_stream_handle.hpp	/^  ASIO_INITFN_AUTO_RESULT_TYPE(WriteHandler,$/;"	f	class:asio::windows::basic_stream_handle
ASIO_INITFN_DEDUCED_RESULT_TYPE	asio/include/asio/async_result.hpp	/^# define ASIO_INITFN_DEDUCED_RESULT_TYPE(/;"	d
ASIO_INITFN_RESULT_TYPE	asio/include/asio/async_result.hpp	/^# define ASIO_INITFN_RESULT_TYPE(/;"	d
ASIO_INITFN_RESULT_TYPE	asio/src/tests/unit/archetypes/async_ops.hpp	/^ASIO_INITFN_RESULT_TYPE(CompletionToken, void())$/;"	f	namespace:archetypes
ASIO_INITFN_RESULT_TYPE	asio/src/tests/unit/archetypes/async_ops.hpp	/^ASIO_INITFN_RESULT_TYPE(CompletionToken, void(asio::error_code))$/;"	f	namespace:archetypes
ASIO_INITFN_RESULT_TYPE	asio/src/tests/unit/archetypes/async_ops.hpp	/^ASIO_INITFN_RESULT_TYPE(CompletionToken, void(int))$/;"	f	namespace:archetypes
ASIO_INITFN_RESULT_TYPE	asio/src/tests/unit/archetypes/async_ops.hpp	/^ASIO_INITFN_RESULT_TYPE(CompletionToken, void(int, double))$/;"	f	namespace:archetypes
ASIO_INITFN_RESULT_TYPE	asio/src/tests/unit/archetypes/async_ops.hpp	/^ASIO_INITFN_RESULT_TYPE(CompletionToken, void(int, double, char))$/;"	f	namespace:archetypes
ASIO_INITFN_RESULT_TYPE	asio/src/tests/unit/archetypes/async_ops.hpp	/^ASIO_INITFN_RESULT_TYPE(CompletionToken, void(std::exception_ptr))$/;"	f	namespace:archetypes
ASIO_INITFN_RESULT_TYPE	asio/src/tests/unit/archetypes/async_ops.hpp	/^ASIO_INITFN_RESULT_TYPE(CompletionToken, void(std::exception_ptr, int))$/;"	f	namespace:archetypes
ASIO_INITFN_RESULT_TYPE	asio/src/tests/unit/archetypes/async_ops.hpp	/^ASIO_INITFN_RESULT_TYPE(CompletionToken,$/;"	f	namespace:archetypes
ASIO_INITFN_RESULT_TYPE	asio/src/tests/unit/compose.cpp	/^ASIO_INITFN_RESULT_TYPE(CompletionToken, void())$/;"	f
ASIO_INITFN_RESULT_TYPE	asio/src/tests/unit/compose.cpp	/^ASIO_INITFN_RESULT_TYPE(CompletionToken, void(int))$/;"	f
ASIO_IO_CONTEXT_HPP	asio/include/asio/io_context.hpp	/^#define ASIO_IO_CONTEXT_HPP$/;"	d
ASIO_IO_CONTEXT_STRAND_HPP	asio/include/asio/io_context_strand.hpp	/^#define ASIO_IO_CONTEXT_STRAND_HPP$/;"	d
ASIO_IO_SERVICE_HPP	asio/include/asio/io_service.hpp	/^#define ASIO_IO_SERVICE_HPP$/;"	d
ASIO_IO_SERVICE_STRAND_HPP	asio/include/asio/io_service_strand.hpp	/^#define ASIO_IO_SERVICE_STRAND_HPP$/;"	d
ASIO_IP_ADDRESS_HPP	asio/include/asio/ip/address.hpp	/^#define ASIO_IP_ADDRESS_HPP$/;"	d
ASIO_IP_ADDRESS_V4_HPP	asio/include/asio/ip/address_v4.hpp	/^#define ASIO_IP_ADDRESS_V4_HPP$/;"	d
ASIO_IP_ADDRESS_V4_ITERATOR_HPP	asio/include/asio/ip/address_v4_iterator.hpp	/^#define ASIO_IP_ADDRESS_V4_ITERATOR_HPP$/;"	d
ASIO_IP_ADDRESS_V4_RANGE_HPP	asio/include/asio/ip/address_v4_range.hpp	/^#define ASIO_IP_ADDRESS_V4_RANGE_HPP$/;"	d
ASIO_IP_ADDRESS_V6_HPP	asio/include/asio/ip/address_v6.hpp	/^#define ASIO_IP_ADDRESS_V6_HPP$/;"	d
ASIO_IP_ADDRESS_V6_ITERATOR_HPP	asio/include/asio/ip/address_v6_iterator.hpp	/^#define ASIO_IP_ADDRESS_V6_ITERATOR_HPP$/;"	d
ASIO_IP_ADDRESS_V6_RANGE_HPP	asio/include/asio/ip/address_v6_range.hpp	/^#define ASIO_IP_ADDRESS_V6_RANGE_HPP$/;"	d
ASIO_IP_BAD_ADDRESS_CAST_HPP	asio/include/asio/ip/bad_address_cast.hpp	/^#define ASIO_IP_BAD_ADDRESS_CAST_HPP$/;"	d
ASIO_IP_BASIC_ENDPOINT_HPP	asio/include/asio/ip/basic_endpoint.hpp	/^#define ASIO_IP_BASIC_ENDPOINT_HPP$/;"	d
ASIO_IP_BASIC_RESOLVER_ENTRY_HPP	asio/include/asio/ip/basic_resolver_entry.hpp	/^#define ASIO_IP_BASIC_RESOLVER_ENTRY_HPP$/;"	d
ASIO_IP_BASIC_RESOLVER_FWD_DECL	asio/include/asio/ip/basic_resolver.hpp	/^#define ASIO_IP_BASIC_RESOLVER_FWD_DECL$/;"	d
ASIO_IP_BASIC_RESOLVER_FWD_DECL	asio/include/asio/ts/netfwd.hpp	/^#define ASIO_IP_BASIC_RESOLVER_FWD_DECL$/;"	d
ASIO_IP_BASIC_RESOLVER_HPP	asio/include/asio/ip/basic_resolver.hpp	/^#define ASIO_IP_BASIC_RESOLVER_HPP$/;"	d
ASIO_IP_BASIC_RESOLVER_ITERATOR_HPP	asio/include/asio/ip/basic_resolver_iterator.hpp	/^#define ASIO_IP_BASIC_RESOLVER_ITERATOR_HPP$/;"	d
ASIO_IP_BASIC_RESOLVER_QUERY_HPP	asio/include/asio/ip/basic_resolver_query.hpp	/^#define ASIO_IP_BASIC_RESOLVER_QUERY_HPP$/;"	d
ASIO_IP_BASIC_RESOLVER_RESULTS_HPP	asio/include/asio/ip/basic_resolver_results.hpp	/^#define ASIO_IP_BASIC_RESOLVER_RESULTS_HPP$/;"	d
ASIO_IP_DETAIL_ENDPOINT_HPP	asio/include/asio/ip/detail/endpoint.hpp	/^#define ASIO_IP_DETAIL_ENDPOINT_HPP$/;"	d
ASIO_IP_DETAIL_SOCKET_OPTION_HPP	asio/include/asio/ip/detail/socket_option.hpp	/^#define ASIO_IP_DETAIL_SOCKET_OPTION_HPP$/;"	d
ASIO_IP_HOST_NAME_HPP	asio/include/asio/ip/host_name.hpp	/^#define ASIO_IP_HOST_NAME_HPP$/;"	d
ASIO_IP_ICMP_HPP	asio/include/asio/ip/icmp.hpp	/^#define ASIO_IP_ICMP_HPP$/;"	d
ASIO_IP_IMPL_ADDRESS_HPP	asio/include/asio/ip/impl/address.hpp	/^#define ASIO_IP_IMPL_ADDRESS_HPP$/;"	d
ASIO_IP_IMPL_ADDRESS_V4_HPP	asio/include/asio/ip/impl/address_v4.hpp	/^#define ASIO_IP_IMPL_ADDRESS_V4_HPP$/;"	d
ASIO_IP_IMPL_ADDRESS_V6_HPP	asio/include/asio/ip/impl/address_v6.hpp	/^#define ASIO_IP_IMPL_ADDRESS_V6_HPP$/;"	d
ASIO_IP_IMPL_BASIC_ENDPOINT_HPP	asio/include/asio/ip/impl/basic_endpoint.hpp	/^#define ASIO_IP_IMPL_BASIC_ENDPOINT_HPP$/;"	d
ASIO_IP_IMPL_NETWORK_V4_HPP	asio/include/asio/ip/impl/network_v4.hpp	/^#define ASIO_IP_IMPL_NETWORK_V4_HPP$/;"	d
ASIO_IP_IMPL_NETWORK_V6_HPP	asio/include/asio/ip/impl/network_v6.hpp	/^#define ASIO_IP_IMPL_NETWORK_V6_HPP$/;"	d
ASIO_IP_MULTICAST_HPP	asio/include/asio/ip/multicast.hpp	/^#define ASIO_IP_MULTICAST_HPP$/;"	d
ASIO_IP_NETWORK_V4_HPP	asio/include/asio/ip/network_v4.hpp	/^#define ASIO_IP_NETWORK_V4_HPP$/;"	d
ASIO_IP_NETWORK_V6_HPP	asio/include/asio/ip/network_v6.hpp	/^#define ASIO_IP_NETWORK_V6_HPP$/;"	d
ASIO_IP_RESOLVER_BASE_HPP	asio/include/asio/ip/resolver_base.hpp	/^#define ASIO_IP_RESOLVER_BASE_HPP$/;"	d
ASIO_IP_RESOLVER_QUERY_BASE_HPP	asio/include/asio/ip/resolver_query_base.hpp	/^#define ASIO_IP_RESOLVER_QUERY_BASE_HPP$/;"	d
ASIO_IP_TCP_HPP	asio/include/asio/ip/tcp.hpp	/^#define ASIO_IP_TCP_HPP$/;"	d
ASIO_IP_UDP_HPP	asio/include/asio/ip/udp.hpp	/^#define ASIO_IP_UDP_HPP$/;"	d
ASIO_IP_UNICAST_HPP	asio/include/asio/ip/unicast.hpp	/^#define ASIO_IP_UNICAST_HPP$/;"	d
ASIO_IP_V6_ONLY_HPP	asio/include/asio/ip/v6_only.hpp	/^#define ASIO_IP_V6_ONLY_HPP$/;"	d
ASIO_IS_EXECUTOR_HPP	asio/include/asio/is_executor.hpp	/^#define ASIO_IS_EXECUTOR_HPP$/;"	d
ASIO_IS_READ_BUFFERED_HPP	asio/include/asio/is_read_buffered.hpp	/^#define ASIO_IS_READ_BUFFERED_HPP$/;"	d
ASIO_IS_WRITE_BUFFERED_HPP	asio/include/asio/is_write_buffered.hpp	/^#define ASIO_IS_WRITE_BUFFERED_HPP$/;"	d
ASIO_ITERATOR_CONNECT_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_ITERATOR_CONNECT_HANDLER_CHECK(/;"	d
ASIO_LEGACY_COMPLETION_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_LEGACY_COMPLETION_HANDLER_CHECK(/;"	d
ASIO_LOCAL_BASIC_ENDPOINT_HPP	asio/include/asio/local/basic_endpoint.hpp	/^#define ASIO_LOCAL_BASIC_ENDPOINT_HPP$/;"	d
ASIO_LOCAL_CONNECT_PAIR_HPP	asio/include/asio/local/connect_pair.hpp	/^#define ASIO_LOCAL_CONNECT_PAIR_HPP$/;"	d
ASIO_LOCAL_DATAGRAM_PROTOCOL_HPP	asio/include/asio/local/datagram_protocol.hpp	/^#define ASIO_LOCAL_DATAGRAM_PROTOCOL_HPP$/;"	d
ASIO_LOCAL_DETAIL_ENDPOINT_HPP	asio/include/asio/local/detail/endpoint.hpp	/^#define ASIO_LOCAL_DETAIL_ENDPOINT_HPP$/;"	d
ASIO_LOCAL_STREAM_PROTOCOL_HPP	asio/include/asio/local/stream_protocol.hpp	/^#define ASIO_LOCAL_STREAM_PROTOCOL_HPP$/;"	d
ASIO_MOVE_ACCEPT_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_MOVE_ACCEPT_HANDLER_CHECK(/;"	d
ASIO_MOVE_ARG	asio/include/asio/detail/config.hpp	/^#   define ASIO_MOVE_ARG(/;"	d
ASIO_MOVE_ARG	asio/include/asio/detail/config.hpp	/^#  define ASIO_MOVE_ARG(/;"	d
ASIO_MOVE_ARG	asio/include/asio/detail/config.hpp	/^# define ASIO_MOVE_ARG(/;"	d
ASIO_MOVE_ARG	asio/include/asio/impl/spawn.hpp	/^void spawn(ASIO_MOVE_ARG(Handler) handler,$/;"	f	namespace:asio	typeref:typename:void spawn (handler,ASIO_MOVE_ARG (Function)function,const boost::coroutines::attributes & attributes,typename enable_if<!is_executor<typename decay<Handler>::type>::value &&!is_convertible<Handler &,execution_context &>::value>::type *)
ASIO_MOVE_ARG2	asio/include/asio/detail/config.hpp	/^# define ASIO_MOVE_ARG2(/;"	d
ASIO_MOVE_CAST	asio/include/asio/detail/config.hpp	/^# define ASIO_MOVE_CAST(/;"	d
ASIO_MOVE_CAST2	asio/include/asio/detail/config.hpp	/^# define ASIO_MOVE_CAST2(/;"	d
ASIO_MSVC	asio/include/asio/detail/config.hpp	/^#  define ASIO_MSVC /;"	d
ASIO_MUTABLE_BUFFER	asio/include/asio/buffer.hpp	/^# define ASIO_MUTABLE_BUFFER /;"	d
ASIO_NATIVE_ERROR	asio/include/asio/error.hpp	/^# define ASIO_NATIVE_ERROR(/;"	d
ASIO_NETDB_ERROR	asio/include/asio/error.hpp	/^# define ASIO_NETDB_ERROR(/;"	d
ASIO_NOEXCEPT	asio/include/asio/detail/config.hpp	/^#      define ASIO_NOEXCEPT /;"	d
ASIO_NOEXCEPT	asio/include/asio/detail/config.hpp	/^#    define ASIO_NOEXCEPT /;"	d
ASIO_NOEXCEPT	asio/include/asio/detail/config.hpp	/^#   define ASIO_NOEXCEPT /;"	d
ASIO_NOEXCEPT	asio/include/asio/detail/config.hpp	/^#  define ASIO_NOEXCEPT$/;"	d
ASIO_NOEXCEPT_OR_NOTHROW	asio/include/asio/detail/config.hpp	/^#      define ASIO_NOEXCEPT_OR_NOTHROW /;"	d
ASIO_NOEXCEPT_OR_NOTHROW	asio/include/asio/detail/config.hpp	/^#    define ASIO_NOEXCEPT_OR_NOTHROW /;"	d
ASIO_NOEXCEPT_OR_NOTHROW	asio/include/asio/detail/config.hpp	/^#   define ASIO_NOEXCEPT_OR_NOTHROW /;"	d
ASIO_NOEXCEPT_OR_NOTHROW	asio/include/asio/detail/config.hpp	/^#  define ASIO_NOEXCEPT_OR_NOTHROW /;"	d
ASIO_NONDEDUCED_MOVE_ARG	asio/include/asio/detail/config.hpp	/^# define ASIO_NONDEDUCED_MOVE_ARG(/;"	d
ASIO_NO_EXCEPTIONS	asio/include/asio/detail/config.hpp	/^#  define ASIO_NO_EXCEPTIONS /;"	d
ASIO_NO_IOSTREAM	asio/include/asio/detail/config.hpp	/^#  define ASIO_NO_IOSTREAM /;"	d
ASIO_NO_TYPEID	asio/include/asio/detail/config.hpp	/^#  define ASIO_NO_TYPEID /;"	d
ASIO_NULL_STATIC_MUTEX_INIT	asio/include/asio/detail/null_static_mutex.hpp	/^#define ASIO_NULL_STATIC_MUTEX_INIT /;"	d
ASIO_OBJC_WORKAROUND	asio/include/asio/detail/push_options.hpp	/^#     define ASIO_OBJC_WORKAROUND$/;"	d
ASIO_OPTION_STORAGE	asio/include/asio/serial_port_base.hpp	/^# define ASIO_OPTION_STORAGE /;"	d
ASIO_OS_DEF	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF(/;"	d
ASIO_OS_DEF_AF_INET	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_AF_INET /;"	d
ASIO_OS_DEF_AF_INET6	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_AF_INET6 /;"	d
ASIO_OS_DEF_AF_UNSPEC	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_AF_UNSPEC /;"	d
ASIO_OS_DEF_AI_ADDRCONFIG	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_AI_ADDRCONFIG /;"	d
ASIO_OS_DEF_AI_ALL	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_AI_ALL /;"	d
ASIO_OS_DEF_AI_CANONNAME	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_AI_CANONNAME /;"	d
ASIO_OS_DEF_AI_NUMERICHOST	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_AI_NUMERICHOST /;"	d
ASIO_OS_DEF_AI_NUMERICSERV	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_AI_NUMERICSERV /;"	d
ASIO_OS_DEF_AI_PASSIVE	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_AI_PASSIVE /;"	d
ASIO_OS_DEF_AI_V4MAPPED	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_AI_V4MAPPED /;"	d
ASIO_OS_DEF_FIONBIO	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_FIONBIO /;"	d
ASIO_OS_DEF_FIONREAD	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_FIONREAD /;"	d
ASIO_OS_DEF_INADDR_ANY	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_INADDR_ANY /;"	d
ASIO_OS_DEF_IPPROTO_ICMP	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPPROTO_ICMP /;"	d
ASIO_OS_DEF_IPPROTO_ICMPV6	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPPROTO_ICMPV6 /;"	d
ASIO_OS_DEF_IPPROTO_IP	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPPROTO_IP /;"	d
ASIO_OS_DEF_IPPROTO_IPV6	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPPROTO_IPV6 /;"	d
ASIO_OS_DEF_IPPROTO_TCP	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPPROTO_TCP /;"	d
ASIO_OS_DEF_IPPROTO_UDP	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPPROTO_UDP /;"	d
ASIO_OS_DEF_IPV6_JOIN_GROUP	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPV6_JOIN_GROUP /;"	d
ASIO_OS_DEF_IPV6_LEAVE_GROUP	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPV6_LEAVE_GROUP /;"	d
ASIO_OS_DEF_IPV6_MULTICAST_HOPS	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPV6_MULTICAST_HOPS /;"	d
ASIO_OS_DEF_IPV6_MULTICAST_IF	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPV6_MULTICAST_IF /;"	d
ASIO_OS_DEF_IPV6_MULTICAST_LOOP	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPV6_MULTICAST_LOOP /;"	d
ASIO_OS_DEF_IPV6_UNICAST_HOPS	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IPV6_UNICAST_HOPS /;"	d
ASIO_OS_DEF_IP_ADD_MEMBERSHIP	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IP_ADD_MEMBERSHIP /;"	d
ASIO_OS_DEF_IP_DROP_MEMBERSHIP	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IP_DROP_MEMBERSHIP /;"	d
ASIO_OS_DEF_IP_MULTICAST_IF	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IP_MULTICAST_IF /;"	d
ASIO_OS_DEF_IP_MULTICAST_LOOP	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IP_MULTICAST_LOOP /;"	d
ASIO_OS_DEF_IP_MULTICAST_TTL	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IP_MULTICAST_TTL /;"	d
ASIO_OS_DEF_IP_TTL	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_IP_TTL /;"	d
ASIO_OS_DEF_MSG_DONTROUTE	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_MSG_DONTROUTE /;"	d
ASIO_OS_DEF_MSG_EOR	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_MSG_EOR /;"	d
ASIO_OS_DEF_MSG_OOB	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_MSG_OOB /;"	d
ASIO_OS_DEF_MSG_PEEK	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_MSG_PEEK /;"	d
ASIO_OS_DEF_SHUT_RD	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SHUT_RD /;"	d
ASIO_OS_DEF_SHUT_RDWR	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SHUT_RDWR /;"	d
ASIO_OS_DEF_SHUT_WR	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SHUT_WR /;"	d
ASIO_OS_DEF_SOCK_DGRAM	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SOCK_DGRAM /;"	d
ASIO_OS_DEF_SOCK_RAW	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SOCK_RAW /;"	d
ASIO_OS_DEF_SOCK_SEQPACKET	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SOCK_SEQPACKET /;"	d
ASIO_OS_DEF_SOCK_STREAM	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SOCK_STREAM /;"	d
ASIO_OS_DEF_SOL_SOCKET	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SOL_SOCKET /;"	d
ASIO_OS_DEF_SOMAXCONN	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SOMAXCONN /;"	d
ASIO_OS_DEF_SO_BROADCAST	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_BROADCAST /;"	d
ASIO_OS_DEF_SO_DEBUG	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_DEBUG /;"	d
ASIO_OS_DEF_SO_DONTROUTE	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_DONTROUTE /;"	d
ASIO_OS_DEF_SO_KEEPALIVE	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_KEEPALIVE /;"	d
ASIO_OS_DEF_SO_LINGER	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_LINGER /;"	d
ASIO_OS_DEF_SO_OOBINLINE	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_OOBINLINE /;"	d
ASIO_OS_DEF_SO_RCVBUF	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_RCVBUF /;"	d
ASIO_OS_DEF_SO_RCVLOWAT	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_RCVLOWAT /;"	d
ASIO_OS_DEF_SO_REUSEADDR	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_REUSEADDR /;"	d
ASIO_OS_DEF_SO_SNDBUF	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_SNDBUF /;"	d
ASIO_OS_DEF_SO_SNDLOWAT	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_SO_SNDLOWAT /;"	d
ASIO_OS_DEF_TCP_NODELAY	asio/include/asio/detail/socket_types.hpp	/^# define ASIO_OS_DEF_TCP_NODELAY /;"	d
ASIO_PACKAGED_TASK_HPP	asio/include/asio/packaged_task.hpp	/^#define ASIO_PACKAGED_TASK_HPP$/;"	d
ASIO_PLACEHOLDERS_HPP	asio/include/asio/placeholders.hpp	/^#define ASIO_PLACEHOLDERS_HPP$/;"	d
ASIO_POSIX_BASIC_DESCRIPTOR_HPP	asio/include/asio/posix/basic_descriptor.hpp	/^#define ASIO_POSIX_BASIC_DESCRIPTOR_HPP$/;"	d
ASIO_POSIX_BASIC_STREAM_DESCRIPTOR_HPP	asio/include/asio/posix/basic_stream_descriptor.hpp	/^#define ASIO_POSIX_BASIC_STREAM_DESCRIPTOR_HPP$/;"	d
ASIO_POSIX_DESCRIPTOR_BASE_HPP	asio/include/asio/posix/descriptor_base.hpp	/^#define ASIO_POSIX_DESCRIPTOR_BASE_HPP$/;"	d
ASIO_POSIX_DESCRIPTOR_HPP	asio/include/asio/posix/descriptor.hpp	/^#define ASIO_POSIX_DESCRIPTOR_HPP$/;"	d
ASIO_POSIX_STATIC_MUTEX_INIT	asio/include/asio/detail/posix_static_mutex.hpp	/^#define ASIO_POSIX_STATIC_MUTEX_INIT /;"	d
ASIO_POSIX_STREAM_DESCRIPTOR_HPP	asio/include/asio/posix/stream_descriptor.hpp	/^#define ASIO_POSIX_STREAM_DESCRIPTOR_HPP$/;"	d
ASIO_POST_HPP	asio/include/asio/post.hpp	/^#define ASIO_POST_HPP$/;"	d
ASIO_PREVENT_MACRO_SUBSTITUTION	asio/include/asio/detail/config.hpp	/^#define ASIO_PREVENT_MACRO_SUBSTITUTION$/;"	d
ASIO_PREVENT_MACRO_SUBSTITUTION	asio/include/asio/detail/socket_option.hpp	/^  int timeout ASIO_PREVENT_MACRO_SUBSTITUTION() const$/;"	f	class:asio::detail::socket_option::linger	typeref:typename:int timeout
ASIO_PREVENT_MACRO_SUBSTITUTION	asio/include/asio/detail/socket_option.hpp	/^  void timeout ASIO_PREVENT_MACRO_SUBSTITUTION(int value)$/;"	f	class:asio::detail::socket_option::linger	typeref:typename:void timeout
ASIO_PRIVATE_ASYNC_COMPOSE_DEF	asio/include/asio/impl/compose.hpp	/^#define ASIO_PRIVATE_ASYNC_COMPOSE_DEF(/;"	d
ASIO_PRIVATE_ASYNC_RESULT_DEF	asio/include/asio/impl/use_future.hpp	/^#define ASIO_PRIVATE_ASYNC_RESULT_DEF(/;"	d
ASIO_PRIVATE_BIND_EXECUTOR_CALL_DEF	asio/include/asio/bind_executor.hpp	/^#define ASIO_PRIVATE_BIND_EXECUTOR_CALL_DEF(/;"	d
ASIO_PRIVATE_CALL_OP_DEF	asio/include/asio/impl/use_future.hpp	/^#define ASIO_PRIVATE_CALL_OP_DEF(/;"	d
ASIO_PRIVATE_COMPOSED_IO_EXECUTORS_DEF	asio/include/asio/impl/compose.hpp	/^#define ASIO_PRIVATE_COMPOSED_IO_EXECUTORS_DEF(/;"	d
ASIO_PRIVATE_COMPOSED_OP_DEF	asio/include/asio/impl/compose.hpp	/^#define ASIO_PRIVATE_COMPOSED_OP_DEF(/;"	d
ASIO_PRIVATE_COMPOSED_WORK_DEF	asio/include/asio/impl/compose.hpp	/^#define ASIO_PRIVATE_COMPOSED_WORK_DEF(/;"	d
ASIO_PRIVATE_CONNECT_DEF	asio/include/asio/basic_socket_iostream.hpp	/^# define ASIO_PRIVATE_CONNECT_DEF(/;"	d
ASIO_PRIVATE_CONNECT_DEF	asio/include/asio/basic_socket_streambuf.hpp	/^# define ASIO_PRIVATE_CONNECT_DEF(/;"	d
ASIO_PRIVATE_CTR_DEF	asio/include/asio/basic_socket_iostream.hpp	/^# define ASIO_PRIVATE_CTR_DEF(/;"	d
ASIO_PRIVATE_DETACHED_DEF	asio/include/asio/impl/detached.hpp	/^#define ASIO_PRIVATE_DETACHED_DEF(/;"	d
ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR	asio/include/asio/impl/compose.hpp	/^# define ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR(/;"	d
ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR_1	asio/include/asio/impl/compose.hpp	/^# define ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR_1 /;"	d
ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR_2	asio/include/asio/impl/compose.hpp	/^# define ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR_2 /;"	d
ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR_3	asio/include/asio/impl/compose.hpp	/^# define ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR_3 /;"	d
ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR_4	asio/include/asio/impl/compose.hpp	/^# define ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR_4 /;"	d
ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR_5	asio/include/asio/impl/compose.hpp	/^# define ASIO_PRIVATE_GET_COMPOSED_IO_EXECUTOR_5 /;"	d
ASIO_PRIVATE_INITIATE_DEF	asio/include/asio/async_result.hpp	/^#define ASIO_PRIVATE_INITIATE_DEF(/;"	d
ASIO_PRIVATE_INITIATE_DEF	asio/include/asio/impl/detached.hpp	/^#define ASIO_PRIVATE_INITIATE_DEF(/;"	d
ASIO_PRIVATE_INITIATE_DEF	asio/include/asio/impl/redirect_error.hpp	/^#define ASIO_PRIVATE_INITIATE_DEF(/;"	d
ASIO_PRIVATE_INIT_WRAPPER_DEF	asio/include/asio/impl/redirect_error.hpp	/^#define ASIO_PRIVATE_INIT_WRAPPER_DEF(/;"	d
ASIO_PRIVATE_MAKE_SERVICE_DEF	asio/include/asio/execution_context.hpp	/^#define ASIO_PRIVATE_MAKE_SERVICE_DEF(/;"	d
ASIO_PRIVATE_MAKE_SERVICE_DEF	asio/include/asio/impl/execution_context.hpp	/^#define ASIO_PRIVATE_MAKE_SERVICE_DEF(/;"	d
ASIO_PRIVATE_PROMISE_SELECTOR_DEF	asio/include/asio/impl/use_future.hpp	/^#define ASIO_PRIVATE_PROMISE_SELECTOR_DEF(/;"	d
ASIO_PRIVATE_REDIRECT_ERROR_DEF	asio/include/asio/impl/redirect_error.hpp	/^#define ASIO_PRIVATE_REDIRECT_ERROR_DEF(/;"	d
ASIO_RANGE_CONNECT_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_RANGE_CONNECT_HANDLER_CHECK(/;"	d
ASIO_READ_AT_HPP	asio/include/asio/read_at.hpp	/^#define ASIO_READ_AT_HPP$/;"	d
ASIO_READ_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_READ_HANDLER_CHECK(/;"	d
ASIO_READ_HPP	asio/include/asio/read.hpp	/^#define ASIO_READ_HPP$/;"	d
ASIO_READ_UNTIL_HPP	asio/include/asio/read_until.hpp	/^#define ASIO_READ_UNTIL_HPP$/;"	d
ASIO_REBIND_ALLOC	asio/include/asio/detail/memory.hpp	/^# define ASIO_REBIND_ALLOC(/;"	d
ASIO_REDIRECT_ERROR_HPP	asio/include/asio/redirect_error.hpp	/^#define ASIO_REDIRECT_ERROR_HPP$/;"	d
ASIO_RESOLVE_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_RESOLVE_HANDLER_CHECK(/;"	d
ASIO_SERIAL_PORT_BASE_HPP	asio/include/asio/serial_port_base.hpp	/^#define ASIO_SERIAL_PORT_BASE_HPP$/;"	d
ASIO_SERIAL_PORT_HPP	asio/include/asio/serial_port.hpp	/^#define ASIO_SERIAL_PORT_HPP$/;"	d
ASIO_SHUTDOWN_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_SHUTDOWN_HANDLER_CHECK(/;"	d
ASIO_SIGNAL_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_SIGNAL_HANDLER_CHECK(/;"	d
ASIO_SIGNAL_SET_HPP	asio/include/asio/signal_set.hpp	/^#define ASIO_SIGNAL_SET_HPP$/;"	d
ASIO_SOCKET_BASE_HPP	asio/include/asio/socket_base.hpp	/^#define ASIO_SOCKET_BASE_HPP$/;"	d
ASIO_SOCKET_ERROR	asio/include/asio/error.hpp	/^# define ASIO_SOCKET_ERROR(/;"	d
ASIO_SOURCE	asio/include/asio/impl/src.hpp	/^#define ASIO_SOURCE$/;"	d
ASIO_SOURCE	asio/include/asio/ssl/impl/src.hpp	/^#define ASIO_SOURCE$/;"	d
ASIO_SPAWN_HPP	asio/include/asio/spawn.hpp	/^#define ASIO_SPAWN_HPP$/;"	d
ASIO_SSL_CONTEXT_BASE_HPP	asio/include/asio/ssl/context_base.hpp	/^#define ASIO_SSL_CONTEXT_BASE_HPP$/;"	d
ASIO_SSL_CONTEXT_HPP	asio/include/asio/ssl/context.hpp	/^#define ASIO_SSL_CONTEXT_HPP$/;"	d
ASIO_SSL_DETAIL_BUFFERED_HANDSHAKE_OP_HPP	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^#define ASIO_SSL_DETAIL_BUFFERED_HANDSHAKE_OP_HPP$/;"	d
ASIO_SSL_DETAIL_ENGINE_HPP	asio/include/asio/ssl/detail/engine.hpp	/^#define ASIO_SSL_DETAIL_ENGINE_HPP$/;"	d
ASIO_SSL_DETAIL_HANDSHAKE_OP_HPP	asio/include/asio/ssl/detail/handshake_op.hpp	/^#define ASIO_SSL_DETAIL_HANDSHAKE_OP_HPP$/;"	d
ASIO_SSL_DETAIL_IO_HPP	asio/include/asio/ssl/detail/io.hpp	/^#define ASIO_SSL_DETAIL_IO_HPP$/;"	d
ASIO_SSL_DETAIL_OPENSSL_INIT_HPP	asio/include/asio/ssl/detail/openssl_init.hpp	/^#define ASIO_SSL_DETAIL_OPENSSL_INIT_HPP$/;"	d
ASIO_SSL_DETAIL_OPENSSL_TYPES_HPP	asio/include/asio/ssl/detail/openssl_types.hpp	/^#define ASIO_SSL_DETAIL_OPENSSL_TYPES_HPP$/;"	d
ASIO_SSL_DETAIL_PASSWORD_CALLBACK_HPP	asio/include/asio/ssl/detail/password_callback.hpp	/^#define ASIO_SSL_DETAIL_PASSWORD_CALLBACK_HPP$/;"	d
ASIO_SSL_DETAIL_READ_OP_HPP	asio/include/asio/ssl/detail/read_op.hpp	/^#define ASIO_SSL_DETAIL_READ_OP_HPP$/;"	d
ASIO_SSL_DETAIL_SHUTDOWN_OP_HPP	asio/include/asio/ssl/detail/shutdown_op.hpp	/^#define ASIO_SSL_DETAIL_SHUTDOWN_OP_HPP$/;"	d
ASIO_SSL_DETAIL_STREAM_CORE_HPP	asio/include/asio/ssl/detail/stream_core.hpp	/^#define ASIO_SSL_DETAIL_STREAM_CORE_HPP$/;"	d
ASIO_SSL_DETAIL_VERIFY_CALLBACK_HPP	asio/include/asio/ssl/detail/verify_callback.hpp	/^#define ASIO_SSL_DETAIL_VERIFY_CALLBACK_HPP$/;"	d
ASIO_SSL_DETAIL_WRITE_OP_HPP	asio/include/asio/ssl/detail/write_op.hpp	/^#define ASIO_SSL_DETAIL_WRITE_OP_HPP$/;"	d
ASIO_SSL_ERROR_HPP	asio/include/asio/ssl/error.hpp	/^#define ASIO_SSL_ERROR_HPP$/;"	d
ASIO_SSL_HPP	asio/include/asio/ssl.hpp	/^#define ASIO_SSL_HPP$/;"	d
ASIO_SSL_IMPL_CONTEXT_HPP	asio/include/asio/ssl/impl/context.hpp	/^#define ASIO_SSL_IMPL_CONTEXT_HPP$/;"	d
ASIO_SSL_IMPL_SRC_HPP	asio/include/asio/ssl/impl/src.hpp	/^#define ASIO_SSL_IMPL_SRC_HPP$/;"	d
ASIO_SSL_RFC2818_VERIFICATION_HPP	asio/include/asio/ssl/rfc2818_verification.hpp	/^#define ASIO_SSL_RFC2818_VERIFICATION_HPP$/;"	d
ASIO_SSL_STREAM_BASE_HPP	asio/include/asio/ssl/stream_base.hpp	/^#define ASIO_SSL_STREAM_BASE_HPP$/;"	d
ASIO_SSL_STREAM_HPP	asio/include/asio/ssl/stream.hpp	/^#define ASIO_SSL_STREAM_HPP$/;"	d
ASIO_SSL_VERIFY_CONTEXT_HPP	asio/include/asio/ssl/verify_context.hpp	/^#define ASIO_SSL_VERIFY_CONTEXT_HPP$/;"	d
ASIO_SSL_VERIFY_MODE_HPP	asio/include/asio/ssl/verify_mode.hpp	/^#define ASIO_SSL_VERIFY_MODE_HPP$/;"	d
ASIO_STANDALONE	asio/include/asio/detail/config.hpp	/^#    define ASIO_STANDALONE /;"	d
ASIO_STANDALONE	asio/include/asio/detail/config.hpp	/^#   define ASIO_STANDALONE /;"	d
ASIO_STATIC_CONSTANT	asio/include/asio/detail/config.hpp	/^#  define ASIO_STATIC_CONSTANT(/;"	d
ASIO_STATIC_MUTEX_INIT	asio/include/asio/detail/static_mutex.hpp	/^# define ASIO_STATIC_MUTEX_INIT /;"	d
ASIO_STD_STATIC_MUTEX_INIT	asio/include/asio/detail/std_static_mutex.hpp	/^#define ASIO_STD_STATIC_MUTEX_INIT /;"	d
ASIO_STEADY_TIMER_HPP	asio/include/asio/steady_timer.hpp	/^#define ASIO_STEADY_TIMER_HPP$/;"	d
ASIO_STRAND_HPP	asio/include/asio/strand.hpp	/^#define ASIO_STRAND_HPP$/;"	d
ASIO_STREAMBUF_HPP	asio/include/asio/streambuf.hpp	/^#define ASIO_STREAMBUF_HPP$/;"	d
ASIO_STRING_VIEW_PARAM	asio/include/asio/detail/string_view.hpp	/^# define ASIO_STRING_VIEW_PARAM /;"	d
ASIO_SYNC_OP_VOID	asio/include/asio/detail/config.hpp	/^# define ASIO_SYNC_OP_VOID /;"	d
ASIO_SYNC_OP_VOID_RETURN	asio/include/asio/detail/config.hpp	/^# define ASIO_SYNC_OP_VOID_RETURN(/;"	d
ASIO_SYSTEM_CONTEXT_HPP	asio/include/asio/system_context.hpp	/^#define ASIO_SYSTEM_CONTEXT_HPP$/;"	d
ASIO_SYSTEM_ERROR_HPP	asio/include/asio/system_error.hpp	/^#define ASIO_SYSTEM_ERROR_HPP$/;"	d
ASIO_SYSTEM_EXECUTOR_HPP	asio/include/asio/system_executor.hpp	/^#define ASIO_SYSTEM_EXECUTOR_HPP$/;"	d
ASIO_SYSTEM_TIMER_HPP	asio/include/asio/system_timer.hpp	/^#define ASIO_SYSTEM_TIMER_HPP$/;"	d
ASIO_TEST_CASE	asio/src/tests/unit/unit_test.hpp	/^#define ASIO_TEST_CASE(/;"	d
ASIO_TEST_IOSTREAM	asio/src/tests/unit/unit_test.hpp	/^# define ASIO_TEST_IOSTREAM /;"	d
ASIO_TEST_SUITE	asio/src/tests/unit/unit_test.hpp	/^#define ASIO_TEST_SUITE(/;"	d
ASIO_THIS_CORO_HPP	asio/include/asio/this_coro.hpp	/^#define ASIO_THIS_CORO_HPP$/;"	d
ASIO_THREAD_HPP	asio/include/asio/thread.hpp	/^#define ASIO_THREAD_HPP$/;"	d
ASIO_THREAD_KEYWORD	asio/include/asio/detail/config.hpp	/^#     define ASIO_THREAD_KEYWORD /;"	d
ASIO_THREAD_KEYWORD	asio/include/asio/detail/config.hpp	/^#   define ASIO_THREAD_KEYWORD /;"	d
ASIO_THREAD_KEYWORD	asio/include/asio/detail/config.hpp	/^# define ASIO_THREAD_KEYWORD /;"	d
ASIO_THREAD_POOL_HPP	asio/include/asio/thread_pool.hpp	/^#define ASIO_THREAD_POOL_HPP$/;"	d
ASIO_TIME_TRAITS_HPP	asio/include/asio/time_traits.hpp	/^#define ASIO_TIME_TRAITS_HPP$/;"	d
ASIO_TS_BUFFER_HPP	asio/include/asio/ts/buffer.hpp	/^#define ASIO_TS_BUFFER_HPP$/;"	d
ASIO_TS_EXECUTOR_HPP	asio/include/asio/ts/executor.hpp	/^#define ASIO_TS_EXECUTOR_HPP$/;"	d
ASIO_TS_INTERNET_HPP	asio/include/asio/ts/internet.hpp	/^#define ASIO_TS_INTERNET_HPP$/;"	d
ASIO_TS_IO_CONTEXT_HPP	asio/include/asio/ts/io_context.hpp	/^#define ASIO_TS_IO_CONTEXT_HPP$/;"	d
ASIO_TS_NETFWD_HPP	asio/include/asio/ts/netfwd.hpp	/^#define ASIO_TS_NETFWD_HPP$/;"	d
ASIO_TS_NET_HPP	asio/include/asio/ts/net.hpp	/^#define ASIO_TS_NET_HPP$/;"	d
ASIO_TS_SOCKET_HPP	asio/include/asio/ts/socket.hpp	/^#define ASIO_TS_SOCKET_HPP$/;"	d
ASIO_TS_TIMER_HPP	asio/include/asio/ts/timer.hpp	/^#define ASIO_TS_TIMER_HPP$/;"	d
ASIO_UNUSED_TYPEDEF	asio/include/asio/detail/config.hpp	/^#   define ASIO_UNUSED_TYPEDEF /;"	d
ASIO_UNUSED_TYPEDEF	asio/include/asio/detail/config.hpp	/^#  define ASIO_UNUSED_TYPEDEF /;"	d
ASIO_UNUSED_TYPEDEF	asio/include/asio/detail/config.hpp	/^# define ASIO_UNUSED_TYPEDEF$/;"	d
ASIO_UNUSED_VARIABLE	asio/include/asio/detail/config.hpp	/^#  define ASIO_UNUSED_VARIABLE /;"	d
ASIO_UNUSED_VARIABLE	asio/include/asio/detail/config.hpp	/^# define ASIO_UNUSED_VARIABLE$/;"	d
ASIO_UNUSED_VARIABLE	asio/include/asio/error.hpp	/^  addrinfo_category ASIO_UNUSED_VARIABLE$/;"	v	namespace:asio::error	typeref:typename:const asio::error_category & addrinfo_category
ASIO_UNUSED_VARIABLE	asio/include/asio/error.hpp	/^  misc_category ASIO_UNUSED_VARIABLE$/;"	v	namespace:asio::error	typeref:typename:const asio::error_category & misc_category
ASIO_UNUSED_VARIABLE	asio/include/asio/error.hpp	/^  netdb_category ASIO_UNUSED_VARIABLE$/;"	v	namespace:asio::error	typeref:typename:const asio::error_category & netdb_category
ASIO_UNUSED_VARIABLE	asio/include/asio/error.hpp	/^  system_category ASIO_UNUSED_VARIABLE$/;"	v	namespace:asio::error	typeref:typename:const asio::error_category & system_category
ASIO_UNUSED_VARIABLE	asio/include/asio/ssl/error.hpp	/^  ssl_category ASIO_UNUSED_VARIABLE$/;"	v	namespace:asio::error	typeref:typename:const asio::error_category & ssl_category
ASIO_UNUSED_VARIABLE	asio/include/asio/ssl/error.hpp	/^  stream_category ASIO_UNUSED_VARIABLE$/;"	v	namespace:asio::ssl::error	typeref:typename:const asio::error_category & stream_category
ASIO_USES_ALLOCATOR	asio/include/asio/detail/memory.hpp	/^# define ASIO_USES_ALLOCATOR(/;"	d
ASIO_USES_EXECUTOR_HPP	asio/include/asio/uses_executor.hpp	/^#define ASIO_USES_EXECUTOR_HPP$/;"	d
ASIO_USE_AWAITABLE_HPP	asio/include/asio/use_awaitable.hpp	/^#define ASIO_USE_AWAITABLE_HPP$/;"	d
ASIO_USE_FUTURE_HPP	asio/include/asio/use_future.hpp	/^#define ASIO_USE_FUTURE_HPP$/;"	d
ASIO_VARIADIC_BYVAL_ARGS	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_ARGS(/;"	d
ASIO_VARIADIC_BYVAL_ARGS_1	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_ARGS_1 /;"	d
ASIO_VARIADIC_BYVAL_ARGS_2	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_ARGS_2 /;"	d
ASIO_VARIADIC_BYVAL_ARGS_3	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_ARGS_3 /;"	d
ASIO_VARIADIC_BYVAL_ARGS_4	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_ARGS_4 /;"	d
ASIO_VARIADIC_BYVAL_ARGS_5	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_ARGS_5 /;"	d
ASIO_VARIADIC_BYVAL_PARAMS	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_PARAMS(/;"	d
ASIO_VARIADIC_BYVAL_PARAMS_1	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_PARAMS_1 /;"	d
ASIO_VARIADIC_BYVAL_PARAMS_2	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_PARAMS_2 /;"	d
ASIO_VARIADIC_BYVAL_PARAMS_3	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_PARAMS_3 /;"	d
ASIO_VARIADIC_BYVAL_PARAMS_4	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_PARAMS_4 /;"	d
ASIO_VARIADIC_BYVAL_PARAMS_5	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_BYVAL_PARAMS_5 /;"	d
ASIO_VARIADIC_CONSTREF_PARAMS	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_CONSTREF_PARAMS(/;"	d
ASIO_VARIADIC_CONSTREF_PARAMS_1	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_CONSTREF_PARAMS_1 /;"	d
ASIO_VARIADIC_CONSTREF_PARAMS_2	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_CONSTREF_PARAMS_2 /;"	d
ASIO_VARIADIC_CONSTREF_PARAMS_3	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_CONSTREF_PARAMS_3 /;"	d
ASIO_VARIADIC_CONSTREF_PARAMS_4	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_CONSTREF_PARAMS_4 /;"	d
ASIO_VARIADIC_CONSTREF_PARAMS_5	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_CONSTREF_PARAMS_5 /;"	d
ASIO_VARIADIC_DECAY	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_DECAY(/;"	d
ASIO_VARIADIC_DECAY_1	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_DECAY_1 /;"	d
ASIO_VARIADIC_DECAY_2	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_DECAY_2 /;"	d
ASIO_VARIADIC_DECAY_3	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_DECAY_3 /;"	d
ASIO_VARIADIC_DECAY_4	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_DECAY_4 /;"	d
ASIO_VARIADIC_DECAY_5	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_DECAY_5 /;"	d
ASIO_VARIADIC_GENERATE	asio/include/asio/basic_socket_streambuf.hpp	/^  ASIO_VARIADIC_GENERATE(ASIO_PRIVATE_CONNECT_DEF)$/;"	f	class:asio::basic_socket_streambuf
ASIO_VARIADIC_GENERATE	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_GENERATE(/;"	d
ASIO_VARIADIC_GENERATE	asio/include/asio/impl/execution_context.hpp	/^  ASIO_VARIADIC_GENERATE(ASIO_PRIVATE_MAKE_SERVICE_DEF)$/;"	f	namespace:asio
ASIO_VARIADIC_MOVE_ARGS	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_ARGS(/;"	d
ASIO_VARIADIC_MOVE_ARGS_1	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_ARGS_1 /;"	d
ASIO_VARIADIC_MOVE_ARGS_2	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_ARGS_2 /;"	d
ASIO_VARIADIC_MOVE_ARGS_3	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_ARGS_3 /;"	d
ASIO_VARIADIC_MOVE_ARGS_4	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_ARGS_4 /;"	d
ASIO_VARIADIC_MOVE_ARGS_5	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_ARGS_5 /;"	d
ASIO_VARIADIC_MOVE_DECLVAL	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_DECLVAL(/;"	d
ASIO_VARIADIC_MOVE_DECLVAL_1	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_DECLVAL_1 /;"	d
ASIO_VARIADIC_MOVE_DECLVAL_2	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_DECLVAL_2 /;"	d
ASIO_VARIADIC_MOVE_DECLVAL_3	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_DECLVAL_3 /;"	d
ASIO_VARIADIC_MOVE_DECLVAL_4	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_DECLVAL_4 /;"	d
ASIO_VARIADIC_MOVE_DECLVAL_5	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_DECLVAL_5 /;"	d
ASIO_VARIADIC_MOVE_PARAMS	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_PARAMS(/;"	d
ASIO_VARIADIC_MOVE_PARAMS_1	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_PARAMS_1 /;"	d
ASIO_VARIADIC_MOVE_PARAMS_2	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_PARAMS_2 /;"	d
ASIO_VARIADIC_MOVE_PARAMS_3	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_PARAMS_3 /;"	d
ASIO_VARIADIC_MOVE_PARAMS_4	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_PARAMS_4 /;"	d
ASIO_VARIADIC_MOVE_PARAMS_5	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_MOVE_PARAMS_5 /;"	d
ASIO_VARIADIC_TARGS	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TARGS(/;"	d
ASIO_VARIADIC_TARGS_1	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TARGS_1 /;"	d
ASIO_VARIADIC_TARGS_2	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TARGS_2 /;"	d
ASIO_VARIADIC_TARGS_3	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TARGS_3 /;"	d
ASIO_VARIADIC_TARGS_4	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TARGS_4 /;"	d
ASIO_VARIADIC_TARGS_5	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TARGS_5 /;"	d
ASIO_VARIADIC_TPARAMS	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TPARAMS(/;"	d
ASIO_VARIADIC_TPARAMS_1	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TPARAMS_1 /;"	d
ASIO_VARIADIC_TPARAMS_2	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TPARAMS_2 /;"	d
ASIO_VARIADIC_TPARAMS_3	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TPARAMS_3 /;"	d
ASIO_VARIADIC_TPARAMS_4	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TPARAMS_4 /;"	d
ASIO_VARIADIC_TPARAMS_5	asio/include/asio/detail/variadic_templates.hpp	/^# define ASIO_VARIADIC_TPARAMS_5 /;"	d
ASIO_VERSION	asio/include/asio/version.hpp	/^#define ASIO_VERSION /;"	d
ASIO_VERSION_HPP	asio/include/asio/version.hpp	/^#define ASIO_VERSION_HPP$/;"	d
ASIO_WAIT_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_WAIT_HANDLER_CHECK(/;"	d
ASIO_WAIT_TRAITS_HPP	asio/include/asio/wait_traits.hpp	/^#define ASIO_WAIT_TRAITS_HPP$/;"	d
ASIO_WARN_MESSAGE	asio/src/tests/unit/unit_test.hpp	/^#define ASIO_WARN_MESSAGE(/;"	d
ASIO_WINDOWS	asio/include/asio/detail/config.hpp	/^#   define ASIO_WINDOWS /;"	d
ASIO_WINDOWS_APP	asio/include/asio/detail/config.hpp	/^#   define ASIO_WINDOWS_APP /;"	d
ASIO_WINDOWS_BASIC_OBJECT_HANDLE_HPP	asio/include/asio/windows/basic_object_handle.hpp	/^#define ASIO_WINDOWS_BASIC_OBJECT_HANDLE_HPP$/;"	d
ASIO_WINDOWS_BASIC_OVERLAPPED_HANDLE_HPP	asio/include/asio/windows/basic_overlapped_handle.hpp	/^#define ASIO_WINDOWS_BASIC_OVERLAPPED_HANDLE_HPP$/;"	d
ASIO_WINDOWS_BASIC_RANDOM_ACCESS_HANDLE_HPP	asio/include/asio/windows/basic_random_access_handle.hpp	/^#define ASIO_WINDOWS_BASIC_RANDOM_ACCESS_HANDLE_HPP$/;"	d
ASIO_WINDOWS_BASIC_STREAM_HANDLE_HPP	asio/include/asio/windows/basic_stream_handle.hpp	/^#define ASIO_WINDOWS_BASIC_STREAM_HANDLE_HPP$/;"	d
ASIO_WINDOWS_OBJECT_HANDLE_HPP	asio/include/asio/windows/object_handle.hpp	/^#define ASIO_WINDOWS_OBJECT_HANDLE_HPP$/;"	d
ASIO_WINDOWS_OVERLAPPED_HANDLE_HPP	asio/include/asio/windows/overlapped_handle.hpp	/^#define ASIO_WINDOWS_OVERLAPPED_HANDLE_HPP$/;"	d
ASIO_WINDOWS_OVERLAPPED_PTR_HPP	asio/include/asio/windows/overlapped_ptr.hpp	/^#define ASIO_WINDOWS_OVERLAPPED_PTR_HPP$/;"	d
ASIO_WINDOWS_RANDOM_ACCESS_HANDLE_HPP	asio/include/asio/windows/random_access_handle.hpp	/^#define ASIO_WINDOWS_RANDOM_ACCESS_HANDLE_HPP$/;"	d
ASIO_WINDOWS_RUNTIME	asio/include/asio/detail/config.hpp	/^#    define ASIO_WINDOWS_RUNTIME /;"	d
ASIO_WINDOWS_STREAM_HANDLE_HPP	asio/include/asio/windows/stream_handle.hpp	/^#define ASIO_WINDOWS_STREAM_HANDLE_HPP$/;"	d
ASIO_WIN_OR_POSIX	asio/include/asio/error.hpp	/^# define ASIO_WIN_OR_POSIX(/;"	d
ASIO_WIN_STATIC_MUTEX_INIT	asio/include/asio/detail/win_static_mutex.hpp	/^# define ASIO_WIN_STATIC_MUTEX_INIT /;"	d
ASIO_WRITE_AT_HPP	asio/include/asio/write_at.hpp	/^#define ASIO_WRITE_AT_HPP$/;"	d
ASIO_WRITE_HANDLER_CHECK	asio/include/asio/detail/handler_type_requirements.hpp	/^#define ASIO_WRITE_HANDLER_CHECK(/;"	d
ASIO_WRITE_HPP	asio/include/asio/write.hpp	/^#define ASIO_WRITE_HPP$/;"	d
ASIO_WSPIAPI_H_DEFINED	asio/include/asio/detail/socket_types.hpp	/^#   define ASIO_WSPIAPI_H_DEFINED$/;"	d
AUTOMAKE_OPTIONS	asio/Makefile.am	/^AUTOMAKE_OPTIONS = foreign dist-bzip2 dist-zip$/;"	m
AUTOMAKE_OPTIONS	asio/src/examples/cpp03/Makefile.am	/^AUTOMAKE_OPTIONS = subdir-objects$/;"	m
AUTOMAKE_OPTIONS	asio/src/examples/cpp11/Makefile.am	/^AUTOMAKE_OPTIONS = subdir-objects$/;"	m
AUTOMAKE_OPTIONS	asio/src/examples/cpp14/Makefile.am	/^AUTOMAKE_OPTIONS = subdir-objects$/;"	m
AUTOMAKE_OPTIONS	asio/src/tests/Makefile.am	/^AUTOMAKE_OPTIONS = subdir-objects$/;"	m
Args	asio/include/asio/impl/redirect_error.hpp	/^  typedef R type(Args...);$/;"	t	struct:asio::detail::redirect_error_signature	typeref:typename:R type (...)
BOOST_ALL_NO_LIB	asio/src/tests/unit/associated_allocator.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/associated_executor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/async_result.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/awaitable.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_datagram_socket.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_deadline_timer.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_raw_socket.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_seq_packet_socket.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_serial_port.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_signal_set.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_socket.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_socket_acceptor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_stream_socket.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_streambuf.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/basic_waitable_timer.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/bind_executor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/buffer.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/buffered_read_stream.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/buffered_stream.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/buffered_write_stream.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/buffers_iterator.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/co_spawn.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/completion_condition.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/compose.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/connect.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/coroutine.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/deadline_timer.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/defer.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/detached.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/dispatch.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/error.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/execution_context.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/executor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/executor_work_guard.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/generic/basic_endpoint.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/generic/datagram_protocol.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/generic/raw_protocol.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/generic/seq_packet_protocol.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/generic/stream_protocol.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/high_resolution_timer.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/io_context.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/io_context_strand.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/address.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/address_v4.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/address_v4_iterator.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/address_v4_range.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/address_v6.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/address_v6_iterator.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/address_v6_range.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/basic_endpoint.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/basic_resolver.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/basic_resolver_entry.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/basic_resolver_iterator.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/basic_resolver_query.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/host_name.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/icmp.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/multicast.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/network_v4.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/network_v6.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/resolver_query_base.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/tcp.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/udp.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/unicast.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ip/v6_only.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/is_read_buffered.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/is_write_buffered.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/local/basic_endpoint.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/local/connect_pair.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/local/datagram_protocol.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/local/stream_protocol.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/packaged_task.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/placeholders.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/posix/basic_descriptor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/posix/basic_stream_descriptor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/posix/descriptor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/posix/descriptor_base.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/posix/stream_descriptor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/post.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/read.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/read_at.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/read_until.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/redirect_error.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/serial_port.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/serial_port_base.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/signal_set.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/socket_base.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ssl/context.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ssl/context_base.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ssl/error.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ssl/rfc2818_verification.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ssl/stream.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ssl/stream_base.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/steady_timer.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/strand.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/streambuf.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/system_context.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/system_executor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/system_timer.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/this_coro.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/thread.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/time_traits.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ts/buffer.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ts/executor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ts/internet.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ts/io_context.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ts/net.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ts/netfwd.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ts/socket.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/ts/timer.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/use_awaitable.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/use_future.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/uses_executor.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/wait_traits.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/windows/basic_object_handle.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/windows/basic_overlapped_handle.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/windows/basic_random_access_handle.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/windows/basic_stream_handle.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/windows/object_handle.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/windows/overlapped_handle.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/windows/overlapped_ptr.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/windows/random_access_handle.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/windows/stream_handle.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/write.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ALL_NO_LIB	asio/src/tests/unit/write_at.cpp	/^#define BOOST_ALL_NO_LIB /;"	d	file:
BOOST_ASIO_HAS_MOVE	asio/include/asio/detail/config.hpp	/^#      define BOOST_ASIO_HAS_MOVE /;"	d
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/high_resolution_timer.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/steady_timer.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/system_context.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/system_executor.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/system_timer.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/ts/buffer.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/ts/executor.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/ts/internet.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/ts/io_context.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/ts/net.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/ts/netfwd.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/ts/socket.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
BOOST_SYSTEM_NO_DEPRECATED	asio/src/tests/unit/ts/timer.cpp	/^#define BOOST_SYSTEM_NO_DEPRECATED$/;"	d	file:
Byte	asio/include/asio/detail/old_win_sdk_compat.hpp	/^    u_char Byte[16];$/;"	m	union:asio::detail::in6_addr_emulation::__anoned65e276020a	typeref:typename:u_char[16]
CHAT_MESSAGE_HPP	asio/src/examples/cpp03/chat/chat_message.hpp	/^#define CHAT_MESSAGE_HPP$/;"	d
CHAT_MESSAGE_HPP	asio/src/examples/cpp11/chat/chat_message.hpp	/^#define CHAT_MESSAGE_HPP$/;"	d
CUSTOM_TRACKING_HPP	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^#define CUSTOM_TRACKING_HPP$/;"	d
DIST_SUBDIRS	asio/src/Makefile.am	/^DIST_SUBDIRS = examples\/cpp03 examples\/cpp11 examples\/cpp14 examples\/cpp17 tests$/;"	m
DecayedHandler	asio/include/asio/impl/defer.hpp	/^    typedef typename decay<CompletionHandler>::type DecayedHandler;$/;"	t	function:asio::detail::initiate_defer::operator ()	typeref:typename:decay<CompletionHandler>::type
DecayedHandler	asio/include/asio/impl/defer.hpp	/^    typedef typename decay<CompletionHandler>::type DecayedHandler;$/;"	t	function:asio::detail::initiate_defer_with_executor::operator ()	typeref:typename:decay<CompletionHandler>::type
DecayedHandler	asio/include/asio/impl/dispatch.hpp	/^    typedef typename decay<CompletionHandler>::type DecayedHandler;$/;"	t	function:asio::detail::initiate_dispatch::operator ()	typeref:typename:decay<CompletionHandler>::type
DecayedHandler	asio/include/asio/impl/dispatch.hpp	/^    typedef typename decay<CompletionHandler>::type DecayedHandler;$/;"	t	function:asio::detail::initiate_dispatch_with_executor::operator ()	typeref:typename:decay<CompletionHandler>::type
DecayedHandler	asio/include/asio/impl/post.hpp	/^    typedef typename decay<CompletionHandler>::type DecayedHandler;$/;"	t	function:asio::detail::initiate_post::operator ()	typeref:typename:decay<CompletionHandler>::type
DecayedHandler	asio/include/asio/impl/post.hpp	/^    typedef typename decay<CompletionHandler>::type DecayedHandler;$/;"	t	function:asio::detail::initiate_post_with_executor::operator ()	typeref:typename:decay<CompletionHandler>::type
EAI_AGAIN	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define EAI_AGAIN /;"	d
EAI_BADFLAGS	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define EAI_BADFLAGS /;"	d
EAI_FAIL	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define EAI_FAIL /;"	d
EAI_FAMILY	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define EAI_FAMILY /;"	d
EAI_MEMORY	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define EAI_MEMORY /;"	d
EAI_NODATA	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define EAI_NODATA /;"	d
EAI_NONAME	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define EAI_NONAME /;"	d
EAI_SERVICE	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define EAI_SERVICE /;"	d
EAI_SOCKTYPE	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define EAI_SOCKTYPE /;"	d
EV_OOBAND	asio/include/asio/detail/kqueue_reactor.hpp	/^# define EV_OOBAND /;"	d
EXAMPLES_CPP03	asio/src/Makefile.am	/^EXAMPLES_CPP03 = examples\/cpp03$/;"	m
EXAMPLES_CPP11	asio/src/Makefile.am	/^EXAMPLES_CPP11 = examples\/cpp11$/;"	m
EXAMPLES_CPP14	asio/src/Makefile.am	/^EXAMPLES_CPP14 = examples\/cpp14$/;"	m
EXTRA_DIST	asio/Makefile.am	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	asio/src/Makefile.am	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	asio/src/examples/cpp03/Makefile.am	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	asio/src/examples/cpp11/Makefile.am	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	asio/src/examples/cpp17/Makefile.am	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	asio/src/tests/Makefile.am	/^EXTRA_DIST = \\$/;"	m
HANDLER_ALLOCATOR_HPP	asio/src/tests/performance/handler_allocator.hpp	/^#define HANDLER_ALLOCATOR_HPP$/;"	d
HAVE_BOOST_COROUTINE	asio/configure.ac	/^AM_CONDITIONAL(HAVE_BOOST_COROUTINE,test x$HAVE_BOOST_COROUTINE = xyes)$/;"	c
HAVE_CXX11	asio/configure.ac	/^AM_CONDITIONAL(HAVE_CXX11,test x$HAVE_CXX11 = xyes)$/;"	c
HAVE_CXX14	asio/configure.ac	/^AM_CONDITIONAL(HAVE_CXX14,test x$HAVE_CXX14 = xyes)$/;"	c
HAVE_OPENSSL	asio/configure.ac	/^AM_CONDITIONAL(HAVE_OPENSSL,test x$OPENSSL_FOUND != xno)$/;"	c
HIGH_RES_CLOCK_HPP	asio/src/tests/latency/high_res_clock.hpp	/^#define HIGH_RES_CLOCK_HPP$/;"	d
HTTP_CONNECTION_HPP	asio/src/examples/cpp03/http/server/connection.hpp	/^#define HTTP_CONNECTION_HPP$/;"	d
HTTP_CONNECTION_HPP	asio/src/examples/cpp11/http/server/connection.hpp	/^#define HTTP_CONNECTION_HPP$/;"	d
HTTP_CONNECTION_MANAGER_HPP	asio/src/examples/cpp03/http/server/connection_manager.hpp	/^#define HTTP_CONNECTION_MANAGER_HPP$/;"	d
HTTP_CONNECTION_MANAGER_HPP	asio/src/examples/cpp11/http/server/connection_manager.hpp	/^#define HTTP_CONNECTION_MANAGER_HPP$/;"	d
HTTP_HEADER_HPP	asio/src/examples/cpp03/http/server/header.hpp	/^#define HTTP_HEADER_HPP$/;"	d
HTTP_HEADER_HPP	asio/src/examples/cpp11/http/server/header.hpp	/^#define HTTP_HEADER_HPP$/;"	d
HTTP_MIME_TYPES_HPP	asio/src/examples/cpp03/http/server/mime_types.hpp	/^#define HTTP_MIME_TYPES_HPP$/;"	d
HTTP_MIME_TYPES_HPP	asio/src/examples/cpp11/http/server/mime_types.hpp	/^#define HTTP_MIME_TYPES_HPP$/;"	d
HTTP_REPLY_HPP	asio/src/examples/cpp03/http/server/reply.hpp	/^#define HTTP_REPLY_HPP$/;"	d
HTTP_REPLY_HPP	asio/src/examples/cpp11/http/server/reply.hpp	/^#define HTTP_REPLY_HPP$/;"	d
HTTP_REQUEST_HANDLER_HPP	asio/src/examples/cpp03/http/server/request_handler.hpp	/^#define HTTP_REQUEST_HANDLER_HPP$/;"	d
HTTP_REQUEST_HANDLER_HPP	asio/src/examples/cpp11/http/server/request_handler.hpp	/^#define HTTP_REQUEST_HANDLER_HPP$/;"	d
HTTP_REQUEST_HPP	asio/src/examples/cpp03/http/server/request.hpp	/^#define HTTP_REQUEST_HPP$/;"	d
HTTP_REQUEST_HPP	asio/src/examples/cpp11/http/server/request.hpp	/^#define HTTP_REQUEST_HPP$/;"	d
HTTP_REQUEST_PARSER_HPP	asio/src/examples/cpp03/http/server/request_parser.hpp	/^#define HTTP_REQUEST_PARSER_HPP$/;"	d
HTTP_REQUEST_PARSER_HPP	asio/src/examples/cpp11/http/server/request_parser.hpp	/^#define HTTP_REQUEST_PARSER_HPP$/;"	d
HTTP_SERVER2_CONNECTION_HPP	asio/src/examples/cpp03/http/server2/connection.hpp	/^#define HTTP_SERVER2_CONNECTION_HPP$/;"	d
HTTP_SERVER2_HEADER_HPP	asio/src/examples/cpp03/http/server2/header.hpp	/^#define HTTP_SERVER2_HEADER_HPP$/;"	d
HTTP_SERVER2_IO_SERVICE_POOL_HPP	asio/src/examples/cpp03/http/server2/io_context_pool.hpp	/^#define HTTP_SERVER2_IO_SERVICE_POOL_HPP$/;"	d
HTTP_SERVER2_MIME_TYPES_HPP	asio/src/examples/cpp03/http/server2/mime_types.hpp	/^#define HTTP_SERVER2_MIME_TYPES_HPP$/;"	d
HTTP_SERVER2_REPLY_HPP	asio/src/examples/cpp03/http/server2/reply.hpp	/^#define HTTP_SERVER2_REPLY_HPP$/;"	d
HTTP_SERVER2_REQUEST_HANDLER_HPP	asio/src/examples/cpp03/http/server2/request_handler.hpp	/^#define HTTP_SERVER2_REQUEST_HANDLER_HPP$/;"	d
HTTP_SERVER2_REQUEST_HPP	asio/src/examples/cpp03/http/server2/request.hpp	/^#define HTTP_SERVER2_REQUEST_HPP$/;"	d
HTTP_SERVER2_REQUEST_PARSER_HPP	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^#define HTTP_SERVER2_REQUEST_PARSER_HPP$/;"	d
HTTP_SERVER2_SERVER_HPP	asio/src/examples/cpp03/http/server2/server.hpp	/^#define HTTP_SERVER2_SERVER_HPP$/;"	d
HTTP_SERVER3_CONNECTION_HPP	asio/src/examples/cpp03/http/server3/connection.hpp	/^#define HTTP_SERVER3_CONNECTION_HPP$/;"	d
HTTP_SERVER3_HEADER_HPP	asio/src/examples/cpp03/http/server3/header.hpp	/^#define HTTP_SERVER3_HEADER_HPP$/;"	d
HTTP_SERVER3_MIME_TYPES_HPP	asio/src/examples/cpp03/http/server3/mime_types.hpp	/^#define HTTP_SERVER3_MIME_TYPES_HPP$/;"	d
HTTP_SERVER3_REPLY_HPP	asio/src/examples/cpp03/http/server3/reply.hpp	/^#define HTTP_SERVER3_REPLY_HPP$/;"	d
HTTP_SERVER3_REQUEST_HANDLER_HPP	asio/src/examples/cpp03/http/server3/request_handler.hpp	/^#define HTTP_SERVER3_REQUEST_HANDLER_HPP$/;"	d
HTTP_SERVER3_REQUEST_HPP	asio/src/examples/cpp03/http/server3/request.hpp	/^#define HTTP_SERVER3_REQUEST_HPP$/;"	d
HTTP_SERVER3_REQUEST_PARSER_HPP	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^#define HTTP_SERVER3_REQUEST_PARSER_HPP$/;"	d
HTTP_SERVER3_SERVER_HPP	asio/src/examples/cpp03/http/server3/server.hpp	/^#define HTTP_SERVER3_SERVER_HPP$/;"	d
HTTP_SERVER4_FILE_HANDLER_HPP	asio/src/examples/cpp03/http/server4/file_handler.hpp	/^#define HTTP_SERVER4_FILE_HANDLER_HPP$/;"	d
HTTP_SERVER4_HEADER_HPP	asio/src/examples/cpp03/http/server4/header.hpp	/^#define HTTP_SERVER4_HEADER_HPP$/;"	d
HTTP_SERVER4_MIME_TYPES_HPP	asio/src/examples/cpp03/http/server4/mime_types.hpp	/^#define HTTP_SERVER4_MIME_TYPES_HPP$/;"	d
HTTP_SERVER4_REPLY_HPP	asio/src/examples/cpp03/http/server4/reply.hpp	/^#define HTTP_SERVER4_REPLY_HPP$/;"	d
HTTP_SERVER4_REQUEST_HPP	asio/src/examples/cpp03/http/server4/request.hpp	/^#define HTTP_SERVER4_REQUEST_HPP$/;"	d
HTTP_SERVER4_REQUEST_PARSER_HPP	asio/src/examples/cpp03/http/server4/request_parser.hpp	/^#define HTTP_SERVER4_REQUEST_PARSER_HPP$/;"	d
HTTP_SERVER4_SERVER_HPP	asio/src/examples/cpp03/http/server4/server.hpp	/^#define HTTP_SERVER4_SERVER_HPP$/;"	d
HTTP_SERVER_HPP	asio/src/examples/cpp03/http/server/server.hpp	/^#define HTTP_SERVER_HPP$/;"	d
HTTP_SERVER_HPP	asio/src/examples/cpp11/http/server/server.hpp	/^#define HTTP_SERVER_HPP$/;"	d
ICMP_HEADER_HPP	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^#define ICMP_HEADER_HPP$/;"	d
IPPROTO_ICMPV6	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define IPPROTO_ICMPV6 /;"	d
IPPROTO_IPV6	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define IPPROTO_IPV6 /;"	d
IPV4_HEADER_HPP	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^#define IPV4_HEADER_HPP$/;"	d
IPV6_JOIN_GROUP	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define IPV6_JOIN_GROUP /;"	d
IPV6_LEAVE_GROUP	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define IPV6_LEAVE_GROUP /;"	d
IPV6_MULTICAST_HOPS	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define IPV6_MULTICAST_HOPS /;"	d
IPV6_MULTICAST_IF	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define IPV6_MULTICAST_IF /;"	d
IPV6_MULTICAST_LOOP	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define IPV6_MULTICAST_LOOP /;"	d
IPV6_UNICAST_HOPS	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define IPV6_UNICAST_HOPS /;"	d
IPV6_V6ONLY	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define IPV6_V6ONLY /;"	d
LDADD	asio/src/examples/cpp03/Makefile.am	/^LDADD = libasio.a$/;"	m
LDADD	asio/src/examples/cpp11/Makefile.am	/^LDADD = libasio.a$/;"	m
LDADD	asio/src/examples/cpp14/Makefile.am	/^LDADD = libasio.a$/;"	m
LDADD	asio/src/tests/Makefile.am	/^LDADD = libasio.a$/;"	m
MAINTAINERCLEANFILES	asio/Makefile.am	/^MAINTAINERCLEANFILES = \\$/;"	m
MAINTAINERCLEANFILES	asio/include/Makefile.am	/^MAINTAINERCLEANFILES = \\$/;"	m
MAINTAINERCLEANFILES	asio/src/Makefile.am	/^MAINTAINERCLEANFILES = \\$/;"	m
MAINTAINERCLEANFILES	asio/src/examples/cpp03/Makefile.am	/^MAINTAINERCLEANFILES = \\$/;"	m
MAINTAINERCLEANFILES	asio/src/examples/cpp11/Makefile.am	/^MAINTAINERCLEANFILES = \\$/;"	m
MAINTAINERCLEANFILES	asio/src/examples/cpp14/Makefile.am	/^MAINTAINERCLEANFILES = \\$/;"	m
MAINTAINERCLEANFILES	asio/src/examples/cpp17/Makefile.am	/^MAINTAINERCLEANFILES = \\$/;"	m
MAINTAINERCLEANFILES	asio/src/tests/Makefile.am	/^MAINTAINERCLEANFILES = \\$/;"	m
NI_DGRAM	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define NI_DGRAM /;"	d
NI_NAMEREQD	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define NI_NAMEREQD /;"	d
NI_NOFQDN	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define NI_NOFQDN /;"	d
NI_NUMERICHOST	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define NI_NUMERICHOST /;"	d
NI_NUMERICSERV	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define NI_NUMERICSERV /;"	d
NOMINMAX	asio/include/asio/detail/config.hpp	/^#   define NOMINMAX /;"	d
PORTHOPPER_PROTOCOL_HPP	asio/src/examples/cpp03/porthopper/protocol.hpp	/^#define PORTHOPPER_PROTOCOL_HPP$/;"	d
Protocol	asio/include/asio/detail/push_options.hpp	/^#     define Protocol /;"	d
SEPARATE_COMPILATION	asio/configure.ac	/^AM_CONDITIONAL(SEPARATE_COMPILATION,test x$SEPARATE_COMPILATION = xyes)$/;"	c
SERIALIZATION_CONNECTION_HPP	asio/src/examples/cpp03/serialization/connection.hpp	/^#define SERIALIZATION_CONNECTION_HPP$/;"	d
SERIALIZATION_STOCK_HPP	asio/src/examples/cpp03/serialization/stock.hpp	/^#define SERIALIZATION_STOCK_HPP$/;"	d
SERVICES_BASIC_LOGGER_HPP	asio/src/examples/cpp03/services/basic_logger.hpp	/^#define SERVICES_BASIC_LOGGER_HPP$/;"	d
SERVICES_LOGGER_HPP	asio/src/examples/cpp03/services/logger.hpp	/^#define SERVICES_LOGGER_HPP$/;"	d
SERVICES_LOGGER_SERVICE_HPP	asio/src/examples/cpp03/services/logger_service.hpp	/^#define SERVICES_LOGGER_SERVICE_HPP$/;"	d
SOCKS4_HPP	asio/src/examples/cpp03/socks4/socks4.hpp	/^#define SOCKS4_HPP$/;"	d
SOCKS4_HPP	asio/src/examples/cpp11/socks4/socks4.hpp	/^#define SOCKS4_HPP$/;"	d
STANDALONE	asio/configure.ac	/^AM_CONDITIONAL(STANDALONE,test x$STANDALONE = xyes)$/;"	c
SUBDIRS	asio/Makefile.am	/^SUBDIRS = include src$/;"	m
SUBDIRS	asio/src/Makefile.am	/^SUBDIRS = $(EXAMPLES_CPP03) $(EXAMPLES_CPP11) $(EXAMPLES_CPP14) tests$/;"	m
TESTS	asio/src/tests/Makefile.am	/^TESTS = \\$/;"	m
UNIT_TEST_HPP	asio/src/tests/unit/unit_test.hpp	/^#define UNIT_TEST_HPP$/;"	d
WIN32	asio/include/asio/detail/config.hpp	/^#    define WIN32 /;"	d
WIN32_LEAN_AND_MEAN	asio/include/asio/detail/config.hpp	/^#   define WIN32_LEAN_AND_MEAN$/;"	d
WINDOWS_TARGET	asio/configure.ac	/^AM_CONDITIONAL(WINDOWS_TARGET,test x$WINDOWS != xno)$/;"	c
Word	asio/include/asio/detail/old_win_sdk_compat.hpp	/^    u_short Word[8];$/;"	m	union:asio::detail::in6_addr_emulation::__anoned65e276020a	typeref:typename:u_short[8]
_REENTRANT	asio/configure.ac	/^AC_DEFINE(_REENTRANT, [1], [Define this])$/;"	d
_S6_u8	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define _S6_u8 /;"	d
_S6_un	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define _S6_un /;"	d
_WIN32_WINNT	asio/include/asio/detail/config.hpp	/^#  define _WIN32_WINNT /;"	d
_WSPIAPI_H_	asio/include/asio/detail/socket_types.hpp	/^#   define _WSPIAPI_H_$/;"	d
__anon0001d93f0102	asio/src/examples/cpp14/executors/fork_join.cpp	/^            {$/;"	f	function:fork_join_pool::fork_join_pool	file:
__anon0001d93f0202	asio/src/examples/cpp14/executors/fork_join.cpp	/^      {$/;"	f	function:fork_executor::function::function	file:
__anon0001d93f0302	asio/src/examples/cpp14/executors/fork_join.cpp	/^      dispatch(fork, [=]{ fork_join_sort(begin, begin + n \/ 2); });$/;"	f	function:fork_join_sort	file:
__anon0001d93f0402	asio/src/examples/cpp14/executors/fork_join.cpp	/^      dispatch(fork, [=]{ fork_join_sort(begin + n \/ 2, end); });$/;"	f	function:fork_join_sort	file:
__anon04c085e80103	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  enum { default_fd_set_size = 1024 };$/;"	g	class:asio::detail::win_fd_set_adapter
__anon066a000a0102	asio/src/examples/cpp11/timeouts/server.cpp	/^        {$/;"	f	function:tcp_session::read_line	file:
__anon066a000a0202	asio/src/examples/cpp11/timeouts/server.cpp	/^        {$/;"	f	function:tcp_session::await_output	file:
__anon066a000a0302	asio/src/examples/cpp11/timeouts/server.cpp	/^        {$/;"	f	function:tcp_session::write_line	file:
__anon066a000a0402	asio/src/examples/cpp11/timeouts/server.cpp	/^        {$/;"	f	function:tcp_session::check_deadline	file:
__anon066a000a0502	asio/src/examples/cpp11/timeouts/server.cpp	/^        {$/;"	f	function:server::accept	file:
__anon0942bacc0102	asio/src/examples/cpp14/executors/async_1.cpp	/^      {$/;"	f	function:async_getline	file:
__anon0942bacc0202	asio/src/examples/cpp14/executors/async_1.cpp	/^            {$/;"	f	function:async_getline::__anon0942bacc0102	file:
__anon0942bacc0302	asio/src/examples/cpp14/executors/async_1.cpp	/^        {$/;"	f	function:main	file:
__anon0954d34d0102	asio/src/examples/cpp14/executors/async_2.cpp	/^      {$/;"	f	function:async_getline	file:
__anon0954d34d0202	asio/src/examples/cpp14/executors/async_2.cpp	/^            {$/;"	f	function:async_getline::__anon0954d34d0102	file:
__anon0954d34d0302	asio/src/examples/cpp14/executors/async_2.cpp	/^        {$/;"	f	function:async_getlines	file:
__anon0954d34d0402	asio/src/examples/cpp14/executors/async_2.cpp	/^        {$/;"	f	function:main	file:
__anon0a8e43b60103	asio/include/asio/detail/descriptor_ops.hpp	/^{$/;"	g	namespace:asio::detail::descriptor_ops
__anon1000a2200102	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^        {$/;"	f	function:client::connect	file:
__anon1000a2200202	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^        {$/;"	f	function:client::read_line	file:
__anon1000a2200302	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^        {$/;"	f	function:client::write_line	file:
__anon12e987310102	asio/src/examples/cpp11/executors/pipeline.cpp	/^  return post(ex, use_future([in, f]() mutable { f(in); }));$/;"	f	function:pipeline	file:
__anon12e987310202	asio/src/examples/cpp11/executors/pipeline.cpp	/^      {$/;"	f	function:pipeline	file:
__anon12e987310302	asio/src/examples/cpp11/executors/pipeline.cpp	/^      {$/;"	f	function:pipeline	file:
__anon1b3871a60103	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  enum { max_recent_msgs = 100 };$/;"	g	class:chat_room	file:
__anon1b3871a60202	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^        [self = shared_from_this()]{ return self->reader(); },$/;"	f	function:chat_session::start	file:
__anon1b3871a60302	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^        [self = shared_from_this()]{ return self->writer(); },$/;"	f	function:chat_session::start	file:
__anon1b3871a60402	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^          {$/;"	f	function:main	file:
__anon1b3871a60502	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^    signals.async_wait([&](auto, auto){ io_context.stop(); });$/;"	f	function:main	file:
__anon1d95a0060102	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^        {$/;"	f	function:session::do_write	file:
__anon1d95a0060202	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^        {$/;"	f	function:server::do_accept	file:
__anon1daa9e520102	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^        {$/;"	f	function:server::do_receive	file:
__anon1daa9e520202	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^        {$/;"	f	function:server::do_send	file:
__anon1daa9e520303	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	g	class:server	file:
__anon2172d0d70102	asio/src/examples/cpp11/chat/chat_client.cpp	/^        {$/;"	f	function:chat_client::write	file:
__anon2172d0d70202	asio/src/examples/cpp11/chat/chat_client.cpp	/^    asio::post(io_context_, [this]() { socket_.close(); });$/;"	f	function:chat_client::close	file:
__anon2172d0d70302	asio/src/examples/cpp11/chat/chat_client.cpp	/^        {$/;"	f	function:chat_client::do_connect	file:
__anon2172d0d70402	asio/src/examples/cpp11/chat/chat_client.cpp	/^        {$/;"	f	function:chat_client::do_read_header	file:
__anon2172d0d70502	asio/src/examples/cpp11/chat/chat_client.cpp	/^        {$/;"	f	function:chat_client::do_read_body	file:
__anon2172d0d70602	asio/src/examples/cpp11/chat/chat_client.cpp	/^        {$/;"	f	function:chat_client::do_write	file:
__anon2172d0d70702	asio/src/examples/cpp11/chat/chat_client.cpp	/^    std::thread t([&io_context](){ io_context.run(); });$/;"	f	function:main	file:
__anon22c6e4590103	asio/include/asio/detail/win_iocp_io_context.hpp	/^  {$/;"	g	class:asio::detail::win_iocp_io_context
__anon2acb22c20103	asio/include/asio/detail/strand_service.hpp	/^  enum { num_implementations = ASIO_STRAND_IMPLEMENTATIONS };$/;"	g	class:asio::detail::strand_service
__anon2acb22c20203	asio/include/asio/detail/strand_service.hpp	/^  enum { num_implementations = 193 };$/;"	g	class:asio::detail::strand_service
__anon2df9358d0103	asio/src/examples/cpp03/serialization/connection.hpp	/^  enum { header_length = 8 };$/;"	g	class:s11n_example::connection
__anon3193b0390103	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  enum { echo_reply = 0, destination_unreachable = 3, source_quench = 4,$/;"	g	class:icmp_header
__anon32a43d8a0102	asio/src/examples/cpp14/operations/composed_1.cpp	/^      {$/;"	f	function:test_callback	file:
__anon32b6560b0102	asio/src/examples/cpp14/operations/composed_2.cpp	/^      {$/;"	f	function:test_callback	file:
__anon32c86e8c0102	asio/src/examples/cpp14/operations/composed_3.cpp	/^  {$/;"	f	function:async_write_message	file:
__anon32c86e8c0202	asio/src/examples/cpp14/operations/composed_3.cpp	/^      {$/;"	f	function:test_callback	file:
__anon32da870d0102	asio/src/examples/cpp14/operations/composed_4.cpp	/^  {$/;"	f	function:async_write_message	file:
__anon32da870d0202	asio/src/examples/cpp14/operations/composed_4.cpp	/^      {$/;"	f	function:test_callback	file:
__anon32ec9f8e0102	asio/src/examples/cpp14/operations/composed_5.cpp	/^  {$/;"	f	function:async_write_message	file:
__anon32ec9f8e0202	asio/src/examples/cpp14/operations/composed_5.cpp	/^      {$/;"	f	function:test_callback	file:
__anon32feb80f0102	asio/src/examples/cpp14/operations/composed_6.cpp	/^  {$/;"	f	function:async_write_messages	file:
__anon32feb80f0203	asio/src/examples/cpp14/operations/composed_6.cpp	/^      enum { starting, waiting, writing } state_;$/;"	g	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	file:
__anon32feb80f0302	asio/src/examples/cpp14/operations/composed_6.cpp	/^      {$/;"	f	function:test_callback	file:
__anon3310d0900103	asio/src/examples/cpp14/operations/composed_7.cpp	/^  enum { starting, waiting, writing };$/;"	g	function:async_write_messages	file:
__anon3310d0900202	asio/src/examples/cpp14/operations/composed_7.cpp	/^      {$/;"	f	function:async_write_messages	file:
__anon3310d0900302	asio/src/examples/cpp14/operations/composed_7.cpp	/^      {$/;"	f	function:test_callback	file:
__anon3322e9110102	asio/src/examples/cpp14/operations/composed_8.cpp	/^      {$/;"	f	function:async_write_messages	file:
__anon3322e9110202	asio/src/examples/cpp14/operations/composed_8.cpp	/^      {$/;"	f	function:test_callback	file:
__anon3337811b0102	asio/include/asio/impl/use_awaitable.hpp	/^      {$/;"	f	function:asio::async_result::initiate	file:
__anon35986a930103	asio/include/asio/detail/chrono_time_traits.hpp	/^struct gcd { enum { value = gcd<v2, v1 % v2>::value }; };$/;"	g	struct:asio::detail::gcd
__anon35986a930203	asio/include/asio/detail/chrono_time_traits.hpp	/^struct gcd<v1, 0> { enum { value = v1 }; };$/;"	g	struct:asio::detail::gcd
__anon383fe1b10103	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	g	class:session	file:
__anon3a876f680103	asio/src/examples/cpp14/echo/blocking_udp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anon48311bdf0103	asio/include/asio/detail/signal_set_service.hpp	/^enum { max_signal_number = NSIG };$/;"	g	namespace:asio::detail
__anon4ba0fb6f0103	asio/src/examples/cpp03/local/stream_client.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anon4c1f04ba0103	asio/include/asio/buffers_iterator.hpp	/^    {$/;"	g	struct:asio::detail::buffers_iterator_types
__anon4d37f3760102	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^      {$/;"	f	function:bank_account::deposit	file:
__anon4d37f3760202	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^      {$/;"	f	function:bank_account::withdraw	file:
__anon4d37f3760302	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^      {$/;"	f	function:bank_account::print_balance	file:
__anon4d4a0bf70102	asio/src/examples/cpp14/executors/bank_account_2.cpp	/^        {$/;"	f	function:bank_account::deposit	file:
__anon4d4a0bf70202	asio/src/examples/cpp14/executors/bank_account_2.cpp	/^        {$/;"	f	function:bank_account::withdraw	file:
__anon4d4a0bf70302	asio/src/examples/cpp14/executors/bank_account_2.cpp	/^        {$/;"	f	function:bank_account::balance	file:
__anon4dc6f5f50102	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^        {$/;"	f	function:server::do_receive	file:
__anon4dc6f5f50202	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^        {$/;"	f	function:server::do_send	file:
__anon4dc6f5f50303	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	g	class:server	file:
__anon5335a9ae0103	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  enum { reading, writing } state_;$/;"	g	class:third_party_lib::session	file:
__anon560941d00102	asio/src/examples/cpp11/multicast/sender.cpp	/^        {$/;"	f	function:sender::do_send	file:
__anon560941d00202	asio/src/examples/cpp11/multicast/sender.cpp	/^        {$/;"	f	function:sender::do_timeout	file:
__anon56c9f2220102	asio/src/examples/cpp11/ssl/server.cpp	/^        {$/;"	f	function:session::do_handshake	file:
__anon56c9f2220202	asio/src/examples/cpp11/ssl/server.cpp	/^        {$/;"	f	function:session::do_read	file:
__anon56c9f2220302	asio/src/examples/cpp11/ssl/server.cpp	/^        {$/;"	f	function:session::do_write	file:
__anon56c9f2220402	asio/src/examples/cpp11/ssl/server.cpp	/^        {$/;"	f	function:server::do_accept	file:
__anon580c4e640103	asio/src/examples/cpp03/echo/blocking_tcp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anon5975663c0102	asio/src/examples/cpp11/spawn/parallel_grep.cpp	/^        {$/;"	f	function:main	file:
__anon5975663c0202	asio/src/examples/cpp11/spawn/parallel_grep.cpp	/^                  {$/;"	f	function:main::__anon5975663c0102	file:
__anon5e0ab7de0103	asio/src/examples/cpp03/echo/blocking_udp_echo_server.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anon61920b0f0103	asio/src/tests/unit/compose.cpp	/^  enum { starting, posting } state_;$/;"	g	class:impl_0_completion_args	file:
__anon61920b0f0203	asio/src/tests/unit/compose.cpp	/^  enum { starting, posting } state_;$/;"	g	class:impl_1_completion_arg	file:
__anon68f665cd0103	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  enum { reading, writing } state_ = reading;$/;"	g	class:third_party_lib::session	file:
__anon68f665cd0202	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^          {$/;"	f	function:connection::do_operations	file:
__anon68f665cd0302	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^          {$/;"	f	function:connection::do_operations	file:
__anon68f665cd0402	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^        {$/;"	f	function:server::do_accept	file:
__anon6a465b840103	asio/src/tests/unit/write.cpp	/^  enum { max_length = 8192 };$/;"	g	class:test_stream	file:
__anon6c577f050103	asio/src/examples/cpp03/multicast/receiver.cpp	/^  enum { max_length = 1024 };$/;"	g	class:receiver	file:
__anon6e8580630103	asio/include/asio/detail/thread_info_base.hpp	/^    enum { mem_index = 0 };$/;"	g	struct:asio::detail::thread_info_base::default_tag
__anon6e8580630203	asio/include/asio/detail/thread_info_base.hpp	/^    enum { mem_index = 1 };$/;"	g	struct:asio::detail::thread_info_base::awaitable_frame_tag
__anon6e8580630303	asio/include/asio/detail/thread_info_base.hpp	/^    enum { mem_index = 2 };$/;"	g	struct:asio::detail::thread_info_base::executor_function_tag
__anon6e8580630403	asio/include/asio/detail/thread_info_base.hpp	/^  enum { chunk_size = 4 };$/;"	g	class:asio::detail::thread_info_base
__anon6e8580630503	asio/include/asio/detail/thread_info_base.hpp	/^  enum { max_mem_index = 3 };$/;"	g	class:asio::detail::thread_info_base
__anon705e9ca50102	asio/src/examples/cpp17/coroutines_ts/echo_server.cpp	/^        {$/;"	f	function:listener	file:
__anon705e9ca50202	asio/src/examples/cpp17/coroutines_ts/echo_server.cpp	/^    signals.async_wait([&](auto, auto){ io_context.stop(); });$/;"	f	function:main	file:
__anon754c7acb0103	asio/src/examples/cpp03/ssl/client.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anon761611b80103	asio/src/tests/unit/write_at.cpp	/^  enum { max_length = 8192 };$/;"	g	class:test_random_access_device	file:
__anon7a9ce4440102	asio/src/examples/cpp11/multicast/receiver.cpp	/^        {$/;"	f	function:receiver::do_receive	file:
__anon7eba15f00102	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^        {$/;"	f	function:session::do_read	file:
__anon7eba15f00202	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^        {$/;"	f	function:session::do_write	file:
__anon7eba15f00303	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	g	class:session	file:
__anon7eba15f00402	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^        {$/;"	f	function:server::do_accept	file:
__anon7fa5ebd40102	asio/src/examples/cpp14/executors/pipeline.cpp	/^  return post(ex, use_future([in, f = std::move(f)]() mutable { f(in); }));$/;"	f	function:pipeline	file:
__anon7fa5ebd40202	asio/src/examples/cpp14/executors/pipeline.cpp	/^      {$/;"	f	function:pipeline	file:
__anon7fa5ebd40302	asio/src/examples/cpp14/executors/pipeline.cpp	/^      {$/;"	f	function:pipeline	file:
__anon7fdd16a50103	asio/src/examples/cpp11/echo/blocking_udp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anon806be0930102	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^      {$/;"	f	function:bank_account::deposit	file:
__anon806be0930202	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^      {$/;"	f	function:bank_account::withdraw	file:
__anon806be0930302	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^      {$/;"	f	function:bank_account::print_balance	file:
__anon807df9140102	asio/src/examples/cpp11/executors/bank_account_2.cpp	/^        {$/;"	f	function:bank_account::deposit	file:
__anon807df9140202	asio/src/examples/cpp11/executors/bank_account_2.cpp	/^        {$/;"	f	function:bank_account::withdraw	file:
__anon807df9140302	asio/src/examples/cpp11/executors/bank_account_2.cpp	/^        {$/;"	f	function:bank_account::balance	file:
__anon881a80290103	asio/src/tests/unit/read_at.cpp	/^  enum { max_length = 8192 };$/;"	g	class:test_random_access_device	file:
__anon8880b1ef0103	asio/src/examples/cpp11/chat/chat_server.cpp	/^  enum { max_recent_msgs = 100 };$/;"	g	class:chat_room	file:
__anon8880b1ef0202	asio/src/examples/cpp11/chat/chat_server.cpp	/^        {$/;"	f	function:chat_session::do_read_header	file:
__anon8880b1ef0302	asio/src/examples/cpp11/chat/chat_server.cpp	/^        {$/;"	f	function:chat_session::do_read_body	file:
__anon8880b1ef0402	asio/src/examples/cpp11/chat/chat_server.cpp	/^        {$/;"	f	function:chat_session::do_write	file:
__anon8880b1ef0502	asio/src/examples/cpp11/chat/chat_server.cpp	/^        {$/;"	f	function:chat_server::do_accept	file:
__anon89a0e9a60102	asio/src/examples/cpp11/local/stream_server.cpp	/^        {$/;"	f	function:session::do_read	file:
__anon89a0e9a60202	asio/src/examples/cpp11/local/stream_server.cpp	/^        {$/;"	f	function:session::do_write	file:
__anon89a0e9a60302	asio/src/examples/cpp11/local/stream_server.cpp	/^        {$/;"	f	function:server::do_accept	file:
__anon8ef6d9760103	asio/include/asio/basic_socket_streambuf.hpp	/^  enum { buffer_size = 512 };$/;"	g	class:asio::detail::socket_streambuf_buffers
__anon8ef6d9760203	asio/include/asio/basic_socket_streambuf.hpp	/^  enum { putback_max = 8 };$/;"	g	class:asio::basic_socket_streambuf
__anon8f7cf95e0102	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^      condition_.wait(lock, [&]{ return stopped_ || !queue_.empty(); });$/;"	f	function:priority_scheduler::run	file:
__anon8f7cf95e0202	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^      {$/;"	f	function:priority_scheduler::item::item	file:
__anon8f7cf95e0302	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  dispatch(low, []{ std::cout << "1\\n"; });$/;"	f	function:main	file:
__anon8f7cf95e0402	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  dispatch(low, []{ std::cout << "11\\n"; });$/;"	f	function:main	file:
__anon8f7cf95e0502	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  dispatch(med, []{ std::cout << "2\\n"; });$/;"	f	function:main	file:
__anon8f7cf95e0602	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  dispatch(med, []{ std::cout << "22\\n"; });$/;"	f	function:main	file:
__anon8f7cf95e0702	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  dispatch(high, []{ std::cout << "3\\n"; });$/;"	f	function:main	file:
__anon8f7cf95e0802	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  dispatch(high, []{ std::cout << "33\\n"; });$/;"	f	function:main	file:
__anon8f7cf95e0902	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  dispatch(high, []{ std::cout << "333\\n"; });$/;"	f	function:main	file:
__anon8f7cf95e0a02	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  dispatch(sched.get_executor(-1), [&]{ sched.stop(); });$/;"	f	function:main	file:
__anon91b8a3e50303	asio/include/asio/detail/consuming_buffers.hpp	/^  enum { value = buffer_sequence_adapter_base::max_buffers };$/;"	g	struct:asio::detail::prepared_buffers_max
__anon91b8a3e50403	asio/include/asio/detail/consuming_buffers.hpp	/^  enum { max_buffers = MaxBuffers < 16 ? MaxBuffers : 16 };$/;"	g	struct:prepared_buffers
__anon9456e0780103	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  enum { max_buffers = 1 };$/;"	g	class:asio::detail::buffer_sequence_adapter_base
__anon9619d5f70102	asio/src/examples/cpp11/spawn/echo_server.cpp	/^        {$/;"	f	function:session::go	file:
__anon9619d5f70202	asio/src/examples/cpp11/spawn/echo_server.cpp	/^        {$/;"	f	function:session::go	file:
__anon9619d5f70302	asio/src/examples/cpp11/spawn/echo_server.cpp	/^        {$/;"	f	function:main	file:
__anon9b96e7060103	asio/src/examples/cpp14/echo/blocking_tcp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anon9d54936e0103	asio/include/asio/basic_streambuf.hpp	/^  enum { buffer_delta = 128 };$/;"	g	class:asio::basic_streambuf
__anon9fd7c9630103	asio/src/examples/cpp03/chat/chat_message.hpp	/^  enum { header_length = 4 };$/;"	g	class:chat_message
__anon9fd7c9630203	asio/src/examples/cpp03/chat/chat_message.hpp	/^  enum { max_body_length = 512 };$/;"	g	class:chat_message
__anona16aa5440103	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  {$/;"	g	class:control_request
__anona16aa5440203	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  enum { payload_size = 32 };$/;"	g	class:frame
__anona16aa5440303	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  {$/;"	g	class:frame
__anona19550800103	asio/src/examples/cpp14/echo/blocking_udp_echo_server.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anona4b3a4b20102	asio/src/examples/cpp11/futures/daytime_client.cpp	/^    std::thread thread([&io_context](){ io_context.run(); });$/;"	f	function:main	file:
__anona5a3a8700103	asio/src/examples/cpp03/chat/chat_server.cpp	/^  enum { max_recent_msgs = 100 };$/;"	g	class:chat_room	file:
__anonab89dfd90102	asio/src/examples/cpp11/local/connect_pair.cpp	/^        {$/;"	f	function:uppercase_filter::read	file:
__anonab89dfd90202	asio/src/examples/cpp11/local/connect_pair.cpp	/^        {$/;"	f	function:uppercase_filter::write	file:
__anonab89dfd90302	asio/src/examples/cpp11/local/connect_pair.cpp	/^        {$/;"	f	function:main	file:
__anonacf691440102	asio/src/examples/cpp17/coroutines_ts/echo_server_with_default.cpp	/^        {$/;"	f	function:listener	file:
__anonacf691440202	asio/src/examples/cpp17/coroutines_ts/echo_server_with_default.cpp	/^    signals.async_wait([&](auto, auto){ io_context.stop(); });$/;"	f	function:main	file:
__anonaed66d930102	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^        {$/;"	f	function:session::do_read	file:
__anonaed66d930202	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^        {$/;"	f	function:session::do_write	file:
__anonaed66d930303	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	g	class:session	file:
__anonaed66d930402	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^        {$/;"	f	function:server::do_accept	file:
__anonb0dc1bd00103	asio/include/asio/detail/strand_executor_service.hpp	/^  enum { num_mutexes = 193 };$/;"	g	class:asio::detail::strand_executor_service
__anonb5f433120103	asio/include/asio/ip/address.hpp	/^  enum { ipv4, ipv6 } type_;$/;"	g	class:asio::ip::address
__anonba4ccaef0102	asio/src/examples/cpp11/http/server/connection.cpp	/^      {$/;"	f	function:http::server::connection::do_read	file:
__anonba4ccaef0202	asio/src/examples/cpp11/http/server/connection.cpp	/^      {$/;"	f	function:http::server::connection::do_write	file:
__anonba4f83e00103	asio/src/tests/unit/read_until.cpp	/^  enum { max_length = 8192 };$/;"	g	class:test_stream	file:
__anonba4f83e00203	asio/src/tests/unit/read_until.cpp	/^    enum { value = true };$/;"	g	struct:asio::is_match_condition	file:
__anonbc1276d10103	asio/include/asio/detail/epoll_reactor.hpp	/^  enum { epoll_size = 20000 };$/;"	g	class:asio::detail::epoll_reactor
__anonc0a36d670103	asio/src/examples/cpp03/local/iostream_client.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anonc355232f0102	asio/include/asio/impl/awaitable.hpp	/^          {$/;"	f	function:asio::detail::awaitable_thread::~awaitable_thread	file:
__anonc4fdc2e00103	asio/include/asio/detail/socket_ops.hpp	/^{$/;"	g	namespace:asio::detail::socket_ops
__anonc590a0ff0102	asio/include/asio/impl/co_spawn.hpp	/^        {$/;"	f	function:asio::detail::co_spawn_entry_point	file:
__anonc590a0ff0202	asio/include/asio/impl/co_spawn.hpp	/^        {$/;"	f	function:asio::detail::co_spawn_entry_point	file:
__anonc590a0ff0302	asio/include/asio/impl/co_spawn.hpp	/^      {$/;"	f	function:asio::detail::co_spawn_entry_point	file:
__anond598c3df0102	asio/src/examples/cpp11/fork/daemon.cpp	/^        {$/;"	f	function:udp_daytime_server::receive	file:
__anond598c3df0202	asio/src/examples/cpp11/fork/daemon.cpp	/^        {$/;"	f	function:main	file:
__anond7306a130103	asio/src/examples/cpp03/echo/async_udp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	g	class:server	file:
__anondaac0dc30102	asio/src/examples/cpp17/coroutines_ts/refactored_echo_server.cpp	/^        {$/;"	f	function:listener	file:
__anondaac0dc30202	asio/src/examples/cpp17/coroutines_ts/refactored_echo_server.cpp	/^    signals.async_wait([&](auto, auto){ io_context.stop(); });$/;"	f	function:main	file:
__anondc3e34160102	asio/src/examples/cpp11/allocation/server.cpp	/^          {$/;"	f	function:session::do_read	file:
__anondc3e34160202	asio/src/examples/cpp11/allocation/server.cpp	/^          {$/;"	f	function:session::do_write	file:
__anondc3e34160302	asio/src/examples/cpp11/allocation/server.cpp	/^        {$/;"	f	function:server::do_accept	file:
__anondc5a5be30103	asio/src/examples/cpp03/ssl/server.cpp	/^  enum { max_length = 1024 };$/;"	g	class:session	file:
__anonde4e92df0102	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^        {$/;"	f	function:server::wait_for_signal	file:
__anonde4e92df0202	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^        {$/;"	f	function:server::accept	file:
__anonde4e92df0302	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^        {$/;"	f	function:server::read	file:
__anonde4e92df0402	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^        {$/;"	f	function:server::write	file:
__anonde5602c20103	asio/src/examples/cpp11/chat/chat_message.hpp	/^  enum { header_length = 4 };$/;"	g	class:chat_message
__anonde5602c20203	asio/src/examples/cpp11/chat/chat_message.hpp	/^  enum { max_body_length = 512 };$/;"	g	class:chat_message
__anone0ec8e430103	asio/src/examples/cpp11/echo/blocking_tcp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anone16b693b0103	asio/include/asio/ssl/detail/stream_core.hpp	/^  enum { max_tls_record_size = 17 * 1024 };$/;"	g	struct:asio::ssl::detail::stream_core
__anone34350810102	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^    signals.async_wait([&](auto, auto){ io_context.stop(); });$/;"	f	function:main	file:
__anone34350810202	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^        {$/;"	f	function:main	file:
__anone39dd34b0103	asio/include/asio/read_until.hpp	/^    enum { value = (sizeof((has_result_type_helper)((T*)(0))) == 1) };$/;"	g	struct:asio::detail::has_result_type
__anone6eaf7bd0103	asio/src/examples/cpp11/echo/blocking_udp_echo_server.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anone6ec2cfb0102	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^      condition_.wait(lock, [&]{ return stopped_ || !queue_.empty(); });$/;"	f	function:priority_scheduler::run	file:
__anone6ec2cfb0202	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^      {$/;"	f	function:priority_scheduler::item::item	file:
__anone6ec2cfb0302	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  dispatch(low, []{ std::cout << "1\\n"; });$/;"	f	function:main	file:
__anone6ec2cfb0402	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  dispatch(low, []{ std::cout << "11\\n"; });$/;"	f	function:main	file:
__anone6ec2cfb0502	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  dispatch(med, []{ std::cout << "2\\n"; });$/;"	f	function:main	file:
__anone6ec2cfb0602	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  dispatch(med, []{ std::cout << "22\\n"; });$/;"	f	function:main	file:
__anone6ec2cfb0702	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  dispatch(high, []{ std::cout << "3\\n"; });$/;"	f	function:main	file:
__anone6ec2cfb0802	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  dispatch(high, []{ std::cout << "33\\n"; });$/;"	f	function:main	file:
__anone6ec2cfb0902	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  dispatch(high, []{ std::cout << "333\\n"; });$/;"	f	function:main	file:
__anone6ec2cfb0a02	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  dispatch(sched.get_executor(-1), [&]{ sched.stop(); });$/;"	f	function:main	file:
__anone74fb6310102	asio/include/asio/detail/winrt_async_manager.hpp	/^      {$/;"	f	class:asio::detail::winrt_async_manager	file:
__anone74fb6310202	asio/include/asio/detail/winrt_async_manager.hpp	/^      {$/;"	f	class:asio::detail::winrt_async_manager	file:
__anone74fb6310302	asio/include/asio/detail/winrt_async_manager.hpp	/^        {$/;"	f	class:asio::detail::winrt_async_manager	file:
__anone74fb6310402	asio/include/asio/detail/winrt_async_manager.hpp	/^      {$/;"	f	class:asio::detail::winrt_async_manager	file:
__anone74fb6310502	asio/include/asio/detail/winrt_async_manager.hpp	/^      {$/;"	f	class:asio::detail::winrt_async_manager	file:
__anone74fb6310602	asio/include/asio/detail/winrt_async_manager.hpp	/^        {$/;"	f	class:asio::detail::winrt_async_manager	file:
__anone8d8d9f70102	asio/src/examples/cpp14/executors/actor.cpp	/^      {$/;"	f	function:actor::send	file:
__anone8d8d9f70202	asio/src/examples/cpp14/executors/actor.cpp	/^      {$/;"	f	function:actor::tail_send	file:
__anone8d8d9f70302	asio/src/examples/cpp14/executors/actor.cpp	/^    condition_.wait(lock, [this]{ return !message_queue_.empty(); });$/;"	f	function:receiver::wait	file:
__anoned65e2760103	asio/include/asio/detail/old_win_sdk_compat.hpp	/^{$/;"	g	namespace:asio::detail
__anoned65e276020a	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  {$/;"	u	struct:asio::detail::in6_addr_emulation
__anonefbc110a0103	asio/src/examples/cpp11/ssl/client.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anonefbc110a0202	asio/src/examples/cpp11/ssl/client.cpp	/^        {$/;"	f	function:client::connect	file:
__anonefbc110a0302	asio/src/examples/cpp11/ssl/client.cpp	/^        {$/;"	f	function:client::handshake	file:
__anonefbc110a0402	asio/src/examples/cpp11/ssl/client.cpp	/^        {$/;"	f	function:client::send_request	file:
__anonefbc110a0502	asio/src/examples/cpp11/ssl/client.cpp	/^        {$/;"	f	function:client::receive_response	file:
__anonf423948f0102	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^        {$/;"	f	function:main	file:
__anonf5b1ea740102	asio/src/examples/cpp11/executors/actor.cpp	/^      {$/;"	f	function:actor::send	file:
__anonf5b1ea740202	asio/src/examples/cpp11/executors/actor.cpp	/^      {$/;"	f	function:actor::tail_send	file:
__anonf5b1ea740302	asio/src/examples/cpp11/executors/actor.cpp	/^    condition_.wait(lock, [this]{ return !message_queue_.empty(); });$/;"	f	function:receiver::wait	file:
__anonf621a3b60102	asio/src/examples/cpp11/http/server/server.cpp	/^      {$/;"	f	function:http::server::server::do_accept	file:
__anonf621a3b60202	asio/src/examples/cpp11/http/server/server.cpp	/^      {$/;"	f	function:http::server::server::do_await_stop	file:
__anonf6fcd6c60103	asio/src/examples/cpp03/echo/blocking_udp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	g	file:
__anonf838f7c70102	asio/src/examples/cpp11/operations/composed_1.cpp	/^      {$/;"	f	function:test_callback	file:
__anonf84b10480102	asio/src/examples/cpp11/operations/composed_2.cpp	/^      {$/;"	f	function:test_callback	file:
__anonf85d28c90102	asio/src/examples/cpp11/operations/composed_3.cpp	/^      {$/;"	f	function:test_callback	file:
__anonf86f414a0102	asio/src/examples/cpp11/operations/composed_4.cpp	/^      {$/;"	f	function:test_callback	file:
__anonf88159cb0102	asio/src/examples/cpp11/operations/composed_5.cpp	/^      {$/;"	f	function:test_callback	file:
__anonf893724c0103	asio/src/examples/cpp11/operations/composed_6.cpp	/^      enum { starting, waiting, writing } state_;$/;"	g	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	file:
__anonf893724c0202	asio/src/examples/cpp11/operations/composed_6.cpp	/^      {$/;"	f	function:test_callback	file:
__anonf8a58acd0103	asio/src/examples/cpp11/operations/composed_7.cpp	/^  enum { starting, waiting, writing } state_;$/;"	g	struct:async_write_messages_implementation	file:
__anonf8a58acd0202	asio/src/examples/cpp11/operations/composed_7.cpp	/^      {$/;"	f	function:test_callback	file:
__anonf8b7a34e0102	asio/src/examples/cpp11/operations/composed_8.cpp	/^      {$/;"	f	function:test_callback	file:
__anonfbb8e03c0102	asio/src/examples/cpp11/executors/fork_join.cpp	/^            {$/;"	f	function:fork_join_pool::fork_join_pool	file:
__anonfbb8e03c0202	asio/src/examples/cpp11/executors/fork_join.cpp	/^      {$/;"	f	function:fork_executor::function::function	file:
__anonfbb8e03c0302	asio/src/examples/cpp11/executors/fork_join.cpp	/^      dispatch(fork, [=]{ fork_join_sort(begin, begin + n \/ 2); });$/;"	f	function:fork_join_sort	file:
__anonfbb8e03c0402	asio/src/examples/cpp11/executors/fork_join.cpp	/^      dispatch(fork, [=]{ fork_join_sort(begin + n \/ 2, end); });$/;"	f	function:fork_join_sort	file:
__anonfcb6f7950103	asio/src/tests/unit/read.cpp	/^  enum { max_length = 8192 };$/;"	g	class:test_stream	file:
__anonfdcf696e0103	asio/include/asio/connect.hpp	/^    enum { value = (sizeof((has_iterator_helper)((T*)(0))) == 1) };$/;"	g	struct:asio::detail::has_iterator_typedef
__ss_align	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  __int64 __ss_align;$/;"	m	struct:asio::detail::sockaddr_storage_emulation	typeref:typename:__int64
__ss_pad1	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  char __ss_pad1[sockaddr_storage_pad1size];$/;"	m	struct:asio::detail::sockaddr_storage_emulation	typeref:typename:char[]
__ss_pad2	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  char __ss_pad2[sockaddr_storage_pad2size];$/;"	m	struct:asio::detail::sockaddr_storage_emulation	typeref:typename:char[]
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID accept($/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID accept(basic_socket<protocol_type, Executor1>& peer,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept()$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept(ExecutionContext& context, asio::error_code& ec,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept(ExecutionContext& context, endpoint_type& peer_endpoint,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept(ExecutionContext& context,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept(asio::error_code& ec)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept(const Executor1& ex, asio::error_code& ec,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept(const Executor1& ex, endpoint_type& peer_endpoint,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept(const Executor1& ex,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept(const executor_type& ex,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept(endpoint_type& peer_endpoint)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  accept(endpoint_type& peer_endpoint, asio::error_code& ec)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:Protocol::socket::rebind_executor::other
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  void accept(basic_socket<Protocol1, Executor1>& peer,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
accept	asio/include/asio/basic_socket_acceptor.hpp	/^  void accept(basic_socket<protocol_type, Executor1>& peer,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
accept	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code accept(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
accept	asio/include/asio/detail/reactive_socket_service.hpp	/^  asio::error_code accept(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:asio::error_code
accept	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  asio::error_code accept(implementation_type& impl, Socket& peer,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:asio::error_code
accept	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^  void accept()$/;"	f	class:server	typeref:typename:void	file:
accept	asio/src/examples/cpp11/timeouts/server.cpp	/^  void accept()$/;"	f	class:server	typeref:typename:void	file:
accept_handler	asio/src/tests/unit/ip/tcp.cpp	/^  accept_handler() {}$/;"	f	struct:ip_tcp_acceptor_compile::accept_handler	file:
accept_handler	asio/src/tests/unit/ip/tcp.cpp	/^  accept_handler(accept_handler&&) {}$/;"	f	struct:ip_tcp_acceptor_compile::accept_handler	file:
accept_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct accept_handler$/;"	s	namespace:ip_tcp_acceptor_compile	file:
accepted	asio/src/examples/cpp03/http/server/reply.cpp	/^const char accepted[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
accepted	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string accepted =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
accepted	asio/src/examples/cpp03/http/server/reply.hpp	/^    accepted = 202,$/;"	e	enum:http::server::reply::status_type
accepted	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char accepted[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
accepted	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string accepted =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
accepted	asio/src/examples/cpp03/http/server2/reply.hpp	/^    accepted = 202,$/;"	e	enum:http::server2::reply::status_type
accepted	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char accepted[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
accepted	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string accepted =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
accepted	asio/src/examples/cpp03/http/server3/reply.hpp	/^    accepted = 202,$/;"	e	enum:http::server3::reply::status_type
accepted	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char accepted[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
accepted	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string accepted =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
accepted	asio/src/examples/cpp03/http/server4/reply.hpp	/^    accepted = 202,$/;"	e	enum:http::server4::reply::status_type
accepted	asio/src/examples/cpp11/http/server/reply.cpp	/^const char accepted[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
accepted	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string accepted =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
accepted	asio/src/examples/cpp11/http/server/reply.hpp	/^    accepted = 202,$/;"	e	enum:http::server::reply::status_type
acceptor	asio/include/asio/ip/tcp.hpp	/^  typedef basic_socket_acceptor<tcp> acceptor;$/;"	t	class:asio::ip::tcp	typeref:typename:basic_socket_acceptor<tcp>
acceptor	asio/include/asio/local/stream_protocol.hpp	/^  typedef basic_socket_acceptor<stream_protocol> acceptor;$/;"	t	class:asio::local::stream_protocol	typeref:typename:basic_socket_acceptor<stream_protocol>
acceptor_	asio/src/examples/cpp03/allocation/server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/chat/chat_server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:chat_server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/http/server/server.hpp	/^  asio::ip::tcp::acceptor acceptor_;$/;"	m	class:http::server::server	typeref:typename:asio::ip::tcp::acceptor
acceptor_	asio/src/examples/cpp03/http/server2/server.hpp	/^  asio::ip::tcp::acceptor acceptor_;$/;"	m	class:http::server2::server	typeref:typename:asio::ip::tcp::acceptor
acceptor_	asio/src/examples/cpp03/http/server3/server.hpp	/^  asio::ip::tcp::acceptor acceptor_;$/;"	m	class:http::server3::server	typeref:typename:asio::ip::tcp::acceptor
acceptor_	asio/src/examples/cpp03/http/server4/server.hpp	/^  boost::shared_ptr<tcp::acceptor> acceptor_;$/;"	m	class:http::server4::server	typeref:typename:boost::shared_ptr<tcp::acceptor>
acceptor_	asio/src/examples/cpp03/local/stream_server.cpp	/^  stream_protocol::acceptor acceptor_;$/;"	m	class:server	typeref:typename:stream_protocol::acceptor	file:
acceptor_	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/porthopper/server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/serialization/server.cpp	/^  asio::ip::tcp::acceptor acceptor_;$/;"	m	class:s11n_example::server	typeref:typename:asio::ip::tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/ssl/server.cpp	/^  asio::ip::tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:asio::ip::tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/timeouts/server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:tcp_server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:tcp_server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  tcp_acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp_acceptor	file:
acceptor_	asio/src/examples/cpp11/allocation/server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp11/chat/chat_server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:chat_server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp11/http/server/server.hpp	/^  asio::ip::tcp::acceptor acceptor_;$/;"	m	class:http::server::server	typeref:typename:asio::ip::tcp::acceptor
acceptor_	asio/src/examples/cpp11/local/stream_server.cpp	/^  stream_protocol::acceptor acceptor_;$/;"	m	class:server	typeref:typename:stream_protocol::acceptor	file:
acceptor_	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp11/ssl/server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp11/timeouts/server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:tcp::acceptor	file:
acceptor_	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  tcp::acceptor& acceptor_;$/;"	m	class:connections	typeref:typename:tcp::acceptor &	file:
acceptor_	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  tcp::acceptor* acceptor_ = nullptr;$/;"	m	class:connection_iter	typeref:typename:tcp::acceptor *	file:
acceptor_	asio/src/tests/latency/tcp_server.cpp	/^  tcp::acceptor& acceptor_;$/;"	m	class:tcp_server	typeref:typename:tcp::acceptor &	file:
acceptor_	asio/src/tests/performance/server.cpp	/^  asio::ip::tcp::acceptor acceptor_;$/;"	m	class:server	typeref:typename:asio::ip::tcp::acceptor	file:
acceptor_	asio/src/tests/unit/connect.cpp	/^  asio::ip::tcp::acceptor acceptor_;$/;"	m	class:connection_sink	typeref:typename:asio::ip::tcp::acceptor	file:
access_denied	asio/include/asio/error.hpp	/^  access_denied = ASIO_SOCKET_ERROR(EACCES),$/;"	e	enum:asio::error::basic_errors
actor	asio/src/examples/cpp11/executors/actor.cpp	/^  actor(executor e)$/;"	f	class:actor	file:
actor	asio/src/examples/cpp11/executors/actor.cpp	/^class actor$/;"	c	file:
actor	asio/src/examples/cpp14/executors/actor.cpp	/^  actor(executor e)$/;"	f	class:actor	file:
actor	asio/src/examples/cpp14/executors/actor.cpp	/^class actor$/;"	c	file:
actor_	asio/src/examples/cpp11/executors/actor.cpp	/^  Actor* actor_;$/;"	m	class:mf_message_handler	typeref:typename:Actor *	file:
actor_	asio/src/examples/cpp14/executors/actor.cpp	/^  Actor* actor_;$/;"	m	class:mf_message_handler	typeref:typename:Actor *	file:
actor_address	asio/src/examples/cpp11/executors/actor.cpp	/^typedef actor* actor_address;$/;"	t	typeref:typename:actor *	file:
actor_address	asio/src/examples/cpp14/executors/actor.cpp	/^typedef actor* actor_address;$/;"	t	typeref:typename:actor *	file:
adapt_completion_condition_result	asio/include/asio/completion_condition.hpp	/^inline std::size_t adapt_completion_condition_result(bool result)$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
adapt_completion_condition_result	asio/include/asio/completion_condition.hpp	/^inline std::size_t adapt_completion_condition_result(std::size_t result)$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
add	asio/include/asio/basic_signal_set.hpp	/^  ASIO_SYNC_OP_VOID add(int signal_number,$/;"	f	class:asio::basic_signal_set	typeref:typename:ASIO_SYNC_OP_VOID
add	asio/include/asio/basic_signal_set.hpp	/^  void add(int signal_number)$/;"	f	class:asio::basic_signal_set	typeref:typename:void
add	asio/include/asio/detail/chrono_time_traits.hpp	/^  static time_type add(const time_type& t, const duration_type& d)$/;"	f	struct:asio::detail::chrono_time_traits	typeref:typename:time_type
add	asio/include/asio/time_traits.hpp	/^  static time_type add(const time_type& t, const duration_type& d)$/;"	f	struct:asio::time_traits	typeref:typename:time_type
add	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^  void add(int priority, boost::function<void()> function)$/;"	f	class:handler_priority_queue	typeref:typename:void	file:
add	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^  void add(int priority, Function function)$/;"	f	class:handler_priority_queue	typeref:typename:void	file:
add	asio/src/tests/performance/client.cpp	/^  void add(size_t bytes_written, size_t bytes_read)$/;"	f	class:stats	typeref:typename:void	file:
add_ready_events	asio/include/asio/detail/epoll_reactor.hpp	/^    void add_ready_events(uint32_t events) { task_result_ |= events; }$/;"	f	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:void
add_service	asio/include/asio/detail/impl/service_registry.hpp	/^void service_registry::add_service(Service* new_service)$/;"	f	class:asio::detail::service_registry	typeref:typename:void
add_thread	asio/src/examples/cpp11/executors/pipeline.cpp	/^    void add_thread(std::thread&& t)$/;"	f	class:thread_executor::thread_bag	typeref:typename:void	file:
add_thread	asio/src/examples/cpp14/executors/pipeline.cpp	/^    void add_thread(std::thread&& t)$/;"	f	class:thread_executor::thread_bag	typeref:typename:void	file:
add_timer_queue	asio/include/asio/detail/impl/dev_poll_reactor.hpp	/^void dev_poll_reactor::add_timer_queue(timer_queue<Time_Traits>& queue)$/;"	f	class:asio::detail::dev_poll_reactor	typeref:typename:void
add_timer_queue	asio/include/asio/detail/impl/epoll_reactor.hpp	/^void epoll_reactor::add_timer_queue(timer_queue<Time_Traits>& queue)$/;"	f	class:asio::detail::epoll_reactor	typeref:typename:void
add_timer_queue	asio/include/asio/detail/impl/kqueue_reactor.hpp	/^void kqueue_reactor::add_timer_queue(timer_queue<Time_Traits>& queue)$/;"	f	class:asio::detail::kqueue_reactor	typeref:typename:void
add_timer_queue	asio/include/asio/detail/impl/select_reactor.hpp	/^void select_reactor::add_timer_queue(timer_queue<Time_Traits>& queue)$/;"	f	class:asio::detail::select_reactor	typeref:typename:void
add_timer_queue	asio/include/asio/detail/impl/win_iocp_io_context.hpp	/^void win_iocp_io_context::add_timer_queue($/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
add_timer_queue	asio/include/asio/detail/impl/winrt_timer_scheduler.hpp	/^void winrt_timer_scheduler::add_timer_queue(timer_queue<Time_Traits>& queue)$/;"	f	class:asio::detail::winrt_timer_scheduler	typeref:typename:void
addr_	asio/include/asio/ip/address_v4.hpp	/^  asio::detail::in4_addr_type addr_;$/;"	m	class:asio::ip::address_v4	typeref:typename:asio::detail::in4_addr_type
addr_	asio/include/asio/ip/address_v6.hpp	/^  asio::detail::in6_addr_type addr_;$/;"	m	class:asio::ip::address_v6	typeref:typename:asio::detail::in6_addr_type
address	asio/include/asio/ip/address.hpp	/^class address$/;"	c	namespace:asio::ip
address	asio/include/asio/ip/basic_endpoint.hpp	/^  asio::ip::address address() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:asio::ip::address
address	asio/include/asio/ip/basic_endpoint.hpp	/^  void address(const asio::ip::address& addr) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:void
address	asio/include/asio/ip/network_v4.hpp	/^  address_v4 address() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4	typeref:typename:address_v4
address	asio/include/asio/ip/network_v6.hpp	/^  address_v6 address() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v6	typeref:typename:address_v6
address	asio/src/examples/cpp11/executors/actor.cpp	/^  actor_address address()$/;"	f	class:actor	typeref:typename:actor_address	file:
address	asio/src/examples/cpp14/executors/actor.cpp	/^  actor_address address()$/;"	f	class:actor	typeref:typename:actor_address	file:
address_	asio/include/asio/ip/address_v4_iterator.hpp	/^  address_v4 address_;$/;"	m	class:asio::ip::basic_address_iterator	typeref:typename:address_v4
address_	asio/include/asio/ip/address_v6_iterator.hpp	/^  address_v6 address_;$/;"	m	class:asio::ip::basic_address_iterator	typeref:typename:address_v6
address_	asio/include/asio/ip/network_v4.hpp	/^  address_v4 address_;$/;"	m	class:asio::ip::network_v4	typeref:typename:address_v4
address_	asio/include/asio/ip/network_v6.hpp	/^  address_v6 address_;$/;"	m	class:asio::ip::network_v6	typeref:typename:address_v6
address_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  asio::ip::address_v4::bytes_type address_;$/;"	m	class:socks4::reply	typeref:typename:asio::ip::address_v4::bytes_type
address_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  asio::ip::address_v4::bytes_type address_;$/;"	m	class:socks4::request	typeref:typename:asio::ip::address_v4::bytes_type
address_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  asio::ip::address_v4::bytes_type address_;$/;"	m	class:socks4::reply	typeref:typename:asio::ip::address_v4::bytes_type
address_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  asio::ip::address_v4::bytes_type address_;$/;"	m	class:socks4::request	typeref:typename:asio::ip::address_v4::bytes_type
address_configured	asio/include/asio/ip/resolver_base.hpp	/^  static const flags address_configured = implementation_defined;$/;"	m	class:asio::ip::resolver_base	typeref:typename:const flags
address_family_not_supported	asio/include/asio/error.hpp	/^  address_family_not_supported = ASIO_SOCKET_ERROR(EAFNOSUPPORT),$/;"	e	enum:asio::error::basic_errors
address_in_use	asio/include/asio/error.hpp	/^  address_in_use = ASIO_SOCKET_ERROR(EADDRINUSE),$/;"	e	enum:asio::error::basic_errors
address_length	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  DWORD address_length()$/;"	f	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:DWORD
address_length	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  DWORD address_length()$/;"	f	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:DWORD
address_reply	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^    info_reply = 16, address_request = 17, address_reply = 18 };$/;"	e	enum:icmp_header::__anon3193b0390103
address_request	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^    info_reply = 16, address_request = 17, address_reply = 18 };$/;"	e	enum:icmp_header::__anon3193b0390103
address_v4	asio/include/asio/ip/address_v4.hpp	/^  address_v4() ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v4
address_v4	asio/include/asio/ip/address_v4.hpp	/^  address_v4(address_v4&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v4
address_v4	asio/include/asio/ip/address_v4.hpp	/^  address_v4(const address_v4& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v4
address_v4	asio/include/asio/ip/address_v4.hpp	/^class address_v4$/;"	c	namespace:asio::ip
address_v4_iterator	asio/include/asio/ip/address_v4_iterator.hpp	/^typedef basic_address_iterator<address_v4> address_v4_iterator;$/;"	t	namespace:asio::ip	typeref:typename:basic_address_iterator<address_v4>
address_v4_iterator	asio/include/asio/ts/netfwd.hpp	/^typedef basic_address_iterator<address_v4> address_v4_iterator;$/;"	t	namespace:asio::ip	typeref:typename:basic_address_iterator<address_v4>
address_v4_range	asio/include/asio/ip/address_v4_range.hpp	/^typedef basic_address_range<address_v4> address_v4_range;$/;"	t	namespace:asio::ip	typeref:typename:basic_address_range<address_v4>
address_v4_range	asio/include/asio/ts/netfwd.hpp	/^typedef basic_address_range<address_v4> address_v4_range;$/;"	t	namespace:asio::ip	typeref:typename:basic_address_range<address_v4>
address_v6	asio/include/asio/ip/address_v6.hpp	/^class address_v6$/;"	c	namespace:asio::ip
address_v6_iterator	asio/include/asio/ip/address_v6_iterator.hpp	/^typedef basic_address_iterator<address_v6> address_v6_iterator;$/;"	t	namespace:asio::ip	typeref:typename:basic_address_iterator<address_v6>
address_v6_iterator	asio/include/asio/ts/netfwd.hpp	/^typedef basic_address_iterator<address_v6> address_v6_iterator;$/;"	t	namespace:asio::ip	typeref:typename:basic_address_iterator<address_v6>
address_v6_range	asio/include/asio/ip/address_v6_range.hpp	/^typedef basic_address_range<address_v6> address_v6_range;$/;"	t	namespace:asio::ip	typeref:typename:basic_address_range<address_v6>
address_v6_range	asio/include/asio/ts/netfwd.hpp	/^typedef basic_address_range<address_v6> address_v6_range;$/;"	t	namespace:asio::ip	typeref:typename:basic_address_range<address_v6>
addrinfo_	asio/include/asio/detail/resolve_query_op.hpp	/^  asio::detail::addrinfo_type* addrinfo_;$/;"	m	class:asio::detail::resolve_query_op	typeref:typename:asio::detail::addrinfo_type *
addrinfo_emulation	asio/include/asio/detail/old_win_sdk_compat.hpp	/^struct addrinfo_emulation$/;"	s	namespace:asio::detail
addrinfo_errors	asio/include/asio/error.hpp	/^enum addrinfo_errors$/;"	g	namespace:asio::error
addrinfo_type	asio/include/asio/detail/socket_types.hpp	/^struct addrinfo_type { int ai_flags;$/;"	s	namespace:asio::detail
addrlen_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  std::size_t addrlen_;$/;"	m	class:asio::detail::reactive_socket_accept_op_base	typeref:typename:std::size_t
adopt_lock	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    enum adopt_lock_t { adopt_lock };$/;"	e	enum:asio::detail::conditionally_enabled_mutex::scoped_lock::adopt_lock_t
adopt_lock	asio/include/asio/detail/scoped_lock.hpp	/^  enum adopt_lock_t { adopt_lock };$/;"	e	enum:asio::detail::scoped_lock::adopt_lock_t
adopt_lock_t	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    enum adopt_lock_t { adopt_lock };$/;"	g	class:asio::detail::conditionally_enabled_mutex::scoped_lock
adopt_lock_t	asio/include/asio/detail/scoped_lock.hpp	/^  enum adopt_lock_t { adopt_lock };$/;"	g	class:asio::detail::scoped_lock
advance	asio/include/asio/buffers_iterator.hpp	/^  void advance(std::ptrdiff_t n)$/;"	f	class:asio::buffers_iterator	typeref:typename:void
after-newline	asio/src/doc/reference.xsl	/^      $preceding-node-name = 'linebreak'"\/>$/;"	v	matchedTemplate:text()
after-newline	asio/src/doc/tutorial.xsl	/^      $preceding-node-name = 'linebreak'"\/>$/;"	v	matchedTemplate:text()
ai_	asio/include/asio/detail/resolver_service_base.hpp	/^    asio::detail::addrinfo_type* ai_;$/;"	m	class:asio::detail::resolver_service_base::auto_addrinfo	typeref:typename:asio::detail::addrinfo_type *
ai_addr	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  sockaddr* ai_addr;$/;"	m	struct:asio::detail::addrinfo_emulation	typeref:typename:sockaddr *
ai_addr	asio/include/asio/detail/socket_types.hpp	/^  int ai_addrlen; const void* ai_addr;$/;"	m	struct:asio::detail::addrinfo_type	typeref:typename:const void *
ai_addrlen	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  size_t ai_addrlen;$/;"	m	struct:asio::detail::addrinfo_emulation	typeref:typename:size_t
ai_addrlen	asio/include/asio/detail/socket_types.hpp	/^  int ai_addrlen; const void* ai_addr;$/;"	m	struct:asio::detail::addrinfo_type	typeref:typename:int
ai_canonname	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  char* ai_canonname;$/;"	m	struct:asio::detail::addrinfo_emulation	typeref:typename:char *
ai_canonname	asio/include/asio/detail/socket_types.hpp	/^  const char* ai_canonname; addrinfo_type* ai_next; };$/;"	m	struct:asio::detail::addrinfo_type	typeref:typename:const char *
ai_family	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  int ai_family;$/;"	m	struct:asio::detail::addrinfo_emulation	typeref:typename:int
ai_family	asio/include/asio/detail/socket_types.hpp	/^  int ai_family, ai_socktype, ai_protocol;$/;"	m	struct:asio::detail::addrinfo_type	typeref:typename:int
ai_flags	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  int ai_flags;$/;"	m	struct:asio::detail::addrinfo_emulation	typeref:typename:int
ai_flags	asio/include/asio/detail/socket_types.hpp	/^struct addrinfo_type { int ai_flags;$/;"	m	struct:asio::detail::addrinfo_type	typeref:typename:int
ai_next	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  addrinfo_emulation* ai_next;$/;"	m	struct:asio::detail::addrinfo_emulation	typeref:typename:addrinfo_emulation *
ai_next	asio/include/asio/detail/socket_types.hpp	/^  const char* ai_canonname; addrinfo_type* ai_next; };$/;"	m	struct:asio::detail::addrinfo_type	typeref:typename:addrinfo_type *
ai_protocol	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  int ai_protocol;$/;"	m	struct:asio::detail::addrinfo_emulation	typeref:typename:int
ai_protocol	asio/include/asio/detail/socket_types.hpp	/^  int ai_family, ai_socktype, ai_protocol;$/;"	m	struct:asio::detail::addrinfo_type	typeref:typename:int
ai_socktype	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  int ai_socktype;$/;"	m	struct:asio::detail::addrinfo_emulation	typeref:typename:int
ai_socktype	asio/include/asio/detail/socket_types.hpp	/^  int ai_family, ai_socktype, ai_protocol;$/;"	m	struct:asio::detail::addrinfo_type	typeref:typename:int
all_empty	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  bool all_empty() const$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:bool
all_empty	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static bool all_empty(Iterator begin, Iterator end)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:bool
all_empty	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static bool all_empty(const Buffers& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:bool
all_empty	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static bool all_empty(const asio::const_buffer& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:bool
all_empty	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static bool all_empty(const asio::const_buffers_1& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:bool
all_empty	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static bool all_empty(const asio::mutable_buffer& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:bool
all_empty	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static bool all_empty(const asio::mutable_buffers_1& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:bool
all_matching	asio/include/asio/ip/resolver_base.hpp	/^  static const flags all_matching = implementation_defined;$/;"	m	class:asio::ip::resolver_base	typeref:typename:const flags
alloc	asio/include/asio/detail/object_pool.hpp	/^  Object* alloc()$/;"	f	class:asio::detail::object_pool	typeref:typename:Object *
alloc	asio/include/asio/detail/object_pool.hpp	/^  Object* alloc(Arg arg)$/;"	f	class:asio::detail::object_pool	typeref:typename:Object *
allocate	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  T* allocate(std::size_t n)$/;"	f	class:asio::detail::hook_allocator	typeref:typename:T *
allocate	asio/include/asio/detail/handler_alloc_helpers.hpp	/^inline void* allocate(std::size_t s, Handler& h)$/;"	f	namespace:asio_handler_alloc_helpers	typeref:typename:void *
allocate	asio/include/asio/detail/recycling_allocator.hpp	/^  T* allocate(std::size_t n)$/;"	f	class:asio::detail::recycling_allocator	typeref:typename:T *
allocate	asio/include/asio/detail/thread_info_base.hpp	/^  static void* allocate(Purpose, thread_info_base* this_thread,$/;"	f	class:asio::detail::thread_info_base	typeref:typename:void *
allocate	asio/include/asio/detail/thread_info_base.hpp	/^  static void* allocate(thread_info_base* this_thread, std::size_t size)$/;"	f	class:asio::detail::thread_info_base	typeref:typename:void *
allocate	asio/src/examples/cpp03/allocation/server.cpp	/^  T* allocate(std::size_t n) const$/;"	f	class:handler_allocator	typeref:typename:T *	file:
allocate	asio/src/examples/cpp03/allocation/server.cpp	/^  void* allocate(std::size_t size)$/;"	f	class:handler_memory	typeref:typename:void *	file:
allocate	asio/src/examples/cpp11/allocation/server.cpp	/^  T* allocate(std::size_t n) const$/;"	f	class:handler_allocator	typeref:typename:T *	file:
allocate	asio/src/examples/cpp11/allocation/server.cpp	/^  void* allocate(std::size_t size)$/;"	f	class:handler_memory	typeref:typename:void *	file:
allocate	asio/src/tests/latency/allocator.hpp	/^  void* allocate(std::size_t n)$/;"	f	class:allocator	typeref:typename:void *
allocate	asio/src/tests/performance/handler_allocator.hpp	/^  void* allocate(std::size_t size)$/;"	f	class:handler_allocator	typeref:typename:void *
allocation_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^allocation_server_SOURCES = allocation\/server.cpp$/;"	m
allocation_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^allocation_server_SOURCES = allocation\/server.cpp$/;"	m
allocator	asio/src/tests/latency/allocator.hpp	/^  allocator()$/;"	f	class:allocator
allocator	asio/src/tests/latency/allocator.hpp	/^class allocator$/;"	c
allocator_	asio/include/asio/detail/executor_function.hpp	/^  Alloc allocator_;$/;"	m	class:asio::detail::executor_function	typeref:typename:Alloc
allocator_	asio/include/asio/detail/executor_op.hpp	/^  Alloc allocator_;$/;"	m	class:asio::detail::executor_op	typeref:typename:Alloc
allocator_	asio/include/asio/impl/executor.hpp	/^    allocator_type allocator_;$/;"	m	struct:asio::executor::impl::raw_mem	typeref:typename:allocator_type
allocator_	asio/include/asio/impl/executor.hpp	/^  Allocator allocator_;$/;"	m	class:asio::executor::impl	typeref:typename:Allocator
allocator_	asio/include/asio/impl/use_future.hpp	/^  Allocator allocator_;$/;"	m	class:asio::detail::packaged_handler	typeref:typename:Allocator
allocator_	asio/include/asio/impl/use_future.hpp	/^  Allocator allocator_;$/;"	m	class:asio::detail::packaged_token	typeref:typename:Allocator
allocator_	asio/include/asio/impl/use_future.hpp	/^  Allocator allocator_;$/;"	m	class:asio::detail::promise_handler	typeref:typename:Allocator
allocator_	asio/include/asio/use_future.hpp	/^    std_allocator_void, Allocator>::type allocator_;$/;"	m	class:asio::use_future_t	typeref:typename:conditional<is_same<std::allocator<void>,Allocator>::value,std_allocator_void,Allocator>::type
allocator_	asio/src/tests/latency/udp_server.cpp	/^  allocator allocator_;$/;"	m	class:udp_server	typeref:typename:allocator	file:
allocator_	asio/src/tests/performance/handler_allocator.hpp	/^  handler_allocator& allocator_;$/;"	m	class:custom_alloc_handler	typeref:typename:handler_allocator &
allocator_arg_t	asio/include/asio/detail/memory.hpp	/^struct allocator_arg_t {};$/;"	s	namespace:asio
allocator_type	asio/include/asio/impl/compose.hpp	/^      std::allocator<void> >::type allocator_type;$/;"	t	class:asio::detail::composed_op	typeref:typename:associated_allocator<Handler,std::allocator<void>>::type
allocator_type	asio/include/asio/impl/executor.hpp	/^  typedef ASIO_REBIND_ALLOC(Allocator, impl) allocator_type;$/;"	t	class:asio::executor::impl
allocator_type	asio/include/asio/impl/use_future.hpp	/^  typedef Allocator allocator_type;$/;"	t	class:asio::detail::packaged_handler	typeref:typename:Allocator
allocator_type	asio/include/asio/impl/use_future.hpp	/^  typedef Allocator allocator_type;$/;"	t	class:asio::detail::promise_handler	typeref:typename:Allocator
allocator_type	asio/include/asio/use_future.hpp	/^  typedef Allocator allocator_type;$/;"	t	class:asio::use_future_t	typeref:typename:Allocator
allocator_type	asio/src/examples/cpp03/allocation/server.cpp	/^  typedef handler_allocator<Handler> allocator_type;$/;"	t	class:custom_alloc_handler	typeref:typename:handler_allocator<Handler>	file:
allocator_type	asio/src/examples/cpp11/allocation/server.cpp	/^  using allocator_type = handler_allocator<Handler>;$/;"	t	class:custom_alloc_handler	typeref:typename:handler_allocator<Handler>	file:
allocator_type	asio/src/examples/cpp11/operations/composed_5.cpp	/^      using allocator_type = asio::associated_allocator_t<$/;"	t	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:asio::associated_allocator_t<typename std::decay<CompletionHandler>::type,std::allocator<void>>	file:
allocator_type	asio/src/examples/cpp11/operations/composed_6.cpp	/^      using allocator_type = asio::associated_allocator_t<$/;"	t	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:asio::associated_allocator_t<typename std::decay<CompletionHandler>::type,std::allocator<void>>	file:
allocator_type	asio/src/examples/cpp14/operations/composed_5.cpp	/^      using allocator_type = asio::associated_allocator_t<$/;"	t	struct:async_write_message::__anon32ec9f8e0102::intermediate_completion_handler	file:
allocator_type	asio/src/examples/cpp14/operations/composed_6.cpp	/^      using allocator_type = asio::associated_allocator_t<$/;"	t	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	file:
already_connected	asio/include/asio/error.hpp	/^  already_connected = ASIO_SOCKET_ERROR(EISCONN),$/;"	e	enum:asio::error::basic_errors
already_open	asio/include/asio/error.hpp	/^  already_open = 1,$/;"	e	enum:asio::error::misc_errors
already_started	asio/include/asio/error.hpp	/^  already_started = ASIO_SOCKET_ERROR(EALREADY),$/;"	e	enum:asio::error::basic_errors
always_fail_option	asio/include/asio/detail/socket_types.hpp	/^const int always_fail_option = 2;$/;"	v	namespace:asio::detail	typeref:typename:const int
anchor	asio/src/doc/tutorial.xsl	/^      <xsl:variable name="anchor">$/;"	v	matchedTemplate:ref[@kindref='member']
any	asio/include/asio/ip/address_v4.hpp	/^  static address_v4 any() ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v4	typeref:typename:address_v4
any	asio/include/asio/ip/address_v6.hpp	/^  static address_v6 any() ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v6	typeref:typename:address_v6
archetypes	asio/src/tests/unit/archetypes/async_ops.hpp	/^namespace archetypes {$/;"	n
archetypes	asio/src/tests/unit/archetypes/async_result.hpp	/^namespace archetypes {$/;"	n
archetypes	asio/src/tests/unit/archetypes/gettable_socket_option.hpp	/^namespace archetypes {$/;"	n
archetypes	asio/src/tests/unit/archetypes/io_control_command.hpp	/^namespace archetypes {$/;"	n
archetypes	asio/src/tests/unit/archetypes/settable_socket_option.hpp	/^namespace archetypes {$/;"	n
arg1_	asio/include/asio/detail/bind_handler.hpp	/^  Arg1 arg1_;$/;"	m	class:asio::detail::binder1	typeref:typename:Arg1
arg1_	asio/include/asio/detail/bind_handler.hpp	/^  Arg1 arg1_;$/;"	m	class:asio::detail::binder2	typeref:typename:Arg1
arg1_	asio/include/asio/detail/bind_handler.hpp	/^  Arg1 arg1_;$/;"	m	class:asio::detail::binder3	typeref:typename:Arg1
arg1_	asio/include/asio/detail/bind_handler.hpp	/^  Arg1 arg1_;$/;"	m	class:asio::detail::binder4	typeref:typename:Arg1
arg1_	asio/include/asio/detail/bind_handler.hpp	/^  Arg1 arg1_;$/;"	m	class:asio::detail::binder5	typeref:typename:Arg1
arg1_	asio/include/asio/detail/bind_handler.hpp	/^  Arg1 arg1_;$/;"	m	class:asio::detail::move_binder1	typeref:typename:Arg1
arg1_	asio/include/asio/detail/bind_handler.hpp	/^  Arg1 arg1_;$/;"	m	class:asio::detail::move_binder2	typeref:typename:Arg1
arg2_	asio/include/asio/detail/bind_handler.hpp	/^  Arg2 arg2_;$/;"	m	class:asio::detail::binder2	typeref:typename:Arg2
arg2_	asio/include/asio/detail/bind_handler.hpp	/^  Arg2 arg2_;$/;"	m	class:asio::detail::binder3	typeref:typename:Arg2
arg2_	asio/include/asio/detail/bind_handler.hpp	/^  Arg2 arg2_;$/;"	m	class:asio::detail::binder4	typeref:typename:Arg2
arg2_	asio/include/asio/detail/bind_handler.hpp	/^  Arg2 arg2_;$/;"	m	class:asio::detail::binder5	typeref:typename:Arg2
arg2_	asio/include/asio/detail/bind_handler.hpp	/^  Arg2 arg2_;$/;"	m	class:asio::detail::move_binder2	typeref:typename:Arg2
arg3_	asio/include/asio/detail/bind_handler.hpp	/^  Arg3 arg3_;$/;"	m	class:asio::detail::binder3	typeref:typename:Arg3
arg3_	asio/include/asio/detail/bind_handler.hpp	/^  Arg3 arg3_;$/;"	m	class:asio::detail::binder4	typeref:typename:Arg3
arg3_	asio/include/asio/detail/bind_handler.hpp	/^  Arg3 arg3_;$/;"	m	class:asio::detail::binder5	typeref:typename:Arg3
arg4_	asio/include/asio/detail/bind_handler.hpp	/^  Arg4 arg4_;$/;"	m	class:asio::detail::binder4	typeref:typename:Arg4
arg4_	asio/include/asio/detail/bind_handler.hpp	/^  Arg4 arg4_;$/;"	m	class:asio::detail::binder5	typeref:typename:Arg4
arg5_	asio/include/asio/detail/bind_handler.hpp	/^  Arg5 arg5_;$/;"	m	class:asio::detail::binder5	typeref:typename:Arg5
argument_type	asio/include/asio/bind_executor.hpp	/^  typedef A1 argument_type;$/;"	t	struct:asio::detail::executor_binder_argument_type	typeref:typename:A1
argument_type	asio/include/asio/bind_executor.hpp	/^  typedef see_below argument_type;$/;"	t	class:asio::executor_binder	typeref:typename:see_below
argument_type	asio/include/asio/bind_executor.hpp	/^  typedef typename T::argument_type argument_type;$/;"	t	struct:asio::detail::executor_binder_argument_type	typeref:typename:T::argument_type
as_default_on_t	asio/include/asio/use_awaitable.hpp	/^  using as_default_on_t = typename T::template rebind_executor<$/;"	t	struct:asio::use_awaitable_t	typeref:typename:T::template rebind_executor<executor_with_default<typename T::executor_type>>::other
asio	asio/configure.ac	/^AC_INIT(asio, [1.14.1])$/;"	p
asio	asio/include/asio/associated_allocator.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/associated_executor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/async_result.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/awaitable.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_datagram_socket.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_deadline_timer.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_io_object.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_raw_socket.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_seq_packet_socket.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_serial_port.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_signal_set.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_socket.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_socket_acceptor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_socket_iostream.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_socket_streambuf.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_stream_socket.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_streambuf.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_streambuf_fwd.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/basic_waitable_timer.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/bind_executor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/buffer.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/buffered_read_stream.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/buffered_read_stream_fwd.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/buffered_stream.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/buffered_stream_fwd.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/buffered_write_stream.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/buffered_write_stream_fwd.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/buffers_iterator.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/co_spawn.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/completion_condition.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/compose.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/connect.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/coroutine.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/deadline_timer.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/defer.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detached.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/array.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/atomic_count.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/base_from_completion_cond.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/bind_handler.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/buffer_resize_guard.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/buffered_stream_storage.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/call_stack.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/chrono.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/chrono_time_traits.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/completion_handler.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/conditionally_enabled_event.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/consuming_buffers.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/cstddef.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/cstdint.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/deadline_timer_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/dependent_type.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/descriptor_ops.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/descriptor_read_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/descriptor_write_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/dev_poll_reactor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/epoll_reactor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/event.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/eventfd_select_interrupter.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/executor_function.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/executor_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/fd_set_adapter.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/fenced_block.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/functional.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/gcc_sync_fenced_block.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/global.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/handler_alloc_helpers.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/handler_tracking.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/handler_type_requirements.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/handler_work.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/hash_map.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/impl/dev_poll_reactor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/impl/epoll_reactor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/impl/kqueue_reactor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/impl/select_reactor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/impl/service_registry.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/impl/strand_executor_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/impl/strand_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/impl/win_iocp_io_context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/impl/winrt_timer_scheduler.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/io_control.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/io_object_executor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/io_object_impl.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/is_buffer_sequence.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/is_executor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/keyword_tss_ptr.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/kqueue_reactor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/local_free_on_block_exit.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/macos_fenced_block.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/memory.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/non_const_lvalue.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/noncopyable.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/null_event.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/null_fenced_block.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/null_global.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/null_mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/null_reactor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/null_signal_blocker.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/null_socket_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/null_static_mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/null_thread.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/null_tss_ptr.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/object_pool.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/old_win_sdk_compat.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/op_queue.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/operation.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/pipe_select_interrupter.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/posix_event.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/posix_global.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/posix_mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/posix_signal_blocker.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/posix_static_mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/posix_thread.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/posix_tss_ptr.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_descriptor_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_null_buffers_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_serial_port_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_socket_send_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_socket_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_socket_service_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactive_wait_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactor_fwd.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactor_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/reactor_op_queue.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/recycling_allocator.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/resolve_endpoint_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/resolve_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/resolve_query_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/resolver_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/resolver_service_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/scheduler.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/scheduler_operation.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/scheduler_thread_info.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/scoped_lock.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/scoped_ptr.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/select_interrupter.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/select_reactor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/service_registry.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/signal_blocker.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/signal_handler.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/signal_init.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/signal_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/signal_set_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/socket_holder.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/socket_ops.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/socket_option.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/socket_select_interrupter.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/socket_types.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/solaris_fenced_block.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/static_mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/std_event.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/std_fenced_block.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/std_global.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/std_mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/std_static_mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/std_thread.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/strand_executor_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/strand_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/string_view.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/thread.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/thread_context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/thread_group.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/thread_info_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/throw_error.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/throw_exception.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/timer_queue.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/timer_queue_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/timer_queue_ptime.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/timer_queue_set.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/timer_scheduler_fwd.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/tss_ptr.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/type_traits.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/wait_handler.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/wait_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_event.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_fd_set_adapter.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_fenced_block.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_global.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_handle_read_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_handle_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_handle_write_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_io_context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_null_buffers_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_operation.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_overlapped_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_socket_send_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_socket_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_thread_info.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_iocp_wait_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_object_handle_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_static_mutex.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_thread.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/win_tss_ptr.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winapp_thread.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/wince_thread.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_async_manager.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_async_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_resolve_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_resolver_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_socket_connect_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_socket_recv_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_socket_send_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_ssocket_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winrt_utils.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/winsock_init.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/work_dispatcher.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/detail/wrapped_handler.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/dispatch.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/error.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/error_code.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/execution_context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/executor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/executor_work_guard.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/generic/basic_endpoint.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/generic/datagram_protocol.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/generic/detail/endpoint.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/generic/raw_protocol.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/generic/seq_packet_protocol.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/generic/stream_protocol.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/handler_alloc_hook.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/handler_continuation_hook.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/handler_invoke_hook.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/high_resolution_timer.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/awaitable.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/buffered_read_stream.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/buffered_write_stream.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/co_spawn.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/compose.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/connect.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/defer.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/detached.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/dispatch.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/execution_context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/executor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/io_context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/post.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/read.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/read_at.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/read_until.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/redirect_error.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/serial_port_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/spawn.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/system_context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/system_executor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/thread_pool.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/use_awaitable.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/use_future.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/write.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/impl/write_at.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/io_context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/io_context_strand.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/io_service.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/address.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/address_v4.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/address_v4_iterator.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/address_v4_range.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/address_v6.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/address_v6_iterator.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/address_v6_range.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/bad_address_cast.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/basic_endpoint.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/basic_resolver.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/basic_resolver_entry.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/basic_resolver_iterator.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/basic_resolver_query.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/basic_resolver_results.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/detail/endpoint.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/detail/socket_option.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/host_name.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/icmp.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/impl/address.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/impl/address_v4.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/impl/address_v6.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/impl/basic_endpoint.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/impl/network_v4.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/impl/network_v6.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/multicast.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/network_v4.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/network_v6.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/resolver_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/resolver_query_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/tcp.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/udp.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/unicast.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ip/v6_only.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/is_executor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/is_read_buffered.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/is_write_buffered.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/local/basic_endpoint.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/local/connect_pair.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/local/datagram_protocol.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/local/detail/endpoint.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/local/stream_protocol.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/packaged_task.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/placeholders.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/posix/basic_descriptor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/posix/basic_stream_descriptor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/posix/descriptor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/posix/descriptor_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/posix/stream_descriptor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/post.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/read.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/read_at.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/read_until.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/redirect_error.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/serial_port.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/serial_port_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/signal_set.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/socket_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/spawn.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/context_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/engine.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/handshake_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/io.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/openssl_init.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/password_callback.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/read_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/shutdown_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/stream_core.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/verify_callback.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/detail/write_op.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/error.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/impl/context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/rfc2818_verification.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/stream.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/stream_base.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/verify_context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ssl/verify_mode.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/steady_timer.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/strand.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/streambuf.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/system_context.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/system_error.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/system_executor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/system_timer.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/this_coro.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/thread.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/thread_pool.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/time_traits.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/ts/netfwd.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/use_awaitable.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/use_future.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/uses_executor.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/wait_traits.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/windows/basic_object_handle.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/windows/basic_overlapped_handle.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/windows/basic_random_access_handle.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/windows/basic_stream_handle.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/windows/object_handle.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/windows/overlapped_handle.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/windows/overlapped_ptr.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/windows/random_access_handle.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/windows/stream_handle.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/write.hpp	/^namespace asio {$/;"	n
asio	asio/include/asio/write_at.hpp	/^namespace asio {$/;"	n
asio	asio/src/doc/asioref.xsl	/^  <article id="asio" name="Asio Reference Manual" dirname="asio">$/;"	i
asio	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^namespace asio {$/;"	n	file:
asio	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^namespace asio {$/;"	n	file:
asio	asio/src/tests/unit/archetypes/async_result.hpp	/^namespace asio {$/;"	n
asio	asio/src/tests/unit/read_until.cpp	/^namespace asio {$/;"	n	file:
asio	asio/src/tests/unit/unit_test.hpp	/^namespace asio {$/;"	n
asio Release Checklist	asio/src/doc/release_checklist.htm	/^    <h1>asio Release Checklist<\/h1>$/;"	h
asio.index	asio/src/doc/index.xml	/^<section id="asio.index">$/;"	i
asio.index.index	asio/src/doc/index.xml	/^  <index id="asio.index.index"\/>$/;"	i
asio.version	asio/src/doc/asioref.xsl	/^<xsl:param name="asio.version">X.Y.Z<\/xsl:param>$/;"	p
asio_handler_alloc_helpers	asio/include/asio/detail/handler_alloc_helpers.hpp	/^namespace asio_handler_alloc_helpers {$/;"	n
asio_handler_allocate	asio/include/asio/detail/bind_handler.hpp	/^inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/detail/wrapped_handler.hpp	/^inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/buffered_read_stream.hpp	/^  inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/buffered_write_stream.hpp	/^  inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/compose.hpp	/^  inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/connect.hpp	/^  inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/read.hpp	/^  inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/read_at.hpp	/^  inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/read_until.hpp	/^  inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/redirect_error.hpp	/^inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/spawn.hpp	/^  inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/write.hpp	/^  inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/impl/write_at.hpp	/^  inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void *
asio_handler_allocate	asio/include/asio/ssl/detail/io.hpp	/^inline void* asio_handler_allocate(std::size_t size,$/;"	f	namespace:asio::ssl::detail	typeref:typename:void *
asio_handler_allocate	asio/src/tests/latency/udp_server.cpp	/^    friend void* asio_handler_allocate(std::size_t n, ref* r)$/;"	f	class:udp_server	typeref:typename:void *	file:
asio_handler_allocate	asio/src/tests/latency/udp_server.cpp	/^  friend void* asio_handler_allocate(std::size_t n, udp_server* s)$/;"	f	typeref:typename:void *	file:
asio_handler_allocate	asio/src/tests/performance/handler_allocator.hpp	/^  friend void* asio_handler_allocate(std::size_t size,$/;"	f	typeref:typename:void *
asio_handler_allocate	asio/src/tests/unit/deadline_timer.cpp	/^void* asio_handler_allocate(std::size_t size,$/;"	f	typeref:typename:void *
asio_handler_allocate	asio/src/tests/unit/system_timer.cpp	/^void* asio_handler_allocate(std::size_t size,$/;"	f	typeref:typename:void *
asio_handler_cont_helpers	asio/include/asio/detail/handler_cont_helpers.hpp	/^namespace asio_handler_cont_helpers {$/;"	n
asio_handler_deallocate	asio/include/asio/detail/bind_handler.hpp	/^inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/detail/wrapped_handler.hpp	/^inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/buffered_read_stream.hpp	/^  inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/buffered_write_stream.hpp	/^  inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/compose.hpp	/^  inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/connect.hpp	/^  inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/read.hpp	/^  inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/read_at.hpp	/^  inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/read_until.hpp	/^  inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/redirect_error.hpp	/^inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/spawn.hpp	/^  inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/write.hpp	/^  inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/impl/write_at.hpp	/^  inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_deallocate	asio/include/asio/ssl/detail/io.hpp	/^inline void asio_handler_deallocate(void* pointer, std::size_t size,$/;"	f	namespace:asio::ssl::detail	typeref:typename:void
asio_handler_deallocate	asio/src/tests/latency/udp_server.cpp	/^    friend void asio_handler_deallocate(void* p, std::size_t n, ref* r)$/;"	f	class:udp_server	typeref:typename:void	file:
asio_handler_deallocate	asio/src/tests/latency/udp_server.cpp	/^  friend void asio_handler_deallocate(void* p, std::size_t, udp_server* s)$/;"	f	typeref:typename:void	file:
asio_handler_deallocate	asio/src/tests/performance/handler_allocator.hpp	/^  friend void asio_handler_deallocate(void* pointer, std::size_t \/*size*\/,$/;"	f	typeref:typename:void
asio_handler_deallocate	asio/src/tests/unit/deadline_timer.cpp	/^void asio_handler_deallocate(void* pointer, std::size_t,$/;"	f	typeref:typename:void
asio_handler_deallocate	asio/src/tests/unit/system_timer.cpp	/^void asio_handler_deallocate(void* pointer, std::size_t,$/;"	f	typeref:typename:void
asio_handler_invoke	asio/include/asio/detail/bind_handler.hpp	/^inline void asio_handler_invoke(ASIO_MOVE_ARG(Function) function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/detail/bind_handler.hpp	/^inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/detail/bind_handler.hpp	/^inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/detail/wrapped_handler.hpp	/^inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/detail/wrapped_handler.hpp	/^inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/handler_invoke_hook.hpp	/^inline void asio_handler_invoke(Function& function, ...)$/;"	f	namespace:asio	typeref:typename:void
asio_handler_invoke	asio/include/asio/handler_invoke_hook.hpp	/^inline void asio_handler_invoke(const Function& function, ...)$/;"	f	namespace:asio	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/buffered_read_stream.hpp	/^  inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/buffered_read_stream.hpp	/^  inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/buffered_write_stream.hpp	/^  inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/buffered_write_stream.hpp	/^  inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/compose.hpp	/^  inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/compose.hpp	/^  inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/connect.hpp	/^  inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/connect.hpp	/^  inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/read.hpp	/^  inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/read.hpp	/^  inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/read_at.hpp	/^  inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/read_at.hpp	/^  inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/read_until.hpp	/^  inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/read_until.hpp	/^  inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/redirect_error.hpp	/^inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/redirect_error.hpp	/^inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/spawn.hpp	/^  inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/spawn.hpp	/^  inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/use_future.hpp	/^inline void asio_handler_invoke(Function& f,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/use_future.hpp	/^inline void asio_handler_invoke(const Function& f,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/write.hpp	/^  inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/write.hpp	/^  inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/write_at.hpp	/^  inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/impl/write_at.hpp	/^  inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/ssl/detail/io.hpp	/^inline void asio_handler_invoke(Function& function,$/;"	f	namespace:asio::ssl::detail	typeref:typename:void
asio_handler_invoke	asio/include/asio/ssl/detail/io.hpp	/^inline void asio_handler_invoke(const Function& function,$/;"	f	namespace:asio::ssl::detail	typeref:typename:void
asio_handler_invoke_helpers	asio/include/asio/detail/handler_invoke_helpers.hpp	/^namespace asio_handler_invoke_helpers {$/;"	n
asio_handler_is_continuation	asio/include/asio/detail/bind_handler.hpp	/^inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/detail/wrapped_handler.hpp	/^inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/handler_continuation_hook.hpp	/^inline bool asio_handler_is_continuation(...)$/;"	f	namespace:asio	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/buffered_read_stream.hpp	/^  inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/buffered_write_stream.hpp	/^  inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/compose.hpp	/^  inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/connect.hpp	/^  inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/read.hpp	/^  inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/read_at.hpp	/^  inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/read_until.hpp	/^  inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/redirect_error.hpp	/^inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/spawn.hpp	/^  inline bool asio_handler_is_continuation(coro_handler<Handler, T>*)$/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/write.hpp	/^  inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/impl/write_at.hpp	/^  inline bool asio_handler_is_continuation($/;"	f	namespace:asio::detail	typeref:typename:bool
asio_handler_is_continuation	asio/include/asio/ssl/detail/io.hpp	/^inline bool asio_handler_is_continuation($/;"	f	namespace:asio::ssl::detail	typeref:typename:bool
asn1	asio/include/asio/ssl/context_base.hpp	/^    asn1,$/;"	e	enum:asio::ssl::context_base::file_format
assign	asio/include/asio/basic_serial_port.hpp	/^  ASIO_SYNC_OP_VOID assign(const native_handle_type& native_serial_port,$/;"	f	class:asio::basic_serial_port	typeref:typename:ASIO_SYNC_OP_VOID
assign	asio/include/asio/basic_serial_port.hpp	/^  void assign(const native_handle_type& native_serial_port)$/;"	f	class:asio::basic_serial_port	typeref:typename:void
assign	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID assign(const protocol_type& protocol,$/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
assign	asio/include/asio/basic_socket.hpp	/^  void assign(const protocol_type& protocol,$/;"	f	class:asio::basic_socket	typeref:typename:void
assign	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID assign(const protocol_type& protocol,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
assign	asio/include/asio/basic_socket_acceptor.hpp	/^  void assign(const protocol_type& protocol,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
assign	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code assign(implementation_type&, const protocol_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
assign	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  asio::error_code assign(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:asio::error_code
assign	asio/include/asio/detail/reactive_socket_service.hpp	/^  asio::error_code assign(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:asio::error_code
assign	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  asio::error_code assign(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:asio::error_code
assign	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  asio::error_code assign(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:asio::error_code
assign	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  asio::error_code assign(implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:asio::error_code
assign	asio/include/asio/error_code.hpp	/^  void assign(int v, const error_category& c)$/;"	f	class:asio::error_code	typeref:typename:void
assign	asio/include/asio/posix/basic_descriptor.hpp	/^  ASIO_SYNC_OP_VOID assign(const native_handle_type& native_descriptor,$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:ASIO_SYNC_OP_VOID
assign	asio/include/asio/posix/basic_descriptor.hpp	/^  void assign(const native_handle_type& native_descriptor)$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:void
assign	asio/include/asio/windows/basic_object_handle.hpp	/^  ASIO_SYNC_OP_VOID assign(const native_handle_type& handle,$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:ASIO_SYNC_OP_VOID
assign	asio/include/asio/windows/basic_object_handle.hpp	/^  void assign(const native_handle_type& handle)$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:void
assign	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  ASIO_SYNC_OP_VOID assign(const native_handle_type& handle,$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:ASIO_SYNC_OP_VOID
assign	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  void assign(const native_handle_type& handle)$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:void
associated_allocator	asio/include/asio/associated_allocator.hpp	/^struct associated_allocator$/;"	s	namespace:asio
associated_allocator	asio/include/asio/bind_executor.hpp	/^struct associated_allocator<executor_binder<T, Executor>, Allocator>$/;"	s	namespace:asio
associated_allocator	asio/include/asio/detail/bind_handler.hpp	/^struct associated_allocator<$/;"	s	namespace:asio
associated_allocator	asio/include/asio/detail/bind_handler.hpp	/^struct associated_allocator<detail::binder1<Handler, Arg1>, Allocator>$/;"	s	namespace:asio
associated_allocator	asio/include/asio/detail/bind_handler.hpp	/^struct associated_allocator<detail::binder2<Handler, Arg1, Arg2>, Allocator>$/;"	s	namespace:asio
associated_allocator	asio/include/asio/detail/bind_handler.hpp	/^struct associated_allocator<detail::move_binder1<Handler, Arg1>, Allocator>$/;"	s	namespace:asio
associated_allocator	asio/include/asio/impl/buffered_read_stream.hpp	/^struct associated_allocator<$/;"	s	namespace:asio
associated_allocator	asio/include/asio/impl/buffered_write_stream.hpp	/^struct associated_allocator<$/;"	s	namespace:asio
associated_allocator	asio/include/asio/impl/connect.hpp	/^struct associated_allocator<$/;"	s	namespace:asio
associated_allocator	asio/include/asio/impl/read.hpp	/^struct associated_allocator<$/;"	s	namespace:asio
associated_allocator	asio/include/asio/impl/read_at.hpp	/^struct associated_allocator<$/;"	s	namespace:asio
associated_allocator	asio/include/asio/impl/read_until.hpp	/^struct associated_allocator<$/;"	s	namespace:asio
associated_allocator	asio/include/asio/impl/redirect_error.hpp	/^struct associated_allocator<detail::redirect_error_handler<Handler>, Allocator>$/;"	s	namespace:asio
associated_allocator	asio/include/asio/impl/spawn.hpp	/^struct associated_allocator<detail::coro_handler<Handler, T>, Allocator>$/;"	s	namespace:asio
associated_allocator	asio/include/asio/impl/write.hpp	/^struct associated_allocator<$/;"	s	namespace:asio
associated_allocator	asio/include/asio/impl/write_at.hpp	/^struct associated_allocator<$/;"	s	namespace:asio
associated_allocator	asio/include/asio/ssl/detail/io.hpp	/^struct associated_allocator<$/;"	s	namespace:asio
associated_allocator_check	asio/include/asio/associated_allocator.hpp	/^struct associated_allocator_check$/;"	s	namespace:asio::detail
associated_allocator_impl	asio/include/asio/associated_allocator.hpp	/^struct associated_allocator_impl$/;"	s	namespace:asio::detail
associated_allocator_impl	asio/include/asio/associated_allocator.hpp	/^struct associated_allocator_impl<T, E,$/;"	s	namespace:asio::detail
associated_allocator_t	asio/include/asio/associated_allocator.hpp	/^using associated_allocator_t$/;"	t	namespace:asio	typeref:typename:associated_allocator<T,Allocator>::type
associated_executor	asio/include/asio/associated_executor.hpp	/^struct associated_executor$/;"	s	namespace:asio
associated_executor	asio/include/asio/bind_executor.hpp	/^struct associated_executor<executor_binder<T, Executor>, Executor1>$/;"	s	namespace:asio
associated_executor	asio/include/asio/detail/bind_handler.hpp	/^struct associated_executor<detail::binder1<Handler, Arg1>, Executor>$/;"	s	namespace:asio
associated_executor	asio/include/asio/detail/bind_handler.hpp	/^struct associated_executor<detail::binder2<Handler, Arg1, Arg2>, Executor>$/;"	s	namespace:asio
associated_executor	asio/include/asio/detail/bind_handler.hpp	/^struct associated_executor<detail::move_binder1<Handler, Arg1>, Executor>$/;"	s	namespace:asio
associated_executor	asio/include/asio/detail/bind_handler.hpp	/^struct associated_executor<detail::move_binder2<Handler, Arg1, Arg2>, Executor>$/;"	s	namespace:asio
associated_executor	asio/include/asio/impl/buffered_read_stream.hpp	/^struct associated_executor<$/;"	s	namespace:asio
associated_executor	asio/include/asio/impl/buffered_write_stream.hpp	/^struct associated_executor<$/;"	s	namespace:asio
associated_executor	asio/include/asio/impl/connect.hpp	/^struct associated_executor<$/;"	s	namespace:asio
associated_executor	asio/include/asio/impl/read.hpp	/^struct associated_executor<$/;"	s	namespace:asio
associated_executor	asio/include/asio/impl/read_at.hpp	/^struct associated_executor<$/;"	s	namespace:asio
associated_executor	asio/include/asio/impl/read_until.hpp	/^struct associated_executor<$/;"	s	namespace:asio
associated_executor	asio/include/asio/impl/redirect_error.hpp	/^struct associated_executor<detail::redirect_error_handler<Handler>, Executor>$/;"	s	namespace:asio
associated_executor	asio/include/asio/impl/spawn.hpp	/^struct associated_executor<detail::coro_handler<Handler, T>, Executor>$/;"	s	namespace:asio
associated_executor	asio/include/asio/impl/write.hpp	/^struct associated_executor<$/;"	s	namespace:asio
associated_executor	asio/include/asio/impl/write_at.hpp	/^struct associated_executor<$/;"	s	namespace:asio
associated_executor	asio/include/asio/ssl/detail/io.hpp	/^struct associated_executor<$/;"	s	namespace:asio
associated_executor_check	asio/include/asio/associated_executor.hpp	/^struct associated_executor_check$/;"	s	namespace:asio::detail
associated_executor_impl	asio/include/asio/associated_executor.hpp	/^struct associated_executor_impl$/;"	s	namespace:asio::detail
associated_executor_impl	asio/include/asio/associated_executor.hpp	/^struct associated_executor_impl<T, E,$/;"	s	namespace:asio::detail
associated_executor_t	asio/include/asio/associated_executor.hpp	/^using associated_executor_t = typename associated_executor<T, Executor>::type;$/;"	t	namespace:asio	typeref:typename:associated_executor<T,Executor>::type
async_accept	asio/include/asio/detail/null_socket_service.hpp	/^  void async_accept(implementation_type&, Socket&, endpoint_type*,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_accept	asio/include/asio/detail/reactive_socket_service.hpp	/^  void async_accept(implementation_type& impl, Socket& peer,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
async_accept	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void async_accept(implementation_type& impl, Socket& peer,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
async_completion	asio/include/asio/async_result.hpp	/^  explicit async_completion(CompletionToken& token)$/;"	f	struct:asio::async_completion
async_completion	asio/include/asio/async_result.hpp	/^  explicit async_completion(const typename decay<CompletionToken>::type& token)$/;"	f	struct:asio::async_completion
async_completion	asio/include/asio/async_result.hpp	/^  explicit async_completion(typename decay<CompletionToken>::type& token)$/;"	f	struct:asio::async_completion
async_completion	asio/include/asio/async_result.hpp	/^struct async_completion$/;"	s	namespace:asio
async_connect	asio/include/asio/detail/null_socket_service.hpp	/^  void async_connect(implementation_type&, const endpoint_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_connect	asio/include/asio/detail/reactive_socket_service.hpp	/^  void async_connect(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
async_connect	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void async_connect(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
async_connect	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  void async_connect(implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:void
async_getline	asio/src/examples/cpp14/executors/async_1.cpp	/^void async_getline(std::istream& is, Handler handler)$/;"	f	typeref:typename:void
async_getline	asio/src/examples/cpp14/executors/async_2.cpp	/^void async_getline(std::istream& is, Handler handler)$/;"	f	typeref:typename:void
async_getlines	asio/src/examples/cpp14/executors/async_2.cpp	/^void async_getlines(std::istream& is, std::string init, Handler handler)$/;"	f	typeref:typename:void
async_initiate	asio/include/asio/async_result.hpp	/^async_initiate(ASIO_MOVE_ARG(Initiation) initiation,$/;"	f	namespace:asio	typeref:typename:enable_if<!detail::async_result_has_initiate_memfn<CompletionToken,Signature>::value,ASIO_INITFN_RESULT_TYPE (CompletionToken,Signature)>::type
async_initiate	asio/include/asio/async_result.hpp	/^async_initiate(ASIO_MOVE_ARG(Initiation) initiation,$/;"	f	namespace:asio	typeref:typename:enable_if<detail::async_result_has_initiate_memfn<CompletionToken,Signature>::value,ASIO_INITFN_DEDUCED_RESULT_TYPE (CompletionToken,Signature,(async_result<typename decay<CompletionToken>::type,Signature>::initiate (declval<ASIO_MOVE_ARG (Initiation)> (),declval<ASIO_MOVE_ARG (CompletionToken)> ())))>::type
async_initiate	asio/include/asio/async_result.hpp	/^async_initiate(ASIO_MOVE_ARG(Initiation) initiation,$/;"	f	namespace:asio	typeref:typename:enable_if<detail::async_result_has_initiate_memfn<CompletionToken,Signature>::value,ASIO_INITFN_DEDUCED_RESULT_TYPE (CompletionToken,Signature,(async_result<typename decay<CompletionToken>::type,Signature>::initiate (declval<ASIO_MOVE_ARG (Initiation)> (),declval<ASIO_MOVE_ARG (CompletionToken)> (),declval<ASIO_MOVE_ARG (Args)> ()...)))>::type
async_io	asio/include/asio/ssl/detail/io.hpp	/^inline void async_io(Stream& next_layer, stream_core& core,$/;"	f	namespace:asio::ssl::detail	typeref:typename:void
async_manager_	asio/include/asio/detail/winrt_resolver_service.hpp	/^  winrt_async_manager& async_manager_;$/;"	m	class:asio::detail::winrt_resolver_service	typeref:typename:winrt_async_manager &
async_manager_	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  winrt_async_manager& async_manager_;$/;"	m	class:asio::detail::winrt_ssocket_service_base	typeref:typename:winrt_async_manager &
async_move_accept	asio/include/asio/detail/reactive_socket_service.hpp	/^  void async_move_accept(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
async_move_accept	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void async_move_accept(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
async_read	asio/src/examples/cpp03/serialization/connection.hpp	/^  void async_read(T& t, Handler handler)$/;"	f	class:s11n_example::connection	typeref:typename:void
async_read	asio/src/tests/latency/tcp_server.cpp	/^        yield asio::async_read(socket_,$/;"	m	class:tcp_server::operator ()::asio	typeref:typename:yield	file:
async_read	asio/src/tests/unit/is_read_buffered.cpp	/^  void async_read(const Mutable_Buffers&, Handler handler)$/;"	f	class:test_stream	typeref:typename:void	file:
async_read	asio/src/tests/unit/is_write_buffered.cpp	/^  void async_read(const Mutable_Buffers&, Handler handler)$/;"	f	class:test_stream	typeref:typename:void	file:
async_read_handler	asio/src/tests/unit/read.cpp	/^void async_read_handler(const asio::error_code& e,$/;"	f	typeref:typename:void
async_read_handler	asio/src/tests/unit/read_at.cpp	/^void async_read_handler(const asio::error_code& e,$/;"	f	typeref:typename:void
async_read_handler	asio/src/tests/unit/read_until.cpp	/^void async_read_handler($/;"	f	typeref:typename:void
async_read_some	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  void async_read_some(implementation_type& impl,$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:void
async_read_some	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  void async_read_some(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:void
async_read_some	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  void async_read_some(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_handle_service	typeref:typename:void
async_read_some	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  void async_read_some(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:void
async_read_some	asio/src/tests/unit/read.cpp	/^  void async_read_some(const Mutable_Buffers& buffers,$/;"	f	class:test_stream	typeref:typename:void	file:
async_read_some	asio/src/tests/unit/read_until.cpp	/^  void async_read_some(const Mutable_Buffers& buffers, Handler handler)$/;"	f	class:test_stream	typeref:typename:void	file:
async_read_some_at	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  void async_read_some_at(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_handle_service	typeref:typename:void
async_read_some_at	asio/src/tests/unit/read_at.cpp	/^  void async_read_some_at(asio::uint64_t offset,$/;"	f	class:test_random_access_device	typeref:typename:void	file:
async_receive	asio/include/asio/detail/null_socket_service.hpp	/^  void async_receive(implementation_type&, const MutableBufferSequence&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_receive	asio/include/asio/detail/null_socket_service.hpp	/^  void async_receive(implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_receive	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  void async_receive(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:void
async_receive	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  void async_receive(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:void
async_receive	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  void async_receive(base_implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:void
async_receive	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  void async_receive(base_implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:void
async_receive_from	asio/include/asio/detail/null_socket_service.hpp	/^  void async_receive_from(implementation_type&, const MutableBufferSequence&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_receive_from	asio/include/asio/detail/null_socket_service.hpp	/^  void async_receive_from(implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_receive_from	asio/include/asio/detail/reactive_socket_service.hpp	/^  void async_receive_from(implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
async_receive_from	asio/include/asio/detail/reactive_socket_service.hpp	/^  void async_receive_from(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
async_receive_from	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void async_receive_from(implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
async_receive_from	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void async_receive_from(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
async_receive_with_flags	asio/include/asio/detail/null_socket_service.hpp	/^  void async_receive_with_flags(implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_receive_with_flags	asio/include/asio/detail/null_socket_service.hpp	/^  void async_receive_with_flags(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_receive_with_flags	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  void async_receive_with_flags(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:void
async_receive_with_flags	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  void async_receive_with_flags(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:void
async_resolve	asio/include/asio/detail/resolver_service.hpp	/^  void async_resolve(implementation_type& impl, const endpoint_type& endpoint,$/;"	f	class:asio::detail::resolver_service	typeref:typename:void
async_resolve	asio/include/asio/detail/resolver_service.hpp	/^  void async_resolve(implementation_type& impl, const query_type& query,$/;"	f	class:asio::detail::resolver_service	typeref:typename:void
async_resolve	asio/include/asio/detail/winrt_resolver_service.hpp	/^  void async_resolve(implementation_type& impl, const query_type& query,$/;"	f	class:asio::detail::winrt_resolver_service	typeref:typename:void
async_resolve	asio/include/asio/detail/winrt_resolver_service.hpp	/^  void async_resolve(implementation_type&, const endpoint_type&,$/;"	f	class:asio::detail::winrt_resolver_service	typeref:typename:void
async_result	asio/include/asio/async_result.hpp	/^  explicit async_result(completion_handler_type& h)$/;"	f	class:asio::async_result
async_result	asio/include/asio/async_result.hpp	/^class async_result$/;"	c	namespace:asio
async_result	asio/include/asio/async_result.hpp	/^class async_result<void, Signature>$/;"	c	namespace:asio
async_result	asio/include/asio/bind_executor.hpp	/^  explicit async_result(executor_binder<T, Executor>& b)$/;"	f	class:asio::async_result
async_result	asio/include/asio/bind_executor.hpp	/^class async_result<executor_binder<T, Executor>, Signature>$/;"	c	namespace:asio
async_result	asio/include/asio/impl/detached.hpp	/^  explicit async_result(completion_handler_type&)$/;"	f	struct:asio::async_result
async_result	asio/include/asio/impl/detached.hpp	/^struct async_result<detached_t, Signature>$/;"	s	namespace:asio
async_result	asio/include/asio/impl/redirect_error.hpp	/^struct async_result<redirect_error_t<CompletionToken>, Signature>$/;"	s	namespace:asio
async_result	asio/include/asio/impl/spawn.hpp	/^  explicit async_result($/;"	f	class:asio::async_result
async_result	asio/include/asio/impl/spawn.hpp	/^class async_result<basic_yield_context<Handler>, ReturnType()>$/;"	c	namespace:asio
async_result	asio/include/asio/impl/spawn.hpp	/^class async_result<basic_yield_context<Handler>, ReturnType(Arg1)>$/;"	c	namespace:asio
async_result	asio/include/asio/impl/spawn.hpp	/^class async_result<basic_yield_context<Handler>,$/;"	c	namespace:asio
async_result	asio/include/asio/impl/use_awaitable.hpp	/^class async_result<use_awaitable_t<Executor>, R(Args...)>$/;"	c	namespace:asio
async_result	asio/include/asio/impl/use_future.hpp	/^  explicit async_result($/;"	f	class:asio::async_result
async_result	asio/include/asio/impl/use_future.hpp	/^class async_result<detail::packaged_token<Function, Allocator>, Result()>$/;"	c	namespace:asio
async_result	asio/include/asio/impl/use_future.hpp	/^class async_result<detail::packaged_token<Function, Allocator>, Result(Args...)>$/;"	c	namespace:asio
async_result	asio/include/asio/impl/use_future.hpp	/^class async_result<use_future_t<Allocator>, Result()>$/;"	c	namespace:asio
async_result	asio/include/asio/impl/use_future.hpp	/^class async_result<use_future_t<Allocator>, Result(Args...)>$/;"	c	namespace:asio
async_result	asio/include/asio/packaged_task.hpp	/^  explicit async_result(completion_handler_type& h)$/;"	f	class:asio::async_result
async_result	asio/include/asio/packaged_task.hpp	/^class async_result<std::packaged_task<Result(Args...)>, Signature>$/;"	c	namespace:asio
async_result	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  explicit async_result(completion_handler_type& h)$/;"	f	class:asio::async_result	file:
async_result	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^class async_result<close_after, void(asio::error_code, T)>$/;"	c	namespace:asio	file:
async_result	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  explicit async_result(completion_handler_type& h)$/;"	f	class:asio::async_result	file:
async_result	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^class async_result<close_after, void(std::error_code, T)>$/;"	c	namespace:asio	file:
async_result	asio/src/tests/unit/archetypes/async_result.hpp	/^  explicit async_result(completion_handler_type&)$/;"	f	class:asio::async_result
async_result	asio/src/tests/unit/archetypes/async_result.hpp	/^class async_result<archetypes::lazy_handler, Signature>$/;"	c	namespace:asio
async_result_has_initiate_memfn	asio/include/asio/async_result.hpp	/^struct async_result_has_initiate_memfn$/;"	s	namespace:asio::detail
async_result_helper	asio/include/asio/async_result.hpp	/^struct async_result_helper$/;"	s	namespace:asio::detail
async_result_memfns_base	asio/include/asio/async_result.hpp	/^struct async_result_memfns_base$/;"	s	namespace:asio::detail
async_result_memfns_check	asio/include/asio/async_result.hpp	/^struct async_result_memfns_check$/;"	s	namespace:asio::detail
async_result_memfns_derived	asio/include/asio/async_result.hpp	/^struct async_result_memfns_derived$/;"	s	namespace:asio::detail
async_send	asio/include/asio/detail/null_socket_service.hpp	/^  void async_send(implementation_type&, const ConstBufferSequence&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_send	asio/include/asio/detail/null_socket_service.hpp	/^  void async_send(implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_send	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  void async_send(base_implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:void
async_send	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  void async_send(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:void
async_send	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  void async_send(base_implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:void
async_send	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  void async_send(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:void
async_send	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  void async_send(base_implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:void
async_send	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  void async_send(base_implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:void
async_send_to	asio/include/asio/detail/null_socket_service.hpp	/^  void async_send_to(implementation_type&, const ConstBufferSequence&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_send_to	asio/include/asio/detail/null_socket_service.hpp	/^  void async_send_to(implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
async_send_to	asio/include/asio/detail/reactive_socket_service.hpp	/^  void async_send_to(implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
async_send_to	asio/include/asio/detail/reactive_socket_service.hpp	/^  void async_send_to(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
async_send_to	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void async_send_to(implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
async_send_to	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void async_send_to(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
async_wait	asio/include/asio/detail/deadline_timer_service.hpp	/^  void async_wait(implementation_type& impl,$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:void
async_wait	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  void async_wait(implementation_type& impl,$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:void
async_wait	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  void async_wait(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:void
async_wait	asio/include/asio/detail/signal_set_service.hpp	/^  void async_wait(implementation_type& impl,$/;"	f	class:asio::detail::signal_set_service	typeref:typename:void
async_wait	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  void async_wait(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:void
async_wait	asio/include/asio/detail/win_object_handle_service.hpp	/^  void async_wait(implementation_type& impl,$/;"	f	class:asio::detail::win_object_handle_service	typeref:typename:void
async_write	asio/src/examples/cpp03/http/server4/server.cpp	/^      yield asio::async_write(*socket_, reply_->to_buffers(), *this);$/;"	m	class:http::server4::server::operator ()::asio	typeref:typename:yield	file:
async_write	asio/src/examples/cpp03/serialization/connection.hpp	/^  void async_write(const T& t, Handler handler)$/;"	f	class:s11n_example::connection	typeref:typename:void
async_write	asio/src/examples/cpp11/operations/composed_8.cpp	/^        yield asio::async_write(socket_,$/;"	m	class:async_write_messages_implementation::operator ()::asio	typeref:typename:yield	file:
async_write	asio/src/examples/cpp14/operations/composed_8.cpp	/^            yield asio::async_write(socket,$/;"	m	class:async_write_messages::__anon3322e9110102::asio	typeref:typename:yield	file:
async_write	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^          co_await asio::async_write(socket_,$/;"	m	class:chat_session::writer::asio	typeref:typename:co_await	file:
async_write	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^    co_await asio::async_write(s, asio::buffer("hello\\r\\n", 7), use_awaitable);$/;"	m	class:listener::asio	typeref:typename:co_await	file:
async_write	asio/src/tests/latency/tcp_server.cpp	/^          yield asio::async_write(socket_,$/;"	m	class:tcp_server::operator ()::asio	typeref:typename:yield	file:
async_write	asio/src/tests/unit/is_read_buffered.cpp	/^  void async_write(const Const_Buffers&, Handler handler)$/;"	f	class:test_stream	typeref:typename:void	file:
async_write	asio/src/tests/unit/is_write_buffered.cpp	/^  void async_write(const Const_Buffers&, Handler handler)$/;"	f	class:test_stream	typeref:typename:void	file:
async_write_handler	asio/src/tests/unit/write.cpp	/^void async_write_handler(const asio::error_code& e,$/;"	f	typeref:typename:void
async_write_handler	asio/src/tests/unit/write_at.cpp	/^void async_write_handler(const asio::error_code& e,$/;"	f	typeref:typename:void
async_write_message	asio/src/examples/cpp11/operations/composed_1.cpp	/^auto async_write_message(tcp::socket& socket,$/;"	f	typeref:typename:asio::async_result<typename std::decay<CompletionToken>::type,void (std::error_code,std::size_t)>::return_type
async_write_message	asio/src/examples/cpp11/operations/composed_2.cpp	/^auto async_write_message(tcp::socket& socket,$/;"	f	typeref:typename:asio::async_result<typename std::decay<CompletionToken>::type,void (std::error_code,std::size_t)>::return_type
async_write_message	asio/src/examples/cpp11/operations/composed_3.cpp	/^auto async_write_message(tcp::socket& socket,$/;"	f	typeref:typename:asio::async_result<typename std::decay<CompletionToken>::type,void (std::error_code)>::return_type
async_write_message	asio/src/examples/cpp11/operations/composed_4.cpp	/^auto async_write_message(tcp::socket& socket,$/;"	f	typeref:typename:asio::async_result<typename std::decay<CompletionToken>::type,void (std::error_code)>::return_type
async_write_message	asio/src/examples/cpp11/operations/composed_5.cpp	/^auto async_write_message(tcp::socket& socket,$/;"	f	typeref:typename:asio::async_result<typename std::decay<CompletionToken>::type,void (std::error_code)>::return_type
async_write_message	asio/src/examples/cpp14/operations/composed_1.cpp	/^auto async_write_message(tcp::socket& socket,$/;"	f	typeref:typename:auto
async_write_message	asio/src/examples/cpp14/operations/composed_2.cpp	/^auto async_write_message(tcp::socket& socket,$/;"	f	typeref:typename:auto
async_write_message	asio/src/examples/cpp14/operations/composed_3.cpp	/^auto async_write_message(tcp::socket& socket,$/;"	f	typeref:typename:auto
async_write_message	asio/src/examples/cpp14/operations/composed_4.cpp	/^auto async_write_message(tcp::socket& socket,$/;"	f	typeref:typename:auto
async_write_message	asio/src/examples/cpp14/operations/composed_5.cpp	/^auto async_write_message(tcp::socket& socket,$/;"	f	typeref:typename:auto
async_write_message_initiation	asio/src/examples/cpp11/operations/composed_3.cpp	/^struct async_write_message_initiation$/;"	s	file:
async_write_message_initiation	asio/src/examples/cpp11/operations/composed_4.cpp	/^struct async_write_message_initiation$/;"	s	file:
async_write_message_initiation	asio/src/examples/cpp11/operations/composed_5.cpp	/^struct async_write_message_initiation$/;"	s	file:
async_write_message_initiation	asio/src/examples/cpp11/operations/composed_6.cpp	/^struct async_write_message_initiation$/;"	s	file:
async_write_messages	asio/src/examples/cpp11/operations/composed_6.cpp	/^auto async_write_messages(tcp::socket& socket,$/;"	f	typeref:typename:asio::async_result<typename std::decay<CompletionToken>::type,void (std::error_code)>::return_type
async_write_messages	asio/src/examples/cpp11/operations/composed_7.cpp	/^auto async_write_messages(tcp::socket& socket,$/;"	f	typeref:typename:asio::async_result<typename std::decay<CompletionToken>::type,void (std::error_code)>::return_type
async_write_messages	asio/src/examples/cpp11/operations/composed_8.cpp	/^auto async_write_messages(tcp::socket& socket,$/;"	f	typeref:typename:asio::async_result<typename std::decay<CompletionToken>::type,void (std::error_code)>::return_type
async_write_messages	asio/src/examples/cpp14/operations/composed_6.cpp	/^auto async_write_messages(tcp::socket& socket,$/;"	f	typeref:typename:auto
async_write_messages	asio/src/examples/cpp14/operations/composed_7.cpp	/^auto async_write_messages(tcp::socket& socket,$/;"	f	typeref:typename:auto
async_write_messages	asio/src/examples/cpp14/operations/composed_8.cpp	/^auto async_write_messages(tcp::socket& socket,$/;"	f	typeref:typename:auto
async_write_messages_implementation	asio/src/examples/cpp11/operations/composed_7.cpp	/^struct async_write_messages_implementation$/;"	s	file:
async_write_messages_implementation	asio/src/examples/cpp11/operations/composed_8.cpp	/^struct async_write_messages_implementation$/;"	s	file:
async_write_some	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  void async_write_some(implementation_type& impl,$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:void
async_write_some	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  void async_write_some(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:void
async_write_some	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  void async_write_some(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_handle_service	typeref:typename:void
async_write_some	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  void async_write_some(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:void
async_write_some	asio/src/tests/unit/write.cpp	/^  void async_write_some(const Const_Buffers& buffers,$/;"	f	class:test_stream	typeref:typename:void	file:
async_write_some_at	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  void async_write_some_at(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_handle_service	typeref:typename:void
async_write_some_at	asio/src/tests/unit/write_at.cpp	/^  void async_write_some_at(asio::uint64_t offset,$/;"	f	class:test_random_access_device	typeref:typename:void	file:
at_mark	asio/include/asio/basic_socket.hpp	/^  bool at_mark() const$/;"	f	class:asio::basic_socket	typeref:typename:bool
at_mark	asio/include/asio/basic_socket.hpp	/^  bool at_mark(asio::error_code& ec) const$/;"	f	class:asio::basic_socket	typeref:typename:bool
at_mark	asio/include/asio/detail/null_socket_service.hpp	/^  bool at_mark(const implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:bool
at_mark	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  bool at_mark(const base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:bool
at_mark	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  bool at_mark(const base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:bool
at_mark	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  bool at_mark(const base_implementation_type&,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:bool
atomic_count	asio/include/asio/detail/atomic_count.hpp	/^typedef long atomic_count;$/;"	t	namespace:asio::detail	typeref:typename:long
attach_thread	asio/include/asio/impl/awaitable.hpp	/^  void attach_thread(awaitable_thread<Executor>* handler) noexcept$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void
attached_thread_	asio/include/asio/impl/awaitable.hpp	/^  awaitable_thread<Executor>* attached_thread_ = nullptr;$/;"	m	class:asio::detail::awaitable_frame_base	typeref:typename:awaitable_thread<Executor> *
attributes_	asio/include/asio/impl/spawn.hpp	/^    boost::coroutines::attributes attributes_;$/;"	m	struct:asio::detail::spawn_helper	typeref:typename:boost::coroutines::attributes
auto_addrinfo	asio/include/asio/detail/resolver_service_base.hpp	/^    explicit auto_addrinfo(asio::detail::addrinfo_type* ai)$/;"	f	class:asio::detail::resolver_service_base::auto_addrinfo
auto_addrinfo	asio/include/asio/detail/resolver_service_base.hpp	/^  class auto_addrinfo$/;"	c	class:asio::detail::resolver_service_base
auto_func_base_ptr	asio/include/asio/detail/posix_thread.hpp	/^  struct auto_func_base_ptr$/;"	s	class:asio::detail::posix_thread
auto_func_base_ptr	asio/include/asio/detail/win_thread.hpp	/^  struct auto_func_base_ptr$/;"	s	class:asio::detail::win_thread
auto_handle	asio/include/asio/detail/win_iocp_io_context.hpp	/^    auto_handle() : handle(0) {}$/;"	f	struct:asio::detail::win_iocp_io_context::auto_handle
auto_handle	asio/include/asio/detail/win_iocp_io_context.hpp	/^  struct auto_handle$/;"	s	class:asio::detail::win_iocp_io_context
auto_service_ptr	asio/include/asio/detail/service_registry.hpp	/^  struct auto_service_ptr$/;"	s	class:asio::detail::service_registry
available	asio/include/asio/basic_socket.hpp	/^  std::size_t available() const$/;"	f	class:asio::basic_socket	typeref:typename:std::size_t
available	asio/include/asio/basic_socket.hpp	/^  std::size_t available(asio::error_code& ec) const$/;"	f	class:asio::basic_socket	typeref:typename:std::size_t
available	asio/include/asio/detail/null_socket_service.hpp	/^  std::size_t available(const implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:std::size_t
available	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  std::size_t available(const base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:std::size_t
available	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  std::size_t available(const base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:std::size_t
available	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  std::size_t available(const base_implementation_type&,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:std::size_t
await_output	asio/src/examples/cpp03/timeouts/server.cpp	/^  void await_output()$/;"	f	class:tcp_session	typeref:typename:void	file:
await_output	asio/src/examples/cpp11/timeouts/server.cpp	/^  void await_output()$/;"	f	class:tcp_session	typeref:typename:void	file:
await_ready	asio/include/asio/awaitable.hpp	/^  bool await_ready() const noexcept$/;"	f	class:asio::awaitable	typeref:typename:bool
await_ready	asio/include/asio/impl/awaitable.hpp	/^      bool await_ready() const noexcept$/;"	f	struct:asio::detail::awaitable_frame_base::await_transform::result	typeref:typename:bool
await_ready	asio/include/asio/impl/awaitable.hpp	/^      bool await_ready() const noexcept$/;"	f	struct:asio::detail::awaitable_frame_base::final_suspend::result	typeref:typename:bool
await_resume	asio/include/asio/awaitable.hpp	/^  T await_resume()$/;"	f	class:asio::awaitable	typeref:typename:T
await_resume	asio/include/asio/impl/awaitable.hpp	/^      auto await_resume() const noexcept$/;"	f	struct:asio::detail::awaitable_frame_base::await_transform::result	typeref:typename:auto
await_resume	asio/include/asio/impl/awaitable.hpp	/^      void await_resume() const noexcept$/;"	f	struct:asio::detail::awaitable_frame_base::await_transform::result	typeref:typename:void
await_resume	asio/include/asio/impl/awaitable.hpp	/^      void await_resume() const noexcept$/;"	f	struct:asio::detail::awaitable_frame_base::final_suspend::result	typeref:typename:void
await_suspend	asio/include/asio/awaitable.hpp	/^  void await_suspend($/;"	f	class:asio::awaitable	typeref:typename:void
await_suspend	asio/include/asio/impl/awaitable.hpp	/^      void await_suspend(coroutine_handle<void>) noexcept$/;"	f	struct:asio::detail::awaitable_frame_base::await_transform::result	typeref:typename:void
await_suspend	asio/include/asio/impl/awaitable.hpp	/^      void await_suspend(coroutine_handle<void>) noexcept$/;"	f	struct:asio::detail::awaitable_frame_base::final_suspend::result	typeref:typename:void
await_transform	asio/include/asio/impl/awaitable.hpp	/^  auto await_transform(Function f,$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:auto
await_transform	asio/include/asio/impl/awaitable.hpp	/^  auto await_transform(awaitable<T, Executor> a) const$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:auto
await_transform	asio/include/asio/impl/awaitable.hpp	/^  auto await_transform(this_coro::executor_t) noexcept$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:auto
awaitable	asio/include/asio/awaitable.hpp	/^  awaitable(awaitable&& other) noexcept$/;"	f	class:asio::awaitable
awaitable	asio/include/asio/awaitable.hpp	/^  constexpr awaitable() noexcept$/;"	f	class:asio::awaitable
awaitable	asio/include/asio/awaitable.hpp	/^  explicit awaitable(detail::awaitable_frame<T, Executor>* a)$/;"	f	class:asio::awaitable
awaitable	asio/include/asio/awaitable.hpp	/^class awaitable$/;"	c	namespace:asio
awaitable_frame	asio/include/asio/impl/awaitable.hpp	/^  awaitable_frame() noexcept$/;"	f	class:asio::detail::awaitable_frame
awaitable_frame	asio/include/asio/impl/awaitable.hpp	/^  awaitable_frame(awaitable_frame&& other) noexcept$/;"	f	class:asio::detail::awaitable_frame
awaitable_frame	asio/include/asio/impl/awaitable.hpp	/^class awaitable_frame$/;"	c	namespace:asio::detail
awaitable_frame	asio/include/asio/impl/awaitable.hpp	/^class awaitable_frame<void, Executor>$/;"	c	namespace:asio::detail
awaitable_frame_base	asio/include/asio/impl/awaitable.hpp	/^class awaitable_frame_base$/;"	c	namespace:asio::detail
awaitable_frame_tag	asio/include/asio/detail/thread_info_base.hpp	/^  struct awaitable_frame_tag$/;"	s	class:asio::detail::thread_info_base
awaitable_handler	asio/include/asio/impl/use_awaitable.hpp	/^class awaitable_handler$/;"	c	namespace:asio::detail
awaitable_handler	asio/include/asio/impl/use_awaitable.hpp	/^class awaitable_handler<Executor, T>$/;"	c	namespace:asio::detail
awaitable_handler	asio/include/asio/impl/use_awaitable.hpp	/^class awaitable_handler<Executor, asio::error_code, T>$/;"	c	namespace:asio::detail
awaitable_handler	asio/include/asio/impl/use_awaitable.hpp	/^class awaitable_handler<Executor, asio::error_code, Ts...>$/;"	c	namespace:asio::detail
awaitable_handler	asio/include/asio/impl/use_awaitable.hpp	/^class awaitable_handler<Executor, asio::error_code>$/;"	c	namespace:asio::detail
awaitable_handler	asio/include/asio/impl/use_awaitable.hpp	/^class awaitable_handler<Executor, std::exception_ptr, T>$/;"	c	namespace:asio::detail
awaitable_handler	asio/include/asio/impl/use_awaitable.hpp	/^class awaitable_handler<Executor, std::exception_ptr, Ts...>$/;"	c	namespace:asio::detail
awaitable_handler	asio/include/asio/impl/use_awaitable.hpp	/^class awaitable_handler<Executor, std::exception_ptr>$/;"	c	namespace:asio::detail
awaitable_handler	asio/include/asio/impl/use_awaitable.hpp	/^class awaitable_handler<Executor, void>$/;"	c	namespace:asio::detail
awaitable_handler_base	asio/include/asio/impl/use_awaitable.hpp	/^  awaitable_handler_base(awaitable<void, Executor> a, const Executor& ex)$/;"	f	class:asio::detail::awaitable_handler_base
awaitable_handler_base	asio/include/asio/impl/use_awaitable.hpp	/^  explicit awaitable_handler_base(awaitable_thread<Executor>* h)$/;"	f	class:asio::detail::awaitable_handler_base
awaitable_handler_base	asio/include/asio/impl/use_awaitable.hpp	/^class awaitable_handler_base$/;"	c	namespace:asio::detail
awaitable_thread	asio/include/asio/impl/awaitable.hpp	/^  awaitable_thread(awaitable<void, Executor> p, const Executor& ex)$/;"	f	class:asio::detail::awaitable_thread
awaitable_thread	asio/include/asio/impl/awaitable.hpp	/^  awaitable_thread(awaitable_thread&& other) noexcept$/;"	f	class:asio::detail::awaitable_thread
awaitable_thread	asio/include/asio/impl/awaitable.hpp	/^class awaitable_thread$/;"	c	namespace:asio::detail
awaitable_type	asio/include/asio/impl/co_spawn.hpp	/^    typedef typename result_of<F()>::type awaitable_type;$/;"	t	function:asio::detail::initiate_co_spawn::operator ()
awaitable_type	asio/include/asio/impl/use_awaitable.hpp	/^  typedef awaitable<T, Executor> awaitable_type;$/;"	t	class:asio::detail::awaitable_handler_base	typeref:typename:awaitable<T,Executor>
b	asio/include/asio/detail/winrt_utils.hpp	/^  auto b = ref new Windows::Storage::Streams::Buffer(size);$/;"	v	namespace:asio::detail::winrt_utils	typeref:typename:auto
bacc	asio/include/asio/detail/winrt_utils.hpp	/^  ComPtr<Windows::Storage::Streams::IBufferByteAccess> bacc;$/;"	v	namespace:asio::detail::winrt_utils	typeref:typename:ComPtr<Windows::Storage::Streams::IBufferByteAccess>
back	asio/include/asio/detail/op_queue.hpp	/^  static Operation*& back(op_queue<Operation>& q)$/;"	f	class:asio::detail::op_queue_access	typeref:typename:Operation * &
back_	asio/include/asio/detail/op_queue.hpp	/^  Operation* back_;$/;"	m	class:asio::detail::op_queue	typeref:typename:Operation *
bad	asio/src/examples/cpp11/http/server/request_parser.hpp	/^  enum result_type { good, bad, indeterminate };$/;"	e	enum:http::server::request_parser::result_type
bad_address_cast	asio/include/asio/ip/bad_address_cast.hpp	/^  bad_address_cast() {}$/;"	f	class:asio::ip::bad_address_cast
bad_address_cast	asio/include/asio/ip/bad_address_cast.hpp	/^class bad_address_cast :$/;"	c	namespace:asio::ip
bad_descriptor	asio/include/asio/error.hpp	/^  bad_descriptor = ASIO_SOCKET_ERROR(EBADF),$/;"	e	enum:asio::error::basic_errors
bad_executor	asio/include/asio/executor.hpp	/^class bad_executor$/;"	c	namespace:asio
bad_gateway	asio/src/examples/cpp03/http/server/reply.cpp	/^const char bad_gateway[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
bad_gateway	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string bad_gateway =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
bad_gateway	asio/src/examples/cpp03/http/server/reply.hpp	/^    bad_gateway = 502,$/;"	e	enum:http::server::reply::status_type
bad_gateway	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char bad_gateway[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
bad_gateway	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string bad_gateway =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
bad_gateway	asio/src/examples/cpp03/http/server2/reply.hpp	/^    bad_gateway = 502,$/;"	e	enum:http::server2::reply::status_type
bad_gateway	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char bad_gateway[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
bad_gateway	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string bad_gateway =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
bad_gateway	asio/src/examples/cpp03/http/server3/reply.hpp	/^    bad_gateway = 502,$/;"	e	enum:http::server3::reply::status_type
bad_gateway	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char bad_gateway[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
bad_gateway	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string bad_gateway =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
bad_gateway	asio/src/examples/cpp03/http/server4/reply.hpp	/^    bad_gateway = 502,$/;"	e	enum:http::server4::reply::status_type
bad_gateway	asio/src/examples/cpp11/http/server/reply.cpp	/^const char bad_gateway[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
bad_gateway	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string bad_gateway =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
bad_gateway	asio/src/examples/cpp11/http/server/reply.hpp	/^    bad_gateway = 502,$/;"	e	enum:http::server::reply::status_type
bad_request	asio/src/examples/cpp03/http/server/reply.cpp	/^const char bad_request[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
bad_request	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string bad_request =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
bad_request	asio/src/examples/cpp03/http/server/reply.hpp	/^    bad_request = 400,$/;"	e	enum:http::server::reply::status_type
bad_request	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char bad_request[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
bad_request	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string bad_request =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
bad_request	asio/src/examples/cpp03/http/server2/reply.hpp	/^    bad_request = 400,$/;"	e	enum:http::server2::reply::status_type
bad_request	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char bad_request[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
bad_request	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string bad_request =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
bad_request	asio/src/examples/cpp03/http/server3/reply.hpp	/^    bad_request = 400,$/;"	e	enum:http::server3::reply::status_type
bad_request	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char bad_request[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
bad_request	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string bad_request =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
bad_request	asio/src/examples/cpp03/http/server4/reply.hpp	/^    bad_request = 400,$/;"	e	enum:http::server4::reply::status_type
bad_request	asio/src/examples/cpp11/http/server/reply.cpp	/^const char bad_request[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
bad_request	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string bad_request =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
bad_request	asio/src/examples/cpp11/http/server/reply.hpp	/^    bad_request = 400,$/;"	e	enum:http::server::reply::status_type
balance	asio/src/examples/cpp11/executors/bank_account_2.cpp	/^  int balance() const$/;"	f	class:bank_account	typeref:typename:int	file:
balance	asio/src/examples/cpp14/executors/bank_account_2.cpp	/^  int balance() const$/;"	f	class:bank_account	typeref:typename:int	file:
balance_	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^  int balance_ = 0;$/;"	m	class:bank_account	typeref:typename:int	file:
balance_	asio/src/examples/cpp11/executors/bank_account_2.cpp	/^  int balance_ = 0;$/;"	m	class:bank_account	typeref:typename:int	file:
balance_	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^  int balance_ = 0;$/;"	m	class:bank_account	typeref:typename:int	file:
balance_	asio/src/examples/cpp14/executors/bank_account_2.cpp	/^  int balance_ = 0;$/;"	m	class:bank_account	typeref:typename:int	file:
bank_account	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^class bank_account$/;"	c	file:
bank_account	asio/src/examples/cpp11/executors/bank_account_2.cpp	/^class bank_account$/;"	c	file:
bank_account	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^class bank_account$/;"	c	file:
bank_account	asio/src/examples/cpp14/executors/bank_account_2.cpp	/^class bank_account$/;"	c	file:
barrier	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^  static void barrier()$/;"	f	class:asio::detail::gcc_arm_fenced_block	typeref:typename:void
barrier	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^  static void barrier()$/;"	f	class:asio::detail::gcc_hppa_fenced_block	typeref:typename:void
barrier	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^  static int barrier()$/;"	f	class:asio::detail::gcc_x86_fenced_block	typeref:typename:int
base	asio/include/asio/generic/detail/endpoint.hpp	/^    asio::detail::socket_addr_type base;$/;"	m	union:asio::generic::detail::endpoint::data_union	typeref:typename:asio::detail::socket_addr_type
base	asio/include/asio/ip/detail/endpoint.hpp	/^    asio::detail::socket_addr_type base;$/;"	m	union:asio::ip::detail::endpoint::data_union	typeref:typename:asio::detail::socket_addr_type
base	asio/include/asio/local/detail/endpoint.hpp	/^    asio::detail::socket_addr_type base;$/;"	m	union:asio::local::detail::endpoint::data_union	typeref:typename:asio::detail::socket_addr_type
base_from_completion_cond	asio/include/asio/detail/base_from_completion_cond.hpp	/^  explicit base_from_completion_cond(CompletionCondition& completion_condition)$/;"	f	class:asio::detail::base_from_completion_cond
base_from_completion_cond	asio/include/asio/detail/base_from_completion_cond.hpp	/^  explicit base_from_completion_cond(transfer_all_t)$/;"	f	class:asio::detail::base_from_completion_cond
base_from_completion_cond	asio/include/asio/detail/base_from_completion_cond.hpp	/^class base_from_completion_cond$/;"	c	namespace:asio::detail
base_from_completion_cond	asio/include/asio/detail/base_from_completion_cond.hpp	/^class base_from_completion_cond<transfer_all_t>$/;"	c	namespace:asio::detail
base_from_connect_condition	asio/include/asio/impl/connect.hpp	/^    explicit base_from_connect_condition($/;"	f	class:asio::detail::base_from_connect_condition
base_from_connect_condition	asio/include/asio/impl/connect.hpp	/^    explicit base_from_connect_condition(const default_connect_condition&)$/;"	f	class:asio::detail::base_from_connect_condition
base_from_connect_condition	asio/include/asio/impl/connect.hpp	/^  class base_from_connect_condition$/;"	c	namespace:asio::detail
base_from_connect_condition	asio/include/asio/impl/connect.hpp	/^  class base_from_connect_condition<default_connect_condition>$/;"	c	namespace:asio::detail
base_implementation_type	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  struct base_implementation_type$/;"	s	class:asio::detail::reactive_socket_service_base
base_implementation_type	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  struct base_implementation_type$/;"	s	class:asio::detail::win_iocp_socket_service_base
base_implementation_type	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^    base_implementation_type()$/;"	f	struct:asio::detail::winrt_ssocket_service_base::base_implementation_type
base_implementation_type	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  struct base_implementation_type$/;"	s	class:asio::detail::winrt_ssocket_service_base
base_type	asio/include/asio/bind_executor.hpp	/^    uses_executor<T, Executor>::value> base_type;$/;"	t	class:asio::executor_binder	typeref:typename:detail::executor_binder_base<T,Executor,uses_executor<T,Executor>::value>
basic_address_iterator	asio/include/asio/ip/address_v4_iterator.hpp	/^  basic_address_iterator($/;"	f	class:asio::ip::basic_address_iterator
basic_address_iterator	asio/include/asio/ip/address_v4_iterator.hpp	/^  basic_address_iterator(basic_address_iterator&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator
basic_address_iterator	asio/include/asio/ip/address_v4_iterator.hpp	/^  basic_address_iterator(const address_v4& addr) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator
basic_address_iterator	asio/include/asio/ip/address_v4_iterator.hpp	/^template <> class basic_address_iterator<address_v4>$/;"	c	namespace:asio::ip
basic_address_iterator	asio/include/asio/ip/address_v6_iterator.hpp	/^  basic_address_iterator($/;"	f	class:asio::ip::basic_address_iterator
basic_address_iterator	asio/include/asio/ip/address_v6_iterator.hpp	/^  basic_address_iterator(basic_address_iterator&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator
basic_address_iterator	asio/include/asio/ip/address_v6_iterator.hpp	/^  basic_address_iterator(const address_v6& addr) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator
basic_address_iterator	asio/include/asio/ip/address_v6_iterator.hpp	/^template <> class basic_address_iterator<address_v6>$/;"	c	namespace:asio::ip
basic_address_range	asio/include/asio/ip/address_v4_range.hpp	/^  basic_address_range() ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range
basic_address_range	asio/include/asio/ip/address_v4_range.hpp	/^  basic_address_range(basic_address_range&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range
basic_address_range	asio/include/asio/ip/address_v4_range.hpp	/^  basic_address_range(const basic_address_range& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range
basic_address_range	asio/include/asio/ip/address_v4_range.hpp	/^  explicit basic_address_range(const iterator& first,$/;"	f	class:asio::ip::basic_address_range
basic_address_range	asio/include/asio/ip/address_v4_range.hpp	/^template <> class basic_address_range<address_v4>$/;"	c	namespace:asio::ip
basic_address_range	asio/include/asio/ip/address_v6_range.hpp	/^  basic_address_range() ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range
basic_address_range	asio/include/asio/ip/address_v6_range.hpp	/^  basic_address_range(basic_address_range&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range
basic_address_range	asio/include/asio/ip/address_v6_range.hpp	/^  basic_address_range(const basic_address_range& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range
basic_address_range	asio/include/asio/ip/address_v6_range.hpp	/^  explicit basic_address_range(const iterator& first,$/;"	f	class:asio::ip::basic_address_range
basic_address_range	asio/include/asio/ip/address_v6_range.hpp	/^template <> class basic_address_range<address_v6>$/;"	c	namespace:asio::ip
basic_datagram_socket	asio/include/asio/basic_datagram_socket.hpp	/^  basic_datagram_socket(ExecutionContext& context,$/;"	f	class:asio::basic_datagram_socket
basic_datagram_socket	asio/include/asio/basic_datagram_socket.hpp	/^  basic_datagram_socket(basic_datagram_socket&& other) ASIO_NOEXCEPT$/;"	f	class:asio::basic_datagram_socket
basic_datagram_socket	asio/include/asio/basic_datagram_socket.hpp	/^  basic_datagram_socket(basic_datagram_socket<Protocol1, Executor1>&& other,$/;"	f	class:asio::basic_datagram_socket
basic_datagram_socket	asio/include/asio/basic_datagram_socket.hpp	/^  basic_datagram_socket(const executor_type& ex, const endpoint_type& endpoint)$/;"	f	class:asio::basic_datagram_socket
basic_datagram_socket	asio/include/asio/basic_datagram_socket.hpp	/^  basic_datagram_socket(const executor_type& ex, const protocol_type& protocol)$/;"	f	class:asio::basic_datagram_socket
basic_datagram_socket	asio/include/asio/basic_datagram_socket.hpp	/^  basic_datagram_socket(const executor_type& ex,$/;"	f	class:asio::basic_datagram_socket
basic_datagram_socket	asio/include/asio/basic_datagram_socket.hpp	/^  explicit basic_datagram_socket(ExecutionContext& context,$/;"	f	class:asio::basic_datagram_socket
basic_datagram_socket	asio/include/asio/basic_datagram_socket.hpp	/^  explicit basic_datagram_socket(const executor_type& ex)$/;"	f	class:asio::basic_datagram_socket
basic_datagram_socket	asio/include/asio/basic_datagram_socket.hpp	/^class basic_datagram_socket$/;"	c	namespace:asio
basic_deadline_timer	asio/include/asio/basic_deadline_timer.hpp	/^  basic_deadline_timer(ExecutionContext& context, const time_type& expiry_time,$/;"	f	class:asio::basic_deadline_timer
basic_deadline_timer	asio/include/asio/basic_deadline_timer.hpp	/^  basic_deadline_timer(ExecutionContext& context,$/;"	f	class:asio::basic_deadline_timer
basic_deadline_timer	asio/include/asio/basic_deadline_timer.hpp	/^  basic_deadline_timer(basic_deadline_timer&& other)$/;"	f	class:asio::basic_deadline_timer
basic_deadline_timer	asio/include/asio/basic_deadline_timer.hpp	/^  basic_deadline_timer(const executor_type& ex, const time_type& expiry_time)$/;"	f	class:asio::basic_deadline_timer
basic_deadline_timer	asio/include/asio/basic_deadline_timer.hpp	/^  basic_deadline_timer(const executor_type& ex,$/;"	f	class:asio::basic_deadline_timer
basic_deadline_timer	asio/include/asio/basic_deadline_timer.hpp	/^  explicit basic_deadline_timer(ExecutionContext& context,$/;"	f	class:asio::basic_deadline_timer
basic_deadline_timer	asio/include/asio/basic_deadline_timer.hpp	/^  explicit basic_deadline_timer(const executor_type& ex)$/;"	f	class:asio::basic_deadline_timer
basic_deadline_timer	asio/include/asio/basic_deadline_timer.hpp	/^class basic_deadline_timer$/;"	c	namespace:asio
basic_descriptor	asio/include/asio/posix/basic_descriptor.hpp	/^  basic_descriptor(ExecutionContext& context,$/;"	f	class:asio::posix::basic_descriptor
basic_descriptor	asio/include/asio/posix/basic_descriptor.hpp	/^  basic_descriptor(basic_descriptor&& other)$/;"	f	class:asio::posix::basic_descriptor
basic_descriptor	asio/include/asio/posix/basic_descriptor.hpp	/^  basic_descriptor(const executor_type& ex,$/;"	f	class:asio::posix::basic_descriptor
basic_descriptor	asio/include/asio/posix/basic_descriptor.hpp	/^  explicit basic_descriptor(ExecutionContext& context,$/;"	f	class:asio::posix::basic_descriptor
basic_descriptor	asio/include/asio/posix/basic_descriptor.hpp	/^  explicit basic_descriptor(const executor_type& ex)$/;"	f	class:asio::posix::basic_descriptor
basic_descriptor	asio/include/asio/posix/basic_descriptor.hpp	/^class basic_descriptor$/;"	c	namespace:asio::posix
basic_endpoint	asio/include/asio/generic/basic_endpoint.hpp	/^  basic_endpoint() ASIO_NOEXCEPT$/;"	f	class:asio::generic::basic_endpoint
basic_endpoint	asio/include/asio/generic/basic_endpoint.hpp	/^  basic_endpoint(basic_endpoint&& other)$/;"	f	class:asio::generic::basic_endpoint
basic_endpoint	asio/include/asio/generic/basic_endpoint.hpp	/^  basic_endpoint(const Endpoint& endpoint)$/;"	f	class:asio::generic::basic_endpoint
basic_endpoint	asio/include/asio/generic/basic_endpoint.hpp	/^  basic_endpoint(const basic_endpoint& other)$/;"	f	class:asio::generic::basic_endpoint
basic_endpoint	asio/include/asio/generic/basic_endpoint.hpp	/^  basic_endpoint(const void* socket_address,$/;"	f	class:asio::generic::basic_endpoint
basic_endpoint	asio/include/asio/generic/basic_endpoint.hpp	/^class basic_endpoint$/;"	c	namespace:asio::generic
basic_endpoint	asio/include/asio/ip/basic_endpoint.hpp	/^  basic_endpoint() ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint
basic_endpoint	asio/include/asio/ip/basic_endpoint.hpp	/^  basic_endpoint(basic_endpoint&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint
basic_endpoint	asio/include/asio/ip/basic_endpoint.hpp	/^  basic_endpoint(const InternetProtocol& internet_protocol,$/;"	f	class:asio::ip::basic_endpoint
basic_endpoint	asio/include/asio/ip/basic_endpoint.hpp	/^  basic_endpoint(const asio::ip::address& addr,$/;"	f	class:asio::ip::basic_endpoint
basic_endpoint	asio/include/asio/ip/basic_endpoint.hpp	/^  basic_endpoint(const basic_endpoint& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint
basic_endpoint	asio/include/asio/ip/basic_endpoint.hpp	/^class basic_endpoint$/;"	c	namespace:asio::ip
basic_endpoint	asio/include/asio/local/basic_endpoint.hpp	/^  basic_endpoint() ASIO_NOEXCEPT$/;"	f	class:asio::local::basic_endpoint
basic_endpoint	asio/include/asio/local/basic_endpoint.hpp	/^  basic_endpoint(basic_endpoint&& other)$/;"	f	class:asio::local::basic_endpoint
basic_endpoint	asio/include/asio/local/basic_endpoint.hpp	/^  basic_endpoint(const basic_endpoint& other)$/;"	f	class:asio::local::basic_endpoint
basic_endpoint	asio/include/asio/local/basic_endpoint.hpp	/^  basic_endpoint(const char* path_name)$/;"	f	class:asio::local::basic_endpoint
basic_endpoint	asio/include/asio/local/basic_endpoint.hpp	/^  basic_endpoint(const std::string& path_name)$/;"	f	class:asio::local::basic_endpoint
basic_endpoint	asio/include/asio/local/basic_endpoint.hpp	/^  basic_endpoint(string_view path_name)$/;"	f	class:asio::local::basic_endpoint
basic_endpoint	asio/include/asio/local/basic_endpoint.hpp	/^class basic_endpoint$/;"	c	namespace:asio::local
basic_errors	asio/include/asio/error.hpp	/^enum basic_errors$/;"	g	namespace:asio::error
basic_io_object	asio/include/asio/basic_io_object.hpp	/^  basic_io_object(IoObjectService1& other_service,$/;"	f	class:asio::basic_io_object
basic_io_object	asio/include/asio/basic_io_object.hpp	/^  basic_io_object(basic_io_object&& other)$/;"	f	class:asio::basic_io_object
basic_io_object	asio/include/asio/basic_io_object.hpp	/^  explicit basic_io_object(asio::io_context& io_context)$/;"	f	class:asio::basic_io_object
basic_io_object	asio/include/asio/basic_io_object.hpp	/^class basic_io_object$/;"	c	namespace:asio
basic_io_object	asio/include/asio/basic_io_object.hpp	/^class basic_io_object<IoObjectService, true>$/;"	c	namespace:asio
basic_logger	asio/src/examples/cpp03/services/basic_logger.hpp	/^  explicit basic_logger(asio::execution_context& context,$/;"	f	class:services::basic_logger
basic_logger	asio/src/examples/cpp03/services/basic_logger.hpp	/^class basic_logger$/;"	c	namespace:services
basic_object_handle	asio/include/asio/windows/basic_object_handle.hpp	/^  basic_object_handle(ExecutionContext& context,$/;"	f	class:asio::windows::basic_object_handle
basic_object_handle	asio/include/asio/windows/basic_object_handle.hpp	/^  basic_object_handle(basic_object_handle&& other)$/;"	f	class:asio::windows::basic_object_handle
basic_object_handle	asio/include/asio/windows/basic_object_handle.hpp	/^  basic_object_handle(const executor_type& ex,$/;"	f	class:asio::windows::basic_object_handle
basic_object_handle	asio/include/asio/windows/basic_object_handle.hpp	/^  explicit basic_object_handle(ExecutionContext& context,$/;"	f	class:asio::windows::basic_object_handle
basic_object_handle	asio/include/asio/windows/basic_object_handle.hpp	/^  explicit basic_object_handle(const executor_type& ex)$/;"	f	class:asio::windows::basic_object_handle
basic_object_handle	asio/include/asio/windows/basic_object_handle.hpp	/^class basic_object_handle$/;"	c	namespace:asio::windows
basic_overlapped_handle	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  basic_overlapped_handle(ExecutionContext& context,$/;"	f	class:asio::windows::basic_overlapped_handle
basic_overlapped_handle	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  basic_overlapped_handle(basic_overlapped_handle&& other)$/;"	f	class:asio::windows::basic_overlapped_handle
basic_overlapped_handle	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  basic_overlapped_handle(const executor_type& ex,$/;"	f	class:asio::windows::basic_overlapped_handle
basic_overlapped_handle	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  explicit basic_overlapped_handle(ExecutionContext& context,$/;"	f	class:asio::windows::basic_overlapped_handle
basic_overlapped_handle	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  explicit basic_overlapped_handle(const executor_type& ex)$/;"	f	class:asio::windows::basic_overlapped_handle
basic_overlapped_handle	asio/include/asio/windows/basic_overlapped_handle.hpp	/^class basic_overlapped_handle$/;"	c	namespace:asio::windows
basic_random_access_handle	asio/include/asio/windows/basic_random_access_handle.hpp	/^  basic_random_access_handle(ExecutionContext& context,$/;"	f	class:asio::windows::basic_random_access_handle
basic_random_access_handle	asio/include/asio/windows/basic_random_access_handle.hpp	/^  basic_random_access_handle(basic_random_access_handle&& other)$/;"	f	class:asio::windows::basic_random_access_handle
basic_random_access_handle	asio/include/asio/windows/basic_random_access_handle.hpp	/^  basic_random_access_handle(const executor_type& ex,$/;"	f	class:asio::windows::basic_random_access_handle
basic_random_access_handle	asio/include/asio/windows/basic_random_access_handle.hpp	/^  explicit basic_random_access_handle(ExecutionContext& context,$/;"	f	class:asio::windows::basic_random_access_handle
basic_random_access_handle	asio/include/asio/windows/basic_random_access_handle.hpp	/^  explicit basic_random_access_handle(const executor_type& ex)$/;"	f	class:asio::windows::basic_random_access_handle
basic_random_access_handle	asio/include/asio/windows/basic_random_access_handle.hpp	/^class basic_random_access_handle$/;"	c	namespace:asio::windows
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  basic_raw_socket(ExecutionContext& context, const endpoint_type& endpoint,$/;"	f	class:asio::basic_raw_socket
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  basic_raw_socket(ExecutionContext& context, const protocol_type& protocol,$/;"	f	class:asio::basic_raw_socket
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  basic_raw_socket(ExecutionContext& context,$/;"	f	class:asio::basic_raw_socket
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  basic_raw_socket(basic_raw_socket&& other) ASIO_NOEXCEPT$/;"	f	class:asio::basic_raw_socket
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  basic_raw_socket(basic_raw_socket<Protocol1, Executor1>&& other,$/;"	f	class:asio::basic_raw_socket
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  basic_raw_socket(const executor_type& ex, const endpoint_type& endpoint)$/;"	f	class:asio::basic_raw_socket
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  basic_raw_socket(const executor_type& ex, const protocol_type& protocol)$/;"	f	class:asio::basic_raw_socket
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  basic_raw_socket(const executor_type& ex,$/;"	f	class:asio::basic_raw_socket
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  explicit basic_raw_socket(ExecutionContext& context,$/;"	f	class:asio::basic_raw_socket
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  explicit basic_raw_socket(const executor_type& ex)$/;"	f	class:asio::basic_raw_socket
basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^class basic_raw_socket$/;"	c	namespace:asio
basic_resolver	asio/include/asio/ip/basic_resolver.hpp	/^  basic_resolver(basic_resolver&& other)$/;"	f	class:asio::ip::basic_resolver
basic_resolver	asio/include/asio/ip/basic_resolver.hpp	/^  explicit basic_resolver(ExecutionContext& context,$/;"	f	class:asio::ip::basic_resolver
basic_resolver	asio/include/asio/ip/basic_resolver.hpp	/^  explicit basic_resolver(const executor_type& ex)$/;"	f	class:asio::ip::basic_resolver
basic_resolver	asio/include/asio/ip/basic_resolver.hpp	/^class basic_resolver$/;"	c	namespace:asio::ip
basic_resolver_entry	asio/include/asio/ip/basic_resolver_entry.hpp	/^  basic_resolver_entry()$/;"	f	class:asio::ip::basic_resolver_entry
basic_resolver_entry	asio/include/asio/ip/basic_resolver_entry.hpp	/^  basic_resolver_entry(const endpoint_type& ep,$/;"	f	class:asio::ip::basic_resolver_entry
basic_resolver_entry	asio/include/asio/ip/basic_resolver_entry.hpp	/^class basic_resolver_entry$/;"	c	namespace:asio::ip
basic_resolver_iterator	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  basic_resolver_iterator()$/;"	f	class:asio::ip::basic_resolver_iterator
basic_resolver_iterator	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  basic_resolver_iterator(basic_resolver_iterator&& other)$/;"	f	class:asio::ip::basic_resolver_iterator
basic_resolver_iterator	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  basic_resolver_iterator(const basic_resolver_iterator& other)$/;"	f	class:asio::ip::basic_resolver_iterator
basic_resolver_iterator	asio/include/asio/ip/basic_resolver_iterator.hpp	/^class basic_resolver_iterator$/;"	c	namespace:asio::ip
basic_resolver_query	asio/include/asio/ip/basic_resolver_query.hpp	/^  basic_resolver_query(const protocol_type& protocol,$/;"	f	class:asio::ip::basic_resolver_query
basic_resolver_query	asio/include/asio/ip/basic_resolver_query.hpp	/^  basic_resolver_query(const std::string& host, const std::string& service,$/;"	f	class:asio::ip::basic_resolver_query
basic_resolver_query	asio/include/asio/ip/basic_resolver_query.hpp	/^  basic_resolver_query(const std::string& service,$/;"	f	class:asio::ip::basic_resolver_query
basic_resolver_query	asio/include/asio/ip/basic_resolver_query.hpp	/^class basic_resolver_query$/;"	c	namespace:asio::ip
basic_resolver_results	asio/include/asio/ip/basic_resolver_results.hpp	/^  basic_resolver_results()$/;"	f	class:asio::ip::basic_resolver_results
basic_resolver_results	asio/include/asio/ip/basic_resolver_results.hpp	/^  basic_resolver_results(basic_resolver_results&& other)$/;"	f	class:asio::ip::basic_resolver_results
basic_resolver_results	asio/include/asio/ip/basic_resolver_results.hpp	/^  basic_resolver_results(const basic_resolver_results& other)$/;"	f	class:asio::ip::basic_resolver_results
basic_resolver_results	asio/include/asio/ip/basic_resolver_results.hpp	/^class basic_resolver_results$/;"	c	namespace:asio::ip
basic_seq_packet_socket	asio/include/asio/basic_seq_packet_socket.hpp	/^  basic_seq_packet_socket(ExecutionContext& context,$/;"	f	class:asio::basic_seq_packet_socket
basic_seq_packet_socket	asio/include/asio/basic_seq_packet_socket.hpp	/^  basic_seq_packet_socket(basic_seq_packet_socket&& other) ASIO_NOEXCEPT$/;"	f	class:asio::basic_seq_packet_socket
basic_seq_packet_socket	asio/include/asio/basic_seq_packet_socket.hpp	/^  basic_seq_packet_socket(basic_seq_packet_socket<Protocol1, Executor1>&& other,$/;"	f	class:asio::basic_seq_packet_socket
basic_seq_packet_socket	asio/include/asio/basic_seq_packet_socket.hpp	/^  basic_seq_packet_socket(const executor_type& ex,$/;"	f	class:asio::basic_seq_packet_socket
basic_seq_packet_socket	asio/include/asio/basic_seq_packet_socket.hpp	/^  explicit basic_seq_packet_socket(ExecutionContext& context,$/;"	f	class:asio::basic_seq_packet_socket
basic_seq_packet_socket	asio/include/asio/basic_seq_packet_socket.hpp	/^  explicit basic_seq_packet_socket(const executor_type& ex)$/;"	f	class:asio::basic_seq_packet_socket
basic_seq_packet_socket	asio/include/asio/basic_seq_packet_socket.hpp	/^class basic_seq_packet_socket$/;"	c	namespace:asio
basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^  basic_serial_port(ExecutionContext& context, const char* device,$/;"	f	class:asio::basic_serial_port
basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^  basic_serial_port(ExecutionContext& context, const std::string& device,$/;"	f	class:asio::basic_serial_port
basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^  basic_serial_port(ExecutionContext& context,$/;"	f	class:asio::basic_serial_port
basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^  basic_serial_port(basic_serial_port&& other)$/;"	f	class:asio::basic_serial_port
basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^  basic_serial_port(const executor_type& ex, const char* device)$/;"	f	class:asio::basic_serial_port
basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^  basic_serial_port(const executor_type& ex, const std::string& device)$/;"	f	class:asio::basic_serial_port
basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^  basic_serial_port(const executor_type& ex,$/;"	f	class:asio::basic_serial_port
basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^  explicit basic_serial_port(ExecutionContext& context,$/;"	f	class:asio::basic_serial_port
basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^  explicit basic_serial_port(const executor_type& ex)$/;"	f	class:asio::basic_serial_port
basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^class basic_serial_port$/;"	c	namespace:asio
basic_signal_set	asio/include/asio/basic_signal_set.hpp	/^  basic_signal_set(ExecutionContext& context, int signal_number_1,$/;"	f	class:asio::basic_signal_set
basic_signal_set	asio/include/asio/basic_signal_set.hpp	/^  basic_signal_set(const executor_type& ex, int signal_number_1)$/;"	f	class:asio::basic_signal_set
basic_signal_set	asio/include/asio/basic_signal_set.hpp	/^  basic_signal_set(const executor_type& ex, int signal_number_1,$/;"	f	class:asio::basic_signal_set
basic_signal_set	asio/include/asio/basic_signal_set.hpp	/^  explicit basic_signal_set(ExecutionContext& context,$/;"	f	class:asio::basic_signal_set
basic_signal_set	asio/include/asio/basic_signal_set.hpp	/^  explicit basic_signal_set(const executor_type& ex)$/;"	f	class:asio::basic_signal_set
basic_signal_set	asio/include/asio/basic_signal_set.hpp	/^class basic_signal_set$/;"	c	namespace:asio
basic_socket	asio/include/asio/basic_socket.hpp	/^  basic_socket(ExecutionContext& context, const endpoint_type& endpoint,$/;"	f	class:asio::basic_socket
basic_socket	asio/include/asio/basic_socket.hpp	/^  basic_socket(ExecutionContext& context, const protocol_type& protocol,$/;"	f	class:asio::basic_socket
basic_socket	asio/include/asio/basic_socket.hpp	/^  basic_socket(basic_socket&& other) ASIO_NOEXCEPT$/;"	f	class:asio::basic_socket
basic_socket	asio/include/asio/basic_socket.hpp	/^  basic_socket(basic_socket<Protocol1, Executor1>&& other,$/;"	f	class:asio::basic_socket
basic_socket	asio/include/asio/basic_socket.hpp	/^  basic_socket(const executor_type& ex, const endpoint_type& endpoint)$/;"	f	class:asio::basic_socket
basic_socket	asio/include/asio/basic_socket.hpp	/^  basic_socket(const executor_type& ex, const protocol_type& protocol)$/;"	f	class:asio::basic_socket
basic_socket	asio/include/asio/basic_socket.hpp	/^  basic_socket(const executor_type& ex, const protocol_type& protocol,$/;"	f	class:asio::basic_socket
basic_socket	asio/include/asio/basic_socket.hpp	/^  explicit basic_socket(ExecutionContext& context,$/;"	f	class:asio::basic_socket
basic_socket	asio/include/asio/basic_socket.hpp	/^  explicit basic_socket(const executor_type& ex)$/;"	f	class:asio::basic_socket
basic_socket	asio/include/asio/basic_socket.hpp	/^class basic_socket$/;"	c	namespace:asio
basic_socket_acceptor	asio/include/asio/basic_socket_acceptor.hpp	/^  basic_socket_acceptor(ExecutionContext& context,$/;"	f	class:asio::basic_socket_acceptor
basic_socket_acceptor	asio/include/asio/basic_socket_acceptor.hpp	/^  basic_socket_acceptor(basic_socket_acceptor&& other)$/;"	f	class:asio::basic_socket_acceptor
basic_socket_acceptor	asio/include/asio/basic_socket_acceptor.hpp	/^  basic_socket_acceptor(basic_socket_acceptor<Protocol1, Executor1>&& other,$/;"	f	class:asio::basic_socket_acceptor
basic_socket_acceptor	asio/include/asio/basic_socket_acceptor.hpp	/^  basic_socket_acceptor(const executor_type& ex, const protocol_type& protocol)$/;"	f	class:asio::basic_socket_acceptor
basic_socket_acceptor	asio/include/asio/basic_socket_acceptor.hpp	/^  basic_socket_acceptor(const executor_type& ex,$/;"	f	class:asio::basic_socket_acceptor
basic_socket_acceptor	asio/include/asio/basic_socket_acceptor.hpp	/^  explicit basic_socket_acceptor(ExecutionContext& context,$/;"	f	class:asio::basic_socket_acceptor
basic_socket_acceptor	asio/include/asio/basic_socket_acceptor.hpp	/^  explicit basic_socket_acceptor(const executor_type& ex)$/;"	f	class:asio::basic_socket_acceptor
basic_socket_acceptor	asio/include/asio/basic_socket_acceptor.hpp	/^class basic_socket_acceptor$/;"	c	namespace:asio
basic_socket_iostream	asio/include/asio/basic_socket_iostream.hpp	/^  basic_socket_iostream()$/;"	f	class:asio::basic_socket_iostream
basic_socket_iostream	asio/include/asio/basic_socket_iostream.hpp	/^  basic_socket_iostream(basic_socket_iostream&& other)$/;"	f	class:asio::basic_socket_iostream
basic_socket_iostream	asio/include/asio/basic_socket_iostream.hpp	/^  explicit basic_socket_iostream(T... x)$/;"	f	class:asio::basic_socket_iostream
basic_socket_iostream	asio/include/asio/basic_socket_iostream.hpp	/^  explicit basic_socket_iostream(basic_stream_socket<protocol_type> s)$/;"	f	class:asio::basic_socket_iostream
basic_socket_iostream	asio/include/asio/basic_socket_iostream.hpp	/^class basic_socket_iostream$/;"	c	namespace:asio
basic_socket_streambuf	asio/include/asio/basic_socket_streambuf.hpp	/^  basic_socket_streambuf()$/;"	f	class:asio::basic_socket_streambuf
basic_socket_streambuf	asio/include/asio/basic_socket_streambuf.hpp	/^  basic_socket_streambuf(basic_socket_streambuf&& other)$/;"	f	class:asio::basic_socket_streambuf
basic_socket_streambuf	asio/include/asio/basic_socket_streambuf.hpp	/^  explicit basic_socket_streambuf(basic_stream_socket<protocol_type> s)$/;"	f	class:asio::basic_socket_streambuf
basic_socket_streambuf	asio/include/asio/basic_socket_streambuf.hpp	/^class basic_socket_streambuf$/;"	c	namespace:asio
basic_stream_descriptor	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  basic_stream_descriptor(ExecutionContext& context,$/;"	f	class:asio::posix::basic_stream_descriptor
basic_stream_descriptor	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  basic_stream_descriptor(basic_stream_descriptor&& other)$/;"	f	class:asio::posix::basic_stream_descriptor
basic_stream_descriptor	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  basic_stream_descriptor(const executor_type& ex,$/;"	f	class:asio::posix::basic_stream_descriptor
basic_stream_descriptor	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  explicit basic_stream_descriptor(ExecutionContext& context,$/;"	f	class:asio::posix::basic_stream_descriptor
basic_stream_descriptor	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  explicit basic_stream_descriptor(const executor_type& ex)$/;"	f	class:asio::posix::basic_stream_descriptor
basic_stream_descriptor	asio/include/asio/posix/basic_stream_descriptor.hpp	/^class basic_stream_descriptor$/;"	c	namespace:asio::posix
basic_stream_handle	asio/include/asio/windows/basic_stream_handle.hpp	/^  basic_stream_handle(ExecutionContext& context,$/;"	f	class:asio::windows::basic_stream_handle
basic_stream_handle	asio/include/asio/windows/basic_stream_handle.hpp	/^  basic_stream_handle(basic_stream_handle&& other)$/;"	f	class:asio::windows::basic_stream_handle
basic_stream_handle	asio/include/asio/windows/basic_stream_handle.hpp	/^  basic_stream_handle(const executor_type& ex, const native_handle_type& handle)$/;"	f	class:asio::windows::basic_stream_handle
basic_stream_handle	asio/include/asio/windows/basic_stream_handle.hpp	/^  explicit basic_stream_handle(ExecutionContext& context,$/;"	f	class:asio::windows::basic_stream_handle
basic_stream_handle	asio/include/asio/windows/basic_stream_handle.hpp	/^  explicit basic_stream_handle(const executor_type& ex)$/;"	f	class:asio::windows::basic_stream_handle
basic_stream_handle	asio/include/asio/windows/basic_stream_handle.hpp	/^class basic_stream_handle$/;"	c	namespace:asio::windows
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  basic_stream_socket(ExecutionContext& context, const endpoint_type& endpoint,$/;"	f	class:asio::basic_stream_socket
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  basic_stream_socket(ExecutionContext& context, const protocol_type& protocol,$/;"	f	class:asio::basic_stream_socket
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  basic_stream_socket(ExecutionContext& context,$/;"	f	class:asio::basic_stream_socket
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  basic_stream_socket(basic_stream_socket&& other) ASIO_NOEXCEPT$/;"	f	class:asio::basic_stream_socket
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  basic_stream_socket(basic_stream_socket<Protocol1, Executor1>&& other,$/;"	f	class:asio::basic_stream_socket
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  basic_stream_socket(const executor_type& ex, const endpoint_type& endpoint)$/;"	f	class:asio::basic_stream_socket
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  basic_stream_socket(const executor_type& ex, const protocol_type& protocol)$/;"	f	class:asio::basic_stream_socket
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  basic_stream_socket(const executor_type& ex,$/;"	f	class:asio::basic_stream_socket
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  explicit basic_stream_socket(ExecutionContext& context,$/;"	f	class:asio::basic_stream_socket
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  explicit basic_stream_socket(const executor_type& ex)$/;"	f	class:asio::basic_stream_socket
basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^class basic_stream_socket$/;"	c	namespace:asio
basic_streambuf	asio/include/asio/basic_streambuf.hpp	/^  explicit basic_streambuf($/;"	f	class:asio::basic_streambuf
basic_streambuf	asio/include/asio/basic_streambuf.hpp	/^class basic_streambuf$/;"	c	namespace:asio
basic_streambuf_ref	asio/include/asio/basic_streambuf.hpp	/^  basic_streambuf_ref(basic_streambuf_ref&& other) ASIO_NOEXCEPT$/;"	f	class:asio::basic_streambuf_ref
basic_streambuf_ref	asio/include/asio/basic_streambuf.hpp	/^  basic_streambuf_ref(const basic_streambuf_ref& other) ASIO_NOEXCEPT$/;"	f	class:asio::basic_streambuf_ref
basic_streambuf_ref	asio/include/asio/basic_streambuf.hpp	/^  explicit basic_streambuf_ref(basic_streambuf<Allocator>& sb)$/;"	f	class:asio::basic_streambuf_ref
basic_streambuf_ref	asio/include/asio/basic_streambuf.hpp	/^class basic_streambuf_ref$/;"	c	namespace:asio
basic_waitable_timer	asio/include/asio/basic_waitable_timer.hpp	/^  basic_waitable_timer(basic_waitable_timer&& other)$/;"	f	class:asio::basic_waitable_timer
basic_waitable_timer	asio/include/asio/basic_waitable_timer.hpp	/^  basic_waitable_timer(const executor_type& ex, const duration& expiry_time)$/;"	f	class:asio::basic_waitable_timer
basic_waitable_timer	asio/include/asio/basic_waitable_timer.hpp	/^  basic_waitable_timer(const executor_type& ex, const time_point& expiry_time)$/;"	f	class:asio::basic_waitable_timer
basic_waitable_timer	asio/include/asio/basic_waitable_timer.hpp	/^  explicit basic_waitable_timer(ExecutionContext& context,$/;"	f	class:asio::basic_waitable_timer
basic_waitable_timer	asio/include/asio/basic_waitable_timer.hpp	/^  explicit basic_waitable_timer(const executor_type& ex)$/;"	f	class:asio::basic_waitable_timer
basic_waitable_timer	asio/include/asio/basic_waitable_timer.hpp	/^class basic_waitable_timer$/;"	c	namespace:asio
basic_yield_context	asio/include/asio/spawn.hpp	/^  basic_yield_context($/;"	f	class:asio::basic_yield_context
basic_yield_context	asio/include/asio/spawn.hpp	/^  basic_yield_context(const basic_yield_context<OtherHandler>& other)$/;"	f	class:asio::basic_yield_context
basic_yield_context	asio/include/asio/spawn.hpp	/^class basic_yield_context$/;"	c	namespace:asio
baud_rate	asio/include/asio/impl/serial_port_base.hpp	/^inline serial_port_base::baud_rate::baud_rate(unsigned int rate)$/;"	f	class:asio::serial_port_base::baud_rate
baud_rate	asio/include/asio/serial_port_base.hpp	/^  class baud_rate$/;"	c	class:asio::serial_port_base
begin	asio/include/asio/buffer.hpp	/^  const_iterator begin() const ASIO_NOEXCEPT$/;"	f	class:asio::const_buffers_1	typeref:typename:const_iterator
begin	asio/include/asio/buffer.hpp	/^  const_iterator begin() const ASIO_NOEXCEPT$/;"	f	class:asio::mutable_buffers_1	typeref:typename:const_iterator
begin	asio/include/asio/buffer.hpp	/^  const_iterator begin() const ASIO_NOEXCEPT$/;"	f	class:asio::null_buffers	typeref:typename:const_iterator
begin	asio/include/asio/buffers_iterator.hpp	/^  static buffers_iterator begin(const BufferSequence& buffers)$/;"	f	class:asio::buffers_iterator	typeref:typename:buffers_iterator
begin	asio/include/asio/detail/consuming_buffers.hpp	/^  const_iterator begin() const { return elems; }$/;"	f	struct:prepared_buffers	typeref:typename:const_iterator
begin	asio/include/asio/detail/hash_map.hpp	/^  const_iterator begin() const$/;"	f	class:asio::detail::hash_map	typeref:typename:const_iterator
begin	asio/include/asio/detail/hash_map.hpp	/^  iterator begin()$/;"	f	class:asio::detail::hash_map	typeref:typename:iterator
begin	asio/include/asio/detail/reactor_op_queue.hpp	/^  iterator begin() { return operations_.begin(); }$/;"	f	class:asio::detail::reactor_op_queue	typeref:typename:iterator
begin	asio/include/asio/ip/address_v4_range.hpp	/^  iterator begin() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range	typeref:typename:iterator
begin	asio/include/asio/ip/address_v6_range.hpp	/^  iterator begin() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range	typeref:typename:iterator
begin	asio/include/asio/ip/basic_resolver_results.hpp	/^  const_iterator begin() const$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:const_iterator
begin	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  const asio::const_buffer* begin() const { return &buffer_; }$/;"	f	class:shared_const_buffer	typeref:typename:const asio::const_buffer *	file:
begin	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  const asio::const_buffer* begin() const { return &buffer_; }$/;"	f	class:shared_const_buffer	typeref:typename:const asio::const_buffer *	file:
begin	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  awaitable<connection_iter> begin()$/;"	f	class:connections	typeref:typename:awaitable<connection_iter>	file:
begin	asio/src/tests/unit/buffer.cpp	/^  const_buffer* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_const_b	typeref:typename:const_buffer *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  const_buffer* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_const_e	typeref:typename:const_buffer *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  const_buffer* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::valid_const_a	typeref:typename:const_buffer *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  const_buffer* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::valid_const_b	typeref:typename:const_buffer *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  int* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_const_a	typeref:typename:int *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  int* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_const_d	typeref:typename:int *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  int* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_mutable_a	typeref:typename:int *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  int* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_mutable_d	typeref:typename:int *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  mutable_buffer* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_mutable_b	typeref:typename:mutable_buffer *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  mutable_buffer* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_mutable_e	typeref:typename:mutable_buffer *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  mutable_buffer* begin() const { return 0; }$/;"	f	struct:is_buffer_sequence::valid_mutable_b	typeref:typename:mutable_buffer *	file:
begin	asio/src/tests/unit/buffer.cpp	/^  mutable_buffer* begin() { return 0; }$/;"	f	struct:is_buffer_sequence::valid_mutable_a	typeref:typename:mutable_buffer *	file:
begin_	asio/include/asio/buffers_iterator.hpp	/^  buffer_sequence_iterator_type begin_;$/;"	m	class:asio::buffers_iterator	typeref:typename:buffer_sequence_iterator_type
begin_	asio/include/asio/ip/address_v4_range.hpp	/^  iterator begin_;$/;"	m	class:asio::ip::basic_address_range	typeref:typename:iterator
begin_	asio/include/asio/ip/address_v6_range.hpp	/^  iterator begin_;$/;"	m	class:asio::ip::basic_address_range	typeref:typename:iterator
begin_offset_	asio/include/asio/detail/buffered_stream_storage.hpp	/^  size_type begin_offset_;$/;"	m	class:asio::detail::buffered_stream_storage	typeref:typename:size_type
begin_test_suite	asio/src/tests/unit/unit_test.hpp	/^inline void begin_test_suite(const char* name)$/;"	f	namespace:asio::detail	typeref:typename:void
bind	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID bind(const endpoint_type& endpoint,$/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
bind	asio/include/asio/basic_socket.hpp	/^  void bind(const endpoint_type& endpoint)$/;"	f	class:asio::basic_socket	typeref:typename:void
bind	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID bind(const endpoint_type& endpoint,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
bind	asio/include/asio/basic_socket_acceptor.hpp	/^  void bind(const endpoint_type& endpoint)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
bind	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code bind(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
bind	asio/include/asio/detail/reactive_socket_service.hpp	/^  asio::error_code bind(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:asio::error_code
bind	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  asio::error_code bind(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:asio::error_code
bind	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  asio::error_code bind(implementation_type&,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:asio::error_code
bind	asio/src/examples/cpp03/socks4/socks4.hpp	/^    bind = 0x02$/;"	e	enum:socks4::request::command_type
bind	asio/src/examples/cpp11/socks4/socks4.hpp	/^    bind = 0x02$/;"	e	enum:socks4::request::command_type
bind_executor	asio/include/asio/bind_executor.hpp	/^bind_executor(ExecutionContext& ctx, ASIO_MOVE_ARG(T) t,$/;"	f	namespace:asio	typeref:typename:executor_binder<typename decay<T>::type,typename ExecutionContext::executor_type>
bind_executor	asio/include/asio/bind_executor.hpp	/^bind_executor(const Executor& ex, ASIO_MOVE_ARG(T) t,$/;"	f	namespace:asio	typeref:typename:executor_binder<typename decay<T>::type,Executor>
bind_handler	asio/include/asio/detail/bind_handler.hpp	/^bind_handler(ASIO_MOVE_ARG(Handler) handler, const Arg1& arg1,$/;"	f	namespace:asio::detail	typeref:typename:binder4<typename decay<Handler>::type,Arg1,Arg2,Arg3,Arg4>
bind_handler	asio/include/asio/detail/bind_handler.hpp	/^bind_handler(ASIO_MOVE_ARG(Handler) handler, const Arg1& arg1,$/;"	f	namespace:asio::detail	typeref:typename:binder5<typename decay<Handler>::type,Arg1,Arg2,Arg3,Arg4,Arg5>
bind_handler	asio/include/asio/detail/bind_handler.hpp	/^inline binder1<typename decay<Handler>::type, Arg1> bind_handler($/;"	f	namespace:asio::detail	typeref:typename:binder1<typename decay<Handler>::type,Arg1>
bind_handler	asio/include/asio/detail/bind_handler.hpp	/^inline binder2<typename decay<Handler>::type, Arg1, Arg2> bind_handler($/;"	f	namespace:asio::detail	typeref:typename:binder2<typename decay<Handler>::type,Arg1,Arg2>
bind_handler	asio/include/asio/detail/bind_handler.hpp	/^inline binder3<typename decay<Handler>::type, Arg1, Arg2, Arg3> bind_handler($/;"	f	namespace:asio::detail	typeref:typename:binder3<typename decay<Handler>::type,Arg1,Arg2,Arg3>
binder1	asio/include/asio/detail/bind_handler.hpp	/^  binder1(Handler& handler, const Arg1& arg1)$/;"	f	class:asio::detail::binder1
binder1	asio/include/asio/detail/bind_handler.hpp	/^  binder1(binder1&& other)$/;"	f	class:asio::detail::binder1
binder1	asio/include/asio/detail/bind_handler.hpp	/^  binder1(const binder1& other)$/;"	f	class:asio::detail::binder1
binder1	asio/include/asio/detail/bind_handler.hpp	/^  binder1(int, ASIO_MOVE_ARG(T) handler, const Arg1& arg1)$/;"	f	class:asio::detail::binder1
binder1	asio/include/asio/detail/bind_handler.hpp	/^class binder1$/;"	c	namespace:asio::detail
binder2	asio/include/asio/detail/bind_handler.hpp	/^  binder2(Handler& handler, const Arg1& arg1, const Arg2& arg2)$/;"	f	class:asio::detail::binder2
binder2	asio/include/asio/detail/bind_handler.hpp	/^  binder2(binder2&& other)$/;"	f	class:asio::detail::binder2
binder2	asio/include/asio/detail/bind_handler.hpp	/^  binder2(const binder2& other)$/;"	f	class:asio::detail::binder2
binder2	asio/include/asio/detail/bind_handler.hpp	/^  binder2(int, ASIO_MOVE_ARG(T) handler,$/;"	f	class:asio::detail::binder2
binder2	asio/include/asio/detail/bind_handler.hpp	/^class binder2$/;"	c	namespace:asio::detail
binder3	asio/include/asio/detail/bind_handler.hpp	/^  binder3(Handler& handler, const Arg1& arg1,$/;"	f	class:asio::detail::binder3
binder3	asio/include/asio/detail/bind_handler.hpp	/^  binder3(binder3&& other)$/;"	f	class:asio::detail::binder3
binder3	asio/include/asio/detail/bind_handler.hpp	/^  binder3(const binder3& other)$/;"	f	class:asio::detail::binder3
binder3	asio/include/asio/detail/bind_handler.hpp	/^  binder3(int, ASIO_MOVE_ARG(T) handler, const Arg1& arg1,$/;"	f	class:asio::detail::binder3
binder3	asio/include/asio/detail/bind_handler.hpp	/^class binder3$/;"	c	namespace:asio::detail
binder4	asio/include/asio/detail/bind_handler.hpp	/^  binder4(Handler& handler, const Arg1& arg1,$/;"	f	class:asio::detail::binder4
binder4	asio/include/asio/detail/bind_handler.hpp	/^  binder4(binder4&& other)$/;"	f	class:asio::detail::binder4
binder4	asio/include/asio/detail/bind_handler.hpp	/^  binder4(const binder4& other)$/;"	f	class:asio::detail::binder4
binder4	asio/include/asio/detail/bind_handler.hpp	/^  binder4(int, ASIO_MOVE_ARG(T) handler, const Arg1& arg1,$/;"	f	class:asio::detail::binder4
binder4	asio/include/asio/detail/bind_handler.hpp	/^class binder4$/;"	c	namespace:asio::detail
binder5	asio/include/asio/detail/bind_handler.hpp	/^  binder5(Handler& handler, const Arg1& arg1, const Arg2& arg2,$/;"	f	class:asio::detail::binder5
binder5	asio/include/asio/detail/bind_handler.hpp	/^  binder5(binder5&& other)$/;"	f	class:asio::detail::binder5
binder5	asio/include/asio/detail/bind_handler.hpp	/^  binder5(const binder5& other)$/;"	f	class:asio::detail::binder5
binder5	asio/include/asio/detail/bind_handler.hpp	/^  binder5(int, ASIO_MOVE_ARG(T) handler, const Arg1& arg1,$/;"	f	class:asio::detail::binder5
binder5	asio/include/asio/detail/bind_handler.hpp	/^class binder5$/;"	c	namespace:asio::detail
block	asio/include/asio/detail/null_signal_blocker.hpp	/^  void block()$/;"	f	class:asio::detail::null_signal_blocker	typeref:typename:void
block	asio/include/asio/detail/posix_signal_blocker.hpp	/^  void block()$/;"	f	class:asio::detail::posix_signal_blocker	typeref:typename:void
block_size_	asio/src/tests/performance/client.cpp	/^  size_t block_size_;$/;"	m	class:session	typeref:typename:size_t	file:
block_size_	asio/src/tests/performance/server.cpp	/^  size_t block_size_;$/;"	m	class:server	typeref:typename:size_t	file:
block_size_	asio/src/tests/performance/server.cpp	/^  size_t block_size_;$/;"	m	class:session	typeref:typename:size_t	file:
blocked_	asio/include/asio/detail/posix_signal_blocker.hpp	/^  bool blocked_;$/;"	m	class:asio::detail::posix_signal_blocker	typeref:typename:bool
blockquote/para	asio/src/doc/asioref.xsl	/^<xsl:template match="blockquote\/para">$/;"	m
body	asio/src/examples/cpp03/chat/chat_message.hpp	/^  char* body()$/;"	f	class:chat_message	typeref:typename:char *
body	asio/src/examples/cpp03/chat/chat_message.hpp	/^  const char* body() const$/;"	f	class:chat_message	typeref:typename:const char *
body	asio/src/examples/cpp11/chat/chat_message.hpp	/^  char* body()$/;"	f	class:chat_message	typeref:typename:char *
body	asio/src/examples/cpp11/chat/chat_message.hpp	/^  const char* body() const$/;"	f	class:chat_message	typeref:typename:const char *
body_length	asio/src/examples/cpp03/chat/chat_message.hpp	/^  size_t body_length() const$/;"	f	class:chat_message	typeref:typename:size_t
body_length	asio/src/examples/cpp03/chat/chat_message.hpp	/^  void body_length(size_t new_length)$/;"	f	class:chat_message	typeref:typename:void
body_length	asio/src/examples/cpp11/chat/chat_message.hpp	/^  std::size_t body_length() const$/;"	f	class:chat_message	typeref:typename:std::size_t
body_length	asio/src/examples/cpp11/chat/chat_message.hpp	/^  void body_length(std::size_t new_length)$/;"	f	class:chat_message	typeref:typename:void
body_length_	asio/src/examples/cpp03/chat/chat_message.hpp	/^  size_t body_length_;$/;"	m	class:chat_message	typeref:typename:size_t
body_length_	asio/src/examples/cpp11/chat/chat_message.hpp	/^  std::size_t body_length_;$/;"	m	class:chat_message	typeref:typename:std::size_t
bold	asio/src/doc/reference.xsl	/^<xsl:template match="bold" mode="markup">[*<xsl:apply-templates mode="markup"\/>]<\/xsl:template/;"	m
boolean	asio/include/asio/detail/socket_option.hpp	/^  boolean()$/;"	f	class:asio::detail::socket_option::boolean
boolean	asio/include/asio/detail/socket_option.hpp	/^  explicit boolean(bool v)$/;"	f	class:asio::detail::socket_option::boolean
boolean	asio/include/asio/detail/socket_option.hpp	/^class boolean$/;"	c	namespace:asio::detail::socket_option
boost	asio/configure.ac	/^AC_ARG_WITH(boost,$/;"	w
boost	asio/include/asio/detail/array_fwd.hpp	/^namespace boost {$/;"	n
boost	asio/include/asio/detail/date_time_fwd.hpp	/^namespace boost {$/;"	n
boost	asio/include/asio/detail/regex_fwd.hpp	/^namespace boost {$/;"	n
boost-coroutine	asio/configure.ac	/^AC_ARG_ENABLE(boost-coroutine,$/;"	e
bottom_of_stack_	asio/include/asio/impl/awaitable.hpp	/^  awaitable<void, Executor> bottom_of_stack_;$/;"	m	class:asio::detail::awaitable_thread	typeref:typename:awaitable<void,Executor>
bridgehead[count(link) > 0]	asio/src/doc/asioref.xsl	/^<xsl:template match="bridgehead[count(link) &gt; 0]">$/;"	m
broadcast	asio/include/asio/ip/address_v4.hpp	/^  static address_v4 broadcast() ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v4	typeref:typename:address_v4
broadcast	asio/include/asio/ip/network_v4.hpp	/^  address_v4 broadcast() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4	typeref:typename:address_v4
broadcast	asio/include/asio/socket_base.hpp	/^      broadcast;$/;"	t	class:asio::socket_base
broadcast	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined broadcast;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
broken_pipe	asio/include/asio/error.hpp	/^  broken_pipe = ASIO_WIN_OR_POSIX($/;"	e	enum:asio::error::basic_errors
bucket_type	asio/include/asio/detail/hash_map.hpp	/^  struct bucket_type$/;"	s	class:asio::detail::hash_map
buckets_	asio/include/asio/detail/hash_map.hpp	/^  bucket_type* buckets_;$/;"	m	class:asio::detail::hash_map	typeref:typename:bucket_type *
buf	asio/include/asio/detail/descriptor_ops.hpp	/^typedef iovec buf;$/;"	t	namespace:asio::detail::descriptor_ops	typeref:typename:iovec
buf	asio/include/asio/detail/socket_ops.hpp	/^typedef WSABUF buf;$/;"	t	namespace:asio::detail::socket_ops	typeref:typename:WSABUF
buf	asio/include/asio/detail/socket_ops.hpp	/^typedef iovec buf;$/;"	t	namespace:asio::detail::socket_ops	typeref:typename:iovec
buf_	asio/include/asio/buffer.hpp	/^  mutable_buffer buf_;$/;"	m	class:asio::null_buffers	typeref:typename:mutable_buffer
buffer	asio/include/asio/buffer.hpp	/^buffer(boost::array<PodType, N>& data) ASIO_NOEXCEPT$/;"	f	namespace:asio	typeref:typename:detail::buffer_types<PodType>::container_type
buffer	asio/include/asio/buffer.hpp	/^buffer(boost::array<PodType, N>& data,$/;"	f	namespace:asio	typeref:typename:detail::buffer_types<PodType>::container_type
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_CONST_BUFFER buffer($/;"	f	namespace:asio	typeref:typename:ASIO_CONST_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_CONST_BUFFER buffer(boost::array<const PodType, N>& data,$/;"	f	namespace:asio	typeref:typename:ASIO_CONST_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_CONST_BUFFER buffer(const PodType (&data)[N],$/;"	f	namespace:asio	typeref:typename:ASIO_CONST_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_CONST_BUFFER buffer(const boost::array<PodType, N>& data,$/;"	f	namespace:asio	typeref:typename:ASIO_CONST_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_CONST_BUFFER buffer(const const_buffer& b,$/;"	f	namespace:asio	typeref:typename:ASIO_CONST_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_CONST_BUFFER buffer(const std::array<PodType, N>& data,$/;"	f	namespace:asio	typeref:typename:ASIO_CONST_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_CONST_BUFFER buffer(const void* data,$/;"	f	namespace:asio	typeref:typename:ASIO_CONST_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_CONST_BUFFER buffer(std::array<const PodType, N>& data,$/;"	f	namespace:asio	typeref:typename:ASIO_CONST_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_MUTABLE_BUFFER buffer($/;"	f	namespace:asio	typeref:typename:ASIO_MUTABLE_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_MUTABLE_BUFFER buffer(PodType (&data)[N]) ASIO_NOEXCEPT$/;"	f	namespace:asio	typeref:typename:ASIO_MUTABLE_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_MUTABLE_BUFFER buffer(PodType (&data)[N],$/;"	f	namespace:asio	typeref:typename:ASIO_MUTABLE_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_MUTABLE_BUFFER buffer(boost::array<PodType, N>& data,$/;"	f	namespace:asio	typeref:typename:ASIO_MUTABLE_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_MUTABLE_BUFFER buffer(const mutable_buffer& b,$/;"	f	namespace:asio	typeref:typename:ASIO_MUTABLE_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_MUTABLE_BUFFER buffer(std::array<PodType, N>& data,$/;"	f	namespace:asio	typeref:typename:ASIO_MUTABLE_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_MUTABLE_BUFFER buffer(std::vector<PodType, Allocator>& data,$/;"	f	namespace:asio	typeref:typename:ASIO_MUTABLE_BUFFER
buffer	asio/include/asio/buffer.hpp	/^inline ASIO_MUTABLE_BUFFER buffer(void* data,$/;"	f	namespace:asio	typeref:typename:ASIO_MUTABLE_BUFFER
buffer_	asio/include/asio/basic_streambuf.hpp	/^  std::vector<char_type, Allocator> buffer_;$/;"	m	class:asio::basic_streambuf	typeref:typename:std::vector<char_type,Allocator>
buffer_	asio/include/asio/detail/buffer_resize_guard.hpp	/^  Buffer& buffer_;$/;"	m	class:asio::detail::buffer_resize_guard	typeref:typename:Buffer &
buffer_	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  native_buffer_type buffer_;$/;"	m	class:asio::detail::buffer_sequence_adapter	typeref:typename:native_buffer_type
buffer_	asio/include/asio/detail/buffered_stream_storage.hpp	/^  std::vector<byte_type> buffer_;$/;"	m	class:asio::detail::buffered_stream_storage	typeref:typename:std::vector<byte_type>
buffer_	asio/include/asio/detail/consuming_buffers.hpp	/^  Buffer buffer_;$/;"	m	class:consuming_single_buffer	typeref:typename:Buffer
buffer_	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  asio::const_buffer buffer_;$/;"	m	class:shared_const_buffer	typeref:typename:asio::const_buffer	file:
buffer_	asio/src/examples/cpp03/http/server/connection.hpp	/^  boost::array<char, 8192> buffer_;$/;"	m	class:http::server::connection	typeref:typename:boost::array<char,8192>
buffer_	asio/src/examples/cpp03/http/server2/connection.hpp	/^  boost::array<char, 8192> buffer_;$/;"	m	class:http::server2::connection	typeref:typename:boost::array<char,8192>
buffer_	asio/src/examples/cpp03/http/server3/connection.hpp	/^  boost::array<char, 8192> buffer_;$/;"	m	class:http::server3::connection	typeref:typename:boost::array<char,8192>
buffer_	asio/src/examples/cpp03/http/server4/server.hpp	/^  boost::shared_ptr<boost::array<char, 8192> > buffer_;$/;"	m	class:http::server4::server	typeref:typename:boost::shared_ptr<boost::array<char,8192>>
buffer_	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  asio::const_buffer buffer_;$/;"	m	class:shared_const_buffer	typeref:typename:asio::const_buffer	file:
buffer_	asio/src/examples/cpp11/http/server/connection.hpp	/^  std::array<char, 8192> buffer_;$/;"	m	class:http::server::connection	typeref:typename:std::array<char,8192>
buffer_	asio/src/tests/latency/tcp_server.cpp	/^  std::vector<unsigned char> buffer_;$/;"	m	class:tcp_server	typeref:typename:std::vector<unsigned char>	file:
buffer_	asio/src/tests/latency/udp_server.cpp	/^  std::vector<unsigned char> buffer_;$/;"	m	class:udp_server	typeref:typename:std::vector<unsigned char>	file:
buffer_cast	asio/include/asio/buffer.hpp	/^inline PointerToPodType buffer_cast(const const_buffer& b) ASIO_NOEXCEPT$/;"	f	namespace:asio	typeref:typename:PointerToPodType
buffer_cast	asio/include/asio/buffer.hpp	/^inline PointerToPodType buffer_cast(const mutable_buffer& b) ASIO_NOEXCEPT$/;"	f	namespace:asio	typeref:typename:PointerToPodType
buffer_compile	asio/src/tests/unit/buffer.cpp	/^namespace buffer_compile {$/;"	n	file:
buffer_copy	asio/include/asio/buffer.hpp	/^inline std::size_t buffer_copy(const MutableBufferSequence& target,$/;"	f	namespace:asio	typeref:typename:std::size_t
buffer_copy	asio/include/asio/buffer.hpp	/^inline std::size_t buffer_copy(one_buffer, one_buffer,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
buffer_copy	asio/include/asio/buffer.hpp	/^std::size_t buffer_copy(multiple_buffers, multiple_buffers,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
buffer_copy	asio/include/asio/buffer.hpp	/^std::size_t buffer_copy(multiple_buffers, one_buffer,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
buffer_copy	asio/include/asio/buffer.hpp	/^std::size_t buffer_copy(one_buffer, multiple_buffers,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
buffer_copy_1	asio/include/asio/buffer.hpp	/^inline std::size_t buffer_copy_1(const mutable_buffer& target,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
buffer_copy_runtime	asio/src/tests/unit/buffer.cpp	/^namespace buffer_copy_runtime {$/;"	n	file:
buffer_debug_check	asio/include/asio/buffer.hpp	/^  buffer_debug_check(Iterator iter)$/;"	f	class:asio::detail::buffer_debug_check
buffer_debug_check	asio/include/asio/buffer.hpp	/^class buffer_debug_check$/;"	c	namespace:asio::detail
buffer_delta	asio/include/asio/basic_streambuf.hpp	/^  enum { buffer_delta = 128 };$/;"	e	enum:asio::basic_streambuf::__anon9d54936e0103
buffer_resize_guard	asio/include/asio/detail/buffer_resize_guard.hpp	/^  buffer_resize_guard(Buffer& buffer)$/;"	f	class:asio::detail::buffer_resize_guard
buffer_resize_guard	asio/include/asio/detail/buffer_resize_guard.hpp	/^class buffer_resize_guard$/;"	c	namespace:asio::detail
buffer_sequence_adapter	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  explicit buffer_sequence_adapter($/;"	f	class:asio::detail::buffer_sequence_adapter
buffer_sequence_adapter	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  explicit buffer_sequence_adapter(const Buffers& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter
buffer_sequence_adapter	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^class buffer_sequence_adapter$/;"	c	namespace:asio::detail
buffer_sequence_adapter	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^class buffer_sequence_adapter<Buffer, asio::const_buffer>$/;"	c	namespace:asio::detail
buffer_sequence_adapter	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^class buffer_sequence_adapter<Buffer, asio::const_buffers_1>$/;"	c	namespace:asio::detail
buffer_sequence_adapter	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^class buffer_sequence_adapter<Buffer, asio::mutable_buffer>$/;"	c	namespace:asio::detail
buffer_sequence_adapter	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^class buffer_sequence_adapter<Buffer, asio::mutable_buffers_1>$/;"	c	namespace:asio::detail
buffer_sequence_adapter_base	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^class buffer_sequence_adapter_base$/;"	c	namespace:asio::detail
buffer_sequence_begin	asio/include/asio/buffer.hpp	/^inline auto buffer_sequence_begin(C& c,$/;"	f	namespace:asio	typeref:typename:auto
buffer_sequence_begin	asio/include/asio/buffer.hpp	/^inline auto buffer_sequence_begin(const C& c,$/;"	f	namespace:asio	typeref:typename:auto
buffer_sequence_begin	asio/include/asio/buffer.hpp	/^inline const const_buffer* buffer_sequence_begin(const ConstBuffer& b,$/;"	f	namespace:asio	typeref:typename:const const_buffer *
buffer_sequence_begin	asio/include/asio/buffer.hpp	/^inline const mutable_buffer* buffer_sequence_begin(const MutableBuffer& b,$/;"	f	namespace:asio	typeref:typename:const mutable_buffer *
buffer_sequence_begin	asio/include/asio/buffer.hpp	/^inline typename C::const_iterator buffer_sequence_begin(const C& c,$/;"	f	namespace:asio	typeref:typename:C::const_iterator
buffer_sequence_begin	asio/include/asio/buffer.hpp	/^inline typename C::iterator buffer_sequence_begin(C& c,$/;"	f	namespace:asio	typeref:typename:C::iterator
buffer_sequence_cardinality	asio/include/asio/buffer.hpp	/^struct buffer_sequence_cardinality :$/;"	s	namespace:asio::detail
buffer_sequence_end	asio/include/asio/buffer.hpp	/^inline auto buffer_sequence_end(C& c,$/;"	f	namespace:asio	typeref:typename:auto
buffer_sequence_end	asio/include/asio/buffer.hpp	/^inline auto buffer_sequence_end(const C& c,$/;"	f	namespace:asio	typeref:typename:auto
buffer_sequence_end	asio/include/asio/buffer.hpp	/^inline const const_buffer* buffer_sequence_end(const ConstBuffer& b,$/;"	f	namespace:asio	typeref:typename:const const_buffer *
buffer_sequence_end	asio/include/asio/buffer.hpp	/^inline const mutable_buffer* buffer_sequence_end(const MutableBuffer& b,$/;"	f	namespace:asio	typeref:typename:const mutable_buffer *
buffer_sequence_end	asio/include/asio/buffer.hpp	/^inline typename C::const_iterator buffer_sequence_end(const C& c,$/;"	f	namespace:asio	typeref:typename:C::const_iterator
buffer_sequence_end	asio/include/asio/buffer.hpp	/^inline typename C::iterator buffer_sequence_end(C& c,$/;"	f	namespace:asio	typeref:typename:C::iterator
buffer_sequence_iterator_type	asio/include/asio/buffers_iterator.hpp	/^          ByteType>::const_iterator buffer_sequence_iterator_type;$/;"	t	class:asio::buffers_iterator	typeref:typename:detail::buffers_iterator_types<BufferSequence,ByteType>::const_iterator
buffer_sequence_memfns_base	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct buffer_sequence_memfns_base$/;"	s	namespace:asio::detail
buffer_sequence_memfns_check	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct buffer_sequence_memfns_check$/;"	s	namespace:asio::detail
buffer_sequence_memfns_derived	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct buffer_sequence_memfns_derived$/;"	s	namespace:asio::detail
buffer_size	asio/include/asio/basic_socket_streambuf.hpp	/^  enum { buffer_size = 512 };$/;"	e	enum:asio::detail::socket_streambuf_buffers::__anon8ef6d9760103
buffer_size	asio/include/asio/buffer.hpp	/^inline std::size_t buffer_size(const BufferSequence& b) ASIO_NOEXCEPT$/;"	f	namespace:asio	typeref:typename:std::size_t
buffer_size	asio/include/asio/buffer.hpp	/^inline std::size_t buffer_size(multiple_buffers,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
buffer_size	asio/include/asio/buffer.hpp	/^inline std::size_t buffer_size(one_buffer,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
buffer_type	asio/include/asio/buffer.hpp	/^    buffer_type;$/;"	t	function:asio::buffer	typeref:typename:asio::detail::buffer_types<PodType>::buffer_type
buffer_type	asio/include/asio/buffer.hpp	/^  typedef const_buffer buffer_type;$/;"	t	struct:asio::detail::buffer_types_base	typeref:typename:const_buffer
buffer_type	asio/include/asio/buffer.hpp	/^  typedef mutable_buffer buffer_type;$/;"	t	struct:asio::detail::buffer_types_base	typeref:typename:mutable_buffer
buffer_type	asio/include/asio/buffers_iterator.hpp	/^      BufferSequence, ByteType>::buffer_type buffer_type;$/;"	t	class:asio::buffers_iterator	typeref:typename:detail::buffers_iterator_types<BufferSequence,ByteType>::buffer_type
buffer_type	asio/include/asio/buffers_iterator.hpp	/^    typedef const_buffer buffer_type;$/;"	t	struct:asio::detail::buffers_iterator_types	typeref:typename:const_buffer
buffer_type	asio/include/asio/buffers_iterator.hpp	/^    typedef const_buffer buffer_type;$/;"	t	struct:asio::detail::buffers_iterator_types_helper	typeref:typename:const_buffer
buffer_type	asio/include/asio/buffers_iterator.hpp	/^    typedef mutable_buffer buffer_type;$/;"	t	struct:asio::detail::buffers_iterator_types	typeref:typename:mutable_buffer
buffer_type	asio/include/asio/buffers_iterator.hpp	/^    typedef mutable_buffer buffer_type;$/;"	t	struct:asio::detail::buffers_iterator_types_helper	typeref:typename:mutable_buffer
buffer_type	asio/include/asio/buffers_iterator.hpp	/^    typedef typename helper::buffer_type buffer_type;$/;"	t	struct:asio::detail::buffers_iterator_types	typeref:typename:helper::buffer_type
buffer_types	asio/include/asio/buffer.hpp	/^struct buffer_types$/;"	s	namespace:asio::detail
buffer_types_base	asio/include/asio/buffer.hpp	/^struct buffer_types_base<false>$/;"	s	namespace:asio::detail
buffer_types_base	asio/include/asio/buffer.hpp	/^struct buffer_types_base<true>$/;"	s	namespace:asio::detail
buffered_fill_handler	asio/include/asio/impl/buffered_read_stream.hpp	/^    buffered_fill_handler(buffered_fill_handler&& other)$/;"	f	class:asio::detail::buffered_fill_handler
buffered_fill_handler	asio/include/asio/impl/buffered_read_stream.hpp	/^    buffered_fill_handler(const buffered_fill_handler& other)$/;"	f	class:asio::detail::buffered_fill_handler
buffered_fill_handler	asio/include/asio/impl/buffered_read_stream.hpp	/^    buffered_fill_handler(detail::buffered_stream_storage& storage,$/;"	f	class:asio::detail::buffered_fill_handler
buffered_fill_handler	asio/include/asio/impl/buffered_read_stream.hpp	/^  class buffered_fill_handler$/;"	c	namespace:asio::detail
buffered_flush_handler	asio/include/asio/impl/buffered_write_stream.hpp	/^    buffered_flush_handler(buffered_flush_handler&& other)$/;"	f	class:asio::detail::buffered_flush_handler
buffered_flush_handler	asio/include/asio/impl/buffered_write_stream.hpp	/^    buffered_flush_handler(const buffered_flush_handler& other)$/;"	f	class:asio::detail::buffered_flush_handler
buffered_flush_handler	asio/include/asio/impl/buffered_write_stream.hpp	/^    buffered_flush_handler(detail::buffered_stream_storage& storage,$/;"	f	class:asio::detail::buffered_flush_handler
buffered_flush_handler	asio/include/asio/impl/buffered_write_stream.hpp	/^  class buffered_flush_handler$/;"	c	namespace:asio::detail
buffered_handshake_handler	asio/src/tests/unit/ssl/stream.cpp	/^void buffered_handshake_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:ssl_stream_compile	typeref:typename:void
buffered_handshake_op	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^  buffered_handshake_op(stream_base::handshake_type type,$/;"	f	class:asio::ssl::detail::buffered_handshake_op
buffered_handshake_op	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^class buffered_handshake_op$/;"	c	namespace:asio::ssl::detail
buffered_read_some_handler	asio/include/asio/impl/buffered_read_stream.hpp	/^      buffered_read_some_handler(buffered_read_some_handler&& other)$/;"	f	class:asio::detail::buffered_read_some_handler
buffered_read_some_handler	asio/include/asio/impl/buffered_read_stream.hpp	/^      buffered_read_some_handler(const buffered_read_some_handler& other)$/;"	f	class:asio::detail::buffered_read_some_handler
buffered_read_some_handler	asio/include/asio/impl/buffered_read_stream.hpp	/^    buffered_read_some_handler(detail::buffered_stream_storage& storage,$/;"	f	class:asio::detail::buffered_read_some_handler
buffered_read_some_handler	asio/include/asio/impl/buffered_read_stream.hpp	/^  class buffered_read_some_handler$/;"	c	namespace:asio::detail
buffered_read_stream	asio/include/asio/buffered_read_stream.hpp	/^  buffered_read_stream(Arg& a, std::size_t buffer_size)$/;"	f	class:asio::buffered_read_stream
buffered_read_stream	asio/include/asio/buffered_read_stream.hpp	/^  explicit buffered_read_stream(Arg& a)$/;"	f	class:asio::buffered_read_stream
buffered_read_stream	asio/include/asio/buffered_read_stream.hpp	/^class buffered_read_stream$/;"	c	namespace:asio
buffered_stream	asio/include/asio/buffered_stream.hpp	/^  explicit buffered_stream(Arg& a)$/;"	f	class:asio::buffered_stream
buffered_stream	asio/include/asio/buffered_stream.hpp	/^  explicit buffered_stream(Arg& a, std::size_t read_buffer_size,$/;"	f	class:asio::buffered_stream
buffered_stream	asio/include/asio/buffered_stream.hpp	/^class buffered_stream$/;"	c	namespace:asio
buffered_stream_storage	asio/include/asio/detail/buffered_stream_storage.hpp	/^  explicit buffered_stream_storage(std::size_t buffer_capacity)$/;"	f	class:asio::detail::buffered_stream_storage
buffered_stream_storage	asio/include/asio/detail/buffered_stream_storage.hpp	/^class buffered_stream_storage$/;"	c	namespace:asio::detail
buffered_write_some_handler	asio/include/asio/impl/buffered_write_stream.hpp	/^      buffered_write_some_handler(buffered_write_some_handler&& other)$/;"	f	class:asio::detail::buffered_write_some_handler
buffered_write_some_handler	asio/include/asio/impl/buffered_write_stream.hpp	/^      buffered_write_some_handler(const buffered_write_some_handler& other)$/;"	f	class:asio::detail::buffered_write_some_handler
buffered_write_some_handler	asio/include/asio/impl/buffered_write_stream.hpp	/^    buffered_write_some_handler(detail::buffered_stream_storage& storage,$/;"	f	class:asio::detail::buffered_write_some_handler
buffered_write_some_handler	asio/include/asio/impl/buffered_write_stream.hpp	/^  class buffered_write_some_handler$/;"	c	namespace:asio::detail
buffered_write_stream	asio/include/asio/buffered_write_stream.hpp	/^  buffered_write_stream(Arg& a, std::size_t buffer_size)$/;"	f	class:asio::buffered_write_stream
buffered_write_stream	asio/include/asio/buffered_write_stream.hpp	/^  explicit buffered_write_stream(Arg& a)$/;"	f	class:asio::buffered_write_stream
buffered_write_stream	asio/include/asio/buffered_write_stream.hpp	/^class buffered_write_stream$/;"	c	namespace:asio
buffers	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  native_buffer_type* buffers()$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:native_buffer_type *
buffers	asio/src/examples/cpp03/socks4/socks4.hpp	/^  boost::array<asio::const_buffer, 7> buffers() const$/;"	f	class:socks4::request	typeref:typename:boost::array<asio::const_buffer,7>
buffers	asio/src/examples/cpp03/socks4/socks4.hpp	/^  boost::array<asio::mutable_buffer, 5> buffers()$/;"	f	class:socks4::reply	typeref:typename:boost::array<asio::mutable_buffer,5>
buffers	asio/src/examples/cpp11/socks4/socks4.hpp	/^  std::array<asio::const_buffer, 7> buffers() const$/;"	f	class:socks4::request	typeref:typename:std::array<asio::const_buffer,7>
buffers	asio/src/examples/cpp11/socks4/socks4.hpp	/^  std::array<asio::mutable_buffer, 5> buffers()$/;"	f	class:socks4::reply	typeref:typename:std::array<asio::mutable_buffer,5>
buffers_	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  native_buffer_type buffers_[max_buffers];$/;"	m	class:asio::detail::buffer_sequence_adapter	typeref:typename:native_buffer_type[]
buffers_	asio/include/asio/detail/consuming_buffers.hpp	/^  Buffers buffers_;$/;"	m	class:consuming_buffers	typeref:typename:Buffers
buffers_	asio/include/asio/detail/consuming_buffers.hpp	/^  boost::array<Elem, 2> buffers_;$/;"	m	class:consuming_buffers	typeref:typename:boost::array<Elem,2>
buffers_	asio/include/asio/detail/consuming_buffers.hpp	/^  std::array<Elem, 2> buffers_;$/;"	m	class:consuming_buffers	typeref:typename:std::array<Elem,2>
buffers_	asio/include/asio/detail/descriptor_read_op.hpp	/^  MutableBufferSequence buffers_;$/;"	m	class:asio::detail::descriptor_read_op_base	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/detail/descriptor_write_op.hpp	/^  ConstBufferSequence buffers_;$/;"	m	class:asio::detail::descriptor_write_op_base	typeref:typename:ConstBufferSequence
buffers_	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^  MutableBufferSequence buffers_;$/;"	m	class:asio::detail::reactive_socket_recv_op_base	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  MutableBufferSequence buffers_;$/;"	m	class:asio::detail::reactive_socket_recvfrom_op_base	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^  MutableBufferSequence buffers_;$/;"	m	class:asio::detail::reactive_socket_recvmsg_op_base	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/detail/reactive_socket_send_op.hpp	/^  ConstBufferSequence buffers_;$/;"	m	class:asio::detail::reactive_socket_send_op_base	typeref:typename:ConstBufferSequence
buffers_	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^  ConstBufferSequence buffers_;$/;"	m	class:asio::detail::reactive_socket_sendto_op_base	typeref:typename:ConstBufferSequence
buffers_	asio/include/asio/detail/win_iocp_handle_read_op.hpp	/^  MutableBufferSequence buffers_;$/;"	m	class:asio::detail::win_iocp_handle_read_op	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/detail/win_iocp_handle_write_op.hpp	/^  ConstBufferSequence buffers_;$/;"	m	class:asio::detail::win_iocp_handle_write_op	typeref:typename:ConstBufferSequence
buffers_	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^  MutableBufferSequence buffers_;$/;"	m	class:asio::detail::win_iocp_socket_recv_op	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^  MutableBufferSequence buffers_;$/;"	m	class:asio::detail::win_iocp_socket_recvfrom_op	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^  MutableBufferSequence buffers_;$/;"	m	class:asio::detail::win_iocp_socket_recvmsg_op	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/detail/win_iocp_socket_send_op.hpp	/^  ConstBufferSequence buffers_;$/;"	m	class:asio::detail::win_iocp_socket_send_op	typeref:typename:ConstBufferSequence
buffers_	asio/include/asio/detail/winrt_socket_recv_op.hpp	/^  MutableBufferSequence buffers_;$/;"	m	class:asio::detail::winrt_socket_recv_op	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/detail/winrt_socket_send_op.hpp	/^  ConstBufferSequence buffers_;$/;"	m	class:asio::detail::winrt_socket_send_op	typeref:typename:ConstBufferSequence
buffers_	asio/include/asio/impl/buffered_read_stream.hpp	/^    MutableBufferSequence buffers_;$/;"	m	class:asio::detail::buffered_read_some_handler	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/impl/buffered_write_stream.hpp	/^    ConstBufferSequence buffers_;$/;"	m	class:asio::detail::buffered_write_some_handler	typeref:typename:ConstBufferSequence
buffers_	asio/include/asio/impl/read.hpp	/^    DynamicBuffer_v1 buffers_;$/;"	m	class:asio::detail::read_dynbuf_v1_op	typeref:typename:DynamicBuffer_v1
buffers_	asio/include/asio/impl/read.hpp	/^    DynamicBuffer_v2 buffers_;$/;"	m	class:asio::detail::read_dynbuf_v2_op	typeref:typename:DynamicBuffer_v2
buffers_	asio/include/asio/impl/read.hpp	/^    buffers_type buffers_;$/;"	m	class:asio::detail::read_op	typeref:typename:buffers_type
buffers_	asio/include/asio/impl/read_at.hpp	/^    buffers_type buffers_;$/;"	m	class:asio::detail::read_at_op	typeref:typename:buffers_type
buffers_	asio/include/asio/impl/read_until.hpp	/^    DynamicBuffer_v1 buffers_;$/;"	m	class:asio::detail::read_until_delim_op_v1	typeref:typename:DynamicBuffer_v1
buffers_	asio/include/asio/impl/read_until.hpp	/^    DynamicBuffer_v1 buffers_;$/;"	m	class:asio::detail::read_until_delim_string_op_v1	typeref:typename:DynamicBuffer_v1
buffers_	asio/include/asio/impl/read_until.hpp	/^    DynamicBuffer_v1 buffers_;$/;"	m	class:asio::detail::read_until_expr_op_v1	typeref:typename:DynamicBuffer_v1
buffers_	asio/include/asio/impl/read_until.hpp	/^    DynamicBuffer_v1 buffers_;$/;"	m	class:asio::detail::read_until_match_op_v1	typeref:typename:DynamicBuffer_v1
buffers_	asio/include/asio/impl/read_until.hpp	/^    DynamicBuffer_v2 buffers_;$/;"	m	class:asio::detail::read_until_delim_op_v2	typeref:typename:DynamicBuffer_v2
buffers_	asio/include/asio/impl/read_until.hpp	/^    DynamicBuffer_v2 buffers_;$/;"	m	class:asio::detail::read_until_delim_string_op_v2	typeref:typename:DynamicBuffer_v2
buffers_	asio/include/asio/impl/read_until.hpp	/^    DynamicBuffer_v2 buffers_;$/;"	m	class:asio::detail::read_until_expr_op_v2	typeref:typename:DynamicBuffer_v2
buffers_	asio/include/asio/impl/read_until.hpp	/^    DynamicBuffer_v2 buffers_;$/;"	m	class:asio::detail::read_until_match_op_v2	typeref:typename:DynamicBuffer_v2
buffers_	asio/include/asio/impl/write.hpp	/^    DynamicBuffer_v1 buffers_;$/;"	m	class:asio::detail::write_dynbuf_v1_op	typeref:typename:DynamicBuffer_v1
buffers_	asio/include/asio/impl/write.hpp	/^    DynamicBuffer_v2 buffers_;$/;"	m	class:asio::detail::write_dynbuf_v2_op	typeref:typename:DynamicBuffer_v2
buffers_	asio/include/asio/impl/write.hpp	/^    buffers_type buffers_;$/;"	m	class:asio::detail::write_op	typeref:typename:buffers_type
buffers_	asio/include/asio/impl/write_at.hpp	/^    buffers_type buffers_;$/;"	m	class:asio::detail::write_at_op	typeref:typename:buffers_type
buffers_	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^  ConstBufferSequence buffers_;$/;"	m	class:asio::ssl::detail::buffered_handshake_op	typeref:typename:ConstBufferSequence
buffers_	asio/include/asio/ssl/detail/read_op.hpp	/^  MutableBufferSequence buffers_;$/;"	m	class:asio::ssl::detail::read_op	typeref:typename:MutableBufferSequence
buffers_	asio/include/asio/ssl/detail/write_op.hpp	/^  ConstBufferSequence buffers_;$/;"	m	class:asio::ssl::detail::write_op	typeref:typename:ConstBufferSequence
buffers_begin	asio/include/asio/buffers_iterator.hpp	/^inline buffers_iterator<BufferSequence> buffers_begin($/;"	f	namespace:asio	typeref:typename:buffers_iterator<BufferSequence>
buffers_end	asio/include/asio/buffers_iterator.hpp	/^inline buffers_iterator<BufferSequence> buffers_end($/;"	f	namespace:asio	typeref:typename:buffers_iterator<BufferSequence>
buffers_iterator	asio/include/asio/buffers_iterator.hpp	/^  buffers_iterator()$/;"	f	class:asio::buffers_iterator
buffers_iterator	asio/include/asio/buffers_iterator.hpp	/^class buffers_iterator$/;"	c	namespace:asio
buffers_iterator_compile	asio/src/tests/unit/buffers_iterator.cpp	/^namespace buffers_iterator_compile {$/;"	n	file:
buffers_iterator_types	asio/include/asio/buffers_iterator.hpp	/^  struct buffers_iterator_types$/;"	s	namespace:asio::detail
buffers_iterator_types	asio/include/asio/buffers_iterator.hpp	/^  struct buffers_iterator_types<const_buffer, ByteType>$/;"	s	namespace:asio::detail
buffers_iterator_types	asio/include/asio/buffers_iterator.hpp	/^  struct buffers_iterator_types<const_buffers_1, ByteType>$/;"	s	namespace:asio::detail
buffers_iterator_types	asio/include/asio/buffers_iterator.hpp	/^  struct buffers_iterator_types<mutable_buffer, ByteType>$/;"	s	namespace:asio::detail
buffers_iterator_types	asio/include/asio/buffers_iterator.hpp	/^  struct buffers_iterator_types<mutable_buffers_1, ByteType>$/;"	s	namespace:asio::detail
buffers_iterator_types_helper	asio/include/asio/buffers_iterator.hpp	/^  struct buffers_iterator_types_helper<false>$/;"	s	namespace:asio::detail
buffers_iterator_types_helper	asio/include/asio/buffers_iterator.hpp	/^  struct buffers_iterator_types_helper<true>$/;"	s	namespace:asio::detail
buffers_reference_counted_SOURCES	asio/src/examples/cpp03/Makefile.am	/^buffers_reference_counted_SOURCES = buffers\/reference_counted.cpp$/;"	m
buffers_reference_counted_SOURCES	asio/src/examples/cpp11/Makefile.am	/^buffers_reference_counted_SOURCES = buffers\/reference_counted.cpp$/;"	m
buffers_type	asio/include/asio/impl/read.hpp	/^        MutableBufferSequence, MutableBufferIterator> buffers_type;$/;"	t	class:asio::detail::read_op	typeref:typename:asio::detail::consuming_buffers<mutable_buffer,MutableBufferSequence,MutableBufferIterator>
buffers_type	asio/include/asio/impl/read_at.hpp	/^        MutableBufferSequence, MutableBufferIterator> buffers_type;$/;"	t	class:asio::detail::read_at_op	typeref:typename:asio::detail::consuming_buffers<mutable_buffer,MutableBufferSequence,MutableBufferIterator>
buffers_type	asio/include/asio/impl/read_until.hpp	/^              buffers_type;$/;"	t	function:asio::detail::read_until_delim_op_v1::operator ()	typeref:typename:DynamicBuffer_v1::const_buffers_type
buffers_type	asio/include/asio/impl/read_until.hpp	/^              buffers_type;$/;"	t	function:asio::detail::read_until_delim_op_v2::operator ()	typeref:typename:DynamicBuffer_v2::const_buffers_type
buffers_type	asio/include/asio/impl/read_until.hpp	/^              buffers_type;$/;"	t	function:asio::detail::read_until_delim_string_op_v1::operator ()	typeref:typename:DynamicBuffer_v1::const_buffers_type
buffers_type	asio/include/asio/impl/read_until.hpp	/^              buffers_type;$/;"	t	function:asio::detail::read_until_delim_string_op_v2::operator ()	typeref:typename:DynamicBuffer_v2::const_buffers_type
buffers_type	asio/include/asio/impl/read_until.hpp	/^              buffers_type;$/;"	t	function:asio::detail::read_until_expr_op_v1::operator ()	typeref:typename:DynamicBuffer_v1::const_buffers_type
buffers_type	asio/include/asio/impl/read_until.hpp	/^              buffers_type;$/;"	t	function:asio::detail::read_until_expr_op_v2::operator ()	typeref:typename:DynamicBuffer_v2::const_buffers_type
buffers_type	asio/include/asio/impl/read_until.hpp	/^              buffers_type;$/;"	t	function:asio::detail::read_until_match_op_v1::operator ()	typeref:typename:DynamicBuffer_v1::const_buffers_type
buffers_type	asio/include/asio/impl/read_until.hpp	/^              buffers_type;$/;"	t	function:asio::detail::read_until_match_op_v2::operator ()	typeref:typename:DynamicBuffer_v2::const_buffers_type
buffers_type	asio/include/asio/impl/read_until.hpp	/^    typedef typename DynamicBuffer_v1::const_buffers_type buffers_type;$/;"	t	function:asio::read_until	typeref:typename:DynamicBuffer_v1::const_buffers_type
buffers_type	asio/include/asio/impl/read_until.hpp	/^    typedef typename DynamicBuffer_v2::const_buffers_type buffers_type;$/;"	t	function:asio::read_until	typeref:typename:DynamicBuffer_v2::const_buffers_type
buffers_type	asio/include/asio/impl/write.hpp	/^        ConstBufferSequence, ConstBufferIterator> buffers_type;$/;"	t	class:asio::detail::write_op	typeref:typename:asio::detail::consuming_buffers<const_buffer,ConstBufferSequence,ConstBufferIterator>
buffers_type	asio/include/asio/impl/write_at.hpp	/^        ConstBufferSequence, ConstBufferIterator> buffers_type;$/;"	t	class:asio::detail::write_at_op	typeref:typename:asio::detail::consuming_buffers<const_buffer,ConstBufferSequence,ConstBufferIterator>
build_asio_doc	asio/release.pl	/^sub build_asio_doc$/;"	s
build_boost_asio_doc	asio/release.pl	/^sub build_boost_asio_doc$/;"	s
build_example_diffs	asio/release.pl	/^sub build_example_diffs$/;"	s
buy_price	asio/src/examples/cpp03/serialization/stock.hpp	/^  double buy_price;$/;"	m	struct:s11n_example::stock	typeref:typename:double
buy_quantity	asio/src/examples/cpp03/serialization/stock.hpp	/^  int buy_quantity;$/;"	m	struct:s11n_example::stock	typeref:typename:int
byte_type	asio/include/asio/buffers_iterator.hpp	/^    struct byte_type$/;"	s	struct:asio::detail::buffers_iterator_types_helper
byte_type	asio/include/asio/buffers_iterator.hpp	/^    typedef ByteType byte_type;$/;"	t	struct:asio::detail::buffers_iterator_types	typeref:typename:ByteType
byte_type	asio/include/asio/buffers_iterator.hpp	/^    typedef typename add_const<ByteType>::type byte_type;$/;"	t	struct:asio::detail::buffers_iterator_types	typeref:typename:add_const<ByteType>::type
byte_type	asio/include/asio/buffers_iterator.hpp	/^    typedef typename helper::template byte_type<ByteType>::type byte_type;$/;"	t	struct:asio::detail::buffers_iterator_types	typeref:typename:helper::template byte_type<ByteType>::type
byte_type	asio/include/asio/detail/buffered_stream_storage.hpp	/^  typedef unsigned char byte_type;$/;"	t	class:asio::detail::buffered_stream_storage	typeref:typename:unsigned char
bytes	asio/include/asio/detail/winrt_utils.hpp	/^  byte* bytes = nullptr;$/;"	v	namespace:asio::detail::winrt_utils	typeref:typename:byte *
bytes_available_	asio/include/asio/impl/read.hpp	/^    std::size_t bytes_available_;$/;"	m	class:asio::detail::read_dynbuf_v2_op	typeref:typename:std::size_t
bytes_read_	asio/src/tests/performance/client.cpp	/^  size_t bytes_read_;$/;"	m	class:session	typeref:typename:size_t	file:
bytes_readable	asio/include/asio/detail/io_control.hpp	/^  bytes_readable()$/;"	f	class:asio::detail::io_control::bytes_readable
bytes_readable	asio/include/asio/detail/io_control.hpp	/^  bytes_readable(std::size_t value)$/;"	f	class:asio::detail::io_control::bytes_readable
bytes_readable	asio/include/asio/detail/io_control.hpp	/^class bytes_readable$/;"	c	namespace:asio::detail::io_control
bytes_readable	asio/include/asio/posix/descriptor_base.hpp	/^  typedef asio::detail::io_control::bytes_readable bytes_readable;$/;"	t	class:asio::posix::descriptor_base	typeref:typename:asio::detail::io_control::bytes_readable
bytes_readable	asio/include/asio/posix/descriptor_base.hpp	/^  typedef implementation_defined bytes_readable;$/;"	t	class:asio::posix::descriptor_base	typeref:typename:implementation_defined
bytes_readable	asio/include/asio/socket_base.hpp	/^  typedef asio::detail::io_control::bytes_readable bytes_readable;$/;"	t	class:asio::socket_base	typeref:typename:asio::detail::io_control::bytes_readable
bytes_readable	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined bytes_readable;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
bytes_to_read_	asio/include/asio/impl/read_until.hpp	/^    std::size_t bytes_to_read_;$/;"	m	class:asio::detail::read_until_delim_op_v2	typeref:typename:std::size_t
bytes_to_read_	asio/include/asio/impl/read_until.hpp	/^    std::size_t bytes_to_read_;$/;"	m	class:asio::detail::read_until_delim_string_op_v2	typeref:typename:std::size_t
bytes_to_read_	asio/include/asio/impl/read_until.hpp	/^    std::size_t bytes_to_read_;$/;"	m	class:asio::detail::read_until_expr_op_v2	typeref:typename:std::size_t
bytes_to_read_	asio/include/asio/impl/read_until.hpp	/^    std::size_t bytes_to_read_;$/;"	m	class:asio::detail::read_until_match_op_v2	typeref:typename:std::size_t
bytes_transferred	asio/include/asio/placeholders.hpp	/^unspecified bytes_transferred;$/;"	v	namespace:asio::placeholders	typeref:typename:unspecified
bytes_transferred_	asio/include/asio/detail/reactor_op.hpp	/^  std::size_t bytes_transferred_;$/;"	m	class:asio::detail::reactor_op	typeref:typename:std::size_t
bytes_transferred_	asio/include/asio/ssl/detail/io.hpp	/^  std::size_t bytes_transferred_;$/;"	m	class:asio::ssl::detail::io_op	typeref:typename:std::size_t
bytes_type	asio/include/asio/ip/address_v4.hpp	/^  typedef array<unsigned char, 4> bytes_type;$/;"	t	class:asio::ip::address_v4	typeref:typename:array<unsigned char,4>
bytes_type	asio/include/asio/ip/address_v4.hpp	/^  typedef asio::detail::array<unsigned char, 4> bytes_type;$/;"	t	class:asio::ip::address_v4	typeref:typename:asio::detail::array<unsigned char,4>
bytes_type	asio/include/asio/ip/address_v6.hpp	/^  typedef array<unsigned char, 16> bytes_type;$/;"	t	class:asio::ip::address_v6	typeref:typename:array<unsigned char,16>
bytes_written_	asio/src/tests/performance/client.cpp	/^  size_t bytes_written_;$/;"	m	class:session	typeref:typename:size_t	file:
c_	asio/src/tests/unit/read_until.cpp	/^  char c_;$/;"	m	class:match_char	typeref:typename:char	file:
ca_	asio/include/asio/impl/spawn.hpp	/^    typename basic_yield_context<Handler>::caller_type& ca_;$/;"	m	class:asio::detail::coro_async_result	typeref:typename:basic_yield_context<Handler>::caller_type &
ca_	asio/include/asio/impl/spawn.hpp	/^    typename basic_yield_context<Handler>::caller_type& ca_;$/;"	m	class:asio::detail::coro_handler	typeref:typename:basic_yield_context<Handler>::caller_type &
ca_	asio/include/asio/spawn.hpp	/^  caller_type& ca_;$/;"	m	class:asio::basic_yield_context	typeref:typename:caller_type &
calculate_hash_value	asio/include/asio/detail/hash_map.hpp	/^inline std::size_t calculate_hash_value(SOCKET s)$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
calculate_hash_value	asio/include/asio/detail/hash_map.hpp	/^inline std::size_t calculate_hash_value(int i)$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
calculate_hash_value	asio/include/asio/detail/hash_map.hpp	/^inline std::size_t calculate_hash_value(void* p)$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
call	asio/include/asio/ssl/detail/password_callback.hpp	/^  virtual std::string call(std::size_t size,$/;"	f	class:asio::ssl::detail::password_callback	typeref:typename:std::string
call	asio/include/asio/ssl/detail/verify_callback.hpp	/^  virtual bool call(bool preverified, verify_context& ctx)$/;"	f	class:asio::ssl::detail::verify_callback	typeref:typename:bool
call_connect_condition	asio/include/asio/impl/connect.hpp	/^  inline Iterator call_connect_condition(ConnectCondition& connect_condition,$/;"	f	namespace:asio::detail	typeref:typename:Iterator
call_handler	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^  void call_handler(Handler& handler,$/;"	f	class:asio::ssl::detail::buffered_handshake_op	typeref:typename:void
call_handler	asio/include/asio/ssl/detail/handshake_op.hpp	/^  void call_handler(Handler& handler,$/;"	f	class:asio::ssl::detail::handshake_op	typeref:typename:void
call_handler	asio/include/asio/ssl/detail/read_op.hpp	/^  void call_handler(Handler& handler,$/;"	f	class:asio::ssl::detail::read_op	typeref:typename:void
call_handler	asio/include/asio/ssl/detail/shutdown_op.hpp	/^  void call_handler(Handler& handler,$/;"	f	class:asio::ssl::detail::shutdown_op	typeref:typename:void
call_handler	asio/include/asio/ssl/detail/write_op.hpp	/^  void call_handler(Handler& handler,$/;"	f	class:asio::ssl::detail::write_op	typeref:typename:void
call_handler	asio/src/examples/cpp11/executors/actor.cpp	/^  void call_handler(Message msg, actor_address from)$/;"	f	class:actor	typeref:typename:void	file:
call_handler	asio/src/examples/cpp14/executors/actor.cpp	/^  void call_handler(Message msg, actor_address from)$/;"	f	class:actor	typeref:typename:void	file:
call_handler_	asio/include/asio/impl/spawn.hpp	/^    bool call_handler_;$/;"	m	struct:asio::detail::spawn_data	typeref:typename:bool
call_stack	asio/include/asio/detail/call_stack.hpp	/^class call_stack$/;"	c	namespace:asio::detail
call_stack	asio/include/asio/detail/recycling_allocator.hpp	/^    typedef thread_context::thread_call_stack call_stack;$/;"	t	function:asio::detail::recycling_allocator::allocate	typeref:typename:thread_context::thread_call_stack
call_stack	asio/include/asio/detail/recycling_allocator.hpp	/^    typedef thread_context::thread_call_stack call_stack;$/;"	t	function:asio::detail::recycling_allocator::deallocate	typeref:typename:thread_context::thread_call_stack
callback_	asio/include/asio/ssl/detail/password_callback.hpp	/^  PasswordCallback callback_;$/;"	m	class:asio::ssl::detail::password_callback	typeref:typename:PasswordCallback
callback_	asio/include/asio/ssl/detail/verify_callback.hpp	/^  VerifyCallback callback_;$/;"	m	class:asio::ssl::detail::verify_callback	typeref:typename:VerifyCallback
callee_type	asio/include/asio/impl/spawn.hpp	/^      typedef typename basic_yield_context<Handler>::callee_type callee_type;$/;"	t	function:asio::detail::spawn_helper::operator ()	typeref:typename:basic_yield_context<Handler>::callee_type
callee_type	asio/include/asio/spawn.hpp	/^  typedef implementation_defined callee_type;$/;"	t	class:asio::basic_yield_context	typeref:typename:implementation_defined
caller_	asio/include/asio/impl/awaitable.hpp	/^  awaitable_frame_base<Executor>* caller_ = nullptr;$/;"	m	class:asio::detail::awaitable_frame_base	typeref:typename:awaitable_frame_base<Executor> *
caller_	asio/src/examples/cpp11/executors/actor.cpp	/^  actor_address caller_;$/;"	m	class:member	typeref:typename:actor_address	file:
caller_	asio/src/examples/cpp14/executors/actor.cpp	/^  actor_address caller_;$/;"	m	class:member	typeref:typename:actor_address	file:
caller_type	asio/include/asio/spawn.hpp	/^  typedef boost::coroutines::coroutine<void()>::caller_type caller_type;$/;"	t	class:asio::basic_yield_context
caller_type	asio/include/asio/spawn.hpp	/^  typedef boost::coroutines::pull_coroutine<void> caller_type;$/;"	t	class:asio::basic_yield_context	typeref:typename:boost::coroutines::pull_coroutine<void>
caller_type	asio/include/asio/spawn.hpp	/^  typedef implementation_defined caller_type;$/;"	t	class:asio::basic_yield_context	typeref:typename:implementation_defined
can_dispatch	asio/include/asio/detail/scheduler.hpp	/^  bool can_dispatch()$/;"	f	class:asio::detail::scheduler	typeref:typename:bool
can_dispatch	asio/include/asio/detail/win_iocp_io_context.hpp	/^  bool can_dispatch()$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:bool
cancel	asio/include/asio/basic_deadline_timer.hpp	/^  std::size_t cancel()$/;"	f	class:asio::basic_deadline_timer	typeref:typename:std::size_t
cancel	asio/include/asio/basic_deadline_timer.hpp	/^  std::size_t cancel(asio::error_code& ec)$/;"	f	class:asio::basic_deadline_timer	typeref:typename:std::size_t
cancel	asio/include/asio/basic_serial_port.hpp	/^  ASIO_SYNC_OP_VOID cancel(asio::error_code& ec)$/;"	f	class:asio::basic_serial_port	typeref:typename:ASIO_SYNC_OP_VOID
cancel	asio/include/asio/basic_serial_port.hpp	/^  void cancel()$/;"	f	class:asio::basic_serial_port	typeref:typename:void
cancel	asio/include/asio/basic_signal_set.hpp	/^  ASIO_SYNC_OP_VOID cancel(asio::error_code& ec)$/;"	f	class:asio::basic_signal_set	typeref:typename:ASIO_SYNC_OP_VOID
cancel	asio/include/asio/basic_signal_set.hpp	/^  void cancel()$/;"	f	class:asio::basic_signal_set	typeref:typename:void
cancel	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID cancel(asio::error_code& ec)$/;"	f	class:asio::basic_socket	typeref:typename:(deprecated ("By default, this function always fails with ""operation_not_supported when used on Windows XP, Windows Server 2003, ""or earlier. Consult documentation for details."))ASIO_SYNC_OP_VOID
cancel	asio/include/asio/basic_socket.hpp	/^  void cancel()$/;"	f	class:asio::basic_socket	typeref:typename:(deprecated ("By default, this function always fails with ""operation_not_supported when used on Windows XP, Windows Server 2003, ""or earlier. Consult documentation for details."))void
cancel	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID cancel(asio::error_code& ec)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
cancel	asio/include/asio/basic_socket_acceptor.hpp	/^  void cancel()$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
cancel	asio/include/asio/basic_waitable_timer.hpp	/^  std::size_t cancel()$/;"	f	class:asio::basic_waitable_timer	typeref:typename:std::size_t
cancel	asio/include/asio/basic_waitable_timer.hpp	/^  std::size_t cancel(asio::error_code& ec)$/;"	f	class:asio::basic_waitable_timer	typeref:typename:std::size_t
cancel	asio/include/asio/detail/deadline_timer_service.hpp	/^  std::size_t cancel(implementation_type& impl, asio::error_code& ec)$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:std::size_t
cancel	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code cancel(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
cancel	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  asio::error_code cancel(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:asio::error_code
cancel	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  asio::error_code cancel(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:asio::error_code
cancel	asio/include/asio/detail/winrt_resolver_service.hpp	/^  void cancel(implementation_type&)$/;"	f	class:asio::detail::winrt_resolver_service	typeref:typename:void
cancel	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  asio::error_code cancel(base_implementation_type&,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:asio::error_code
cancel	asio/include/asio/ip/basic_resolver.hpp	/^  void cancel()$/;"	f	class:asio::ip::basic_resolver	typeref:typename:void
cancel	asio/include/asio/posix/basic_descriptor.hpp	/^  ASIO_SYNC_OP_VOID cancel(asio::error_code& ec)$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:ASIO_SYNC_OP_VOID
cancel	asio/include/asio/posix/basic_descriptor.hpp	/^  void cancel()$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:void
cancel	asio/include/asio/windows/basic_object_handle.hpp	/^  ASIO_SYNC_OP_VOID cancel(asio::error_code& ec)$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:ASIO_SYNC_OP_VOID
cancel	asio/include/asio/windows/basic_object_handle.hpp	/^  void cancel()$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:void
cancel	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  ASIO_SYNC_OP_VOID cancel(asio::error_code& ec)$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:ASIO_SYNC_OP_VOID
cancel	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  void cancel()$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:void
cancel_one	asio/include/asio/basic_deadline_timer.hpp	/^  std::size_t cancel_one()$/;"	f	class:asio::basic_deadline_timer	typeref:typename:std::size_t
cancel_one	asio/include/asio/basic_deadline_timer.hpp	/^  std::size_t cancel_one(asio::error_code& ec)$/;"	f	class:asio::basic_deadline_timer	typeref:typename:std::size_t
cancel_one	asio/include/asio/basic_waitable_timer.hpp	/^  std::size_t cancel_one()$/;"	f	class:asio::basic_waitable_timer	typeref:typename:std::size_t
cancel_one	asio/include/asio/basic_waitable_timer.hpp	/^  std::size_t cancel_one(asio::error_code& ec)$/;"	f	class:asio::basic_waitable_timer	typeref:typename:std::size_t
cancel_one	asio/include/asio/detail/deadline_timer_service.hpp	/^  std::size_t cancel_one(implementation_type& impl,$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:std::size_t
cancel_one_timer	asio/src/tests/unit/deadline_timer.cpp	/^void cancel_one_timer(asio::deadline_timer* t)$/;"	f	typeref:typename:void
cancel_one_timer	asio/src/tests/unit/system_timer.cpp	/^void cancel_one_timer(asio::system_timer* t)$/;"	f	typeref:typename:void
cancel_operations	asio/include/asio/detail/reactor_op_queue.hpp	/^  bool cancel_operations(Descriptor descriptor, op_queue<operation>& ops,$/;"	f	class:asio::detail::reactor_op_queue	typeref:typename:bool
cancel_operations	asio/include/asio/detail/reactor_op_queue.hpp	/^  bool cancel_operations(iterator i, op_queue<operation>& ops,$/;"	f	class:asio::detail::reactor_op_queue	typeref:typename:bool
cancel_timer	asio/include/asio/detail/impl/dev_poll_reactor.hpp	/^std::size_t dev_poll_reactor::cancel_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::dev_poll_reactor	typeref:typename:std::size_t
cancel_timer	asio/include/asio/detail/impl/epoll_reactor.hpp	/^std::size_t epoll_reactor::cancel_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::epoll_reactor	typeref:typename:std::size_t
cancel_timer	asio/include/asio/detail/impl/kqueue_reactor.hpp	/^std::size_t kqueue_reactor::cancel_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::kqueue_reactor	typeref:typename:std::size_t
cancel_timer	asio/include/asio/detail/impl/select_reactor.hpp	/^std::size_t select_reactor::cancel_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::select_reactor	typeref:typename:std::size_t
cancel_timer	asio/include/asio/detail/impl/win_iocp_io_context.hpp	/^std::size_t win_iocp_io_context::cancel_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:std::size_t
cancel_timer	asio/include/asio/detail/impl/winrt_timer_scheduler.hpp	/^std::size_t winrt_timer_scheduler::cancel_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::winrt_timer_scheduler	typeref:typename:std::size_t
cancel_timer	asio/include/asio/detail/timer_queue.hpp	/^  std::size_t cancel_timer(per_timer_data& timer, op_queue<operation>& ops,$/;"	f	class:asio::detail::timer_queue	typeref:typename:std::size_t
cancel_timer	asio/src/tests/unit/deadline_timer.cpp	/^void cancel_timer(asio::deadline_timer* t)$/;"	f	typeref:typename:void
cancel_timer	asio/src/tests/unit/system_timer.cpp	/^void cancel_timer(asio::system_timer* t)$/;"	f	typeref:typename:void
cancel_token_	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  socket_ops::weak_cancel_token_type cancel_token_;$/;"	m	class:asio::detail::resolve_endpoint_op	typeref:typename:socket_ops::weak_cancel_token_type
cancel_token_	asio/include/asio/detail/resolve_query_op.hpp	/^  socket_ops::weak_cancel_token_type cancel_token_;$/;"	m	class:asio::detail::resolve_query_op	typeref:typename:socket_ops::weak_cancel_token_type
cancel_token_	asio/include/asio/detail/win_iocp_null_buffers_op.hpp	/^  socket_ops::weak_cancel_token_type cancel_token_;$/;"	m	class:asio::detail::win_iocp_null_buffers_op	typeref:typename:socket_ops::weak_cancel_token_type
cancel_token_	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^  socket_ops::weak_cancel_token_type cancel_token_;$/;"	m	class:asio::detail::win_iocp_socket_recv_op	typeref:typename:socket_ops::weak_cancel_token_type
cancel_token_	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^  socket_ops::weak_cancel_token_type cancel_token_;$/;"	m	class:asio::detail::win_iocp_socket_recvfrom_op	typeref:typename:socket_ops::weak_cancel_token_type
cancel_token_	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^  socket_ops::weak_cancel_token_type cancel_token_;$/;"	m	class:asio::detail::win_iocp_socket_recvmsg_op	typeref:typename:socket_ops::weak_cancel_token_type
cancel_token_	asio/include/asio/detail/win_iocp_socket_send_op.hpp	/^  socket_ops::weak_cancel_token_type cancel_token_;$/;"	m	class:asio::detail::win_iocp_socket_send_op	typeref:typename:socket_ops::weak_cancel_token_type
cancel_token_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    socket_ops::shared_cancel_token_type cancel_token_;$/;"	m	struct:asio::detail::win_iocp_socket_service_base::base_implementation_type	typeref:typename:socket_ops::shared_cancel_token_type
cancel_token_	asio/include/asio/detail/win_iocp_wait_op.hpp	/^  socket_ops::weak_cancel_token_type cancel_token_;$/;"	m	class:asio::detail::win_iocp_wait_op	typeref:typename:socket_ops::weak_cancel_token_type
canonical	asio/include/asio/ip/network_v4.hpp	/^  network_v4 canonical() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4	typeref:typename:network_v4
canonical	asio/include/asio/ip/network_v6.hpp	/^  network_v6 canonical() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v6	typeref:typename:network_v6
canonical_name	asio/include/asio/ip/resolver_base.hpp	/^  static const flags canonical_name = implementation_defined;$/;"	m	class:asio::ip::resolver_base	typeref:typename:const flags
capacity	asio/include/asio/basic_streambuf.hpp	/^  std::size_t capacity() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_streambuf	typeref:typename:std::size_t
capacity	asio/include/asio/basic_streambuf.hpp	/^  std::size_t capacity() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_streambuf_ref	typeref:typename:std::size_t
capacity	asio/include/asio/buffer.hpp	/^  std::size_t capacity() const ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:std::size_t
capacity	asio/include/asio/buffer.hpp	/^  std::size_t capacity() const ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:std::size_t
capacity	asio/include/asio/detail/buffered_stream_storage.hpp	/^  size_type capacity() const$/;"	f	class:asio::detail::buffered_stream_storage	typeref:typename:size_type
capacity	asio/include/asio/generic/basic_endpoint.hpp	/^  std::size_t capacity() const$/;"	f	class:asio::generic::basic_endpoint	typeref:typename:std::size_t
capacity	asio/include/asio/generic/detail/endpoint.hpp	/^  std::size_t capacity() const$/;"	f	class:asio::generic::detail::endpoint	typeref:typename:std::size_t
capacity	asio/include/asio/ip/basic_endpoint.hpp	/^  std::size_t capacity() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:std::size_t
capacity	asio/include/asio/ip/detail/endpoint.hpp	/^  std::size_t capacity() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::detail::endpoint	typeref:typename:std::size_t
capacity	asio/include/asio/local/basic_endpoint.hpp	/^  std::size_t capacity() const$/;"	f	class:asio::local::basic_endpoint	typeref:typename:std::size_t
capacity	asio/include/asio/local/detail/endpoint.hpp	/^  std::size_t capacity() const$/;"	f	class:asio::local::detail::endpoint	typeref:typename:std::size_t
capacity_	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  u_int capacity_;$/;"	m	class:asio::detail::win_fd_set_adapter	typeref:typename:u_int
category	asio/include/asio/error_code.hpp	/^  const error_category& category() const$/;"	f	class:asio::error_code	typeref:typename:const error_category &
category_	asio/include/asio/error_code.hpp	/^  const error_category* category_;$/;"	m	class:asio::error_code	typeref:typename:const error_category *
cbegin	asio/include/asio/ip/basic_resolver_results.hpp	/^  const_iterator cbegin() const$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:const_iterator
cend	asio/include/asio/ip/basic_resolver_results.hpp	/^  const_iterator cend() const$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:const_iterator
change	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  static const control_request change($/;"	f	class:control_request	typeref:typename:const control_request
channel	asio/src/examples/cpp03/timeouts/server.cpp	/^class channel$/;"	c	file:
channel	asio/src/examples/cpp11/timeouts/server.cpp	/^class channel$/;"	c	file:
channel_	asio/src/examples/cpp03/timeouts/server.cpp	/^  channel channel_;$/;"	m	class:server	typeref:typename:channel	file:
channel_	asio/src/examples/cpp03/timeouts/server.cpp	/^  channel& channel_;$/;"	m	class:tcp_session	typeref:typename:channel &	file:
channel_	asio/src/examples/cpp11/timeouts/server.cpp	/^  channel channel_;$/;"	m	class:server	typeref:typename:channel	file:
channel_	asio/src/examples/cpp11/timeouts/server.cpp	/^  channel& channel_;$/;"	m	class:tcp_session	typeref:typename:channel &	file:
chapter	asio/src/doc/asioref.xsl	/^<xsl:template match="chapter">$/;"	m
chapterinfo	asio/src/doc/asioref.xsl	/^<xsl:template match="chapterinfo">$/;"	m
character_size	asio/include/asio/serial_port_base.hpp	/^  class character_size$/;"	c	class:asio::serial_port_base
chat_chat_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^chat_chat_client_SOURCES = chat\/chat_client.cpp$/;"	m
chat_chat_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^chat_chat_client_SOURCES = chat\/chat_client.cpp$/;"	m
chat_chat_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^chat_chat_server_SOURCES = chat\/chat_server.cpp$/;"	m
chat_chat_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^chat_chat_server_SOURCES = chat\/chat_server.cpp$/;"	m
chat_client	asio/src/examples/cpp03/chat/chat_client.cpp	/^  chat_client(asio::io_context& io_context,$/;"	f	class:chat_client	file:
chat_client	asio/src/examples/cpp03/chat/chat_client.cpp	/^class chat_client$/;"	c	file:
chat_client	asio/src/examples/cpp11/chat/chat_client.cpp	/^  chat_client(asio::io_context& io_context,$/;"	f	class:chat_client	file:
chat_client	asio/src/examples/cpp11/chat/chat_client.cpp	/^class chat_client$/;"	c	file:
chat_message	asio/src/examples/cpp03/chat/chat_message.hpp	/^  chat_message()$/;"	f	class:chat_message
chat_message	asio/src/examples/cpp03/chat/chat_message.hpp	/^class chat_message$/;"	c
chat_message	asio/src/examples/cpp11/chat/chat_message.hpp	/^  chat_message()$/;"	f	class:chat_message
chat_message	asio/src/examples/cpp11/chat/chat_message.hpp	/^class chat_message$/;"	c
chat_message_queue	asio/src/examples/cpp03/chat/chat_client.cpp	/^typedef std::deque<chat_message> chat_message_queue;$/;"	t	typeref:typename:std::deque<chat_message>	file:
chat_message_queue	asio/src/examples/cpp03/chat/chat_server.cpp	/^typedef std::deque<chat_message> chat_message_queue;$/;"	t	typeref:typename:std::deque<chat_message>	file:
chat_message_queue	asio/src/examples/cpp11/chat/chat_client.cpp	/^typedef std::deque<chat_message> chat_message_queue;$/;"	t	typeref:typename:std::deque<chat_message>	file:
chat_message_queue	asio/src/examples/cpp11/chat/chat_server.cpp	/^typedef std::deque<chat_message> chat_message_queue;$/;"	t	typeref:typename:std::deque<chat_message>	file:
chat_participant	asio/src/examples/cpp03/chat/chat_server.cpp	/^class chat_participant$/;"	c	file:
chat_participant	asio/src/examples/cpp11/chat/chat_server.cpp	/^class chat_participant$/;"	c	file:
chat_participant	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^class chat_participant$/;"	c	file:
chat_participant_ptr	asio/src/examples/cpp03/chat/chat_server.cpp	/^typedef boost::shared_ptr<chat_participant> chat_participant_ptr;$/;"	t	typeref:typename:boost::shared_ptr<chat_participant>	file:
chat_participant_ptr	asio/src/examples/cpp11/chat/chat_server.cpp	/^typedef std::shared_ptr<chat_participant> chat_participant_ptr;$/;"	t	typeref:typename:std::shared_ptr<chat_participant>	file:
chat_participant_ptr	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^typedef std::shared_ptr<chat_participant> chat_participant_ptr;$/;"	t	typeref:typename:std::shared_ptr<chat_participant>	file:
chat_posix_chat_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^chat_posix_chat_client_SOURCES = chat\/posix_chat_client.cpp$/;"	m
chat_room	asio/src/examples/cpp03/chat/chat_server.cpp	/^class chat_room$/;"	c	file:
chat_room	asio/src/examples/cpp11/chat/chat_server.cpp	/^class chat_room$/;"	c	file:
chat_room	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^class chat_room$/;"	c	file:
chat_server	asio/src/examples/cpp03/chat/chat_server.cpp	/^  chat_server(asio::io_context& io_context,$/;"	f	class:chat_server	file:
chat_server	asio/src/examples/cpp03/chat/chat_server.cpp	/^class chat_server$/;"	c	file:
chat_server	asio/src/examples/cpp11/chat/chat_server.cpp	/^  chat_server(asio::io_context& io_context,$/;"	f	class:chat_server	file:
chat_server	asio/src/examples/cpp11/chat/chat_server.cpp	/^class chat_server$/;"	c	file:
chat_server_list	asio/src/examples/cpp03/chat/chat_server.cpp	/^typedef std::list<chat_server_ptr> chat_server_list;$/;"	t	typeref:typename:std::list<chat_server_ptr>	file:
chat_server_ptr	asio/src/examples/cpp03/chat/chat_server.cpp	/^typedef boost::shared_ptr<chat_server> chat_server_ptr;$/;"	t	typeref:typename:boost::shared_ptr<chat_server>	file:
chat_session	asio/src/examples/cpp03/chat/chat_server.cpp	/^  chat_session(asio::io_context& io_context, chat_room& room)$/;"	f	class:chat_session	file:
chat_session	asio/src/examples/cpp03/chat/chat_server.cpp	/^class chat_session$/;"	c	file:
chat_session	asio/src/examples/cpp11/chat/chat_server.cpp	/^  chat_session(tcp::socket socket, chat_room& room)$/;"	f	class:chat_session	file:
chat_session	asio/src/examples/cpp11/chat/chat_server.cpp	/^class chat_session$/;"	c	file:
chat_session	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  chat_session(tcp::socket socket, chat_room& room)$/;"	f	class:chat_session	file:
chat_session	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^class chat_session$/;"	c	file:
chat_session_ptr	asio/src/examples/cpp03/chat/chat_server.cpp	/^typedef boost::shared_ptr<chat_session> chat_session_ptr;$/;"	t	typeref:typename:boost::shared_ptr<chat_session>	file:
check_PROGRAMS	asio/src/tests/Makefile.am	/^check_PROGRAMS = \\$/;"	m
check_buffers	asio/src/tests/unit/read.cpp	/^  bool check_buffers(Iterator begin, Iterator end, size_t length)$/;"	f	class:test_stream	typeref:typename:bool	file:
check_buffers	asio/src/tests/unit/read.cpp	/^  bool check_buffers(const Const_Buffers& buffers, size_t length)$/;"	f	class:test_stream	typeref:typename:bool	file:
check_buffers	asio/src/tests/unit/read_at.cpp	/^  bool check_buffers(asio::uint64_t offset,$/;"	f	class:test_random_access_device	typeref:typename:bool	file:
check_buffers	asio/src/tests/unit/write.cpp	/^  bool check_buffers(Iterator begin, Iterator end, size_t length)$/;"	f	class:test_stream	typeref:typename:bool	file:
check_buffers	asio/src/tests/unit/write.cpp	/^  bool check_buffers(const Const_Buffers& buffers, size_t length)$/;"	f	class:test_stream	typeref:typename:bool	file:
check_buffers	asio/src/tests/unit/write_at.cpp	/^  bool check_buffers(asio::uint64_t offset,$/;"	f	class:test_random_access_device	typeref:typename:bool	file:
check_condition	asio/include/asio/impl/connect.hpp	/^    void check_condition(const asio::error_code& ec,$/;"	f	class:asio::detail::base_from_connect_condition	typeref:typename:void
check_condition	asio/include/asio/impl/connect.hpp	/^    void check_condition(const asio::error_code&, Iterator&, Iterator&)$/;"	f	class:asio::detail::base_from_connect_condition	typeref:typename:void
check_deadline	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  void check_deadline()$/;"	f	class:client	typeref:typename:void	file:
check_deadline	asio/src/examples/cpp03/timeouts/server.cpp	/^  void check_deadline(steady_timer* deadline)$/;"	f	class:tcp_session	typeref:typename:void	file:
check_deadline	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  void check_deadline()$/;"	f	class:client	typeref:typename:void	file:
check_deadline	asio/src/examples/cpp11/timeouts/server.cpp	/^  void check_deadline(steady_timer& deadline)$/;"	f	class:tcp_session	typeref:typename:void	file:
check_for_completion	asio/include/asio/detail/base_from_completion_cond.hpp	/^  static std::size_t check_for_completion($/;"	f	class:asio::detail::base_from_completion_cond	typeref:typename:std::size_t
check_for_completion	asio/include/asio/detail/base_from_completion_cond.hpp	/^  std::size_t check_for_completion($/;"	f	class:asio::detail::base_from_completion_cond	typeref:typename:std::size_t
checksum	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  unsigned short checksum() const { return decode(2, 3); }$/;"	f	class:icmp_header	typeref:typename:unsigned short
checksum	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  void checksum(unsigned short n) { encode(2, 3, n); }$/;"	f	class:icmp_header	typeref:typename:void
chrono	asio/include/asio/detail/chrono.hpp	/^namespace chrono {$/;"	n	namespace:asio
chrono_time_traits	asio/include/asio/detail/chrono_time_traits.hpp	/^struct chrono_time_traits$/;"	s	namespace:asio::detail
chunk_size	asio/include/asio/detail/thread_info_base.hpp	/^  enum { chunk_size = 4 };$/;"	e	enum:asio::detail::thread_info_base::__anon6e8580630403
class	asio/src/doc/reference.xsl	/^<xsl:template name="class">$/;"	n
class-file	asio/src/doc/reference.xsl	/^  <xsl:param name="class-file"\/>$/;"	p	matchedTemplate:memberdef
class-file	asio/src/doc/reference.xsl	/^  <xsl:variable name="class-file" select="location\/@file"\/>$/;"	v	namedTemplate:class
class-file	asio/src/doc/reference.xsl	/^<xsl:param name="class-file"\/>$/;"	p	namedTemplate:class-members
class-id	asio/src/doc/reference.xsl	/^  <xsl:param name="class-id"\/>$/;"	p	matchedTemplate:memberdef
class-id	asio/src/doc/reference.xsl	/^  <xsl:variable name="class-id">$/;"	v	namedTemplate:class
class-id	asio/src/doc/reference.xsl	/^<xsl:param name="class-id"\/>$/;"	p	namedTemplate:class-members
class-id	asio/src/doc/reference.xsl	/^<xsl:param name="class-id"\/>$/;"	p	namedTemplate:class-tables
class-members	asio/src/doc/reference.xsl	/^<xsl:template name="class-members">$/;"	n
class-name	asio/src/doc/reference.xsl	/^  <xsl:param name="class-name"\/>$/;"	p	matchedTemplate:memberdef
class-name	asio/src/doc/reference.xsl	/^  <xsl:variable name="class-name">$/;"	v	namedTemplate:class
class-name	asio/src/doc/reference.xsl	/^<xsl:param name="class-name"\/>$/;"	p	namedTemplate:class-members
class-name	asio/src/doc/reference.xsl	/^<xsl:param name="class-name"\/>$/;"	p	namedTemplate:class-tables
class-name	asio/src/doc/reference.xsl	/^<xsl:param name="class-name"\/>$/;"	p	namedTemplate:typedef
class-refid	asio/src/doc/reference.xsl	/^  <xsl:variable name="class-refid">$/;"	v	namedTemplate:typedef
class-tables	asio/src/doc/reference.xsl	/^<xsl:template name="class-tables">$/;"	n
cleanup-type	asio/src/doc/reference.xsl	/^<xsl:template name="cleanup-type">$/;"	n
clear	asio/include/asio/basic_signal_set.hpp	/^  ASIO_SYNC_OP_VOID clear(asio::error_code& ec)$/;"	f	class:asio::basic_signal_set	typeref:typename:ASIO_SYNC_OP_VOID
clear	asio/include/asio/basic_signal_set.hpp	/^  void clear()$/;"	f	class:asio::basic_signal_set	typeref:typename:void
clear	asio/include/asio/detail/buffered_stream_storage.hpp	/^  void clear()$/;"	f	class:asio::detail::buffered_stream_storage	typeref:typename:void
clear	asio/include/asio/detail/conditionally_enabled_event.hpp	/^  void clear(conditionally_enabled_mutex::scoped_lock& lock)$/;"	f	class:asio::detail::conditionally_enabled_event	typeref:typename:void
clear	asio/include/asio/detail/hash_map.hpp	/^  void clear()$/;"	f	class:asio::detail::hash_map	typeref:typename:void
clear	asio/include/asio/detail/null_event.hpp	/^  void clear(Lock&)$/;"	f	class:asio::detail::null_event	typeref:typename:void
clear	asio/include/asio/detail/posix_event.hpp	/^  void clear(Lock& lock)$/;"	f	class:asio::detail::posix_event	typeref:typename:void
clear	asio/include/asio/detail/std_event.hpp	/^  void clear(Lock& lock)$/;"	f	class:asio::detail::std_event	typeref:typename:void
clear	asio/include/asio/detail/win_event.hpp	/^  void clear(Lock& lock)$/;"	f	class:asio::detail::win_event	typeref:typename:void
clear	asio/include/asio/error_code.hpp	/^  void clear()$/;"	f	class:asio::error_code	typeref:typename:void
client	asio/include/asio/ssl/stream_base.hpp	/^    client,$/;"	e	enum:asio::ssl::stream_base::handshake_type
client	asio/src/examples/cpp03/http/client/async_client.cpp	/^  client(asio::io_context& io_context,$/;"	f	class:client	file:
client	asio/src/examples/cpp03/http/client/async_client.cpp	/^class client$/;"	c	file:
client	asio/src/examples/cpp03/serialization/client.cpp	/^  client(asio::io_context& io_context,$/;"	f	class:s11n_example::client	file:
client	asio/src/examples/cpp03/serialization/client.cpp	/^class client$/;"	c	namespace:s11n_example	file:
client	asio/src/examples/cpp03/ssl/client.cpp	/^  client(asio::io_context& io_context,$/;"	f	class:client	file:
client	asio/src/examples/cpp03/ssl/client.cpp	/^class client$/;"	c	file:
client	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  client(asio::io_context& io_context)$/;"	f	class:client	file:
client	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^class client$/;"	c	file:
client	asio/src/examples/cpp03/timeouts/blocking_tcp_client.cpp	/^  client()$/;"	f	class:client	file:
client	asio/src/examples/cpp03/timeouts/blocking_tcp_client.cpp	/^class client$/;"	c	file:
client	asio/src/examples/cpp03/timeouts/blocking_udp_client.cpp	/^  client(const udp::endpoint& listen_endpoint)$/;"	f	class:client	file:
client	asio/src/examples/cpp03/timeouts/blocking_udp_client.cpp	/^class client$/;"	c	file:
client	asio/src/examples/cpp11/ssl/client.cpp	/^  client(asio::io_context& io_context,$/;"	f	class:client	file:
client	asio/src/examples/cpp11/ssl/client.cpp	/^class client$/;"	c	file:
client	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  client(asio::io_context& io_context)$/;"	f	class:client	file:
client	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^class client$/;"	c	file:
client	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^class client$/;"	c	file:
client	asio/src/examples/cpp11/timeouts/blocking_udp_client.cpp	/^  client(const udp::endpoint& listen_endpoint)$/;"	f	class:client	file:
client	asio/src/examples/cpp11/timeouts/blocking_udp_client.cpp	/^class client$/;"	c	file:
client	asio/src/tests/performance/client.cpp	/^  client(asio::io_context& ioc,$/;"	f	class:client	file:
client	asio/src/tests/performance/client.cpp	/^class client$/;"	c	file:
clock_type	asio/include/asio/basic_socket_iostream.hpp	/^  typedef Clock clock_type;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:Clock
clock_type	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef Clock clock_type;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:Clock
clock_type	asio/include/asio/basic_waitable_timer.hpp	/^  typedef Clock clock_type;$/;"	t	class:asio::basic_waitable_timer	typeref:typename:Clock
clock_type	asio/include/asio/detail/chrono_time_traits.hpp	/^  typedef Clock clock_type;$/;"	t	struct:asio::detail::chrono_time_traits	typeref:typename:Clock
clone	asio/include/asio/executor.hpp	/^  impl_base* clone() const ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:impl_base *
clone	asio/include/asio/impl/executor.hpp	/^  impl_base* clone() const ASIO_NOEXCEPT$/;"	f	class:asio::executor::impl	typeref:typename:impl_base *
close	asio/include/asio/basic_serial_port.hpp	/^  ASIO_SYNC_OP_VOID close(asio::error_code& ec)$/;"	f	class:asio::basic_serial_port	typeref:typename:ASIO_SYNC_OP_VOID
close	asio/include/asio/basic_serial_port.hpp	/^  void close()$/;"	f	class:asio::basic_serial_port	typeref:typename:void
close	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID close(asio::error_code& ec)$/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
close	asio/include/asio/basic_socket.hpp	/^  void close()$/;"	f	class:asio::basic_socket	typeref:typename:void
close	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID close(asio::error_code& ec)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
close	asio/include/asio/basic_socket_acceptor.hpp	/^  void close()$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
close	asio/include/asio/basic_socket_iostream.hpp	/^  void close()$/;"	f	class:asio::basic_socket_iostream	typeref:typename:void
close	asio/include/asio/buffered_read_stream.hpp	/^  ASIO_SYNC_OP_VOID close(asio::error_code& ec)$/;"	f	class:asio::buffered_read_stream	typeref:typename:ASIO_SYNC_OP_VOID
close	asio/include/asio/buffered_read_stream.hpp	/^  void close()$/;"	f	class:asio::buffered_read_stream	typeref:typename:void
close	asio/include/asio/buffered_stream.hpp	/^  ASIO_SYNC_OP_VOID close(asio::error_code& ec)$/;"	f	class:asio::buffered_stream	typeref:typename:ASIO_SYNC_OP_VOID
close	asio/include/asio/buffered_stream.hpp	/^  void close()$/;"	f	class:asio::buffered_stream	typeref:typename:void
close	asio/include/asio/buffered_write_stream.hpp	/^  ASIO_SYNC_OP_VOID close(asio::error_code& ec)$/;"	f	class:asio::buffered_write_stream	typeref:typename:ASIO_SYNC_OP_VOID
close	asio/include/asio/buffered_write_stream.hpp	/^  void close()$/;"	f	class:asio::buffered_write_stream	typeref:typename:void
close	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code close(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
close	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  asio::error_code close(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:asio::error_code
close	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  asio::error_code close(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:asio::error_code
close	asio/include/asio/posix/basic_descriptor.hpp	/^  ASIO_SYNC_OP_VOID close(asio::error_code& ec)$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:ASIO_SYNC_OP_VOID
close	asio/include/asio/posix/basic_descriptor.hpp	/^  void close()$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:void
close	asio/include/asio/windows/basic_object_handle.hpp	/^  ASIO_SYNC_OP_VOID close(asio::error_code& ec)$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:ASIO_SYNC_OP_VOID
close	asio/include/asio/windows/basic_object_handle.hpp	/^  void close()$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:void
close	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  ASIO_SYNC_OP_VOID close(asio::error_code& ec)$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:ASIO_SYNC_OP_VOID
close	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  void close()$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:void
close	asio/src/examples/cpp03/chat/chat_client.cpp	/^  void close()$/;"	f	class:chat_client	typeref:typename:void	file:
close	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  void close()$/;"	f	class:posix_chat_client	typeref:typename:void	file:
close	asio/src/examples/cpp11/chat/chat_client.cpp	/^  void close()$/;"	f	class:chat_client	typeref:typename:void	file:
close_after	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  close_after(asio::chrono::steady_clock::duration t, tcp_socket& s)$/;"	f	struct:close_after	file:
close_after	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^struct close_after$/;"	s	file:
close_after	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  close_after(std::chrono::steady_clock::duration t, tcp_socket& s)$/;"	f	struct:close_after	file:
close_after	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^struct close_after$/;"	s	file:
close_socket	asio/src/tests/performance/client.cpp	/^  void close_socket()$/;"	f	class:session	typeref:typename:void	file:
co_spawn_entry_point	asio/include/asio/impl/co_spawn.hpp	/^awaitable<void, Executor> co_spawn_entry_point($/;"	f	namespace:asio::detail	typeref:typename:awaitable<void,Executor>
code	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  unsigned char code() const { return rep_[1]; }$/;"	f	class:icmp_header	typeref:typename:unsigned char
code	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  void code(unsigned char n) { rep_[1] = n; }$/;"	f	class:icmp_header	typeref:typename:void
code	asio/src/examples/cpp03/serialization/stock.hpp	/^  std::string code;$/;"	m	struct:s11n_example::stock	typeref:typename:std::string
codeline	asio/src/doc/reference.xsl	/^<xsl:template match="codeline" mode="codeline">$/;"	m
codeline	asio/src/doc/tutorial.xsl	/^<xsl:template match="codeline">$/;"	m
command_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  unsigned char command_;$/;"	m	class:socks4::request	typeref:typename:unsigned char
command_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  unsigned char command_;$/;"	m	class:socks4::request	typeref:typename:unsigned char
command_type	asio/src/examples/cpp03/socks4/socks4.hpp	/^  enum command_type$/;"	g	class:socks4::request
command_type	asio/src/examples/cpp11/socks4/socks4.hpp	/^  enum command_type$/;"	g	class:socks4::request
commit	asio/include/asio/basic_streambuf.hpp	/^  void commit(std::size_t n)$/;"	f	class:asio::basic_streambuf	typeref:typename:void
commit	asio/include/asio/basic_streambuf.hpp	/^  void commit(std::size_t n)$/;"	f	class:asio::basic_streambuf_ref	typeref:typename:void
commit	asio/include/asio/buffer.hpp	/^  void commit(std::size_t n)$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:void
commit	asio/include/asio/buffer.hpp	/^  void commit(std::size_t n)$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:void
commit	asio/include/asio/detail/buffer_resize_guard.hpp	/^  void commit()$/;"	f	class:asio::detail::buffer_resize_guard	typeref:typename:void
compile_test	asio/src/tests/unit/unit_test.hpp	/^inline void compile_test(const char* name)$/;"	f	namespace:asio::detail	typeref:typename:void
complete	asio/include/asio/detail/executor_function.hpp	/^  void complete()$/;"	f	class:asio::detail::executor_function_base	typeref:typename:void
complete	asio/include/asio/detail/handler_work.hpp	/^  void complete(Function& function, Handler& handler)$/;"	f	class:asio::detail::handler_work	typeref:typename:void
complete	asio/include/asio/detail/scheduler_operation.hpp	/^  void complete(void* owner, const asio::error_code& ec,$/;"	f	class:asio::detail::ASIO_INHERIT_TRACKED_HANDLER	typeref:typename:void
complete	asio/include/asio/detail/win_iocp_operation.hpp	/^  void complete(void* owner, const asio::error_code& ec,$/;"	f	class:asio::detail::win_iocp_operation	typeref:typename:void
complete	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  void complete(const asio::error_code& ec,$/;"	f	class:asio::detail::win_iocp_overlapped_ptr	typeref:typename:void
complete	asio/include/asio/impl/compose.hpp	/^    void complete()$/;"	f	class:asio::detail::composed_op	typeref:typename:void
complete	asio/include/asio/impl/compose.hpp	/^    void complete(Args... args)$/;"	f	class:asio::detail::composed_op	typeref:typename:void
complete	asio/include/asio/windows/overlapped_ptr.hpp	/^  void complete(const asio::error_code& ec,$/;"	f	class:asio::windows::overlapped_ptr	typeref:typename:void
completed_ops_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  op_queue<win_iocp_operation> completed_ops_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:op_queue<win_iocp_operation>
completion	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^    explicit completion(const tracked_handler& h)$/;"	f	struct:custom_tracking::completion
completion	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^  struct completion$/;"	s	struct:custom_tracking
completion_condition_	asio/include/asio/detail/base_from_completion_cond.hpp	/^  CompletionCondition completion_condition_;$/;"	m	class:asio::detail::base_from_completion_cond	typeref:typename:CompletionCondition
completion_condition_	asio/include/asio/impl/write.hpp	/^    CompletionCondition completion_condition_;$/;"	m	class:asio::detail::write_dynbuf_v1_op	typeref:typename:CompletionCondition
completion_condition_	asio/include/asio/impl/write.hpp	/^    CompletionCondition completion_condition_;$/;"	m	class:asio::detail::write_dynbuf_v2_op	typeref:typename:CompletionCondition
completion_handler	asio/include/asio/async_result.hpp	/^    completion_handler_type&, completion_handler_type>::type completion_handler;$/;"	m	struct:asio::async_completion	typeref:typename:conditional<is_same<CompletionToken,completion_handler_type>::value,completion_handler_type &,completion_handler_type>::type
completion_handler	asio/include/asio/async_result.hpp	/^  completion_handler_type completion_handler;$/;"	m	struct:asio::async_completion	typeref:typename:completion_handler_type
completion_handler	asio/include/asio/detail/completion_handler.hpp	/^  completion_handler(Handler& h)$/;"	f	class:asio::detail::completion_handler
completion_handler	asio/include/asio/detail/completion_handler.hpp	/^class completion_handler : public operation$/;"	c	namespace:asio::detail
completion_handler_for	asio/include/asio/async_result.hpp	/^ASIO_CONCEPT completion_handler_for =$/;"	v	namespace:asio	typeref:typename:ASIO_CONCEPT
completion_handler_type	asio/include/asio/async_result.hpp	/^      Signature>::completion_handler_type completion_handler_type;$/;"	t	struct:asio::async_completion	typeref:typename:asio::async_result<typename decay<CompletionToken>::type,Signature>::completion_handler_type
completion_handler_type	asio/include/asio/async_result.hpp	/^  typedef CompletionToken completion_handler_type;$/;"	t	class:asio::async_result	typeref:typename:CompletionToken
completion_handler_type	asio/include/asio/bind_executor.hpp	/^      completion_handler_type;$/;"	t	class:asio::async_result	typeref:typename:executor_binder<typename async_result<T,Signature>::completion_handler_type,Executor>
completion_handler_type	asio/include/asio/impl/detached.hpp	/^  typedef asio::detail::detached_handler completion_handler_type;$/;"	t	struct:asio::async_result	typeref:typename:asio::detail::detached_handler
completion_handler_type	asio/include/asio/impl/spawn.hpp	/^    typedef coro_handler<Handler, T> completion_handler_type;$/;"	t	class:asio::detail::coro_async_result	typeref:typename:coro_handler<Handler,T>
completion_handler_type	asio/include/asio/impl/spawn.hpp	/^    typedef coro_handler<Handler, void> completion_handler_type;$/;"	t	class:asio::detail::coro_async_result	typeref:typename:coro_handler<Handler,void>
completion_handler_type	asio/include/asio/impl/use_future.hpp	/^  typedef packaged_handler<Function, Allocator, Result> completion_handler_type;$/;"	t	class:asio::detail::packaged_async_result	typeref:typename:packaged_handler<Function,Allocator,Result>
completion_handler_type	asio/include/asio/impl/use_future.hpp	/^  typedef promise_handler<Signature, Allocator> completion_handler_type;$/;"	t	class:asio::detail::promise_async_result	typeref:typename:promise_handler<Signature,Allocator>
completion_handler_type	asio/include/asio/packaged_task.hpp	/^  typedef std::packaged_task<Result(Args...)> completion_handler_type;$/;"	t	class:asio::async_result
completion_handler_type	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^    completion_handler_type(const close_after& token)$/;"	f	class:asio::async_result::completion_handler_type	file:
completion_handler_type	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  class completion_handler_type$/;"	c	class:asio::async_result	file:
completion_handler_type	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^    completion_handler_type(const close_after& token)$/;"	f	class:asio::async_result::completion_handler_type	file:
completion_handler_type	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  class completion_handler_type$/;"	c	class:asio::async_result	file:
completion_handler_type	asio/src/tests/unit/archetypes/async_result.hpp	/^  typedef archetypes::concrete_handler<Signature> completion_handler_type;$/;"	t	class:asio::async_result	typeref:typename:archetypes::concrete_handler<Signature>
completion_signature	asio/include/asio/async_result.hpp	/^ASIO_CONCEPT completion_signature =$/;"	v	namespace:asio	typeref:typename:ASIO_CONCEPT
compose_0_args_handler	asio/src/tests/unit/compose.cpp	/^void compose_0_args_handler(int* count)$/;"	f	typeref:typename:void
compose_0_completion_args_test	asio/src/tests/unit/compose.cpp	/^void compose_0_completion_args_test()$/;"	f	typeref:typename:void
compose_1_args_handler	asio/src/tests/unit/compose.cpp	/^void compose_1_args_handler(int* count, int* result_out, int result)$/;"	f	typeref:typename:void
compose_1_completion_arg_test	asio/src/tests/unit/compose.cpp	/^void compose_1_completion_arg_test()$/;"	f	typeref:typename:void
composed_io_executors	asio/include/asio/impl/compose.hpp	/^    composed_io_executors() ASIO_NOEXCEPT$/;"	f	struct:asio::detail::composed_io_executors
composed_io_executors	asio/include/asio/impl/compose.hpp	/^    explicit composed_io_executors(const Head& ex) ASIO_NOEXCEPT$/;"	f	struct:asio::detail::composed_io_executors
composed_io_executors	asio/include/asio/impl/compose.hpp	/^    explicit composed_io_executors(const Head& head,$/;"	f	struct:asio::detail::composed_io_executors
composed_io_executors	asio/include/asio/impl/compose.hpp	/^  struct composed_io_executors<void()>$/;"	s	namespace:asio::detail
composed_io_executors	asio/include/asio/impl/compose.hpp	/^  struct composed_io_executors<void(Head)>$/;"	s	namespace:asio::detail
composed_io_executors	asio/include/asio/impl/compose.hpp	/^  struct composed_io_executors<void(Head, Tail...)>$/;"	s	namespace:asio::detail
composed_op	asio/include/asio/impl/compose.hpp	/^    composed_op(ASIO_MOVE_ARG(Impl) impl,$/;"	f	class:asio::detail::composed_op
composed_op	asio/include/asio/impl/compose.hpp	/^    composed_op(composed_op&& other)$/;"	f	class:asio::detail::composed_op
composed_op	asio/include/asio/impl/compose.hpp	/^  class composed_op<Impl, Work, Handler, R(Args...)>$/;"	c	namespace:asio::detail
composed_work	asio/include/asio/impl/compose.hpp	/^    composed_work(const executors_type&) ASIO_NOEXCEPT$/;"	f	struct:asio::detail::composed_work
composed_work	asio/include/asio/impl/compose.hpp	/^    explicit composed_work(const executors_type& ex) ASIO_NOEXCEPT$/;"	f	struct:asio::detail::composed_work
composed_work	asio/include/asio/impl/compose.hpp	/^  struct composed_work<void()>$/;"	s	namespace:asio::detail
composed_work	asio/include/asio/impl/compose.hpp	/^  struct composed_work<void(Head)>$/;"	s	namespace:asio::detail
composed_work	asio/include/asio/impl/compose.hpp	/^  struct composed_work<void(Head, Tail...)>$/;"	s	namespace:asio::detail
compute_checksum	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^void compute_checksum(icmp_header& header,$/;"	f	typeref:typename:void
computeroutput	asio/src/doc/reference.xsl	/^<xsl:template match="computeroutput" mode="markup">$/;"	m
computeroutput	asio/src/doc/reference.xsl	/^<xsl:template match="computeroutput" mode="markup-nested">$/;"	m
computeroutput	asio/src/doc/tutorial.xsl	/^<xsl:template match="computeroutput">$/;"	m
concrete_handler	asio/src/tests/unit/archetypes/async_result.hpp	/^  concrete_handler(concrete_handler&&) {}$/;"	f	struct:archetypes::concrete_handler
concrete_handler	asio/src/tests/unit/archetypes/async_result.hpp	/^  concrete_handler(lazy_handler)$/;"	f	struct:archetypes::concrete_handler
concrete_handler	asio/src/tests/unit/archetypes/async_result.hpp	/^struct concrete_handler<R(Arg1)>$/;"	s	namespace:archetypes
concrete_handler	asio/src/tests/unit/archetypes/async_result.hpp	/^struct concrete_handler<R(Arg1, Arg2)>$/;"	s	namespace:archetypes
concurrency_hint	asio/include/asio/detail/scheduler.hpp	/^  int concurrency_hint() const$/;"	f	class:asio::detail::scheduler	typeref:typename:int
concurrency_hint	asio/include/asio/detail/win_iocp_io_context.hpp	/^  int concurrency_hint() const$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:int
concurrency_hint_	asio/include/asio/detail/scheduler.hpp	/^  const int concurrency_hint_;$/;"	m	class:asio::detail::scheduler	typeref:typename:const int
concurrency_hint_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  const int concurrency_hint_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:const int
cond_	asio/include/asio/detail/std_event.hpp	/^  std::condition_variable cond_;$/;"	m	class:asio::detail::std_event	typeref:typename:std::condition_variable
condition_	asio/src/examples/cpp11/executors/actor.cpp	/^  std::condition_variable condition_;$/;"	m	class:receiver	typeref:typename:std::condition_variable	file:
condition_	asio/src/examples/cpp11/executors/fork_join.cpp	/^  std::condition_variable condition_;$/;"	m	class:fork_join_pool	typeref:typename:std::condition_variable	file:
condition_	asio/src/examples/cpp11/executors/pipeline.cpp	/^  std::condition_variable condition_;$/;"	m	class:queue_impl_base	typeref:typename:std::condition_variable	file:
condition_	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  std::condition_variable condition_;$/;"	m	class:priority_scheduler	typeref:typename:std::condition_variable	file:
condition_	asio/src/examples/cpp14/executors/actor.cpp	/^  std::condition_variable condition_;$/;"	m	class:receiver	typeref:typename:std::condition_variable	file:
condition_	asio/src/examples/cpp14/executors/fork_join.cpp	/^  std::condition_variable condition_;$/;"	m	class:fork_join_pool	typeref:typename:std::condition_variable	file:
condition_	asio/src/examples/cpp14/executors/pipeline.cpp	/^  std::condition_variable condition_;$/;"	m	class:queue_impl_base	typeref:typename:std::condition_variable	file:
condition_	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  std::condition_variable condition_;$/;"	m	class:priority_scheduler	typeref:typename:std::condition_variable	file:
conditionally_enabled_event	asio/include/asio/detail/conditionally_enabled_event.hpp	/^  conditionally_enabled_event()$/;"	f	class:asio::detail::conditionally_enabled_event
conditionally_enabled_event	asio/include/asio/detail/conditionally_enabled_event.hpp	/^class conditionally_enabled_event$/;"	c	namespace:asio::detail
conditionally_enabled_mutex	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^  explicit conditionally_enabled_mutex(bool enabled)$/;"	f	class:asio::detail::conditionally_enabled_mutex
conditionally_enabled_mutex	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^class conditionally_enabled_mutex$/;"	c	namespace:asio::detail
connect	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID connect(const endpoint_type& peer_endpoint,$/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
connect	asio/include/asio/basic_socket.hpp	/^  void connect(const endpoint_type& peer_endpoint)$/;"	f	class:asio::basic_socket	typeref:typename:void
connect	asio/include/asio/basic_socket_streambuf.hpp	/^  basic_socket_streambuf* connect(T... x)$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:basic_socket_streambuf *
connect	asio/include/asio/basic_socket_streambuf.hpp	/^  basic_socket_streambuf* connect(const endpoint_type& endpoint)$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:basic_socket_streambuf *
connect	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code connect(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
connect	asio/include/asio/detail/reactive_socket_service.hpp	/^  asio::error_code connect(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:asio::error_code
connect	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  asio::error_code connect(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:asio::error_code
connect	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  asio::error_code connect(implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:asio::error_code
connect	asio/include/asio/impl/connect.hpp	/^Iterator connect(basic_socket<Protocol, Executor>& s, Iterator begin,$/;"	f	namespace:asio	typeref:typename:Iterator
connect	asio/include/asio/impl/connect.hpp	/^Iterator connect(basic_socket<Protocol, Executor>& s,$/;"	f	namespace:asio	typeref:typename:Iterator
connect	asio/include/asio/impl/connect.hpp	/^inline Iterator connect(basic_socket<Protocol, Executor>& s,$/;"	f	namespace:asio	typeref:typename:Iterator
connect	asio/include/asio/impl/connect.hpp	/^typename Protocol::endpoint connect(basic_socket<Protocol, Executor>& s,$/;"	f	namespace:asio	typeref:typename:Protocol::endpoint
connect	asio/src/examples/cpp03/socks4/socks4.hpp	/^    connect = 0x01,$/;"	e	enum:socks4::request::command_type
connect	asio/src/examples/cpp03/timeouts/blocking_tcp_client.cpp	/^  void connect(const std::string& host, const std::string& service,$/;"	f	class:client	typeref:typename:void	file:
connect	asio/src/examples/cpp11/socks4/socks4.hpp	/^    connect = 0x01,$/;"	e	enum:socks4::request::command_type
connect	asio/src/examples/cpp11/ssl/client.cpp	/^  void connect(const tcp::resolver::results_type& endpoints)$/;"	f	class:client	typeref:typename:void	file:
connect	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^  void connect(const std::string& host, const std::string& service,$/;"	f	class:client	typeref:typename:void	file:
connect_condition_	asio/include/asio/impl/connect.hpp	/^    ConnectCondition connect_condition_;$/;"	m	class:asio::detail::base_from_connect_condition	typeref:typename:ConnectCondition
connect_ex_	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^  bool connect_ex_;$/;"	m	class:asio::detail::win_iocp_socket_connect_op_base	typeref:typename:bool
connect_ex_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  void* connect_ex_;$/;"	m	class:asio::detail::win_iocp_socket_service_base	typeref:typename:void *
connect_ex_fn	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  typedef BOOL (PASCAL *connect_ex_fn)(SOCKET,$/;"	t	class:asio::detail::win_iocp_socket_service_base	typeref:typename:BOOL (PASCAL *)(SOCKET,const socket_addr_type *,int,void *,DWORD,DWORD *,OVERLAPPED *)
connect_handler	asio/src/examples/cpp03/services/daytime_client.cpp	/^void connect_handler(const asio::error_code& e, tcp::socket* s)$/;"	f	typeref:typename:void
connect_handler	asio/src/tests/unit/generic/datagram_protocol.cpp	/^void connect_handler(const asio::error_code&)$/;"	f	namespace:generic_datagram_protocol_socket_compile	typeref:typename:void
connect_handler	asio/src/tests/unit/generic/raw_protocol.cpp	/^void connect_handler(const asio::error_code&)$/;"	f	namespace:generic_raw_protocol_socket_compile	typeref:typename:void
connect_handler	asio/src/tests/unit/generic/seq_packet_protocol.cpp	/^void connect_handler(const asio::error_code&)$/;"	f	namespace:generic_seq_packet_protocol_socket_compile	typeref:typename:void
connect_handler	asio/src/tests/unit/generic/stream_protocol.cpp	/^void connect_handler(const asio::error_code&)$/;"	f	namespace:generic_stream_protocol_socket_compile	typeref:typename:void
connect_handler	asio/src/tests/unit/ip/icmp.cpp	/^  connect_handler() {}$/;"	f	struct:ip_icmp_socket_compile::connect_handler	file:
connect_handler	asio/src/tests/unit/ip/icmp.cpp	/^  connect_handler(connect_handler&&) {}$/;"	f	struct:ip_icmp_socket_compile::connect_handler	file:
connect_handler	asio/src/tests/unit/ip/icmp.cpp	/^struct connect_handler$/;"	s	namespace:ip_icmp_socket_compile	file:
connect_handler	asio/src/tests/unit/ip/tcp.cpp	/^  connect_handler() {}$/;"	f	struct:ip_tcp_socket_compile::connect_handler	file:
connect_handler	asio/src/tests/unit/ip/tcp.cpp	/^  connect_handler(connect_handler&&) {}$/;"	f	struct:ip_tcp_socket_compile::connect_handler	file:
connect_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct connect_handler$/;"	s	namespace:ip_tcp_socket_compile	file:
connect_handler	asio/src/tests/unit/ip/udp.cpp	/^  connect_handler() {}$/;"	f	struct:ip_udp_socket_compile::connect_handler	file:
connect_handler	asio/src/tests/unit/ip/udp.cpp	/^  connect_handler(connect_handler&&) {}$/;"	f	struct:ip_udp_socket_compile::connect_handler	file:
connect_handler	asio/src/tests/unit/ip/udp.cpp	/^struct connect_handler$/;"	s	namespace:ip_udp_socket_compile	file:
connect_handler	asio/src/tests/unit/local/datagram_protocol.cpp	/^void connect_handler(const asio::error_code&)$/;"	f	namespace:local_datagram_protocol_socket_compile	typeref:typename:void
connect_handler	asio/src/tests/unit/local/stream_protocol.cpp	/^void connect_handler(const asio::error_code&)$/;"	f	namespace:local_stream_protocol_socket_compile	typeref:typename:void
connect_op	asio/include/asio/detail/dev_poll_reactor.hpp	/^    connect_op = 1, except_op = 2, max_ops = 3 };$/;"	e	enum:asio::detail::dev_poll_reactor::op_types
connect_op	asio/include/asio/detail/epoll_reactor.hpp	/^    connect_op = 1, except_op = 2, max_ops = 3 };$/;"	e	enum:asio::detail::epoll_reactor::op_types
connect_op	asio/include/asio/detail/kqueue_reactor.hpp	/^    connect_op = 1, except_op = 2, max_ops = 3 };$/;"	e	enum:asio::detail::kqueue_reactor::op_types
connect_op	asio/include/asio/detail/select_reactor.hpp	/^    max_select_ops = 3, connect_op = 3, max_ops = 4 };$/;"	e	enum:asio::detail::select_reactor::op_types
connect_pair	asio/include/asio/local/connect_pair.hpp	/^inline ASIO_SYNC_OP_VOID connect_pair($/;"	f	namespace:asio::local	typeref:typename:ASIO_SYNC_OP_VOID
connect_pair	asio/include/asio/local/connect_pair.hpp	/^inline void connect_pair(basic_socket<Protocol, Executor1>& socket1,$/;"	f	namespace:asio::local	typeref:typename:void
connect_to_endpoints	asio/include/asio/basic_socket_streambuf.hpp	/^  void connect_to_endpoints(EndpointIterator begin, EndpointIterator end)$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:void
connect_to_endpoints	asio/include/asio/basic_socket_streambuf.hpp	/^  void connect_to_endpoints(const EndpointSequence& endpoints)$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:void
connection	asio/src/examples/cpp03/http/server/connection.cpp	/^connection::connection(asio::io_context& io_context,$/;"	f	class:http::server::connection
connection	asio/src/examples/cpp03/http/server/connection.hpp	/^class connection$/;"	c	namespace:http::server
connection	asio/src/examples/cpp03/http/server2/connection.cpp	/^connection::connection(asio::io_context& io_context,$/;"	f	class:http::server2::connection
connection	asio/src/examples/cpp03/http/server2/connection.hpp	/^class connection$/;"	c	namespace:http::server2
connection	asio/src/examples/cpp03/http/server3/connection.cpp	/^connection::connection(asio::io_context& io_context,$/;"	f	class:http::server3::connection
connection	asio/src/examples/cpp03/http/server3/connection.hpp	/^class connection$/;"	c	namespace:http::server3
connection	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  connection(const asio::executor& ex)$/;"	f	class:connection	file:
connection	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^class connection$/;"	c	file:
connection	asio/src/examples/cpp03/serialization/connection.hpp	/^  connection(const asio::executor& ex)$/;"	f	class:s11n_example::connection
connection	asio/src/examples/cpp03/serialization/connection.hpp	/^class connection$/;"	c	namespace:s11n_example
connection	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  connection(asio::io_context& io_context, const std::string& filename)$/;"	f	class:connection	file:
connection	asio/src/examples/cpp03/windows/transmit_file.cpp	/^class connection$/;"	c	file:
connection	asio/src/examples/cpp11/http/server/connection.cpp	/^connection::connection(asio::ip::tcp::socket socket,$/;"	f	class:http::server::connection
connection	asio/src/examples/cpp11/http/server/connection.hpp	/^class connection$/;"	c	namespace:http::server
connection	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  connection(tcp::socket socket)$/;"	f	class:connection	file:
connection	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^class connection$/;"	c	file:
connection_	asio/src/examples/cpp03/serialization/client.cpp	/^  connection connection_;$/;"	m	class:s11n_example::client	typeref:typename:connection	file:
connection_aborted	asio/include/asio/error.hpp	/^  connection_aborted = ASIO_SOCKET_ERROR(ECONNABORTED),$/;"	e	enum:asio::error::basic_errors
connection_iter	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  connection_iter(tcp::acceptor& a, tcp::socket s)$/;"	f	class:connection_iter	file:
connection_iter	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^class connection_iter$/;"	c	file:
connection_manager	asio/src/examples/cpp03/http/server/connection_manager.hpp	/^class connection_manager$/;"	c	namespace:http::server
connection_manager	asio/src/examples/cpp11/http/server/connection_manager.cpp	/^connection_manager::connection_manager()$/;"	f	class:http::server::connection_manager
connection_manager	asio/src/examples/cpp11/http/server/connection_manager.hpp	/^class connection_manager$/;"	c	namespace:http::server
connection_manager_	asio/src/examples/cpp03/http/server/connection.hpp	/^  connection_manager& connection_manager_;$/;"	m	class:http::server::connection	typeref:typename:connection_manager &
connection_manager_	asio/src/examples/cpp03/http/server/server.hpp	/^  connection_manager connection_manager_;$/;"	m	class:http::server::server	typeref:typename:connection_manager
connection_manager_	asio/src/examples/cpp11/http/server/connection.hpp	/^  connection_manager& connection_manager_;$/;"	m	class:http::server::connection	typeref:typename:connection_manager &
connection_manager_	asio/src/examples/cpp11/http/server/server.hpp	/^  connection_manager connection_manager_;$/;"	m	class:http::server::server	typeref:typename:connection_manager
connection_ptr	asio/src/examples/cpp03/http/server/connection.hpp	/^typedef boost::shared_ptr<connection> connection_ptr;$/;"	t	namespace:http::server	typeref:typename:boost::shared_ptr<connection>
connection_ptr	asio/src/examples/cpp03/http/server2/connection.hpp	/^typedef boost::shared_ptr<connection> connection_ptr;$/;"	t	namespace:http::server2	typeref:typename:boost::shared_ptr<connection>
connection_ptr	asio/src/examples/cpp03/http/server3/connection.hpp	/^typedef boost::shared_ptr<connection> connection_ptr;$/;"	t	namespace:http::server3	typeref:typename:boost::shared_ptr<connection>
connection_ptr	asio/src/examples/cpp03/serialization/connection.hpp	/^typedef boost::shared_ptr<connection> connection_ptr;$/;"	t	namespace:s11n_example	typeref:typename:boost::shared_ptr<connection>
connection_ptr	asio/src/examples/cpp11/http/server/connection.hpp	/^typedef std::shared_ptr<connection> connection_ptr;$/;"	t	namespace:http::server	typeref:typename:std::shared_ptr<connection>
connection_refused	asio/include/asio/error.hpp	/^  connection_refused = ASIO_SOCKET_ERROR(ECONNREFUSED),$/;"	e	enum:asio::error::basic_errors
connection_reset	asio/include/asio/error.hpp	/^  connection_reset = ASIO_SOCKET_ERROR(ECONNRESET),$/;"	e	enum:asio::error::basic_errors
connection_sink	asio/src/tests/unit/connect.cpp	/^  connection_sink()$/;"	f	class:connection_sink	file:
connection_sink	asio/src/tests/unit/connect.cpp	/^class connection_sink$/;"	c	file:
connections	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  explicit connections(tcp::acceptor& a) : acceptor_(a) {}$/;"	f	class:connections	file:
connections	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^class connections$/;"	c	file:
connections_	asio/src/examples/cpp03/http/server/connection_manager.hpp	/^  std::set<connection_ptr> connections_;$/;"	m	class:http::server::connection_manager	typeref:typename:std::set<connection_ptr>
connections_	asio/src/examples/cpp11/http/server/connection_manager.hpp	/^  std::set<connection_ptr> connections_;$/;"	m	class:http::server::connection_manager	typeref:typename:std::set<connection_ptr>
const_buffer	asio/include/asio/buffer.hpp	/^  const_buffer() ASIO_NOEXCEPT$/;"	f	class:asio::const_buffer
const_buffer	asio/include/asio/buffer.hpp	/^  const_buffer(const mutable_buffer& b) ASIO_NOEXCEPT$/;"	f	class:asio::const_buffer
const_buffer	asio/include/asio/buffer.hpp	/^  const_buffer(const void* data, std::size_t size) ASIO_NOEXCEPT$/;"	f	class:asio::const_buffer
const_buffer	asio/include/asio/buffer.hpp	/^  const_buffer(const void* data, std::size_t size,$/;"	f	class:asio::const_buffer
const_buffer	asio/include/asio/buffer.hpp	/^class const_buffer$/;"	c	namespace:asio
const_buffers_1	asio/include/asio/buffer.hpp	/^  const_buffers_1(const void* data, std::size_t size) ASIO_NOEXCEPT$/;"	f	class:asio::const_buffers_1
const_buffers_1	asio/include/asio/buffer.hpp	/^  const_buffers_1(const void* data, std::size_t size,$/;"	f	class:asio::const_buffers_1
const_buffers_1	asio/include/asio/buffer.hpp	/^  explicit const_buffers_1(const const_buffer& b) ASIO_NOEXCEPT$/;"	f	class:asio::const_buffers_1
const_buffers_1	asio/include/asio/buffer.hpp	/^class const_buffers_1$/;"	c	namespace:asio
const_buffers_type	asio/include/asio/basic_streambuf.hpp	/^    const_buffers_type;$/;"	t	class:asio::basic_streambuf_ref	typeref:typename:basic_streambuf<Allocator>::const_buffers_type
const_buffers_type	asio/include/asio/basic_streambuf.hpp	/^  typedef implementation_defined const_buffers_type;$/;"	t	class:asio::basic_streambuf	typeref:typename:implementation_defined
const_buffers_type	asio/include/asio/buffer.hpp	/^  typedef ASIO_CONST_BUFFER const_buffers_type;$/;"	t	class:asio::dynamic_string_buffer	typeref:typename:ASIO_CONST_BUFFER
const_buffers_type	asio/include/asio/buffer.hpp	/^  typedef ASIO_CONST_BUFFER const_buffers_type;$/;"	t	class:asio::dynamic_vector_buffer	typeref:typename:ASIO_CONST_BUFFER
const_iterator	asio/include/asio/buffer.hpp	/^  typedef const const_buffer* const_iterator;$/;"	t	class:asio::const_buffers_1	typeref:typename:const const_buffer *
const_iterator	asio/include/asio/buffer.hpp	/^  typedef const mutable_buffer* const_iterator;$/;"	t	class:asio::mutable_buffers_1	typeref:typename:const mutable_buffer *
const_iterator	asio/include/asio/buffer.hpp	/^  typedef const mutable_buffer* const_iterator;$/;"	t	class:asio::null_buffers	typeref:typename:const mutable_buffer *
const_iterator	asio/include/asio/buffers_iterator.hpp	/^    typedef const const_buffer* const_iterator;$/;"	t	struct:asio::detail::buffers_iterator_types	typeref:typename:const const_buffer *
const_iterator	asio/include/asio/buffers_iterator.hpp	/^    typedef const mutable_buffer* const_iterator;$/;"	t	struct:asio::detail::buffers_iterator_types	typeref:typename:const mutable_buffer *
const_iterator	asio/include/asio/buffers_iterator.hpp	/^    typedef typename BufferSequence::const_iterator const_iterator;$/;"	t	struct:asio::detail::buffers_iterator_types	typeref:typename:BufferSequence::const_iterator
const_iterator	asio/include/asio/detail/consuming_buffers.hpp	/^  typedef const Buffer* const_iterator;$/;"	t	struct:prepared_buffers	typeref:typename:const Buffer *
const_iterator	asio/include/asio/detail/hash_map.hpp	/^  typedef typename std::list<value_type>::const_iterator const_iterator;$/;"	t	class:asio::detail::hash_map	typeref:typename:std::list<value_type>::const_iterator
const_iterator	asio/include/asio/ip/basic_resolver_results.hpp	/^  typedef basic_resolver_iterator<protocol_type> const_iterator;$/;"	t	class:asio::ip::basic_resolver_results	typeref:typename:basic_resolver_iterator<protocol_type>
const_iterator	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  typedef const asio::const_buffer* const_iterator;$/;"	t	class:shared_const_buffer	typeref:typename:const asio::const_buffer *	file:
const_iterator	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  typedef const asio::const_buffer* const_iterator;$/;"	t	class:shared_const_buffer	typeref:typename:const asio::const_buffer *	file:
const_iterator	asio/src/tests/unit/buffer.cpp	/^  typedef const_buffer* const_iterator;$/;"	t	struct:is_buffer_sequence::valid_const_a	typeref:typename:const_buffer *	file:
const_iterator	asio/src/tests/unit/buffer.cpp	/^  typedef mutable_buffer* const_iterator;$/;"	t	struct:is_buffer_sequence::valid_mutable_a	typeref:typename:mutable_buffer *	file:
const_reference	asio/include/asio/ip/basic_resolver_results.hpp	/^  typedef const value_type& const_reference;$/;"	t	class:asio::ip::basic_resolver_results	typeref:typename:const value_type &
construct	asio/include/asio/detail/deadline_timer_service.hpp	/^  void construct(implementation_type& impl)$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:void
construct	asio/include/asio/detail/null_socket_service.hpp	/^  void construct(implementation_type&)$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
construct	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  void construct(implementation_type& impl)$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:void
construct	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  void construct(implementation_type& impl)$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:void
construct	asio/include/asio/detail/winrt_resolver_service.hpp	/^  void construct(implementation_type&)$/;"	f	class:asio::detail::winrt_resolver_service	typeref:typename:void
consume	asio/include/asio/basic_streambuf.hpp	/^  void consume(std::size_t n)$/;"	f	class:asio::basic_streambuf	typeref:typename:void
consume	asio/include/asio/basic_streambuf.hpp	/^  void consume(std::size_t n)$/;"	f	class:asio::basic_streambuf_ref	typeref:typename:void
consume	asio/include/asio/buffer.hpp	/^  void consume(std::size_t n)$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:void
consume	asio/include/asio/buffer.hpp	/^  void consume(std::size_t n)$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:void
consume	asio/include/asio/detail/buffered_stream_storage.hpp	/^  void consume(size_type count)$/;"	f	class:asio::detail::buffered_stream_storage	typeref:typename:void
consume	asio/include/asio/detail/consuming_buffers.hpp	/^  void consume(std::size_t size)$/;"	f	class:consuming_buffers	typeref:typename:void
consume	asio/include/asio/detail/consuming_buffers.hpp	/^  void consume(std::size_t size)$/;"	f	class:consuming_single_buffer	typeref:typename:void
consume	asio/include/asio/detail/consuming_buffers.hpp	/^  void consume(std::size_t)$/;"	f	class:consuming_buffers	typeref:typename:void
consume	asio/src/examples/cpp03/http/server/request_parser.cpp	/^boost::tribool request_parser::consume(request& req, char input)$/;"	f	class:http::server::request_parser	typeref:typename:boost::tribool
consume	asio/src/examples/cpp03/http/server2/request_parser.cpp	/^boost::tribool request_parser::consume(request& req, char input)$/;"	f	class:http::server2::request_parser	typeref:typename:boost::tribool
consume	asio/src/examples/cpp03/http/server3/request_parser.cpp	/^boost::tribool request_parser::consume(request& req, char input)$/;"	f	class:http::server3::request_parser	typeref:typename:boost::tribool
consume	asio/src/examples/cpp03/http/server4/request_parser.cpp	/^boost::tribool request_parser::consume(request& req, char c)$/;"	f	class:http::server4::request_parser	typeref:typename:boost::tribool
consume	asio/src/examples/cpp11/http/server/request_parser.cpp	/^request_parser::result_type request_parser::consume(request& req, char input)$/;"	f	class:http::server::request_parser	typeref:typename:request_parser::result_type
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^  consuming_buffers(const null_buffers&)$/;"	f	class:consuming_buffers
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^  explicit consuming_buffers(const Buffers& buffers)$/;"	f	class:consuming_buffers
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^  explicit consuming_buffers(const boost::array<Elem, 2>& buffers)$/;"	f	class:consuming_buffers
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^  explicit consuming_buffers(const const_buffer& buffer)$/;"	f	class:consuming_buffers
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^  explicit consuming_buffers(const const_buffers_1& buffer)$/;"	f	class:consuming_buffers
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^  explicit consuming_buffers(const mutable_buffer& buffer)$/;"	f	class:consuming_buffers
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^  explicit consuming_buffers(const mutable_buffers_1& buffer)$/;"	f	class:consuming_buffers
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^  explicit consuming_buffers(const std::array<Elem, 2>& buffers)$/;"	f	class:consuming_buffers
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_buffers$/;"	c
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_buffers<Buffer, boost::array<Elem, 2>,$/;"	c
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_buffers<Buffer, null_buffers, const mutable_buffer*>$/;"	c
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_buffers<Buffer, std::array<Elem, 2>,$/;"	c
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_buffers<const_buffer, const_buffer, const const_buffer*>$/;"	c
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_buffers<const_buffer, const_buffers_1, const const_buffer*>$/;"	c
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_buffers<const_buffer, mutable_buffer, const mutable_buffer*>$/;"	c
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_buffers<const_buffer, mutable_buffers_1, const mutable_buffer*>$/;"	c
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_buffers<mutable_buffer, mutable_buffer, const mutable_buffer*>$/;"	c
consuming_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_buffers<mutable_buffer,$/;"	c
consuming_single_buffer	asio/include/asio/detail/consuming_buffers.hpp	/^  explicit consuming_single_buffer(const Buffer1& buffer)$/;"	f	class:consuming_single_buffer
consuming_single_buffer	asio/include/asio/detail/consuming_buffers.hpp	/^class consuming_single_buffer$/;"	c
container_type	asio/include/asio/buffer.hpp	/^    container_type;$/;"	t	function:asio::buffer	typeref:typename:asio::detail::buffer_types<PodType>::container_type
container_type	asio/include/asio/buffer.hpp	/^  typedef ASIO_CONST_BUFFER container_type;$/;"	t	struct:asio::detail::buffer_types_base	typeref:typename:ASIO_CONST_BUFFER
container_type	asio/include/asio/buffer.hpp	/^  typedef ASIO_MUTABLE_BUFFER container_type;$/;"	t	struct:asio::detail::buffer_types_base	typeref:typename:ASIO_MUTABLE_BUFFER
contains	asio/include/asio/detail/call_stack.hpp	/^  static Value* contains(Key* k)$/;"	f	class:asio::detail::call_stack	typeref:typename:Value *
content	asio/src/examples/cpp03/http/server/reply.hpp	/^  std::string content;$/;"	m	struct:http::server::reply	typeref:typename:std::string
content	asio/src/examples/cpp03/http/server2/reply.hpp	/^  std::string content;$/;"	m	struct:http::server2::reply	typeref:typename:std::string
content	asio/src/examples/cpp03/http/server3/reply.hpp	/^  std::string content;$/;"	m	struct:http::server3::reply	typeref:typename:std::string
content	asio/src/examples/cpp03/http/server4/reply.hpp	/^  std::string content;$/;"	m	struct:http::server4::reply	typeref:typename:std::string
content	asio/src/examples/cpp03/http/server4/request.hpp	/^  std::string content;$/;"	m	struct:http::server4::request	typeref:typename:std::string
content	asio/src/examples/cpp11/http/server/reply.hpp	/^  std::string content;$/;"	m	struct:http::server::reply	typeref:typename:std::string
content_length_	asio/src/examples/cpp03/http/server4/request_parser.hpp	/^  std::size_t content_length_;$/;"	m	class:http::server4::request_parser	typeref:typename:std::size_t
content_length_name_	asio/src/examples/cpp03/http/server4/request_parser.cpp	/^std::string request_parser::content_length_name_ = "Content-Length";$/;"	m	class:http::server4::request_parser	typeref:typename:std::string
content_length_name_	asio/src/examples/cpp03/http/server4/request_parser.hpp	/^  static std::string content_length_name_;$/;"	m	class:http::server4::request_parser	typeref:typename:std::string
context	asio/include/asio/detail/call_stack.hpp	/^    context(Key* k, Value& v)$/;"	f	class:asio::detail::call_stack::context
context	asio/include/asio/detail/call_stack.hpp	/^    explicit context(Key* k)$/;"	f	class:asio::detail::call_stack::context
context	asio/include/asio/detail/call_stack.hpp	/^  class context$/;"	c	class:asio::detail::call_stack
context	asio/include/asio/detail/io_object_executor.hpp	/^  execution_context& context() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::io_object_executor	typeref:typename:execution_context &
context	asio/include/asio/executor.hpp	/^  execution_context& context() const ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:execution_context &
context	asio/include/asio/impl/execution_context.hpp	/^inline execution_context& execution_context::service::context()$/;"	f	class:asio::execution_context::service	typeref:typename:execution_context &
context	asio/include/asio/impl/executor.hpp	/^  execution_context& context() ASIO_NOEXCEPT$/;"	f	class:asio::executor::impl	typeref:typename:execution_context &
context	asio/include/asio/impl/io_context.hpp	/^io_context::executor_type::context() const ASIO_NOEXCEPT$/;"	f	class:asio::io_context::executor_type	typeref:typename:io_context &
context	asio/include/asio/impl/system_executor.hpp	/^inline system_context& system_executor::context() const ASIO_NOEXCEPT$/;"	f	class:asio::system_executor	typeref:typename:system_context &
context	asio/include/asio/impl/thread_pool.hpp	/^thread_pool::executor_type::context() const ASIO_NOEXCEPT$/;"	f	class:asio::thread_pool::executor_type	typeref:typename:thread_pool &
context	asio/include/asio/impl/use_future.hpp	/^  execution_context& context() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::promise_executor	typeref:typename:execution_context &
context	asio/include/asio/io_context_strand.hpp	/^  asio::io_context& context() const ASIO_NOEXCEPT$/;"	f	class:asio::io_context::strand	typeref:typename:asio::io_context &
context	asio/include/asio/ssl/context.hpp	/^class context$/;"	c	namespace:asio::ssl
context	asio/include/asio/strand.hpp	/^  execution_context& context() const ASIO_NOEXCEPT$/;"	f	class:asio::strand	typeref:typename:execution_context &
context	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    handler_priority_queue& context() const$/;"	f	class:handler_priority_queue::executor	typeref:typename:handler_priority_queue &	file:
context	asio/src/examples/cpp11/executors/fork_join.cpp	/^  fork_join_pool& context() const noexcept$/;"	f	class:fork_executor	typeref:typename:fork_join_pool &	file:
context	asio/src/examples/cpp11/executors/pipeline.cpp	/^  execution_context& context() const noexcept$/;"	f	class:thread_executor	typeref:typename:execution_context &	file:
context	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    priority_scheduler& context() const noexcept$/;"	f	class:priority_scheduler::executor_type	typeref:typename:priority_scheduler &	file:
context	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    handler_priority_queue& context() const noexcept$/;"	f	class:handler_priority_queue::executor	typeref:typename:handler_priority_queue &	file:
context	asio/src/examples/cpp14/executors/fork_join.cpp	/^  fork_join_pool& context() const noexcept$/;"	f	class:fork_executor	typeref:typename:fork_join_pool &	file:
context	asio/src/examples/cpp14/executors/pipeline.cpp	/^  execution_context& context() const noexcept$/;"	f	class:thread_executor	typeref:typename:execution_context &	file:
context	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    priority_scheduler& context() const noexcept$/;"	f	class:priority_scheduler::executor_type	typeref:typename:priority_scheduler &	file:
context_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  execution_context& context_;$/;"	m	class:asio::detail::win_iocp_socket_service_base	typeref:typename:execution_context &
context_	asio/include/asio/detail/wrapped_handler.hpp	/^  Context context_;$/;"	m	class:asio::detail::rewrapped_handler	typeref:typename:Context
context_	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    handler_priority_queue& context_;$/;"	m	class:handler_priority_queue::executor	typeref:typename:handler_priority_queue &	file:
context_	asio/src/examples/cpp03/ssl/server.cpp	/^  asio::ssl::context context_;$/;"	m	class:server	typeref:typename:asio::ssl::context	file:
context_	asio/src/examples/cpp11/executors/fork_join.cpp	/^  fork_join_pool& context_;$/;"	m	class:fork_executor	typeref:typename:fork_join_pool &	file:
context_	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    priority_scheduler& context_;$/;"	m	class:priority_scheduler::executor_type	typeref:typename:priority_scheduler &	file:
context_	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    handler_priority_queue& context_;$/;"	m	class:handler_priority_queue::executor	typeref:typename:handler_priority_queue &	file:
context_	asio/src/examples/cpp11/ssl/server.cpp	/^  asio::ssl::context context_;$/;"	m	class:server	typeref:typename:asio::ssl::context	file:
context_	asio/src/examples/cpp14/executors/fork_join.cpp	/^  fork_join_pool& context_;$/;"	m	class:fork_executor	typeref:typename:fork_join_pool &	file:
context_	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    priority_scheduler& context_;$/;"	m	class:priority_scheduler::executor_type	typeref:typename:priority_scheduler &	file:
context_base	asio/include/asio/ssl/context_base.hpp	/^class context_base$/;"	c	namespace:asio::ssl
control_request	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  control_request()$/;"	f	class:control_request
control_request	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  control_request(unsigned short old_port_number,$/;"	f	class:control_request
control_request	asio/src/examples/cpp03/porthopper/protocol.hpp	/^class control_request$/;"	c
control_request_ptr	asio/src/examples/cpp03/porthopper/server.cpp	/^typedef boost::shared_ptr<control_request> control_request_ptr;$/;"	t	typeref:typename:boost::shared_ptr<control_request>	file:
control_request_size	asio/src/examples/cpp03/porthopper/protocol.hpp	/^    control_request_size = encoded_port_size * 2$/;"	e	enum:control_request::__anona16aa5440103
converter	asio/include/asio/detail/winrt_utils.hpp	/^  std::wstring_convert<std::codecvt_utf8<wchar_t>> converter;$/;"	v	namespace:asio::detail::winrt_utils	typeref:typename:std::wstring_convert<std::codecvt_utf8<wchar_t>>
converting_move_construct	asio/include/asio/detail/null_socket_service.hpp	/^  void converting_move_construct(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
converting_move_construct	asio/include/asio/detail/reactive_socket_service.hpp	/^  void converting_move_construct(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
converting_move_construct	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void converting_move_construct(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
converting_move_construct	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  void converting_move_construct(implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:void
copy	asio/include/asio/buffered_read_stream.hpp	/^  std::size_t copy(const MutableBufferSequence& buffers)$/;"	f	class:asio::buffered_read_stream	typeref:typename:std::size_t
copy	asio/include/asio/impl/buffered_write_stream.hpp	/^std::size_t buffered_write_stream<Stream>::copy($/;"	f	class:asio::buffered_write_stream	typeref:typename:std::size_t
copy_doc	asio/boostify.pl	/^sub copy_doc$/;"	s
copy_examples	asio/boostify.pl	/^sub copy_examples$/;"	s
copy_include_files	asio/boostify.pl	/^sub copy_include_files$/;"	s
copy_include_files	asio/tsify.pl	/^sub copy_include_files$/;"	s
copy_latency_tests	asio/boostify.pl	/^sub copy_latency_tests$/;"	s
copy_source_file	asio/boostify.pl	/^sub copy_source_file$/;"	s
copy_source_file	asio/tsify.pl	/^sub copy_source_file$/;"	s
copy_tools	asio/boostify.pl	/^sub copy_tools$/;"	s
copy_unit_tests	asio/boostify.pl	/^sub copy_unit_tests$/;"	s
core_	asio/include/asio/ssl/detail/io.hpp	/^  stream_core& core_;$/;"	m	class:asio::ssl::detail::io_op	typeref:typename:stream_core &
core_	asio/include/asio/ssl/stream.hpp	/^  detail::stream_core core_;$/;"	m	class:asio::ssl::stream	typeref:typename:detail::stream_core
coro_	asio/include/asio/impl/awaitable.hpp	/^  coroutine_handle<void> coro_ = nullptr;$/;"	m	class:asio::detail::awaitable_frame_base	typeref:typename:coroutine_handle<void>
coro_	asio/include/asio/impl/spawn.hpp	/^    shared_ptr<typename basic_yield_context<Handler>::callee_type> coro_;$/;"	m	class:asio::detail::coro_handler	typeref:typename:shared_ptr<typename basic_yield_context<Handler>::callee_type>
coro_	asio/include/asio/impl/spawn.hpp	/^    weak_ptr<typename basic_yield_context<Handler>::callee_type> coro_;$/;"	m	struct:asio::detail::spawn_data	typeref:typename:weak_ptr<typename basic_yield_context<Handler>::callee_type>
coro_	asio/include/asio/spawn.hpp	/^  detail::weak_ptr<callee_type> coro_;$/;"	m	class:asio::basic_yield_context	typeref:typename:detail::weak_ptr<callee_type>
coro_	asio/src/examples/cpp11/operations/composed_8.cpp	/^  asio::coroutine coro_;$/;"	m	struct:async_write_messages_implementation	typeref:typename:asio::coroutine	file:
coro_async_result	asio/include/asio/impl/spawn.hpp	/^    explicit coro_async_result(completion_handler_type& h)$/;"	f	class:asio::detail::coro_async_result
coro_async_result	asio/include/asio/impl/spawn.hpp	/^  class coro_async_result$/;"	c	namespace:asio::detail
coro_async_result	asio/include/asio/impl/spawn.hpp	/^  class coro_async_result<Handler, void>$/;"	c	namespace:asio::detail
coro_entry_point	asio/include/asio/impl/spawn.hpp	/^  struct coro_entry_point$/;"	s	namespace:asio::detail
coro_handler	asio/include/asio/impl/spawn.hpp	/^    coro_handler(basic_yield_context<Handler> ctx)$/;"	f	class:asio::detail::coro_handler
coro_handler	asio/include/asio/impl/spawn.hpp	/^  class coro_handler$/;"	c	namespace:asio::detail
coro_handler	asio/include/asio/impl/spawn.hpp	/^  class coro_handler<Handler, void>$/;"	c	namespace:asio::detail
coroutine	asio/include/asio/coroutine.hpp	/^  coroutine() : value_(0) {}$/;"	f	class:asio::coroutine
coroutine	asio/include/asio/coroutine.hpp	/^class coroutine$/;"	c	namespace:asio
coroutine_ref	asio/include/asio/coroutine.hpp	/^  coroutine_ref(coroutine& c) : value_(c.value_), modified_(false) {}$/;"	f	class:asio::detail::coroutine_ref
coroutine_ref	asio/include/asio/coroutine.hpp	/^  coroutine_ref(coroutine* c) : value_(c->value_), modified_(false) {}$/;"	f	class:asio::detail::coroutine_ref
coroutine_ref	asio/include/asio/coroutine.hpp	/^class coroutine_ref$/;"	c	namespace:asio::detail
coroutine_traits	asio/include/asio/impl/awaitable.hpp	/^struct coroutine_traits<asio::awaitable<T, Executor>, Args...>$/;"	s	namespace:std::experimental
count	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  std::size_t count() const$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:std::size_t
count	asio/include/asio/detail/consuming_buffers.hpp	/^  std::size_t count;$/;"	m	struct:prepared_buffers	typeref:typename:std::size_t
count_	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  std::size_t count_;$/;"	m	class:asio::detail::buffer_sequence_adapter	typeref:typename:std::size_t
count_	asio/src/examples/cpp03/tutorial/timer4/timer.cpp	/^  int count_;$/;"	m	class:printer	typeref:typename:int	file:
count_	asio/src/examples/cpp03/tutorial/timer5/timer.cpp	/^  int count_;$/;"	m	class:printer	typeref:typename:int	file:
count_	asio/src/tests/unit/deadline_timer.cpp	/^  int* count_;$/;"	m	struct:custom_allocation_timer_handler	typeref:typename:int *	file:
count_	asio/src/tests/unit/system_timer.cpp	/^  int* count_;$/;"	m	struct:custom_allocation_timer_handler	typeref:typename:int *	file:
count_type	asio/include/asio/io_context.hpp	/^  typedef std::size_t count_type;$/;"	t	class:asio::io_context	typeref:typename:std::size_t
create	asio/include/asio/detail/impl/service_registry.hpp	/^execution_context::service* service_registry::create(void* owner)$/;"	f	class:asio::detail::service_registry	typeref:typename:execution_context::service *
create	asio/include/asio/detail/object_pool.hpp	/^  static Object* create()$/;"	f	class:asio::detail::object_pool_access	typeref:typename:Object *
create	asio/include/asio/detail/object_pool.hpp	/^  static Object* create(Arg arg)$/;"	f	class:asio::detail::object_pool_access	typeref:typename:Object *
create	asio/include/asio/impl/executor.hpp	/^  static impl_base* create(const Executor& e, Allocator a = Allocator())$/;"	f	class:asio::executor::impl	typeref:typename:impl_base *
create	asio/include/asio/impl/executor.hpp	/^  static impl_base* create(const system_executor&,$/;"	f	class:asio::executor::impl	typeref:typename:impl_base *
create	asio/include/asio/ip/basic_resolver_results.hpp	/^  static basic_resolver_results create($/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:basic_resolver_results
create	asio/include/asio/ip/basic_resolver_results.hpp	/^  static basic_resolver_results create(const endpoint_type& endpoint,$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:basic_resolver_results
create	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  static pointer create(const asio::executor& ex)$/;"	f	class:connection	typeref:typename:pointer	file:
create	asio/src/examples/cpp03/services/logger_service.hpp	/^  void create(impl_type& impl, const std::string& identifier)$/;"	f	class:services::logger_service	typeref:typename:void
create	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  static pointer create(asio::io_context& io_context)$/;"	f	class:tcp_connection	typeref:typename:pointer	file:
create	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  static pointer create(asio::io_context& io_context)$/;"	f	class:tcp_connection	typeref:typename:pointer	file:
create	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  static pointer create(asio::io_context& io_context,$/;"	f	class:connection	typeref:typename:pointer	file:
create_boost_asio_content	asio/release.pl	/^sub create_boost_asio_content$/;"	s
create_lib_directory	asio/boostify.pl	/^sub create_lib_directory$/;"	s
create_promise	asio/include/asio/impl/use_future.hpp	/^  void create_promise(const Allocator& a)$/;"	f	class:asio::detail::promise_creator	typeref:typename:void
create_thread	asio/include/asio/detail/thread_group.hpp	/^  void create_thread(Function f)$/;"	f	class:asio::detail::thread_group	typeref:typename:void
create_threads	asio/include/asio/detail/thread_group.hpp	/^  void create_threads(Function f, std::size_t num_threads)$/;"	f	class:asio::detail::thread_group	typeref:typename:void
create_top_level_includes	asio/tsify.pl	/^sub create_top_level_includes$/;"	s
created	asio/src/examples/cpp03/http/server/reply.cpp	/^const char created[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
created	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string created =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
created	asio/src/examples/cpp03/http/server/reply.hpp	/^    created = 201,$/;"	e	enum:http::server::reply::status_type
created	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char created[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
created	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string created =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
created	asio/src/examples/cpp03/http/server2/reply.hpp	/^    created = 201,$/;"	e	enum:http::server2::reply::status_type
created	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char created[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
created	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string created =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
created	asio/src/examples/cpp03/http/server3/reply.hpp	/^    created = 201,$/;"	e	enum:http::server3::reply::status_type
created	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char created[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
created	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string created =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
created	asio/src/examples/cpp03/http/server4/reply.hpp	/^    created = 201,$/;"	e	enum:http::server4::reply::status_type
created	asio/src/examples/cpp11/http/server/reply.cpp	/^const char created[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
created	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string created =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
created	asio/src/examples/cpp11/http/server/reply.hpp	/^    created = 201,$/;"	e	enum:http::server::reply::status_type
creation	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^  static void creation(asio::execution_context& \/*ctx*\/,$/;"	f	struct:custom_tracking	typeref:typename:void
crlf	asio/src/examples/cpp03/http/server/reply.cpp	/^const char crlf[] = { '\\r', '\\n' };$/;"	v	namespace:http::server::misc_strings	typeref:typename:const char[]
crlf	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char crlf[] = { '\\r', '\\n' };$/;"	v	namespace:http::server2::misc_strings	typeref:typename:const char[]
crlf	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char crlf[] = { '\\r', '\\n' };$/;"	v	namespace:http::server3::misc_strings	typeref:typename:const char[]
crlf	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char crlf[] = { '\\r', '\\n' };$/;"	v	namespace:http::server4::misc_strings	typeref:typename:const char[]
crlf	asio/src/examples/cpp11/http/server/reply.cpp	/^const char crlf[] = { '\\r', '\\n' };$/;"	v	namespace:http::server::misc_strings	typeref:typename:const char[]
current_	asio/include/asio/buffers_iterator.hpp	/^  buffer_sequence_iterator_type current_;$/;"	m	class:asio::buffers_iterator	typeref:typename:buffer_sequence_iterator_type
current_buffer_	asio/include/asio/buffers_iterator.hpp	/^  buffer_type current_buffer_;$/;"	m	class:asio::buffers_iterator	typeref:typename:buffer_type
current_buffer_position_	asio/include/asio/buffers_iterator.hpp	/^  std::size_t current_buffer_position_;$/;"	m	class:asio::buffers_iterator	typeref:typename:std::size_t
current_completion	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^  static completion** current_completion()$/;"	f	struct:custom_tracking	typeref:typename:completion **
custom_alloc_handler	asio/src/examples/cpp03/allocation/server.cpp	/^  custom_alloc_handler(handler_memory& m, Handler h)$/;"	f	class:custom_alloc_handler	file:
custom_alloc_handler	asio/src/examples/cpp03/allocation/server.cpp	/^class custom_alloc_handler$/;"	c	file:
custom_alloc_handler	asio/src/examples/cpp11/allocation/server.cpp	/^  custom_alloc_handler(handler_memory& m, Handler h)$/;"	f	class:custom_alloc_handler	file:
custom_alloc_handler	asio/src/examples/cpp11/allocation/server.cpp	/^class custom_alloc_handler$/;"	c	file:
custom_alloc_handler	asio/src/tests/performance/handler_allocator.hpp	/^  custom_alloc_handler(handler_allocator& a, Handler h)$/;"	f	class:custom_alloc_handler
custom_alloc_handler	asio/src/tests/performance/handler_allocator.hpp	/^class custom_alloc_handler$/;"	c
custom_allocation_timer_handler	asio/src/tests/unit/deadline_timer.cpp	/^  custom_allocation_timer_handler(int* count) : count_(count) {}$/;"	f	struct:custom_allocation_timer_handler	file:
custom_allocation_timer_handler	asio/src/tests/unit/deadline_timer.cpp	/^struct custom_allocation_timer_handler$/;"	s	file:
custom_allocation_timer_handler	asio/src/tests/unit/system_timer.cpp	/^  custom_allocation_timer_handler(int* count) : count_(count) {}$/;"	f	struct:custom_allocation_timer_handler	file:
custom_allocation_timer_handler	asio/src/tests/unit/system_timer.cpp	/^struct custom_allocation_timer_handler$/;"	s	file:
custom_socket_option_level	asio/include/asio/detail/socket_types.hpp	/^const int custom_socket_option_level = 0xA5100000;$/;"	v	namespace:asio::detail	typeref:typename:const int
custom_tracking	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^struct custom_tracking$/;"	s
d_	asio/include/asio/detail/chrono_time_traits.hpp	/^    duration_type d_;$/;"	m	class:asio::detail::chrono_time_traits::posix_time_duration	typeref:typename:duration_type
data	asio/include/asio/basic_streambuf.hpp	/^  const_buffers_type data() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_streambuf	typeref:typename:const_buffers_type
data	asio/include/asio/basic_streambuf.hpp	/^  const_buffers_type data() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_streambuf_ref	typeref:typename:const_buffers_type
data	asio/include/asio/buffer.hpp	/^  const void* data() const ASIO_NOEXCEPT$/;"	f	class:asio::const_buffer	typeref:typename:const void *
data	asio/include/asio/buffer.hpp	/^  const_buffers_type data() const ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:const_buffers_type
data	asio/include/asio/buffer.hpp	/^  const_buffers_type data() const ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:const_buffers_type
data	asio/include/asio/buffer.hpp	/^  const_buffers_type data(std::size_t pos,$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:const_buffers_type
data	asio/include/asio/buffer.hpp	/^  const_buffers_type data(std::size_t pos,$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:const_buffers_type
data	asio/include/asio/buffer.hpp	/^  mutable_buffers_type data(std::size_t pos, std::size_t n) ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:mutable_buffers_type
data	asio/include/asio/buffer.hpp	/^  mutable_buffers_type data(std::size_t pos, std::size_t n) ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:mutable_buffers_type
data	asio/include/asio/buffer.hpp	/^  void* data() const ASIO_NOEXCEPT$/;"	f	class:asio::mutable_buffer	typeref:typename:void *
data	asio/include/asio/detail/buffered_stream_storage.hpp	/^  const_buffer data() const$/;"	f	class:asio::detail::buffered_stream_storage	typeref:typename:const_buffer
data	asio/include/asio/detail/buffered_stream_storage.hpp	/^  mutable_buffer data()$/;"	f	class:asio::detail::buffered_stream_storage	typeref:typename:mutable_buffer
data	asio/include/asio/detail/io_control.hpp	/^  const detail::ioctl_arg_type* data() const$/;"	f	class:asio::detail::io_control::bytes_readable	typeref:typename:const detail::ioctl_arg_type *
data	asio/include/asio/detail/io_control.hpp	/^  detail::ioctl_arg_type* data()$/;"	f	class:asio::detail::io_control::bytes_readable	typeref:typename:detail::ioctl_arg_type *
data	asio/include/asio/detail/socket_option.hpp	/^  const detail::linger_type* data(const Protocol&) const$/;"	f	class:asio::detail::socket_option::linger	typeref:typename:const detail::linger_type *
data	asio/include/asio/detail/socket_option.hpp	/^  const int* data(const Protocol&) const$/;"	f	class:asio::detail::socket_option::boolean	typeref:typename:const int *
data	asio/include/asio/detail/socket_option.hpp	/^  const int* data(const Protocol&) const$/;"	f	class:asio::detail::socket_option::integer	typeref:typename:const int *
data	asio/include/asio/detail/socket_option.hpp	/^  detail::linger_type* data(const Protocol&)$/;"	f	class:asio::detail::socket_option::linger	typeref:typename:detail::linger_type *
data	asio/include/asio/detail/socket_option.hpp	/^  int* data(const Protocol&)$/;"	f	class:asio::detail::socket_option::boolean	typeref:typename:int *
data	asio/include/asio/detail/socket_option.hpp	/^  int* data(const Protocol&)$/;"	f	class:asio::detail::socket_option::integer	typeref:typename:int *
data	asio/include/asio/detail/winsock_init.hpp	/^  struct data$/;"	s	class:asio::detail::winsock_init_base
data	asio/include/asio/generic/basic_endpoint.hpp	/^  const data_type* data() const$/;"	f	class:asio::generic::basic_endpoint	typeref:typename:const data_type *
data	asio/include/asio/generic/basic_endpoint.hpp	/^  data_type* data()$/;"	f	class:asio::generic::basic_endpoint	typeref:typename:data_type *
data	asio/include/asio/generic/detail/endpoint.hpp	/^  asio::detail::socket_addr_type* data()$/;"	f	class:asio::generic::detail::endpoint	typeref:typename:asio::detail::socket_addr_type *
data	asio/include/asio/generic/detail/endpoint.hpp	/^  const asio::detail::socket_addr_type* data() const$/;"	f	class:asio::generic::detail::endpoint	typeref:typename:const asio::detail::socket_addr_type *
data	asio/include/asio/ip/basic_endpoint.hpp	/^  const data_type* data() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:const data_type *
data	asio/include/asio/ip/basic_endpoint.hpp	/^  data_type* data() ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:data_type *
data	asio/include/asio/ip/detail/endpoint.hpp	/^  asio::detail::socket_addr_type* data() ASIO_NOEXCEPT$/;"	f	class:asio::ip::detail::endpoint	typeref:typename:asio::detail::socket_addr_type *
data	asio/include/asio/ip/detail/endpoint.hpp	/^  const asio::detail::socket_addr_type* data() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::detail::endpoint	typeref:typename:const asio::detail::socket_addr_type *
data	asio/include/asio/ip/detail/socket_option.hpp	/^  const int* data(const Protocol&) const$/;"	f	class:asio::ip::detail::socket_option::unicast_hops	typeref:typename:const int *
data	asio/include/asio/ip/detail/socket_option.hpp	/^  const void* data(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:const void *
data	asio/include/asio/ip/detail/socket_option.hpp	/^  const void* data(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:const void *
data	asio/include/asio/ip/detail/socket_option.hpp	/^  const void* data(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_request	typeref:typename:const void *
data	asio/include/asio/ip/detail/socket_option.hpp	/^  const void* data(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::network_interface	typeref:typename:const void *
data	asio/include/asio/ip/detail/socket_option.hpp	/^  int* data(const Protocol&)$/;"	f	class:asio::ip::detail::socket_option::unicast_hops	typeref:typename:int *
data	asio/include/asio/ip/detail/socket_option.hpp	/^  void* data(const Protocol& protocol)$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:void *
data	asio/include/asio/ip/detail/socket_option.hpp	/^  void* data(const Protocol& protocol)$/;"	f	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:void *
data	asio/include/asio/is_read_buffered.hpp	/^struct is_read_buffered_big_type { char data[10]; };$/;"	m	struct:asio::detail::is_read_buffered_big_type	typeref:typename:char[10]
data	asio/include/asio/is_write_buffered.hpp	/^struct is_write_buffered_big_type { char data[10]; };$/;"	m	struct:asio::detail::is_write_buffered_big_type	typeref:typename:char[10]
data	asio/include/asio/local/basic_endpoint.hpp	/^  const data_type* data() const$/;"	f	class:asio::local::basic_endpoint	typeref:typename:const data_type *
data	asio/include/asio/local/basic_endpoint.hpp	/^  data_type* data()$/;"	f	class:asio::local::basic_endpoint	typeref:typename:data_type *
data	asio/include/asio/local/detail/endpoint.hpp	/^  asio::detail::socket_addr_type* data()$/;"	f	class:asio::local::detail::endpoint	typeref:typename:asio::detail::socket_addr_type *
data	asio/include/asio/local/detail/endpoint.hpp	/^  const asio::detail::socket_addr_type* data() const$/;"	f	class:asio::local::detail::endpoint	typeref:typename:const asio::detail::socket_addr_type *
data	asio/src/examples/cpp03/chat/chat_message.hpp	/^  char* data()$/;"	f	class:chat_message	typeref:typename:char *
data	asio/src/examples/cpp03/chat/chat_message.hpp	/^  const char* data() const$/;"	f	class:chat_message	typeref:typename:const char *
data	asio/src/examples/cpp11/chat/chat_message.hpp	/^  char* data()$/;"	f	class:chat_message	typeref:typename:char *
data	asio/src/examples/cpp11/chat/chat_message.hpp	/^  const char* data() const$/;"	f	class:chat_message	typeref:typename:const char *
data	asio/src/tests/unit/archetypes/gettable_socket_option.hpp	/^  PointerType* data(const Protocol&)$/;"	f	class:archetypes::gettable_socket_option	typeref:typename:PointerType *
data	asio/src/tests/unit/archetypes/io_control_command.hpp	/^  void* data()$/;"	f	class:archetypes::io_control_command	typeref:typename:void *
data	asio/src/tests/unit/archetypes/settable_socket_option.hpp	/^  const PointerType* data(const Protocol&) const$/;"	f	class:archetypes::settable_socket_option	typeref:typename:const PointerType *
data_	asio/include/asio/buffer.hpp	/^  const void* data_;$/;"	m	class:asio::const_buffer	typeref:typename:const void *
data_	asio/include/asio/buffer.hpp	/^  void* data_;$/;"	m	class:asio::mutable_buffer	typeref:typename:void *
data_	asio/include/asio/detail/winsock_init.hpp	/^  static data data_;$/;"	m	class:asio::detail::winsock_init	typeref:typename:data
data_	asio/include/asio/detail/winsock_init.hpp	/^winsock_init_base::data winsock_init<Major, Minor>::data_;$/;"	m	class:asio::detail::winsock_init<Major, Minor>	typeref:typename:winsock_init_base::data
data_	asio/include/asio/generic/detail/endpoint.hpp	/^  } data_;$/;"	m	class:asio::generic::detail::endpoint	typeref:union:asio::generic::detail::endpoint::data_union
data_	asio/include/asio/impl/spawn.hpp	/^    shared_ptr<spawn_data<Handler, Function> > data_;$/;"	m	struct:asio::detail::coro_entry_point	typeref:typename:shared_ptr<spawn_data<Handler,Function>>
data_	asio/include/asio/impl/spawn.hpp	/^    shared_ptr<spawn_data<Handler, Function> > data_;$/;"	m	struct:asio::detail::spawn_helper	typeref:typename:shared_ptr<spawn_data<Handler,Function>>
data_	asio/include/asio/ip/detail/endpoint.hpp	/^  } data_;$/;"	m	class:asio::ip::detail::endpoint	typeref:union:asio::ip::detail::endpoint::data_union
data_	asio/include/asio/local/detail/endpoint.hpp	/^  } data_;$/;"	m	class:asio::local::detail::endpoint	typeref:union:asio::local::detail::endpoint::data_union
data_	asio/src/examples/cpp03/allocation/server.cpp	/^  boost::array<char, 1024> data_;$/;"	m	class:session	typeref:typename:boost::array<char,1024>	file:
data_	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  boost::shared_ptr<std::vector<char> > data_;$/;"	m	class:shared_const_buffer	typeref:typename:boost::shared_ptr<std::vector<char>>	file:
data_	asio/src/examples/cpp03/chat/chat_message.hpp	/^  char data_[header_length + max_body_length];$/;"	m	class:chat_message	typeref:typename:char[]
data_	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  char data_[max_length];$/;"	m	class:session	typeref:typename:char[]	file:
data_	asio/src/examples/cpp03/echo/async_udp_echo_server.cpp	/^  char data_[max_length];$/;"	m	class:server	typeref:typename:char[]	file:
data_	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  boost::array<char, 1024> data_;$/;"	m	class:server	typeref:typename:boost::array<char,1024>	file:
data_	asio/src/examples/cpp03/local/connect_pair.cpp	/^  boost::array<char, 512> data_;$/;"	m	class:uppercase_filter	typeref:typename:boost::array<char,512>	file:
data_	asio/src/examples/cpp03/local/stream_server.cpp	/^  boost::array<char, 1024> data_;$/;"	m	class:session	typeref:typename:boost::array<char,1024>	file:
data_	asio/src/examples/cpp03/multicast/receiver.cpp	/^  char data_[max_length];$/;"	m	class:receiver	typeref:typename:char[]	file:
data_	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  boost::array<char, 128> data_;$/;"	m	class:third_party_lib::session	typeref:typename:boost::array<char,128>	file:
data_	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  char data_[control_request_size];$/;"	m	class:control_request	typeref:typename:char[]
data_	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  char data_[frame_size];$/;"	m	class:frame	typeref:typename:char[]
data_	asio/src/examples/cpp03/ssl/server.cpp	/^  char data_[max_length];$/;"	m	class:session	typeref:typename:char[]	file:
data_	asio/src/examples/cpp11/allocation/server.cpp	/^  std::array<char, 1024> data_;$/;"	m	class:session	typeref:typename:std::array<char,1024>	file:
data_	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  std::shared_ptr<std::vector<char> > data_;$/;"	m	class:shared_const_buffer	typeref:typename:std::shared_ptr<std::vector<char>>	file:
data_	asio/src/examples/cpp11/chat/chat_message.hpp	/^  char data_[header_length + max_body_length];$/;"	m	class:chat_message	typeref:typename:char[]
data_	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  char data_[max_length];$/;"	m	class:session	typeref:typename:char[]	file:
data_	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^  char data_[max_length];$/;"	m	class:server	typeref:typename:char[]	file:
data_	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^  std::array<char, 1024> data_;$/;"	m	class:server	typeref:typename:std::array<char,1024>	file:
data_	asio/src/examples/cpp11/local/connect_pair.cpp	/^  std::array<char, 512> data_;$/;"	m	class:uppercase_filter	typeref:typename:std::array<char,512>	file:
data_	asio/src/examples/cpp11/local/stream_server.cpp	/^  std::array<char, 1024> data_;$/;"	m	class:session	typeref:typename:std::array<char,1024>	file:
data_	asio/src/examples/cpp11/multicast/receiver.cpp	/^  std::array<char, 1024> data_;$/;"	m	class:receiver	typeref:typename:std::array<char,1024>	file:
data_	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  std::array<char, 128> data_;$/;"	m	class:third_party_lib::session	typeref:typename:std::array<char,128>	file:
data_	asio/src/examples/cpp11/ssl/server.cpp	/^  char data_[1024];$/;"	m	class:session	typeref:typename:char[1024]	file:
data_	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  char data_[max_length];$/;"	m	class:session	typeref:typename:char[]	file:
data_	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^  char data_[max_length];$/;"	m	class:server	typeref:typename:char[]	file:
data_	asio/src/tests/unit/read.cpp	/^  char data_[max_length];$/;"	m	class:test_stream	typeref:typename:char[]	file:
data_	asio/src/tests/unit/read_at.cpp	/^  char data_[max_length];$/;"	m	class:test_random_access_device	typeref:typename:char[]	file:
data_	asio/src/tests/unit/read_until.cpp	/^  char data_[max_length];$/;"	m	class:test_stream	typeref:typename:char[]	file:
data_	asio/src/tests/unit/write.cpp	/^  char data_[max_length];$/;"	m	class:test_stream	typeref:typename:char[]	file:
data_	asio/src/tests/unit/write_at.cpp	/^  char data_[max_length];$/;"	m	class:test_random_access_device	typeref:typename:char[]	file:
data_type	asio/include/asio/generic/basic_endpoint.hpp	/^  typedef asio::detail::socket_addr_type data_type;$/;"	t	class:asio::generic::basic_endpoint	typeref:typename:asio::detail::socket_addr_type
data_type	asio/include/asio/generic/basic_endpoint.hpp	/^  typedef implementation_defined data_type;$/;"	t	class:asio::generic::basic_endpoint	typeref:typename:implementation_defined
data_type	asio/include/asio/ip/basic_endpoint.hpp	/^  typedef asio::detail::socket_addr_type data_type;$/;"	t	class:asio::ip::basic_endpoint	typeref:typename:asio::detail::socket_addr_type
data_type	asio/include/asio/ip/basic_endpoint.hpp	/^  typedef implementation_defined data_type;$/;"	t	class:asio::ip::basic_endpoint	typeref:typename:implementation_defined
data_type	asio/include/asio/local/basic_endpoint.hpp	/^  typedef asio::detail::socket_addr_type data_type;$/;"	t	class:asio::local::basic_endpoint	typeref:typename:asio::detail::socket_addr_type
data_type	asio/include/asio/local/basic_endpoint.hpp	/^  typedef implementation_defined data_type;$/;"	t	class:asio::local::basic_endpoint	typeref:typename:implementation_defined
data_union	asio/include/asio/generic/detail/endpoint.hpp	/^  union data_union$/;"	u	class:asio::generic::detail::endpoint
data_union	asio/include/asio/ip/detail/endpoint.hpp	/^  union data_union$/;"	u	class:asio::ip::detail::endpoint
data_union	asio/include/asio/local/detail/endpoint.hpp	/^  union data_union$/;"	u	class:asio::local::detail::endpoint
datagram_oriented	asio/include/asio/detail/socket_ops.hpp	/^  datagram_oriented = 32,$/;"	e	enum:asio::detail::socket_ops::__anonc4fdc2e00103
datagram_protocol	asio/include/asio/generic/datagram_protocol.hpp	/^  datagram_protocol(const Protocol& source_protocol)$/;"	f	class:asio::generic::datagram_protocol
datagram_protocol	asio/include/asio/generic/datagram_protocol.hpp	/^  datagram_protocol(int address_family, int socket_protocol)$/;"	f	class:asio::generic::datagram_protocol
datagram_protocol	asio/include/asio/generic/datagram_protocol.hpp	/^class datagram_protocol$/;"	c	namespace:asio::generic
datagram_protocol	asio/include/asio/local/datagram_protocol.hpp	/^class datagram_protocol$/;"	c	namespace:asio::local
date_time	asio/include/asio/detail/date_time_fwd.hpp	/^namespace date_time {$/;"	n	namespace:boost
deadline_	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  steady_timer deadline_;$/;"	m	class:client	typeref:typename:steady_timer	file:
deadline_	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  steady_timer deadline_;$/;"	m	class:client	typeref:typename:steady_timer	file:
deadline_timer	asio/include/asio/deadline_timer.hpp	/^typedef basic_deadline_timer<boost::posix_time::ptime> deadline_timer;$/;"	t	namespace:asio	typeref:typename:basic_deadline_timer<boost::posix_time::ptime>
deadline_timer_async_result_test	asio/src/tests/unit/deadline_timer.cpp	/^void deadline_timer_async_result_test()$/;"	f	typeref:typename:void
deadline_timer_cancel_test	asio/src/tests/unit/deadline_timer.cpp	/^void deadline_timer_cancel_test()$/;"	f	typeref:typename:void
deadline_timer_custom_allocation_test	asio/src/tests/unit/deadline_timer.cpp	/^void deadline_timer_custom_allocation_test()$/;"	f	typeref:typename:void
deadline_timer_move_test	asio/src/tests/unit/deadline_timer.cpp	/^void deadline_timer_move_test()$/;"	f	typeref:typename:void
deadline_timer_service	asio/include/asio/detail/deadline_timer_service.hpp	/^  deadline_timer_service(execution_context& context)$/;"	f	class:asio::detail::deadline_timer_service
deadline_timer_service	asio/include/asio/detail/deadline_timer_service.hpp	/^class deadline_timer_service$/;"	c	namespace:asio::detail
deadline_timer_test	asio/src/tests/unit/deadline_timer.cpp	/^void deadline_timer_test()$/;"	f	typeref:typename:void
deadline_timer_thread_test	asio/src/tests/unit/deadline_timer.cpp	/^void deadline_timer_thread_test()$/;"	f	typeref:typename:void
deallocate	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  void deallocate(T* p, std::size_t n)$/;"	f	class:asio::detail::hook_allocator	typeref:typename:void
deallocate	asio/include/asio/detail/handler_alloc_helpers.hpp	/^inline void deallocate(void* p, std::size_t s, Handler& h)$/;"	f	namespace:asio_handler_alloc_helpers	typeref:typename:void
deallocate	asio/include/asio/detail/recycling_allocator.hpp	/^  void deallocate(T* p, std::size_t n)$/;"	f	class:asio::detail::recycling_allocator	typeref:typename:void
deallocate	asio/include/asio/detail/thread_info_base.hpp	/^  static void deallocate(Purpose, thread_info_base* this_thread,$/;"	f	class:asio::detail::thread_info_base	typeref:typename:void
deallocate	asio/include/asio/detail/thread_info_base.hpp	/^  static void deallocate(thread_info_base* this_thread,$/;"	f	class:asio::detail::thread_info_base	typeref:typename:void
deallocate	asio/src/examples/cpp03/allocation/server.cpp	/^  void deallocate(T* p, std::size_t \/*n*\/) const$/;"	f	class:handler_allocator	typeref:typename:void	file:
deallocate	asio/src/examples/cpp03/allocation/server.cpp	/^  void deallocate(void* pointer)$/;"	f	class:handler_memory	typeref:typename:void	file:
deallocate	asio/src/examples/cpp11/allocation/server.cpp	/^  void deallocate(T* p, std::size_t \/*n*\/) const$/;"	f	class:handler_allocator	typeref:typename:void	file:
deallocate	asio/src/examples/cpp11/allocation/server.cpp	/^  void deallocate(void* pointer)$/;"	f	class:handler_memory	typeref:typename:void	file:
deallocate	asio/src/tests/latency/allocator.hpp	/^  void deallocate(void* p)$/;"	f	class:allocator	typeref:typename:void
deallocate	asio/src/tests/performance/handler_allocator.hpp	/^  void deallocate(void* pointer)$/;"	f	class:handler_allocator	typeref:typename:void
debug	asio/include/asio/socket_base.hpp	/^    ASIO_OS_DEF(SOL_SOCKET), ASIO_OS_DEF(SO_DEBUG)> debug;$/;"	t	class:asio::socket_base
debug	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined debug;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
debug_check_	asio/include/asio/buffer.hpp	/^  asio::detail::function<void()> debug_check_;$/;"	m	class:asio::const_buffer	typeref:typename:asio::detail::function<void ()>
debug_check_	asio/include/asio/buffer.hpp	/^  asio::detail::function<void()> debug_check_;$/;"	m	class:asio::mutable_buffer	typeref:typename:asio::detail::function<void ()>
decode	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  unsigned short decode(int a, int b) const$/;"	f	class:icmp_header	typeref:typename:unsigned short
decode	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned short decode(int a, int b) const$/;"	f	class:ipv4_header	typeref:typename:unsigned short
decode_header	asio/src/examples/cpp03/chat/chat_message.hpp	/^  bool decode_header()$/;"	f	class:chat_message	typeref:typename:bool
decode_header	asio/src/examples/cpp11/chat/chat_message.hpp	/^  bool decode_header()$/;"	f	class:chat_message	typeref:typename:bool
decrement	asio/include/asio/buffers_iterator.hpp	/^  void decrement()$/;"	f	class:asio::buffers_iterator	typeref:typename:void
decrement_to_zero	asio/src/tests/unit/deadline_timer.cpp	/^void decrement_to_zero(asio::deadline_timer* t, int* count)$/;"	f	typeref:typename:void
decrement_to_zero	asio/src/tests/unit/io_context.cpp	/^void decrement_to_zero(io_context* ioc, int* count)$/;"	f	typeref:typename:void
decrement_to_zero	asio/src/tests/unit/system_timer.cpp	/^void decrement_to_zero(asio::system_timer* t, int* count)$/;"	f	typeref:typename:void
default_buffer_size	asio/include/asio/buffered_read_stream.hpp	/^  static const std::size_t default_buffer_size = implementation_defined;$/;"	m	class:asio::buffered_read_stream	typeref:typename:const std::size_t
default_buffer_size	asio/include/asio/buffered_write_stream.hpp	/^  static const std::size_t default_buffer_size = implementation_defined;$/;"	m	class:asio::buffered_write_stream	typeref:typename:const std::size_t
default_completion_token	asio/include/asio/async_result.hpp	/^struct default_completion_token$/;"	s	namespace:asio
default_completion_token_check	asio/include/asio/async_result.hpp	/^struct default_completion_token_check$/;"	s	namespace:asio::detail
default_completion_token_impl	asio/include/asio/async_result.hpp	/^struct default_completion_token_impl$/;"	s	namespace:asio::detail
default_completion_token_impl	asio/include/asio/async_result.hpp	/^struct default_completion_token_impl<T,$/;"	s	namespace:asio::detail
default_completion_token_t	asio/include/asio/async_result.hpp	/^using default_completion_token_t = typename default_completion_token<T>::type;$/;"	t	namespace:asio	typeref:typename:default_completion_token<T>::type
default_completion_token_type	asio/include/asio/use_awaitable.hpp	/^    typedef use_awaitable_t default_completion_token_type;$/;"	t	struct:asio::use_awaitable_t::executor_with_default	typeref:typename:use_awaitable_t
default_connect_condition	asio/include/asio/impl/connect.hpp	/^  struct default_connect_condition$/;"	s	namespace:asio::detail
default_fd_set_size	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  enum { default_fd_set_size = 1024 };$/;"	e	enum:asio::detail::win_fd_set_adapter::__anon04c085e80103
default_gqcs_timeout	asio/include/asio/detail/win_iocp_io_context.hpp	/^    default_gqcs_timeout = 500,$/;"	e	enum:asio::detail::win_iocp_io_context::__anon22c6e4590103
default_io_context_	asio/include/asio/basic_socket_streambuf.hpp	/^  shared_ptr<io_context> default_io_context_;$/;"	m	class:asio::detail::socket_streambuf_io_context	typeref:typename:shared_ptr<io_context>
default_max_transfer_size	asio/include/asio/completion_condition.hpp	/^enum default_max_transfer_size_t { default_max_transfer_size = 65536 };$/;"	e	enum:asio::detail::default_max_transfer_size_t
default_max_transfer_size_t	asio/include/asio/completion_condition.hpp	/^enum default_max_transfer_size_t { default_max_transfer_size = 65536 };$/;"	g	namespace:asio::detail
default_spawn_handler	asio/include/asio/impl/spawn.hpp	/^  inline void default_spawn_handler() {}$/;"	f	namespace:asio::detail	typeref:typename:void
default_tag	asio/include/asio/detail/thread_info_base.hpp	/^  struct default_tag$/;"	s	class:asio::detail::thread_info_base
default_workarounds	asio/include/asio/ssl/context_base.hpp	/^  static const long default_workarounds = implementation_defined;$/;"	m	class:asio::ssl::context_base	typeref:typename:const long
defer	asio/include/asio/detail/impl/strand_executor_service.hpp	/^void strand_executor_service::defer(const implementation_type& impl,$/;"	f	class:asio::detail::strand_executor_service	typeref:typename:void
defer	asio/include/asio/detail/io_object_executor.hpp	/^  void defer(ASIO_MOVE_ARG(F) f, const A& a) const$/;"	f	class:asio::detail::io_object_executor	typeref:typename:void
defer	asio/include/asio/impl/executor.hpp	/^  void defer(ASIO_MOVE_ARG(function) f)$/;"	f	class:asio::executor::impl	typeref:typename:void
defer	asio/include/asio/impl/executor.hpp	/^void executor::defer(ASIO_MOVE_ARG(Function) f,$/;"	f	class:asio::executor	typeref:typename:void
defer	asio/include/asio/impl/io_context.hpp	/^void io_context::executor_type::defer($/;"	f	class:asio::io_context::executor_type	typeref:typename:void
defer	asio/include/asio/impl/system_executor.hpp	/^void system_executor::defer($/;"	f	class:asio::system_executor	typeref:typename:void
defer	asio/include/asio/impl/thread_pool.hpp	/^void thread_pool::executor_type::defer($/;"	f	class:asio::thread_pool::executor_type	typeref:typename:void
defer	asio/include/asio/impl/use_future.hpp	/^  void defer(ASIO_MOVE_ARG(F) f, const A& a) const$/;"	f	class:asio::detail::promise_executor	typeref:typename:void
defer	asio/include/asio/io_context_strand.hpp	/^  void defer(ASIO_MOVE_ARG(Function) f, const Allocator& a) const$/;"	f	class:asio::io_context::strand	typeref:typename:void
defer	asio/include/asio/strand.hpp	/^  void defer(ASIO_MOVE_ARG(Function) f, const Allocator& a) const$/;"	f	class:asio::strand	typeref:typename:void
defer	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    void defer(const Function& f, const Allocator&) const$/;"	f	class:handler_priority_queue::executor	typeref:typename:void	file:
defer	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void defer(Func&& f, const Alloc& a) const$/;"	f	class:fork_executor	typeref:typename:void	file:
defer	asio/src/examples/cpp11/executors/pipeline.cpp	/^  void defer(Func&& f, const Alloc& a) const$/;"	f	class:thread_executor	typeref:typename:void	file:
defer	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    void defer(Func&& f, const Alloc& a) const$/;"	f	class:priority_scheduler::executor_type	typeref:typename:void	file:
defer	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    void defer(Function f, const Allocator&) const$/;"	f	class:handler_priority_queue::executor	typeref:typename:void	file:
defer	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void defer(Func&& f, const Alloc& a) const$/;"	f	class:fork_executor	typeref:typename:void	file:
defer	asio/src/examples/cpp14/executors/pipeline.cpp	/^  void defer(Func&& f, const Alloc& a) const$/;"	f	class:thread_executor	typeref:typename:void	file:
defer	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    void defer(Func&& f, const Alloc& a) const$/;"	f	class:priority_scheduler::executor_type	typeref:typename:void	file:
delay_timer_	asio/src/examples/cpp11/operations/composed_6.cpp	/^      std::unique_ptr<asio::steady_timer> delay_timer_;$/;"	m	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:std::unique_ptr<asio::steady_timer>	file:
delay_timer_	asio/src/examples/cpp11/operations/composed_7.cpp	/^  std::unique_ptr<asio::steady_timer> delay_timer_;$/;"	m	struct:async_write_messages_implementation	typeref:typename:std::unique_ptr<asio::steady_timer>	file:
delay_timer_	asio/src/examples/cpp11/operations/composed_8.cpp	/^  std::unique_ptr<asio::steady_timer> delay_timer_;$/;"	m	struct:async_write_messages_implementation	typeref:typename:std::unique_ptr<asio::steady_timer>	file:
delay_timer_	asio/src/examples/cpp14/operations/composed_6.cpp	/^      std::unique_ptr<asio::steady_timer> delay_timer_;$/;"	m	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	typeref:typename:std::unique_ptr<asio::steady_timer>	file:
delim_	asio/include/asio/impl/read_until.hpp	/^    char delim_;$/;"	m	class:asio::detail::read_until_delim_op_v1	typeref:typename:char
delim_	asio/include/asio/impl/read_until.hpp	/^    char delim_;$/;"	m	class:asio::detail::read_until_delim_op_v2	typeref:typename:char
delim_	asio/include/asio/impl/read_until.hpp	/^    std::string delim_;$/;"	m	class:asio::detail::read_until_delim_string_op_v1	typeref:typename:std::string
delim_	asio/include/asio/impl/read_until.hpp	/^    std::string delim_;$/;"	m	class:asio::detail::read_until_delim_string_op_v2	typeref:typename:std::string
deliver	asio/src/examples/cpp03/chat/chat_server.cpp	/^  void deliver(const chat_message& msg)$/;"	f	class:chat_room	typeref:typename:void	file:
deliver	asio/src/examples/cpp03/chat/chat_server.cpp	/^  void deliver(const chat_message& msg)$/;"	f	class:chat_session	typeref:typename:void	file:
deliver	asio/src/examples/cpp03/timeouts/server.cpp	/^  void deliver(const std::string& msg)$/;"	f	class:channel	typeref:typename:void	file:
deliver	asio/src/examples/cpp03/timeouts/server.cpp	/^  void deliver(const std::string& msg)$/;"	f	class:tcp_session	typeref:typename:void	file:
deliver	asio/src/examples/cpp03/timeouts/server.cpp	/^  void deliver(const std::string& msg)$/;"	f	class:udp_broadcaster	typeref:typename:void	file:
deliver	asio/src/examples/cpp11/chat/chat_server.cpp	/^  void deliver(const chat_message& msg)$/;"	f	class:chat_room	typeref:typename:void	file:
deliver	asio/src/examples/cpp11/chat/chat_server.cpp	/^  void deliver(const chat_message& msg)$/;"	f	class:chat_session	typeref:typename:void	file:
deliver	asio/src/examples/cpp11/timeouts/server.cpp	/^  void deliver(const std::string& msg) override$/;"	f	class:tcp_session	typeref:typename:void	file:
deliver	asio/src/examples/cpp11/timeouts/server.cpp	/^  void deliver(const std::string& msg)$/;"	f	class:channel	typeref:typename:void	file:
deliver	asio/src/examples/cpp11/timeouts/server.cpp	/^  void deliver(const std::string& msg)$/;"	f	class:udp_broadcaster	typeref:typename:void	file:
deliver	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  void deliver(const std::string& msg)$/;"	f	class:chat_room	typeref:typename:void	file:
deliver	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  void deliver(const std::string& msg)$/;"	f	class:chat_session	typeref:typename:void	file:
dependent_type	asio/include/asio/detail/dependent_type.hpp	/^struct dependent_type$/;"	s	namespace:asio::detail
deposit	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^  void deposit(int amount)$/;"	f	class:bank_account	typeref:typename:void	file:
deposit	asio/src/examples/cpp11/executors/bank_account_2.cpp	/^  void deposit(int amount)$/;"	f	class:bank_account	typeref:typename:void	file:
deposit	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^  void deposit(int amount)$/;"	f	class:bank_account	typeref:typename:void	file:
deposit	asio/src/examples/cpp14/executors/bank_account_2.cpp	/^  void deposit(int amount)$/;"	f	class:bank_account	typeref:typename:void	file:
deref_connect_result	asio/include/asio/impl/connect.hpp	/^  inline typename Protocol::endpoint deref_connect_result($/;"	f	namespace:asio::detail	typeref:typename:Protocol::endpoint
dereference	asio/include/asio/buffers_iterator.hpp	/^  reference dereference() const$/;"	f	class:asio::buffers_iterator	typeref:typename:reference
dereference	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  const basic_resolver_entry<InternetProtocol>& dereference() const$/;"	f	class:asio::ip::basic_resolver_iterator	typeref:typename:const basic_resolver_entry<InternetProtocol> &
deregister_handler	asio/src/examples/cpp11/executors/actor.cpp	/^  void deregister_handler(void (Actor::* mf)(Message, actor_address))$/;"	f	class:actor	typeref:typename:void	file:
deregister_handler	asio/src/examples/cpp14/executors/actor.cpp	/^  void deregister_handler(void (Actor::* mf)(Message, actor_address))$/;"	f	class:actor	typeref:typename:void	file:
descriptor	asio/include/asio/posix/descriptor.hpp	/^typedef basic_descriptor<> descriptor;$/;"	t	namespace:asio::posix	typeref:typename:basic_descriptor<>
descriptor_	asio/include/asio/detail/descriptor_read_op.hpp	/^  int descriptor_;$/;"	m	class:asio::detail::descriptor_read_op_base	typeref:typename:int
descriptor_	asio/include/asio/detail/descriptor_write_op.hpp	/^  int descriptor_;$/;"	m	class:asio::detail::descriptor_write_op_base	typeref:typename:int
descriptor_	asio/include/asio/detail/epoll_reactor.hpp	/^    int descriptor_;$/;"	m	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:int
descriptor_	asio/include/asio/detail/kqueue_reactor.hpp	/^    int descriptor_;$/;"	m	struct:asio::detail::kqueue_reactor::descriptor_state	typeref:typename:int
descriptor_	asio/include/asio/detail/reactive_descriptor_service.hpp	/^    int descriptor_;$/;"	m	class:asio::detail::reactive_descriptor_service::implementation_type	typeref:typename:int
descriptor_base	asio/include/asio/posix/descriptor_base.hpp	/^class descriptor_base$/;"	c	namespace:asio::posix
descriptor_ops	asio/include/asio/detail/descriptor_ops.hpp	/^namespace descriptor_ops {$/;"	n	namespace:asio::detail
descriptor_read_op	asio/include/asio/detail/descriptor_read_op.hpp	/^  descriptor_read_op(int descriptor, const MutableBufferSequence& buffers,$/;"	f	class:asio::detail::descriptor_read_op
descriptor_read_op	asio/include/asio/detail/descriptor_read_op.hpp	/^class descriptor_read_op$/;"	c	namespace:asio::detail
descriptor_read_op_base	asio/include/asio/detail/descriptor_read_op.hpp	/^  descriptor_read_op_base(int descriptor,$/;"	f	class:asio::detail::descriptor_read_op_base
descriptor_read_op_base	asio/include/asio/detail/descriptor_read_op.hpp	/^class descriptor_read_op_base : public reactor_op$/;"	c	namespace:asio::detail
descriptor_service_	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  reactive_descriptor_service descriptor_service_;$/;"	m	class:asio::detail::reactive_serial_port_service	typeref:typename:reactive_descriptor_service
descriptor_state	asio/include/asio/detail/epoll_reactor.hpp	/^  class descriptor_state : operation$/;"	c	class:asio::detail::epoll_reactor
descriptor_state	asio/include/asio/detail/kqueue_reactor.hpp	/^    descriptor_state(bool locking) : mutex_(locking) {}$/;"	f	struct:asio::detail::kqueue_reactor::descriptor_state
descriptor_state	asio/include/asio/detail/kqueue_reactor.hpp	/^  struct descriptor_state$/;"	s	class:asio::detail::kqueue_reactor
descriptor_write_op	asio/include/asio/detail/descriptor_write_op.hpp	/^  descriptor_write_op(int descriptor, const ConstBufferSequence& buffers,$/;"	f	class:asio::detail::descriptor_write_op
descriptor_write_op	asio/include/asio/detail/descriptor_write_op.hpp	/^class descriptor_write_op$/;"	c	namespace:asio::detail
descriptor_write_op_base	asio/include/asio/detail/descriptor_write_op.hpp	/^  descriptor_write_op_base(int descriptor,$/;"	f	class:asio::detail::descriptor_write_op_base
descriptor_write_op_base	asio/include/asio/detail/descriptor_write_op.hpp	/^class descriptor_write_op_base : public reactor_op$/;"	c	namespace:asio::detail
destination_	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^  Endpoint destination_;$/;"	m	class:asio::detail::reactive_socket_sendto_op_base	typeref:typename:Endpoint
destination_	asio/src/examples/cpp03/icmp/ping.cpp	/^  icmp::endpoint destination_;$/;"	m	class:pinger	typeref:typename:icmp::endpoint	file:
destination_address	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  asio::ip::address_v4 destination_address() const$/;"	f	class:ipv4_header	typeref:typename:asio::ip::address_v4
destination_unreachable	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  enum { echo_reply = 0, destination_unreachable = 3, source_quench = 4,$/;"	e	enum:icmp_header::__anon3193b0390103
destroy	asio/include/asio/detail/deadline_timer_service.hpp	/^  void destroy(implementation_type& impl)$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:void
destroy	asio/include/asio/detail/executor_function.hpp	/^  void destroy()$/;"	f	class:asio::detail::executor_function_base	typeref:typename:void
destroy	asio/include/asio/detail/null_socket_service.hpp	/^  void destroy(implementation_type&)$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
destroy	asio/include/asio/detail/object_pool.hpp	/^  static void destroy(Object* o)$/;"	f	class:asio::detail::object_pool_access	typeref:typename:void
destroy	asio/include/asio/detail/op_queue.hpp	/^  static void destroy(Operation* o)$/;"	f	class:asio::detail::op_queue_access	typeref:typename:void
destroy	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  void destroy(implementation_type& impl)$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:void
destroy	asio/include/asio/detail/scheduler_operation.hpp	/^  void destroy()$/;"	f	class:asio::detail::ASIO_INHERIT_TRACKED_HANDLER	typeref:typename:void
destroy	asio/include/asio/detail/win_iocp_operation.hpp	/^  void destroy()$/;"	f	class:asio::detail::win_iocp_operation	typeref:typename:void
destroy	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  void destroy(implementation_type& impl)$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:void
destroy	asio/include/asio/detail/winrt_resolver_service.hpp	/^  void destroy(implementation_type&)$/;"	f	class:asio::detail::winrt_resolver_service	typeref:typename:void
destroy	asio/include/asio/executor.hpp	/^  void destroy() ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:void
destroy	asio/include/asio/impl/awaitable.hpp	/^  void destroy()$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void
destroy	asio/include/asio/impl/executor.hpp	/^  void destroy() ASIO_NOEXCEPT$/;"	f	class:asio::executor::impl	typeref:typename:void
destroy	asio/src/examples/cpp03/services/logger_service.hpp	/^  void destroy(impl_type& impl)$/;"	f	class:services::logger_service	typeref:typename:void
destroy	asio/src/tests/performance/server.cpp	/^  static void destroy(session* s)$/;"	f	class:session	typeref:typename:void	file:
destroy_list	asio/include/asio/detail/object_pool.hpp	/^  void destroy_list(Object* list)$/;"	f	class:asio::detail::object_pool	typeref:typename:void
detach_thread	asio/include/asio/impl/awaitable.hpp	/^  awaitable_thread<Executor>* detach_thread() noexcept$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:awaitable_thread<Executor> *
detached	asio/include/asio/detached.hpp	/^constexpr detached_t detached;$/;"	v	namespace:asio	typeref:typename:detached_t
detached_handler	asio/include/asio/impl/detached.hpp	/^    detached_handler(detached_t)$/;"	f	class:asio::detail::detached_handler
detached_handler	asio/include/asio/impl/detached.hpp	/^  class detached_handler$/;"	c	namespace:asio::detail
detached_t	asio/include/asio/detached.hpp	/^  ASIO_CONSTEXPR detached_t()$/;"	f	class:asio::detached_t	typeref:typename:ASIO_CONSTEXPR
detached_t	asio/include/asio/detached.hpp	/^class detached_t$/;"	c	namespace:asio
detail	asio/include/asio/associated_allocator.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/associated_executor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/async_result.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/awaitable.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/basic_io_object.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/basic_socket_iostream.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/basic_socket_streambuf.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/bind_executor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/buffer.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/buffers_iterator.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/co_spawn.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/completion_condition.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/connect.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/coroutine.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/array.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/atomic_count.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/base_from_completion_cond.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/bind_handler.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/buffer_resize_guard.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/buffered_stream_storage.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/call_stack.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/chrono_time_traits.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/completion_handler.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/conditionally_enabled_event.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/consuming_buffers.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/deadline_timer_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/dependent_type.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/descriptor_ops.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/descriptor_read_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/descriptor_write_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/dev_poll_reactor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/epoll_reactor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/event.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/eventfd_select_interrupter.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/executor_function.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/executor_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/fd_set_adapter.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/fenced_block.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/functional.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/gcc_sync_fenced_block.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/global.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/handler_alloc_helpers.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/handler_tracking.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/handler_type_requirements.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/handler_work.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/hash_map.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/impl/dev_poll_reactor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/impl/epoll_reactor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/impl/kqueue_reactor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/impl/select_reactor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/impl/service_registry.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/impl/strand_executor_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/impl/strand_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/impl/win_iocp_io_context.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/impl/winrt_timer_scheduler.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/io_control.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/io_object_executor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/io_object_impl.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/is_buffer_sequence.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/is_executor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/keyword_tss_ptr.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/kqueue_reactor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/local_free_on_block_exit.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/macos_fenced_block.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/memory.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/non_const_lvalue.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/noncopyable.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/null_event.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/null_fenced_block.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/null_global.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/null_mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/null_reactor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/null_signal_blocker.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/null_socket_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/null_static_mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/null_thread.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/null_tss_ptr.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/object_pool.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/old_win_sdk_compat.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/op_queue.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/operation.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/pipe_select_interrupter.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/posix_event.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/posix_global.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/posix_mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/posix_signal_blocker.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/posix_static_mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/posix_thread.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/posix_tss_ptr.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_descriptor_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_null_buffers_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_serial_port_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_socket_send_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_socket_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_socket_service_base.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactive_wait_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactor_fwd.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactor_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/reactor_op_queue.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/recycling_allocator.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/resolve_endpoint_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/resolve_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/resolve_query_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/resolver_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/resolver_service_base.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/scheduler.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/scheduler_operation.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/scheduler_thread_info.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/scoped_lock.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/scoped_ptr.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/select_interrupter.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/select_reactor.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/service_registry.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/signal_blocker.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/signal_handler.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/signal_init.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/signal_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/signal_set_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/socket_holder.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/socket_ops.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/socket_option.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/socket_select_interrupter.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/socket_types.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/solaris_fenced_block.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/static_mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/std_event.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/std_fenced_block.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/std_global.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/std_mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/std_static_mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/std_thread.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/strand_executor_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/strand_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/thread.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/thread_context.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/thread_group.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/thread_info_base.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/throw_error.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/throw_exception.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/timer_queue.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/timer_queue_base.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/timer_queue_ptime.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/timer_queue_set.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/timer_scheduler_fwd.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/tss_ptr.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/wait_handler.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/wait_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_event.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_fd_set_adapter.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_fenced_block.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_global.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_handle_read_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_handle_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_handle_write_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_io_context.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_null_buffers_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_operation.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_overlapped_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_socket_send_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_socket_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_thread_info.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_iocp_wait_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_object_handle_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_static_mutex.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_thread.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/win_tss_ptr.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winapp_thread.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/wince_thread.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_async_manager.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_async_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_resolve_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_resolver_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_socket_connect_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_socket_recv_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_socket_send_op.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_ssocket_service.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winrt_utils.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/winsock_init.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/work_dispatcher.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/detail/wrapped_handler.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/execution_context.hpp	/^namespace detail { class service_registry; }$/;"	n	namespace:asio
detail	asio/include/asio/execution_context.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/generic/detail/endpoint.hpp	/^namespace detail {$/;"	n	namespace:asio::generic
detail	asio/include/asio/impl/awaitable.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/impl/buffered_read_stream.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/impl/buffered_write_stream.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/impl/co_spawn.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/impl/compose.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/impl/connect.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/impl/defer.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/impl/detached.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/impl/dispatch.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/impl/post.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/impl/read.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/impl/read_at.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/impl/read_until.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/impl/redirect_error.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/impl/spawn.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/impl/use_awaitable.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/impl/use_future.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/impl/write.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/impl/write_at.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/io_context.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/ip/detail/endpoint.hpp	/^namespace detail {$/;"	n	namespace:asio::ip
detail	asio/include/asio/ip/detail/socket_option.hpp	/^namespace detail {$/;"	n	namespace:asio::ip
detail	asio/include/asio/is_read_buffered.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/is_write_buffered.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/include/asio/local/detail/endpoint.hpp	/^namespace detail {$/;"	n	namespace:asio::local
detail	asio/include/asio/read_until.hpp	/^namespace detail$/;"	n	namespace:asio
detail	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/ssl/detail/engine.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/ssl/detail/handshake_op.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/ssl/detail/io.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/ssl/detail/openssl_init.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/ssl/detail/password_callback.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/ssl/detail/read_op.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/ssl/detail/shutdown_op.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/ssl/detail/stream_core.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/ssl/detail/verify_callback.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/ssl/detail/write_op.hpp	/^namespace detail {$/;"	n	namespace:asio::ssl
detail	asio/include/asio/use_future.hpp	/^namespace detail {$/;"	n	namespace:asio
detail	asio/src/tests/unit/unit_test.hpp	/^namespace detail {$/;"	n	namespace:asio
determine_version	asio/release.pl	/^sub determine_version($)$/;"	s
determine_version_from_configure	asio/release.pl	/^sub determine_version_from_configure()$/;"	s
dev_poll_fd_	asio/include/asio/detail/dev_poll_reactor.hpp	/^  int dev_poll_fd_;$/;"	m	class:asio::detail::dev_poll_reactor	typeref:typename:int
dev_poll_reactor	asio/include/asio/detail/dev_poll_reactor.hpp	/^class dev_poll_reactor$/;"	c	namespace:asio::detail
device_	asio/include/asio/impl/read_at.hpp	/^    AsyncRandomAccessReadDevice& device_;$/;"	m	class:asio::detail::initiate_async_read_at_buffer_sequence	typeref:typename:AsyncRandomAccessReadDevice &
device_	asio/include/asio/impl/read_at.hpp	/^    AsyncRandomAccessReadDevice& device_;$/;"	m	class:asio::detail::initiate_async_read_at_streambuf	typeref:typename:AsyncRandomAccessReadDevice &
device_	asio/include/asio/impl/read_at.hpp	/^    AsyncRandomAccessReadDevice& device_;$/;"	m	class:asio::detail::read_at_op	typeref:typename:AsyncRandomAccessReadDevice &
device_	asio/include/asio/impl/read_at.hpp	/^    AsyncRandomAccessReadDevice& device_;$/;"	m	class:asio::detail::read_at_streambuf_op	typeref:typename:AsyncRandomAccessReadDevice &
device_	asio/include/asio/impl/write_at.hpp	/^    AsyncRandomAccessWriteDevice& device_;$/;"	m	class:asio::detail::initiate_async_write_at_buffer_sequence	typeref:typename:AsyncRandomAccessWriteDevice &
device_	asio/include/asio/impl/write_at.hpp	/^    AsyncRandomAccessWriteDevice& device_;$/;"	m	class:asio::detail::initiate_async_write_at_streambuf	typeref:typename:AsyncRandomAccessWriteDevice &
device_	asio/include/asio/impl/write_at.hpp	/^    AsyncRandomAccessWriteDevice& device_;$/;"	m	class:asio::detail::write_at_op	typeref:typename:AsyncRandomAccessWriteDevice &
difference_type	asio/include/asio/buffers_iterator.hpp	/^  typedef std::ptrdiff_t difference_type;$/;"	t	class:asio::buffers_iterator	typeref:typename:std::ptrdiff_t
difference_type	asio/include/asio/ip/address_v4_iterator.hpp	/^  typedef std::ptrdiff_t difference_type;$/;"	t	class:asio::ip::basic_address_iterator	typeref:typename:std::ptrdiff_t
difference_type	asio/include/asio/ip/address_v6_iterator.hpp	/^  typedef std::ptrdiff_t difference_type;$/;"	t	class:asio::ip::basic_address_iterator	typeref:typename:std::ptrdiff_t
difference_type	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  typedef std::ptrdiff_t difference_type;$/;"	t	class:asio::ip::basic_resolver_iterator	typeref:typename:std::ptrdiff_t
difference_type	asio/include/asio/ip/basic_resolver_results.hpp	/^  typedef std::ptrdiff_t difference_type;$/;"	t	class:asio::ip::basic_resolver_results	typeref:typename:std::ptrdiff_t
dispatch	asio/include/asio/detail/impl/strand_executor_service.hpp	/^void strand_executor_service::dispatch(const implementation_type& impl,$/;"	f	class:asio::detail::strand_executor_service	typeref:typename:void
dispatch	asio/include/asio/detail/impl/strand_service.hpp	/^void strand_service::dispatch(strand_service::implementation_type& impl,$/;"	f	class:asio::detail::strand_service	typeref:typename:void
dispatch	asio/include/asio/detail/io_object_executor.hpp	/^  void dispatch(ASIO_MOVE_ARG(F) f, const A& a) const$/;"	f	class:asio::detail::io_object_executor	typeref:typename:void
dispatch	asio/include/asio/impl/executor.hpp	/^  void dispatch(ASIO_MOVE_ARG(function) f)$/;"	f	class:asio::executor::impl	typeref:typename:void
dispatch	asio/include/asio/impl/executor.hpp	/^void executor::dispatch(ASIO_MOVE_ARG(Function) f,$/;"	f	class:asio::executor	typeref:typename:void
dispatch	asio/include/asio/impl/io_context.hpp	/^void io_context::executor_type::dispatch($/;"	f	class:asio::io_context::executor_type	typeref:typename:void
dispatch	asio/include/asio/impl/system_executor.hpp	/^void system_executor::dispatch($/;"	f	class:asio::system_executor	typeref:typename:void
dispatch	asio/include/asio/impl/thread_pool.hpp	/^void thread_pool::executor_type::dispatch($/;"	f	class:asio::thread_pool::executor_type	typeref:typename:void
dispatch	asio/include/asio/impl/use_future.hpp	/^  void dispatch(ASIO_MOVE_ARG(F) f, const A&) const$/;"	f	class:asio::detail::promise_executor	typeref:typename:void
dispatch	asio/include/asio/io_context_strand.hpp	/^  void dispatch(ASIO_MOVE_ARG(Function) f, const Allocator& a) const$/;"	f	class:asio::io_context::strand	typeref:typename:void
dispatch	asio/include/asio/strand.hpp	/^  void dispatch(ASIO_MOVE_ARG(Function) f, const Allocator& a) const$/;"	f	class:asio::strand	typeref:typename:void
dispatch	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    void dispatch(const Function& f, const Allocator&) const$/;"	f	class:handler_priority_queue::executor	typeref:typename:void	file:
dispatch	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void dispatch(Func&& f, const Alloc& a) const$/;"	f	class:fork_executor	typeref:typename:void	file:
dispatch	asio/src/examples/cpp11/executors/pipeline.cpp	/^  void dispatch(Func&& f, const Alloc& a) const$/;"	f	class:thread_executor	typeref:typename:void	file:
dispatch	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    void dispatch(Func&& f, const Alloc& a) const$/;"	f	class:priority_scheduler::executor_type	typeref:typename:void	file:
dispatch	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    void dispatch(Function f, const Allocator&) const$/;"	f	class:handler_priority_queue::executor	typeref:typename:void	file:
dispatch	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void dispatch(Func&& f, const Alloc& a) const$/;"	f	class:fork_executor	typeref:typename:void	file:
dispatch	asio/src/examples/cpp14/executors/pipeline.cpp	/^  void dispatch(Func&& f, const Alloc& a) const$/;"	f	class:thread_executor	typeref:typename:void	file:
dispatch	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    void dispatch(Func&& f, const Alloc& a) const$/;"	f	class:priority_scheduler::executor_type	typeref:typename:void	file:
dispatch_mutex_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  mutex dispatch_mutex_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:mutex
dispatch_required_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  long dispatch_required_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:long
dispatcher_	asio/include/asio/detail/wrapped_handler.hpp	/^  Dispatcher dispatcher_;$/;"	m	class:asio::detail::wrapped_handler	typeref:typename:Dispatcher
distance_to	asio/include/asio/buffers_iterator.hpp	/^  std::ptrdiff_t distance_to(const buffers_iterator& other) const$/;"	f	class:asio::buffers_iterator	typeref:typename:std::ptrdiff_t
do_accept	asio/src/examples/cpp03/spawn/echo_server.cpp	/^void do_accept(asio::io_context& io_context,$/;"	f	typeref:typename:void
do_accept	asio/src/examples/cpp11/allocation/server.cpp	/^  void do_accept()$/;"	f	class:server	typeref:typename:void	file:
do_accept	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  void do_accept()$/;"	f	class:server	typeref:typename:void	file:
do_accept	asio/src/examples/cpp11/chat/chat_server.cpp	/^  void do_accept()$/;"	f	class:chat_server	typeref:typename:void	file:
do_accept	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  void do_accept()$/;"	f	class:server	typeref:typename:void	file:
do_accept	asio/src/examples/cpp11/http/server/server.cpp	/^void server::do_accept()$/;"	f	class:http::server::server	typeref:typename:void
do_accept	asio/src/examples/cpp11/local/stream_server.cpp	/^  void do_accept()$/;"	f	class:server	typeref:typename:void	file:
do_accept	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  void do_accept()$/;"	f	class:server	typeref:typename:void	file:
do_accept	asio/src/examples/cpp11/ssl/server.cpp	/^  void do_accept()$/;"	f	class:server	typeref:typename:void	file:
do_accept	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  void do_accept()$/;"	f	class:server	typeref:typename:void	file:
do_assign	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  void do_assign()$/;"	f	class:asio::detail::reactive_socket_accept_op_base	typeref:typename:void
do_await_stop	asio/src/examples/cpp11/http/server/server.cpp	/^void server::do_await_stop()$/;"	f	class:http::server::server	typeref:typename:void
do_close	asio/src/examples/cpp03/chat/chat_client.cpp	/^  void do_close()$/;"	f	class:chat_client	typeref:typename:void	file:
do_complete	asio/include/asio/detail/completion_handler.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::completion_handler	typeref:typename:void
do_complete	asio/include/asio/detail/descriptor_read_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::descriptor_read_op	typeref:typename:void
do_complete	asio/include/asio/detail/descriptor_write_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::descriptor_write_op	typeref:typename:void
do_complete	asio/include/asio/detail/executor_function.hpp	/^  static void do_complete(executor_function_base* base, bool call)$/;"	f	class:asio::detail::executor_function	typeref:typename:void
do_complete	asio/include/asio/detail/executor_op.hpp	/^  static void do_complete(void* owner, Operation* base,$/;"	f	class:asio::detail::executor_op	typeref:typename:void
do_complete	asio/include/asio/detail/reactive_null_buffers_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::reactive_null_buffers_op	typeref:typename:void
do_complete	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::reactive_socket_accept_op	typeref:typename:void
do_complete	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::reactive_socket_move_accept_op	typeref:typename:void
do_complete	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::reactive_socket_connect_op	typeref:typename:void
do_complete	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::reactive_socket_recv_op	typeref:typename:void
do_complete	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::reactive_socket_recvfrom_op	typeref:typename:void
do_complete	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::reactive_socket_recvmsg_op	typeref:typename:void
do_complete	asio/include/asio/detail/reactive_socket_send_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::reactive_socket_send_op	typeref:typename:void
do_complete	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::reactive_socket_sendto_op	typeref:typename:void
do_complete	asio/include/asio/detail/reactive_wait_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::reactive_wait_op	typeref:typename:void
do_complete	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::resolve_endpoint_op	typeref:typename:void
do_complete	asio/include/asio/detail/resolve_query_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::resolve_query_op	typeref:typename:void
do_complete	asio/include/asio/detail/signal_handler.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::signal_handler	typeref:typename:void
do_complete	asio/include/asio/detail/wait_handler.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::wait_handler	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_handle_read_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_handle_read_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_handle_write_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_handle_write_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_null_buffers_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_null_buffers_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_overlapped_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_overlapped_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_socket_connect_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_socket_recv_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_socket_recvfrom_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_socket_recvmsg_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_socket_send_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_socket_send_op	typeref:typename:void
do_complete	asio/include/asio/detail/win_iocp_wait_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::win_iocp_wait_op	typeref:typename:void
do_complete	asio/include/asio/detail/winrt_resolve_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::winrt_resolve_op	typeref:typename:void
do_complete	asio/include/asio/detail/winrt_socket_connect_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::winrt_socket_connect_op	typeref:typename:void
do_complete	asio/include/asio/detail/winrt_socket_recv_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::winrt_socket_recv_op	typeref:typename:void
do_complete	asio/include/asio/detail/winrt_socket_send_op.hpp	/^  static void do_complete(void* owner, operation* base,$/;"	f	class:asio::detail::winrt_socket_send_op	typeref:typename:void
do_connect	asio/src/examples/cpp11/chat/chat_client.cpp	/^  void do_connect(const tcp::resolver::results_type& endpoints)$/;"	f	class:chat_client	typeref:typename:void	file:
do_dispatch	asio/include/asio/detail/win_iocp_io_context.hpp	/^  void do_dispatch(operation* op)$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
do_dispatch	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void do_dispatch(std::shared_ptr<function_base> p,$/;"	f	class:fork_join_pool	typeref:typename:void	file:
do_dispatch	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void do_dispatch(std::shared_ptr<function_base> p,$/;"	f	class:fork_join_pool	typeref:typename:void	file:
do_handshake	asio/src/examples/cpp11/ssl/server.cpp	/^  void do_handshake()$/;"	f	class:session	typeref:typename:void	file:
do_init	asio/include/asio/detail/posix_global.hpp	/^  static void do_init()$/;"	f	struct:asio::detail::posix_global_impl	typeref:typename:void
do_init	asio/include/asio/detail/std_global.hpp	/^  static void do_init()$/;"	f	struct:asio::detail::std_global_impl	typeref:typename:void
do_not_route	asio/include/asio/socket_base.hpp	/^      do_not_route;$/;"	t	class:asio::socket_base
do_not_route	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined do_not_route;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
do_operations	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  void do_operations()$/;"	f	class:connection	typeref:typename:void	file:
do_perform	asio/include/asio/detail/descriptor_read_op.hpp	/^  static status do_perform(reactor_op* base)$/;"	f	class:asio::detail::descriptor_read_op_base	typeref:typename:status
do_perform	asio/include/asio/detail/descriptor_write_op.hpp	/^  static status do_perform(reactor_op* base)$/;"	f	class:asio::detail::descriptor_write_op_base	typeref:typename:status
do_perform	asio/include/asio/detail/reactive_null_buffers_op.hpp	/^  static status do_perform(reactor_op*)$/;"	f	class:asio::detail::reactive_null_buffers_op	typeref:typename:status
do_perform	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  static status do_perform(reactor_op* base)$/;"	f	class:asio::detail::reactive_socket_accept_op_base	typeref:typename:status
do_perform	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^  static status do_perform(reactor_op* base)$/;"	f	class:asio::detail::reactive_socket_connect_op_base	typeref:typename:status
do_perform	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^  static status do_perform(reactor_op* base)$/;"	f	class:asio::detail::reactive_socket_recv_op_base	typeref:typename:status
do_perform	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  static status do_perform(reactor_op* base)$/;"	f	class:asio::detail::reactive_socket_recvfrom_op_base	typeref:typename:status
do_perform	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^  static status do_perform(reactor_op* base)$/;"	f	class:asio::detail::reactive_socket_recvmsg_op_base	typeref:typename:status
do_perform	asio/include/asio/detail/reactive_socket_send_op.hpp	/^  static status do_perform(reactor_op* base)$/;"	f	class:asio::detail::reactive_socket_send_op_base	typeref:typename:status
do_perform	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^  static status do_perform(reactor_op* base)$/;"	f	class:asio::detail::reactive_socket_sendto_op_base	typeref:typename:status
do_perform	asio/include/asio/detail/reactive_wait_op.hpp	/^  static status do_perform(reactor_op*)$/;"	f	class:asio::detail::reactive_wait_op	typeref:typename:status
do_perform	asio/include/asio/detail/win_iocp_null_buffers_op.hpp	/^  static status do_perform(reactor_op*)$/;"	f	class:asio::detail::win_iocp_null_buffers_op	typeref:typename:status
do_perform	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^  static status do_perform(reactor_op* base)$/;"	f	class:asio::detail::win_iocp_socket_connect_op_base	typeref:typename:status
do_perform	asio/include/asio/detail/win_iocp_wait_op.hpp	/^  static status do_perform(reactor_op*)$/;"	f	class:asio::detail::win_iocp_wait_op	typeref:typename:status
do_post	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void do_post(std::shared_ptr<function_base> p,$/;"	f	class:fork_join_pool	typeref:typename:void	file:
do_post	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void do_post(std::shared_ptr<function_base> p,$/;"	f	class:fork_join_pool	typeref:typename:void	file:
do_read	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  void do_read(asio::error_code& ec)$/;"	f	class:third_party_lib::session	typeref:typename:void	file:
do_read	asio/src/examples/cpp11/allocation/server.cpp	/^  void do_read()$/;"	f	class:session	typeref:typename:void	file:
do_read	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  void do_read()$/;"	f	class:session	typeref:typename:void	file:
do_read	asio/src/examples/cpp11/http/server/connection.cpp	/^void connection::do_read()$/;"	f	class:http::server::connection	typeref:typename:void
do_read	asio/src/examples/cpp11/local/stream_server.cpp	/^  void do_read()$/;"	f	class:session	typeref:typename:void	file:
do_read	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  void do_read(std::error_code& ec)$/;"	f	class:third_party_lib::session	typeref:typename:void	file:
do_read	asio/src/examples/cpp11/ssl/server.cpp	/^  void do_read()$/;"	f	class:session	typeref:typename:void	file:
do_read	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  void do_read()$/;"	f	class:session	typeref:typename:void	file:
do_read_body	asio/src/examples/cpp11/chat/chat_client.cpp	/^  void do_read_body()$/;"	f	class:chat_client	typeref:typename:void	file:
do_read_body	asio/src/examples/cpp11/chat/chat_server.cpp	/^  void do_read_body()$/;"	f	class:chat_session	typeref:typename:void	file:
do_read_header	asio/src/examples/cpp11/chat/chat_client.cpp	/^  void do_read_header()$/;"	f	class:chat_client	typeref:typename:void	file:
do_read_header	asio/src/examples/cpp11/chat/chat_server.cpp	/^  void do_read_header()$/;"	f	class:chat_session	typeref:typename:void	file:
do_receive	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^  void do_receive()$/;"	f	class:server	typeref:typename:void	file:
do_receive	asio/src/examples/cpp11/multicast/receiver.cpp	/^  void do_receive()$/;"	f	class:receiver	typeref:typename:void	file:
do_receive	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^  void do_receive()$/;"	f	class:server	typeref:typename:void	file:
do_send	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^  void do_send(std::size_t length)$/;"	f	class:server	typeref:typename:void	file:
do_send	asio/src/examples/cpp11/multicast/sender.cpp	/^  void do_send()$/;"	f	class:sender	typeref:typename:void	file:
do_send	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^  void do_send(std::size_t length)$/;"	f	class:server	typeref:typename:void	file:
do_timeout	asio/src/examples/cpp11/multicast/sender.cpp	/^  void do_timeout()$/;"	f	class:sender	typeref:typename:void	file:
do_wait	asio/include/asio/detail/deadline_timer_service.hpp	/^  void do_wait(const Duration& timeout, asio::error_code& ec)$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:void
do_work_finished	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void do_work_finished(const std::shared_ptr<std::size_t>& work_count) noexcept$/;"	f	class:fork_join_pool	typeref:typename:void	file:
do_work_finished	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void do_work_finished(const std::shared_ptr<std::size_t>& work_count) noexcept$/;"	f	class:fork_join_pool	typeref:typename:void	file:
do_work_started	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void do_work_started(const std::shared_ptr<std::size_t>& work_count) noexcept$/;"	f	class:fork_join_pool	typeref:typename:void	file:
do_work_started	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void do_work_started(const std::shared_ptr<std::size_t>& work_count) noexcept$/;"	f	class:fork_join_pool	typeref:typename:void	file:
do_write	asio/src/examples/cpp03/chat/chat_client.cpp	/^  void do_write(chat_message msg)$/;"	f	class:chat_client	typeref:typename:void	file:
do_write	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  void do_write(asio::error_code& ec)$/;"	f	class:third_party_lib::session	typeref:typename:void	file:
do_write	asio/src/examples/cpp11/allocation/server.cpp	/^  void do_write(std::size_t length)$/;"	f	class:session	typeref:typename:void	file:
do_write	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  void do_write()$/;"	f	class:session	typeref:typename:void	file:
do_write	asio/src/examples/cpp11/chat/chat_client.cpp	/^  void do_write()$/;"	f	class:chat_client	typeref:typename:void	file:
do_write	asio/src/examples/cpp11/chat/chat_server.cpp	/^  void do_write()$/;"	f	class:chat_session	typeref:typename:void	file:
do_write	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  void do_write(std::size_t length)$/;"	f	class:session	typeref:typename:void	file:
do_write	asio/src/examples/cpp11/http/server/connection.cpp	/^void connection::do_write()$/;"	f	class:http::server::connection	typeref:typename:void
do_write	asio/src/examples/cpp11/local/stream_server.cpp	/^  void do_write(std::size_t length)$/;"	f	class:session	typeref:typename:void	file:
do_write	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  void do_write(std::error_code& ec)$/;"	f	class:third_party_lib::session	typeref:typename:void	file:
do_write	asio/src/examples/cpp11/ssl/server.cpp	/^  void do_write(std::size_t length)$/;"	f	class:session	typeref:typename:void	file:
do_write	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  void do_write(std::size_t length)$/;"	f	class:session	typeref:typename:void	file:
doc_root_	asio/src/examples/cpp03/http/server/request_handler.hpp	/^  std::string doc_root_;$/;"	m	class:http::server::request_handler	typeref:typename:std::string
doc_root_	asio/src/examples/cpp03/http/server2/request_handler.hpp	/^  std::string doc_root_;$/;"	m	class:http::server2::request_handler	typeref:typename:std::string
doc_root_	asio/src/examples/cpp03/http/server3/request_handler.hpp	/^  std::string doc_root_;$/;"	m	class:http::server3::request_handler	typeref:typename:std::string
doc_root_	asio/src/examples/cpp03/http/server4/file_handler.hpp	/^  std::string doc_root_;$/;"	m	class:http::server4::file_handler	typeref:typename:std::string
doc_root_	asio/src/examples/cpp11/http/server/request_handler.hpp	/^  std::string doc_root_;$/;"	m	class:http::server::request_handler	typeref:typename:std::string
done	asio/include/asio/detail/reactor_op.hpp	/^  enum status { not_done, done, done_and_exhausted };$/;"	e	enum:asio::detail::reactor_op::status
done_and_exhausted	asio/include/asio/detail/reactor_op.hpp	/^  enum status { not_done, done, done_and_exhausted };$/;"	e	enum:asio::detail::reactor_op::status
dont_fragment	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  bool dont_fragment() const { return (rep_[6] & 0x40) != 0; }$/;"	f	class:ipv4_header	typeref:typename:bool
down_heap	asio/include/asio/detail/timer_queue.hpp	/^  void down_heap(std::size_t index)$/;"	f	class:asio::detail::timer_queue	typeref:typename:void
dox-compound-name	asio/src/doc/reference.xsl	/^      <xsl:variable name="dox-compound-name" select="($memberdefs)[1]\/..\/..\/compoundname"\/>$/;"	v	matchedTemplate:ref[@kindref='member']
dox-name	asio/src/doc/reference.xsl	/^      <xsl:variable name="dox-name" select="($memberdefs)[1]\/name"\/>$/;"	v	matchedTemplate:ref[@kindref='member']
dox-ref-id	asio/src/doc/reference.xsl	/^      <xsl:variable name="dox-ref-id" select="@refid"\/>$/;"	v	matchedTemplate:ref[@kindref='compound']
dox-ref-id	asio/src/doc/reference.xsl	/^  <xsl:variable name="dox-ref-id" select="@refid"\/>$/;"	v	matchedTemplate:ref[@kindref='member']
doxygen-id	asio/src/doc/reference.xsl	/^  <xsl:variable name="doxygen-id">$/;"	v	matchedTemplate:memberdef
doxygen-id	asio/src/doc/reference.xsl	/^  <xsl:variable name="doxygen-id">$/;"	v	namedTemplate:class-tables
doxygen-id	asio/src/doc/reference.xsl	/^  <xsl:variable name="doxygen-id">$/;"	v	namedTemplate:namespace-memberdef
doxygen-id	asio/src/doc/reference.xsl	/^<xsl:variable name="doxygen-id">$/;"	v	namedTemplate:function
dp	asio/src/tests/unit/generic/datagram_protocol.cpp	/^  typedef generic::datagram_protocol dp;$/;"	t	function:generic_datagram_protocol_socket_compile::test	typeref:typename:generic::datagram_protocol	file:
dp	asio/src/tests/unit/local/connect_pair.cpp	/^  typedef local::datagram_protocol dp;$/;"	t	function:local_connect_pair_compile::test	typeref:typename:local::datagram_protocol	file:
dp	asio/src/tests/unit/local/datagram_protocol.cpp	/^  typedef local::datagram_protocol dp;$/;"	t	function:local_datagram_protocol_socket_compile::test	typeref:typename:local::datagram_protocol	file:
dummy_return	asio/include/asio/impl/use_awaitable.hpp	/^  static T dummy_return()$/;"	f	class:asio::async_result	typeref:typename:T
dummy_return	asio/include/asio/impl/use_awaitable.hpp	/^  static void dummy_return()$/;"	f	class:asio::async_result	typeref:typename:void
duration	asio/include/asio/basic_socket_iostream.hpp	/^  typedef typename WaitTraits::duration duration;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:WaitTraits::duration
duration	asio/include/asio/basic_socket_iostream.hpp	/^  typedef typename traits_helper::duration_type duration;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:traits_helper::duration_type
duration	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef typename WaitTraits::duration duration;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:WaitTraits::duration
duration	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef typename traits_helper::duration_type duration;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:traits_helper::duration_type
duration	asio/include/asio/basic_waitable_timer.hpp	/^  typedef typename clock_type::duration duration;$/;"	t	class:asio::basic_waitable_timer	typeref:typename:clock_type::duration
duration	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^  typedef asio::chrono::steady_clock::duration duration;$/;"	t	struct:time_t_clock	typeref:typename:asio::chrono::steady_clock::duration	file:
duration	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^  typedef std::chrono::steady_clock::duration duration;$/;"	t	struct:time_t_clock	typeref:typename:std::chrono::steady_clock::duration	file:
duration_cast	asio/include/asio/detail/chrono_time_traits.hpp	/^    int64_t duration_cast() const$/;"	f	class:asio::detail::chrono_time_traits::posix_time_duration	typeref:typename:int64_t
duration_type	asio/include/asio/basic_deadline_timer.hpp	/^  typedef typename traits_type::duration_type duration_type;$/;"	t	class:asio::basic_deadline_timer	typeref:typename:traits_type::duration_type
duration_type	asio/include/asio/basic_socket_iostream.hpp	/^  typedef typename WaitTraits::duration_type duration_type;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:WaitTraits::duration_type
duration_type	asio/include/asio/basic_socket_iostream.hpp	/^  typedef typename traits_helper::duration_type duration_type;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:traits_helper::duration_type
duration_type	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef typename WaitTraits::duration_type duration_type;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:WaitTraits::duration_type
duration_type	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef typename traits_helper::duration_type duration_type;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:traits_helper::duration_type
duration_type	asio/include/asio/detail/chrono_time_traits.hpp	/^  typedef typename clock_type::duration duration_type;$/;"	t	struct:asio::detail::chrono_time_traits	typeref:typename:clock_type::duration
duration_type	asio/include/asio/detail/deadline_timer_service.hpp	/^  typedef typename Time_Traits::duration_type duration_type;$/;"	t	class:asio::detail::deadline_timer_service	typeref:typename:Time_Traits::duration_type
duration_type	asio/include/asio/detail/timer_queue.hpp	/^  typedef typename Time_Traits::duration_type duration_type;$/;"	t	class:asio::detail::timer_queue	typeref:typename:Time_Traits::duration_type
duration_type	asio/include/asio/time_traits.hpp	/^  typedef boost::posix_time::time_duration duration_type;$/;"	t	struct:asio::time_traits	typeref:typename:boost::posix_time::time_duration
dword_ptr_t	asio/include/asio/detail/win_iocp_io_context.hpp	/^  typedef DWORD dword_ptr_t;$/;"	t	class:asio::detail::win_iocp_io_context	typeref:typename:DWORD
dynamic_buffer	asio/include/asio/buffer.hpp	/^inline dynamic_string_buffer<Elem, Traits, Allocator> dynamic_buffer($/;"	f	namespace:asio	typeref:typename:dynamic_string_buffer<Elem,Traits,Allocator>
dynamic_buffer	asio/include/asio/buffer.hpp	/^inline dynamic_vector_buffer<Elem, Allocator> dynamic_buffer($/;"	f	namespace:asio	typeref:typename:dynamic_vector_buffer<Elem,Allocator>
dynamic_string_buffer	asio/include/asio/buffer.hpp	/^  dynamic_string_buffer(const dynamic_string_buffer& other) ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_string_buffer
dynamic_string_buffer	asio/include/asio/buffer.hpp	/^  dynamic_string_buffer(dynamic_string_buffer&& other) ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_string_buffer
dynamic_string_buffer	asio/include/asio/buffer.hpp	/^  explicit dynamic_string_buffer(std::basic_string<Elem, Traits, Allocator>& s,$/;"	f	class:asio::dynamic_string_buffer
dynamic_string_buffer	asio/include/asio/buffer.hpp	/^class dynamic_string_buffer$/;"	c	namespace:asio
dynamic_vector_buffer	asio/include/asio/buffer.hpp	/^  dynamic_vector_buffer(const dynamic_vector_buffer& other) ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_vector_buffer
dynamic_vector_buffer	asio/include/asio/buffer.hpp	/^  dynamic_vector_buffer(dynamic_vector_buffer&& other) ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_vector_buffer
dynamic_vector_buffer	asio/include/asio/buffer.hpp	/^  explicit dynamic_vector_buffer(std::vector<Elem, Allocator>& v,$/;"	f	class:asio::dynamic_vector_buffer
dynamic_vector_buffer	asio/include/asio/buffer.hpp	/^class dynamic_vector_buffer$/;"	c	namespace:asio
ec	asio/include/asio/impl/connect.hpp	/^  asio::error_code ec;$/;"	v	namespace:asio	typeref:typename:asio::error_code
ec_	asio/include/asio/basic_socket_streambuf.hpp	/^  asio::error_code ec_;$/;"	m	class:asio::basic_socket_streambuf	typeref:typename:asio::error_code
ec_	asio/include/asio/detail/reactor_op.hpp	/^  asio::error_code ec_;$/;"	m	class:asio::detail::reactor_op	typeref:typename:asio::error_code
ec_	asio/include/asio/detail/resolve_op.hpp	/^  asio::error_code ec_;$/;"	m	class:asio::detail::resolve_op	typeref:typename:asio::error_code
ec_	asio/include/asio/detail/signal_op.hpp	/^  asio::error_code ec_;$/;"	m	class:asio::detail::signal_op	typeref:typename:asio::error_code
ec_	asio/include/asio/detail/wait_op.hpp	/^  asio::error_code ec_;$/;"	m	class:asio::detail::wait_op	typeref:typename:asio::error_code
ec_	asio/include/asio/detail/winrt_async_op.hpp	/^  asio::error_code ec_;$/;"	m	class:asio::detail::winrt_async_op	typeref:typename:asio::error_code
ec_	asio/include/asio/impl/spawn.hpp	/^    asio::error_code ec_;$/;"	m	class:asio::detail::coro_async_result	typeref:typename:asio::error_code
ec_	asio/include/asio/impl/spawn.hpp	/^    asio::error_code* ec_;$/;"	m	class:asio::detail::coro_handler	typeref:typename:asio::error_code *
ec_	asio/include/asio/redirect_error.hpp	/^  asio::error_code& ec_;$/;"	m	class:asio::redirect_error_t	typeref:typename:asio::error_code &
ec_	asio/include/asio/spawn.hpp	/^  asio::error_code* ec_;$/;"	m	class:asio::basic_yield_context	typeref:typename:asio::error_code *
ec_	asio/include/asio/ssl/detail/io.hpp	/^  asio::error_code ec_;$/;"	m	class:asio::ssl::detail::io_op	typeref:typename:asio::error_code
ec_	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^    asio::error_code* ec_;$/;"	m	class:asio::async_result::completion_handler_type	typeref:typename:asio::error_code *	file:
ec_	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  asio::error_code ec_;$/;"	m	class:asio::async_result	typeref:typename:asio::error_code	file:
echo	asio/src/examples/cpp03/spawn/echo_server.cpp	/^  void echo(asio::yield_context yield)$/;"	f	class:session	typeref:typename:void	file:
echo	asio/src/examples/cpp17/coroutines_ts/echo_server.cpp	/^awaitable<void> echo(tcp::socket socket)$/;"	f	typeref:typename:awaitable<void>
echo	asio/src/examples/cpp17/coroutines_ts/echo_server_with_default.cpp	/^awaitable<void> echo(tcp_socket socket)$/;"	f	typeref:typename:awaitable<void>
echo	asio/src/examples/cpp17/coroutines_ts/refactored_echo_server.cpp	/^awaitable<void> echo(tcp::socket socket)$/;"	f	typeref:typename:awaitable<void>
echo_async_tcp_echo_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^echo_async_tcp_echo_server_SOURCES = echo\/async_tcp_echo_server.cpp$/;"	m
echo_async_tcp_echo_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^echo_async_tcp_echo_server_SOURCES = echo\/async_tcp_echo_server.cpp$/;"	m
echo_async_tcp_echo_server_SOURCES	asio/src/examples/cpp14/Makefile.am	/^echo_async_tcp_echo_server_SOURCES = echo\/async_tcp_echo_server.cpp$/;"	m
echo_async_udp_echo_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^echo_async_udp_echo_server_SOURCES = echo\/async_udp_echo_server.cpp$/;"	m
echo_async_udp_echo_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^echo_async_udp_echo_server_SOURCES = echo\/async_udp_echo_server.cpp$/;"	m
echo_async_udp_echo_server_SOURCES	asio/src/examples/cpp14/Makefile.am	/^echo_async_udp_echo_server_SOURCES = echo\/async_udp_echo_server.cpp$/;"	m
echo_blocking_tcp_echo_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^echo_blocking_tcp_echo_client_SOURCES = echo\/blocking_tcp_echo_client.cpp$/;"	m
echo_blocking_tcp_echo_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^echo_blocking_tcp_echo_client_SOURCES = echo\/blocking_tcp_echo_client.cpp$/;"	m
echo_blocking_tcp_echo_client_SOURCES	asio/src/examples/cpp14/Makefile.am	/^echo_blocking_tcp_echo_client_SOURCES = echo\/blocking_tcp_echo_client.cpp$/;"	m
echo_blocking_tcp_echo_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^echo_blocking_tcp_echo_server_SOURCES = echo\/blocking_tcp_echo_server.cpp$/;"	m
echo_blocking_tcp_echo_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^echo_blocking_tcp_echo_server_SOURCES = echo\/blocking_tcp_echo_server.cpp$/;"	m
echo_blocking_tcp_echo_server_SOURCES	asio/src/examples/cpp14/Makefile.am	/^echo_blocking_tcp_echo_server_SOURCES = echo\/blocking_tcp_echo_server.cpp$/;"	m
echo_blocking_udp_echo_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^echo_blocking_udp_echo_client_SOURCES = echo\/blocking_udp_echo_client.cpp$/;"	m
echo_blocking_udp_echo_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^echo_blocking_udp_echo_client_SOURCES = echo\/blocking_udp_echo_client.cpp$/;"	m
echo_blocking_udp_echo_client_SOURCES	asio/src/examples/cpp14/Makefile.am	/^echo_blocking_udp_echo_client_SOURCES = echo\/blocking_udp_echo_client.cpp$/;"	m
echo_blocking_udp_echo_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^echo_blocking_udp_echo_server_SOURCES = echo\/blocking_udp_echo_server.cpp$/;"	m
echo_blocking_udp_echo_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^echo_blocking_udp_echo_server_SOURCES = echo\/blocking_udp_echo_server.cpp$/;"	m
echo_blocking_udp_echo_server_SOURCES	asio/src/examples/cpp14/Makefile.am	/^echo_blocking_udp_echo_server_SOURCES = echo\/blocking_udp_echo_server.cpp$/;"	m
echo_once	asio/src/examples/cpp17/coroutines_ts/refactored_echo_server.cpp	/^awaitable<void> echo_once(tcp::socket& socket)$/;"	f	typeref:typename:awaitable<void>
echo_reply	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  enum { echo_reply = 0, destination_unreachable = 3, source_quench = 4,$/;"	e	enum:icmp_header::__anon3193b0390103
echo_request	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^    redirect = 5, echo_request = 8, time_exceeded = 11, parameter_problem = 12,$/;"	e	enum:icmp_header::__anon3193b0390103
elems	asio/include/asio/detail/consuming_buffers.hpp	/^  Buffer elems[max_buffers];$/;"	m	struct:prepared_buffers	typeref:typename:Buffer[]
emphasis	asio/src/doc/reference.xsl	/^<xsl:template match="emphasis" mode="markup">['<xsl:apply-templates mode="markup"\/>]<\/xsl:temp/;"	m
emphasis	asio/src/doc/tutorial.xsl	/^<xsl:template match="emphasis">$/;"	m
empty	asio/include/asio/detail/buffered_stream_storage.hpp	/^  bool empty() const$/;"	f	class:asio::detail::buffered_stream_storage	typeref:typename:bool
empty	asio/include/asio/detail/consuming_buffers.hpp	/^  bool empty() const$/;"	f	class:consuming_buffers	typeref:typename:bool
empty	asio/include/asio/detail/consuming_buffers.hpp	/^  bool empty() const$/;"	f	class:consuming_single_buffer	typeref:typename:bool
empty	asio/include/asio/detail/consuming_buffers.hpp	/^  bool empty()$/;"	f	class:consuming_buffers	typeref:typename:bool
empty	asio/include/asio/detail/hash_map.hpp	/^  bool empty() const$/;"	f	class:asio::detail::hash_map	typeref:typename:bool
empty	asio/include/asio/detail/op_queue.hpp	/^  bool empty() const$/;"	f	class:asio::detail::op_queue	typeref:typename:bool
empty	asio/include/asio/detail/reactor_op_queue.hpp	/^  bool empty() const$/;"	f	class:asio::detail::reactor_op_queue	typeref:typename:bool
empty	asio/include/asio/detail/thread_group.hpp	/^  bool empty() const$/;"	f	class:asio::detail::thread_group	typeref:typename:bool
empty	asio/include/asio/detail/timer_queue.hpp	/^  virtual bool empty() const$/;"	f	class:asio::detail::timer_queue	typeref:typename:bool
empty	asio/include/asio/ip/address_v4_range.hpp	/^  bool empty() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range	typeref:typename:bool
empty	asio/include/asio/ip/address_v6_range.hpp	/^  bool empty() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range	typeref:typename:bool
empty	asio/include/asio/ip/basic_resolver_results.hpp	/^  bool empty() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:bool
enable_connection_aborted	asio/include/asio/detail/socket_ops.hpp	/^  enable_connection_aborted = 4,$/;"	e	enum:asio::detail::socket_ops::__anonc4fdc2e00103
enable_connection_aborted	asio/include/asio/socket_base.hpp	/^    enable_connection_aborted;$/;"	t	class:asio::socket_base	typeref:typename:asio::detail::socket_option::boolean<asio::detail::custom_socket_option_level,asio::detail::enable_connection_aborted_option>
enable_connection_aborted	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined enable_connection_aborted;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
enable_connection_aborted_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  bool enable_connection_aborted_;$/;"	m	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:bool
enable_connection_aborted_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  bool enable_connection_aborted_;$/;"	m	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:bool
enable_connection_aborted_option	asio/include/asio/detail/socket_types.hpp	/^const int enable_connection_aborted_option = 1;$/;"	v	namespace:asio::detail	typeref:typename:const int
enable_loopback	asio/include/asio/ip/multicast.hpp	/^  ASIO_OS_DEF(IPV6_MULTICAST_LOOP)> enable_loopback;$/;"	t	namespace:asio::ip::multicast
enable_loopback	asio/include/asio/ip/multicast.hpp	/^typedef implementation_defined enable_loopback;$/;"	t	namespace:asio::ip::multicast	typeref:typename:implementation_defined
enabled	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^  bool enabled() const$/;"	f	class:asio::detail::conditionally_enabled_mutex	typeref:typename:bool
enabled	asio/include/asio/detail/socket_option.hpp	/^  bool enabled() const$/;"	f	class:asio::detail::socket_option::linger	typeref:typename:bool
enabled	asio/include/asio/detail/socket_option.hpp	/^  void enabled(bool value)$/;"	f	class:asio::detail::socket_option::linger	typeref:typename:void
enabled_	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^  const bool enabled_;$/;"	m	class:asio::detail::conditionally_enabled_mutex	typeref:typename:const bool
encode	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  void encode(int a, int b, unsigned short n)$/;"	f	class:icmp_header	typeref:typename:void
encode_header	asio/src/examples/cpp03/chat/chat_message.hpp	/^  void encode_header()$/;"	f	class:chat_message	typeref:typename:void
encode_header	asio/src/examples/cpp11/chat/chat_message.hpp	/^  void encode_header()$/;"	f	class:chat_message	typeref:typename:void
encoded_message_	asio/src/examples/cpp11/operations/composed_5.cpp	/^      std::unique_ptr<std::string> encoded_message_;$/;"	m	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:std::unique_ptr<std::string>	file:
encoded_message_	asio/src/examples/cpp11/operations/composed_6.cpp	/^      std::unique_ptr<std::string> encoded_message_;$/;"	m	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:std::unique_ptr<std::string>	file:
encoded_message_	asio/src/examples/cpp11/operations/composed_7.cpp	/^  std::unique_ptr<std::string> encoded_message_;$/;"	m	struct:async_write_messages_implementation	typeref:typename:std::unique_ptr<std::string>	file:
encoded_message_	asio/src/examples/cpp11/operations/composed_8.cpp	/^  std::unique_ptr<std::string> encoded_message_;$/;"	m	struct:async_write_messages_implementation	typeref:typename:std::unique_ptr<std::string>	file:
encoded_message_	asio/src/examples/cpp14/operations/composed_5.cpp	/^      std::unique_ptr<std::string> encoded_message_;$/;"	m	struct:async_write_message::__anon32ec9f8e0102::intermediate_completion_handler	typeref:typename:std::unique_ptr<std::string>	file:
encoded_message_	asio/src/examples/cpp14/operations/composed_6.cpp	/^      std::unique_ptr<std::string> encoded_message_;$/;"	m	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	typeref:typename:std::unique_ptr<std::string>	file:
encoded_number_size	asio/src/examples/cpp03/porthopper/protocol.hpp	/^    encoded_number_size = 8, \/\/ Frame number in hex.$/;"	e	enum:frame::__anona16aa5440303
encoded_port_size	asio/src/examples/cpp03/porthopper/protocol.hpp	/^    encoded_port_size = 4, \/\/ 16-bit port in hex.$/;"	e	enum:control_request::__anona16aa5440103
end	asio/include/asio/buffer.hpp	/^  const_iterator end() const ASIO_NOEXCEPT$/;"	f	class:asio::const_buffers_1	typeref:typename:const_iterator
end	asio/include/asio/buffer.hpp	/^  const_iterator end() const ASIO_NOEXCEPT$/;"	f	class:asio::mutable_buffers_1	typeref:typename:const_iterator
end	asio/include/asio/buffer.hpp	/^  const_iterator end() const ASIO_NOEXCEPT$/;"	f	class:asio::null_buffers	typeref:typename:const_iterator
end	asio/include/asio/buffers_iterator.hpp	/^  static buffers_iterator end(const BufferSequence& buffers)$/;"	f	class:asio::buffers_iterator	typeref:typename:buffers_iterator
end	asio/include/asio/detail/consuming_buffers.hpp	/^  const_iterator end() const { return elems + count; }$/;"	f	struct:prepared_buffers	typeref:typename:const_iterator
end	asio/include/asio/detail/hash_map.hpp	/^  const_iterator end() const$/;"	f	class:asio::detail::hash_map	typeref:typename:const_iterator
end	asio/include/asio/detail/hash_map.hpp	/^  iterator end()$/;"	f	class:asio::detail::hash_map	typeref:typename:iterator
end	asio/include/asio/detail/reactor_op_queue.hpp	/^  iterator end() { return operations_.end(); }$/;"	f	class:asio::detail::reactor_op_queue	typeref:typename:iterator
end	asio/include/asio/ip/address_v4_range.hpp	/^  iterator end() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range	typeref:typename:iterator
end	asio/include/asio/ip/address_v6_range.hpp	/^  iterator end() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range	typeref:typename:iterator
end	asio/include/asio/ip/basic_resolver_results.hpp	/^  const_iterator end() const$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:const_iterator
end	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  const asio::const_buffer* end() const { return &buffer_ + 1; }$/;"	f	class:shared_const_buffer	typeref:typename:const asio::const_buffer *	file:
end	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  const asio::const_buffer* end() const { return &buffer_ + 1; }$/;"	f	class:shared_const_buffer	typeref:typename:const asio::const_buffer *	file:
end	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  connection_iter end()$/;"	f	class:connections	typeref:typename:connection_iter	file:
end	asio/src/tests/unit/buffer.cpp	/^  const_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_const_a	typeref:typename:const_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  const_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_const_c	typeref:typename:const_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  const_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_const_d	typeref:typename:const_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  const_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_const_f	typeref:typename:const_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  const_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::valid_const_a	typeref:typename:const_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  const_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::valid_const_b	typeref:typename:const_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  mutable_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_mutable_a	typeref:typename:mutable_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  mutable_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_mutable_c	typeref:typename:mutable_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  mutable_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_mutable_d	typeref:typename:mutable_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  mutable_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::invalid_mutable_f	typeref:typename:mutable_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  mutable_buffer* end() const { return 0; }$/;"	f	struct:is_buffer_sequence::valid_mutable_b	typeref:typename:mutable_buffer *	file:
end	asio/src/tests/unit/buffer.cpp	/^  mutable_buffer* end() { return 0; }$/;"	f	struct:is_buffer_sequence::valid_mutable_a	typeref:typename:mutable_buffer *	file:
end_	asio/include/asio/buffers_iterator.hpp	/^  buffer_sequence_iterator_type end_;$/;"	m	class:asio::buffers_iterator	typeref:typename:buffer_sequence_iterator_type
end_	asio/include/asio/impl/connect.hpp	/^    Iterator end_;$/;"	m	class:asio::detail::iterator_connect_op	typeref:typename:Iterator
end_	asio/include/asio/ip/address_v4_range.hpp	/^  iterator end_;$/;"	m	class:asio::ip::basic_address_range	typeref:typename:iterator
end_	asio/include/asio/ip/address_v6_range.hpp	/^  iterator end_;$/;"	m	class:asio::ip::basic_address_range	typeref:typename:iterator
end_offset_	asio/include/asio/detail/buffered_stream_storage.hpp	/^  size_type end_offset_;$/;"	m	class:asio::detail::buffered_stream_storage	typeref:typename:size_type
end_test_suite	asio/src/tests/unit/unit_test.hpp	/^inline int end_test_suite(const char* name)$/;"	f	namespace:asio::detail	typeref:typename:int
endpoint	asio/include/asio/generic/datagram_protocol.hpp	/^  typedef basic_endpoint<datagram_protocol> endpoint;$/;"	t	class:asio::generic::datagram_protocol	typeref:typename:basic_endpoint<datagram_protocol>
endpoint	asio/include/asio/generic/detail/endpoint.hpp	/^  endpoint(const endpoint& other)$/;"	f	class:asio::generic::detail::endpoint
endpoint	asio/include/asio/generic/detail/endpoint.hpp	/^class endpoint$/;"	c	namespace:asio::generic::detail
endpoint	asio/include/asio/generic/raw_protocol.hpp	/^  typedef basic_endpoint<raw_protocol> endpoint;$/;"	t	class:asio::generic::raw_protocol	typeref:typename:basic_endpoint<raw_protocol>
endpoint	asio/include/asio/generic/seq_packet_protocol.hpp	/^  typedef basic_endpoint<seq_packet_protocol> endpoint;$/;"	t	class:asio::generic::seq_packet_protocol	typeref:typename:basic_endpoint<seq_packet_protocol>
endpoint	asio/include/asio/generic/stream_protocol.hpp	/^  typedef basic_endpoint<stream_protocol> endpoint;$/;"	t	class:asio::generic::stream_protocol	typeref:typename:basic_endpoint<stream_protocol>
endpoint	asio/include/asio/ip/basic_resolver_entry.hpp	/^  endpoint_type endpoint() const$/;"	f	class:asio::ip::basic_resolver_entry	typeref:typename:endpoint_type
endpoint	asio/include/asio/ip/detail/endpoint.hpp	/^  endpoint(const endpoint& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::detail::endpoint
endpoint	asio/include/asio/ip/detail/endpoint.hpp	/^class endpoint$/;"	c	namespace:asio::ip::detail
endpoint	asio/include/asio/ip/icmp.hpp	/^  typedef basic_endpoint<icmp> endpoint;$/;"	t	class:asio::ip::icmp	typeref:typename:basic_endpoint<icmp>
endpoint	asio/include/asio/ip/tcp.hpp	/^  typedef basic_endpoint<tcp> endpoint;$/;"	t	class:asio::ip::tcp	typeref:typename:basic_endpoint<tcp>
endpoint	asio/include/asio/ip/udp.hpp	/^  typedef basic_endpoint<udp> endpoint;$/;"	t	class:asio::ip::udp	typeref:typename:basic_endpoint<udp>
endpoint	asio/include/asio/local/datagram_protocol.hpp	/^  typedef basic_endpoint<datagram_protocol> endpoint;$/;"	t	class:asio::local::datagram_protocol	typeref:typename:basic_endpoint<datagram_protocol>
endpoint	asio/include/asio/local/detail/endpoint.hpp	/^  endpoint(const endpoint& other)$/;"	f	class:asio::local::detail::endpoint
endpoint	asio/include/asio/local/detail/endpoint.hpp	/^class endpoint$/;"	c	namespace:asio::local::detail
endpoint	asio/include/asio/local/stream_protocol.hpp	/^  typedef basic_endpoint<stream_protocol> endpoint;$/;"	t	class:asio::local::stream_protocol	typeref:typename:basic_endpoint<stream_protocol>
endpoint	asio/include/asio/placeholders.hpp	/^unspecified endpoint;$/;"	v	namespace:asio::placeholders	typeref:typename:unspecified
endpoint	asio/src/examples/cpp03/socks4/socks4.hpp	/^  asio::ip::tcp::endpoint endpoint() const$/;"	f	class:socks4::reply	typeref:typename:asio::ip::tcp::endpoint
endpoint	asio/src/examples/cpp11/socks4/socks4.hpp	/^  asio::ip::tcp::endpoint endpoint() const$/;"	f	class:socks4::reply	typeref:typename:asio::ip::tcp::endpoint
endpoint_	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  endpoint_type endpoint_;$/;"	m	class:asio::detail::resolve_endpoint_op	typeref:typename:endpoint_type
endpoint_	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^  Endpoint& endpoint_;$/;"	m	class:asio::detail::win_iocp_socket_recvfrom_op	typeref:typename:Endpoint &
endpoint_	asio/include/asio/ip/basic_resolver_entry.hpp	/^  endpoint_type endpoint_;$/;"	m	class:asio::ip::basic_resolver_entry	typeref:typename:endpoint_type
endpoint_	asio/src/examples/cpp03/multicast/sender.cpp	/^  asio::ip::udp::endpoint endpoint_;$/;"	m	class:sender	typeref:typename:asio::ip::udp::endpoint	file:
endpoint_	asio/src/examples/cpp11/multicast/sender.cpp	/^  asio::ip::udp::endpoint endpoint_;$/;"	m	class:sender	typeref:typename:asio::ip::udp::endpoint	file:
endpoint_size	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^  int& endpoint_size()$/;"	f	class:asio::detail::win_iocp_socket_recvfrom_op	typeref:typename:int &
endpoint_size_	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^  int endpoint_size_;$/;"	m	class:asio::detail::win_iocp_socket_recvfrom_op	typeref:typename:int
endpoint_type	asio/include/asio/basic_datagram_socket.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::basic_datagram_socket	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/basic_raw_socket.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::basic_raw_socket	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/basic_seq_packet_socket.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::basic_seq_packet_socket	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/basic_socket.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::basic_socket	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/basic_socket_acceptor.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::basic_socket_acceptor	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/basic_socket_iostream.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/basic_stream_socket.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::basic_stream_socket	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/detail/null_socket_service.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::detail::null_socket_service	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/detail/reactive_socket_service.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::detail::reactive_socket_service	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::detail::resolve_endpoint_op	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/detail/resolver_service.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::detail::resolver_service	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::detail::win_iocp_socket_service	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/detail/winrt_resolve_op.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::detail::winrt_resolve_op	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/detail/winrt_resolver_service.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::detail::winrt_resolver_service	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  typedef typename Protocol::endpoint endpoint_type;$/;"	t	class:asio::detail::winrt_ssocket_service	typeref:typename:Protocol::endpoint
endpoint_type	asio/include/asio/ip/basic_resolver.hpp	/^  typedef typename InternetProtocol::endpoint endpoint_type;$/;"	t	class:asio::ip::basic_resolver	typeref:typename:InternetProtocol::endpoint
endpoint_type	asio/include/asio/ip/basic_resolver_entry.hpp	/^  typedef typename InternetProtocol::endpoint endpoint_type;$/;"	t	class:asio::ip::basic_resolver_entry	typeref:typename:InternetProtocol::endpoint
endpoint_type	asio/include/asio/ip/basic_resolver_results.hpp	/^  typedef typename protocol_type::endpoint endpoint_type;$/;"	t	class:asio::ip::basic_resolver_results	typeref:typename:protocol_type::endpoint
endpoints_	asio/include/asio/impl/connect.hpp	/^    EndpointSequence endpoints_;$/;"	m	class:asio::detail::range_connect_op	typeref:typename:EndpointSequence
endpoints_	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  tcp::resolver::results_type endpoints_;$/;"	m	class:client	typeref:typename:tcp::resolver::results_type	file:
endpoints_	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  tcp::resolver::results_type endpoints_;$/;"	m	class:client	typeref:typename:tcp::resolver::results_type	file:
engine	asio/include/asio/ssl/detail/engine.hpp	/^class engine$/;"	c	namespace:asio::ssl::detail
engine_	asio/include/asio/ssl/detail/stream_core.hpp	/^  engine engine_;$/;"	m	struct:asio::ssl::detail::stream_core	typeref:typename:engine
enqueue_operation	asio/include/asio/detail/reactor_op_queue.hpp	/^  bool enqueue_operation(Descriptor descriptor, reactor_op* op)$/;"	f	class:asio::detail::reactor_op_queue	typeref:typename:bool
enqueue_timer	asio/include/asio/detail/timer_queue.hpp	/^  bool enqueue_timer(const time_type& time, per_timer_data& timer, wait_op* op)$/;"	f	class:asio::detail::timer_queue	typeref:typename:bool
enum	asio/src/doc/reference.xsl	/^<xsl:template name="enum">$/;"	n
enum-name	asio/src/doc/reference.xsl	/^<xsl:param name="enum-name"\/>$/;"	p	namedTemplate:enum
eof	asio/include/asio/error.hpp	/^  eof,$/;"	e	enum:asio::error::misc_errors
epoll_fd_	asio/include/asio/detail/epoll_reactor.hpp	/^  int epoll_fd_;$/;"	m	class:asio::detail::epoll_reactor	typeref:typename:int
epoll_reactor	asio/include/asio/detail/epoll_reactor.hpp	/^class epoll_reactor$/;"	c	namespace:asio::detail
epoll_size	asio/include/asio/detail/epoll_reactor.hpp	/^  enum { epoll_size = 20000 };$/;"	e	enum:asio::detail::epoll_reactor::__anonbc1276d10103
equal	asio/include/asio/buffers_iterator.hpp	/^  bool equal(const buffers_iterator& other) const$/;"	f	class:asio::buffers_iterator	typeref:typename:bool
equal	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  bool equal(const basic_resolver_iterator& other) const$/;"	f	class:asio::ip::basic_resolver_iterator	typeref:typename:bool
equals	asio/include/asio/impl/executor.hpp	/^  bool equals(const impl_base* e) const ASIO_NOEXCEPT$/;"	f	class:asio::executor::impl	typeref:typename:bool
erase	asio/include/asio/detail/hash_map.hpp	/^  void erase(const K& k)$/;"	f	class:asio::detail::hash_map	typeref:typename:void
erase	asio/include/asio/detail/hash_map.hpp	/^  void erase(iterator it)$/;"	f	class:asio::detail::hash_map	typeref:typename:void
error	asio/include/asio/basic_socket_iostream.hpp	/^  const asio::error_code& error() const$/;"	f	class:asio::basic_socket_iostream	typeref:typename:const asio::error_code &
error	asio/include/asio/basic_socket_streambuf.hpp	/^  const asio::error_code& error() const$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:const asio::error_code &
error	asio/include/asio/error.hpp	/^namespace error {$/;"	n	namespace:asio
error	asio/include/asio/placeholders.hpp	/^unspecified error;$/;"	v	namespace:asio::placeholders	typeref:typename:unspecified
error	asio/include/asio/ssl/error.hpp	/^namespace error {$/;"	n	namespace:asio
error	asio/include/asio/ssl/error.hpp	/^namespace error {$/;"	n	namespace:asio::ssl
error_	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^    std::error_code* error_;$/;"	m	class:asio::async_result::completion_handler_type	typeref:typename:std::error_code *	file:
error_	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  std::error_code error_;$/;"	m	class:asio::async_result	typeref:typename:std::error_code	file:
error_category	asio/include/asio/error_code.hpp	/^typedef std::error_category error_category;$/;"	t	namespace:asio	typeref:typename:std::error_category
error_code	asio/include/asio/error_code.hpp	/^  error_code()$/;"	f	class:asio::error_code
error_code	asio/include/asio/error_code.hpp	/^  error_code(ErrorEnum e)$/;"	f	class:asio::error_code
error_code	asio/include/asio/error_code.hpp	/^  error_code(int v, const error_category& c)$/;"	f	class:asio::error_code
error_code	asio/include/asio/error_code.hpp	/^class error_code$/;"	c	namespace:asio
error_code	asio/include/asio/error_code.hpp	/^typedef std::error_code error_code;$/;"	t	namespace:asio	typeref:typename:std::error_code
error_test	asio/src/tests/unit/error.cpp	/^void error_test()$/;"	f	typeref:typename:void
error_wrapper	asio/include/asio/detail/descriptor_ops.hpp	/^inline ReturnType error_wrapper(ReturnType return_value,$/;"	f	namespace:asio::detail::descriptor_ops	typeref:typename:ReturnType
escape	asio/src/tools/handlerviz.pl	/^sub escape($)$/;"	s
escape-name	asio/src/doc/reference.xsl	/^<xsl:template name="escape-name">$/;"	n
escape-text	asio/src/doc/reference.xsl	/^<xsl:template name="escape-text">$/;"	n
escape-text	asio/src/doc/tutorial.xsl	/^<xsl:template name="escape-text">$/;"	n
escaped-class-name	asio/src/doc/reference.xsl	/^  <xsl:variable name="escaped-class-name">$/;"	v	matchedTemplate:memberdef
escaped-name	asio/src/doc/reference.xsl	/^  <xsl:variable name="escaped-name">$/;"	v	matchedTemplate:memberdef
escaped-name	asio/src/doc/reference.xsl	/^  <xsl:variable name="escaped-name">$/;"	v	namedTemplate:class-tables
even	asio/include/asio/serial_port_base.hpp	/^    enum type { none, odd, even };$/;"	e	enum:asio::serial_port_base::parity::type
event	asio/include/asio/detail/event.hpp	/^typedef null_event event;$/;"	t	namespace:asio::detail	typeref:typename:null_event
event	asio/include/asio/detail/scheduler.hpp	/^  typedef conditionally_enabled_event event;$/;"	t	class:asio::detail::scheduler	typeref:typename:conditionally_enabled_event
event_	asio/include/asio/detail/conditionally_enabled_event.hpp	/^  asio::detail::event event_;$/;"	m	class:asio::detail::conditionally_enabled_event	typeref:typename:asio::detail::event
event_	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^  asio::detail::event event_;$/;"	m	class:asio::detail::winrt_timer_scheduler	typeref:typename:asio::detail::event
eventfd_select_interrupter	asio/include/asio/detail/eventfd_select_interrupter.hpp	/^class eventfd_select_interrupter$/;"	c	namespace:asio::detail
events_	asio/include/asio/detail/win_event.hpp	/^  HANDLE events_[2];$/;"	m	class:asio::detail::win_event	typeref:typename:HANDLE[2]
ex_	asio/include/asio/impl/co_spawn.hpp	/^  Executor ex_;$/;"	m	class:asio::detail::initiate_co_spawn	typeref:typename:Executor
ex_	asio/include/asio/impl/defer.hpp	/^  Executor ex_;$/;"	m	class:asio::detail::initiate_defer_with_executor	typeref:typename:Executor
ex_	asio/include/asio/impl/dispatch.hpp	/^  Executor ex_;$/;"	m	class:asio::detail::initiate_dispatch_with_executor	typeref:typename:Executor
ex_	asio/include/asio/impl/post.hpp	/^  Executor ex_;$/;"	m	class:asio::detail::initiate_post_with_executor	typeref:typename:Executor
ex_	asio/src/examples/cpp11/executors/fork_join.cpp	/^  fork_executor ex_;$/;"	m	class:join_guard	typeref:typename:fork_executor	file:
ex_	asio/src/examples/cpp14/executors/fork_join.cpp	/^  fork_executor ex_;$/;"	m	class:join_guard	typeref:typename:fork_executor	file:
except_op	asio/include/asio/detail/dev_poll_reactor.hpp	/^    connect_op = 1, except_op = 2, max_ops = 3 };$/;"	e	enum:asio::detail::dev_poll_reactor::op_types
except_op	asio/include/asio/detail/epoll_reactor.hpp	/^    connect_op = 1, except_op = 2, max_ops = 3 };$/;"	e	enum:asio::detail::epoll_reactor::op_types
except_op	asio/include/asio/detail/kqueue_reactor.hpp	/^    connect_op = 1, except_op = 2, max_ops = 3 };$/;"	e	enum:asio::detail::kqueue_reactor::op_types
except_op	asio/include/asio/detail/select_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1, except_op = 2,$/;"	e	enum:asio::detail::select_reactor::op_types
exception_coro	asio/src/tests/unit/coroutine.cpp	/^void exception_coro(asio::coroutine& coro)$/;"	f	typeref:typename:void
exception_test	asio/src/tests/unit/coroutine.cpp	/^void exception_test()$/;"	f	typeref:typename:void
execute	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    void execute()$/;"	f	class:handler_priority_queue::queued_handler	typeref:typename:void	file:
execute	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void execute(std::unique_lock<std::mutex>& lock,$/;"	f	class:fork_join_pool	typeref:typename:void	file:
execute	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    void execute() override$/;"	f	class:handler_priority_queue::queued_handler	typeref:typename:void	file:
execute	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void execute(std::unique_lock<std::mutex>& lock,$/;"	f	class:fork_join_pool	typeref:typename:void	file:
execute_	asio/src/examples/cpp11/executors/fork_join.cpp	/^    void (*execute_)(std::shared_ptr<function_base>& p);$/;"	m	struct:fork_join_pool::function_base	typeref:typename:void (*)(std::shared_ptr<function_base> & p)	file:
execute_	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    void (*execute_)(std::shared_ptr<item_base>&);$/;"	m	struct:priority_scheduler::item_base	typeref:typename:void (*)(std::shared_ptr<item_base> &)	file:
execute_	asio/src/examples/cpp14/executors/fork_join.cpp	/^    void (*execute_)(std::shared_ptr<function_base>& p);$/;"	m	struct:fork_join_pool::function_base	typeref:typename:void (*)(std::shared_ptr<function_base> & p)	file:
execute_	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    void (*execute_)(std::shared_ptr<item_base>&);$/;"	m	struct:priority_scheduler::item_base	typeref:typename:void (*)(std::shared_ptr<item_base> &)	file:
execute_all	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^  void execute_all()$/;"	f	class:handler_priority_queue	typeref:typename:void	file:
execute_all	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^  void execute_all()$/;"	f	class:handler_priority_queue	typeref:typename:void	file:
execute_next	asio/src/examples/cpp11/executors/fork_join.cpp	/^  bool execute_next(std::unique_lock<std::mutex>& lock)$/;"	f	class:fork_join_pool	typeref:typename:bool	file:
execute_next	asio/src/examples/cpp14/executors/fork_join.cpp	/^  bool execute_next(std::unique_lock<std::mutex>& lock)$/;"	f	class:fork_join_pool	typeref:typename:bool	file:
execution_context	asio/include/asio/execution_context.hpp	/^class execution_context$/;"	c	namespace:asio
execution_context_service_base	asio/include/asio/execution_context.hpp	/^  execution_context_service_base(execution_context& e)$/;"	f	class:asio::detail::execution_context_service_base
execution_context_service_base	asio/include/asio/execution_context.hpp	/^class execution_context_service_base$/;"	c	namespace:asio::detail
executor	asio/include/asio/executor.hpp	/^  executor() ASIO_NOEXCEPT$/;"	f	class:asio::executor
executor	asio/include/asio/executor.hpp	/^  executor(const executor& other) ASIO_NOEXCEPT$/;"	f	class:asio::executor
executor	asio/include/asio/executor.hpp	/^  executor(executor&& other) ASIO_NOEXCEPT$/;"	f	class:asio::executor
executor	asio/include/asio/executor.hpp	/^  executor(nullptr_t) ASIO_NOEXCEPT$/;"	f	class:asio::executor
executor	asio/include/asio/executor.hpp	/^class executor$/;"	c	namespace:asio
executor	asio/include/asio/impl/executor.hpp	/^executor::executor(Executor e)$/;"	f	class:asio::executor
executor	asio/include/asio/impl/executor.hpp	/^executor::executor(allocator_arg_t, const Allocator& a, Executor e)$/;"	f	class:asio::executor
executor	asio/include/asio/this_coro.hpp	/^constexpr executor_t executor;$/;"	v	namespace:asio::this_coro	typeref:typename:executor_t
executor	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    executor(handler_priority_queue& q, int p)$/;"	f	class:handler_priority_queue::executor	file:
executor	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^  class executor$/;"	c	class:handler_priority_queue	file:
executor	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    executor(handler_priority_queue& q, int p)$/;"	f	class:handler_priority_queue::executor	file:
executor	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^  class executor$/;"	c	class:handler_priority_queue	file:
executor_	asio/include/asio/bind_executor.hpp	/^  Executor executor_;$/;"	m	class:asio::detail::executor_binder_base	typeref:typename:Executor
executor_	asio/include/asio/detail/handler_work.hpp	/^  HandlerExecutor executor_;$/;"	m	class:asio::detail::handler_work	typeref:typename:HandlerExecutor
executor_	asio/include/asio/detail/io_object_executor.hpp	/^  Executor executor_;$/;"	m	class:asio::detail::io_object_executor	typeref:typename:Executor
executor_	asio/include/asio/executor_work_guard.hpp	/^  executor_type executor_;$/;"	m	class:asio::executor_work_guard	typeref:typename:executor_type
executor_	asio/include/asio/impl/awaitable.hpp	/^  executor_type executor_;$/;"	m	class:asio::detail::awaitable_thread	typeref:typename:executor_type
executor_	asio/include/asio/impl/executor.hpp	/^  Executor executor_;$/;"	m	class:asio::executor::impl	typeref:typename:Executor
executor_	asio/include/asio/impl/executor.hpp	/^  system_executor executor_;$/;"	m	class:asio::executor::impl	typeref:typename:system_executor
executor_	asio/include/asio/strand.hpp	/^  Executor executor_;$/;"	m	class:asio::strand	typeref:typename:Executor
executor_	asio/src/examples/cpp11/executors/actor.cpp	/^  strand<executor> executor_;$/;"	m	class:actor	typeref:typename:strand<executor>	file:
executor_	asio/src/examples/cpp14/executors/actor.cpp	/^  strand<executor> executor_;$/;"	m	class:actor	typeref:typename:strand<executor>	file:
executor_arg	asio/include/asio/uses_executor.hpp	/^constexpr executor_arg_t executor_arg;$/;"	v	namespace:asio	typeref:typename:executor_arg_t
executor_arg_t	asio/include/asio/uses_executor.hpp	/^  ASIO_CONSTEXPR executor_arg_t() ASIO_NOEXCEPT$/;"	f	struct:asio::executor_arg_t	typeref:typename:ASIO_CONSTEXPR
executor_arg_t	asio/include/asio/uses_executor.hpp	/^struct executor_arg_t$/;"	s	namespace:asio
executor_binder	asio/include/asio/bind_executor.hpp	/^  executor_binder(const executor_binder& other)$/;"	f	class:asio::executor_binder
executor_binder	asio/include/asio/bind_executor.hpp	/^  executor_binder(const executor_binder<U, OtherExecutor>& other)$/;"	f	class:asio::executor_binder
executor_binder	asio/include/asio/bind_executor.hpp	/^  executor_binder(executor_arg_t, const executor_type& e,$/;"	f	class:asio::executor_binder
executor_binder	asio/include/asio/bind_executor.hpp	/^  executor_binder(executor_binder&& other)$/;"	f	class:asio::executor_binder
executor_binder	asio/include/asio/bind_executor.hpp	/^  executor_binder(executor_binder<U, OtherExecutor>&& other)$/;"	f	class:asio::executor_binder
executor_binder	asio/include/asio/bind_executor.hpp	/^class executor_binder$/;"	c	namespace:asio
executor_binder_argument_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_argument_type {};$/;"	s	namespace:asio::detail
executor_binder_argument_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_argument_type<R(&)(A1)>$/;"	s	namespace:asio::detail
executor_binder_argument_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_argument_type<R(&)(A1, A2)>$/;"	s	namespace:asio::detail
executor_binder_argument_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_argument_type<R(*)(A1)>$/;"	s	namespace:asio::detail
executor_binder_argument_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_argument_type<R(*)(A1, A2)>$/;"	s	namespace:asio::detail
executor_binder_argument_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_argument_type<T,$/;"	s	namespace:asio::detail
executor_binder_argument_types	asio/include/asio/bind_executor.hpp	/^struct executor_binder_argument_types {};$/;"	s	namespace:asio::detail
executor_binder_argument_types	asio/include/asio/bind_executor.hpp	/^struct executor_binder_argument_types<T,$/;"	s	namespace:asio::detail
executor_binder_base	asio/include/asio/bind_executor.hpp	/^  executor_binder_base(ASIO_MOVE_ARG(E) e, ASIO_MOVE_ARG(U) u)$/;"	f	class:asio::detail::executor_binder_base
executor_binder_base	asio/include/asio/bind_executor.hpp	/^class executor_binder_base<T, Executor, false>$/;"	c	namespace:asio::detail
executor_binder_base	asio/include/asio/bind_executor.hpp	/^class executor_binder_base<T, Executor, true>$/;"	c	namespace:asio::detail
executor_binder_check	asio/include/asio/bind_executor.hpp	/^struct executor_binder_check$/;"	s	namespace:asio::detail
executor_binder_result_of0	asio/include/asio/bind_executor.hpp	/^struct executor_binder_result_of0$/;"	s	namespace:asio::detail
executor_binder_result_of0	asio/include/asio/bind_executor.hpp	/^struct executor_binder_result_of0<T,$/;"	s	namespace:asio::detail
executor_binder_result_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_result_type$/;"	s	namespace:asio::detail
executor_binder_result_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_result_type<R(&)()>$/;"	s	namespace:asio::detail
executor_binder_result_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_result_type<R(&)(A1)>$/;"	s	namespace:asio::detail
executor_binder_result_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_result_type<R(&)(A1, A2)>$/;"	s	namespace:asio::detail
executor_binder_result_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_result_type<R(*)()>$/;"	s	namespace:asio::detail
executor_binder_result_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_result_type<R(*)(A1)>$/;"	s	namespace:asio::detail
executor_binder_result_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_result_type<R(*)(A1, A2)>$/;"	s	namespace:asio::detail
executor_binder_result_type	asio/include/asio/bind_executor.hpp	/^struct executor_binder_result_type<T,$/;"	s	namespace:asio::detail
executor_function	asio/include/asio/detail/executor_function.hpp	/^  executor_function(ASIO_MOVE_ARG(F) f, const Alloc& allocator)$/;"	f	class:asio::detail::executor_function
executor_function	asio/include/asio/detail/executor_function.hpp	/^class executor_function : public executor_function_base$/;"	c	namespace:asio::detail
executor_function_base	asio/include/asio/detail/executor_function.hpp	/^  executor_function_base(func_type func)$/;"	f	class:asio::detail::executor_function_base
executor_function_base	asio/include/asio/detail/executor_function.hpp	/^class executor_function_base$/;"	c	namespace:asio::detail
executor_function_tag	asio/include/asio/detail/thread_info_base.hpp	/^  struct executor_function_tag$/;"	s	class:asio::detail::thread_info_base
executor_memfns_base	asio/include/asio/detail/is_executor.hpp	/^struct executor_memfns_base$/;"	s	namespace:asio::detail
executor_memfns_check	asio/include/asio/detail/is_executor.hpp	/^struct executor_memfns_check$/;"	s	namespace:asio::detail
executor_memfns_derived	asio/include/asio/detail/is_executor.hpp	/^struct executor_memfns_derived$/;"	s	namespace:asio::detail
executor_op	asio/include/asio/detail/executor_op.hpp	/^  executor_op(ASIO_MOVE_ARG(H) h, const Alloc& allocator)$/;"	f	class:asio::detail::executor_op
executor_op	asio/include/asio/detail/executor_op.hpp	/^class executor_op : public Operation$/;"	c	namespace:asio::detail
executor_t	asio/include/asio/this_coro.hpp	/^  ASIO_CONSTEXPR executor_t()$/;"	f	struct:asio::this_coro::executor_t	typeref:typename:ASIO_CONSTEXPR
executor_t	asio/include/asio/this_coro.hpp	/^struct executor_t$/;"	s	namespace:asio::this_coro
executor_type	asio/include/asio/awaitable.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::awaitable	typeref:typename:Executor
executor_type	asio/include/asio/basic_datagram_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_datagram_socket::initiate_async_receive	typeref:typename:Executor
executor_type	asio/include/asio/basic_datagram_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_datagram_socket::initiate_async_receive_from	typeref:typename:Executor
executor_type	asio/include/asio/basic_datagram_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_datagram_socket::initiate_async_send	typeref:typename:Executor
executor_type	asio/include/asio/basic_datagram_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_datagram_socket::initiate_async_send_to	typeref:typename:Executor
executor_type	asio/include/asio/basic_datagram_socket.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::basic_datagram_socket	typeref:typename:Executor
executor_type	asio/include/asio/basic_deadline_timer.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_deadline_timer::initiate_async_wait	typeref:typename:Executor
executor_type	asio/include/asio/basic_deadline_timer.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::basic_deadline_timer	typeref:typename:Executor
executor_type	asio/include/asio/basic_io_object.hpp	/^  typedef asio::io_context::executor_type executor_type;$/;"	t	class:asio::basic_io_object	typeref:typename:asio::io_context::executor_type
executor_type	asio/include/asio/basic_raw_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_raw_socket::initiate_async_receive	typeref:typename:Executor
executor_type	asio/include/asio/basic_raw_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_raw_socket::initiate_async_receive_from	typeref:typename:Executor
executor_type	asio/include/asio/basic_raw_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_raw_socket::initiate_async_send	typeref:typename:Executor
executor_type	asio/include/asio/basic_raw_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_raw_socket::initiate_async_send_to	typeref:typename:Executor
executor_type	asio/include/asio/basic_raw_socket.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::basic_raw_socket	typeref:typename:Executor
executor_type	asio/include/asio/basic_seq_packet_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_seq_packet_socket::initiate_async_receive_with_flags	typeref:typename:Executor
executor_type	asio/include/asio/basic_seq_packet_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_seq_packet_socket::initiate_async_send	typeref:typename:Executor
executor_type	asio/include/asio/basic_seq_packet_socket.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::basic_seq_packet_socket	typeref:typename:Executor
executor_type	asio/include/asio/basic_serial_port.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_serial_port::initiate_async_read_some	typeref:typename:Executor
executor_type	asio/include/asio/basic_serial_port.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_serial_port::initiate_async_write_some	typeref:typename:Executor
executor_type	asio/include/asio/basic_serial_port.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::basic_serial_port	typeref:typename:Executor
executor_type	asio/include/asio/basic_signal_set.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_signal_set::initiate_async_wait	typeref:typename:Executor
executor_type	asio/include/asio/basic_signal_set.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::basic_signal_set	typeref:typename:Executor
executor_type	asio/include/asio/basic_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_socket::initiate_async_connect	typeref:typename:Executor
executor_type	asio/include/asio/basic_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_socket::initiate_async_wait	typeref:typename:Executor
executor_type	asio/include/asio/basic_socket.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::basic_socket	typeref:typename:Executor
executor_type	asio/include/asio/basic_socket_acceptor.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_socket_acceptor::initiate_async_accept	typeref:typename:Executor
executor_type	asio/include/asio/basic_socket_acceptor.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_socket_acceptor::initiate_async_move_accept	typeref:typename:Executor
executor_type	asio/include/asio/basic_socket_acceptor.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_socket_acceptor::initiate_async_wait	typeref:typename:Executor
executor_type	asio/include/asio/basic_socket_acceptor.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::basic_socket_acceptor	typeref:typename:Executor
executor_type	asio/include/asio/basic_stream_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_stream_socket::initiate_async_receive	typeref:typename:Executor
executor_type	asio/include/asio/basic_stream_socket.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_stream_socket::initiate_async_send	typeref:typename:Executor
executor_type	asio/include/asio/basic_stream_socket.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::basic_stream_socket	typeref:typename:Executor
executor_type	asio/include/asio/basic_waitable_timer.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::basic_waitable_timer::initiate_async_wait	typeref:typename:Executor
executor_type	asio/include/asio/basic_waitable_timer.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::basic_waitable_timer	typeref:typename:Executor
executor_type	asio/include/asio/bind_executor.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::executor_binder	typeref:typename:Executor
executor_type	asio/include/asio/buffered_read_stream.hpp	/^  typedef typename lowest_layer_type::executor_type executor_type;$/;"	t	class:asio::buffered_read_stream	typeref:typename:lowest_layer_type::executor_type
executor_type	asio/include/asio/buffered_stream.hpp	/^  typedef typename lowest_layer_type::executor_type executor_type;$/;"	t	class:asio::buffered_stream	typeref:typename:lowest_layer_type::executor_type
executor_type	asio/include/asio/buffered_write_stream.hpp	/^  typedef typename lowest_layer_type::executor_type executor_type;$/;"	t	class:asio::buffered_write_stream	typeref:typename:lowest_layer_type::executor_type
executor_type	asio/include/asio/detail/io_object_impl.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::detail::io_object_impl	typeref:typename:Executor
executor_type	asio/include/asio/executor_work_guard.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::executor_work_guard	typeref:typename:Executor
executor_type	asio/include/asio/impl/awaitable.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::detail::awaitable_thread	typeref:typename:Executor
executor_type	asio/include/asio/impl/buffered_read_stream.hpp	/^      Stream>::type::lowest_layer_type::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_buffered_fill	typeref:typename:remove_reference<Stream>::type::lowest_layer_type::executor_type
executor_type	asio/include/asio/impl/buffered_read_stream.hpp	/^      Stream>::type::lowest_layer_type::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_buffered_read_some	typeref:typename:remove_reference<Stream>::type::lowest_layer_type::executor_type
executor_type	asio/include/asio/impl/buffered_write_stream.hpp	/^      Stream>::type::lowest_layer_type::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_buffered_flush	typeref:typename:remove_reference<Stream>::type::lowest_layer_type::executor_type
executor_type	asio/include/asio/impl/buffered_write_stream.hpp	/^      Stream>::type::lowest_layer_type::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_buffered_write_some	typeref:typename:remove_reference<Stream>::type::lowest_layer_type::executor_type
executor_type	asio/include/asio/impl/co_spawn.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::detail::initiate_co_spawn	typeref:typename:Executor
executor_type	asio/include/asio/impl/compose.hpp	/^        typename Work::head_type>::type executor_type;$/;"	t	class:asio::detail::composed_op	typeref:typename:associated_executor<Handler,typename Work::head_type>::type
executor_type	asio/include/asio/impl/compose.hpp	/^    typedef typename composed_io_executors<Executors>::head_type executor_type;$/;"	t	class:asio::detail::initiate_composed_op	typeref:typename:composed_io_executors<Executors>::head_type
executor_type	asio/include/asio/impl/connect.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::detail::initiate_async_iterator_connect	typeref:typename:Executor
executor_type	asio/include/asio/impl/connect.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::detail::initiate_async_range_connect	typeref:typename:Executor
executor_type	asio/include/asio/impl/defer.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::detail::initiate_defer_with_executor	typeref:typename:Executor
executor_type	asio/include/asio/impl/dispatch.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::detail::initiate_dispatch_with_executor	typeref:typename:Executor
executor_type	asio/include/asio/impl/post.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::detail::initiate_post_with_executor	typeref:typename:Executor
executor_type	asio/include/asio/impl/read.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_buffer_sequence	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/read.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_dynbuf_v1	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/read.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_dynbuf_v2	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/read_at.hpp	/^    typedef typename AsyncRandomAccessReadDevice::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_at_buffer_sequence	typeref:typename:AsyncRandomAccessReadDevice::executor_type
executor_type	asio/include/asio/impl/read_at.hpp	/^    typedef typename AsyncRandomAccessReadDevice::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_at_streambuf	typeref:typename:AsyncRandomAccessReadDevice::executor_type
executor_type	asio/include/asio/impl/read_until.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_until_delim_string_v1	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/read_until.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_until_delim_string_v2	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/read_until.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_until_delim_v1	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/read_until.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_until_delim_v2	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/read_until.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_until_expr_v1	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/read_until.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_until_expr_v2	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/read_until.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_until_match_v1	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/read_until.hpp	/^    typedef typename AsyncReadStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_read_until_match_v2	typeref:typename:AsyncReadStream::executor_type
executor_type	asio/include/asio/impl/use_future.hpp	/^  typedef promise_executor<T> executor_type;$/;"	t	class:asio::detail::promise_creator	typeref:typename:promise_executor<T>
executor_type	asio/include/asio/impl/write.hpp	/^    typedef typename AsyncWriteStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_write_buffer_sequence	typeref:typename:AsyncWriteStream::executor_type
executor_type	asio/include/asio/impl/write.hpp	/^    typedef typename AsyncWriteStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_write_dynbuf_v1	typeref:typename:AsyncWriteStream::executor_type
executor_type	asio/include/asio/impl/write.hpp	/^    typedef typename AsyncWriteStream::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_write_dynbuf_v2	typeref:typename:AsyncWriteStream::executor_type
executor_type	asio/include/asio/impl/write_at.hpp	/^    typedef typename AsyncRandomAccessWriteDevice::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_write_at_buffer_sequence	typeref:typename:AsyncRandomAccessWriteDevice::executor_type
executor_type	asio/include/asio/impl/write_at.hpp	/^    typedef typename AsyncRandomAccessWriteDevice::executor_type executor_type;$/;"	t	class:asio::detail::initiate_async_write_at_streambuf	typeref:typename:AsyncRandomAccessWriteDevice::executor_type
executor_type	asio/include/asio/io_context.hpp	/^  explicit executor_type(io_context& i) : io_context_(i) {}$/;"	f	class:asio::io_context::executor_type
executor_type	asio/include/asio/io_context.hpp	/^class io_context::executor_type$/;"	c	class:asio::io_context
executor_type	asio/include/asio/ip/basic_resolver.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::ip::basic_resolver::initiate_async_resolve	typeref:typename:Executor
executor_type	asio/include/asio/ip/basic_resolver.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::ip::basic_resolver	typeref:typename:Executor
executor_type	asio/include/asio/posix/basic_descriptor.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::posix::basic_descriptor::initiate_async_wait	typeref:typename:Executor
executor_type	asio/include/asio/posix/basic_descriptor.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::posix::basic_descriptor	typeref:typename:Executor
executor_type	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::posix::basic_stream_descriptor::initiate_async_read_some	typeref:typename:Executor
executor_type	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::posix::basic_stream_descriptor::initiate_async_write_some	typeref:typename:Executor
executor_type	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::posix::basic_stream_descriptor	typeref:typename:Executor
executor_type	asio/include/asio/ssl/stream.hpp	/^    typedef stream::executor_type executor_type;$/;"	t	class:asio::ssl::stream::initiate_async_buffered_handshake	typeref:typename:stream::executor_type
executor_type	asio/include/asio/ssl/stream.hpp	/^    typedef stream::executor_type executor_type;$/;"	t	class:asio::ssl::stream::initiate_async_handshake	typeref:typename:stream::executor_type
executor_type	asio/include/asio/ssl/stream.hpp	/^    typedef typename stream::executor_type executor_type;$/;"	t	class:asio::ssl::stream::initiate_async_read_some	typeref:typename:stream::executor_type
executor_type	asio/include/asio/ssl/stream.hpp	/^    typedef typename stream::executor_type executor_type;$/;"	t	class:asio::ssl::stream::initiate_async_shutdown	typeref:typename:stream::executor_type
executor_type	asio/include/asio/ssl/stream.hpp	/^    typedef typename stream::executor_type executor_type;$/;"	t	class:asio::ssl::stream::initiate_async_write_some	typeref:typename:stream::executor_type
executor_type	asio/include/asio/ssl/stream.hpp	/^  typedef typename lowest_layer_type::executor_type executor_type;$/;"	t	class:asio::ssl::stream	typeref:typename:lowest_layer_type::executor_type
executor_type	asio/include/asio/system_context.hpp	/^  typedef system_executor executor_type;$/;"	t	class:asio::system_context	typeref:typename:system_executor
executor_type	asio/include/asio/thread_pool.hpp	/^  explicit executor_type(thread_pool& p) : pool_(p) {}$/;"	f	class:asio::thread_pool::executor_type
executor_type	asio/include/asio/thread_pool.hpp	/^class thread_pool::executor_type$/;"	c	class:asio::thread_pool
executor_type	asio/include/asio/windows/basic_object_handle.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::windows::basic_object_handle::initiate_async_wait	typeref:typename:Executor
executor_type	asio/include/asio/windows/basic_object_handle.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::windows::basic_object_handle	typeref:typename:Executor
executor_type	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::windows::basic_overlapped_handle	typeref:typename:Executor
executor_type	asio/include/asio/windows/basic_random_access_handle.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::windows::basic_random_access_handle::initiate_async_read_some_at	typeref:typename:Executor
executor_type	asio/include/asio/windows/basic_random_access_handle.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::windows::basic_random_access_handle::initiate_async_write_some_at	typeref:typename:Executor
executor_type	asio/include/asio/windows/basic_random_access_handle.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::windows::basic_random_access_handle	typeref:typename:Executor
executor_type	asio/include/asio/windows/basic_stream_handle.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::windows::basic_stream_handle::initiate_async_read_some	typeref:typename:Executor
executor_type	asio/include/asio/windows/basic_stream_handle.hpp	/^    typedef Executor executor_type;$/;"	t	class:asio::windows::basic_stream_handle::initiate_async_write_some	typeref:typename:Executor
executor_type	asio/include/asio/windows/basic_stream_handle.hpp	/^  typedef Executor executor_type;$/;"	t	class:asio::windows::basic_stream_handle	typeref:typename:Executor
executor_type	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    executor_type(priority_scheduler& ctx, int pri) noexcept$/;"	f	class:priority_scheduler::executor_type	file:
executor_type	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  class executor_type$/;"	c	class:priority_scheduler	file:
executor_type	asio/src/examples/cpp11/operations/composed_5.cpp	/^      using executor_type = asio::associated_executor_t<$/;"	t	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:asio::associated_executor_t<typename std::decay<CompletionHandler>::type,tcp::socket::executor_type>	file:
executor_type	asio/src/examples/cpp11/operations/composed_6.cpp	/^      using executor_type = asio::associated_executor_t<$/;"	t	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:asio::associated_executor_t<typename std::decay<CompletionHandler>::type,tcp::socket::executor_type>	file:
executor_type	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    executor_type(priority_scheduler& ctx, int pri) noexcept$/;"	f	class:priority_scheduler::executor_type	file:
executor_type	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  class executor_type$/;"	c	class:priority_scheduler	file:
executor_type	asio/src/examples/cpp14/operations/composed_5.cpp	/^      using executor_type = asio::associated_executor_t<$/;"	t	struct:async_write_message::__anon32ec9f8e0102::intermediate_completion_handler	file:
executor_type	asio/src/examples/cpp14/operations/composed_6.cpp	/^      using executor_type = asio::associated_executor_t<$/;"	t	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	file:
executor_type	asio/src/tests/unit/is_read_buffered.cpp	/^  typedef io_context_type::executor_type executor_type;$/;"	t	class:test_stream	typeref:typename:io_context_type::executor_type	file:
executor_type	asio/src/tests/unit/is_write_buffered.cpp	/^  typedef io_context_type::executor_type executor_type;$/;"	t	class:test_stream	typeref:typename:io_context_type::executor_type	file:
executor_type	asio/src/tests/unit/read.cpp	/^  typedef asio::io_context::executor_type executor_type;$/;"	t	class:test_stream	typeref:typename:asio::io_context::executor_type	file:
executor_type	asio/src/tests/unit/read_at.cpp	/^  typedef asio::io_context::executor_type executor_type;$/;"	t	class:test_random_access_device	typeref:typename:asio::io_context::executor_type	file:
executor_type	asio/src/tests/unit/read_until.cpp	/^  typedef asio::io_context::executor_type executor_type;$/;"	t	class:test_stream	typeref:typename:asio::io_context::executor_type	file:
executor_type	asio/src/tests/unit/write.cpp	/^  typedef asio::io_context::executor_type executor_type;$/;"	t	class:test_stream	typeref:typename:asio::io_context::executor_type	file:
executor_type	asio/src/tests/unit/write_at.cpp	/^  typedef asio::io_context::executor_type executor_type;$/;"	t	class:test_random_access_device	typeref:typename:asio::io_context::executor_type	file:
executor_with_default	asio/include/asio/use_awaitable.hpp	/^    executor_with_default(const InnerExecutor& ex) ASIO_NOEXCEPT$/;"	f	struct:asio::use_awaitable_t::executor_with_default
executor_with_default	asio/include/asio/use_awaitable.hpp	/^  struct executor_with_default : InnerExecutor$/;"	s	struct:asio::use_awaitable_t
executor_work_guard	asio/include/asio/executor_work_guard.hpp	/^  executor_work_guard(const executor_work_guard& other) ASIO_NOEXCEPT$/;"	f	class:asio::executor_work_guard
executor_work_guard	asio/include/asio/executor_work_guard.hpp	/^  executor_work_guard(executor_work_guard&& other) ASIO_NOEXCEPT$/;"	f	class:asio::executor_work_guard
executor_work_guard	asio/include/asio/executor_work_guard.hpp	/^  explicit executor_work_guard(const executor_type& e) ASIO_NOEXCEPT$/;"	f	class:asio::executor_work_guard
executor_work_guard	asio/include/asio/executor_work_guard.hpp	/^class executor_work_guard$/;"	c	namespace:asio
executors_	asio/include/asio/impl/compose.hpp	/^    composed_io_executors<Executors> executors_;$/;"	m	class:asio::detail::initiate_composed_op	typeref:typename:composed_io_executors<Executors>
executors_actor_SOURCES	asio/src/examples/cpp11/Makefile.am	/^executors_actor_SOURCES = executors\/actor.cpp$/;"	m
executors_actor_SOURCES	asio/src/examples/cpp14/Makefile.am	/^executors_actor_SOURCES = executors\/actor.cpp$/;"	m
executors_async_1_SOURCES	asio/src/examples/cpp14/Makefile.am	/^executors_async_1_SOURCES = executors\/async_1.cpp$/;"	m
executors_async_2_SOURCES	asio/src/examples/cpp14/Makefile.am	/^executors_async_2_SOURCES = executors\/async_2.cpp$/;"	m
executors_bank_account_1_SOURCES	asio/src/examples/cpp11/Makefile.am	/^executors_bank_account_1_SOURCES = executors\/bank_account_1.cpp$/;"	m
executors_bank_account_1_SOURCES	asio/src/examples/cpp14/Makefile.am	/^executors_bank_account_1_SOURCES = executors\/bank_account_1.cpp$/;"	m
executors_bank_account_2_SOURCES	asio/src/examples/cpp11/Makefile.am	/^executors_bank_account_2_SOURCES = executors\/bank_account_2.cpp$/;"	m
executors_bank_account_2_SOURCES	asio/src/examples/cpp14/Makefile.am	/^executors_bank_account_2_SOURCES = executors\/bank_account_2.cpp$/;"	m
executors_fork_join_SOURCES	asio/src/examples/cpp11/Makefile.am	/^executors_fork_join_SOURCES = executors\/fork_join.cpp$/;"	m
executors_fork_join_SOURCES	asio/src/examples/cpp14/Makefile.am	/^executors_fork_join_SOURCES = executors\/fork_join.cpp$/;"	m
executors_pipeline_SOURCES	asio/src/examples/cpp11/Makefile.am	/^executors_pipeline_SOURCES = executors\/pipeline.cpp$/;"	m
executors_pipeline_SOURCES	asio/src/examples/cpp14/Makefile.am	/^executors_pipeline_SOURCES = executors\/pipeline.cpp$/;"	m
executors_priority_scheduler_SOURCES	asio/src/examples/cpp11/Makefile.am	/^executors_priority_scheduler_SOURCES = executors\/priority_scheduler.cpp$/;"	m
executors_priority_scheduler_SOURCES	asio/src/examples/cpp14/Makefile.am	/^executors_priority_scheduler_SOURCES = executors\/priority_scheduler.cpp$/;"	m
executors_type	asio/include/asio/impl/compose.hpp	/^    typedef composed_io_executors<void()> executors_type;$/;"	t	struct:asio::detail::composed_work
executors_type	asio/include/asio/impl/compose.hpp	/^    typedef composed_io_executors<void(Head)> executors_type;$/;"	t	struct:asio::detail::composed_work
executors_type	asio/include/asio/impl/compose.hpp	/^    typedef composed_io_executors<void(Head, Tail...)> executors_type;$/;"	t	struct:asio::detail::composed_work
expecting_newline_1	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    expecting_newline_1,$/;"	e	enum:http::server::request_parser::state
expecting_newline_1	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    expecting_newline_1,$/;"	e	enum:http::server2::request_parser::state
expecting_newline_1	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    expecting_newline_1,$/;"	e	enum:http::server3::request_parser::state
expecting_newline_1	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    expecting_newline_1,$/;"	e	enum:http::server::request_parser::state
expecting_newline_2	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    expecting_newline_2,$/;"	e	enum:http::server::request_parser::state
expecting_newline_2	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    expecting_newline_2,$/;"	e	enum:http::server2::request_parser::state
expecting_newline_2	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    expecting_newline_2,$/;"	e	enum:http::server3::request_parser::state
expecting_newline_2	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    expecting_newline_2,$/;"	e	enum:http::server::request_parser::state
expecting_newline_3	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    expecting_newline_3$/;"	e	enum:http::server::request_parser::state
expecting_newline_3	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    expecting_newline_3$/;"	e	enum:http::server2::request_parser::state
expecting_newline_3	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    expecting_newline_3$/;"	e	enum:http::server3::request_parser::state
expecting_newline_3	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    expecting_newline_3$/;"	e	enum:http::server::request_parser::state
experimental	asio/include/asio/impl/awaitable.hpp	/^namespace std { namespace experimental {$/;"	n	namespace:std
expires_after	asio/include/asio/basic_socket_iostream.hpp	/^  void expires_after(const duration& expiry_time)$/;"	f	class:asio::basic_socket_iostream	typeref:typename:void
expires_after	asio/include/asio/basic_socket_streambuf.hpp	/^  void expires_after(const duration& expiry_time)$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:void
expires_after	asio/include/asio/basic_waitable_timer.hpp	/^  std::size_t expires_after(const duration& expiry_time)$/;"	f	class:asio::basic_waitable_timer	typeref:typename:std::size_t
expires_after	asio/include/asio/detail/deadline_timer_service.hpp	/^  std::size_t expires_after(implementation_type& impl,$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:std::size_t
expires_at	asio/include/asio/basic_deadline_timer.hpp	/^  std::size_t expires_at(const time_type& expiry_time)$/;"	f	class:asio::basic_deadline_timer	typeref:typename:std::size_t
expires_at	asio/include/asio/basic_deadline_timer.hpp	/^  std::size_t expires_at(const time_type& expiry_time,$/;"	f	class:asio::basic_deadline_timer	typeref:typename:std::size_t
expires_at	asio/include/asio/basic_deadline_timer.hpp	/^  time_type expires_at() const$/;"	f	class:asio::basic_deadline_timer	typeref:typename:time_type
expires_at	asio/include/asio/basic_socket_iostream.hpp	/^  time_point expires_at() const$/;"	f	class:asio::basic_socket_iostream	typeref:typename:time_point
expires_at	asio/include/asio/basic_socket_iostream.hpp	/^  void expires_at(const time_point& expiry_time)$/;"	f	class:asio::basic_socket_iostream	typeref:typename:void
expires_at	asio/include/asio/basic_socket_streambuf.hpp	/^  time_point expires_at() const$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:time_point
expires_at	asio/include/asio/basic_socket_streambuf.hpp	/^  void expires_at(const time_point& expiry_time)$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:void
expires_at	asio/include/asio/basic_waitable_timer.hpp	/^  std::size_t expires_at(const time_point& expiry_time)$/;"	f	class:asio::basic_waitable_timer	typeref:typename:std::size_t
expires_at	asio/include/asio/basic_waitable_timer.hpp	/^  std::size_t expires_at(const time_point& expiry_time,$/;"	f	class:asio::basic_waitable_timer	typeref:typename:std::size_t
expires_at	asio/include/asio/basic_waitable_timer.hpp	/^  time_point expires_at() const$/;"	f	class:asio::basic_waitable_timer	typeref:typename:time_point
expires_at	asio/include/asio/detail/deadline_timer_service.hpp	/^  std::size_t expires_at(implementation_type& impl,$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:std::size_t
expires_at	asio/include/asio/detail/deadline_timer_service.hpp	/^  time_type expires_at(const implementation_type& impl) const$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:time_type
expires_from_now	asio/include/asio/basic_deadline_timer.hpp	/^  duration_type expires_from_now() const$/;"	f	class:asio::basic_deadline_timer	typeref:typename:duration_type
expires_from_now	asio/include/asio/basic_deadline_timer.hpp	/^  std::size_t expires_from_now(const duration_type& expiry_time)$/;"	f	class:asio::basic_deadline_timer	typeref:typename:std::size_t
expires_from_now	asio/include/asio/basic_deadline_timer.hpp	/^  std::size_t expires_from_now(const duration_type& expiry_time,$/;"	f	class:asio::basic_deadline_timer	typeref:typename:std::size_t
expires_from_now	asio/include/asio/basic_socket_iostream.hpp	/^  duration expires_from_now() const$/;"	f	class:asio::basic_socket_iostream	typeref:typename:duration
expires_from_now	asio/include/asio/basic_socket_iostream.hpp	/^  void expires_from_now(const duration& expiry_time)$/;"	f	class:asio::basic_socket_iostream	typeref:typename:void
expires_from_now	asio/include/asio/basic_socket_streambuf.hpp	/^  duration expires_from_now() const$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:duration
expires_from_now	asio/include/asio/basic_socket_streambuf.hpp	/^  void expires_from_now(const duration& expiry_time)$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:void
expires_from_now	asio/include/asio/basic_waitable_timer.hpp	/^  duration expires_from_now() const$/;"	f	class:asio::basic_waitable_timer	typeref:typename:duration
expires_from_now	asio/include/asio/basic_waitable_timer.hpp	/^  std::size_t expires_from_now(const duration& expiry_time)$/;"	f	class:asio::basic_waitable_timer	typeref:typename:std::size_t
expires_from_now	asio/include/asio/basic_waitable_timer.hpp	/^  std::size_t expires_from_now(const duration& expiry_time,$/;"	f	class:asio::basic_waitable_timer	typeref:typename:std::size_t
expires_from_now	asio/include/asio/detail/deadline_timer_service.hpp	/^  duration_type expires_from_now(const implementation_type& impl) const$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:duration_type
expires_from_now	asio/include/asio/detail/deadline_timer_service.hpp	/^  std::size_t expires_from_now(implementation_type& impl,$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:std::size_t
expiry	asio/include/asio/basic_socket_iostream.hpp	/^  time_point expiry() const$/;"	f	class:asio::basic_socket_iostream	typeref:typename:time_point
expiry	asio/include/asio/basic_socket_streambuf.hpp	/^  time_point expiry() const$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:time_point
expiry	asio/include/asio/basic_waitable_timer.hpp	/^  time_point expiry() const$/;"	f	class:asio::basic_waitable_timer	typeref:typename:time_point
expiry	asio/include/asio/detail/deadline_timer_service.hpp	/^    time_type expiry;$/;"	m	struct:asio::detail::deadline_timer_service::implementation_type	typeref:typename:time_type
expiry	asio/include/asio/detail/deadline_timer_service.hpp	/^  time_type expiry(const implementation_type& impl) const$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:time_type
expiry	asio/include/asio/ssl/detail/stream_core.hpp	/^  static asio::deadline_timer::time_type expiry($/;"	f	struct:asio::ssl::detail::stream_core	typeref:typename:asio::deadline_timer::time_type
expiry	asio/include/asio/ssl/detail/stream_core.hpp	/^  static asio::steady_timer::time_point expiry($/;"	f	struct:asio::ssl::detail::stream_core	typeref:typename:asio::steady_timer::time_point
expiry_time_	asio/include/asio/basic_socket_streambuf.hpp	/^  time_point expiry_time_;$/;"	m	class:asio::basic_socket_streambuf	typeref:typename:time_point
expr_	asio/include/asio/impl/read_until.hpp	/^    RegEx expr_;$/;"	m	class:asio::detail::read_until_expr_op_v1	typeref:typename:RegEx
expr_	asio/include/asio/impl/read_until.hpp	/^    RegEx expr_;$/;"	m	class:asio::detail::read_until_expr_op_v2	typeref:typename:RegEx
ext_bio_	asio/include/asio/ssl/detail/engine.hpp	/^  BIO* ext_bio_;$/;"	m	class:asio::ssl::detail::engine	typeref:typename:BIO *
extension	asio/src/examples/cpp03/http/server/mime_types.cpp	/^  const char* extension;$/;"	m	struct:http::server::mime_types::mapping	typeref:typename:const char *	file:
extension	asio/src/examples/cpp03/http/server2/mime_types.cpp	/^  const char* extension;$/;"	m	struct:http::server2::mime_types::mapping	typeref:typename:const char *	file:
extension	asio/src/examples/cpp03/http/server3/mime_types.cpp	/^  const char* extension;$/;"	m	struct:http::server3::mime_types::mapping	typeref:typename:const char *	file:
extension	asio/src/examples/cpp03/http/server4/mime_types.cpp	/^  const char* extension;$/;"	m	struct:http::server4::mime_types::mapping	typeref:typename:const char *	file:
extension	asio/src/examples/cpp11/http/server/mime_types.cpp	/^  const char* extension;$/;"	m	struct:http::server::mime_types::mapping	typeref:typename:const char *	file:
extension_to_type	asio/src/examples/cpp03/http/server/mime_types.cpp	/^std::string extension_to_type(const std::string& extension)$/;"	f	namespace:http::server::mime_types	typeref:typename:std::string
extension_to_type	asio/src/examples/cpp03/http/server2/mime_types.cpp	/^std::string extension_to_type(const std::string& extension)$/;"	f	namespace:http::server2::mime_types	typeref:typename:std::string
extension_to_type	asio/src/examples/cpp03/http/server3/mime_types.cpp	/^std::string extension_to_type(const std::string& extension)$/;"	f	namespace:http::server3::mime_types	typeref:typename:std::string
extension_to_type	asio/src/examples/cpp03/http/server4/mime_types.cpp	/^std::string extension_to_type(const std::string& extension)$/;"	f	namespace:http::server4::mime_types	typeref:typename:std::string
extension_to_type	asio/src/examples/cpp11/http/server/mime_types.cpp	/^std::string extension_to_type(const std::string& extension)$/;"	f	namespace:http::server::mime_types	typeref:typename:std::string
f_	asio/include/asio/detail/posix_thread.hpp	/^    Function f_;$/;"	m	class:asio::detail::posix_thread::func	typeref:typename:Function
f_	asio/include/asio/detail/win_thread.hpp	/^    Function f_;$/;"	m	class:asio::detail::win_thread::func	typeref:typename:Function
f_	asio/include/asio/detail/winapp_thread.hpp	/^    Function f_;$/;"	m	class:asio::detail::winapp_thread::func	typeref:typename:Function
f_	asio/include/asio/detail/wince_thread.hpp	/^    Function f_;$/;"	m	class:asio::detail::wince_thread::func	typeref:typename:Function
f_	asio/include/asio/impl/use_future.hpp	/^  typename decay<F>::type f_;$/;"	m	class:asio::detail::promise_invoker	typeref:typename:decay<F>::type
factory_type	asio/include/asio/detail/service_registry.hpp	/^  typedef execution_context::service*(*factory_type)(void*);$/;"	t	class:asio::detail::service_registry	typeref:typename:execution_context::service * (*)(void *)
fall_off_end_coro	asio/src/tests/unit/coroutine.cpp	/^void fall_off_end_coro(asio::coroutine& coro)$/;"	f	typeref:typename:void
fall_off_end_test	asio/src/tests/unit/coroutine.cpp	/^void fall_off_end_test()$/;"	f	typeref:typename:void
fallback_func_type	asio/include/asio/impl/connect.hpp	/^    typedef char (*fallback_func_type)(...);$/;"	t	struct:asio::detail::legacy_connect_condition_helper	typeref:typename:char (*)(...)
false_cond	asio/src/tests/unit/connect.cpp	/^bool false_cond(const asio::error_code& \/*ec*\/,$/;"	f	typeref:typename:bool
family	asio/include/asio/generic/datagram_protocol.hpp	/^  int family() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::datagram_protocol	typeref:typename:int
family	asio/include/asio/generic/detail/endpoint.hpp	/^  int family() const$/;"	f	class:asio::generic::detail::endpoint	typeref:typename:int
family	asio/include/asio/generic/raw_protocol.hpp	/^  int family() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::raw_protocol	typeref:typename:int
family	asio/include/asio/generic/seq_packet_protocol.hpp	/^  int family() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::seq_packet_protocol	typeref:typename:int
family	asio/include/asio/generic/stream_protocol.hpp	/^  int family() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::stream_protocol	typeref:typename:int
family	asio/include/asio/ip/icmp.hpp	/^  int family() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::icmp	typeref:typename:int
family	asio/include/asio/ip/tcp.hpp	/^  int family() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::tcp	typeref:typename:int
family	asio/include/asio/ip/udp.hpp	/^  int family() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::udp	typeref:typename:int
family	asio/include/asio/local/datagram_protocol.hpp	/^  int family() const ASIO_NOEXCEPT$/;"	f	class:asio::local::datagram_protocol	typeref:typename:int
family	asio/include/asio/local/stream_protocol.hpp	/^  int family() const ASIO_NOEXCEPT$/;"	f	class:asio::local::stream_protocol	typeref:typename:int
family_	asio/include/asio/generic/datagram_protocol.hpp	/^  int family_;$/;"	m	class:asio::generic::datagram_protocol	typeref:typename:int
family_	asio/include/asio/generic/raw_protocol.hpp	/^  int family_;$/;"	m	class:asio::generic::raw_protocol	typeref:typename:int
family_	asio/include/asio/generic/seq_packet_protocol.hpp	/^  int family_;$/;"	m	class:asio::generic::seq_packet_protocol	typeref:typename:int
family_	asio/include/asio/generic/stream_protocol.hpp	/^  int family_;$/;"	m	class:asio::generic::stream_protocol	typeref:typename:int
family_	asio/include/asio/ip/icmp.hpp	/^  int family_;$/;"	m	class:asio::ip::icmp	typeref:typename:int
family_	asio/include/asio/ip/tcp.hpp	/^  int family_;$/;"	m	class:asio::ip::tcp	typeref:typename:int
family_	asio/include/asio/ip/udp.hpp	/^  int family_;$/;"	m	class:asio::ip::udp	typeref:typename:int
fast_dispatch_	asio/include/asio/executor.hpp	/^    const bool fast_dispatch_;$/;"	m	class:asio::executor::impl_base	typeref:typename:const bool
fault	asio/include/asio/error.hpp	/^  fault = ASIO_SOCKET_ERROR(EFAULT),$/;"	e	enum:asio::error::basic_errors
fd_array	asio/include/asio/detail/win_fd_set_adapter.hpp	/^    SOCKET fd_array[1];$/;"	m	struct:asio::detail::win_fd_set_adapter::win_fd_set	typeref:typename:SOCKET[1]
fd_count	asio/include/asio/detail/win_fd_set_adapter.hpp	/^    u_int fd_count;$/;"	m	struct:asio::detail::win_fd_set_adapter::win_fd_set	typeref:typename:u_int
fd_set_	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^  mutable fd_set fd_set_;$/;"	m	class:asio::detail::posix_fd_set_adapter	typeref:typename:fd_set
fd_set_	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  win_fd_set* fd_set_;$/;"	m	class:asio::detail::win_fd_set_adapter	typeref:typename:win_fd_set *
fd_set_adapter	asio/include/asio/detail/fd_set_adapter.hpp	/^typedef win_fd_set_adapter fd_set_adapter;$/;"	t	namespace:asio::detail	typeref:typename:win_fd_set_adapter
fd_set_failure	asio/include/asio/error.hpp	/^  fd_set_failure$/;"	e	enum:asio::error::misc_errors
fd_sets_	asio/include/asio/detail/select_reactor.hpp	/^  fd_set_adapter fd_sets_[max_select_ops];$/;"	m	class:asio::detail::select_reactor	typeref:typename:fd_set_adapter[]
fenced_block	asio/include/asio/detail/fenced_block.hpp	/^typedef null_fenced_block fenced_block;$/;"	t	namespace:asio::detail	typeref:typename:null_fenced_block
file	asio/src/doc/reference.xsl	/^  <xsl:param name="file"\/>$/;"	p	namedTemplate:header-requirements
file_	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  random_access_handle file_;$/;"	m	class:connection	typeref:typename:random_access_handle	file:
file_format	asio/include/asio/ssl/context_base.hpp	/^  enum file_format$/;"	g	class:asio::ssl::context_base
file_handler	asio/src/examples/cpp03/http/server4/file_handler.cpp	/^file_handler::file_handler(const std::string& doc_root)$/;"	f	class:http::server4::file_handler
file_handler	asio/src/examples/cpp03/http/server4/file_handler.hpp	/^class file_handler$/;"	c	namespace:http::server4
filename_	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  std::string filename_;$/;"	m	class:connection	typeref:typename:std::string	file:
filename_	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  std::string filename_;$/;"	m	class:server	typeref:typename:std::string	file:
fill	asio/include/asio/buffered_stream.hpp	/^  std::size_t fill()$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
fill	asio/include/asio/buffered_stream.hpp	/^  std::size_t fill(asio::error_code& ec)$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
fill	asio/include/asio/impl/buffered_read_stream.hpp	/^std::size_t buffered_read_stream<Stream>::fill()$/;"	f	class:asio::buffered_read_stream	typeref:typename:std::size_t
fill	asio/include/asio/impl/buffered_read_stream.hpp	/^std::size_t buffered_read_stream<Stream>::fill(asio::error_code& ec)$/;"	f	class:asio::buffered_read_stream	typeref:typename:std::size_t
fill_handler	asio/src/tests/unit/buffered_read_stream.cpp	/^void fill_handler(const asio::error_code&, std::size_t)$/;"	f	typeref:typename:void
fill_handler	asio/src/tests/unit/buffered_stream.cpp	/^void fill_handler(const asio::error_code&, std::size_t)$/;"	f	typeref:typename:void
filter	asio/src/examples/cpp11/executors/pipeline.cpp	/^void filter(queue_back<std::string> in, queue_front<std::string> out)$/;"	f	typeref:typename:void
filter	asio/src/examples/cpp14/executors/pipeline.cpp	/^void filter(queue_back<std::string> in, queue_front<std::string> out)$/;"	f	typeref:typename:void
final_suspend	asio/include/asio/impl/awaitable.hpp	/^  auto final_suspend() noexcept$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:auto
find	asio/include/asio/detail/hash_map.hpp	/^  const_iterator find(const K& k) const$/;"	f	class:asio::detail::hash_map	typeref:typename:const_iterator
find	asio/include/asio/detail/hash_map.hpp	/^  iterator find(const K& k)$/;"	f	class:asio::detail::hash_map	typeref:typename:iterator
find	asio/include/asio/ip/address_v4_range.hpp	/^  iterator find(const address_v4& addr) const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range	typeref:typename:iterator
find	asio/include/asio/ip/address_v6_range.hpp	/^  iterator find(const address_v6& addr) const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range	typeref:typename:iterator
find_include_files	asio/tsify.pl	/^sub find_include_files$/;"	s
first	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static Buffer first(Iterator begin, Iterator end)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:Buffer
first	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static Buffer first(const Buffers& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:Buffer
first	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static Buffer first(const asio::const_buffer& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:Buffer
first	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static Buffer first(const asio::const_buffers_1& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:Buffer
first	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static Buffer first(const asio::mutable_buffer& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:Buffer
first	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static Buffer first(const asio::mutable_buffers_1& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:Buffer
first	asio/include/asio/detail/hash_map.hpp	/^    iterator first;$/;"	m	struct:asio::detail::hash_map::bucket_type	typeref:typename:iterator
first	asio/include/asio/detail/object_pool.hpp	/^  Object* first()$/;"	f	class:asio::detail::object_pool	typeref:typename:Object *
first_	asio/include/asio/detail/thread_group.hpp	/^  item* first_;$/;"	m	class:asio::detail::thread_group	typeref:typename:item *
first_	asio/include/asio/detail/timer_queue_set.hpp	/^  timer_queue_base* first_;$/;"	m	class:asio::detail::timer_queue_set	typeref:typename:timer_queue_base *
first_argument_type	asio/include/asio/bind_executor.hpp	/^  typedef A1 first_argument_type;$/;"	t	struct:asio::detail::executor_binder_argument_type	typeref:typename:A1
first_argument_type	asio/include/asio/bind_executor.hpp	/^  typedef see_below first_argument_type;$/;"	t	class:asio::executor_binder	typeref:typename:see_below
first_argument_type	asio/include/asio/bind_executor.hpp	/^  typedef typename T::first_argument_type first_argument_type;$/;"	t	struct:asio::detail::executor_binder_argument_types	typeref:typename:T::first_argument_type
first_service_	asio/include/asio/detail/service_registry.hpp	/^  execution_context::service* first_service_;$/;"	m	class:asio::detail::service_registry	typeref:typename:execution_context::service *
flags	asio/include/asio/ip/resolver_base.hpp	/^  typedef unspecified flags;$/;"	t	class:asio::ip::resolver_base	typeref:typename:unspecified
flags_	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^  socket_base::message_flags flags_;$/;"	m	class:asio::detail::reactive_socket_recv_op_base	typeref:typename:socket_base::message_flags
flags_	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  socket_base::message_flags flags_;$/;"	m	class:asio::detail::reactive_socket_recvfrom_op_base	typeref:typename:socket_base::message_flags
flags_	asio/include/asio/detail/reactive_socket_send_op.hpp	/^  socket_base::message_flags flags_;$/;"	m	class:asio::detail::reactive_socket_send_op_base	typeref:typename:socket_base::message_flags
flags_	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^  socket_base::message_flags flags_;$/;"	m	class:asio::detail::reactive_socket_sendto_op_base	typeref:typename:socket_base::message_flags
flow_control	asio/include/asio/serial_port_base.hpp	/^  class flow_control$/;"	c	class:asio::serial_port_base
flush	asio/include/asio/buffered_stream.hpp	/^  std::size_t flush()$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
flush	asio/include/asio/buffered_stream.hpp	/^  std::size_t flush(asio::error_code& ec)$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
flush	asio/include/asio/impl/buffered_write_stream.hpp	/^std::size_t buffered_write_stream<Stream>::flush()$/;"	f	class:asio::buffered_write_stream	typeref:typename:std::size_t
flush	asio/include/asio/impl/buffered_write_stream.hpp	/^std::size_t buffered_write_stream<Stream>::flush(asio::error_code& ec)$/;"	f	class:asio::buffered_write_stream	typeref:typename:std::size_t
flush_handler	asio/src/tests/unit/buffered_stream.cpp	/^void flush_handler(const asio::error_code&, std::size_t)$/;"	f	typeref:typename:void
flush_handler	asio/src/tests/unit/buffered_write_stream.cpp	/^void flush_handler(const asio::error_code&, std::size_t)$/;"	f	typeref:typename:void
for_reading	asio/include/asio/ssl/context_base.hpp	/^    for_reading,$/;"	e	enum:asio::ssl::context_base::password_purpose
for_writing	asio/include/asio/ssl/context_base.hpp	/^    for_writing$/;"	e	enum:asio::ssl::context_base::password_purpose
forbidden	asio/src/examples/cpp03/http/server/reply.cpp	/^const char forbidden[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
forbidden	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string forbidden =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
forbidden	asio/src/examples/cpp03/http/server/reply.hpp	/^    forbidden = 403,$/;"	e	enum:http::server::reply::status_type
forbidden	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char forbidden[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
forbidden	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string forbidden =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
forbidden	asio/src/examples/cpp03/http/server2/reply.hpp	/^    forbidden = 403,$/;"	e	enum:http::server2::reply::status_type
forbidden	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char forbidden[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
forbidden	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string forbidden =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
forbidden	asio/src/examples/cpp03/http/server3/reply.hpp	/^    forbidden = 403,$/;"	e	enum:http::server3::reply::status_type
forbidden	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char forbidden[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
forbidden	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string forbidden =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
forbidden	asio/src/examples/cpp03/http/server4/reply.hpp	/^    forbidden = 403,$/;"	e	enum:http::server4::reply::status_type
forbidden	asio/src/examples/cpp11/http/server/reply.cpp	/^const char forbidden[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
forbidden	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string forbidden =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
forbidden	asio/src/examples/cpp11/http/server/reply.hpp	/^    forbidden = 403,$/;"	e	enum:http::server::reply::status_type
fork	asio/include/asio/yield.hpp	/^# define fork /;"	d
fork_child	asio/include/asio/execution_context.hpp	/^    fork_child$/;"	e	enum:asio::execution_context::fork_event
fork_daemon_SOURCES	asio/src/examples/cpp03/Makefile.am	/^fork_daemon_SOURCES = fork\/daemon.cpp$/;"	m
fork_daemon_SOURCES	asio/src/examples/cpp11/Makefile.am	/^fork_daemon_SOURCES = fork\/daemon.cpp$/;"	m
fork_event	asio/include/asio/execution_context.hpp	/^  enum fork_event$/;"	g	class:asio::execution_context
fork_executor	asio/src/examples/cpp11/executors/fork_join.cpp	/^  fork_executor(fork_join_pool& ctx)$/;"	f	class:fork_executor	file:
fork_executor	asio/src/examples/cpp11/executors/fork_join.cpp	/^class fork_executor$/;"	c	file:
fork_executor	asio/src/examples/cpp14/executors/fork_join.cpp	/^  fork_executor(fork_join_pool& ctx)$/;"	f	class:fork_executor	file:
fork_executor	asio/src/examples/cpp14/executors/fork_join.cpp	/^class fork_executor$/;"	c	file:
fork_join_pool	asio/src/examples/cpp11/executors/fork_join.cpp	/^  explicit fork_join_pool($/;"	f	class:fork_join_pool	file:
fork_join_pool	asio/src/examples/cpp11/executors/fork_join.cpp	/^class fork_join_pool : public execution_context$/;"	c	file:
fork_join_pool	asio/src/examples/cpp14/executors/fork_join.cpp	/^  explicit fork_join_pool($/;"	f	class:fork_join_pool	file:
fork_join_pool	asio/src/examples/cpp14/executors/fork_join.cpp	/^class fork_join_pool : public execution_context$/;"	c	file:
fork_join_sort	asio/src/examples/cpp11/executors/fork_join.cpp	/^void fork_join_sort(Iterator begin, Iterator end)$/;"	f	typeref:typename:void
fork_join_sort	asio/src/examples/cpp14/executors/fork_join.cpp	/^void fork_join_sort(Iterator begin, Iterator end)$/;"	f	typeref:typename:void
fork_parent	asio/include/asio/execution_context.hpp	/^    fork_parent,$/;"	e	enum:asio::execution_context::fork_event
fork_prepare	asio/include/asio/execution_context.hpp	/^    fork_prepare,$/;"	e	enum:asio::execution_context::fork_event
fork_process_per_connection_SOURCES	asio/src/examples/cpp03/Makefile.am	/^fork_process_per_connection_SOURCES = fork\/process_per_connection.cpp$/;"	m
fork_process_per_connection_SOURCES	asio/src/examples/cpp11/Makefile.am	/^fork_process_per_connection_SOURCES = fork\/process_per_connection.cpp$/;"	m
forwarding_posix_time_traits	asio/include/asio/detail/timer_queue_ptime.hpp	/^struct forwarding_posix_time_traits : time_traits<boost::posix_time::ptime> {};$/;"	s	namespace:asio::detail
fragment_offset	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned short fragment_offset() const { return decode(6, 7) & 0x1FFF; }$/;"	f	class:ipv4_header	typeref:typename:unsigned short
frame	asio/include/asio/impl/use_awaitable.hpp	/^  awaitable_frame<T, Executor>* frame() noexcept$/;"	f	class:asio::detail::awaitable_handler_base	typeref:typename:awaitable_frame<T,Executor> *
frame	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  frame()$/;"	f	class:frame
frame	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  frame(unsigned long frame_number, const std::string& payload_data)$/;"	f	class:frame
frame	asio/src/examples/cpp03/porthopper/protocol.hpp	/^class frame$/;"	c
frame_	asio/include/asio/awaitable.hpp	/^  detail::awaitable_frame<T, Executor>* frame_;$/;"	m	class:asio::awaitable	typeref:typename:detail::awaitable_frame<T,Executor> *
frame_size	asio/src/examples/cpp03/porthopper/protocol.hpp	/^    frame_size = encoded_number_size + payload_size$/;"	e	enum:frame::__anona16aa5440303
free	asio/include/asio/detail/object_pool.hpp	/^  void free(Object* o)$/;"	f	class:asio::detail::object_pool	typeref:typename:void
free_list_	asio/include/asio/detail/object_pool.hpp	/^  Object* free_list_;$/;"	m	class:asio::detail::object_pool	typeref:typename:Object *
from_string	asio/include/asio/ip/impl/address.hpp	/^inline address address::from_string($/;"	f	class:asio::ip::address	typeref:typename:address
from_string	asio/include/asio/ip/impl/address.hpp	/^inline address address::from_string(const char* str)$/;"	f	class:asio::ip::address	typeref:typename:address
from_string	asio/include/asio/ip/impl/address.hpp	/^inline address address::from_string(const std::string& str)$/;"	f	class:asio::ip::address	typeref:typename:address
from_string	asio/include/asio/ip/impl/address_v4.hpp	/^inline address_v4 address_v4::from_string($/;"	f	class:asio::ip::address_v4	typeref:typename:address_v4
from_string	asio/include/asio/ip/impl/address_v4.hpp	/^inline address_v4 address_v4::from_string(const char* str)$/;"	f	class:asio::ip::address_v4	typeref:typename:address_v4
from_string	asio/include/asio/ip/impl/address_v4.hpp	/^inline address_v4 address_v4::from_string(const std::string& str)$/;"	f	class:asio::ip::address_v4	typeref:typename:address_v4
from_string	asio/include/asio/ip/impl/address_v6.hpp	/^inline address_v6 address_v6::from_string($/;"	f	class:asio::ip::address_v6	typeref:typename:address_v6
from_string	asio/include/asio/ip/impl/address_v6.hpp	/^inline address_v6 address_v6::from_string(const char* str)$/;"	f	class:asio::ip::address_v6	typeref:typename:address_v6
from_string	asio/include/asio/ip/impl/address_v6.hpp	/^inline address_v6 address_v6::from_string(const std::string& str)$/;"	f	class:asio::ip::address_v6	typeref:typename:address_v6
front	asio/include/asio/detail/op_queue.hpp	/^  Operation* front()$/;"	f	class:asio::detail::op_queue	typeref:typename:Operation *
front	asio/include/asio/detail/op_queue.hpp	/^  static Operation*& front(op_queue<Operation>& q)$/;"	f	class:asio::detail::op_queue_access	typeref:typename:Operation * &
front_	asio/include/asio/detail/op_queue.hpp	/^  Operation* front_;$/;"	m	class:asio::detail::op_queue	typeref:typename:Operation *
full	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^  enum full_t { full };$/;"	e	enum:asio::detail::gcc_arm_fenced_block::full_t
full	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^  enum full_t { full };$/;"	e	enum:asio::detail::gcc_hppa_fenced_block::full_t
full	asio/include/asio/detail/gcc_sync_fenced_block.hpp	/^  enum half_or_full_t { half, full };$/;"	e	enum:asio::detail::gcc_sync_fenced_block::half_or_full_t
full	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^  enum full_t { full };$/;"	e	enum:asio::detail::gcc_x86_fenced_block::full_t
full	asio/include/asio/detail/macos_fenced_block.hpp	/^  enum full_t { full };$/;"	e	enum:asio::detail::macos_fenced_block::full_t
full	asio/include/asio/detail/null_fenced_block.hpp	/^  enum half_or_full_t { half, full };$/;"	e	enum:asio::detail::null_fenced_block::half_or_full_t
full	asio/include/asio/detail/solaris_fenced_block.hpp	/^  enum full_t { full };$/;"	e	enum:asio::detail::solaris_fenced_block::full_t
full	asio/include/asio/detail/std_fenced_block.hpp	/^  enum full_t { full };$/;"	e	enum:asio::detail::std_fenced_block::full_t
full	asio/include/asio/detail/win_fenced_block.hpp	/^  enum full_t { full };$/;"	e	enum:asio::detail::win_fenced_block::full_t
full_t	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^  enum full_t { full };$/;"	g	class:asio::detail::gcc_arm_fenced_block
full_t	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^  enum full_t { full };$/;"	g	class:asio::detail::gcc_hppa_fenced_block
full_t	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^  enum full_t { full };$/;"	g	class:asio::detail::gcc_x86_fenced_block
full_t	asio/include/asio/detail/macos_fenced_block.hpp	/^  enum full_t { full };$/;"	g	class:asio::detail::macos_fenced_block
full_t	asio/include/asio/detail/solaris_fenced_block.hpp	/^  enum full_t { full };$/;"	g	class:asio::detail::solaris_fenced_block
full_t	asio/include/asio/detail/std_fenced_block.hpp	/^  enum full_t { full };$/;"	g	class:asio::detail::std_fenced_block
full_t	asio/include/asio/detail/win_fenced_block.hpp	/^  enum full_t { full };$/;"	g	class:asio::detail::win_fenced_block
func	asio/include/asio/detail/posix_thread.hpp	/^    func(Function f)$/;"	f	class:asio::detail::posix_thread::func
func	asio/include/asio/detail/posix_thread.hpp	/^  class func$/;"	c	class:asio::detail::posix_thread
func	asio/include/asio/detail/win_thread.hpp	/^    func(Function f)$/;"	f	class:asio::detail::win_thread::func
func	asio/include/asio/detail/win_thread.hpp	/^  class func$/;"	c	class:asio::detail::win_thread
func	asio/include/asio/detail/winapp_thread.hpp	/^    func(Function f)$/;"	f	class:asio::detail::winapp_thread::func
func	asio/include/asio/detail/winapp_thread.hpp	/^  class func$/;"	c	class:asio::detail::winapp_thread
func	asio/include/asio/detail/wince_thread.hpp	/^    func(Function f)$/;"	f	class:asio::detail::wince_thread::func
func	asio/include/asio/detail/wince_thread.hpp	/^  class func$/;"	c	class:asio::detail::wince_thread
func_	asio/include/asio/detail/executor_function.hpp	/^  func_type func_;$/;"	m	class:asio::detail::executor_function_base	typeref:typename:func_type
func_	asio/include/asio/detail/scheduler_operation.hpp	/^  func_type func_;$/;"	m	class:asio::detail::ASIO_INHERIT_TRACKED_HANDLER	typeref:typename:func_type
func_	asio/include/asio/detail/win_iocp_operation.hpp	/^  func_type func_;$/;"	m	class:asio::detail::win_iocp_operation	typeref:typename:func_type
func_	asio/include/asio/impl/executor.hpp	/^  detail::executor_function_base* func_;$/;"	m	class:asio::executor::function	typeref:typename:detail::executor_function_base *
func_base	asio/include/asio/detail/posix_thread.hpp	/^  class func_base$/;"	c	class:asio::detail::posix_thread
func_base	asio/include/asio/detail/win_thread.hpp	/^  class func_base$/;"	c	class:asio::detail::win_thread
func_base	asio/include/asio/detail/winapp_thread.hpp	/^  class func_base$/;"	c	class:asio::detail::winapp_thread
func_base	asio/include/asio/detail/wince_thread.hpp	/^  class func_base$/;"	c	class:asio::detail::wince_thread
func_type	asio/include/asio/detail/executor_function.hpp	/^  typedef void (*func_type)(executor_function_base*, bool);$/;"	t	class:asio::detail::executor_function_base	typeref:typename:void (*)(executor_function_base *,bool)
func_type	asio/include/asio/detail/scheduler_operation.hpp	/^  typedef void (*func_type)(void*,$/;"	t	class:asio::detail::ASIO_INHERIT_TRACKED_HANDLER	typeref:typename:void (*)(void *,scheduler_operation *,const asio::error_code &,std::size_t)
func_type	asio/include/asio/detail/win_iocp_operation.hpp	/^  typedef void (*func_type)($/;"	t	class:asio::detail::win_iocp_operation	typeref:typename:void (*)(void *,win_iocp_operation *,const asio::error_code &,std::size_t)
func_type	asio/include/asio/impl/executor.hpp	/^    typedef detail::executor_function<F, Alloc> func_type;$/;"	t	function:asio::executor::function::function	typeref:typename:detail::executor_function<F,Alloc>
function	asio/include/asio/impl/executor.hpp	/^  explicit function(F f, const Alloc& a)$/;"	f	class:asio::executor::function
function	asio/include/asio/impl/executor.hpp	/^  function(function&& other) ASIO_NOEXCEPT$/;"	f	class:asio::executor::function
function	asio/include/asio/impl/executor.hpp	/^class executor::function$/;"	c	class:asio::executor
function	asio/src/doc/reference.xsl	/^<xsl:template name="function">$/;"	n
function	asio/src/examples/cpp11/executors/fork_join.cpp	/^    explicit function(Func f, const std::shared_ptr<std::size_t>& w)$/;"	f	struct:fork_executor::function	file:
function	asio/src/examples/cpp11/executors/fork_join.cpp	/^  struct function : fork_join_pool::function_base$/;"	s	class:fork_executor	file:
function	asio/src/examples/cpp14/executors/fork_join.cpp	/^    explicit function(Func f, const std::shared_ptr<std::size_t>& w)$/;"	f	struct:fork_executor::function	file:
function	asio/src/examples/cpp14/executors/fork_join.cpp	/^  struct function : fork_join_pool::function_base$/;"	s	class:fork_executor	file:
function_	asio/include/asio/detail/executor_function.hpp	/^  Function function_;$/;"	m	class:asio::detail::executor_function	typeref:typename:Function
function_	asio/include/asio/impl/awaitable.hpp	/^      Function function_;$/;"	m	struct:asio::detail::awaitable_frame_base::await_transform::result	typeref:typename:Function
function_	asio/include/asio/impl/spawn.hpp	/^    Function function_;$/;"	m	struct:asio::detail::spawn_data	typeref:typename:Function
function_	asio/include/asio/impl/use_future.hpp	/^  Function function_;$/;"	m	class:asio::detail::packaged_handler	typeref:typename:Function
function_	asio/include/asio/impl/use_future.hpp	/^  Function function_;$/;"	m	class:asio::detail::packaged_token	typeref:typename:Function
function_	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    boost::function<void()> function_;$/;"	m	class:handler_priority_queue::queued_handler	typeref:typename:boost::function<void ()>	file:
function_	asio/src/examples/cpp11/executors/actor.cpp	/^  void (Actor::* function_)(Message, actor_address);$/;"	m	class:mf_message_handler	typeref:typename:void (Actor::*)(Message,actor_address)	file:
function_	asio/src/examples/cpp11/executors/fork_join.cpp	/^    Func function_;$/;"	m	struct:fork_executor::function	typeref:typename:Func	file:
function_	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    Func function_;$/;"	m	struct:priority_scheduler::item	typeref:typename:Func	file:
function_	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    Function function_;$/;"	m	class:handler_priority_queue::queued_handler	typeref:typename:Function	file:
function_	asio/src/examples/cpp14/executors/actor.cpp	/^  void (Actor::* function_)(Message, actor_address);$/;"	m	class:mf_message_handler	typeref:typename:void (Actor::*)(Message,actor_address)	file:
function_	asio/src/examples/cpp14/executors/fork_join.cpp	/^    Func function_;$/;"	m	struct:fork_executor::function	typeref:typename:Func	file:
function_	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    Func function_;$/;"	m	struct:priority_scheduler::item	typeref:typename:Func	file:
function_base	asio/src/examples/cpp11/executors/fork_join.cpp	/^  struct function_base$/;"	s	class:fork_join_pool	file:
function_base	asio/src/examples/cpp14/executors/fork_join.cpp	/^  struct function_base$/;"	s	class:fork_join_pool	file:
function_type	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::detail::strand_executor_service::defer	typeref:typename:decay<Function>::type
function_type	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::detail::strand_executor_service::dispatch	typeref:typename:decay<Function>::type
function_type	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::detail::strand_executor_service::post	typeref:typename:decay<Function>::type
function_type	asio/include/asio/impl/io_context.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::io_context::executor_type::defer	typeref:typename:decay<Function>::type
function_type	asio/include/asio/impl/io_context.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::io_context::executor_type::dispatch	typeref:typename:decay<Function>::type
function_type	asio/include/asio/impl/io_context.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::io_context::executor_type::post	typeref:typename:decay<Function>::type
function_type	asio/include/asio/impl/spawn.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::ASIO_MOVE_ARG	typeref:typename:decay<Function>::type
function_type	asio/include/asio/impl/spawn.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::spawn	typeref:typename:decay<Function>::type
function_type	asio/include/asio/impl/system_executor.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::system_executor::defer	typeref:typename:decay<Function>::type
function_type	asio/include/asio/impl/system_executor.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::system_executor::post	typeref:typename:decay<Function>::type
function_type	asio/include/asio/impl/thread_pool.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::thread_pool::executor_type::defer	typeref:typename:decay<Function>::type
function_type	asio/include/asio/impl/thread_pool.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::thread_pool::executor_type::dispatch	typeref:typename:decay<Function>::type
function_type	asio/include/asio/impl/thread_pool.hpp	/^  typedef typename decay<Function>::type function_type;$/;"	t	function:asio::thread_pool::executor_type::post	typeref:typename:decay<Function>::type
future	asio/include/asio/detail/winrt_async_manager.hpp	/^    auto future = promise->get_future();$/;"	m	class:asio::detail::winrt_async_manager	typeref:typename:auto
future_	asio/include/asio/impl/use_future.hpp	/^  return_type future_;$/;"	m	class:asio::detail::packaged_async_result	typeref:typename:return_type
future_	asio/include/asio/impl/use_future.hpp	/^  return_type future_;$/;"	m	class:asio::detail::promise_async_result	typeref:typename:return_type
future_	asio/include/asio/packaged_task.hpp	/^  return_type future_;$/;"	m	class:asio::async_result	typeref:typename:return_type
future_type	asio/include/asio/impl/use_future.hpp	/^  typedef std::future<T> future_type;$/;"	t	class:asio::detail::promise_creator	typeref:typename:std::future<T>
futures_daytime_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^futures_daytime_client_SOURCES = futures\/daytime_client.cpp$/;"	m
gcc_arm_fenced_block	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^  explicit gcc_arm_fenced_block(full_t)$/;"	f	class:asio::detail::gcc_arm_fenced_block
gcc_arm_fenced_block	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^  explicit gcc_arm_fenced_block(half_t)$/;"	f	class:asio::detail::gcc_arm_fenced_block
gcc_arm_fenced_block	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^class gcc_arm_fenced_block$/;"	c	namespace:asio::detail
gcc_hppa_fenced_block	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^  explicit gcc_hppa_fenced_block(full_t)$/;"	f	class:asio::detail::gcc_hppa_fenced_block
gcc_hppa_fenced_block	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^  explicit gcc_hppa_fenced_block(half_t)$/;"	f	class:asio::detail::gcc_hppa_fenced_block
gcc_hppa_fenced_block	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^class gcc_hppa_fenced_block$/;"	c	namespace:asio::detail
gcc_sync_fenced_block	asio/include/asio/detail/gcc_sync_fenced_block.hpp	/^  explicit gcc_sync_fenced_block(half_or_full_t)$/;"	f	class:asio::detail::gcc_sync_fenced_block
gcc_sync_fenced_block	asio/include/asio/detail/gcc_sync_fenced_block.hpp	/^class gcc_sync_fenced_block$/;"	c	namespace:asio::detail
gcc_x86_fenced_block	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^  explicit gcc_x86_fenced_block(full_t)$/;"	f	class:asio::detail::gcc_x86_fenced_block
gcc_x86_fenced_block	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^  explicit gcc_x86_fenced_block(half_t)$/;"	f	class:asio::detail::gcc_x86_fenced_block
gcc_x86_fenced_block	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^class gcc_x86_fenced_block$/;"	c	namespace:asio::detail
gcd	asio/include/asio/detail/chrono_time_traits.hpp	/^struct gcd { enum { value = gcd<v2, v1 % v2>::value }; };$/;"	s	namespace:asio::detail
gcd	asio/include/asio/detail/chrono_time_traits.hpp	/^struct gcd<v1, 0> { enum { value = v1 }; };$/;"	s	namespace:asio::detail
generate_dot	asio/src/tools/handlerviz.pl	/^sub generate_dot()$/;"	s
generic	asio/include/asio/detail/push_options.hpp	/^#    define generic /;"	d
generic	asio/include/asio/generic/basic_endpoint.hpp	/^namespace generic {$/;"	n	namespace:asio
generic	asio/include/asio/generic/datagram_protocol.hpp	/^namespace generic {$/;"	n	namespace:asio
generic	asio/include/asio/generic/detail/endpoint.hpp	/^    asio::detail::sockaddr_storage_type generic;$/;"	m	union:asio::generic::detail::endpoint::data_union	typeref:typename:asio::detail::sockaddr_storage_type
generic	asio/include/asio/generic/detail/endpoint.hpp	/^namespace generic {$/;"	n	namespace:asio
generic	asio/include/asio/generic/raw_protocol.hpp	/^namespace generic {$/;"	n	namespace:asio
generic	asio/include/asio/generic/seq_packet_protocol.hpp	/^namespace generic {$/;"	n	namespace:asio
generic	asio/include/asio/generic/stream_protocol.hpp	/^namespace generic {$/;"	n	namespace:asio
generic	asio/src/tests/unit/generic/datagram_protocol.cpp	/^# define generic /;"	d	file:
generic	asio/src/tests/unit/generic/raw_protocol.cpp	/^# define generic /;"	d	file:
generic	asio/src/tests/unit/generic/seq_packet_protocol.cpp	/^# define generic /;"	d	file:
generic	asio/src/tests/unit/generic/stream_protocol.cpp	/^# define generic /;"	d	file:
generic_datagram_protocol_socket_compile	asio/src/tests/unit/generic/datagram_protocol.cpp	/^namespace generic_datagram_protocol_socket_compile {$/;"	n	file:
generic_raw_protocol_socket_compile	asio/src/tests/unit/generic/raw_protocol.cpp	/^namespace generic_raw_protocol_socket_compile {$/;"	n	file:
generic_seq_packet_protocol_socket_compile	asio/src/tests/unit/generic/seq_packet_protocol.cpp	/^namespace generic_seq_packet_protocol_socket_compile {$/;"	n	file:
generic_stream_protocol_socket_compile	asio/src/tests/unit/generic/stream_protocol.cpp	/^namespace generic_stream_protocol_socket_compile {$/;"	n	file:
get	asio/include/asio/associated_allocator.hpp	/^  static type get(const T& t, const E&) ASIO_NOEXCEPT$/;"	f	struct:asio::detail::associated_allocator_impl	typeref:typename:type
get	asio/include/asio/associated_allocator.hpp	/^  static type get(const T& t,$/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/associated_allocator.hpp	/^  static type get(const T&, const E& e) ASIO_NOEXCEPT$/;"	f	struct:asio::detail::associated_allocator_impl	typeref:typename:type
get	asio/include/asio/associated_executor.hpp	/^  static type get(const T& t, const E&) ASIO_NOEXCEPT$/;"	f	struct:asio::detail::associated_executor_impl	typeref:typename:type
get	asio/include/asio/associated_executor.hpp	/^  static type get(const T& t,$/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/associated_executor.hpp	/^  static type get(const T&, const E& e) ASIO_NOEXCEPT$/;"	f	struct:asio::detail::associated_executor_impl	typeref:typename:type
get	asio/include/asio/async_result.hpp	/^  return_type get()$/;"	f	class:asio::async_result	typeref:typename:return_type
get	asio/include/asio/bind_executor.hpp	/^  const target_type& get() const ASIO_NOEXCEPT$/;"	f	class:asio::executor_binder	typeref:typename:const target_type &
get	asio/include/asio/bind_executor.hpp	/^  return_type get()$/;"	f	class:asio::async_result	typeref:typename:return_type
get	asio/include/asio/bind_executor.hpp	/^  static type get(const executor_binder<T, Executor>& b,$/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/bind_executor.hpp	/^  static type get(const executor_binder<T, Executor>& b,$/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/bind_executor.hpp	/^  target_type& get() ASIO_NOEXCEPT$/;"	f	class:asio::executor_binder	typeref:typename:target_type &
get	asio/include/asio/detail/bind_handler.hpp	/^  static type get(const detail::binder1<Handler, Arg1>& h,$/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/detail/bind_handler.hpp	/^  static type get(const detail::binder1<Handler, Arg1>& h,$/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/detail/bind_handler.hpp	/^  static type get(const detail::binder2<Handler, Arg1, Arg2>& h,$/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/detail/bind_handler.hpp	/^  static type get(const detail::binder2<Handler, Arg1, Arg2>& h,$/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/detail/bind_handler.hpp	/^  static type get(const detail::move_binder1<Handler, Arg1>& h,$/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/detail/bind_handler.hpp	/^  static type get(const detail::move_binder1<Handler, Arg1>& h,$/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/detail/bind_handler.hpp	/^  static type get(const detail::move_binder2<Handler, Arg1, Arg2>& h,$/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/detail/bind_handler.hpp	/^  static type get(const detail::move_binder2<Handler, Arg1, Arg2>& h,$/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  static type get(Handler& handler, const std::allocator<T>&)$/;"	f	namespace:asio::detail	typeref:typename:type
get	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  static type get(Handler&, const Allocator& a)$/;"	f	struct:asio::detail::get_hook_allocator	typeref:typename:type
get	asio/include/asio/detail/io_control.hpp	/^  std::size_t get() const$/;"	f	class:asio::detail::io_control::bytes_readable	typeref:typename:std::size_t
get	asio/include/asio/detail/recycling_allocator.hpp	/^  static type get(const Allocator& a) { return a; }$/;"	f	struct:asio::detail::get_recycling_allocator	typeref:typename:type
get	asio/include/asio/detail/recycling_allocator.hpp	/^  static type get(const std::allocator<T>&) { return type(); }$/;"	f	struct:asio::detail::get_recycling_allocator	typeref:typename:type
get	asio/include/asio/detail/scoped_ptr.hpp	/^  T* get()$/;"	f	class:asio::detail::scoped_ptr	typeref:typename:T *
get	asio/include/asio/detail/socket_holder.hpp	/^  socket_type get() const$/;"	f	class:asio::detail::socket_holder	typeref:typename:socket_type
get	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  OVERLAPPED* get()$/;"	f	class:asio::detail::win_iocp_overlapped_ptr	typeref:typename:OVERLAPPED *
get	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  const OVERLAPPED* get() const$/;"	f	class:asio::detail::win_iocp_overlapped_ptr	typeref:typename:const OVERLAPPED *
get	asio/include/asio/impl/awaitable.hpp	/^  T get()$/;"	f	class:asio::detail::awaitable_frame	typeref:typename:T
get	asio/include/asio/impl/awaitable.hpp	/^  void get()$/;"	f	class:asio::detail::awaitable_frame	typeref:typename:void
get	asio/include/asio/impl/buffered_read_stream.hpp	/^  static type get($/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/buffered_read_stream.hpp	/^  static type get($/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/buffered_read_stream.hpp	/^  static type get(const detail::buffered_fill_handler<ReadHandler>& h,$/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/buffered_read_stream.hpp	/^  static type get(const detail::buffered_fill_handler<ReadHandler>& h,$/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/buffered_write_stream.hpp	/^  static type get($/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/buffered_write_stream.hpp	/^  static type get($/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/buffered_write_stream.hpp	/^  static type get(const detail::buffered_flush_handler<WriteHandler>& h,$/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/buffered_write_stream.hpp	/^  static type get(const detail::buffered_flush_handler<WriteHandler>& h,$/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/connect.hpp	/^  static type get($/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/connect.hpp	/^  static type get($/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/detached.hpp	/^  void get()$/;"	f	struct:asio::async_result	typeref:typename:void
get	asio/include/asio/impl/read.hpp	/^  static type get($/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/read.hpp	/^  static type get($/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/read_at.hpp	/^  static type get($/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/read_at.hpp	/^  static type get($/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/read_until.hpp	/^  static type get($/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/read_until.hpp	/^  static type get($/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/redirect_error.hpp	/^  static type get($/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/redirect_error.hpp	/^  static type get($/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/spawn.hpp	/^    return_type get()$/;"	f	class:asio::detail::coro_async_result	typeref:typename:return_type
get	asio/include/asio/impl/spawn.hpp	/^    void get()$/;"	f	class:asio::detail::coro_async_result	typeref:typename:void
get	asio/include/asio/impl/spawn.hpp	/^  static type get(const detail::coro_handler<Handler, T>& h,$/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/spawn.hpp	/^  static type get(const detail::coro_handler<Handler, T>& h,$/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/use_future.hpp	/^  return_type get()$/;"	f	class:asio::detail::packaged_async_result	typeref:typename:return_type
get	asio/include/asio/impl/use_future.hpp	/^  return_type get()$/;"	f	class:asio::detail::promise_async_result	typeref:typename:return_type
get	asio/include/asio/impl/write.hpp	/^  static type get($/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/write.hpp	/^  static type get($/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/impl/write_at.hpp	/^  static type get($/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/impl/write_at.hpp	/^  static type get($/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/packaged_task.hpp	/^  return_type get()$/;"	f	class:asio::async_result	typeref:typename:return_type
get	asio/include/asio/ssl/detail/io.hpp	/^  static type get(const ssl::detail::io_op<Stream, Operation, Handler>& h,$/;"	f	struct:asio::associated_allocator	typeref:typename:type
get	asio/include/asio/ssl/detail/io.hpp	/^  static type get(const ssl::detail::io_op<Stream, Operation, Handler>& h,$/;"	f	struct:asio::associated_executor	typeref:typename:type
get	asio/include/asio/windows/overlapped_ptr.hpp	/^  OVERLAPPED* get()$/;"	f	class:asio::windows::overlapped_ptr	typeref:typename:OVERLAPPED *
get	asio/include/asio/windows/overlapped_ptr.hpp	/^  const OVERLAPPED* get() const$/;"	f	class:asio::windows::overlapped_ptr	typeref:typename:const OVERLAPPED *
get	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  return_type get()$/;"	f	class:asio::async_result	typeref:typename:return_type	file:
get	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  return_type get()$/;"	f	class:asio::async_result	typeref:typename:return_type	file:
get	asio/src/tests/unit/archetypes/async_result.hpp	/^  return_type get()$/;"	f	class:asio::async_result	typeref:typename:return_type
get_addrinfo_category	asio/include/asio/error.hpp	/^inline const asio::error_category& get_addrinfo_category()$/;"	f	namespace:asio::error	typeref:typename:const asio::error_category &
get_all_operations	asio/include/asio/detail/reactor_op_queue.hpp	/^  void get_all_operations(op_queue<operation>& ops)$/;"	f	class:asio::detail::reactor_op_queue	typeref:typename:void
get_all_timers	asio/include/asio/detail/timer_queue.hpp	/^  virtual void get_all_timers(op_queue<operation>& ops)$/;"	f	class:asio::detail::timer_queue	typeref:typename:void
get_allocator	asio/include/asio/impl/compose.hpp	/^    allocator_type get_allocator() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::composed_op	typeref:typename:allocator_type
get_allocator	asio/include/asio/impl/use_future.hpp	/^  allocator_type get_allocator() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::packaged_handler	typeref:typename:allocator_type
get_allocator	asio/include/asio/impl/use_future.hpp	/^  allocator_type get_allocator() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::promise_handler	typeref:typename:allocator_type
get_allocator	asio/include/asio/use_future.hpp	/^  allocator_type get_allocator() const$/;"	f	class:asio::use_future_t	typeref:typename:allocator_type
get_allocator	asio/src/examples/cpp03/allocation/server.cpp	/^  allocator_type get_allocator() const$/;"	f	class:custom_alloc_handler	typeref:typename:allocator_type	file:
get_allocator	asio/src/examples/cpp11/allocation/server.cpp	/^  allocator_type get_allocator() const noexcept$/;"	f	class:custom_alloc_handler	typeref:typename:allocator_type	file:
get_allocator	asio/src/examples/cpp11/operations/composed_5.cpp	/^      allocator_type get_allocator() const noexcept$/;"	f	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:allocator_type	file:
get_allocator	asio/src/examples/cpp11/operations/composed_6.cpp	/^      allocator_type get_allocator() const noexcept$/;"	f	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:allocator_type	file:
get_allocator	asio/src/examples/cpp14/operations/composed_5.cpp	/^      allocator_type get_allocator() const noexcept$/;"	f	struct:async_write_message::__anon32ec9f8e0102::intermediate_completion_handler	typeref:typename:allocator_type	file:
get_allocator	asio/src/examples/cpp14/operations/composed_6.cpp	/^      allocator_type get_allocator() const noexcept$/;"	f	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	typeref:typename:allocator_type	file:
get_associated_allocator	asio/include/asio/associated_allocator.hpp	/^get_associated_allocator(const T& t) ASIO_NOEXCEPT$/;"	f	namespace:asio	typeref:typename:associated_allocator<T>::type
get_associated_allocator	asio/include/asio/associated_allocator.hpp	/^get_associated_allocator(const T& t, const Allocator& a) ASIO_NOEXCEPT$/;"	f	namespace:asio	typeref:typename:associated_allocator<T,Allocator>::type
get_associated_executor	asio/include/asio/associated_executor.hpp	/^get_associated_executor(const T& t) ASIO_NOEXCEPT$/;"	f	namespace:asio	typeref:typename:associated_executor<T>::type
get_associated_executor	asio/include/asio/associated_executor.hpp	/^get_associated_executor(const T& t, ExecutionContext& ctx,$/;"	f	namespace:asio	typeref:typename:associated_executor<T,typename ExecutionContext::executor_type>::type
get_associated_executor	asio/include/asio/associated_executor.hpp	/^get_associated_executor(const T& t, const Executor& ex,$/;"	f	namespace:asio	typeref:typename:associated_executor<T,Executor>::type
get_buffer_	asio/include/asio/basic_socket_streambuf.hpp	/^  std::vector<char> get_buffer_;$/;"	m	class:asio::detail::socket_streambuf_buffers	typeref:typename:std::vector<char>
get_composed_io_executor	asio/include/asio/impl/compose.hpp	/^  get_composed_io_executor(IoObject& io_object)$/;"	f	namespace:asio::detail	typeref:typename:IoObject::executor_type
get_composed_io_executor	asio/include/asio/impl/compose.hpp	/^  inline const Executor& get_composed_io_executor(const Executor& ex,$/;"	f	namespace:asio::detail	typeref:typename:const Executor &
get_daytime	asio/src/examples/cpp11/futures/daytime_client.cpp	/^void get_daytime(asio::io_context& io_context, const char* hostname)$/;"	f	typeref:typename:void
get_debug_check	asio/include/asio/buffer.hpp	/^  const asio::detail::function<void()>& get_debug_check() const$/;"	f	class:asio::const_buffer	typeref:typename:const asio::detail::function<void ()> &
get_debug_check	asio/include/asio/buffer.hpp	/^  const asio::detail::function<void()>& get_debug_check() const$/;"	f	class:asio::mutable_buffer	typeref:typename:const asio::detail::function<void ()> &
get_executor	asio/include/asio/basic_datagram_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_datagram_socket::initiate_async_receive	typeref:typename:executor_type
get_executor	asio/include/asio/basic_datagram_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_datagram_socket::initiate_async_receive_from	typeref:typename:executor_type
get_executor	asio/include/asio/basic_datagram_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_datagram_socket::initiate_async_send	typeref:typename:executor_type
get_executor	asio/include/asio/basic_datagram_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_datagram_socket::initiate_async_send_to	typeref:typename:executor_type
get_executor	asio/include/asio/basic_deadline_timer.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_deadline_timer::initiate_async_wait	typeref:typename:executor_type
get_executor	asio/include/asio/basic_deadline_timer.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::basic_deadline_timer	typeref:typename:executor_type
get_executor	asio/include/asio/basic_io_object.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::basic_io_object	typeref:typename:executor_type
get_executor	asio/include/asio/basic_raw_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_raw_socket::initiate_async_receive	typeref:typename:executor_type
get_executor	asio/include/asio/basic_raw_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_raw_socket::initiate_async_receive_from	typeref:typename:executor_type
get_executor	asio/include/asio/basic_raw_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_raw_socket::initiate_async_send	typeref:typename:executor_type
get_executor	asio/include/asio/basic_raw_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_raw_socket::initiate_async_send_to	typeref:typename:executor_type
get_executor	asio/include/asio/basic_seq_packet_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_seq_packet_socket::initiate_async_receive_with_flags	typeref:typename:executor_type
get_executor	asio/include/asio/basic_seq_packet_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_seq_packet_socket::initiate_async_send	typeref:typename:executor_type
get_executor	asio/include/asio/basic_serial_port.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_serial_port::initiate_async_read_some	typeref:typename:executor_type
get_executor	asio/include/asio/basic_serial_port.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_serial_port::initiate_async_write_some	typeref:typename:executor_type
get_executor	asio/include/asio/basic_serial_port.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::basic_serial_port	typeref:typename:executor_type
get_executor	asio/include/asio/basic_signal_set.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_signal_set::initiate_async_wait	typeref:typename:executor_type
get_executor	asio/include/asio/basic_signal_set.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::basic_signal_set	typeref:typename:executor_type
get_executor	asio/include/asio/basic_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_socket::initiate_async_connect	typeref:typename:executor_type
get_executor	asio/include/asio/basic_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_socket::initiate_async_wait	typeref:typename:executor_type
get_executor	asio/include/asio/basic_socket.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::basic_socket	typeref:typename:executor_type
get_executor	asio/include/asio/basic_socket_acceptor.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_socket_acceptor::initiate_async_accept	typeref:typename:executor_type
get_executor	asio/include/asio/basic_socket_acceptor.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_socket_acceptor::initiate_async_move_accept	typeref:typename:executor_type
get_executor	asio/include/asio/basic_socket_acceptor.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_socket_acceptor::initiate_async_wait	typeref:typename:executor_type
get_executor	asio/include/asio/basic_socket_acceptor.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:executor_type
get_executor	asio/include/asio/basic_stream_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_stream_socket::initiate_async_receive	typeref:typename:executor_type
get_executor	asio/include/asio/basic_stream_socket.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_stream_socket::initiate_async_send	typeref:typename:executor_type
get_executor	asio/include/asio/basic_waitable_timer.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_waitable_timer::initiate_async_wait	typeref:typename:executor_type
get_executor	asio/include/asio/basic_waitable_timer.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::basic_waitable_timer	typeref:typename:executor_type
get_executor	asio/include/asio/bind_executor.hpp	/^  executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::executor_binder	typeref:typename:executor_type
get_executor	asio/include/asio/buffered_read_stream.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::buffered_read_stream	typeref:typename:executor_type
get_executor	asio/include/asio/buffered_stream.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::buffered_stream	typeref:typename:executor_type
get_executor	asio/include/asio/buffered_write_stream.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::buffered_write_stream	typeref:typename:executor_type
get_executor	asio/include/asio/detail/io_object_impl.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::detail::io_object_impl	typeref:typename:executor_type
get_executor	asio/include/asio/executor_work_guard.hpp	/^  executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::executor_work_guard	typeref:typename:executor_type
get_executor	asio/include/asio/impl/awaitable.hpp	/^  executor_type get_executor() const noexcept$/;"	f	class:asio::detail::awaitable_thread	typeref:typename:executor_type
get_executor	asio/include/asio/impl/buffered_read_stream.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_buffered_fill	typeref:typename:executor_type
get_executor	asio/include/asio/impl/buffered_read_stream.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_buffered_read_some	typeref:typename:executor_type
get_executor	asio/include/asio/impl/buffered_write_stream.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_buffered_flush	typeref:typename:executor_type
get_executor	asio/include/asio/impl/buffered_write_stream.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_buffered_write_some	typeref:typename:executor_type
get_executor	asio/include/asio/impl/co_spawn.hpp	/^  executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_co_spawn	typeref:typename:executor_type
get_executor	asio/include/asio/impl/compose.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::composed_op	typeref:typename:executor_type
get_executor	asio/include/asio/impl/compose.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_composed_op	typeref:typename:executor_type
get_executor	asio/include/asio/impl/connect.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_iterator_connect	typeref:typename:executor_type
get_executor	asio/include/asio/impl/connect.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_range_connect	typeref:typename:executor_type
get_executor	asio/include/asio/impl/defer.hpp	/^  executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_defer_with_executor	typeref:typename:executor_type
get_executor	asio/include/asio/impl/dispatch.hpp	/^  executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_dispatch_with_executor	typeref:typename:executor_type
get_executor	asio/include/asio/impl/io_context.hpp	/^io_context::get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::io_context	typeref:typename:io_context::executor_type
get_executor	asio/include/asio/impl/post.hpp	/^  executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_post_with_executor	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_buffer_sequence	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_dynbuf_v1	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_dynbuf_v2	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read_at.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_at_buffer_sequence	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read_at.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_at_streambuf	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read_until.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_until_delim_string_v1	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read_until.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_until_delim_string_v2	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read_until.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_until_delim_v1	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read_until.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_until_delim_v2	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read_until.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_until_expr_v1	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read_until.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_until_expr_v2	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read_until.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_until_match_v1	typeref:typename:executor_type
get_executor	asio/include/asio/impl/read_until.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_read_until_match_v2	typeref:typename:executor_type
get_executor	asio/include/asio/impl/system_context.hpp	/^system_context::get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::system_context	typeref:typename:system_context::executor_type
get_executor	asio/include/asio/impl/thread_pool.hpp	/^thread_pool::get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::thread_pool	typeref:typename:thread_pool::executor_type
get_executor	asio/include/asio/impl/use_future.hpp	/^  executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::promise_creator	typeref:typename:executor_type
get_executor	asio/include/asio/impl/write.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_write_buffer_sequence	typeref:typename:executor_type
get_executor	asio/include/asio/impl/write.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_write_dynbuf_v1	typeref:typename:executor_type
get_executor	asio/include/asio/impl/write.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_write_dynbuf_v2	typeref:typename:executor_type
get_executor	asio/include/asio/impl/write_at.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_write_at_buffer_sequence	typeref:typename:executor_type
get_executor	asio/include/asio/impl/write_at.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::initiate_async_write_at_streambuf	typeref:typename:executor_type
get_executor	asio/include/asio/ip/basic_resolver.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_resolver::initiate_async_resolve	typeref:typename:executor_type
get_executor	asio/include/asio/ip/basic_resolver.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_resolver	typeref:typename:executor_type
get_executor	asio/include/asio/posix/basic_descriptor.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::posix::basic_descriptor::initiate_async_wait	typeref:typename:executor_type
get_executor	asio/include/asio/posix/basic_descriptor.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:executor_type
get_executor	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::posix::basic_stream_descriptor::initiate_async_read_some	typeref:typename:executor_type
get_executor	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::posix::basic_stream_descriptor::initiate_async_write_some	typeref:typename:executor_type
get_executor	asio/include/asio/ssl/stream.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::ssl::stream::initiate_async_buffered_handshake	typeref:typename:executor_type
get_executor	asio/include/asio/ssl/stream.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::ssl::stream::initiate_async_handshake	typeref:typename:executor_type
get_executor	asio/include/asio/ssl/stream.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::ssl::stream::initiate_async_read_some	typeref:typename:executor_type
get_executor	asio/include/asio/ssl/stream.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::ssl::stream::initiate_async_shutdown	typeref:typename:executor_type
get_executor	asio/include/asio/ssl/stream.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::ssl::stream::initiate_async_write_some	typeref:typename:executor_type
get_executor	asio/include/asio/ssl/stream.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::ssl::stream	typeref:typename:executor_type
get_executor	asio/include/asio/windows/basic_object_handle.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::windows::basic_object_handle::initiate_async_wait	typeref:typename:executor_type
get_executor	asio/include/asio/windows/basic_object_handle.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:executor_type
get_executor	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:executor_type
get_executor	asio/include/asio/windows/basic_random_access_handle.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::windows::basic_random_access_handle::initiate_async_read_some_at	typeref:typename:executor_type
get_executor	asio/include/asio/windows/basic_random_access_handle.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::windows::basic_random_access_handle::initiate_async_write_some_at	typeref:typename:executor_type
get_executor	asio/include/asio/windows/basic_stream_handle.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::windows::basic_stream_handle::initiate_async_read_some	typeref:typename:executor_type
get_executor	asio/include/asio/windows/basic_stream_handle.hpp	/^    executor_type get_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::windows::basic_stream_handle::initiate_async_write_some	typeref:typename:executor_type
get_executor	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  executor_type get_executor(int pri = 0) noexcept$/;"	f	class:priority_scheduler	typeref:typename:executor_type	file:
get_executor	asio/src/examples/cpp11/operations/composed_5.cpp	/^      executor_type get_executor() const noexcept$/;"	f	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:executor_type	file:
get_executor	asio/src/examples/cpp11/operations/composed_6.cpp	/^      executor_type get_executor() const noexcept$/;"	f	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:executor_type	file:
get_executor	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  executor_type get_executor(int pri = 0) noexcept$/;"	f	class:priority_scheduler	typeref:typename:executor_type	file:
get_executor	asio/src/examples/cpp14/operations/composed_5.cpp	/^      executor_type get_executor() const noexcept$/;"	f	struct:async_write_message::__anon32ec9f8e0102::intermediate_completion_handler	typeref:typename:executor_type	file:
get_executor	asio/src/examples/cpp14/operations/composed_6.cpp	/^      executor_type get_executor() const noexcept$/;"	f	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	typeref:typename:executor_type	file:
get_executor	asio/src/tests/unit/read.cpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:test_stream	typeref:typename:executor_type	file:
get_executor	asio/src/tests/unit/read_at.cpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:test_random_access_device	typeref:typename:executor_type	file:
get_executor	asio/src/tests/unit/read_until.cpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:test_stream	typeref:typename:executor_type	file:
get_executor	asio/src/tests/unit/write.cpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:test_stream	typeref:typename:executor_type	file:
get_executor	asio/src/tests/unit/write_at.cpp	/^  executor_type get_executor() ASIO_NOEXCEPT$/;"	f	class:test_random_access_device	typeref:typename:executor_type	file:
get_future	asio/include/asio/impl/use_future.hpp	/^  future_type get_future()$/;"	f	class:asio::detail::promise_creator	typeref:typename:future_type
get_hook_allocator	asio/include/asio/detail/handler_alloc_helpers.hpp	/^struct get_hook_allocator$/;"	s	namespace:asio::detail
get_identifier	asio/src/examples/cpp03/icmp/ping.cpp	/^  static unsigned short get_identifier()$/;"	f	class:pinger	typeref:typename:unsigned short	file:
get_impl	asio/include/asio/executor.hpp	/^  impl_base* get_impl() const$/;"	f	class:asio::executor	typeref:typename:impl_base *
get_implementation	asio/include/asio/basic_io_object.hpp	/^  const implementation_type& get_implementation() const$/;"	f	class:asio::basic_io_object	typeref:typename:const implementation_type &
get_implementation	asio/include/asio/basic_io_object.hpp	/^  implementation_type& get_implementation()$/;"	f	class:asio::basic_io_object	typeref:typename:implementation_type &
get_implementation	asio/include/asio/detail/io_object_impl.hpp	/^  const implementation_type& get_implementation() const$/;"	f	class:asio::detail::io_object_impl	typeref:typename:const implementation_type &
get_implementation	asio/include/asio/detail/io_object_impl.hpp	/^  implementation_type& get_implementation()$/;"	f	class:asio::detail::io_object_impl	typeref:typename:implementation_type &
get_implementation_executor	asio/include/asio/detail/io_object_impl.hpp	/^  const implementation_executor_type& get_implementation_executor()$/;"	f	class:asio::detail::io_object_impl	typeref:typename:const implementation_executor_type &
get_inner_executor	asio/include/asio/strand.hpp	/^  inner_executor_type get_inner_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::strand	typeref:typename:inner_executor_type
get_io_context	asio/include/asio/basic_io_object.hpp	/^  asio::io_context& get_io_context()$/;"	f	class:asio::basic_io_object	typeref:typename:asio::io_context &
get_io_context	asio/include/asio/impl/io_context.hpp	/^inline asio::io_context& io_context::service::get_io_context()$/;"	f	class:asio::io_context::service	typeref:typename:asio::io_context &
get_io_context	asio/include/asio/impl/io_context.hpp	/^inline asio::io_context& io_context::work::get_io_context()$/;"	f	class:asio::io_context::work	typeref:typename:asio::io_context &
get_io_context	asio/src/examples/cpp03/http/server2/io_context_pool.cpp	/^asio::io_context& io_context_pool::get_io_context()$/;"	f	class:http::server2::io_context_pool	typeref:typename:asio::io_context &
get_io_context	asio/src/examples/cpp03/services/basic_logger.hpp	/^  asio::io_context& get_io_context()$/;"	f	class:services::basic_logger	typeref:typename:asio::io_context &
get_io_service	asio/include/asio/basic_io_object.hpp	/^  asio::io_context& get_io_service()$/;"	f	class:asio::basic_io_object	typeref:typename:asio::io_context &
get_iocp_service	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  static win_iocp_io_context* get_iocp_service($/;"	f	class:asio::detail::win_iocp_overlapped_ptr	typeref:typename:win_iocp_io_context *
get_iocp_service	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  static win_iocp_io_context* get_iocp_service(const Executor& ex)$/;"	f	class:asio::detail::win_iocp_overlapped_ptr	typeref:typename:win_iocp_io_context *
get_netdb_category	asio/include/asio/error.hpp	/^inline const asio::error_category& get_netdb_category()$/;"	f	namespace:asio::error	typeref:typename:const asio::error_category &
get_option	asio/include/asio/basic_serial_port.hpp	/^  ASIO_SYNC_OP_VOID get_option(GettableSerialPortOption& option,$/;"	f	class:asio::basic_serial_port	typeref:typename:ASIO_SYNC_OP_VOID
get_option	asio/include/asio/basic_serial_port.hpp	/^  void get_option(GettableSerialPortOption& option) const$/;"	f	class:asio::basic_serial_port	typeref:typename:void
get_option	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID get_option(GettableSocketOption& option,$/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
get_option	asio/include/asio/basic_socket.hpp	/^  void get_option(GettableSocketOption& option) const$/;"	f	class:asio::basic_socket	typeref:typename:void
get_option	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID get_option(GettableSocketOption& option,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
get_option	asio/include/asio/basic_socket_acceptor.hpp	/^  void get_option(GettableSocketOption& option) const$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
get_option	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code get_option(const implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
get_option	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  asio::error_code get_option(const implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:asio::error_code
get_option	asio/include/asio/detail/reactive_socket_service.hpp	/^  asio::error_code get_option(const implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:asio::error_code
get_option	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  asio::error_code get_option(const implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:asio::error_code
get_option	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  asio::error_code get_option(const implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:asio::error_code
get_option	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  asio::error_code get_option(const implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:asio::error_code
get_password	asio/src/examples/cpp03/ssl/server.cpp	/^  std::string get_password() const$/;"	f	class:server	typeref:typename:std::string	file:
get_password	asio/src/examples/cpp11/ssl/server.cpp	/^  std::string get_password() const$/;"	f	class:server	typeref:typename:std::string	file:
get_ready_timers	asio/include/asio/detail/timer_queue.hpp	/^  virtual void get_ready_timers(op_queue<operation>& ops)$/;"	f	class:asio::detail::timer_queue	typeref:typename:void
get_recycling_allocator	asio/include/asio/detail/recycling_allocator.hpp	/^struct get_recycling_allocator$/;"	s	namespace:asio::detail
get_recycling_allocator	asio/include/asio/detail/recycling_allocator.hpp	/^struct get_recycling_allocator<std::allocator<T>, Purpose>$/;"	s	namespace:asio::detail
get_return_object	asio/include/asio/impl/awaitable.hpp	/^  awaitable<T, Executor> get_return_object() noexcept$/;"	f	class:asio::detail::awaitable_frame	typeref:typename:awaitable<T,Executor>
get_return_object	asio/include/asio/impl/awaitable.hpp	/^  awaitable<void, Executor> get_return_object()$/;"	f	class:asio::detail::awaitable_frame	typeref:typename:awaitable<void,Executor>
get_service	asio/include/asio/basic_io_object.hpp	/^  const service_type& get_service() const$/;"	f	class:asio::basic_io_object	typeref:typename:const service_type &
get_service	asio/include/asio/basic_io_object.hpp	/^  service_type& get_service()$/;"	f	class:asio::basic_io_object	typeref:typename:service_type &
get_service	asio/include/asio/detail/io_object_impl.hpp	/^  const service_type& get_service() const$/;"	f	class:asio::detail::io_object_impl	typeref:typename:const service_type &
get_service	asio/include/asio/detail/io_object_impl.hpp	/^  service_type& get_service()$/;"	f	class:asio::detail::io_object_impl	typeref:typename:service_type &
get_system_category	asio/include/asio/error.hpp	/^inline const asio::error_category& get_system_category()$/;"	f	namespace:asio::error	typeref:typename:const asio::error_category &
gettable_socket_option	asio/src/tests/unit/archetypes/gettable_socket_option.hpp	/^class gettable_socket_option$/;"	c	namespace:archetypes
global	asio/include/asio/detail/global.hpp	/^inline T& global()$/;"	f	namespace:asio::detail	typeref:typename:T &
go	asio/src/examples/cpp03/spawn/echo_server.cpp	/^  void go()$/;"	f	class:session	typeref:typename:void	file:
go	asio/src/examples/cpp11/spawn/echo_server.cpp	/^  void go()$/;"	f	class:session	typeref:typename:void	file:
good	asio/src/examples/cpp11/http/server/request_parser.hpp	/^  enum result_type { good, bad, indeterminate };$/;"	e	enum:http::server::request_parser::result_type
gqcs_timeout_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  const DWORD gqcs_timeout_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:const DWORD
grow	asio/include/asio/buffer.hpp	/^  void grow(std::size_t n)$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:void
grow	asio/include/asio/buffer.hpp	/^  void grow(std::size_t n)$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:void
half	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^  enum half_t { half };$/;"	e	enum:asio::detail::gcc_arm_fenced_block::half_t
half	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^  enum half_t { half };$/;"	e	enum:asio::detail::gcc_hppa_fenced_block::half_t
half	asio/include/asio/detail/gcc_sync_fenced_block.hpp	/^  enum half_or_full_t { half, full };$/;"	e	enum:asio::detail::gcc_sync_fenced_block::half_or_full_t
half	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^  enum half_t { half };$/;"	e	enum:asio::detail::gcc_x86_fenced_block::half_t
half	asio/include/asio/detail/macos_fenced_block.hpp	/^  enum half_t { half };$/;"	e	enum:asio::detail::macos_fenced_block::half_t
half	asio/include/asio/detail/null_fenced_block.hpp	/^  enum half_or_full_t { half, full };$/;"	e	enum:asio::detail::null_fenced_block::half_or_full_t
half	asio/include/asio/detail/solaris_fenced_block.hpp	/^  enum half_t { half };$/;"	e	enum:asio::detail::solaris_fenced_block::half_t
half	asio/include/asio/detail/std_fenced_block.hpp	/^  enum half_t { half };$/;"	e	enum:asio::detail::std_fenced_block::half_t
half	asio/include/asio/detail/win_fenced_block.hpp	/^  enum half_t { half };$/;"	e	enum:asio::detail::win_fenced_block::half_t
half_or_full_t	asio/include/asio/detail/gcc_sync_fenced_block.hpp	/^  enum half_or_full_t { half, full };$/;"	g	class:asio::detail::gcc_sync_fenced_block
half_or_full_t	asio/include/asio/detail/null_fenced_block.hpp	/^  enum half_or_full_t { half, full };$/;"	g	class:asio::detail::null_fenced_block
half_t	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^  enum half_t { half };$/;"	g	class:asio::detail::gcc_arm_fenced_block
half_t	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^  enum half_t { half };$/;"	g	class:asio::detail::gcc_hppa_fenced_block
half_t	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^  enum half_t { half };$/;"	g	class:asio::detail::gcc_x86_fenced_block
half_t	asio/include/asio/detail/macos_fenced_block.hpp	/^  enum half_t { half };$/;"	g	class:asio::detail::macos_fenced_block
half_t	asio/include/asio/detail/solaris_fenced_block.hpp	/^  enum half_t { half };$/;"	g	class:asio::detail::solaris_fenced_block
half_t	asio/include/asio/detail/std_fenced_block.hpp	/^  enum half_t { half };$/;"	g	class:asio::detail::std_fenced_block
half_t	asio/include/asio/detail/win_fenced_block.hpp	/^  enum half_t { half };$/;"	g	class:asio::detail::win_fenced_block
handle	asio/include/asio/detail/win_iocp_io_context.hpp	/^    HANDLE handle;$/;"	m	struct:asio::detail::win_iocp_io_context::auto_handle	typeref:typename:HANDLE
handle_	asio/include/asio/detail/win_iocp_handle_service.hpp	/^    native_handle_type handle_;$/;"	m	class:asio::detail::win_iocp_handle_service::implementation_type	typeref:typename:native_handle_type
handle_	asio/include/asio/detail/win_object_handle_service.hpp	/^    native_handle_type handle_;$/;"	m	class:asio::detail::win_object_handle_service::implementation_type	typeref:typename:native_handle_type
handle_	asio/include/asio/ssl/context.hpp	/^  native_handle_type handle_;$/;"	m	class:asio::ssl::context	typeref:typename:native_handle_type
handle_	asio/include/asio/ssl/verify_context.hpp	/^  native_handle_type handle_;$/;"	m	class:asio::ssl::verify_context	typeref:typename:native_handle_type
handle_accept	asio/src/examples/cpp03/allocation/server.cpp	/^  void handle_accept(session_ptr new_session,$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  void handle_accept(session_ptr new_session,$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/chat/chat_server.cpp	/^  void handle_accept(chat_session_ptr session,$/;"	f	class:chat_server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  void handle_accept(session* new_session,$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  void handle_accept(const asio::error_code& ec)$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/http/server/server.cpp	/^void server::handle_accept(const asio::error_code& e)$/;"	f	class:http::server::server	typeref:typename:void
handle_accept	asio/src/examples/cpp03/http/server2/server.cpp	/^void server::handle_accept(const asio::error_code& e)$/;"	f	class:http::server2::server	typeref:typename:void
handle_accept	asio/src/examples/cpp03/http/server3/server.cpp	/^void server::handle_accept(const asio::error_code& e)$/;"	f	class:http::server3::server	typeref:typename:void
handle_accept	asio/src/examples/cpp03/local/stream_server.cpp	/^  void handle_accept(session_ptr new_session,$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  void handle_accept(connection::pointer new_connection,$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/porthopper/server.cpp	/^  void handle_accept(const asio::error_code& ec, tcp_socket_ptr socket)$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/serialization/server.cpp	/^  void handle_accept(const asio::error_code& e, connection_ptr conn)$/;"	f	class:s11n_example::server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/ssl/server.cpp	/^  void handle_accept(session* new_session,$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/timeouts/server.cpp	/^  void handle_accept(tcp_session_ptr session,$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  void handle_accept(tcp_connection::pointer new_connection,$/;"	f	class:tcp_server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  void handle_accept(tcp_connection::pointer new_connection,$/;"	f	class:tcp_server	typeref:typename:void	file:
handle_accept	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  void handle_accept(connection::pointer new_connection,$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/tests/performance/server.cpp	/^  void handle_accept(session* new_session, const asio::error_code& err)$/;"	f	class:server	typeref:typename:void	file:
handle_accept	asio/src/tests/unit/buffered_read_stream.cpp	/^void handle_accept(const asio::error_code& e)$/;"	f	typeref:typename:void
handle_accept	asio/src/tests/unit/buffered_stream.cpp	/^void handle_accept(const asio::error_code& e)$/;"	f	typeref:typename:void
handle_accept	asio/src/tests/unit/buffered_write_stream.cpp	/^void handle_accept(const asio::error_code& e)$/;"	f	typeref:typename:void
handle_accept	asio/src/tests/unit/connect.cpp	/^  void handle_accept()$/;"	f	class:connection_sink	typeref:typename:void	file:
handle_accept	asio/src/tests/unit/ip/tcp.cpp	/^void handle_accept(const asio::error_code& err)$/;"	f	namespace:ip_tcp_acceptor_runtime	typeref:typename:void
handle_connect	asio/src/examples/cpp03/chat/chat_client.cpp	/^  void handle_connect(const asio::error_code& error)$/;"	f	class:chat_client	typeref:typename:void	file:
handle_connect	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  void handle_connect(const asio::error_code& error)$/;"	f	class:posix_chat_client	typeref:typename:void	file:
handle_connect	asio/src/examples/cpp03/http/client/async_client.cpp	/^  void handle_connect(const asio::error_code& err)$/;"	f	class:client	typeref:typename:void	file:
handle_connect	asio/src/examples/cpp03/serialization/client.cpp	/^  void handle_connect(const asio::error_code& e)$/;"	f	class:s11n_example::client	typeref:typename:void	file:
handle_connect	asio/src/examples/cpp03/ssl/client.cpp	/^  void handle_connect(const asio::error_code& error)$/;"	f	class:client	typeref:typename:void	file:
handle_connect	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  void handle_connect(const asio::error_code& ec,$/;"	f	class:client	typeref:typename:void	file:
handle_connect	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  void handle_connect(const std::error_code& error,$/;"	f	class:client	typeref:typename:void	file:
handle_connect	asio/src/tests/performance/client.cpp	/^  void handle_connect(const asio::error_code& err)$/;"	f	class:session	typeref:typename:void	file:
handle_connect	asio/src/tests/unit/ip/tcp.cpp	/^void handle_connect(const asio::error_code& err)$/;"	f	namespace:ip_tcp_acceptor_runtime	typeref:typename:void
handle_control_request	asio/src/examples/cpp03/porthopper/server.cpp	/^  void handle_control_request(const asio::error_code& ec,$/;"	f	class:server	typeref:typename:void	file:
handle_control_request_timer	asio/src/examples/cpp03/porthopper/server.cpp	/^  void handle_control_request_timer(tcp_socket_ptr socket,$/;"	f	class:server	typeref:typename:void	file:
handle_flush	asio/src/tests/unit/buffered_stream.cpp	/^void handle_flush(const asio::error_code& e)$/;"	f	typeref:typename:void
handle_flush	asio/src/tests/unit/buffered_write_stream.cpp	/^void handle_flush(const asio::error_code& e)$/;"	f	typeref:typename:void
handle_handshake	asio/src/examples/cpp03/ssl/client.cpp	/^  void handle_handshake(const asio::error_code& error)$/;"	f	class:client	typeref:typename:void	file:
handle_handshake	asio/src/examples/cpp03/ssl/server.cpp	/^  void handle_handshake(const asio::error_code& error)$/;"	f	class:session	typeref:typename:void	file:
handle_message	asio/src/examples/cpp11/executors/actor.cpp	/^  virtual void handle_message(Message msg, actor_address from)$/;"	f	class:mf_message_handler	typeref:typename:void	file:
handle_message	asio/src/examples/cpp14/executors/actor.cpp	/^  virtual void handle_message(Message msg, actor_address from)$/;"	f	class:mf_message_handler	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/allocation/server.cpp	/^  void handle_read(const asio::error_code& error,$/;"	f	class:session	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  void handle_read(const asio::error_code& error,$/;"	f	class:session	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  void handle_read(const asio::error_code& ec, std::size_t length)$/;"	f	class:server	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/http/server/connection.cpp	/^void connection::handle_read(const asio::error_code& e,$/;"	f	class:http::server::connection	typeref:typename:void
handle_read	asio/src/examples/cpp03/http/server2/connection.cpp	/^void connection::handle_read(const asio::error_code& e,$/;"	f	class:http::server2::connection	typeref:typename:void
handle_read	asio/src/examples/cpp03/http/server3/connection.cpp	/^void connection::handle_read(const asio::error_code& e,$/;"	f	class:http::server3::connection	typeref:typename:void
handle_read	asio/src/examples/cpp03/local/connect_pair.cpp	/^  void handle_read(const asio::error_code& ec, std::size_t size)$/;"	f	class:uppercase_filter	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/local/stream_server.cpp	/^  void handle_read(const asio::error_code& error,$/;"	f	class:session	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  void handle_read(asio::error_code ec)$/;"	f	class:connection	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/serialization/client.cpp	/^  void handle_read(const asio::error_code& e)$/;"	f	class:s11n_example::client	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/ssl/client.cpp	/^  void handle_read(const asio::error_code& error,$/;"	f	class:client	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/ssl/server.cpp	/^  void handle_read(const asio::error_code& error,$/;"	f	class:session	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  void handle_read(const asio::error_code& ec, std::size_t n)$/;"	f	class:client	typeref:typename:void	file:
handle_read	asio/src/examples/cpp03/timeouts/server.cpp	/^  void handle_read(const asio::error_code& ec, std::size_t n)$/;"	f	class:tcp_session	typeref:typename:void	file:
handle_read	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  void handle_read(const std::error_code& error, std::size_t n)$/;"	f	class:client	typeref:typename:void	file:
handle_read	asio/src/tests/performance/client.cpp	/^  void handle_read(const asio::error_code& err, size_t length)$/;"	f	class:session	typeref:typename:void	file:
handle_read	asio/src/tests/performance/server.cpp	/^  void handle_read(const asio::error_code& err, size_t length)$/;"	f	class:session	typeref:typename:void	file:
handle_read	asio/src/tests/unit/buffered_read_stream.cpp	/^void handle_read(const asio::error_code& e,$/;"	f	typeref:typename:void
handle_read	asio/src/tests/unit/buffered_stream.cpp	/^void handle_read(const asio::error_code& e,$/;"	f	typeref:typename:void
handle_read	asio/src/tests/unit/buffered_write_stream.cpp	/^void handle_read(const asio::error_code& e,$/;"	f	typeref:typename:void
handle_read	asio/src/tests/unit/ip/tcp.cpp	/^void handle_read(const asio::error_code& err,$/;"	f	namespace:ip_tcp_socket_runtime	typeref:typename:void
handle_read_body	asio/src/examples/cpp03/chat/chat_client.cpp	/^  void handle_read_body(const asio::error_code& error)$/;"	f	class:chat_client	typeref:typename:void	file:
handle_read_body	asio/src/examples/cpp03/chat/chat_server.cpp	/^  void handle_read_body(const asio::error_code& error)$/;"	f	class:chat_session	typeref:typename:void	file:
handle_read_body	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  void handle_read_body(const asio::error_code& error)$/;"	f	class:posix_chat_client	typeref:typename:void	file:
handle_read_cancel	asio/src/tests/unit/ip/tcp.cpp	/^void handle_read_cancel(const asio::error_code& err,$/;"	f	namespace:ip_tcp_socket_runtime	typeref:typename:void
handle_read_content	asio/src/examples/cpp03/http/client/async_client.cpp	/^  void handle_read_content(const asio::error_code& err)$/;"	f	class:client	typeref:typename:void	file:
handle_read_data	asio/src/examples/cpp03/serialization/connection.hpp	/^  void handle_read_data(const asio::error_code& e,$/;"	f	class:s11n_example::connection	typeref:typename:void
handle_read_eof	asio/src/tests/unit/buffered_read_stream.cpp	/^void handle_read_eof(const asio::error_code& e,$/;"	f	typeref:typename:void
handle_read_eof	asio/src/tests/unit/buffered_stream.cpp	/^void handle_read_eof(const asio::error_code& e,$/;"	f	typeref:typename:void
handle_read_eof	asio/src/tests/unit/buffered_write_stream.cpp	/^void handle_read_eof(const asio::error_code& e,$/;"	f	typeref:typename:void
handle_read_eof	asio/src/tests/unit/ip/tcp.cpp	/^void handle_read_eof(const asio::error_code& err,$/;"	f	namespace:ip_tcp_socket_runtime	typeref:typename:void
handle_read_header	asio/src/examples/cpp03/chat/chat_client.cpp	/^  void handle_read_header(const asio::error_code& error)$/;"	f	class:chat_client	typeref:typename:void	file:
handle_read_header	asio/src/examples/cpp03/chat/chat_server.cpp	/^  void handle_read_header(const asio::error_code& error)$/;"	f	class:chat_session	typeref:typename:void	file:
handle_read_header	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  void handle_read_header(const asio::error_code& error)$/;"	f	class:posix_chat_client	typeref:typename:void	file:
handle_read_header	asio/src/examples/cpp03/serialization/connection.hpp	/^  void handle_read_header(const asio::error_code& e,$/;"	f	class:s11n_example::connection	typeref:typename:void
handle_read_headers	asio/src/examples/cpp03/http/client/async_client.cpp	/^  void handle_read_headers(const asio::error_code& err)$/;"	f	class:client	typeref:typename:void	file:
handle_read_input	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  void handle_read_input(const asio::error_code& error,$/;"	f	class:posix_chat_client	typeref:typename:void	file:
handle_read_noop	asio/src/tests/unit/ip/tcp.cpp	/^void handle_read_noop(const asio::error_code& err,$/;"	f	namespace:ip_tcp_socket_runtime	typeref:typename:void
handle_read_status_line	asio/src/examples/cpp03/http/client/async_client.cpp	/^  void handle_read_status_line(const asio::error_code& err)$/;"	f	class:client	typeref:typename:void	file:
handle_receive	asio/src/examples/cpp03/fork/daemon.cpp	/^  void handle_receive(const asio::error_code& ec)$/;"	f	class:udp_daytime_server	typeref:typename:void	file:
handle_receive	asio/src/examples/cpp03/icmp/ping.cpp	/^  void handle_receive(std::size_t length)$/;"	f	class:pinger	typeref:typename:void	file:
handle_receive	asio/src/examples/cpp03/timeouts/blocking_udp_client.cpp	/^  static void handle_receive($/;"	f	class:client	typeref:typename:void	file:
handle_receive	asio/src/examples/cpp03/tutorial/daytime6/server.cpp	/^  void handle_receive(const asio::error_code& error,$/;"	f	class:udp_server	typeref:typename:void	file:
handle_receive	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  void handle_receive(const asio::error_code& error)$/;"	f	class:udp_server	typeref:typename:void	file:
handle_receive	asio/src/examples/cpp11/timeouts/blocking_udp_client.cpp	/^  static void handle_receive($/;"	f	class:client	typeref:typename:void	file:
handle_receive_from	asio/src/examples/cpp03/echo/async_udp_echo_server.cpp	/^  void handle_receive_from(const asio::error_code& error,$/;"	f	class:server	typeref:typename:void	file:
handle_receive_from	asio/src/examples/cpp03/multicast/receiver.cpp	/^  void handle_receive_from(const asio::error_code& error,$/;"	f	class:receiver	typeref:typename:void	file:
handle_recv	asio/src/tests/unit/ip/udp.cpp	/^void handle_recv(size_t expected_bytes_recvd,$/;"	f	namespace:ip_udp_socket_runtime	typeref:typename:void
handle_request	asio/src/examples/cpp03/http/server/request_handler.cpp	/^void request_handler::handle_request(const request& req, reply& rep)$/;"	f	class:http::server::request_handler	typeref:typename:void
handle_request	asio/src/examples/cpp03/http/server2/request_handler.cpp	/^void request_handler::handle_request(const request& req, reply& rep)$/;"	f	class:http::server2::request_handler	typeref:typename:void
handle_request	asio/src/examples/cpp03/http/server3/request_handler.cpp	/^void request_handler::handle_request(const request& req, reply& rep)$/;"	f	class:http::server3::request_handler	typeref:typename:void
handle_request	asio/src/examples/cpp11/http/server/request_handler.cpp	/^void request_handler::handle_request(const request& req, reply& rep)$/;"	f	class:http::server::request_handler	typeref:typename:void
handle_resolve	asio/src/examples/cpp03/http/client/async_client.cpp	/^  void handle_resolve(const asio::error_code& err,$/;"	f	class:client	typeref:typename:void	file:
handle_send	asio/src/examples/cpp03/tutorial/daytime6/server.cpp	/^  void handle_send(boost::shared_ptr<std::string> \/*message*\/,$/;"	f	class:udp_server	typeref:typename:void	file:
handle_send	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  void handle_send(boost::shared_ptr<std::string> \/*message*\/)$/;"	f	class:udp_server	typeref:typename:void	file:
handle_send	asio/src/tests/unit/ip/udp.cpp	/^void handle_send(size_t expected_bytes_sent,$/;"	f	namespace:ip_udp_socket_runtime	typeref:typename:void
handle_send_to	asio/src/examples/cpp03/echo/async_udp_echo_server.cpp	/^  void handle_send_to(const asio::error_code& \/*error*\/,$/;"	f	class:server	typeref:typename:void	file:
handle_send_to	asio/src/examples/cpp03/multicast/sender.cpp	/^  void handle_send_to(const asio::error_code& error)$/;"	f	class:sender	typeref:typename:void	file:
handle_service_	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  win_iocp_handle_service handle_service_;$/;"	m	class:asio::detail::win_iocp_serial_port_service	typeref:typename:win_iocp_handle_service
handle_signal_wait	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  void handle_signal_wait()$/;"	f	class:server	typeref:typename:void	file:
handle_stop	asio/src/examples/cpp03/http/server/server.cpp	/^void server::handle_stop()$/;"	f	class:http::server::server	typeref:typename:void
handle_stop	asio/src/examples/cpp03/http/server2/server.cpp	/^void server::handle_stop()$/;"	f	class:http::server2::server	typeref:typename:void
handle_stop	asio/src/examples/cpp03/http/server3/server.cpp	/^void server::handle_stop()$/;"	f	class:http::server3::server	typeref:typename:void
handle_timeout	asio/src/examples/cpp03/icmp/ping.cpp	/^  void handle_timeout()$/;"	f	class:pinger	typeref:typename:void	file:
handle_timeout	asio/src/examples/cpp03/multicast/sender.cpp	/^  void handle_timeout(const asio::error_code& error)$/;"	f	class:sender	typeref:typename:void	file:
handle_timeout	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^void handle_timeout(const asio::error_code&)$/;"	f	typeref:typename:void
handle_timeout	asio/src/tests/performance/client.cpp	/^  void handle_timeout()$/;"	f	class:client	typeref:typename:void	file:
handle_timer	asio/src/examples/cpp03/porthopper/server.cpp	/^  void handle_timer()$/;"	f	class:server	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/allocation/server.cpp	/^  void handle_write(const asio::error_code& error)$/;"	f	class:session	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  void handle_write()$/;"	f	class:session	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/chat/chat_client.cpp	/^  void handle_write(const asio::error_code& error)$/;"	f	class:chat_client	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/chat/chat_server.cpp	/^  void handle_write(const asio::error_code& error)$/;"	f	class:chat_session	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  void handle_write(const asio::error_code& error)$/;"	f	class:posix_chat_client	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  void handle_write(const asio::error_code& error)$/;"	f	class:session	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  void handle_write(const asio::error_code& ec)$/;"	f	class:server	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/http/server/connection.cpp	/^void connection::handle_write(const asio::error_code& e)$/;"	f	class:http::server::connection	typeref:typename:void
handle_write	asio/src/examples/cpp03/http/server2/connection.cpp	/^void connection::handle_write(const asio::error_code& e)$/;"	f	class:http::server2::connection	typeref:typename:void
handle_write	asio/src/examples/cpp03/http/server3/connection.cpp	/^void connection::handle_write(const asio::error_code& e)$/;"	f	class:http::server3::connection	typeref:typename:void
handle_write	asio/src/examples/cpp03/local/connect_pair.cpp	/^  void handle_write(const asio::error_code& ec)$/;"	f	class:uppercase_filter	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/local/stream_server.cpp	/^  void handle_write(const asio::error_code& error)$/;"	f	class:session	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  void handle_write(asio::error_code ec)$/;"	f	class:connection	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/serialization/server.cpp	/^  void handle_write(const asio::error_code& e, connection_ptr conn)$/;"	f	class:s11n_example::server	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/ssl/client.cpp	/^  void handle_write(const asio::error_code& error,$/;"	f	class:client	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/ssl/server.cpp	/^  void handle_write(const asio::error_code& error)$/;"	f	class:session	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  void handle_write(const asio::error_code& ec)$/;"	f	class:client	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/timeouts/server.cpp	/^  void handle_write(const asio::error_code& ec)$/;"	f	class:tcp_session	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  void handle_write(const asio::error_code& \/*error*\/,$/;"	f	class:tcp_connection	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  void handle_write()$/;"	f	class:tcp_connection	typeref:typename:void	file:
handle_write	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  void handle_write(const asio::error_code& \/*error*\/,$/;"	f	class:connection	typeref:typename:void	file:
handle_write	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  void handle_write(const std::error_code& error)$/;"	f	class:client	typeref:typename:void	file:
handle_write	asio/src/tests/performance/client.cpp	/^  void handle_write(const asio::error_code& err, size_t length)$/;"	f	class:session	typeref:typename:void	file:
handle_write	asio/src/tests/performance/server.cpp	/^  void handle_write(const asio::error_code& err)$/;"	f	class:session	typeref:typename:void	file:
handle_write	asio/src/tests/unit/buffered_read_stream.cpp	/^void handle_write(const asio::error_code& e,$/;"	f	typeref:typename:void
handle_write	asio/src/tests/unit/buffered_stream.cpp	/^void handle_write(const asio::error_code& e,$/;"	f	typeref:typename:void
handle_write	asio/src/tests/unit/buffered_write_stream.cpp	/^void handle_write(const asio::error_code& e,$/;"	f	typeref:typename:void
handle_write	asio/src/tests/unit/ip/tcp.cpp	/^void handle_write(const asio::error_code& err,$/;"	f	namespace:ip_tcp_socket_runtime	typeref:typename:void
handle_write_noop	asio/src/tests/unit/ip/tcp.cpp	/^void handle_write_noop(const asio::error_code& err,$/;"	f	namespace:ip_tcp_socket_runtime	typeref:typename:void
handle_write_output	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  void handle_write_output(const asio::error_code& error)$/;"	f	class:posix_chat_client	typeref:typename:void	file:
handle_write_request	asio/src/examples/cpp03/http/client/async_client.cpp	/^  void handle_write_request(const asio::error_code& err)$/;"	f	class:client	typeref:typename:void	file:
handler_	asio/include/asio/detail/bind_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::binder1	typeref:typename:Handler
handler_	asio/include/asio/detail/bind_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::binder2	typeref:typename:Handler
handler_	asio/include/asio/detail/bind_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::binder3	typeref:typename:Handler
handler_	asio/include/asio/detail/bind_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::binder4	typeref:typename:Handler
handler_	asio/include/asio/detail/bind_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::binder5	typeref:typename:Handler
handler_	asio/include/asio/detail/bind_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::move_binder1	typeref:typename:Handler
handler_	asio/include/asio/detail/bind_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::move_binder2	typeref:typename:Handler
handler_	asio/include/asio/detail/completion_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::completion_handler	typeref:typename:Handler
handler_	asio/include/asio/detail/descriptor_read_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::descriptor_read_op	typeref:typename:Handler
handler_	asio/include/asio/detail/descriptor_write_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::descriptor_write_op	typeref:typename:Handler
handler_	asio/include/asio/detail/executor_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::executor_op	typeref:typename:Handler
handler_	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  Handler& handler_;$/;"	m	class:asio::detail::hook_allocator	typeref:typename:Handler &
handler_	asio/include/asio/detail/reactive_null_buffers_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::reactive_null_buffers_op	typeref:typename:Handler
handler_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::reactive_socket_accept_op	typeref:typename:Handler
handler_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::reactive_socket_move_accept_op	typeref:typename:Handler
handler_	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::reactive_socket_connect_op	typeref:typename:Handler
handler_	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::reactive_socket_recv_op	typeref:typename:Handler
handler_	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::reactive_socket_recvfrom_op	typeref:typename:Handler
handler_	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::reactive_socket_recvmsg_op	typeref:typename:Handler
handler_	asio/include/asio/detail/reactive_socket_send_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::reactive_socket_send_op	typeref:typename:Handler
handler_	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::reactive_socket_sendto_op	typeref:typename:Handler
handler_	asio/include/asio/detail/reactive_wait_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::reactive_wait_op	typeref:typename:Handler
handler_	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::resolve_endpoint_op	typeref:typename:Handler
handler_	asio/include/asio/detail/resolve_query_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::resolve_query_op	typeref:typename:Handler
handler_	asio/include/asio/detail/signal_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::signal_handler	typeref:typename:Handler
handler_	asio/include/asio/detail/wait_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::wait_handler	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_handle_read_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_handle_read_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_handle_write_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_handle_write_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_null_buffers_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_null_buffers_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_overlapped_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_overlapped_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_socket_connect_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_socket_recv_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_socket_recvfrom_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_socket_recvmsg_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_socket_send_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_socket_send_op	typeref:typename:Handler
handler_	asio/include/asio/detail/win_iocp_wait_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::win_iocp_wait_op	typeref:typename:Handler
handler_	asio/include/asio/detail/winrt_resolve_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::winrt_resolve_op	typeref:typename:Handler
handler_	asio/include/asio/detail/winrt_socket_connect_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::winrt_socket_connect_op	typeref:typename:Handler
handler_	asio/include/asio/detail/winrt_socket_recv_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::winrt_socket_recv_op	typeref:typename:Handler
handler_	asio/include/asio/detail/winrt_socket_send_op.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::winrt_socket_send_op	typeref:typename:Handler
handler_	asio/include/asio/detail/work_dispatcher.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::work_dispatcher	typeref:typename:Handler
handler_	asio/include/asio/detail/wrapped_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::rewrapped_handler	typeref:typename:Handler
handler_	asio/include/asio/detail/wrapped_handler.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::wrapped_handler	typeref:typename:Handler
handler_	asio/include/asio/impl/buffered_read_stream.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::buffered_fill_handler	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/buffered_read_stream.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::buffered_read_some_handler	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/buffered_write_stream.hpp	/^    WriteHandler handler_;$/;"	m	class:asio::detail::buffered_flush_handler	typeref:typename:WriteHandler
handler_	asio/include/asio/impl/buffered_write_stream.hpp	/^    WriteHandler handler_;$/;"	m	class:asio::detail::buffered_write_some_handler	typeref:typename:WriteHandler
handler_	asio/include/asio/impl/compose.hpp	/^    Handler handler_;$/;"	m	class:asio::detail::composed_op	typeref:typename:Handler
handler_	asio/include/asio/impl/connect.hpp	/^    IteratorConnectHandler handler_;$/;"	m	class:asio::detail::iterator_connect_op	typeref:typename:IteratorConnectHandler
handler_	asio/include/asio/impl/connect.hpp	/^    RangeConnectHandler handler_;$/;"	m	class:asio::detail::range_connect_op	typeref:typename:RangeConnectHandler
handler_	asio/include/asio/impl/read.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_dynbuf_v1_op	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_dynbuf_v2_op	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_op	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read_at.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_at_op	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read_at.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_at_streambuf_op	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read_until.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_until_delim_op_v1	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read_until.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_until_delim_op_v2	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read_until.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_until_delim_string_op_v1	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read_until.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_until_delim_string_op_v2	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read_until.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_until_expr_op_v1	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read_until.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_until_expr_op_v2	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read_until.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_until_match_op_v1	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/read_until.hpp	/^    ReadHandler handler_;$/;"	m	class:asio::detail::read_until_match_op_v2	typeref:typename:ReadHandler
handler_	asio/include/asio/impl/redirect_error.hpp	/^  Handler handler_;$/;"	m	class:asio::detail::redirect_error_handler	typeref:typename:Handler
handler_	asio/include/asio/impl/spawn.hpp	/^    Handler handler_;$/;"	m	class:asio::detail::coro_handler	typeref:typename:Handler
handler_	asio/include/asio/impl/spawn.hpp	/^    Handler handler_;$/;"	m	struct:asio::detail::spawn_data	typeref:typename:Handler
handler_	asio/include/asio/impl/spawn.hpp	/^    completion_handler_type& handler_;$/;"	m	class:asio::detail::coro_async_result	typeref:typename:completion_handler_type &
handler_	asio/include/asio/impl/write.hpp	/^    WriteHandler handler_;$/;"	m	class:asio::detail::write_dynbuf_v1_op	typeref:typename:WriteHandler
handler_	asio/include/asio/impl/write.hpp	/^    WriteHandler handler_;$/;"	m	class:asio::detail::write_dynbuf_v2_op	typeref:typename:WriteHandler
handler_	asio/include/asio/impl/write.hpp	/^    WriteHandler handler_;$/;"	m	class:asio::detail::write_op	typeref:typename:WriteHandler
handler_	asio/include/asio/impl/write_at.hpp	/^    WriteHandler handler_;$/;"	m	class:asio::detail::write_at_op	typeref:typename:WriteHandler
handler_	asio/include/asio/impl/write_at.hpp	/^    WriteHandler handler_;$/;"	m	class:asio::detail::write_at_streambuf_op	typeref:typename:WriteHandler
handler_	asio/include/asio/spawn.hpp	/^  Handler handler_;$/;"	m	class:asio::basic_yield_context	typeref:typename:Handler
handler_	asio/include/asio/ssl/detail/io.hpp	/^  Handler handler_;$/;"	m	class:asio::ssl::detail::io_op	typeref:typename:Handler
handler_	asio/src/examples/cpp03/allocation/server.cpp	/^  Handler handler_;$/;"	m	class:custom_alloc_handler	typeref:typename:Handler	file:
handler_	asio/src/examples/cpp11/allocation/server.cpp	/^  Handler handler_;$/;"	m	class:custom_alloc_handler	typeref:typename:Handler	file:
handler_	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^    tracked_handler handler_;$/;"	m	struct:custom_tracking::completion	typeref:typename:tracked_handler
handler_	asio/src/examples/cpp11/operations/composed_5.cpp	/^      typename std::decay<CompletionHandler>::type handler_;$/;"	m	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:std::decay<CompletionHandler>::type	file:
handler_	asio/src/examples/cpp11/operations/composed_6.cpp	/^      typename std::decay<CompletionHandler>::type handler_;$/;"	m	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:std::decay<CompletionHandler>::type	file:
handler_	asio/src/examples/cpp14/operations/composed_5.cpp	/^      typename std::decay<decltype(completion_handler)>::type handler_;$/;"	m	struct:async_write_message::__anon32ec9f8e0102::intermediate_completion_handler	typeref:typename:std::decay<decltype (completion_handler)>::type	file:
handler_	asio/src/examples/cpp14/operations/composed_6.cpp	/^      typename std::decay<decltype(completion_handler)>::type handler_;$/;"	m	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	typeref:typename:std::decay<decltype (completion_handler)>::type	file:
handler_	asio/src/tests/performance/handler_allocator.hpp	/^  Handler handler_;$/;"	m	class:custom_alloc_handler	typeref:typename:Handler
handler_allocator	asio/src/examples/cpp03/allocation/server.cpp	/^  explicit handler_allocator(handler_memory& mem)$/;"	f	class:handler_allocator	file:
handler_allocator	asio/src/examples/cpp03/allocation/server.cpp	/^  handler_allocator(const handler_allocator<U>& other)$/;"	f	class:handler_allocator	file:
handler_allocator	asio/src/examples/cpp03/allocation/server.cpp	/^class handler_allocator$/;"	c	file:
handler_allocator	asio/src/examples/cpp11/allocation/server.cpp	/^  explicit handler_allocator(handler_memory& mem)$/;"	f	class:handler_allocator	file:
handler_allocator	asio/src/examples/cpp11/allocation/server.cpp	/^  handler_allocator(const handler_allocator<U>& other) noexcept$/;"	f	class:handler_allocator	file:
handler_allocator	asio/src/examples/cpp11/allocation/server.cpp	/^class handler_allocator$/;"	c	file:
handler_allocator	asio/src/tests/performance/handler_allocator.hpp	/^  handler_allocator()$/;"	f	class:handler_allocator
handler_allocator	asio/src/tests/performance/handler_allocator.hpp	/^class handler_allocator$/;"	c
handler_id_	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^    std::uintmax_t handler_id_ = 0; \/\/ To uniquely identify a handler.$/;"	m	struct:custom_tracking::tracked_handler	typeref:typename:std::uintmax_t
handler_memory	asio/src/examples/cpp03/allocation/server.cpp	/^  handler_memory()$/;"	f	class:handler_memory	file:
handler_memory	asio/src/examples/cpp03/allocation/server.cpp	/^class handler_memory$/;"	c	file:
handler_memory	asio/src/examples/cpp11/allocation/server.cpp	/^  handler_memory()$/;"	f	class:handler_memory	file:
handler_memory	asio/src/examples/cpp11/allocation/server.cpp	/^class handler_memory$/;"	c	file:
handler_memory_	asio/src/examples/cpp03/allocation/server.cpp	/^  handler_memory handler_memory_;$/;"	m	class:session	typeref:typename:handler_memory	file:
handler_memory_	asio/src/examples/cpp11/allocation/server.cpp	/^  handler_memory handler_memory_;$/;"	m	class:session	typeref:typename:handler_memory	file:
handler_priority_queue	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^class handler_priority_queue : public asio::execution_context$/;"	c	file:
handler_priority_queue	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^class handler_priority_queue : public asio::execution_context$/;"	c	file:
handler_type	asio/include/asio/impl/spawn.hpp	/^  typedef typename decay<Handler>::type handler_type;$/;"	t	function:asio::ASIO_MOVE_ARG	typeref:typename:decay<Handler>::type
handler_type	asio/include/asio/impl/use_awaitable.hpp	/^      Executor, typename decay<Args>::type...> handler_type;$/;"	t	class:asio::async_result	typeref:typename:detail::awaitable_handler<Executor,typename decay<Args>::type...>
handler_type	asio/src/tests/unit/archetypes/async_ops.hpp	/^      handler_type;$/;"	t	function:archetypes::ASIO_INITFN_RESULT_TYPE
handler_type	asio/src/tests/unit/archetypes/async_ops.hpp	/^    void()>::completion_handler_type handler_type;$/;"	t	function:archetypes::ASIO_INITFN_RESULT_TYPE
handler_type	asio/src/tests/unit/archetypes/async_ops.hpp	/^    void(asio::error_code)>::completion_handler_type handler_type;$/;"	t	function:archetypes::ASIO_INITFN_RESULT_TYPE
handler_type	asio/src/tests/unit/archetypes/async_ops.hpp	/^    void(int)>::completion_handler_type handler_type;$/;"	t	function:archetypes::ASIO_INITFN_RESULT_TYPE
handler_type	asio/src/tests/unit/archetypes/async_ops.hpp	/^    void(int, double)>::completion_handler_type handler_type;$/;"	t	function:archetypes::ASIO_INITFN_RESULT_TYPE
handler_type	asio/src/tests/unit/archetypes/async_ops.hpp	/^    void(int, double, char)>::completion_handler_type handler_type;$/;"	t	function:archetypes::ASIO_INITFN_RESULT_TYPE
handler_type	asio/src/tests/unit/archetypes/async_ops.hpp	/^    void(std::exception_ptr)>::completion_handler_type handler_type;$/;"	t	function:archetypes::ASIO_INITFN_RESULT_TYPE
handler_type_requirements	asio/include/asio/detail/handler_type_requirements.hpp	/^struct handler_type_requirements$/;"	s	namespace:asio::detail
handler_work	asio/include/asio/detail/handler_work.hpp	/^  explicit handler_work(Handler& handler) ASIO_NOEXCEPT$/;"	f	class:asio::detail::handler_work
handler_work	asio/include/asio/detail/handler_work.hpp	/^  explicit handler_work(Handler&) ASIO_NOEXCEPT {}$/;"	f	class:asio::detail::handler_work
handler_work	asio/include/asio/detail/handler_work.hpp	/^  handler_work(Handler& handler, const IoExecutor& io_ex) ASIO_NOEXCEPT$/;"	f	class:asio::detail::handler_work
handler_work	asio/include/asio/detail/handler_work.hpp	/^class handler_work$/;"	c	namespace:asio::detail
handler_work	asio/include/asio/detail/handler_work.hpp	/^class handler_work<Handler, system_executor, system_executor>$/;"	c	namespace:asio::detail
handlers_	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^  std::priority_queue<queued_handler> handlers_;$/;"	m	class:handler_priority_queue	typeref:typename:std::priority_queue<queued_handler>	file:
handlers_	asio/src/examples/cpp11/executors/actor.cpp	/^  std::vector<std::shared_ptr<message_handler_base>> handlers_;$/;"	m	class:actor	typeref:typename:std::vector<std::shared_ptr<message_handler_base>>	file:
handlers_	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^  std::priority_queue<std::unique_ptr<queued_handler_base>> handlers_;$/;"	m	class:handler_priority_queue	typeref:typename:std::priority_queue<std::unique_ptr<queued_handler_base>>	file:
handlers_	asio/src/examples/cpp14/executors/actor.cpp	/^  std::vector<std::shared_ptr<message_handler_base>> handlers_;$/;"	m	class:actor	typeref:typename:std::vector<std::shared_ptr<message_handler_base>>	file:
handshake	asio/include/asio/ssl/stream.hpp	/^  ASIO_SYNC_OP_VOID handshake(handshake_type type,$/;"	f	class:asio::ssl::stream	typeref:typename:ASIO_SYNC_OP_VOID
handshake	asio/include/asio/ssl/stream.hpp	/^  void handshake(handshake_type type)$/;"	f	class:asio::ssl::stream	typeref:typename:void
handshake	asio/include/asio/ssl/stream.hpp	/^  void handshake(handshake_type type, const ConstBufferSequence& buffers)$/;"	f	class:asio::ssl::stream	typeref:typename:void
handshake	asio/src/examples/cpp11/ssl/client.cpp	/^  void handshake()$/;"	f	class:client	typeref:typename:void	file:
handshake_handler	asio/src/tests/unit/ssl/stream.cpp	/^void handshake_handler(const asio::error_code&)$/;"	f	namespace:ssl_stream_compile	typeref:typename:void
handshake_op	asio/include/asio/ssl/detail/handshake_op.hpp	/^  handshake_op(stream_base::handshake_type type)$/;"	f	class:asio::ssl::detail::handshake_op
handshake_op	asio/include/asio/ssl/detail/handshake_op.hpp	/^class handshake_op$/;"	c	namespace:asio::ssl::detail
handshake_type	asio/include/asio/ssl/stream_base.hpp	/^  enum handshake_type$/;"	g	class:asio::ssl::stream_base
hardware	asio/include/asio/serial_port_base.hpp	/^    enum type { none, software, hardware };$/;"	e	enum:asio::serial_port_base::flow_control::type
hardware_concurrency	asio/include/asio/detail/null_thread.hpp	/^  static std::size_t hardware_concurrency()$/;"	f	class:asio::detail::null_thread	typeref:typename:std::size_t
hardware_concurrency	asio/include/asio/detail/std_thread.hpp	/^  static std::size_t hardware_concurrency()$/;"	f	class:asio::detail::std_thread	typeref:typename:std::size_t
hardware_concurrency	asio/include/asio/detail/winapp_thread.hpp	/^  static std::size_t hardware_concurrency()$/;"	f	class:asio::detail::winapp_thread	typeref:typename:std::size_t
hardware_concurrency	asio/include/asio/detail/wince_thread.hpp	/^  static std::size_t hardware_concurrency()$/;"	f	class:asio::detail::wince_thread	typeref:typename:std::size_t
has_iterator_typedef	asio/include/asio/connect.hpp	/^  struct has_iterator_typedef$/;"	s	namespace:asio::detail
has_native_impl_	asio/include/asio/detail/io_object_executor.hpp	/^  const bool has_native_impl_;$/;"	m	class:asio::detail::io_object_executor	typeref:typename:const bool
has_native_implementation	asio/include/asio/detail/io_object_executor.hpp	/^  bool has_native_implementation() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::io_object_executor	typeref:typename:bool
has_operation	asio/include/asio/detail/reactor_op_queue.hpp	/^  bool has_operation(Descriptor descriptor) const$/;"	f	class:asio::detail::reactor_op_queue	typeref:typename:bool
has_result_	asio/include/asio/impl/awaitable.hpp	/^  bool has_result_ = false;$/;"	m	class:asio::detail::awaitable_frame	typeref:typename:bool
has_result_type	asio/include/asio/read_until.hpp	/^  struct has_result_type$/;"	s	namespace:asio::detail
has_service	asio/include/asio/detail/impl/service_registry.hpp	/^bool service_registry::has_service() const$/;"	f	class:asio::detail::service_registry	typeref:typename:bool
has_service	asio/include/asio/impl/execution_context.hpp	/^inline bool has_service(execution_context& e)$/;"	f	namespace:asio	typeref:typename:bool
hash_map	asio/include/asio/detail/hash_map.hpp	/^  hash_map()$/;"	f	class:asio::detail::hash_map
hash_map	asio/include/asio/detail/hash_map.hpp	/^class hash_map$/;"	c	namespace:asio::detail
hash_size	asio/include/asio/detail/hash_map.hpp	/^  static std::size_t hash_size(std::size_t num_elems)$/;"	f	class:asio::detail::hash_map	typeref:typename:std::size_t
have_remote_endpoint	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    bool have_remote_endpoint() const$/;"	f	class:asio::detail::win_iocp_socket_service::native_handle_type	typeref:typename:bool
have_remote_endpoint_	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    bool have_remote_endpoint_;$/;"	m	class:asio::detail::win_iocp_socket_service::native_handle_type	typeref:typename:bool
have_remote_endpoint_	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    bool have_remote_endpoint_;$/;"	m	struct:asio::detail::win_iocp_socket_service::implementation_type	typeref:typename:bool
head_	asio/include/asio/impl/compose.hpp	/^    Head head_;$/;"	m	struct:asio::detail::composed_io_executors	typeref:typename:Head
head_	asio/include/asio/impl/compose.hpp	/^    executor_work_guard<Head> head_;$/;"	m	struct:asio::detail::composed_work	typeref:typename:executor_work_guard<Head>
head_	asio/include/asio/impl/compose.hpp	/^    executor_work_guard<system_executor> head_;$/;"	m	struct:asio::detail::composed_work	typeref:typename:executor_work_guard<system_executor>
head_	asio/include/asio/impl/compose.hpp	/^    system_executor head_;$/;"	m	struct:asio::detail::composed_io_executors	typeref:typename:system_executor
head_type	asio/include/asio/impl/compose.hpp	/^    typedef Head head_type;$/;"	t	struct:asio::detail::composed_io_executors	typeref:typename:Head
head_type	asio/include/asio/impl/compose.hpp	/^    typedef Head head_type;$/;"	t	struct:asio::detail::composed_work	typeref:typename:Head
head_type	asio/include/asio/impl/compose.hpp	/^    typedef system_executor head_type;$/;"	t	struct:asio::detail::composed_io_executors	typeref:typename:system_executor
head_type	asio/include/asio/impl/compose.hpp	/^    typedef system_executor head_type;$/;"	t	struct:asio::detail::composed_work	typeref:typename:system_executor
header	asio/src/examples/cpp03/http/server/header.hpp	/^struct header$/;"	s	namespace:http::server
header	asio/src/examples/cpp03/http/server2/header.hpp	/^struct header$/;"	s	namespace:http::server2
header	asio/src/examples/cpp03/http/server3/header.hpp	/^struct header$/;"	s	namespace:http::server3
header	asio/src/examples/cpp03/http/server4/header.hpp	/^struct header$/;"	s	namespace:http::server4
header	asio/src/examples/cpp11/http/server/header.hpp	/^struct header$/;"	s	namespace:http::server
header-requirements	asio/src/doc/reference.xsl	/^<xsl:template name="header-requirements">$/;"	n
header_checksum	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned short header_checksum() const { return decode(10, 11); }$/;"	f	class:ipv4_header	typeref:typename:unsigned short
header_length	asio/src/examples/cpp03/chat/chat_message.hpp	/^  enum { header_length = 4 };$/;"	e	enum:chat_message::__anon9fd7c9630103
header_length	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned short header_length() const { return (rep_[0] & 0xF) * 4; }$/;"	f	class:ipv4_header	typeref:typename:unsigned short
header_length	asio/src/examples/cpp03/serialization/connection.hpp	/^  enum { header_length = 8 };$/;"	e	enum:s11n_example::connection::__anon2df9358d0103
header_length	asio/src/examples/cpp11/chat/chat_message.hpp	/^  enum { header_length = 4 };$/;"	e	enum:chat_message::__anonde5602c20103
header_line_start	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    header_line_start,$/;"	e	enum:http::server::request_parser::state
header_line_start	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    header_line_start,$/;"	e	enum:http::server2::request_parser::state
header_line_start	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    header_line_start,$/;"	e	enum:http::server3::request_parser::state
header_line_start	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    header_line_start,$/;"	e	enum:http::server::request_parser::state
header_lws	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    header_lws,$/;"	e	enum:http::server::request_parser::state
header_lws	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    header_lws,$/;"	e	enum:http::server2::request_parser::state
header_lws	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    header_lws,$/;"	e	enum:http::server3::request_parser::state
header_lws	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    header_lws,$/;"	e	enum:http::server::request_parser::state
header_name	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    header_name,$/;"	e	enum:http::server::request_parser::state
header_name	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    header_name,$/;"	e	enum:http::server2::request_parser::state
header_name	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    header_name,$/;"	e	enum:http::server3::request_parser::state
header_name	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    header_name,$/;"	e	enum:http::server::request_parser::state
header_value	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    header_value,$/;"	e	enum:http::server::request_parser::state
header_value	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    header_value,$/;"	e	enum:http::server2::request_parser::state
header_value	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    header_value,$/;"	e	enum:http::server3::request_parser::state
header_value	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    header_value,$/;"	e	enum:http::server::request_parser::state
headers	asio/src/examples/cpp03/http/server/reply.hpp	/^  std::vector<header> headers;$/;"	m	struct:http::server::reply	typeref:typename:std::vector<header>
headers	asio/src/examples/cpp03/http/server/request.hpp	/^  std::vector<header> headers;$/;"	m	struct:http::server::request	typeref:typename:std::vector<header>
headers	asio/src/examples/cpp03/http/server2/reply.hpp	/^  std::vector<header> headers;$/;"	m	struct:http::server2::reply	typeref:typename:std::vector<header>
headers	asio/src/examples/cpp03/http/server2/request.hpp	/^  std::vector<header> headers;$/;"	m	struct:http::server2::request	typeref:typename:std::vector<header>
headers	asio/src/examples/cpp03/http/server3/reply.hpp	/^  std::vector<header> headers;$/;"	m	struct:http::server3::reply	typeref:typename:std::vector<header>
headers	asio/src/examples/cpp03/http/server3/request.hpp	/^  std::vector<header> headers;$/;"	m	struct:http::server3::request	typeref:typename:std::vector<header>
headers	asio/src/examples/cpp03/http/server4/reply.hpp	/^  std::vector<header> headers;$/;"	m	struct:http::server4::reply	typeref:typename:std::vector<header>
headers	asio/src/examples/cpp03/http/server4/request.hpp	/^  std::vector<header> headers;$/;"	m	struct:http::server4::request	typeref:typename:std::vector<header>
headers	asio/src/examples/cpp11/http/server/reply.hpp	/^  std::vector<header> headers;$/;"	m	struct:http::server::reply	typeref:typename:std::vector<header>
headers	asio/src/examples/cpp11/http/server/request.hpp	/^  std::vector<header> headers;$/;"	m	struct:http::server::request	typeref:typename:std::vector<header>
headers_equal	asio/src/examples/cpp03/http/server4/request_parser.cpp	/^bool request_parser::headers_equal(const std::string& a, const std::string& b)$/;"	f	class:http::server4::request_parser	typeref:typename:bool
heap_	asio/include/asio/detail/timer_queue.hpp	/^  std::vector<heap_entry> heap_;$/;"	m	class:asio::detail::timer_queue	typeref:typename:std::vector<heap_entry>
heap_entry	asio/include/asio/detail/timer_queue.hpp	/^  struct heap_entry$/;"	s	class:asio::detail::timer_queue
heap_index_	asio/include/asio/detail/timer_queue.hpp	/^    std::size_t heap_index_;$/;"	m	class:asio::detail::timer_queue::per_timer_data	typeref:typename:std::size_t
heartbeat_timer_	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  steady_timer heartbeat_timer_;$/;"	m	class:client	typeref:typename:steady_timer	file:
heartbeat_timer_	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  steady_timer heartbeat_timer_;$/;"	m	class:client	typeref:typename:steady_timer	file:
helper	asio/include/asio/buffers_iterator.hpp	/^    typedef buffers_iterator_types_helper<is_mutable> helper;$/;"	t	struct:asio::detail::buffers_iterator_types	typeref:typename:buffers_iterator_types_helper<is_mutable>
high_price	asio/src/examples/cpp03/serialization/stock.hpp	/^  double high_price;$/;"	m	struct:s11n_example::stock	typeref:typename:double
high_priority_handler	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^void high_priority_handler(const asio::error_code& \/*ec*\/)$/;"	f	typeref:typename:void
high_priority_handler	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^void high_priority_handler(const asio::error_code& \/*ec*\/,$/;"	f	typeref:typename:void
high_res_clock	asio/src/tests/latency/high_res_clock.hpp	/^inline boost::uint64_t high_res_clock()$/;"	f	typeref:typename:boost::uint64_t
high_resolution_timer	asio/include/asio/high_resolution_timer.hpp	/^  high_resolution_timer;$/;"	t	namespace:asio	typeref:typename:basic_waitable_timer<chrono::high_resolution_clock>
high_resolution_timer	asio/include/asio/ts/netfwd.hpp	/^  high_resolution_timer;$/;"	t	namespace:asio	typeref:typename:basic_waitable_timer<chrono::high_resolution_clock>
hints	asio/include/asio/ip/basic_resolver_query.hpp	/^  const asio::detail::addrinfo_type& hints() const$/;"	f	class:asio::ip::basic_resolver_query	typeref:typename:const asio::detail::addrinfo_type &
hints_	asio/include/asio/ip/basic_resolver_query.hpp	/^  asio::detail::addrinfo_type hints_;$/;"	m	class:asio::ip::basic_resolver_query	typeref:typename:asio::detail::addrinfo_type
hook_allocator	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  explicit hook_allocator(Handler& h)$/;"	f	class:asio::detail::hook_allocator
hook_allocator	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  hook_allocator(const hook_allocator<Handler, U>& a)$/;"	f	class:asio::detail::hook_allocator
hook_allocator	asio/include/asio/detail/handler_alloc_helpers.hpp	/^class hook_allocator$/;"	c	namespace:asio::detail
hook_allocator	asio/include/asio/detail/handler_alloc_helpers.hpp	/^class hook_allocator<Handler, void>$/;"	c	namespace:asio::detail
hops	asio/include/asio/ip/multicast.hpp	/^  ASIO_OS_DEF(IPV6_MULTICAST_HOPS)> hops;$/;"	t	namespace:asio::ip::multicast
hops	asio/include/asio/ip/multicast.hpp	/^typedef implementation_defined hops;$/;"	t	namespace:asio::ip::multicast	typeref:typename:implementation_defined
hops	asio/include/asio/ip/unicast.hpp	/^typedef implementation_defined hops;$/;"	t	namespace:asio::ip::unicast	typeref:typename:implementation_defined
host_	asio/include/asio/ssl/rfc2818_verification.hpp	/^  std::string host_;$/;"	m	class:asio::ssl::rfc2818_verification	typeref:typename:std::string
host_name	asio/include/asio/ip/basic_resolver_entry.hpp	/^  std::basic_string<char, std::char_traits<char>, Allocator> host_name($/;"	f	class:asio::ip::basic_resolver_entry	typeref:typename:std::basic_string<char,std::char_traits<char>,Allocator>
host_name	asio/include/asio/ip/basic_resolver_entry.hpp	/^  std::string host_name() const$/;"	f	class:asio::ip::basic_resolver_entry	typeref:typename:std::string
host_name	asio/include/asio/ip/basic_resolver_query.hpp	/^  std::string host_name() const$/;"	f	class:asio::ip::basic_resolver_query	typeref:typename:std::string
host_name_	asio/include/asio/ip/basic_resolver_entry.hpp	/^  std::string host_name_;$/;"	m	class:asio::ip::basic_resolver_entry	typeref:typename:std::string
host_name_	asio/include/asio/ip/basic_resolver_query.hpp	/^  std::string host_name_;$/;"	m	class:asio::ip::basic_resolver_query	typeref:typename:std::string
host_not_found	asio/include/asio/error.hpp	/^  host_not_found = ASIO_NETDB_ERROR(HOST_NOT_FOUND),$/;"	e	enum:asio::error::netdb_errors
host_not_found_try_again	asio/include/asio/error.hpp	/^  host_not_found_try_again = ASIO_NETDB_ERROR(TRY_AGAIN),$/;"	e	enum:asio::error::netdb_errors
host_unreachable	asio/include/asio/error.hpp	/^  host_unreachable = ASIO_SOCKET_ERROR(EHOSTUNREACH),$/;"	e	enum:asio::error::basic_errors
http	asio/src/examples/cpp03/http/server/connection.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server/connection.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server/connection_manager.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server/connection_manager.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server/header.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server/mime_types.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server/mime_types.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server/reply.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server/reply.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server/request.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server/request_handler.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server/request_handler.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server/request_parser.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server/request_parser.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server/server.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server/server.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server2/connection.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server2/connection.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server2/header.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server2/io_context_pool.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server2/io_context_pool.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server2/mime_types.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server2/mime_types.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server2/reply.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server2/reply.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server2/request.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server2/request_handler.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server2/request_handler.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server2/request_parser.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server2/server.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server2/server.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server3/connection.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server3/connection.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server3/header.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server3/mime_types.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server3/mime_types.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server3/reply.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server3/reply.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server3/request.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server3/request_handler.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server3/request_handler.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server3/request_parser.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server3/server.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server3/server.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server4/file_handler.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server4/file_handler.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server4/header.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server4/mime_types.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server4/mime_types.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server4/reply.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server4/reply.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server4/request.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server4/request_parser.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server4/request_parser.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp03/http/server4/server.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp03/http/server4/server.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp11/http/server/connection.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp11/http/server/connection.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp11/http/server/connection_manager.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp11/http/server/connection_manager.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp11/http/server/header.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp11/http/server/mime_types.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp11/http/server/mime_types.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp11/http/server/reply.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp11/http/server/reply.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp11/http/server/request.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp11/http/server/request_handler.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp11/http/server/request_handler.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp11/http/server/request_parser.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp11/http/server/request_parser.hpp	/^namespace http {$/;"	n
http	asio/src/examples/cpp11/http/server/server.cpp	/^namespace http {$/;"	n	file:
http	asio/src/examples/cpp11/http/server/server.hpp	/^namespace http {$/;"	n
http_client_async_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^http_client_async_client_SOURCES = http\/client\/async_client.cpp$/;"	m
http_client_sync_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^http_client_sync_client_SOURCES = http\/client\/sync_client.cpp$/;"	m
http_server2_http_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^http_server2_http_server_SOURCES = \\$/;"	m
http_server3_http_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^http_server3_http_server_SOURCES = \\$/;"	m
http_server4_http_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^http_server4_http_server_SOURCES = \\$/;"	m
http_server_http_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^http_server_http_server_SOURCES = \\$/;"	m
http_server_http_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^http_server_http_server_SOURCES = \\$/;"	m
http_version_h	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    http_version_h,$/;"	e	enum:http::server::request_parser::state
http_version_h	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    http_version_h,$/;"	e	enum:http::server2::request_parser::state
http_version_h	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    http_version_h,$/;"	e	enum:http::server3::request_parser::state
http_version_h	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    http_version_h,$/;"	e	enum:http::server::request_parser::state
http_version_major	asio/src/examples/cpp03/http/server/request.hpp	/^  int http_version_major;$/;"	m	struct:http::server::request	typeref:typename:int
http_version_major	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    http_version_major,$/;"	e	enum:http::server::request_parser::state
http_version_major	asio/src/examples/cpp03/http/server2/request.hpp	/^  int http_version_major;$/;"	m	struct:http::server2::request	typeref:typename:int
http_version_major	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    http_version_major,$/;"	e	enum:http::server2::request_parser::state
http_version_major	asio/src/examples/cpp03/http/server3/request.hpp	/^  int http_version_major;$/;"	m	struct:http::server3::request	typeref:typename:int
http_version_major	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    http_version_major,$/;"	e	enum:http::server3::request_parser::state
http_version_major	asio/src/examples/cpp03/http/server4/request.hpp	/^  int http_version_major;$/;"	m	struct:http::server4::request	typeref:typename:int
http_version_major	asio/src/examples/cpp11/http/server/request.hpp	/^  int http_version_major;$/;"	m	struct:http::server::request	typeref:typename:int
http_version_major	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    http_version_major,$/;"	e	enum:http::server::request_parser::state
http_version_major_start	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    http_version_major_start,$/;"	e	enum:http::server::request_parser::state
http_version_major_start	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    http_version_major_start,$/;"	e	enum:http::server2::request_parser::state
http_version_major_start	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    http_version_major_start,$/;"	e	enum:http::server3::request_parser::state
http_version_major_start	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    http_version_major_start,$/;"	e	enum:http::server::request_parser::state
http_version_minor	asio/src/examples/cpp03/http/server/request.hpp	/^  int http_version_minor;$/;"	m	struct:http::server::request	typeref:typename:int
http_version_minor	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    http_version_minor,$/;"	e	enum:http::server::request_parser::state
http_version_minor	asio/src/examples/cpp03/http/server2/request.hpp	/^  int http_version_minor;$/;"	m	struct:http::server2::request	typeref:typename:int
http_version_minor	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    http_version_minor,$/;"	e	enum:http::server2::request_parser::state
http_version_minor	asio/src/examples/cpp03/http/server3/request.hpp	/^  int http_version_minor;$/;"	m	struct:http::server3::request	typeref:typename:int
http_version_minor	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    http_version_minor,$/;"	e	enum:http::server3::request_parser::state
http_version_minor	asio/src/examples/cpp03/http/server4/request.hpp	/^  int http_version_minor;$/;"	m	struct:http::server4::request	typeref:typename:int
http_version_minor	asio/src/examples/cpp11/http/server/request.hpp	/^  int http_version_minor;$/;"	m	struct:http::server::request	typeref:typename:int
http_version_minor	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    http_version_minor,$/;"	e	enum:http::server::request_parser::state
http_version_minor_start	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    http_version_minor_start,$/;"	e	enum:http::server::request_parser::state
http_version_minor_start	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    http_version_minor_start,$/;"	e	enum:http::server2::request_parser::state
http_version_minor_start	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    http_version_minor_start,$/;"	e	enum:http::server3::request_parser::state
http_version_minor_start	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    http_version_minor_start,$/;"	e	enum:http::server::request_parser::state
http_version_p	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    http_version_p,$/;"	e	enum:http::server::request_parser::state
http_version_p	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    http_version_p,$/;"	e	enum:http::server2::request_parser::state
http_version_p	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    http_version_p,$/;"	e	enum:http::server3::request_parser::state
http_version_p	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    http_version_p,$/;"	e	enum:http::server::request_parser::state
http_version_slash	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    http_version_slash,$/;"	e	enum:http::server::request_parser::state
http_version_slash	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    http_version_slash,$/;"	e	enum:http::server2::request_parser::state
http_version_slash	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    http_version_slash,$/;"	e	enum:http::server3::request_parser::state
http_version_slash	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    http_version_slash,$/;"	e	enum:http::server::request_parser::state
http_version_t_1	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    http_version_t_1,$/;"	e	enum:http::server::request_parser::state
http_version_t_1	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    http_version_t_1,$/;"	e	enum:http::server2::request_parser::state
http_version_t_1	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    http_version_t_1,$/;"	e	enum:http::server3::request_parser::state
http_version_t_1	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    http_version_t_1,$/;"	e	enum:http::server::request_parser::state
http_version_t_2	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    http_version_t_2,$/;"	e	enum:http::server::request_parser::state
http_version_t_2	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    http_version_t_2,$/;"	e	enum:http::server2::request_parser::state
http_version_t_2	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    http_version_t_2,$/;"	e	enum:http::server3::request_parser::state
http_version_t_2	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    http_version_t_2,$/;"	e	enum:http::server::request_parser::state
i	asio/include/asio/ip/basic_resolver_results.hpp	/^      for (unsigned int i = 0; i < endpoints->Size; ++i)$/;"	m	class:asio::ip::basic_resolver_results	typeref:typename:unsigned int
icmp	asio/include/asio/ip/icmp.hpp	/^  explicit icmp(int protocol_id, int protocol_family) ASIO_NOEXCEPT$/;"	f	class:asio::ip::icmp
icmp	asio/include/asio/ip/icmp.hpp	/^class icmp$/;"	c	namespace:asio::ip
icmp_header	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  icmp_header() { std::fill(rep_, rep_ + sizeof(rep_), 0); }$/;"	f	class:icmp_header
icmp_header	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^class icmp_header$/;"	c
icmp_ping_SOURCES	asio/src/examples/cpp03/Makefile.am	/^icmp_ping_SOURCES = icmp\/ping.cpp$/;"	m
id	asio/include/asio/detail/push_options.hpp	/^#     define id /;"	d
id	asio/include/asio/execution_context.hpp	/^  id() {}$/;"	f	class:asio::execution_context::id
id	asio/include/asio/execution_context.hpp	/^  static service_id<Type> id;$/;"	m	class:asio::detail::execution_context_service_base	typeref:typename:service_id<Type>
id	asio/include/asio/execution_context.hpp	/^class execution_context::id$/;"	c	class:asio::execution_context
id	asio/include/asio/execution_context.hpp	/^service_id<Type> execution_context_service_base<Type>::id;$/;"	m	class:asio::detail::execution_context_service_base<Type>	typeref:typename:service_id<Type>
id	asio/include/asio/io_context.hpp	/^  static asio::detail::service_id<Type> id;$/;"	m	class:asio::detail::service_base	typeref:typename:asio::detail::service_id<Type>
id	asio/include/asio/io_context.hpp	/^asio::detail::service_id<Type> service_base<Type>::id;$/;"	m	class:asio::detail::service_base<Type>	typeref:typename:asio::detail::service_id<Type>
id	asio/src/doc/reference.xsl	/^  <xsl:variable name="id">$/;"	v	matchedTemplate:memberdef
id	asio/src/doc/reference.xsl	/^  <xsl:variable name="id">$/;"	v	namedTemplate:class-tables
id	asio/src/doc/reference.xsl	/^  <xsl:variable name="id">$/;"	v	namedTemplate:namespace-memberdef
id	asio/src/doc/reference.xsl	/^<xsl:param name="id"\/>$/;"	p	namedTemplate:enum
id	asio/src/tests/unit/io_context.cpp	/^  static asio::io_context::id id;$/;"	m	class:test_service	typeref:typename:asio::io_context::id	file:
id	asio/src/tests/unit/io_context.cpp	/^asio::io_context::id test_service::id;$/;"	m	class:test_service	typeref:typename:asio::io_context::id
id_	asio/include/asio/execution_context.hpp	/^    const execution_context::id* id_;$/;"	m	struct:asio::execution_context::service::key	typeref:typename:const execution_context::id *
identification	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned short identification() const { return decode(4, 5); }$/;"	f	class:ipv4_header	typeref:typename:unsigned short
identifier	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  unsigned short identifier() const { return decode(4, 5); }$/;"	f	class:icmp_header	typeref:typename:unsigned short
identifier	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  void identifier(unsigned short n) { encode(4, 5, n); }$/;"	f	class:icmp_header	typeref:typename:void
identifier	asio/src/examples/cpp03/services/logger_service.hpp	/^    std::string identifier;$/;"	m	struct:services::logger_service::logger_impl	typeref:typename:std::string
imagedata	asio/src/doc/asioref.xsl	/^<xsl:template match="imagedata">$/;"	m
impl	asio/include/asio/impl/executor.hpp	/^  impl()$/;"	f	class:asio::executor::impl
impl	asio/include/asio/impl/executor.hpp	/^  impl(const Executor& e, const Allocator& a) ASIO_NOEXCEPT$/;"	f	class:asio::executor::impl
impl	asio/include/asio/impl/executor.hpp	/^class executor::impl$/;"	c	class:asio::executor
impl	asio/include/asio/impl/executor.hpp	/^class executor::impl<system_executor, Allocator>$/;"	c	class:asio::executor
impl_	asio/include/asio/basic_deadline_timer.hpp	/^    detail::deadline_timer_service<TimeTraits>, Executor> impl_;$/;"	m	class:asio::basic_deadline_timer	typeref:typename:detail::io_object_impl<detail::deadline_timer_service<TimeTraits>,Executor>
impl_	asio/include/asio/basic_serial_port.hpp	/^  detail::io_object_impl<detail::reactive_serial_port_service, Executor> impl_;$/;"	m	class:asio::basic_serial_port	typeref:typename:detail::io_object_impl<detail::reactive_serial_port_service,Executor>
impl_	asio/include/asio/basic_serial_port.hpp	/^  detail::io_object_impl<detail::win_iocp_serial_port_service, Executor> impl_;$/;"	m	class:asio::basic_serial_port	typeref:typename:detail::io_object_impl<detail::win_iocp_serial_port_service,Executor>
impl_	asio/include/asio/basic_signal_set.hpp	/^  detail::io_object_impl<detail::signal_set_service, Executor> impl_;$/;"	m	class:asio::basic_signal_set	typeref:typename:detail::io_object_impl<detail::signal_set_service,Executor>
impl_	asio/include/asio/basic_socket.hpp	/^    detail::null_socket_service<Protocol>, Executor> impl_;$/;"	m	class:asio::basic_socket	typeref:typename:detail::io_object_impl<detail::null_socket_service<Protocol>,Executor>
impl_	asio/include/asio/basic_socket.hpp	/^    detail::reactive_socket_service<Protocol>, Executor> impl_;$/;"	m	class:asio::basic_socket	typeref:typename:detail::io_object_impl<detail::reactive_socket_service<Protocol>,Executor>
impl_	asio/include/asio/basic_socket.hpp	/^    detail::win_iocp_socket_service<Protocol>, Executor> impl_;$/;"	m	class:asio::basic_socket	typeref:typename:detail::io_object_impl<detail::win_iocp_socket_service<Protocol>,Executor>
impl_	asio/include/asio/basic_socket_acceptor.hpp	/^    detail::null_socket_service<Protocol>, Executor> impl_;$/;"	m	class:asio::basic_socket_acceptor	typeref:typename:detail::io_object_impl<detail::null_socket_service<Protocol>,Executor>
impl_	asio/include/asio/basic_socket_acceptor.hpp	/^    detail::reactive_socket_service<Protocol>, Executor> impl_;$/;"	m	class:asio::basic_socket_acceptor	typeref:typename:detail::io_object_impl<detail::reactive_socket_service<Protocol>,Executor>
impl_	asio/include/asio/basic_socket_acceptor.hpp	/^    detail::win_iocp_socket_service<Protocol>, Executor> impl_;$/;"	m	class:asio::basic_socket_acceptor	typeref:typename:detail::io_object_impl<detail::win_iocp_socket_service<Protocol>,Executor>
impl_	asio/include/asio/basic_waitable_timer.hpp	/^    executor_type > impl_;$/;"	m	class:asio::basic_waitable_timer	typeref:typename:detail::io_object_impl<detail::deadline_timer_service<detail::chrono_time_traits<Clock,WaitTraits>>,executor_type>
impl_	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  implementation_type impl_;$/;"	m	class:asio::detail::strand_executor_service::invoker	typeref:typename:implementation_type
impl_	asio/include/asio/detail/impl/strand_service.hpp	/^  strand_impl* impl_;$/;"	m	struct:asio::detail::strand_service::on_dispatch_exit	typeref:typename:strand_impl *
impl_	asio/include/asio/executor.hpp	/^  impl_base* impl_;$/;"	m	class:asio::executor	typeref:typename:impl_base *
impl_	asio/include/asio/generic/basic_endpoint.hpp	/^  asio::generic::detail::endpoint impl_;$/;"	m	class:asio::generic::basic_endpoint	typeref:typename:asio::generic::detail::endpoint
impl_	asio/include/asio/io_context.hpp	/^  impl_type& impl_;$/;"	m	class:asio::io_context	typeref:typename:impl_type &
impl_	asio/include/asio/io_context_strand.hpp	/^  mutable asio::detail::strand_service::implementation_type impl_;$/;"	m	class:asio::io_context::strand	typeref:typename:asio::detail::strand_service::implementation_type
impl_	asio/include/asio/ip/basic_endpoint.hpp	/^  asio::ip::detail::endpoint impl_;$/;"	m	class:asio::ip::basic_endpoint	typeref:typename:asio::ip::detail::endpoint
impl_	asio/include/asio/ip/basic_resolver.hpp	/^    Executor> impl_;$/;"	m	class:asio::ip::basic_resolver	typeref:typename:asio::detail::io_object_impl<asio::detail::resolver_service<InternetProtocol>,Executor>
impl_	asio/include/asio/ip/basic_resolver.hpp	/^    Executor> impl_;$/;"	m	class:asio::ip::basic_resolver	typeref:typename:asio::detail::io_object_impl<asio::detail::winrt_resolver_service<InternetProtocol>,Executor>
impl_	asio/include/asio/local/basic_endpoint.hpp	/^  asio::local::detail::endpoint impl_;$/;"	m	class:asio::local::basic_endpoint	typeref:typename:asio::local::detail::endpoint
impl_	asio/include/asio/posix/basic_descriptor.hpp	/^  detail::io_object_impl<detail::reactive_descriptor_service, Executor> impl_;$/;"	m	class:asio::posix::basic_descriptor	typeref:typename:detail::io_object_impl<detail::reactive_descriptor_service,Executor>
impl_	asio/include/asio/strand.hpp	/^  implementation_type impl_;$/;"	m	class:asio::strand	typeref:typename:implementation_type
impl_	asio/include/asio/thread.hpp	/^  detail::thread impl_;$/;"	m	class:asio::thread	typeref:typename:detail::thread
impl_	asio/include/asio/windows/basic_object_handle.hpp	/^    asio::detail::win_object_handle_service, Executor> impl_;$/;"	m	class:asio::windows::basic_object_handle	typeref:typename:asio::detail::io_object_impl<asio::detail::win_object_handle_service,Executor>
impl_	asio/include/asio/windows/basic_overlapped_handle.hpp	/^    asio::detail::win_iocp_handle_service, Executor> impl_;$/;"	m	class:asio::windows::basic_overlapped_handle	typeref:typename:asio::detail::io_object_impl<asio::detail::win_iocp_handle_service,Executor>
impl_	asio/include/asio/windows/overlapped_ptr.hpp	/^  detail::win_iocp_overlapped_ptr impl_;$/;"	m	class:asio::windows::overlapped_ptr	typeref:typename:detail::win_iocp_overlapped_ptr
impl_	asio/src/examples/cpp03/services/basic_logger.hpp	/^  impl_type impl_;$/;"	m	class:services::basic_logger	typeref:typename:impl_type
impl_	asio/src/examples/cpp11/executors/pipeline.cpp	/^  std::shared_ptr<queue_impl<T>> impl_;$/;"	m	class:queue_back	typeref:typename:std::shared_ptr<queue_impl<T>>	file:
impl_	asio/src/examples/cpp11/executors/pipeline.cpp	/^  std::shared_ptr<queue_impl<T>> impl_;$/;"	m	class:queue_front	typeref:typename:std::shared_ptr<queue_impl<T>>	file:
impl_	asio/src/examples/cpp14/executors/pipeline.cpp	/^  std::shared_ptr<queue_impl<T>> impl_;$/;"	m	class:queue_back	typeref:typename:std::shared_ptr<queue_impl<T>>	file:
impl_	asio/src/examples/cpp14/executors/pipeline.cpp	/^  std::shared_ptr<queue_impl<T>> impl_;$/;"	m	class:queue_front	typeref:typename:std::shared_ptr<queue_impl<T>>	file:
impl_0_completion_args	asio/src/tests/unit/compose.cpp	/^  explicit impl_0_completion_args(asio::io_context& ioc)$/;"	f	class:impl_0_completion_args	file:
impl_0_completion_args	asio/src/tests/unit/compose.cpp	/^class impl_0_completion_args$/;"	c	file:
impl_1_completion_arg	asio/src/tests/unit/compose.cpp	/^  explicit impl_1_completion_arg(asio::io_context& ioc)$/;"	f	class:impl_1_completion_arg	file:
impl_1_completion_arg	asio/src/tests/unit/compose.cpp	/^class impl_1_completion_arg$/;"	c	file:
impl_base	asio/include/asio/executor.hpp	/^    impl_base(bool fast_dispatch) : fast_dispatch_(fast_dispatch) {}$/;"	f	class:asio::executor::impl_base
impl_base	asio/include/asio/executor.hpp	/^  class impl_base$/;"	c	class:asio::executor
impl_list_	asio/include/asio/detail/strand_executor_service.hpp	/^  strand_impl* impl_list_;$/;"	m	class:asio::detail::strand_executor_service	typeref:typename:strand_impl *
impl_list_	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  implementation_type* impl_list_;$/;"	m	class:asio::detail::win_iocp_handle_service	typeref:typename:implementation_type *
impl_list_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  base_implementation_type* impl_list_;$/;"	m	class:asio::detail::win_iocp_socket_service_base	typeref:typename:base_implementation_type *
impl_list_	asio/include/asio/detail/win_object_handle_service.hpp	/^  implementation_type* impl_list_;$/;"	m	class:asio::detail::win_object_handle_service	typeref:typename:implementation_type *
impl_list_	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  base_implementation_type* impl_list_;$/;"	m	class:asio::detail::winrt_ssocket_service_base	typeref:typename:base_implementation_type *
impl_struct	asio/include/asio/ssl/stream.hpp	/^  struct impl_struct$/;"	s	class:asio::ssl::stream
impl_type	asio/include/asio/io_context.hpp	/^  typedef detail::io_context_impl impl_type;$/;"	t	class:asio::io_context	typeref:typename:detail::io_context_impl
impl_type	asio/src/examples/cpp03/services/basic_logger.hpp	/^  typedef typename service_type::impl_type impl_type;$/;"	t	class:services::basic_logger	typeref:typename:service_type::impl_type
impl_type	asio/src/examples/cpp03/services/logger_service.hpp	/^  typedef logger_impl* impl_type;$/;"	t	class:services::logger_service	typeref:typename:logger_impl *
implementation_	asio/include/asio/basic_io_object.hpp	/^  implementation_type implementation_;$/;"	m	class:asio::basic_io_object	typeref:typename:implementation_type
implementation_	asio/include/asio/detail/io_object_impl.hpp	/^  implementation_type implementation_;$/;"	m	class:asio::detail::io_object_impl	typeref:typename:implementation_type
implementation_executor_	asio/include/asio/detail/io_object_impl.hpp	/^  implementation_executor_type implementation_executor_;$/;"	m	class:asio::detail::io_object_impl	typeref:typename:implementation_executor_type
implementation_executor_type	asio/include/asio/detail/io_object_impl.hpp	/^  typedef io_object_executor<Executor> implementation_executor_type;$/;"	t	class:asio::detail::io_object_impl	typeref:typename:io_object_executor<Executor>
implementation_type	asio/include/asio/basic_io_object.hpp	/^    typedef typename service_type::implementation_type implementation_type;$/;"	t	class:asio::detail::service_has_move	typeref:typename:service_type::implementation_type
implementation_type	asio/include/asio/basic_io_object.hpp	/^  typedef typename service_type::implementation_type implementation_type;$/;"	t	class:asio::basic_io_object	typeref:typename:service_type::implementation_type
implementation_type	asio/include/asio/detail/deadline_timer_service.hpp	/^  struct implementation_type$/;"	s	class:asio::detail::deadline_timer_service
implementation_type	asio/include/asio/detail/io_object_impl.hpp	/^  typedef typename service_type::implementation_type implementation_type;$/;"	t	class:asio::detail::io_object_impl	typeref:typename:service_type::implementation_type
implementation_type	asio/include/asio/detail/null_socket_service.hpp	/^  struct implementation_type$/;"	s	class:asio::detail::null_socket_service
implementation_type	asio/include/asio/detail/reactive_descriptor_service.hpp	/^    implementation_type()$/;"	f	class:asio::detail::reactive_descriptor_service::implementation_type
implementation_type	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  class implementation_type$/;"	c	class:asio::detail::reactive_descriptor_service
implementation_type	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  typedef reactive_descriptor_service::implementation_type implementation_type;$/;"	t	class:asio::detail::reactive_serial_port_service	typeref:typename:reactive_descriptor_service::implementation_type
implementation_type	asio/include/asio/detail/reactive_socket_service.hpp	/^    implementation_type()$/;"	f	struct:asio::detail::reactive_socket_service::implementation_type
implementation_type	asio/include/asio/detail/reactive_socket_service.hpp	/^  struct implementation_type :$/;"	s	class:asio::detail::reactive_socket_service
implementation_type	asio/include/asio/detail/resolver_service.hpp	/^  typedef socket_ops::shared_cancel_token_type implementation_type;$/;"	t	class:asio::detail::resolver_service	typeref:typename:socket_ops::shared_cancel_token_type
implementation_type	asio/include/asio/detail/resolver_service_base.hpp	/^  typedef socket_ops::shared_cancel_token_type implementation_type;$/;"	t	class:asio::detail::resolver_service_base	typeref:typename:socket_ops::shared_cancel_token_type
implementation_type	asio/include/asio/detail/signal_set_service.hpp	/^    implementation_type()$/;"	f	class:asio::detail::signal_set_service::implementation_type
implementation_type	asio/include/asio/detail/signal_set_service.hpp	/^  class implementation_type$/;"	c	class:asio::detail::signal_set_service
implementation_type	asio/include/asio/detail/strand_executor_service.hpp	/^  typedef shared_ptr<strand_impl> implementation_type;$/;"	t	class:asio::detail::strand_executor_service	typeref:typename:shared_ptr<strand_impl>
implementation_type	asio/include/asio/detail/strand_service.hpp	/^  typedef strand_impl* implementation_type;$/;"	t	class:asio::detail::strand_service	typeref:typename:strand_impl *
implementation_type	asio/include/asio/detail/win_iocp_handle_service.hpp	/^    implementation_type()$/;"	f	class:asio::detail::win_iocp_handle_service::implementation_type
implementation_type	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  class implementation_type$/;"	c	class:asio::detail::win_iocp_handle_service
implementation_type	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  typedef win_iocp_handle_service::implementation_type implementation_type;$/;"	t	class:asio::detail::win_iocp_serial_port_service	typeref:typename:win_iocp_handle_service::implementation_type
implementation_type	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    implementation_type()$/;"	f	struct:asio::detail::win_iocp_socket_service::implementation_type
implementation_type	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  struct implementation_type :$/;"	s	class:asio::detail::win_iocp_socket_service
implementation_type	asio/include/asio/detail/win_object_handle_service.hpp	/^    implementation_type()$/;"	f	class:asio::detail::win_object_handle_service::implementation_type
implementation_type	asio/include/asio/detail/win_object_handle_service.hpp	/^  class implementation_type$/;"	c	class:asio::detail::win_object_handle_service
implementation_type	asio/include/asio/detail/winrt_resolver_service.hpp	/^  typedef socket_ops::shared_cancel_token_type implementation_type;$/;"	t	class:asio::detail::winrt_resolver_service	typeref:typename:socket_ops::shared_cancel_token_type
implementation_type	asio/include/asio/detail/winrt_ssocket_service.hpp	/^    implementation_type()$/;"	f	struct:asio::detail::winrt_ssocket_service::implementation_type
implementation_type	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  struct implementation_type : base_implementation_type$/;"	s	class:asio::detail::winrt_ssocket_service
implementation_type	asio/include/asio/strand.hpp	/^    implementation_type;$/;"	t	class:asio::strand	typeref:typename:detail::strand_executor_service::implementation_type
implementations_	asio/include/asio/detail/strand_service.hpp	/^  scoped_ptr<strand_impl> implementations_[num_implementations];$/;"	m	class:asio::detail::strand_service	typeref:typename:scoped_ptr<strand_impl>[]
imr_interface	asio/include/asio/detail/socket_types.hpp	/^struct in4_mreq_type { in4_addr_type imr_multiaddr, imr_interface; };$/;"	m	struct:asio::detail::in4_mreq_type	typeref:typename:in4_addr_type
imr_multiaddr	asio/include/asio/detail/socket_types.hpp	/^struct in4_mreq_type { in4_addr_type imr_multiaddr, imr_interface; };$/;"	m	struct:asio::detail::in4_mreq_type	typeref:typename:in4_addr_type
in4_addr_type	asio/include/asio/detail/socket_types.hpp	/^struct in4_addr_type { u_long_type s_addr; };$/;"	s	namespace:asio::detail
in4_mreq_type	asio/include/asio/detail/socket_types.hpp	/^struct in4_mreq_type { in4_addr_type imr_multiaddr, imr_interface; };$/;"	s	namespace:asio::detail
in6_addr_emulation	asio/include/asio/detail/old_win_sdk_compat.hpp	/^struct in6_addr_emulation$/;"	s	namespace:asio::detail
in6_addr_type	asio/include/asio/detail/socket_types.hpp	/^struct in6_addr_type { unsigned char s6_addr[16]; };$/;"	s	namespace:asio::detail
in6_mreq_type	asio/include/asio/detail/socket_types.hpp	/^struct in6_mreq_type { in6_addr_type ipv6mr_multiaddr;$/;"	s	namespace:asio::detail
in_avail	asio/include/asio/buffered_read_stream.hpp	/^  std::size_t in_avail()$/;"	f	class:asio::buffered_read_stream	typeref:typename:std::size_t
in_avail	asio/include/asio/buffered_read_stream.hpp	/^  std::size_t in_avail(asio::error_code& ec)$/;"	f	class:asio::buffered_read_stream	typeref:typename:std::size_t
in_avail	asio/include/asio/buffered_stream.hpp	/^  std::size_t in_avail()$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
in_avail	asio/include/asio/buffered_stream.hpp	/^  std::size_t in_avail(asio::error_code& ec)$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
in_avail	asio/include/asio/buffered_write_stream.hpp	/^  std::size_t in_avail()$/;"	f	class:asio::buffered_write_stream	typeref:typename:std::size_t
in_avail	asio/include/asio/buffered_write_stream.hpp	/^  std::size_t in_avail(asio::error_code& ec)$/;"	f	class:asio::buffered_write_stream	typeref:typename:std::size_t
in_flags_	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^  socket_base::message_flags in_flags_;$/;"	m	class:asio::detail::reactive_socket_recvmsg_op_base	typeref:typename:socket_base::message_flags
in_progress	asio/include/asio/error.hpp	/^  in_progress = ASIO_SOCKET_ERROR(EINPROGRESS),$/;"	e	enum:asio::error::basic_errors
in_use_	asio/src/examples/cpp03/allocation/server.cpp	/^  bool in_use_;$/;"	m	class:handler_memory	typeref:typename:bool	file:
in_use_	asio/src/examples/cpp11/allocation/server.cpp	/^  bool in_use_;$/;"	m	class:handler_memory	typeref:typename:bool	file:
in_use_	asio/src/tests/latency/allocator.hpp	/^  bool in_use_;$/;"	m	class:allocator	typeref:typename:bool
in_use_	asio/src/tests/performance/handler_allocator.hpp	/^  bool in_use_;$/;"	m	class:handler_allocator	typeref:typename:bool
inbound_data_	asio/src/examples/cpp03/serialization/connection.hpp	/^  std::vector<char> inbound_data_;$/;"	m	class:s11n_example::connection	typeref:typename:std::vector<char>
inbound_header_	asio/src/examples/cpp03/serialization/connection.hpp	/^  char inbound_header_[header_length];$/;"	m	class:s11n_example::connection	typeref:typename:char[]
increment	asio/include/asio/buffers_iterator.hpp	/^  void increment()$/;"	f	class:asio::buffers_iterator	typeref:typename:void
increment	asio/include/asio/detail/atomic_count.hpp	/^inline void increment(atomic_count& a, long b) { a += b; }$/;"	f	namespace:asio::detail	typeref:typename:void
increment	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  void increment()$/;"	f	class:asio::ip::basic_resolver_iterator	typeref:typename:void
increment	asio/src/tests/unit/deadline_timer.cpp	/^void increment(int* count)$/;"	f	typeref:typename:void
increment	asio/src/tests/unit/io_context.cpp	/^void increment(int* count)$/;"	f	typeref:typename:void
increment	asio/src/tests/unit/io_context_strand.cpp	/^void increment(int* count)$/;"	f	typeref:typename:void
increment	asio/src/tests/unit/strand.cpp	/^void increment(int* count)$/;"	f	typeref:typename:void
increment	asio/src/tests/unit/system_timer.cpp	/^void increment(int* count)$/;"	f	typeref:typename:void
increment_by_a	asio/src/tests/unit/io_context_strand.cpp	/^void increment_by_a(int* count, int a)$/;"	f	typeref:typename:void
increment_by_a	asio/src/tests/unit/strand.cpp	/^void increment_by_a(int* count, int a)$/;"	f	typeref:typename:void
increment_by_a_b	asio/src/tests/unit/io_context_strand.cpp	/^void increment_by_a_b(int* count, int a, int b)$/;"	f	typeref:typename:void
increment_by_a_b	asio/src/tests/unit/strand.cpp	/^void increment_by_a_b(int* count, int a, int b)$/;"	f	typeref:typename:void
increment_by_a_b_c	asio/src/tests/unit/io_context_strand.cpp	/^void increment_by_a_b_c(int* count, int a, int b, int c)$/;"	f	typeref:typename:void
increment_by_a_b_c	asio/src/tests/unit/strand.cpp	/^void increment_by_a_b_c(int* count, int a, int b, int c)$/;"	f	typeref:typename:void
increment_by_a_b_c_d	asio/src/tests/unit/io_context_strand.cpp	/^void increment_by_a_b_c_d(int* count, int a, int b, int c, int d)$/;"	f	typeref:typename:void
increment_by_a_b_c_d	asio/src/tests/unit/strand.cpp	/^void increment_by_a_b_c_d(int* count, int a, int b, int c, int d)$/;"	f	typeref:typename:void
increment_if_not_cancelled	asio/src/tests/unit/deadline_timer.cpp	/^void increment_if_not_cancelled(int* count,$/;"	f	typeref:typename:void
increment_if_not_cancelled	asio/src/tests/unit/system_timer.cpp	/^void increment_if_not_cancelled(int* count,$/;"	f	typeref:typename:void
increment_with_lock	asio/src/tests/unit/io_context_strand.cpp	/^void increment_with_lock(io_context::strand* s, int* count)$/;"	f	typeref:typename:void
increment_with_lock	asio/src/tests/unit/strand.cpp	/^void increment_with_lock(strand<io_context::executor_type>* s, int* count)$/;"	f	typeref:typename:void
increment_without_lock	asio/src/tests/unit/io_context_strand.cpp	/^void increment_without_lock(io_context::strand* s, int* count)$/;"	f	typeref:typename:void
increment_without_lock	asio/src/tests/unit/strand.cpp	/^void increment_without_lock(strand<io_context::executor_type>* s, int* count)$/;"	f	typeref:typename:void
indeterminate	asio/src/examples/cpp11/http/server/request_parser.hpp	/^  enum result_type { good, bad, indeterminate };$/;"	e	enum:http::server::request_parser::result_type
index_	asio/include/asio/impl/connect.hpp	/^    std::size_t index_;$/;"	m	class:asio::detail::range_connect_op	typeref:typename:std::size_t
index_	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  std::size_t index_;$/;"	m	class:asio::ip::basic_resolver_iterator	typeref:typename:std::size_t
info_reply	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^    info_reply = 16, address_request = 17, address_reply = 18 };$/;"	e	enum:icmp_header::__anon3193b0390103
info_request	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^    timestamp_request = 13, timestamp_reply = 14, info_request = 15,$/;"	e	enum:icmp_header::__anon3193b0390103
inherited-from	asio/src/doc/reference.xsl	/^<xsl:variable name="inherited-from" select="\/doxygen\/compounddef[starts-with($doxygen-id, @id)/;"	v	matchedTemplate:memberdef
init	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  void init(Iterator begin, Iterator end)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:void
init	asio/include/asio/detail/null_static_mutex.hpp	/^  void init()$/;"	f	struct:asio::detail::null_static_mutex	typeref:typename:void
init	asio/include/asio/detail/posix_static_mutex.hpp	/^  void init()$/;"	f	struct:asio::detail::posix_static_mutex	typeref:typename:void
init	asio/include/asio/detail/std_static_mutex.hpp	/^  void init()$/;"	f	class:asio::detail::std_static_mutex	typeref:typename:void
init	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^  static void init()$/;"	f	struct:custom_tracking	typeref:typename:void
init_	asio/include/asio/io_context.hpp	/^  detail::signal_init<> init_;$/;"	m	class:asio::io_context	typeref:typename:detail::signal_init<>
init_	asio/include/asio/io_context.hpp	/^  detail::winsock_init<> init_;$/;"	m	class:asio::io_context	typeref:typename:detail::winsock_init<>
init_	asio/include/asio/ssl/context.hpp	/^  asio::ssl::detail::openssl_init<> init_;$/;"	m	class:asio::ssl::context	typeref:typename:asio::ssl::detail::openssl_init<>
init_buffers	asio/include/asio/basic_socket_streambuf.hpp	/^  void init_buffers()$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:void
init_count_	asio/include/asio/detail/winsock_init.hpp	/^    long init_count_;$/;"	m	struct:asio::detail::winsock_init_base::data	typeref:typename:long
init_handler	asio/src/examples/cpp11/executors/actor.cpp	/^  void init_handler(actor_address next, actor_address from)$/;"	f	class:member	typeref:typename:void	file:
init_handler	asio/src/examples/cpp14/executors/actor.cpp	/^  void init_handler(actor_address next, actor_address from)$/;"	f	class:member	typeref:typename:void	file:
init_key	asio/include/asio/detail/impl/service_registry.hpp	/^inline void service_registry::init_key($/;"	f	class:asio::detail::service_registry	typeref:typename:void
init_key	asio/include/asio/detail/impl/service_registry.hpp	/^void service_registry::init_key(execution_context::service::key& key,$/;"	f	class:asio::detail::service_registry	typeref:typename:void
init_key_from_id	asio/include/asio/detail/impl/service_registry.hpp	/^void service_registry::init_key_from_id(execution_context::service::key& key,$/;"	f	class:asio::detail::service_registry	typeref:typename:void
init_once_	asio/include/asio/detail/std_global.hpp	/^  static std::once_flag init_once_;$/;"	m	struct:asio::detail::std_global_impl	typeref:typename:std::once_flag
init_once_	asio/include/asio/detail/std_global.hpp	/^std::once_flag std_global_impl<T>::init_once_;$/;"	m	class:asio::detail::std_global_impl<T>	typeref:typename:std::once_flag
init_task	asio/include/asio/detail/win_iocp_io_context.hpp	/^  void init_task()$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
init_wrapper	asio/include/asio/impl/redirect_error.hpp	/^    init_wrapper(asio::error_code& ec, ASIO_MOVE_ARG(Init) init)$/;"	f	struct:asio::async_result::init_wrapper
init_wrapper	asio/include/asio/impl/redirect_error.hpp	/^  struct init_wrapper$/;"	s	struct:asio::async_result
initial_suspend	asio/include/asio/impl/awaitable.hpp	/^  auto initial_suspend() noexcept$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:auto
initialised_	asio/include/asio/detail/win_static_mutex.hpp	/^  bool initialised_;$/;"	m	struct:asio::detail::win_static_mutex	typeref:typename:bool
initiate	asio/include/asio/async_result.hpp	/^  static return_type initiate($/;"	f	class:asio::async_result	typeref:typename:return_type
initiate	asio/include/asio/impl/detached.hpp	/^  static return_type initiate($/;"	f	struct:asio::async_result	typeref:typename:return_type
initiate	asio/include/asio/impl/redirect_error.hpp	/^  static return_type initiate($/;"	f	struct:asio::async_result	typeref:typename:return_type
initiate	asio/include/asio/impl/use_awaitable.hpp	/^  static return_type initiate(Initiation initiation,$/;"	f	class:asio::async_result	typeref:typename:return_type
initiate_async_accept	asio/include/asio/basic_socket_acceptor.hpp	/^    explicit initiate_async_accept(basic_socket_acceptor* self)$/;"	f	class:asio::basic_socket_acceptor::initiate_async_accept
initiate_async_accept	asio/include/asio/basic_socket_acceptor.hpp	/^  class initiate_async_accept$/;"	c	class:asio::basic_socket_acceptor
initiate_async_buffered_fill	asio/include/asio/impl/buffered_read_stream.hpp	/^    explicit initiate_async_buffered_fill(Stream& next_layer)$/;"	f	class:asio::detail::initiate_async_buffered_fill
initiate_async_buffered_fill	asio/include/asio/impl/buffered_read_stream.hpp	/^  class initiate_async_buffered_fill$/;"	c	namespace:asio::detail
initiate_async_buffered_flush	asio/include/asio/impl/buffered_write_stream.hpp	/^    explicit initiate_async_buffered_flush(Stream& next_layer)$/;"	f	class:asio::detail::initiate_async_buffered_flush
initiate_async_buffered_flush	asio/include/asio/impl/buffered_write_stream.hpp	/^  class initiate_async_buffered_flush$/;"	c	namespace:asio::detail
initiate_async_buffered_handshake	asio/include/asio/ssl/stream.hpp	/^    explicit initiate_async_buffered_handshake(stream* self)$/;"	f	class:asio::ssl::stream::initiate_async_buffered_handshake
initiate_async_buffered_handshake	asio/include/asio/ssl/stream.hpp	/^  class initiate_async_buffered_handshake$/;"	c	class:asio::ssl::stream
initiate_async_buffered_read_some	asio/include/asio/impl/buffered_read_stream.hpp	/^    explicit initiate_async_buffered_read_some(Stream& next_layer)$/;"	f	class:asio::detail::initiate_async_buffered_read_some
initiate_async_buffered_read_some	asio/include/asio/impl/buffered_read_stream.hpp	/^  class initiate_async_buffered_read_some$/;"	c	namespace:asio::detail
initiate_async_buffered_write_some	asio/include/asio/impl/buffered_write_stream.hpp	/^    explicit initiate_async_buffered_write_some(Stream& next_layer)$/;"	f	class:asio::detail::initiate_async_buffered_write_some
initiate_async_buffered_write_some	asio/include/asio/impl/buffered_write_stream.hpp	/^  class initiate_async_buffered_write_some$/;"	c	namespace:asio::detail
initiate_async_connect	asio/include/asio/basic_socket.hpp	/^    explicit initiate_async_connect(basic_socket* self)$/;"	f	class:asio::basic_socket::initiate_async_connect
initiate_async_connect	asio/include/asio/basic_socket.hpp	/^  class initiate_async_connect$/;"	c	class:asio::basic_socket
initiate_async_handshake	asio/include/asio/ssl/stream.hpp	/^    explicit initiate_async_handshake(stream* self)$/;"	f	class:asio::ssl::stream::initiate_async_handshake
initiate_async_handshake	asio/include/asio/ssl/stream.hpp	/^  class initiate_async_handshake$/;"	c	class:asio::ssl::stream
initiate_async_iterator_connect	asio/include/asio/impl/connect.hpp	/^    explicit initiate_async_iterator_connect($/;"	f	class:asio::detail::initiate_async_iterator_connect
initiate_async_iterator_connect	asio/include/asio/impl/connect.hpp	/^  class initiate_async_iterator_connect$/;"	c	namespace:asio::detail
initiate_async_move_accept	asio/include/asio/basic_socket_acceptor.hpp	/^    explicit initiate_async_move_accept(basic_socket_acceptor* self)$/;"	f	class:asio::basic_socket_acceptor::initiate_async_move_accept
initiate_async_move_accept	asio/include/asio/basic_socket_acceptor.hpp	/^  class initiate_async_move_accept$/;"	c	class:asio::basic_socket_acceptor
initiate_async_range_connect	asio/include/asio/impl/connect.hpp	/^    explicit initiate_async_range_connect(basic_socket<Protocol, Executor>& s)$/;"	f	class:asio::detail::initiate_async_range_connect
initiate_async_range_connect	asio/include/asio/impl/connect.hpp	/^  class initiate_async_range_connect$/;"	c	namespace:asio::detail
initiate_async_read_at_buffer_sequence	asio/include/asio/impl/read_at.hpp	/^    explicit initiate_async_read_at_buffer_sequence($/;"	f	class:asio::detail::initiate_async_read_at_buffer_sequence
initiate_async_read_at_buffer_sequence	asio/include/asio/impl/read_at.hpp	/^  class initiate_async_read_at_buffer_sequence$/;"	c	namespace:asio::detail
initiate_async_read_at_streambuf	asio/include/asio/impl/read_at.hpp	/^    explicit initiate_async_read_at_streambuf($/;"	f	class:asio::detail::initiate_async_read_at_streambuf
initiate_async_read_at_streambuf	asio/include/asio/impl/read_at.hpp	/^  class initiate_async_read_at_streambuf$/;"	c	namespace:asio::detail
initiate_async_read_buffer_sequence	asio/include/asio/impl/read.hpp	/^    explicit initiate_async_read_buffer_sequence(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_buffer_sequence
initiate_async_read_buffer_sequence	asio/include/asio/impl/read.hpp	/^  class initiate_async_read_buffer_sequence$/;"	c	namespace:asio::detail
initiate_async_read_dynbuf_v1	asio/include/asio/impl/read.hpp	/^    explicit initiate_async_read_dynbuf_v1(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_dynbuf_v1
initiate_async_read_dynbuf_v1	asio/include/asio/impl/read.hpp	/^  class initiate_async_read_dynbuf_v1$/;"	c	namespace:asio::detail
initiate_async_read_dynbuf_v2	asio/include/asio/impl/read.hpp	/^    explicit initiate_async_read_dynbuf_v2(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_dynbuf_v2
initiate_async_read_dynbuf_v2	asio/include/asio/impl/read.hpp	/^  class initiate_async_read_dynbuf_v2$/;"	c	namespace:asio::detail
initiate_async_read_some	asio/include/asio/basic_serial_port.hpp	/^    explicit initiate_async_read_some(basic_serial_port* self)$/;"	f	class:asio::basic_serial_port::initiate_async_read_some
initiate_async_read_some	asio/include/asio/basic_serial_port.hpp	/^  class initiate_async_read_some$/;"	c	class:asio::basic_serial_port
initiate_async_read_some	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    explicit initiate_async_read_some(basic_stream_descriptor* self)$/;"	f	class:asio::posix::basic_stream_descriptor::initiate_async_read_some
initiate_async_read_some	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  class initiate_async_read_some$/;"	c	class:asio::posix::basic_stream_descriptor
initiate_async_read_some	asio/include/asio/ssl/stream.hpp	/^    explicit initiate_async_read_some(stream* self)$/;"	f	class:asio::ssl::stream::initiate_async_read_some
initiate_async_read_some	asio/include/asio/ssl/stream.hpp	/^  class initiate_async_read_some$/;"	c	class:asio::ssl::stream
initiate_async_read_some	asio/include/asio/windows/basic_stream_handle.hpp	/^    explicit initiate_async_read_some(basic_stream_handle* self)$/;"	f	class:asio::windows::basic_stream_handle::initiate_async_read_some
initiate_async_read_some	asio/include/asio/windows/basic_stream_handle.hpp	/^  class initiate_async_read_some$/;"	c	class:asio::windows::basic_stream_handle
initiate_async_read_some_at	asio/include/asio/windows/basic_random_access_handle.hpp	/^    explicit initiate_async_read_some_at(basic_random_access_handle* self)$/;"	f	class:asio::windows::basic_random_access_handle::initiate_async_read_some_at
initiate_async_read_some_at	asio/include/asio/windows/basic_random_access_handle.hpp	/^  class initiate_async_read_some_at$/;"	c	class:asio::windows::basic_random_access_handle
initiate_async_read_until_delim_string_v1	asio/include/asio/impl/read_until.hpp	/^    explicit initiate_async_read_until_delim_string_v1(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_until_delim_string_v1
initiate_async_read_until_delim_string_v1	asio/include/asio/impl/read_until.hpp	/^  class initiate_async_read_until_delim_string_v1$/;"	c	namespace:asio::detail
initiate_async_read_until_delim_string_v2	asio/include/asio/impl/read_until.hpp	/^    explicit initiate_async_read_until_delim_string_v2(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_until_delim_string_v2
initiate_async_read_until_delim_string_v2	asio/include/asio/impl/read_until.hpp	/^  class initiate_async_read_until_delim_string_v2$/;"	c	namespace:asio::detail
initiate_async_read_until_delim_v1	asio/include/asio/impl/read_until.hpp	/^    explicit initiate_async_read_until_delim_v1(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_until_delim_v1
initiate_async_read_until_delim_v1	asio/include/asio/impl/read_until.hpp	/^  class initiate_async_read_until_delim_v1$/;"	c	namespace:asio::detail
initiate_async_read_until_delim_v2	asio/include/asio/impl/read_until.hpp	/^    explicit initiate_async_read_until_delim_v2(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_until_delim_v2
initiate_async_read_until_delim_v2	asio/include/asio/impl/read_until.hpp	/^  class initiate_async_read_until_delim_v2$/;"	c	namespace:asio::detail
initiate_async_read_until_expr_v1	asio/include/asio/impl/read_until.hpp	/^    explicit initiate_async_read_until_expr_v1(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_until_expr_v1
initiate_async_read_until_expr_v1	asio/include/asio/impl/read_until.hpp	/^  class initiate_async_read_until_expr_v1$/;"	c	namespace:asio::detail
initiate_async_read_until_expr_v2	asio/include/asio/impl/read_until.hpp	/^    explicit initiate_async_read_until_expr_v2(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_until_expr_v2
initiate_async_read_until_expr_v2	asio/include/asio/impl/read_until.hpp	/^  class initiate_async_read_until_expr_v2$/;"	c	namespace:asio::detail
initiate_async_read_until_match_v1	asio/include/asio/impl/read_until.hpp	/^    explicit initiate_async_read_until_match_v1(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_until_match_v1
initiate_async_read_until_match_v1	asio/include/asio/impl/read_until.hpp	/^  class initiate_async_read_until_match_v1$/;"	c	namespace:asio::detail
initiate_async_read_until_match_v2	asio/include/asio/impl/read_until.hpp	/^    explicit initiate_async_read_until_match_v2(AsyncReadStream& stream)$/;"	f	class:asio::detail::initiate_async_read_until_match_v2
initiate_async_read_until_match_v2	asio/include/asio/impl/read_until.hpp	/^  class initiate_async_read_until_match_v2$/;"	c	namespace:asio::detail
initiate_async_receive	asio/include/asio/basic_datagram_socket.hpp	/^    explicit initiate_async_receive(basic_datagram_socket* self)$/;"	f	class:asio::basic_datagram_socket::initiate_async_receive
initiate_async_receive	asio/include/asio/basic_datagram_socket.hpp	/^  class initiate_async_receive$/;"	c	class:asio::basic_datagram_socket
initiate_async_receive	asio/include/asio/basic_raw_socket.hpp	/^    explicit initiate_async_receive(basic_raw_socket* self)$/;"	f	class:asio::basic_raw_socket::initiate_async_receive
initiate_async_receive	asio/include/asio/basic_raw_socket.hpp	/^  class initiate_async_receive$/;"	c	class:asio::basic_raw_socket
initiate_async_receive	asio/include/asio/basic_stream_socket.hpp	/^    explicit initiate_async_receive(basic_stream_socket* self)$/;"	f	class:asio::basic_stream_socket::initiate_async_receive
initiate_async_receive	asio/include/asio/basic_stream_socket.hpp	/^  class initiate_async_receive$/;"	c	class:asio::basic_stream_socket
initiate_async_receive_from	asio/include/asio/basic_datagram_socket.hpp	/^    explicit initiate_async_receive_from(basic_datagram_socket* self)$/;"	f	class:asio::basic_datagram_socket::initiate_async_receive_from
initiate_async_receive_from	asio/include/asio/basic_datagram_socket.hpp	/^  class initiate_async_receive_from$/;"	c	class:asio::basic_datagram_socket
initiate_async_receive_from	asio/include/asio/basic_raw_socket.hpp	/^    explicit initiate_async_receive_from(basic_raw_socket* self)$/;"	f	class:asio::basic_raw_socket::initiate_async_receive_from
initiate_async_receive_from	asio/include/asio/basic_raw_socket.hpp	/^  class initiate_async_receive_from$/;"	c	class:asio::basic_raw_socket
initiate_async_receive_with_flags	asio/include/asio/basic_seq_packet_socket.hpp	/^    explicit initiate_async_receive_with_flags(basic_seq_packet_socket* self)$/;"	f	class:asio::basic_seq_packet_socket::initiate_async_receive_with_flags
initiate_async_receive_with_flags	asio/include/asio/basic_seq_packet_socket.hpp	/^  class initiate_async_receive_with_flags$/;"	c	class:asio::basic_seq_packet_socket
initiate_async_resolve	asio/include/asio/ip/basic_resolver.hpp	/^    explicit initiate_async_resolve(basic_resolver* self)$/;"	f	class:asio::ip::basic_resolver::initiate_async_resolve
initiate_async_resolve	asio/include/asio/ip/basic_resolver.hpp	/^  class initiate_async_resolve$/;"	c	class:asio::ip::basic_resolver
initiate_async_send	asio/include/asio/basic_datagram_socket.hpp	/^    explicit initiate_async_send(basic_datagram_socket* self)$/;"	f	class:asio::basic_datagram_socket::initiate_async_send
initiate_async_send	asio/include/asio/basic_datagram_socket.hpp	/^  class initiate_async_send$/;"	c	class:asio::basic_datagram_socket
initiate_async_send	asio/include/asio/basic_raw_socket.hpp	/^    explicit initiate_async_send(basic_raw_socket* self)$/;"	f	class:asio::basic_raw_socket::initiate_async_send
initiate_async_send	asio/include/asio/basic_raw_socket.hpp	/^  class initiate_async_send$/;"	c	class:asio::basic_raw_socket
initiate_async_send	asio/include/asio/basic_seq_packet_socket.hpp	/^    explicit initiate_async_send(basic_seq_packet_socket* self)$/;"	f	class:asio::basic_seq_packet_socket::initiate_async_send
initiate_async_send	asio/include/asio/basic_seq_packet_socket.hpp	/^  class initiate_async_send$/;"	c	class:asio::basic_seq_packet_socket
initiate_async_send	asio/include/asio/basic_stream_socket.hpp	/^    explicit initiate_async_send(basic_stream_socket* self)$/;"	f	class:asio::basic_stream_socket::initiate_async_send
initiate_async_send	asio/include/asio/basic_stream_socket.hpp	/^  class initiate_async_send$/;"	c	class:asio::basic_stream_socket
initiate_async_send_to	asio/include/asio/basic_datagram_socket.hpp	/^    explicit initiate_async_send_to(basic_datagram_socket* self)$/;"	f	class:asio::basic_datagram_socket::initiate_async_send_to
initiate_async_send_to	asio/include/asio/basic_datagram_socket.hpp	/^  class initiate_async_send_to$/;"	c	class:asio::basic_datagram_socket
initiate_async_send_to	asio/include/asio/basic_raw_socket.hpp	/^    explicit initiate_async_send_to(basic_raw_socket* self)$/;"	f	class:asio::basic_raw_socket::initiate_async_send_to
initiate_async_send_to	asio/include/asio/basic_raw_socket.hpp	/^  class initiate_async_send_to$/;"	c	class:asio::basic_raw_socket
initiate_async_shutdown	asio/include/asio/ssl/stream.hpp	/^    explicit initiate_async_shutdown(stream* self)$/;"	f	class:asio::ssl::stream::initiate_async_shutdown
initiate_async_shutdown	asio/include/asio/ssl/stream.hpp	/^  class initiate_async_shutdown$/;"	c	class:asio::ssl::stream
initiate_async_wait	asio/include/asio/basic_deadline_timer.hpp	/^    explicit initiate_async_wait(basic_deadline_timer* self)$/;"	f	class:asio::basic_deadline_timer::initiate_async_wait
initiate_async_wait	asio/include/asio/basic_deadline_timer.hpp	/^  class initiate_async_wait$/;"	c	class:asio::basic_deadline_timer
initiate_async_wait	asio/include/asio/basic_signal_set.hpp	/^    explicit initiate_async_wait(basic_signal_set* self)$/;"	f	class:asio::basic_signal_set::initiate_async_wait
initiate_async_wait	asio/include/asio/basic_signal_set.hpp	/^  class initiate_async_wait$/;"	c	class:asio::basic_signal_set
initiate_async_wait	asio/include/asio/basic_socket.hpp	/^    explicit initiate_async_wait(basic_socket* self)$/;"	f	class:asio::basic_socket::initiate_async_wait
initiate_async_wait	asio/include/asio/basic_socket.hpp	/^  class initiate_async_wait$/;"	c	class:asio::basic_socket
initiate_async_wait	asio/include/asio/basic_socket_acceptor.hpp	/^    explicit initiate_async_wait(basic_socket_acceptor* self)$/;"	f	class:asio::basic_socket_acceptor::initiate_async_wait
initiate_async_wait	asio/include/asio/basic_socket_acceptor.hpp	/^  class initiate_async_wait$/;"	c	class:asio::basic_socket_acceptor
initiate_async_wait	asio/include/asio/basic_waitable_timer.hpp	/^    explicit initiate_async_wait(basic_waitable_timer* self)$/;"	f	class:asio::basic_waitable_timer::initiate_async_wait
initiate_async_wait	asio/include/asio/basic_waitable_timer.hpp	/^  class initiate_async_wait$/;"	c	class:asio::basic_waitable_timer
initiate_async_wait	asio/include/asio/posix/basic_descriptor.hpp	/^    explicit initiate_async_wait(basic_descriptor* self)$/;"	f	class:asio::posix::basic_descriptor::initiate_async_wait
initiate_async_wait	asio/include/asio/posix/basic_descriptor.hpp	/^  class initiate_async_wait$/;"	c	class:asio::posix::basic_descriptor
initiate_async_wait	asio/include/asio/windows/basic_object_handle.hpp	/^    explicit initiate_async_wait(basic_object_handle* self)$/;"	f	class:asio::windows::basic_object_handle::initiate_async_wait
initiate_async_wait	asio/include/asio/windows/basic_object_handle.hpp	/^  class initiate_async_wait$/;"	c	class:asio::windows::basic_object_handle
initiate_async_write_at_buffer_sequence	asio/include/asio/impl/write_at.hpp	/^    explicit initiate_async_write_at_buffer_sequence($/;"	f	class:asio::detail::initiate_async_write_at_buffer_sequence
initiate_async_write_at_buffer_sequence	asio/include/asio/impl/write_at.hpp	/^  class initiate_async_write_at_buffer_sequence$/;"	c	namespace:asio::detail
initiate_async_write_at_streambuf	asio/include/asio/impl/write_at.hpp	/^    explicit initiate_async_write_at_streambuf($/;"	f	class:asio::detail::initiate_async_write_at_streambuf
initiate_async_write_at_streambuf	asio/include/asio/impl/write_at.hpp	/^  class initiate_async_write_at_streambuf$/;"	c	namespace:asio::detail
initiate_async_write_buffer_sequence	asio/include/asio/impl/write.hpp	/^    explicit initiate_async_write_buffer_sequence(AsyncWriteStream& stream)$/;"	f	class:asio::detail::initiate_async_write_buffer_sequence
initiate_async_write_buffer_sequence	asio/include/asio/impl/write.hpp	/^  class initiate_async_write_buffer_sequence$/;"	c	namespace:asio::detail
initiate_async_write_dynbuf_v1	asio/include/asio/impl/write.hpp	/^    explicit initiate_async_write_dynbuf_v1(AsyncWriteStream& stream)$/;"	f	class:asio::detail::initiate_async_write_dynbuf_v1
initiate_async_write_dynbuf_v1	asio/include/asio/impl/write.hpp	/^  class initiate_async_write_dynbuf_v1$/;"	c	namespace:asio::detail
initiate_async_write_dynbuf_v2	asio/include/asio/impl/write.hpp	/^    explicit initiate_async_write_dynbuf_v2(AsyncWriteStream& stream)$/;"	f	class:asio::detail::initiate_async_write_dynbuf_v2
initiate_async_write_dynbuf_v2	asio/include/asio/impl/write.hpp	/^  class initiate_async_write_dynbuf_v2$/;"	c	namespace:asio::detail
initiate_async_write_some	asio/include/asio/basic_serial_port.hpp	/^    explicit initiate_async_write_some(basic_serial_port* self)$/;"	f	class:asio::basic_serial_port::initiate_async_write_some
initiate_async_write_some	asio/include/asio/basic_serial_port.hpp	/^  class initiate_async_write_some$/;"	c	class:asio::basic_serial_port
initiate_async_write_some	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    explicit initiate_async_write_some(basic_stream_descriptor* self)$/;"	f	class:asio::posix::basic_stream_descriptor::initiate_async_write_some
initiate_async_write_some	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  class initiate_async_write_some$/;"	c	class:asio::posix::basic_stream_descriptor
initiate_async_write_some	asio/include/asio/ssl/stream.hpp	/^    explicit initiate_async_write_some(stream* self)$/;"	f	class:asio::ssl::stream::initiate_async_write_some
initiate_async_write_some	asio/include/asio/ssl/stream.hpp	/^  class initiate_async_write_some$/;"	c	class:asio::ssl::stream
initiate_async_write_some	asio/include/asio/windows/basic_stream_handle.hpp	/^    explicit initiate_async_write_some(basic_stream_handle* self)$/;"	f	class:asio::windows::basic_stream_handle::initiate_async_write_some
initiate_async_write_some	asio/include/asio/windows/basic_stream_handle.hpp	/^  class initiate_async_write_some$/;"	c	class:asio::windows::basic_stream_handle
initiate_async_write_some_at	asio/include/asio/windows/basic_random_access_handle.hpp	/^    explicit initiate_async_write_some_at(basic_random_access_handle* self)$/;"	f	class:asio::windows::basic_random_access_handle::initiate_async_write_some_at
initiate_async_write_some_at	asio/include/asio/windows/basic_random_access_handle.hpp	/^  class initiate_async_write_some_at$/;"	c	class:asio::windows::basic_random_access_handle
initiate_co_spawn	asio/include/asio/impl/co_spawn.hpp	/^  explicit initiate_co_spawn(const OtherExecutor& ex)$/;"	f	class:asio::detail::initiate_co_spawn
initiate_co_spawn	asio/include/asio/impl/co_spawn.hpp	/^class initiate_co_spawn$/;"	c	namespace:asio::detail
initiate_composed_op	asio/include/asio/impl/compose.hpp	/^    explicit initiate_composed_op(ASIO_MOVE_ARG(T) executors)$/;"	f	class:asio::detail::initiate_composed_op
initiate_composed_op	asio/include/asio/impl/compose.hpp	/^  class initiate_composed_op$/;"	c	namespace:asio::detail
initiate_defer	asio/include/asio/impl/defer.hpp	/^class initiate_defer$/;"	c	namespace:asio::detail
initiate_defer_with_executor	asio/include/asio/impl/defer.hpp	/^  explicit initiate_defer_with_executor(const Executor& ex)$/;"	f	class:asio::detail::initiate_defer_with_executor
initiate_defer_with_executor	asio/include/asio/impl/defer.hpp	/^class initiate_defer_with_executor$/;"	c	namespace:asio::detail
initiate_dispatch	asio/include/asio/impl/dispatch.hpp	/^class initiate_dispatch$/;"	c	namespace:asio::detail
initiate_dispatch	asio/include/asio/impl/io_context.hpp	/^struct io_context::initiate_dispatch$/;"	s	class:asio::io_context
initiate_dispatch	asio/include/asio/io_context_strand.hpp	/^  struct initiate_dispatch$/;"	s	class:asio::io_context::strand
initiate_dispatch_with_executor	asio/include/asio/impl/dispatch.hpp	/^  explicit initiate_dispatch_with_executor(const Executor& ex)$/;"	f	class:asio::detail::initiate_dispatch_with_executor
initiate_dispatch_with_executor	asio/include/asio/impl/dispatch.hpp	/^class initiate_dispatch_with_executor$/;"	c	namespace:asio::detail
initiate_post	asio/include/asio/impl/io_context.hpp	/^struct io_context::initiate_post$/;"	s	class:asio::io_context
initiate_post	asio/include/asio/impl/post.hpp	/^class initiate_post$/;"	c	namespace:asio::detail
initiate_post	asio/include/asio/io_context_strand.hpp	/^  struct initiate_post$/;"	s	class:asio::io_context::strand
initiate_post_with_executor	asio/include/asio/impl/post.hpp	/^  explicit initiate_post_with_executor(const Executor& ex)$/;"	f	class:asio::detail::initiate_post_with_executor
initiate_post_with_executor	asio/include/asio/impl/post.hpp	/^class initiate_post_with_executor$/;"	c	namespace:asio::detail
initiation_	asio/include/asio/impl/redirect_error.hpp	/^    Initiation initiation_;$/;"	m	struct:asio::async_result::init_wrapper	typeref:typename:Initiation
initiation_archetype	asio/include/asio/async_result.hpp	/^struct initiation_archetype$/;"	s	namespace:asio::detail
inner_executor	asio/include/asio/detail/io_object_executor.hpp	/^  const Executor& inner_executor() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::io_object_executor	typeref:typename:const Executor &
inner_executor_type	asio/include/asio/strand.hpp	/^  typedef Executor inner_executor_type;$/;"	t	class:asio::strand	typeref:typename:Executor
inner_stream_impl_	asio/include/asio/buffered_stream.hpp	/^  write_stream_type inner_stream_impl_;$/;"	m	class:asio::buffered_stream	typeref:typename:write_stream_type
input_	asio/include/asio/ssl/detail/stream_core.hpp	/^  asio::const_buffer input_;$/;"	m	struct:asio::ssl::detail::stream_core	typeref:typename:asio::const_buffer
input_	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  posix::stream_descriptor input_;$/;"	m	class:posix_chat_client	typeref:typename:posix::stream_descriptor	file:
input_buffer_	asio/include/asio/ssl/detail/stream_core.hpp	/^  const asio::mutable_buffer input_buffer_;$/;"	m	struct:asio::ssl::detail::stream_core	typeref:typename:const asio::mutable_buffer
input_buffer_	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  asio::streambuf input_buffer_;$/;"	m	class:posix_chat_client	typeref:typename:asio::streambuf	file:
input_buffer_	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  std::string input_buffer_;$/;"	m	class:client	typeref:typename:std::string	file:
input_buffer_	asio/src/examples/cpp03/timeouts/blocking_tcp_client.cpp	/^  std::string input_buffer_;$/;"	m	class:client	typeref:typename:std::string	file:
input_buffer_	asio/src/examples/cpp03/timeouts/server.cpp	/^  std::string input_buffer_;$/;"	m	class:tcp_session	typeref:typename:std::string	file:
input_buffer_	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  std::string input_buffer_;$/;"	m	class:client	typeref:typename:std::string	file:
input_buffer_	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^  std::string input_buffer_;$/;"	m	class:client	typeref:typename:std::string	file:
input_buffer_	asio/src/examples/cpp11/timeouts/server.cpp	/^  std::string input_buffer_;$/;"	m	class:tcp_session	typeref:typename:std::string	file:
input_buffer_space_	asio/include/asio/ssl/detail/stream_core.hpp	/^  std::vector<unsigned char> input_buffer_space_;$/;"	m	struct:asio::ssl::detail::stream_core	typeref:typename:std::vector<unsigned char>
input_deadline_	asio/src/examples/cpp03/timeouts/server.cpp	/^  steady_timer input_deadline_;$/;"	m	class:tcp_session	typeref:typename:steady_timer	file:
input_deadline_	asio/src/examples/cpp11/timeouts/server.cpp	/^  steady_timer input_deadline_{socket_.get_executor()};$/;"	m	class:tcp_session	typeref:typename:steady_timer	file:
insert	asio/include/asio/detail/hash_map.hpp	/^  std::pair<iterator, bool> insert(const value_type& v)$/;"	f	class:asio::detail::hash_map	typeref:typename:std::pair<iterator,bool>
insp	asio/include/asio/detail/winrt_utils.hpp	/^  ComPtr<IInspectable> insp = reinterpret_cast<IInspectable*>(b);$/;"	v	namespace:asio::detail::winrt_utils	typeref:typename:ComPtr<IInspectable>
instance_	asio/include/asio/detail/null_global.hpp	/^  static null_global_impl instance_;$/;"	m	struct:asio::detail::null_global_impl	typeref:typename:null_global_impl
instance_	asio/include/asio/detail/null_global.hpp	/^null_global_impl<T> null_global_impl<T>::instance_;$/;"	m	class:asio::detail::null_global_impl<T>	typeref:typename:null_global_impl<T>
instance_	asio/include/asio/detail/posix_global.hpp	/^  static posix_global_impl instance_;$/;"	m	struct:asio::detail::posix_global_impl	typeref:typename:posix_global_impl
instance_	asio/include/asio/detail/posix_global.hpp	/^posix_global_impl<T> posix_global_impl<T>::instance_;$/;"	m	class:asio::detail::posix_global_impl<T>	typeref:typename:posix_global_impl<T>
instance_	asio/include/asio/detail/std_global.hpp	/^  static std_global_impl instance_;$/;"	m	struct:asio::detail::std_global_impl	typeref:typename:std_global_impl
instance_	asio/include/asio/detail/std_global.hpp	/^std_global_impl<T> std_global_impl<T>::instance_;$/;"	m	class:asio::detail::std_global_impl<T>	typeref:typename:std_global_impl<T>
instance_	asio/include/asio/detail/win_global.hpp	/^  static win_global_impl instance_;$/;"	m	struct:asio::detail::win_global_impl	typeref:typename:win_global_impl
instance_	asio/include/asio/detail/win_global.hpp	/^win_global_impl<T> win_global_impl<T>::instance_ = { 0 };$/;"	m	class:asio::detail::win_global_impl<T>	typeref:typename:win_global_impl<T>
instance_	asio/include/asio/ssl/detail/openssl_init.hpp	/^  static openssl_init instance_;$/;"	m	class:asio::ssl::detail::openssl_init	typeref:typename:openssl_init
instance_	asio/include/asio/ssl/detail/openssl_init.hpp	/^openssl_init<Do_Init> openssl_init<Do_Init>::instance_;$/;"	m	class:asio::ssl::detail::openssl_init<Do_Init>	typeref:typename:openssl_init<Do_Init>
integer	asio/include/asio/detail/socket_option.hpp	/^  explicit integer(int v)$/;"	f	class:asio::detail::socket_option::integer
integer	asio/include/asio/detail/socket_option.hpp	/^  integer()$/;"	f	class:asio::detail::socket_option::integer
integer	asio/include/asio/detail/socket_option.hpp	/^class integer$/;"	c	namespace:asio::detail::socket_option
intermediate_completion_handler	asio/src/examples/cpp11/operations/composed_5.cpp	/^    struct intermediate_completion_handler$/;"	s	function:async_write_message_initiation::operator ()	file:
intermediate_completion_handler	asio/src/examples/cpp11/operations/composed_6.cpp	/^    struct intermediate_completion_handler$/;"	s	function:async_write_message_initiation::operator ()	file:
intermediate_completion_handler	asio/src/examples/cpp14/operations/composed_5.cpp	/^    struct intermediate_completion_handler$/;"	s	function:async_write_message::__anon32ec9f8e0102	file:
intermediate_completion_handler	asio/src/examples/cpp14/operations/composed_6.cpp	/^    struct intermediate_completion_handler$/;"	s	function:async_write_messages::__anon32feb80f0102	file:
internal_non_blocking	asio/include/asio/detail/descriptor_ops.hpp	/^  internal_non_blocking = 2,$/;"	e	enum:asio::detail::descriptor_ops::__anon0a8e43b60103
internal_non_blocking	asio/include/asio/detail/socket_ops.hpp	/^  internal_non_blocking = 2,$/;"	e	enum:asio::detail::socket_ops::__anonc4fdc2e00103
internal_server_error	asio/src/examples/cpp03/http/server/reply.cpp	/^const char internal_server_error[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
internal_server_error	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string internal_server_error =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
internal_server_error	asio/src/examples/cpp03/http/server/reply.hpp	/^    internal_server_error = 500,$/;"	e	enum:http::server::reply::status_type
internal_server_error	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char internal_server_error[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
internal_server_error	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string internal_server_error =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
internal_server_error	asio/src/examples/cpp03/http/server2/reply.hpp	/^    internal_server_error = 500,$/;"	e	enum:http::server2::reply::status_type
internal_server_error	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char internal_server_error[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
internal_server_error	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string internal_server_error =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
internal_server_error	asio/src/examples/cpp03/http/server3/reply.hpp	/^    internal_server_error = 500,$/;"	e	enum:http::server3::reply::status_type
internal_server_error	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char internal_server_error[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
internal_server_error	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string internal_server_error =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
internal_server_error	asio/src/examples/cpp03/http/server4/reply.hpp	/^    internal_server_error = 500,$/;"	e	enum:http::server4::reply::status_type
internal_server_error	asio/src/examples/cpp11/http/server/reply.cpp	/^const char internal_server_error[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
internal_server_error	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string internal_server_error =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
internal_server_error	asio/src/examples/cpp11/http/server/reply.hpp	/^    internal_server_error = 500,$/;"	e	enum:http::server::reply::status_type
interrupt	asio/include/asio/detail/null_reactor.hpp	/^  void interrupt()$/;"	f	class:asio::detail::null_reactor	typeref:typename:void
interrupted	asio/include/asio/error.hpp	/^  interrupted = ASIO_SOCKET_ERROR(EINTR),$/;"	e	enum:asio::error::basic_errors
interrupter_	asio/include/asio/detail/dev_poll_reactor.hpp	/^  select_interrupter interrupter_;$/;"	m	class:asio::detail::dev_poll_reactor	typeref:typename:select_interrupter
interrupter_	asio/include/asio/detail/epoll_reactor.hpp	/^  select_interrupter interrupter_;$/;"	m	class:asio::detail::epoll_reactor	typeref:typename:select_interrupter
interrupter_	asio/include/asio/detail/kqueue_reactor.hpp	/^  select_interrupter interrupter_;$/;"	m	class:asio::detail::kqueue_reactor	typeref:typename:select_interrupter
interrupter_	asio/include/asio/detail/select_reactor.hpp	/^  select_interrupter interrupter_;$/;"	m	class:asio::detail::select_reactor	typeref:typename:select_interrupter
invalid_argument	asio/include/asio/error.hpp	/^  invalid_argument = ASIO_SOCKET_ERROR(EINVAL),$/;"	e	enum:asio::error::basic_errors
invalid_const_a	asio/src/tests/unit/buffer.cpp	/^struct invalid_const_a$/;"	s	namespace:is_buffer_sequence	file:
invalid_const_b	asio/src/tests/unit/buffer.cpp	/^struct invalid_const_b$/;"	s	namespace:is_buffer_sequence	file:
invalid_const_c	asio/src/tests/unit/buffer.cpp	/^struct invalid_const_c$/;"	s	namespace:is_buffer_sequence	file:
invalid_const_d	asio/src/tests/unit/buffer.cpp	/^struct invalid_const_d$/;"	s	namespace:is_buffer_sequence	file:
invalid_const_e	asio/src/tests/unit/buffer.cpp	/^struct invalid_const_e$/;"	s	namespace:is_buffer_sequence	file:
invalid_const_f	asio/src/tests/unit/buffer.cpp	/^struct invalid_const_f$/;"	s	namespace:is_buffer_sequence	file:
invalid_mutable_a	asio/src/tests/unit/buffer.cpp	/^struct invalid_mutable_a$/;"	s	namespace:is_buffer_sequence	file:
invalid_mutable_b	asio/src/tests/unit/buffer.cpp	/^struct invalid_mutable_b$/;"	s	namespace:is_buffer_sequence	file:
invalid_mutable_c	asio/src/tests/unit/buffer.cpp	/^struct invalid_mutable_c$/;"	s	namespace:is_buffer_sequence	file:
invalid_mutable_d	asio/src/tests/unit/buffer.cpp	/^struct invalid_mutable_d$/;"	s	namespace:is_buffer_sequence	file:
invalid_mutable_e	asio/src/tests/unit/buffer.cpp	/^struct invalid_mutable_e$/;"	s	namespace:is_buffer_sequence	file:
invalid_mutable_f	asio/src/tests/unit/buffer.cpp	/^struct invalid_mutable_f$/;"	s	namespace:is_buffer_sequence	file:
invalid_service_owner	asio/include/asio/execution_context.hpp	/^class invalid_service_owner$/;"	c	namespace:asio
invocation_begin	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^    void invocation_begin(Args&&... \/*args*\/)$/;"	f	struct:custom_tracking::completion	typeref:typename:void
invocation_end	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^    void invocation_end()$/;"	f	struct:custom_tracking::completion	typeref:typename:void
invocation_prioritised_handlers_SOURCES	asio/src/examples/cpp03/Makefile.am	/^invocation_prioritised_handlers_SOURCES = invocation\/prioritised_handlers.cpp$/;"	m
invocation_prioritised_handlers_SOURCES	asio/src/examples/cpp11/Makefile.am	/^invocation_prioritised_handlers_SOURCES = invocation\/prioritised_handlers.cpp$/;"	m
invocations_	asio/include/asio/impl/compose.hpp	/^    unsigned invocations_;$/;"	m	class:asio::detail::composed_op	typeref:typename:unsigned
invoke	asio/include/asio/detail/handler_invoke_helpers.hpp	/^inline void invoke(Function& function, Context& context)$/;"	f	namespace:asio_handler_invoke_helpers	typeref:typename:void
invoke	asio/include/asio/detail/handler_invoke_helpers.hpp	/^inline void invoke(const Function& function, Context& context)$/;"	f	namespace:asio_handler_invoke_helpers	typeref:typename:void
invoker	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  invoker(const implementation_type& impl, Executor& ex)$/;"	f	class:asio::detail::strand_executor_service::invoker
invoker	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  invoker(const invoker& other)$/;"	f	class:asio::detail::strand_executor_service::invoker
invoker	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  invoker(invoker&& other)$/;"	f	class:asio::detail::strand_executor_service::invoker
invoker	asio/include/asio/detail/impl/strand_executor_service.hpp	/^class strand_executor_service::invoker$/;"	c	class:asio::detail::strand_executor_service
io	asio/include/asio/ssl/detail/io.hpp	/^std::size_t io(Stream& next_layer, stream_core& core,$/;"	f	namespace:asio::ssl::detail	typeref:typename:std::size_t
io_context	asio/include/asio/io_context.hpp	/^class io_context$/;"	c	namespace:asio
io_context	asio/src/tests/unit/is_read_buffered.cpp	/^  io_context_type& io_context()$/;"	f	class:test_stream	typeref:typename:io_context_type &	file:
io_context	asio/src/tests/unit/is_write_buffered.cpp	/^  io_context_type& io_context()$/;"	f	class:test_stream	typeref:typename:io_context_type &	file:
io_context_	asio/include/asio/detail/impl/strand_service.hpp	/^  io_context_impl* io_context_;$/;"	m	struct:asio::detail::strand_service::on_dispatch_exit	typeref:typename:io_context_impl *
io_context_	asio/include/asio/detail/strand_service.hpp	/^  io_context_impl& io_context_;$/;"	m	class:asio::detail::strand_service	typeref:typename:io_context_impl &
io_context_	asio/include/asio/io_context.hpp	/^  io_context& io_context_;$/;"	m	class:asio::io_context::executor_type	typeref:typename:io_context &
io_context_	asio/src/examples/cpp03/allocation/server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  asio::io_context& io_context_;$/;"	m	class:server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp03/chat/chat_client.cpp	/^  asio::io_context& io_context_;$/;"	m	class:chat_client	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp03/chat/chat_server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:chat_server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  asio::io_context& io_context_;$/;"	m	class:server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp03/http/server/server.hpp	/^  asio::io_context io_context_;$/;"	m	class:http::server::server	typeref:typename:asio::io_context
io_context_	asio/src/examples/cpp03/http/server3/server.hpp	/^  asio::io_context io_context_;$/;"	m	class:http::server3::server	typeref:typename:asio::io_context
io_context_	asio/src/examples/cpp03/local/stream_server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp03/ssl/server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp03/timeouts/blocking_tcp_client.cpp	/^  asio::io_context io_context_;$/;"	m	class:client	typeref:typename:asio::io_context	file:
io_context_	asio/src/examples/cpp03/timeouts/blocking_udp_client.cpp	/^  asio::io_context io_context_;$/;"	m	class:client	typeref:typename:asio::io_context	file:
io_context_	asio/src/examples/cpp03/timeouts/server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:tcp_server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:tcp_server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp11/chat/chat_client.cpp	/^  asio::io_context& io_context_;$/;"	m	class:chat_client	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^  asio::io_context& io_context_;$/;"	m	class:server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/examples/cpp11/http/server/server.hpp	/^  asio::io_context io_context_;$/;"	m	class:http::server::server	typeref:typename:asio::io_context
io_context_	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^  asio::io_context io_context_;$/;"	m	class:client	typeref:typename:asio::io_context	file:
io_context_	asio/src/examples/cpp11/timeouts/blocking_udp_client.cpp	/^  asio::io_context io_context_;$/;"	m	class:client	typeref:typename:asio::io_context	file:
io_context_	asio/src/examples/cpp11/timeouts/server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/tests/performance/client.cpp	/^  asio::io_context& io_context_;$/;"	m	class:client	typeref:typename:asio::io_context &	file:
io_context_	asio/src/tests/performance/server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:server	typeref:typename:asio::io_context &	file:
io_context_	asio/src/tests/performance/server.cpp	/^  asio::io_context& io_context_;$/;"	m	class:session	typeref:typename:asio::io_context &	file:
io_context_	asio/src/tests/unit/connect.cpp	/^  asio::io_context io_context_;$/;"	m	class:connection_sink	typeref:typename:asio::io_context	file:
io_context_	asio/src/tests/unit/is_read_buffered.cpp	/^  io_context_type& io_context_;$/;"	m	class:test_stream	typeref:typename:io_context_type &	file:
io_context_	asio/src/tests/unit/is_write_buffered.cpp	/^  io_context_type& io_context_;$/;"	m	class:test_stream	typeref:typename:io_context_type &	file:
io_context_	asio/src/tests/unit/read.cpp	/^  asio::io_context& io_context_;$/;"	m	class:test_stream	typeref:typename:asio::io_context &	file:
io_context_	asio/src/tests/unit/read_at.cpp	/^  asio::io_context& io_context_;$/;"	m	class:test_random_access_device	typeref:typename:asio::io_context &	file:
io_context_	asio/src/tests/unit/read_until.cpp	/^  asio::io_context& io_context_;$/;"	m	class:test_stream	typeref:typename:asio::io_context &	file:
io_context_	asio/src/tests/unit/write.cpp	/^  asio::io_context& io_context_;$/;"	m	class:test_stream	typeref:typename:asio::io_context &	file:
io_context_	asio/src/tests/unit/write_at.cpp	/^  asio::io_context& io_context_;$/;"	m	class:test_random_access_device	typeref:typename:asio::io_context &	file:
io_context_impl	asio/include/asio/io_context.hpp	/^  typedef class win_iocp_io_context io_context_impl;$/;"	t	namespace:asio::detail	typeref:class:win_iocp_io_context
io_context_impl_	asio/include/asio/io_context.hpp	/^  detail::io_context_impl& io_context_impl_;$/;"	m	class:asio::io_context::work	typeref:typename:detail::io_context_impl &
io_context_pool	asio/src/examples/cpp03/http/server2/io_context_pool.cpp	/^io_context_pool::io_context_pool(std::size_t pool_size)$/;"	f	class:http::server2::io_context_pool
io_context_pool	asio/src/examples/cpp03/http/server2/io_context_pool.hpp	/^class io_context_pool$/;"	c	namespace:http::server2
io_context_pool_	asio/src/examples/cpp03/http/server2/server.hpp	/^  io_context_pool io_context_pool_;$/;"	m	class:http::server2::server	typeref:typename:io_context_pool
io_context_ptr	asio/src/examples/cpp03/http/server2/io_context_pool.hpp	/^  typedef boost::shared_ptr<asio::io_context> io_context_ptr;$/;"	t	class:http::server2::io_context_pool	typeref:typename:boost::shared_ptr<asio::io_context>
io_context_run	asio/src/tests/unit/deadline_timer.cpp	/^void io_context_run(asio::io_context* ioc)$/;"	f	typeref:typename:void
io_context_run	asio/src/tests/unit/io_context.cpp	/^void io_context_run(io_context* ioc)$/;"	f	typeref:typename:void
io_context_run	asio/src/tests/unit/io_context_strand.cpp	/^void io_context_run(io_context* ioc)$/;"	f	typeref:typename:void
io_context_run	asio/src/tests/unit/strand.cpp	/^void io_context_run(io_context* ioc)$/;"	f	typeref:typename:void
io_context_run	asio/src/tests/unit/system_timer.cpp	/^void io_context_run(asio::io_context* ioc)$/;"	f	typeref:typename:void
io_context_service_test	asio/src/tests/unit/io_context.cpp	/^void io_context_service_test()$/;"	f	typeref:typename:void
io_context_test	asio/src/tests/unit/io_context.cpp	/^void io_context_test()$/;"	f	typeref:typename:void
io_context_type	asio/src/tests/unit/is_read_buffered.cpp	/^  typedef asio::io_context io_context_type;$/;"	t	class:test_stream	typeref:typename:asio::io_context	file:
io_context_type	asio/src/tests/unit/is_write_buffered.cpp	/^  typedef asio::io_context io_context_type;$/;"	t	class:test_stream	typeref:typename:asio::io_context	file:
io_context_work	asio/src/examples/cpp03/http/server2/io_context_pool.hpp	/^    asio::io_context::executor_type> io_context_work;$/;"	t	class:http::server2::io_context_pool	typeref:typename:asio::executor_work_guard<asio::io_context::executor_type>
io_contexts_	asio/src/examples/cpp03/http/server2/io_context_pool.hpp	/^  std::vector<io_context_ptr> io_contexts_;$/;"	m	class:http::server2::io_context_pool	typeref:typename:std::vector<io_context_ptr>
io_control	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID io_control(IoControlCommand& command,$/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
io_control	asio/include/asio/basic_socket.hpp	/^  void io_control(IoControlCommand& command)$/;"	f	class:asio::basic_socket	typeref:typename:void
io_control	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID io_control(IoControlCommand& command,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
io_control	asio/include/asio/basic_socket_acceptor.hpp	/^  void io_control(IoControlCommand& command)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
io_control	asio/include/asio/detail/io_control.hpp	/^namespace io_control {$/;"	n	namespace:asio::detail
io_control	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code io_control(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
io_control	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  asio::error_code io_control(implementation_type& impl,$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:asio::error_code
io_control	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  asio::error_code io_control(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:asio::error_code
io_control	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  asio::error_code io_control(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:asio::error_code
io_control	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  asio::error_code io_control(base_implementation_type&,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:asio::error_code
io_control	asio/include/asio/posix/basic_descriptor.hpp	/^  ASIO_SYNC_OP_VOID io_control(IoControlCommand& command,$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:ASIO_SYNC_OP_VOID
io_control	asio/include/asio/posix/basic_descriptor.hpp	/^  void io_control(IoControlCommand& command)$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:void
io_control_command	asio/src/tests/unit/archetypes/io_control_command.hpp	/^class io_control_command$/;"	c	namespace:archetypes
io_executor_	asio/include/asio/detail/descriptor_read_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::descriptor_read_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/descriptor_write_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::descriptor_write_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/handler_work.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::handler_work	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/reactive_null_buffers_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::reactive_null_buffers_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::reactive_socket_accept_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::reactive_socket_move_accept_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::reactive_socket_connect_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::reactive_socket_recv_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::reactive_socket_recvfrom_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::reactive_socket_recvmsg_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/reactive_socket_send_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::reactive_socket_send_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::reactive_socket_sendto_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/reactive_wait_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::reactive_wait_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::resolve_endpoint_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/resolve_query_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::resolve_query_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/signal_handler.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::signal_handler	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/wait_handler.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::wait_handler	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_handle_read_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_handle_read_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_handle_write_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_handle_write_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_null_buffers_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_null_buffers_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_overlapped_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_overlapped_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_socket_connect_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_socket_recv_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_socket_recvfrom_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_socket_recvmsg_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_socket_send_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_socket_send_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/win_iocp_wait_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::win_iocp_wait_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/winrt_resolve_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::winrt_resolve_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/winrt_socket_connect_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::winrt_socket_connect_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/winrt_socket_recv_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::winrt_socket_recv_op	typeref:typename:IoExecutor
io_executor_	asio/include/asio/detail/winrt_socket_send_op.hpp	/^  IoExecutor io_executor_;$/;"	m	class:asio::detail::winrt_socket_send_op	typeref:typename:IoExecutor
io_object_executor	asio/include/asio/detail/io_object_executor.hpp	/^  io_object_executor($/;"	f	class:asio::detail::io_object_executor
io_object_executor	asio/include/asio/detail/io_object_executor.hpp	/^  io_object_executor(const Executor& ex,$/;"	f	class:asio::detail::io_object_executor
io_object_executor	asio/include/asio/detail/io_object_executor.hpp	/^  io_object_executor(const io_object_executor& other) ASIO_NOEXCEPT$/;"	f	class:asio::detail::io_object_executor
io_object_executor	asio/include/asio/detail/io_object_executor.hpp	/^  io_object_executor(io_object_executor&& other) ASIO_NOEXCEPT$/;"	f	class:asio::detail::io_object_executor
io_object_executor	asio/include/asio/detail/io_object_executor.hpp	/^class io_object_executor$/;"	c	namespace:asio::detail
io_object_impl	asio/include/asio/detail/io_object_impl.hpp	/^  explicit io_object_impl(ExecutionContext& context,$/;"	f	class:asio::detail::io_object_impl
io_object_impl	asio/include/asio/detail/io_object_impl.hpp	/^  explicit io_object_impl(const executor_type& ex)$/;"	f	class:asio::detail::io_object_impl
io_object_impl	asio/include/asio/detail/io_object_impl.hpp	/^  io_object_impl(io_object_impl&& other)$/;"	f	class:asio::detail::io_object_impl
io_object_impl	asio/include/asio/detail/io_object_impl.hpp	/^  io_object_impl(io_object_impl<IoObjectService1, Executor1>&& other)$/;"	f	class:asio::detail::io_object_impl
io_object_impl	asio/include/asio/detail/io_object_impl.hpp	/^class io_object_impl$/;"	c	namespace:asio::detail
io_op	asio/include/asio/ssl/detail/io.hpp	/^  io_op(Stream& next_layer, stream_core& core,$/;"	f	class:asio::ssl::detail::io_op
io_op	asio/include/asio/ssl/detail/io.hpp	/^  io_op(const io_op& other)$/;"	f	class:asio::ssl::detail::io_op
io_op	asio/include/asio/ssl/detail/io.hpp	/^  io_op(io_op&& other)$/;"	f	class:asio::ssl::detail::io_op
io_op	asio/include/asio/ssl/detail/io.hpp	/^class io_op$/;"	c	namespace:asio::ssl::detail
io_service	asio/include/asio/io_service.hpp	/^typedef io_context io_service;$/;"	t	namespace:asio	typeref:typename:io_context
io_work_	asio/src/examples/cpp11/operations/composed_6.cpp	/^      asio::executor_work_guard<tcp::socket::executor_type> io_work_;$/;"	m	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:asio::executor_work_guard<tcp::socket::executor_type>	file:
io_work_	asio/src/examples/cpp14/operations/composed_6.cpp	/^      asio::executor_work_guard<tcp::socket::executor_type> io_work_;$/;"	m	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	typeref:typename:asio::executor_work_guard<tcp::socket::executor_type>	file:
ioc_	asio/src/tests/unit/compose.cpp	/^  asio::io_context& ioc_;$/;"	m	class:impl_0_completion_args	typeref:typename:asio::io_context &	file:
ioc_	asio/src/tests/unit/compose.cpp	/^  asio::io_context& ioc_;$/;"	m	class:impl_1_completion_arg	typeref:typename:asio::io_context &	file:
iocp_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  auto_handle iocp_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:auto_handle
iocp_service_	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  win_iocp_io_context& iocp_service_;$/;"	m	class:asio::detail::win_iocp_handle_service	typeref:typename:win_iocp_io_context &
iocp_service_	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  win_iocp_io_context* iocp_service_;$/;"	m	class:asio::detail::win_iocp_overlapped_ptr	typeref:typename:win_iocp_io_context *
iocp_service_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  win_iocp_io_context& iocp_service_;$/;"	m	class:asio::detail::win_iocp_socket_service_base	typeref:typename:win_iocp_io_context &
ioctl_arg_type	asio/include/asio/detail/socket_types.hpp	/^typedef u_long_type ioctl_arg_type;$/;"	t	namespace:asio::detail	typeref:typename:u_long_type
iostream	asio/include/asio/generic/stream_protocol.hpp	/^  typedef basic_socket_iostream<stream_protocol> iostream;$/;"	t	class:asio::generic::stream_protocol	typeref:typename:basic_socket_iostream<stream_protocol>
iostream	asio/include/asio/ip/tcp.hpp	/^  typedef basic_socket_iostream<tcp> iostream;$/;"	t	class:asio::ip::tcp	typeref:typename:basic_socket_iostream<tcp>
iostream	asio/include/asio/local/stream_protocol.hpp	/^  typedef basic_socket_iostream<stream_protocol> iostream;$/;"	t	class:asio::local::stream_protocol	typeref:typename:basic_socket_iostream<stream_protocol>
iostreams_daytime_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^iostreams_daytime_client_SOURCES = iostreams\/daytime_client.cpp$/;"	m
iostreams_daytime_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^iostreams_daytime_server_SOURCES = iostreams\/daytime_server.cpp$/;"	m
iostreams_http_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^iostreams_http_client_SOURCES = iostreams\/http_client.cpp$/;"	m
iostreams_http_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^iostreams_http_client_SOURCES = iostreams\/http_client.cpp$/;"	m
iostreams_http_client_SOURCES	asio/src/examples/cpp14/Makefile.am	/^iostreams_http_client_SOURCES = iostreams\/http_client.cpp$/;"	m
ip	asio/include/asio/ip/address.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/address_v4.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/address_v4_iterator.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/address_v4_range.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/address_v6.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/address_v6_iterator.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/address_v6_range.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/bad_address_cast.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/basic_endpoint.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/basic_resolver.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/basic_resolver_entry.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/basic_resolver_iterator.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/basic_resolver_query.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/basic_resolver_results.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/detail/endpoint.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/detail/socket_option.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/host_name.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/icmp.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/impl/address.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/impl/address_v4.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/impl/address_v6.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/impl/basic_endpoint.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/impl/network_v4.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/impl/network_v6.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/multicast.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/network_v4.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/network_v6.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/resolver_base.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/resolver_query_base.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/tcp.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/udp.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/unicast.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ip/v6_only.hpp	/^namespace ip {$/;"	n	namespace:asio
ip	asio/include/asio/ts/netfwd.hpp	/^namespace ip {$/;"	n	namespace:asio
ip_address_compile	asio/src/tests/unit/ip/address.cpp	/^namespace ip_address_compile {$/;"	n	file:
ip_address_v4_compile	asio/src/tests/unit/ip/address_v4.cpp	/^namespace ip_address_v4_compile {$/;"	n	file:
ip_address_v4_runtime	asio/src/tests/unit/ip/address_v4.cpp	/^namespace ip_address_v4_runtime {$/;"	n	file:
ip_address_v6_compile	asio/src/tests/unit/ip/address_v6.cpp	/^namespace ip_address_v6_compile {$/;"	n	file:
ip_address_v6_runtime	asio/src/tests/unit/ip/address_v6.cpp	/^namespace ip_address_v6_runtime {$/;"	n	file:
ip_host_name_compile	asio/src/tests/unit/ip/host_name.cpp	/^namespace ip_host_name_compile {$/;"	n	file:
ip_icmp_resolver_compile	asio/src/tests/unit/ip/icmp.cpp	/^namespace ip_icmp_resolver_compile {$/;"	n	file:
ip_icmp_socket_compile	asio/src/tests/unit/ip/icmp.cpp	/^namespace ip_icmp_socket_compile {$/;"	n	file:
ip_multicast_compile	asio/src/tests/unit/ip/multicast.cpp	/^namespace ip_multicast_compile {$/;"	n	file:
ip_multicast_runtime	asio/src/tests/unit/ip/multicast.cpp	/^namespace ip_multicast_runtime {$/;"	n	file:
ip_network_v4_compile	asio/src/tests/unit/ip/network_v4.cpp	/^namespace ip_network_v4_compile {$/;"	n	file:
ip_network_v4_runtime	asio/src/tests/unit/ip/network_v4.cpp	/^namespace ip_network_v4_runtime {$/;"	n	file:
ip_network_v6_compile	asio/src/tests/unit/ip/network_v6.cpp	/^namespace ip_network_v6_compile {$/;"	n	file:
ip_network_v6_runtime	asio/src/tests/unit/ip/network_v6.cpp	/^namespace ip_network_v6_runtime {$/;"	n	file:
ip_tcp_acceptor_compile	asio/src/tests/unit/ip/tcp.cpp	/^namespace ip_tcp_acceptor_compile {$/;"	n	file:
ip_tcp_acceptor_runtime	asio/src/tests/unit/ip/tcp.cpp	/^namespace ip_tcp_acceptor_runtime {$/;"	n	file:
ip_tcp_compile	asio/src/tests/unit/ip/tcp.cpp	/^namespace ip_tcp_compile {$/;"	n	file:
ip_tcp_iostream_compile	asio/src/tests/unit/ip/tcp.cpp	/^namespace ip_tcp_iostream_compile {$/;"	n	file:
ip_tcp_resolver_compile	asio/src/tests/unit/ip/tcp.cpp	/^namespace ip_tcp_resolver_compile {$/;"	n	file:
ip_tcp_resolver_entry_compile	asio/src/tests/unit/ip/tcp.cpp	/^namespace ip_tcp_resolver_entry_compile {$/;"	n	file:
ip_tcp_runtime	asio/src/tests/unit/ip/tcp.cpp	/^namespace ip_tcp_runtime {$/;"	n	file:
ip_tcp_socket_compile	asio/src/tests/unit/ip/tcp.cpp	/^namespace ip_tcp_socket_compile {$/;"	n	file:
ip_tcp_socket_runtime	asio/src/tests/unit/ip/tcp.cpp	/^namespace ip_tcp_socket_runtime {$/;"	n	file:
ip_udp_resolver_compile	asio/src/tests/unit/ip/udp.cpp	/^namespace ip_udp_resolver_compile {$/;"	n	file:
ip_udp_socket_compile	asio/src/tests/unit/ip/udp.cpp	/^namespace ip_udp_socket_compile {$/;"	n	file:
ip_udp_socket_runtime	asio/src/tests/unit/ip/udp.cpp	/^namespace ip_udp_socket_runtime {$/;"	n	file:
ip_unicast_compile	asio/src/tests/unit/ip/unicast.cpp	/^namespace ip_unicast_compile {$/;"	n	file:
ip_unicast_runtime	asio/src/tests/unit/ip/unicast.cpp	/^namespace ip_unicast_runtime {$/;"	n	file:
ip_v6_only_compile	asio/src/tests/unit/ip/v6_only.cpp	/^namespace ip_v6_only_compile {$/;"	n	file:
ip_v6_only_runtime	asio/src/tests/unit/ip/v6_only.cpp	/^namespace ip_v6_only_runtime {$/;"	n	file:
ipv4	asio/include/asio/ip/address.hpp	/^  enum { ipv4, ipv6 } type_;$/;"	e	enum:asio::ip::address::__anonb5f433120103
ipv4_address_	asio/include/asio/ip/address.hpp	/^  asio::ip::address_v4 ipv4_address_;$/;"	m	class:asio::ip::address	typeref:typename:asio::ip::address_v4
ipv4_header	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  ipv4_header() { std::fill(rep_, rep_ + sizeof(rep_), 0); }$/;"	f	class:ipv4_header
ipv4_header	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^class ipv4_header$/;"	c
ipv4_value_	asio/include/asio/ip/detail/socket_option.hpp	/^  asio::detail::in4_addr_type ipv4_value_;$/;"	m	class:asio::ip::detail::socket_option::network_interface	typeref:typename:asio::detail::in4_addr_type
ipv4_value_	asio/include/asio/ip/detail/socket_option.hpp	/^  asio::detail::in4_mreq_type ipv4_value_;$/;"	m	class:asio::ip::detail::socket_option::multicast_request	typeref:typename:asio::detail::in4_mreq_type
ipv4_value_	asio/include/asio/ip/detail/socket_option.hpp	/^  ipv4_value_type ipv4_value_;$/;"	m	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:ipv4_value_type
ipv4_value_	asio/include/asio/ip/detail/socket_option.hpp	/^  ipv4_value_type ipv4_value_;$/;"	m	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:ipv4_value_type
ipv4_value_type	asio/include/asio/ip/detail/socket_option.hpp	/^  typedef int ipv4_value_type;$/;"	t	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:int
ipv4_value_type	asio/include/asio/ip/detail/socket_option.hpp	/^  typedef unsigned char ipv4_value_type;$/;"	t	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:unsigned char
ipv6	asio/include/asio/ip/address.hpp	/^  enum { ipv4, ipv6 } type_;$/;"	e	enum:asio::ip::address::__anonb5f433120103
ipv6_address_	asio/include/asio/ip/address.hpp	/^  asio::ip::address_v6 ipv6_address_;$/;"	m	class:asio::ip::address	typeref:typename:asio::ip::address_v6
ipv6_mreq_emulation	asio/include/asio/detail/old_win_sdk_compat.hpp	/^struct ipv6_mreq_emulation$/;"	s	namespace:asio::detail
ipv6_value_	asio/include/asio/ip/detail/socket_option.hpp	/^  asio::detail::in6_mreq_type ipv6_value_;$/;"	m	class:asio::ip::detail::socket_option::multicast_request	typeref:typename:asio::detail::in6_mreq_type
ipv6_value_	asio/include/asio/ip/detail/socket_option.hpp	/^  ipv6_value_type ipv6_value_;$/;"	m	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:ipv6_value_type
ipv6_value_	asio/include/asio/ip/detail/socket_option.hpp	/^  ipv6_value_type ipv6_value_;$/;"	m	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:ipv6_value_type
ipv6_value_	asio/include/asio/ip/detail/socket_option.hpp	/^  unsigned int ipv6_value_;$/;"	m	class:asio::ip::detail::socket_option::network_interface	typeref:typename:unsigned int
ipv6_value_type	asio/include/asio/ip/detail/socket_option.hpp	/^  typedef int ipv6_value_type;$/;"	t	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:int
ipv6_value_type	asio/include/asio/ip/detail/socket_option.hpp	/^  typedef unsigned char ipv6_value_type;$/;"	t	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:unsigned char
ipv6mr_interface	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  unsigned int ipv6mr_interface;$/;"	m	struct:asio::detail::ipv6_mreq_emulation	typeref:typename:unsigned int
ipv6mr_interface	asio/include/asio/detail/socket_types.hpp	/^  unsigned long ipv6mr_interface; };$/;"	m	struct:asio::detail::in6_mreq_type	typeref:typename:unsigned long
ipv6mr_multiaddr	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  in6_addr_emulation ipv6mr_multiaddr;$/;"	m	struct:asio::detail::ipv6_mreq_emulation	typeref:typename:in6_addr_emulation
ipv6mr_multiaddr	asio/include/asio/detail/socket_types.hpp	/^struct in6_mreq_type { in6_addr_type ipv6mr_multiaddr;$/;"	m	struct:asio::detail::in6_mreq_type	typeref:typename:in6_addr_type
is_buffer_sequence	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct is_buffer_sequence$/;"	s	namespace:asio::detail
is_buffer_sequence	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct is_buffer_sequence<const_buffer, const_buffer>$/;"	s	namespace:asio::detail
is_buffer_sequence	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct is_buffer_sequence<const_buffer, mutable_buffer>$/;"	s	namespace:asio::detail
is_buffer_sequence	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct is_buffer_sequence<mutable_buffer, const_buffer>$/;"	s	namespace:asio::detail
is_buffer_sequence	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct is_buffer_sequence<mutable_buffer, mutable_buffer>$/;"	s	namespace:asio::detail
is_buffer_sequence	asio/src/tests/unit/buffer.cpp	/^namespace is_buffer_sequence {$/;"	n	file:
is_buffer_sequence_class	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct is_buffer_sequence_class$/;"	s	namespace:asio::detail
is_char	asio/src/examples/cpp03/http/server/request_parser.cpp	/^bool request_parser::is_char(int c)$/;"	f	class:http::server::request_parser	typeref:typename:bool
is_char	asio/src/examples/cpp03/http/server2/request_parser.cpp	/^bool request_parser::is_char(int c)$/;"	f	class:http::server2::request_parser	typeref:typename:bool
is_char	asio/src/examples/cpp03/http/server3/request_parser.cpp	/^bool request_parser::is_char(int c)$/;"	f	class:http::server3::request_parser	typeref:typename:bool
is_char	asio/src/examples/cpp03/http/server4/request_parser.cpp	/^bool request_parser::is_char(int c)$/;"	f	class:http::server4::request_parser	typeref:typename:bool
is_char	asio/src/examples/cpp11/http/server/request_parser.cpp	/^bool request_parser::is_char(int c)$/;"	f	class:http::server::request_parser	typeref:typename:bool
is_child	asio/include/asio/coroutine.hpp	/^  bool is_child() const { return value_ < 0; }$/;"	f	class:asio::coroutine	typeref:typename:bool
is_complete	asio/include/asio/coroutine.hpp	/^  bool is_complete() const { return value_ == -1; }$/;"	f	class:asio::coroutine	typeref:typename:bool
is_completion_handler_for	asio/include/asio/async_result.hpp	/^struct is_completion_handler_for : false_type$/;"	s	namespace:asio::detail
is_completion_handler_for	asio/include/asio/async_result.hpp	/^struct is_completion_handler_for<T, R(Args...)>$/;"	s	namespace:asio::detail
is_completion_signature	asio/include/asio/async_result.hpp	/^struct is_completion_signature : false_type$/;"	s	namespace:asio::detail
is_completion_signature	asio/include/asio/async_result.hpp	/^struct is_completion_signature<R(Args...)> : true_type$/;"	s	namespace:asio::detail
is_const_buffer_sequence	asio/include/asio/buffer.hpp	/^struct is_const_buffer_sequence$/;"	s	namespace:asio
is_continuation	asio/include/asio/detail/handler_cont_helpers.hpp	/^inline bool is_continuation(Context& context)$/;"	f	namespace:asio_handler_cont_helpers	typeref:typename:bool
is_continuation_delegated	asio/include/asio/detail/wrapped_handler.hpp	/^struct is_continuation_delegated$/;"	s	namespace:asio::detail
is_continuation_if_running	asio/include/asio/detail/wrapped_handler.hpp	/^struct is_continuation_if_running$/;"	s	namespace:asio::detail
is_ctl	asio/src/examples/cpp03/http/server/request_parser.cpp	/^bool request_parser::is_ctl(int c)$/;"	f	class:http::server::request_parser	typeref:typename:bool
is_ctl	asio/src/examples/cpp03/http/server2/request_parser.cpp	/^bool request_parser::is_ctl(int c)$/;"	f	class:http::server2::request_parser	typeref:typename:bool
is_ctl	asio/src/examples/cpp03/http/server3/request_parser.cpp	/^bool request_parser::is_ctl(int c)$/;"	f	class:http::server3::request_parser	typeref:typename:bool
is_ctl	asio/src/examples/cpp03/http/server4/request_parser.cpp	/^bool request_parser::is_ctl(int c)$/;"	f	class:http::server4::request_parser	typeref:typename:bool
is_ctl	asio/src/examples/cpp11/http/server/request_parser.cpp	/^bool request_parser::is_ctl(int c)$/;"	f	class:http::server::request_parser	typeref:typename:bool
is_digit	asio/src/examples/cpp03/http/server/request_parser.cpp	/^bool request_parser::is_digit(int c)$/;"	f	class:http::server::request_parser	typeref:typename:bool
is_digit	asio/src/examples/cpp03/http/server2/request_parser.cpp	/^bool request_parser::is_digit(int c)$/;"	f	class:http::server2::request_parser	typeref:typename:bool
is_digit	asio/src/examples/cpp03/http/server3/request_parser.cpp	/^bool request_parser::is_digit(int c)$/;"	f	class:http::server3::request_parser	typeref:typename:bool
is_digit	asio/src/examples/cpp03/http/server4/request_parser.cpp	/^bool request_parser::is_digit(int c)$/;"	f	class:http::server4::request_parser	typeref:typename:bool
is_digit	asio/src/examples/cpp11/http/server/request_parser.cpp	/^bool request_parser::is_digit(int c)$/;"	f	class:http::server::request_parser	typeref:typename:bool
is_dynamic_buffer	asio/include/asio/buffer.hpp	/^struct is_dynamic_buffer$/;"	s	namespace:asio
is_dynamic_buffer_class_v1	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct is_dynamic_buffer_class_v1$/;"	s	namespace:asio::detail
is_dynamic_buffer_class_v2	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct is_dynamic_buffer_class_v2$/;"	s	namespace:asio::detail
is_dynamic_buffer_v1	asio/include/asio/buffer.hpp	/^struct is_dynamic_buffer_v1$/;"	s	namespace:asio
is_dynamic_buffer_v1	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct is_dynamic_buffer_v1$/;"	s	namespace:asio::detail
is_dynamic_buffer_v2	asio/include/asio/buffer.hpp	/^struct is_dynamic_buffer_v2$/;"	s	namespace:asio
is_dynamic_buffer_v2	asio/include/asio/detail/is_buffer_sequence.hpp	/^struct is_dynamic_buffer_v2$/;"	s	namespace:asio::detail
is_endpoint_sequence	asio/include/asio/connect.hpp	/^struct is_endpoint_sequence$/;"	s	namespace:asio
is_enqueued	asio/include/asio/detail/op_queue.hpp	/^  bool is_enqueued(Operation* o) const$/;"	f	class:asio::detail::op_queue	typeref:typename:bool
is_error_code_enum	asio/include/asio/error.hpp	/^template<> struct is_error_code_enum<asio::error::addrinfo_errors>$/;"	s	namespace:std
is_error_code_enum	asio/include/asio/error.hpp	/^template<> struct is_error_code_enum<asio::error::basic_errors>$/;"	s	namespace:std
is_error_code_enum	asio/include/asio/error.hpp	/^template<> struct is_error_code_enum<asio::error::misc_errors>$/;"	s	namespace:std
is_error_code_enum	asio/include/asio/error.hpp	/^template<> struct is_error_code_enum<asio::error::netdb_errors>$/;"	s	namespace:std
is_error_code_enum	asio/include/asio/ssl/error.hpp	/^template<> struct is_error_code_enum<asio::error::ssl_errors>$/;"	s	namespace:std
is_error_code_enum	asio/include/asio/ssl/error.hpp	/^template<> struct is_error_code_enum<asio::ssl::error::stream_errors>$/;"	s	namespace:std
is_executor	asio/include/asio/detail/is_executor.hpp	/^struct is_executor$/;"	s	namespace:asio::detail
is_executor	asio/include/asio/is_executor.hpp	/^struct is_executor$/;"	s	namespace:asio
is_executor_class	asio/include/asio/detail/is_executor.hpp	/^struct is_executor_class$/;"	s	namespace:asio::detail
is_function	asio/src/examples/cpp11/executors/actor.cpp	/^  bool is_function(void (Actor::* mf)(Message, actor_address)) const$/;"	f	class:mf_message_handler	typeref:typename:bool	file:
is_function	asio/src/examples/cpp14/executors/actor.cpp	/^  bool is_function(void (Actor::* mf)(Message, actor_address)) const$/;"	f	class:mf_message_handler	typeref:typename:bool	file:
is_host	asio/include/asio/ip/network_v4.hpp	/^  bool is_host() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4	typeref:typename:bool
is_host	asio/include/asio/ip/network_v6.hpp	/^  bool is_host() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v6	typeref:typename:bool
is_legacy_connect_condition	asio/include/asio/impl/connect.hpp	/^  struct is_legacy_connect_condition$/;"	s	namespace:asio::detail
is_match_condition	asio/include/asio/read_until.hpp	/^struct is_match_condition$/;"	s	namespace:asio
is_match_condition	asio/src/tests/unit/read_until.cpp	/^  template <> struct is_match_condition<match_char>$/;"	s	namespace:asio	file:
is_mutable	asio/include/asio/buffers_iterator.hpp	/^      is_mutable = is_convertible<$/;"	e	enum:asio::detail::buffers_iterator_types::__anon4c1f04ba0103
is_mutable_buffer_sequence	asio/include/asio/buffer.hpp	/^struct is_mutable_buffer_sequence$/;"	s	namespace:asio
is_native_io_executor	asio/include/asio/detail/io_object_impl.hpp	/^inline bool is_native_io_executor(const Executor& ex,$/;"	f	namespace:asio::detail	typeref:typename:bool
is_native_io_executor	asio/include/asio/detail/io_object_impl.hpp	/^inline bool is_native_io_executor(const io_context::executor_type&)$/;"	f	namespace:asio::detail	typeref:typename:bool
is_open	asio/include/asio/basic_serial_port.hpp	/^  bool is_open() const$/;"	f	class:asio::basic_serial_port	typeref:typename:bool
is_open	asio/include/asio/basic_socket.hpp	/^  bool is_open() const$/;"	f	class:asio::basic_socket	typeref:typename:bool
is_open	asio/include/asio/basic_socket_acceptor.hpp	/^  bool is_open() const$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:bool
is_open	asio/include/asio/detail/null_socket_service.hpp	/^  bool is_open(const implementation_type&) const$/;"	f	class:asio::detail::null_socket_service	typeref:typename:bool
is_open	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  bool is_open(const implementation_type& impl) const$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:bool
is_open	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  bool is_open(const implementation_type& impl) const$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:bool
is_open	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  bool is_open(const base_implementation_type& impl) const$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:bool
is_open	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  bool is_open(const implementation_type& impl) const$/;"	f	class:asio::detail::win_iocp_handle_service	typeref:typename:bool
is_open	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  bool is_open(const implementation_type& impl) const$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:bool
is_open	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  bool is_open(const base_implementation_type& impl) const$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:bool
is_open	asio/include/asio/detail/win_object_handle_service.hpp	/^  bool is_open(const implementation_type& impl) const$/;"	f	class:asio::detail::win_object_handle_service	typeref:typename:bool
is_open	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  bool is_open(const base_implementation_type& impl) const$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:bool
is_open	asio/include/asio/posix/basic_descriptor.hpp	/^  bool is_open() const$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:bool
is_open	asio/include/asio/windows/basic_object_handle.hpp	/^  bool is_open() const$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:bool
is_open	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  bool is_open() const$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:bool
is_parent	asio/include/asio/coroutine.hpp	/^  bool is_parent() const { return !is_child(); }$/;"	f	class:asio::coroutine	typeref:typename:bool
is_positive_infinity	asio/include/asio/detail/timer_queue.hpp	/^  static bool is_positive_infinity($/;"	f	class:asio::detail::timer_queue	typeref:typename:bool
is_positive_infinity	asio/include/asio/detail/timer_queue.hpp	/^  static bool is_positive_infinity(const Time_Type&)$/;"	f	class:asio::detail::timer_queue	typeref:typename:bool
is_read_buffered	asio/include/asio/is_read_buffered.hpp	/^class is_read_buffered$/;"	c	namespace:asio
is_read_buffered_big_type	asio/include/asio/is_read_buffered.hpp	/^struct is_read_buffered_big_type { char data[10]; };$/;"	s	namespace:asio::detail
is_read_buffered_test	asio/src/tests/unit/is_read_buffered.cpp	/^void is_read_buffered_test()$/;"	f	typeref:typename:void
is_set	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^  bool is_set(socket_type descriptor) const$/;"	f	class:asio::detail::posix_fd_set_adapter	typeref:typename:bool
is_set	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  bool is_set(socket_type descriptor) const$/;"	f	class:asio::detail::win_fd_set_adapter	typeref:typename:bool
is_steady	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^  static const bool is_steady = false;$/;"	m	struct:time_t_clock	typeref:typename:const bool	file:
is_steady	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^  static constexpr bool is_steady = false;$/;"	m	struct:time_t_clock	typeref:typename:bool	file:
is_tspecial	asio/src/examples/cpp03/http/server/request_parser.cpp	/^bool request_parser::is_tspecial(int c)$/;"	f	class:http::server::request_parser	typeref:typename:bool
is_tspecial	asio/src/examples/cpp03/http/server2/request_parser.cpp	/^bool request_parser::is_tspecial(int c)$/;"	f	class:http::server2::request_parser	typeref:typename:bool
is_tspecial	asio/src/examples/cpp03/http/server3/request_parser.cpp	/^bool request_parser::is_tspecial(int c)$/;"	f	class:http::server3::request_parser	typeref:typename:bool
is_tspecial	asio/src/examples/cpp03/http/server4/request_parser.cpp	/^bool request_parser::is_tspecial(int c)$/;"	f	class:http::server4::request_parser	typeref:typename:bool
is_tspecial	asio/src/examples/cpp11/http/server/request_parser.cpp	/^bool request_parser::is_tspecial(int c)$/;"	f	class:http::server::request_parser	typeref:typename:bool
is_v4	asio/include/asio/ip/address.hpp	/^  bool is_v4() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::address	typeref:typename:bool
is_v4	asio/include/asio/ip/detail/endpoint.hpp	/^  bool is_v4() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::detail::endpoint	typeref:typename:bool
is_v6	asio/include/asio/ip/address.hpp	/^  bool is_v6() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::address	typeref:typename:bool
is_write_buffered	asio/include/asio/is_write_buffered.hpp	/^class is_write_buffered$/;"	c	namespace:asio
is_write_buffered_big_type	asio/include/asio/is_write_buffered.hpp	/^struct is_write_buffered_big_type { char data[10]; };$/;"	s	namespace:asio::detail
is_write_buffered_test	asio/src/tests/unit/is_write_buffered.cpp	/^void is_write_buffered_test()$/;"	f	typeref:typename:void
item	asio/include/asio/detail/thread_group.hpp	/^    explicit item(Function f, item* next)$/;"	f	struct:asio::detail::thread_group::item
item	asio/include/asio/detail/thread_group.hpp	/^  struct item$/;"	s	class:asio::detail::thread_group
item	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    item(int pri, Func f) : function_(std::move(f))$/;"	f	struct:priority_scheduler::item	file:
item	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  struct item : item_base$/;"	s	class:priority_scheduler	file:
item	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    item(int pri, Func f) : function_(std::move(f))$/;"	f	struct:priority_scheduler::item	file:
item	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  struct item : item_base$/;"	s	class:priority_scheduler	file:
item_base	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  struct item_base$/;"	s	class:priority_scheduler	file:
item_base	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  struct item_base$/;"	s	class:priority_scheduler	file:
item_comp	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  struct item_comp$/;"	s	class:priority_scheduler	file:
item_comp	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  struct item_comp$/;"	s	class:priority_scheduler	file:
iter_	asio/include/asio/buffer.hpp	/^  Iterator iter_;$/;"	m	class:asio::detail::buffer_debug_check	typeref:typename:Iterator
iter_	asio/include/asio/impl/connect.hpp	/^    Iterator iter_;$/;"	m	class:asio::detail::iterator_connect_op	typeref:typename:Iterator
iter_handler	asio/src/tests/unit/connect.cpp	/^void iter_handler(const asio::error_code& ec,$/;"	f	typeref:typename:void
iterator	asio/include/asio/detail/hash_map.hpp	/^  typedef typename std::list<value_type>::iterator iterator;$/;"	t	class:asio::detail::hash_map	typeref:typename:std::list<value_type>::iterator
iterator	asio/include/asio/detail/reactor_op_queue.hpp	/^  typedef typename hash_map<key_type, mapped_type>::iterator iterator;$/;"	t	class:asio::detail::reactor_op_queue	typeref:typename:hash_map<key_type,mapped_type>::iterator
iterator	asio/include/asio/impl/read_until.hpp	/^            typedef buffers_iterator<buffers_type> iterator;$/;"	t	function:asio::detail::read_until_delim_op_v1::operator ()	typeref:typename:buffers_iterator<buffers_type>
iterator	asio/include/asio/impl/read_until.hpp	/^            typedef buffers_iterator<buffers_type> iterator;$/;"	t	function:asio::detail::read_until_delim_op_v2::operator ()	typeref:typename:buffers_iterator<buffers_type>
iterator	asio/include/asio/impl/read_until.hpp	/^            typedef buffers_iterator<buffers_type> iterator;$/;"	t	function:asio::detail::read_until_delim_string_op_v1::operator ()	typeref:typename:buffers_iterator<buffers_type>
iterator	asio/include/asio/impl/read_until.hpp	/^            typedef buffers_iterator<buffers_type> iterator;$/;"	t	function:asio::detail::read_until_delim_string_op_v2::operator ()	typeref:typename:buffers_iterator<buffers_type>
iterator	asio/include/asio/impl/read_until.hpp	/^            typedef buffers_iterator<buffers_type> iterator;$/;"	t	function:asio::detail::read_until_expr_op_v1::operator ()	typeref:typename:buffers_iterator<buffers_type>
iterator	asio/include/asio/impl/read_until.hpp	/^            typedef buffers_iterator<buffers_type> iterator;$/;"	t	function:asio::detail::read_until_expr_op_v2::operator ()	typeref:typename:buffers_iterator<buffers_type>
iterator	asio/include/asio/impl/read_until.hpp	/^            typedef buffers_iterator<buffers_type> iterator;$/;"	t	function:asio::detail::read_until_match_op_v1::operator ()	typeref:typename:buffers_iterator<buffers_type>
iterator	asio/include/asio/impl/read_until.hpp	/^            typedef buffers_iterator<buffers_type> iterator;$/;"	t	function:asio::detail::read_until_match_op_v2::operator ()	typeref:typename:buffers_iterator<buffers_type>
iterator	asio/include/asio/impl/read_until.hpp	/^    typedef buffers_iterator<buffers_type> iterator;$/;"	t	function:asio::read_until	typeref:typename:buffers_iterator<buffers_type>
iterator	asio/include/asio/ip/address_v4_range.hpp	/^  typedef basic_address_iterator<address_v4> iterator;$/;"	t	class:asio::ip::basic_address_range	typeref:typename:basic_address_iterator<address_v4>
iterator	asio/include/asio/ip/address_v6_range.hpp	/^  typedef basic_address_iterator<address_v6> iterator;$/;"	t	class:asio::ip::basic_address_range	typeref:typename:basic_address_iterator<address_v6>
iterator	asio/include/asio/ip/basic_resolver.hpp	/^  typedef basic_resolver_iterator<InternetProtocol> iterator;$/;"	t	class:asio::ip::basic_resolver	typeref:typename:basic_resolver_iterator<InternetProtocol>
iterator	asio/include/asio/ip/basic_resolver_results.hpp	/^  typedef const_iterator iterator;$/;"	t	class:asio::ip::basic_resolver_results	typeref:typename:const_iterator
iterator	asio/include/asio/placeholders.hpp	/^unspecified iterator;$/;"	v	namespace:asio::placeholders	typeref:typename:unspecified
iterator_category	asio/include/asio/buffers_iterator.hpp	/^  typedef std::random_access_iterator_tag iterator_category;$/;"	t	class:asio::buffers_iterator	typeref:typename:std::random_access_iterator_tag
iterator_category	asio/include/asio/ip/address_v4_iterator.hpp	/^  typedef std::input_iterator_tag iterator_category;$/;"	t	class:asio::ip::basic_address_iterator	typeref:typename:std::input_iterator_tag
iterator_category	asio/include/asio/ip/address_v6_iterator.hpp	/^  typedef std::input_iterator_tag iterator_category;$/;"	t	class:asio::ip::basic_address_iterator	typeref:typename:std::input_iterator_tag
iterator_category	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  typedef std::forward_iterator_tag iterator_category;$/;"	t	class:asio::ip::basic_resolver_iterator	typeref:typename:std::forward_iterator_tag
iterator_connect_op	asio/include/asio/impl/connect.hpp	/^    iterator_connect_op(basic_socket<Protocol, Executor>& sock,$/;"	f	class:asio::detail::iterator_connect_op
iterator_connect_op	asio/include/asio/impl/connect.hpp	/^    iterator_connect_op(const iterator_connect_op& other)$/;"	f	class:asio::detail::iterator_connect_op
iterator_connect_op	asio/include/asio/impl/connect.hpp	/^    iterator_connect_op(iterator_connect_op&& other)$/;"	f	class:asio::detail::iterator_connect_op
iterator_connect_op	asio/include/asio/impl/connect.hpp	/^  class iterator_connect_op : base_from_connect_condition<ConnectCondition>$/;"	c	namespace:asio::detail
join	asio/include/asio/detail/null_thread.hpp	/^  void join()$/;"	f	class:asio::detail::null_thread	typeref:typename:void
join	asio/include/asio/detail/std_thread.hpp	/^  void join()$/;"	f	class:asio::detail::std_thread	typeref:typename:void
join	asio/include/asio/detail/thread_group.hpp	/^  void join()$/;"	f	class:asio::detail::thread_group	typeref:typename:void
join	asio/include/asio/detail/winapp_thread.hpp	/^  void join()$/;"	f	class:asio::detail::winapp_thread	typeref:typename:void
join	asio/include/asio/detail/wince_thread.hpp	/^  void join()$/;"	f	class:asio::detail::wince_thread	typeref:typename:void
join	asio/include/asio/thread.hpp	/^  void join()$/;"	f	class:asio::thread	typeref:typename:void
join	asio/src/examples/cpp03/chat/chat_server.cpp	/^  void join(chat_participant_ptr participant)$/;"	f	class:chat_room	typeref:typename:void	file:
join	asio/src/examples/cpp03/timeouts/server.cpp	/^  void join(subscriber_ptr subscriber)$/;"	f	class:channel	typeref:typename:void	file:
join	asio/src/examples/cpp11/chat/chat_server.cpp	/^  void join(chat_participant_ptr participant)$/;"	f	class:chat_room	typeref:typename:void	file:
join	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void join() const$/;"	f	class:fork_executor	typeref:typename:void	file:
join	asio/src/examples/cpp11/timeouts/server.cpp	/^  void join(subscriber_ptr subscriber)$/;"	f	class:channel	typeref:typename:void	file:
join	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void join() const$/;"	f	class:fork_executor	typeref:typename:void	file:
join	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  void join(chat_participant_ptr participant)$/;"	f	class:chat_room	typeref:typename:void	file:
join_group	asio/include/asio/ip/multicast.hpp	/^typedef implementation_defined join_group;$/;"	t	namespace:asio::ip::multicast	typeref:typename:implementation_defined
join_guard	asio/src/examples/cpp11/executors/fork_join.cpp	/^  explicit join_guard(const fork_executor& ex) : ex_(ex) {}$/;"	f	class:join_guard	file:
join_guard	asio/src/examples/cpp11/executors/fork_join.cpp	/^class join_guard$/;"	c	file:
join_guard	asio/src/examples/cpp14/executors/fork_join.cpp	/^  explicit join_guard(const fork_executor& ex) : ex_(ex) {}$/;"	f	class:join_guard	file:
join_guard	asio/src/examples/cpp14/executors/fork_join.cpp	/^class join_guard$/;"	c	file:
joined_	asio/include/asio/detail/posix_thread.hpp	/^  bool joined_;$/;"	m	class:asio::detail::posix_thread	typeref:typename:bool
keep_alive	asio/include/asio/socket_base.hpp	/^    ASIO_OS_DEF(SOL_SOCKET), ASIO_OS_DEF(SO_KEEPALIVE)> keep_alive;$/;"	t	class:asio::socket_base
keep_alive	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined keep_alive;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
key	asio/include/asio/execution_context.hpp	/^    key() : type_info_(0), id_(0) {}$/;"	f	struct:asio::execution_context::service::key
key	asio/include/asio/execution_context.hpp	/^  struct key$/;"	s	class:asio::execution_context::service
key_	asio/include/asio/detail/call_stack.hpp	/^    Key* key_;$/;"	m	class:asio::detail::call_stack::context	typeref:typename:Key *
key_	asio/include/asio/execution_context.hpp	/^  } key_;$/;"	m	class:asio::execution_context::service	typeref:struct:asio::execution_context::service::key
key_type	asio/include/asio/detail/reactor_op_queue.hpp	/^  typedef Descriptor key_type;$/;"	t	class:asio::detail::reactor_op_queue	typeref:typename:Descriptor
key_type	asio/src/examples/cpp03/services/logger_service.hpp	/^  typedef logger_service key_type;$/;"	t	class:services::logger_service	typeref:typename:logger_service
key_type	asio/src/examples/cpp11/executors/pipeline.cpp	/^    typedef thread_bag key_type;$/;"	t	class:thread_executor::thread_bag	typeref:typename:thread_bag	file:
key_type	asio/src/examples/cpp14/executors/pipeline.cpp	/^    typedef thread_bag key_type;$/;"	t	class:thread_executor::thread_bag	typeref:typename:thread_bag	file:
keyword_tss_ptr	asio/include/asio/detail/keyword_tss_ptr.hpp	/^  keyword_tss_ptr()$/;"	f	class:asio::detail::keyword_tss_ptr
keyword_tss_ptr	asio/include/asio/detail/keyword_tss_ptr.hpp	/^class keyword_tss_ptr$/;"	c	namespace:asio::detail
kqueue_fd_	asio/include/asio/detail/kqueue_reactor.hpp	/^  int kqueue_fd_;$/;"	m	class:asio::detail::kqueue_reactor	typeref:typename:int
kqueue_reactor	asio/include/asio/detail/kqueue_reactor.hpp	/^class kqueue_reactor$/;"	c	namespace:asio::detail
l_linger	asio/include/asio/detail/socket_types.hpp	/^struct linger_type { u_short_type l_onoff, l_linger; };$/;"	m	struct:asio::detail::linger_type	typeref:typename:u_short_type
l_onoff	asio/include/asio/detail/socket_types.hpp	/^struct linger_type { u_short_type l_onoff, l_linger; };$/;"	m	struct:asio::detail::linger_type	typeref:typename:u_short_type
last	asio/include/asio/detail/hash_map.hpp	/^    iterator last;$/;"	m	struct:asio::detail::hash_map::bucket_type	typeref:typename:iterator
last_price	asio/src/examples/cpp03/serialization/stock.hpp	/^  double last_price;$/;"	m	struct:s11n_example::stock	typeref:typename:double
latency_tcp_client_SOURCES	asio/src/tests/Makefile.am	/^latency_tcp_client_SOURCES = latency\/tcp_client.cpp$/;"	m
latency_tcp_server_SOURCES	asio/src/tests/Makefile.am	/^latency_tcp_server_SOURCES = latency\/tcp_server.cpp$/;"	m
latency_udp_client_SOURCES	asio/src/tests/Makefile.am	/^latency_udp_client_SOURCES = latency\/udp_client.cpp$/;"	m
latency_udp_server_SOURCES	asio/src/tests/Makefile.am	/^latency_udp_server_SOURCES = latency\/udp_server.cpp$/;"	m
launch	asio/include/asio/impl/awaitable.hpp	/^  void launch()$/;"	f	class:asio::detail::awaitable_thread	typeref:typename:void
lazy_handler	asio/src/tests/unit/archetypes/async_result.hpp	/^struct lazy_handler$/;"	s	namespace:archetypes
lbarrier	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^  static void lbarrier()$/;"	f	class:asio::detail::gcc_x86_fenced_block	typeref:typename:void
leave	asio/src/examples/cpp03/chat/chat_server.cpp	/^  void leave(chat_participant_ptr participant)$/;"	f	class:chat_room	typeref:typename:void	file:
leave	asio/src/examples/cpp03/timeouts/server.cpp	/^  void leave(subscriber_ptr subscriber)$/;"	f	class:channel	typeref:typename:void	file:
leave	asio/src/examples/cpp11/chat/chat_server.cpp	/^  void leave(chat_participant_ptr participant)$/;"	f	class:chat_room	typeref:typename:void	file:
leave	asio/src/examples/cpp11/timeouts/server.cpp	/^  void leave(subscriber_ptr subscriber)$/;"	f	class:channel	typeref:typename:void	file:
leave	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  void leave(chat_participant_ptr participant)$/;"	f	class:chat_room	typeref:typename:void	file:
leave_group	asio/include/asio/ip/multicast.hpp	/^  ASIO_OS_DEF(IPV6_LEAVE_GROUP)> leave_group;$/;"	t	namespace:asio::ip::multicast
leave_group	asio/include/asio/ip/multicast.hpp	/^typedef implementation_defined leave_group;$/;"	t	namespace:asio::ip::multicast	typeref:typename:implementation_defined
legacy_connect_condition_helper	asio/include/asio/impl/connect.hpp	/^  struct legacy_connect_condition_helper : T$/;"	s	namespace:asio::detail
legacy_connect_condition_helper	asio/include/asio/impl/connect.hpp	/^  struct legacy_connect_condition_helper<R (*)(Arg1, Arg2), Iterator>$/;"	s	namespace:asio::detail
legacy_resolve_handler	asio/src/tests/unit/ip/tcp.cpp	/^  legacy_resolve_handler() {}$/;"	f	struct:ip_tcp_resolver_compile::legacy_resolve_handler	file:
legacy_resolve_handler	asio/src/tests/unit/ip/tcp.cpp	/^  legacy_resolve_handler(legacy_resolve_handler&&) {}$/;"	f	struct:ip_tcp_resolver_compile::legacy_resolve_handler	file:
legacy_resolve_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct legacy_resolve_handler$/;"	s	namespace:ip_tcp_resolver_compile	file:
legacy_true_cond_1	asio/src/tests/unit/connect.cpp	/^std::vector<asio::ip::tcp::endpoint>::const_iterator legacy_true_cond_1($/;"	f	typeref:typename:std::vector<asio::ip::tcp::endpoint>::const_iterator
legacy_true_cond_2	asio/src/tests/unit/connect.cpp	/^struct legacy_true_cond_2$/;"	s	file:
length	asio/src/examples/cpp03/chat/chat_message.hpp	/^  size_t length() const$/;"	f	class:chat_message	typeref:typename:size_t
length	asio/src/examples/cpp11/chat/chat_message.hpp	/^  std::size_t length() const$/;"	f	class:chat_message	typeref:typename:std::size_t
length_	asio/src/tests/unit/read.cpp	/^  size_t length_;$/;"	m	class:test_stream	typeref:typename:size_t	file:
length_	asio/src/tests/unit/read_at.cpp	/^  size_t length_;$/;"	m	class:test_random_access_device	typeref:typename:size_t	file:
length_	asio/src/tests/unit/read_until.cpp	/^  size_t length_;$/;"	m	class:test_stream	typeref:typename:size_t	file:
length_	asio/src/tests/unit/write.cpp	/^  size_t length_;$/;"	m	class:test_stream	typeref:typename:size_t	file:
length_	asio/src/tests/unit/write_at.cpp	/^  size_t length_;$/;"	m	class:test_random_access_device	typeref:typename:size_t	file:
less_than	asio/include/asio/detail/chrono_time_traits.hpp	/^  static bool less_than(const time_type& t1, const time_type& t2)$/;"	f	struct:asio::detail::chrono_time_traits	typeref:typename:bool
less_than	asio/include/asio/time_traits.hpp	/^  static bool less_than(const time_type& t1, const time_type& t2)$/;"	f	struct:asio::time_traits	typeref:typename:bool
level	asio/include/asio/detail/socket_option.hpp	/^  int level(const Protocol&) const$/;"	f	class:asio::detail::socket_option::boolean	typeref:typename:int
level	asio/include/asio/detail/socket_option.hpp	/^  int level(const Protocol&) const$/;"	f	class:asio::detail::socket_option::integer	typeref:typename:int
level	asio/include/asio/detail/socket_option.hpp	/^  int level(const Protocol&) const$/;"	f	class:asio::detail::socket_option::linger	typeref:typename:int
level	asio/include/asio/ip/detail/socket_option.hpp	/^  int level(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:int
level	asio/include/asio/ip/detail/socket_option.hpp	/^  int level(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:int
level	asio/include/asio/ip/detail/socket_option.hpp	/^  int level(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_request	typeref:typename:int
level	asio/include/asio/ip/detail/socket_option.hpp	/^  int level(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::network_interface	typeref:typename:int
level	asio/include/asio/ip/detail/socket_option.hpp	/^  int level(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::unicast_hops	typeref:typename:int
level	asio/src/tests/unit/archetypes/gettable_socket_option.hpp	/^  int level(const Protocol&) const$/;"	f	class:archetypes::gettable_socket_option	typeref:typename:int
level	asio/src/tests/unit/archetypes/settable_socket_option.hpp	/^  int level(const Protocol&) const$/;"	f	class:archetypes::settable_socket_option	typeref:typename:int
libasio_a_SOURCES	asio/src/examples/cpp03/Makefile.am	/^libasio_a_SOURCES = ..\/..\/asio.cpp$/;"	m
libasio_a_SOURCES	asio/src/examples/cpp11/Makefile.am	/^libasio_a_SOURCES = ..\/..\/asio.cpp$/;"	m
libasio_a_SOURCES	asio/src/examples/cpp14/Makefile.am	/^libasio_a_SOURCES = ..\/..\/asio.cpp$/;"	m
libasio_a_SOURCES	asio/src/tests/Makefile.am	/^libasio_a_SOURCES = ..\/asio.cpp$/;"	m
linebreak	asio/src/doc/reference.xsl	/^<xsl:template match="linebreak" mode="markup">$/;"	m
linebreak	asio/src/doc/reference.xsl	/^<xsl:template match="linebreak" mode="markup-nested">$/;"	m
linebreak	asio/src/doc/tutorial.xsl	/^<xsl:template match="linebreak">$/;"	m
linger	asio/include/asio/detail/socket_option.hpp	/^  linger()$/;"	f	class:asio::detail::socket_option::linger
linger	asio/include/asio/detail/socket_option.hpp	/^  linger(bool e, int t)$/;"	f	class:asio::detail::socket_option::linger
linger	asio/include/asio/detail/socket_option.hpp	/^class linger$/;"	c	namespace:asio::detail::socket_option
linger	asio/include/asio/socket_base.hpp	/^      linger;$/;"	t	class:asio::socket_base
linger	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined linger;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
linger_type	asio/include/asio/detail/socket_types.hpp	/^struct linger_type { u_short_type l_onoff, l_linger; };$/;"	s	namespace:asio::detail
listen	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID listen(int backlog, asio::error_code& ec)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
listen	asio/include/asio/basic_socket_acceptor.hpp	/^  void listen(int backlog = socket_base::max_listen_connections)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
listen	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code listen(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
listen	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  asio::error_code listen(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:asio::error_code
listen	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  asio::error_code listen(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:asio::error_code
listener	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^awaitable<void> listener(tcp::acceptor acceptor)$/;"	f	typeref:typename:awaitable<void>
listener	asio/src/examples/cpp17/coroutines_ts/echo_server.cpp	/^awaitable<void> listener()$/;"	f	typeref:typename:awaitable<void>
listener	asio/src/examples/cpp17/coroutines_ts/echo_server_with_default.cpp	/^awaitable<void> listener()$/;"	f	typeref:typename:awaitable<void>
listener	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^awaitable<void> listener(tcp::acceptor acceptor)$/;"	f	typeref:typename:awaitable<void>
listener	asio/src/examples/cpp17/coroutines_ts/refactored_echo_server.cpp	/^awaitable<void> listener()$/;"	f	typeref:typename:awaitable<void>
listitem	asio/src/doc/reference.xsl	/^<xsl:template match="listitem" mode="markup">$/;"	m
listitem	asio/src/doc/tutorial.xsl	/^<xsl:template match="listitem">$/;"	m
live_list_	asio/include/asio/detail/object_pool.hpp	/^  Object* live_list_;$/;"	m	class:asio::detail::object_pool	typeref:typename:Object *
load_function_type	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  typedef asio::error_code (*load_function_type)($/;"	t	class:asio::detail::reactive_serial_port_service	typeref:typename:asio::error_code (*)(void *,const termios &,asio::error_code &)
load_function_type	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  typedef asio::error_code (*load_function_type)($/;"	t	class:asio::detail::win_iocp_serial_port_service	typeref:typename:asio::error_code (*)(void *,const::DCB &,asio::error_code &)
load_option	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  static asio::error_code load_option(void* option,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:asio::error_code
load_option	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  static asio::error_code load_option(void* option,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:asio::error_code
local	asio/include/asio/local/basic_endpoint.hpp	/^namespace local {$/;"	n	namespace:asio
local	asio/include/asio/local/connect_pair.hpp	/^namespace local {$/;"	n	namespace:asio
local	asio/include/asio/local/datagram_protocol.hpp	/^namespace local {$/;"	n	namespace:asio
local	asio/include/asio/local/detail/endpoint.hpp	/^    asio::detail::sockaddr_un_type local;$/;"	m	union:asio::local::detail::endpoint::data_union	typeref:typename:asio::detail::sockaddr_un_type
local	asio/include/asio/local/detail/endpoint.hpp	/^namespace local {$/;"	n	namespace:asio
local	asio/include/asio/local/stream_protocol.hpp	/^namespace local {$/;"	n	namespace:asio
local_connect_pair_SOURCES	asio/src/examples/cpp03/Makefile.am	/^local_connect_pair_SOURCES = local\/connect_pair.cpp$/;"	m
local_connect_pair_SOURCES	asio/src/examples/cpp11/Makefile.am	/^local_connect_pair_SOURCES = local\/connect_pair.cpp$/;"	m
local_connect_pair_compile	asio/src/tests/unit/local/connect_pair.cpp	/^namespace local_connect_pair_compile {$/;"	n	file:
local_datagram_protocol_socket_compile	asio/src/tests/unit/local/datagram_protocol.cpp	/^namespace local_datagram_protocol_socket_compile {$/;"	n	file:
local_endpoint	asio/include/asio/basic_socket.hpp	/^  endpoint_type local_endpoint() const$/;"	f	class:asio::basic_socket	typeref:typename:endpoint_type
local_endpoint	asio/include/asio/basic_socket.hpp	/^  endpoint_type local_endpoint(asio::error_code& ec) const$/;"	f	class:asio::basic_socket	typeref:typename:endpoint_type
local_endpoint	asio/include/asio/basic_socket_acceptor.hpp	/^  endpoint_type local_endpoint() const$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:endpoint_type
local_endpoint	asio/include/asio/basic_socket_acceptor.hpp	/^  endpoint_type local_endpoint(asio::error_code& ec) const$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:endpoint_type
local_endpoint	asio/include/asio/detail/null_socket_service.hpp	/^  endpoint_type local_endpoint(const implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:endpoint_type
local_endpoint	asio/include/asio/detail/reactive_socket_service.hpp	/^  endpoint_type local_endpoint(const implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:endpoint_type
local_endpoint	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  endpoint_type local_endpoint(const implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:endpoint_type
local_endpoint	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  endpoint_type local_endpoint(const implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:endpoint_type
local_free_on_block_exit	asio/include/asio/detail/local_free_on_block_exit.hpp	/^  explicit local_free_on_block_exit(void* p)$/;"	f	class:asio::detail::local_free_on_block_exit
local_free_on_block_exit	asio/include/asio/detail/local_free_on_block_exit.hpp	/^class local_free_on_block_exit$/;"	c	namespace:asio::detail
local_iostream_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^local_iostream_client_SOURCES = local\/iostream_client.cpp$/;"	m
local_iostream_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^local_iostream_client_SOURCES = local\/iostream_client.cpp$/;"	m
local_stream_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^local_stream_client_SOURCES = local\/stream_client.cpp$/;"	m
local_stream_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^local_stream_client_SOURCES = local\/stream_client.cpp$/;"	m
local_stream_protocol_socket_compile	asio/src/tests/unit/local/stream_protocol.cpp	/^namespace local_stream_protocol_socket_compile {$/;"	n	file:
local_stream_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^local_stream_server_SOURCES = local\/stream_server.cpp$/;"	m
local_stream_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^local_stream_server_SOURCES = local\/stream_server.cpp$/;"	m
lock	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    void lock()$/;"	f	class:asio::detail::conditionally_enabled_mutex::scoped_lock	typeref:typename:void
lock	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^  void lock()$/;"	f	class:asio::detail::conditionally_enabled_mutex	typeref:typename:void
lock	asio/include/asio/detail/null_mutex.hpp	/^  void lock()$/;"	f	class:asio::detail::null_mutex	typeref:typename:void
lock	asio/include/asio/detail/null_static_mutex.hpp	/^  void lock()$/;"	f	struct:asio::detail::null_static_mutex	typeref:typename:void
lock	asio/include/asio/detail/posix_mutex.hpp	/^  void lock()$/;"	f	class:asio::detail::posix_mutex	typeref:typename:void
lock	asio/include/asio/detail/posix_static_mutex.hpp	/^  void lock()$/;"	f	struct:asio::detail::posix_static_mutex	typeref:typename:void
lock	asio/include/asio/detail/scoped_lock.hpp	/^  void lock()$/;"	f	class:asio::detail::scoped_lock	typeref:typename:void
lock	asio/include/asio/detail/std_mutex.hpp	/^  void lock()$/;"	f	class:asio::detail::std_mutex	typeref:typename:void
lock	asio/include/asio/detail/std_static_mutex.hpp	/^  void lock()$/;"	f	class:asio::detail::std_static_mutex	typeref:typename:void
lock	asio/include/asio/detail/win_mutex.hpp	/^  void lock()$/;"	f	class:asio::detail::win_mutex	typeref:typename:void
lock	asio/include/asio/detail/win_static_mutex.hpp	/^  void lock()$/;"	f	struct:asio::detail::win_static_mutex	typeref:typename:void
locked	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    bool locked() const$/;"	f	class:asio::detail::conditionally_enabled_mutex::scoped_lock	typeref:typename:bool
locked	asio/include/asio/detail/scoped_lock.hpp	/^  bool locked() const$/;"	f	class:asio::detail::scoped_lock	typeref:typename:bool
locked_	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    bool locked_;$/;"	m	class:asio::detail::conditionally_enabled_mutex::scoped_lock	typeref:typename:bool
locked_	asio/include/asio/detail/scoped_lock.hpp	/^  bool locked_;$/;"	m	class:asio::detail::scoped_lock	typeref:typename:bool
locked_	asio/include/asio/detail/strand_executor_service.hpp	/^    bool locked_;$/;"	m	class:asio::detail::strand_executor_service::strand_impl	typeref:typename:bool
locked_	asio/include/asio/detail/strand_service.hpp	/^    bool locked_;$/;"	m	class:asio::detail::strand_service::strand_impl	typeref:typename:bool
log	asio/src/examples/cpp03/services/basic_logger.hpp	/^  void log(const std::string& message)$/;"	f	class:services::basic_logger	typeref:typename:void
log	asio/src/examples/cpp03/services/logger_service.hpp	/^  void log(impl_type& impl, const std::string& message)$/;"	f	class:services::logger_service	typeref:typename:void
log_impl	asio/src/examples/cpp03/services/logger_service.hpp	/^  void log_impl(const std::string& text)$/;"	f	class:services::logger_service	typeref:typename:void
logger	asio/src/examples/cpp03/services/logger.hpp	/^typedef basic_logger<logger_service> logger;$/;"	t	namespace:services	typeref:typename:basic_logger<logger_service>
logger_impl	asio/src/examples/cpp03/services/logger_service.hpp	/^    explicit logger_impl(const std::string& ident) : identifier(ident) {}$/;"	f	struct:services::logger_service::logger_impl
logger_impl	asio/src/examples/cpp03/services/logger_service.hpp	/^  struct logger_impl$/;"	s	class:services::logger_service
logger_service	asio/src/examples/cpp03/services/logger_service.hpp	/^  logger_service(asio::execution_context& context)$/;"	f	class:services::logger_service
logger_service	asio/src/examples/cpp03/services/logger_service.hpp	/^class logger_service$/;"	c	namespace:services
loopback	asio/include/asio/ip/address_v4.hpp	/^  static address_v4 loopback() ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v4	typeref:typename:address_v4
low_price	asio/src/examples/cpp03/serialization/stock.hpp	/^  double low_price;$/;"	m	struct:s11n_example::stock	typeref:typename:double
low_priority_handler	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^void low_priority_handler()$/;"	f	typeref:typename:void
low_priority_handler	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^struct low_priority_handler$/;"	s	file:
lowest_layer	asio/include/asio/basic_serial_port.hpp	/^  const lowest_layer_type& lowest_layer() const$/;"	f	class:asio::basic_serial_port	typeref:typename:const lowest_layer_type &
lowest_layer	asio/include/asio/basic_serial_port.hpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:asio::basic_serial_port	typeref:typename:lowest_layer_type &
lowest_layer	asio/include/asio/basic_socket.hpp	/^  const lowest_layer_type& lowest_layer() const$/;"	f	class:asio::basic_socket	typeref:typename:const lowest_layer_type &
lowest_layer	asio/include/asio/basic_socket.hpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:asio::basic_socket	typeref:typename:lowest_layer_type &
lowest_layer	asio/include/asio/buffered_read_stream.hpp	/^  const lowest_layer_type& lowest_layer() const$/;"	f	class:asio::buffered_read_stream	typeref:typename:const lowest_layer_type &
lowest_layer	asio/include/asio/buffered_read_stream.hpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:asio::buffered_read_stream	typeref:typename:lowest_layer_type &
lowest_layer	asio/include/asio/buffered_stream.hpp	/^  const lowest_layer_type& lowest_layer() const$/;"	f	class:asio::buffered_stream	typeref:typename:const lowest_layer_type &
lowest_layer	asio/include/asio/buffered_stream.hpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:asio::buffered_stream	typeref:typename:lowest_layer_type &
lowest_layer	asio/include/asio/buffered_write_stream.hpp	/^  const lowest_layer_type& lowest_layer() const$/;"	f	class:asio::buffered_write_stream	typeref:typename:const lowest_layer_type &
lowest_layer	asio/include/asio/buffered_write_stream.hpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:asio::buffered_write_stream	typeref:typename:lowest_layer_type &
lowest_layer	asio/include/asio/posix/basic_descriptor.hpp	/^  const lowest_layer_type& lowest_layer() const$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:const lowest_layer_type &
lowest_layer	asio/include/asio/posix/basic_descriptor.hpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:lowest_layer_type &
lowest_layer	asio/include/asio/ssl/stream.hpp	/^  const lowest_layer_type& lowest_layer() const$/;"	f	class:asio::ssl::stream	typeref:typename:const lowest_layer_type &
lowest_layer	asio/include/asio/ssl/stream.hpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:asio::ssl::stream	typeref:typename:lowest_layer_type &
lowest_layer	asio/include/asio/windows/basic_object_handle.hpp	/^  const lowest_layer_type& lowest_layer() const$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:const lowest_layer_type &
lowest_layer	asio/include/asio/windows/basic_object_handle.hpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:lowest_layer_type &
lowest_layer	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  const lowest_layer_type& lowest_layer() const$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:const lowest_layer_type &
lowest_layer	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:lowest_layer_type &
lowest_layer	asio/src/tests/unit/is_read_buffered.cpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:test_stream	typeref:typename:lowest_layer_type &	file:
lowest_layer	asio/src/tests/unit/is_write_buffered.cpp	/^  lowest_layer_type& lowest_layer()$/;"	f	class:test_stream	typeref:typename:lowest_layer_type &	file:
lowest_layer_type	asio/include/asio/basic_serial_port.hpp	/^  typedef basic_serial_port lowest_layer_type;$/;"	t	class:asio::basic_serial_port	typeref:typename:basic_serial_port
lowest_layer_type	asio/include/asio/basic_socket.hpp	/^  typedef basic_socket<Protocol, Executor> lowest_layer_type;$/;"	t	class:asio::basic_socket	typeref:typename:basic_socket<Protocol,Executor>
lowest_layer_type	asio/include/asio/buffered_read_stream.hpp	/^  typedef typename next_layer_type::lowest_layer_type lowest_layer_type;$/;"	t	class:asio::buffered_read_stream	typeref:typename:next_layer_type::lowest_layer_type
lowest_layer_type	asio/include/asio/buffered_stream.hpp	/^  typedef typename next_layer_type::lowest_layer_type lowest_layer_type;$/;"	t	class:asio::buffered_stream	typeref:typename:next_layer_type::lowest_layer_type
lowest_layer_type	asio/include/asio/buffered_write_stream.hpp	/^  typedef typename next_layer_type::lowest_layer_type lowest_layer_type;$/;"	t	class:asio::buffered_write_stream	typeref:typename:next_layer_type::lowest_layer_type
lowest_layer_type	asio/include/asio/posix/basic_descriptor.hpp	/^  typedef basic_descriptor lowest_layer_type;$/;"	t	class:asio::posix::basic_descriptor	typeref:typename:basic_descriptor
lowest_layer_type	asio/include/asio/ssl/stream.hpp	/^  typedef typename next_layer_type::lowest_layer_type lowest_layer_type;$/;"	t	class:asio::ssl::stream	typeref:typename:next_layer_type::lowest_layer_type
lowest_layer_type	asio/include/asio/windows/basic_object_handle.hpp	/^  typedef basic_object_handle lowest_layer_type;$/;"	t	class:asio::windows::basic_object_handle	typeref:typename:basic_object_handle
lowest_layer_type	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  typedef basic_overlapped_handle lowest_layer_type;$/;"	t	class:asio::windows::basic_overlapped_handle	typeref:typename:basic_overlapped_handle
lowest_layer_type	asio/src/tests/unit/is_read_buffered.cpp	/^  typedef test_stream lowest_layer_type;$/;"	t	class:test_stream	typeref:typename:test_stream	file:
lowest_layer_type	asio/src/tests/unit/is_write_buffered.cpp	/^  typedef test_stream lowest_layer_type;$/;"	t	class:test_stream	typeref:typename:test_stream	file:
macos_fenced_block	asio/include/asio/detail/macos_fenced_block.hpp	/^  explicit macos_fenced_block(full_t)$/;"	f	class:asio::detail::macos_fenced_block
macos_fenced_block	asio/include/asio/detail/macos_fenced_block.hpp	/^  explicit macos_fenced_block(half_t)$/;"	f	class:asio::detail::macos_fenced_block
macos_fenced_block	asio/include/asio/detail/macos_fenced_block.hpp	/^class macos_fenced_block$/;"	c	namespace:asio::detail
main	asio/src/examples/cpp03/allocation/server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/chat/chat_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/chat/chat_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^int main() {}$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/echo/async_udp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/echo/blocking_tcp_echo_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/echo/blocking_tcp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/echo/blocking_udp_echo_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/echo/blocking_udp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/fork/daemon.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/http/client/async_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/http/client/sync_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/http/server/main.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/http/server2/main.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/http/server3/main.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/http/server4/main.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/icmp/ping.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/iostreams/daytime_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/iostreams/daytime_server.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/iostreams/http_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/local/connect_pair.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/local/iostream_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/local/stream_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/local/stream_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/multicast/receiver.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/multicast/sender.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/porthopper/client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/porthopper/server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/serialization/client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/serialization/server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/services/daytime_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/socks4/sync_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/spawn/echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/spawn/parallel_grep.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/ssl/client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/ssl/server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/timeouts/blocking_tcp_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/timeouts/blocking_udp_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/timeouts/server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/daytime1/client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/daytime2/server.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/daytime4/client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/daytime5/server.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/daytime6/server.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/timer1/timer.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/timer2/timer.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/timer3/timer.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/timer4/timer.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/tutorial/timer5/timer.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp03/windows/transmit_file.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/allocation/server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/chat/chat_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/chat/chat_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/echo/blocking_tcp_echo_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/echo/blocking_tcp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/echo/blocking_udp_echo_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/echo/blocking_udp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/executors/actor.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/executors/bank_account_2.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/executors/fork_join.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/executors/pipeline.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/fork/daemon.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/futures/daytime_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/http/server/main.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/iostreams/http_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/local/connect_pair.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/local/iostream_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/local/stream_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/local/stream_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/multicast/receiver.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/multicast/sender.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/operations/composed_1.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/operations/composed_2.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/operations/composed_3.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/operations/composed_4.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/operations/composed_5.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/operations/composed_6.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/operations/composed_7.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/operations/composed_8.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/socks4/sync_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/spawn/echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/spawn/parallel_grep.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/ssl/client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/ssl/server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/timeouts/blocking_udp_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/timeouts/server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/echo/blocking_tcp_echo_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/echo/blocking_tcp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/echo/blocking_udp_echo_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/echo/blocking_udp_echo_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/executors/actor.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/executors/async_1.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/executors/async_2.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/executors/bank_account_2.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/executors/fork_join.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/executors/pipeline.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/iostreams/http_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/operations/composed_1.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/operations/composed_2.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/operations/composed_3.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/operations/composed_4.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/operations/composed_5.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/operations/composed_6.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/operations/composed_7.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp14/operations/composed_8.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/examples/cpp17/coroutines_ts/echo_server.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp17/coroutines_ts/echo_server_with_default.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/examples/cpp17/coroutines_ts/refactored_echo_server.cpp	/^int main()$/;"	f	typeref:typename:int
main	asio/src/tests/latency/tcp_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/tests/latency/tcp_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/tests/latency/udp_client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/tests/latency/udp_server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/tests/performance/client.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	asio/src/tests/performance/server.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
make-id	asio/src/doc/reference.xsl	/^<xsl:template name="make-id">$/;"	n
make-id	asio/src/doc/tutorial.xsl	/^<xsl:template name="make-id">$/;"	n
make_address_v4	asio/include/asio/ip/address_v4.hpp	/^inline address_v4 make_address_v4(address_v4::uint_type addr)$/;"	f	namespace:asio::ip	typeref:typename:address_v4
make_address_v4	asio/include/asio/ip/address_v4.hpp	/^inline address_v4 make_address_v4(const address_v4::bytes_type& bytes)$/;"	f	namespace:asio::ip	typeref:typename:address_v4
make_address_v6	asio/include/asio/ip/address_v6.hpp	/^inline address_v6 make_address_v6(const address_v6::bytes_type& bytes,$/;"	f	namespace:asio::ip	typeref:typename:address_v6
make_asio_packages	asio/release.pl	/^sub make_asio_packages$/;"	s
make_boost_asio_packages	asio/release.pl	/^sub make_boost_asio_packages$/;"	s
make_composed_io_executors	asio/include/asio/impl/compose.hpp	/^  inline composed_io_executors<void()> make_composed_io_executors()$/;"	f	namespace:asio::detail	typeref:typename:composed_io_executors<void ()>
make_composed_io_executors	asio/include/asio/impl/compose.hpp	/^  make_composed_io_executors(const Head& head)$/;"	f	namespace:asio::detail	typeref:typename:composed_io_executors<void (Head)>
make_composed_io_executors	asio/include/asio/impl/compose.hpp	/^  make_composed_io_executors(const Head& head, const Tail&... tail)$/;"	f	namespace:asio::detail	typeref:typename:composed_io_executors<void (Head,Tail...)>
make_custom_alloc_handler	asio/src/examples/cpp03/allocation/server.cpp	/^inline custom_alloc_handler<Handler> make_custom_alloc_handler($/;"	f	typeref:typename:custom_alloc_handler<Handler>
make_custom_alloc_handler	asio/src/examples/cpp11/allocation/server.cpp	/^inline custom_alloc_handler<Handler> make_custom_alloc_handler($/;"	f	typeref:typename:custom_alloc_handler<Handler>
make_custom_alloc_handler	asio/src/tests/performance/handler_allocator.hpp	/^inline custom_alloc_handler<Handler> make_custom_alloc_handler($/;"	f	typeref:typename:custom_alloc_handler<Handler>
make_daytime_string	asio/src/examples/cpp03/iostreams/daytime_server.cpp	/^std::string make_daytime_string()$/;"	f	typeref:typename:std::string
make_daytime_string	asio/src/examples/cpp03/tutorial/daytime2/server.cpp	/^std::string make_daytime_string()$/;"	f	typeref:typename:std::string
make_daytime_string	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^std::string make_daytime_string()$/;"	f	typeref:typename:std::string
make_daytime_string	asio/src/examples/cpp03/tutorial/daytime5/server.cpp	/^std::string make_daytime_string()$/;"	f	typeref:typename:std::string
make_daytime_string	asio/src/examples/cpp03/tutorial/daytime6/server.cpp	/^std::string make_daytime_string()$/;"	f	typeref:typename:std::string
make_daytime_string	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^std::string make_daytime_string()$/;"	f	typeref:typename:std::string
make_error_code	asio/include/asio/error.hpp	/^inline asio::error_code make_error_code(addrinfo_errors e)$/;"	f	namespace:asio::error	typeref:typename:asio::error_code
make_error_code	asio/include/asio/error.hpp	/^inline asio::error_code make_error_code(basic_errors e)$/;"	f	namespace:asio::error	typeref:typename:asio::error_code
make_error_code	asio/include/asio/error.hpp	/^inline asio::error_code make_error_code(misc_errors e)$/;"	f	namespace:asio::error	typeref:typename:asio::error_code
make_error_code	asio/include/asio/error.hpp	/^inline asio::error_code make_error_code(netdb_errors e)$/;"	f	namespace:asio::error	typeref:typename:asio::error_code
make_error_code	asio/include/asio/ssl/error.hpp	/^inline asio::error_code make_error_code(ssl_errors e)$/;"	f	namespace:asio::error	typeref:typename:asio::error_code
make_error_code	asio/include/asio/ssl/error.hpp	/^inline asio::error_code make_error_code(stream_errors e)$/;"	f	namespace:asio::ssl::error	typeref:typename:asio::error_code
make_initiate_composed_op	asio/include/asio/impl/compose.hpp	/^  inline initiate_composed_op<Signature, Executors> make_initiate_composed_op($/;"	f	namespace:asio::detail	typeref:typename:initiate_composed_op<Signature,Executors>
make_network_v4	asio/include/asio/ip/network_v4.hpp	/^inline network_v4 make_network_v4($/;"	f	namespace:asio::ip	typeref:typename:network_v4
make_network_v6	asio/include/asio/ip/network_v6.hpp	/^inline network_v6 make_network_v6($/;"	f	namespace:asio::ip	typeref:typename:network_v6
make_service	asio/include/asio/impl/execution_context.hpp	/^Service& make_service(execution_context& e)$/;"	f	namespace:asio	typeref:typename:Service &
make_service	asio/include/asio/impl/execution_context.hpp	/^Service& make_service(execution_context& e, ASIO_MOVE_ARG(Args)... args)$/;"	f	namespace:asio	typeref:typename:Service &
make_strand	asio/include/asio/strand.hpp	/^inline strand<Executor> make_strand(const Executor& ex,$/;"	f	namespace:asio	typeref:typename:strand<Executor>
make_strand	asio/include/asio/strand.hpp	/^make_strand(ExecutionContext& ctx,$/;"	f	namespace:asio	typeref:typename:strand<typename ExecutionContext::executor_type>
make_timer	asio/src/tests/unit/deadline_timer.cpp	/^asio::deadline_timer make_timer(asio::io_context& ioc, int* count)$/;"	f	typeref:typename:asio::deadline_timer
make_timer	asio/src/tests/unit/system_timer.cpp	/^asio::system_timer make_timer(asio::io_context& ioc, int* count)$/;"	f	typeref:typename:asio::system_timer
make_work_guard	asio/include/asio/executor_work_guard.hpp	/^inline executor_work_guard<Executor> make_work_guard(const Executor& ex,$/;"	f	namespace:asio	typeref:typename:executor_work_guard<Executor>
make_work_guard	asio/include/asio/executor_work_guard.hpp	/^make_work_guard(ExecutionContext& ctx,$/;"	f	namespace:asio	typeref:typename:executor_work_guard<typename ExecutionContext::executor_type>
make_work_guard	asio/include/asio/executor_work_guard.hpp	/^make_work_guard(const T& t, const Executor& ex,$/;"	f	namespace:asio	typeref:typename:executor_work_guard<typename associated_executor<T,Executor>::type>
manual	asio/include/asio/detail/winsock_init.hpp	/^    manual()$/;"	f	class:asio::detail::winsock_init::manual
manual	asio/include/asio/detail/winsock_init.hpp	/^    manual(const manual&)$/;"	f	class:asio::detail::winsock_init::manual
manual	asio/include/asio/detail/winsock_init.hpp	/^  class manual$/;"	c	class:asio::detail::winsock_init
mapped_type	asio/include/asio/detail/reactor_op_queue.hpp	/^    mapped_type() {}$/;"	f	struct:asio::detail::reactor_op_queue::mapped_type
mapped_type	asio/include/asio/detail/reactor_op_queue.hpp	/^    mapped_type(const mapped_type&) {}$/;"	f	struct:asio::detail::reactor_op_queue::mapped_type
mapped_type	asio/include/asio/detail/reactor_op_queue.hpp	/^  struct mapped_type : op_queue<reactor_op>$/;"	s	class:asio::detail::reactor_op_queue
mapping	asio/src/examples/cpp03/http/server/mime_types.cpp	/^struct mapping$/;"	s	namespace:http::server::mime_types	file:
mapping	asio/src/examples/cpp03/http/server2/mime_types.cpp	/^struct mapping$/;"	s	namespace:http::server2::mime_types	file:
mapping	asio/src/examples/cpp03/http/server3/mime_types.cpp	/^struct mapping$/;"	s	namespace:http::server3::mime_types	file:
mapping	asio/src/examples/cpp03/http/server4/mime_types.cpp	/^struct mapping$/;"	s	namespace:http::server4::mime_types	file:
mapping	asio/src/examples/cpp11/http/server/mime_types.cpp	/^struct mapping$/;"	s	namespace:http::server::mime_types	file:
mappings	asio/src/examples/cpp03/http/server/mime_types.cpp	/^} mappings[] =$/;"	v	namespace:http::server::mime_types	typeref:struct:http::server::mime_types::mapping[]
mappings	asio/src/examples/cpp03/http/server2/mime_types.cpp	/^} mappings[] =$/;"	v	namespace:http::server2::mime_types	typeref:struct:http::server2::mime_types::mapping[]
mappings	asio/src/examples/cpp03/http/server3/mime_types.cpp	/^} mappings[] =$/;"	v	namespace:http::server3::mime_types	typeref:struct:http::server3::mime_types::mapping[]
mappings	asio/src/examples/cpp03/http/server4/mime_types.cpp	/^} mappings[] =$/;"	v	namespace:http::server4::mime_types	typeref:struct:http::server4::mime_types::mapping[]
mappings	asio/src/examples/cpp11/http/server/mime_types.cpp	/^} mappings[] =$/;"	v	namespace:http::server::mime_types	typeref:struct:http::server::mime_types::mapping[]
match_char	asio/src/tests/unit/read_until.cpp	/^  explicit match_char(char c) : c_(c) {}$/;"	f	class:match_char	file:
match_char	asio/src/tests/unit/read_until.cpp	/^class match_char$/;"	c	file:
match_condition_	asio/include/asio/impl/read_until.hpp	/^    MatchCondition match_condition_;$/;"	m	class:asio::detail::read_until_match_op_v1	typeref:typename:MatchCondition
match_condition_	asio/include/asio/impl/read_until.hpp	/^    MatchCondition match_condition_;$/;"	m	class:asio::detail::read_until_match_op_v2	typeref:typename:MatchCondition
max_addr_v4_str_len	asio/include/asio/detail/socket_types.hpp	/^const int max_addr_v4_str_len = 256;$/;"	v	namespace:asio::detail	typeref:typename:const int
max_addr_v6_str_len	asio/include/asio/detail/socket_types.hpp	/^const int max_addr_v6_str_len = 256;$/;"	v	namespace:asio::detail	typeref:typename:const int
max_body_length	asio/src/examples/cpp03/chat/chat_message.hpp	/^  enum { max_body_length = 512 };$/;"	e	enum:chat_message::__anon9fd7c9630203
max_body_length	asio/src/examples/cpp11/chat/chat_message.hpp	/^  enum { max_body_length = 512 };$/;"	e	enum:chat_message::__anonde5602c20203
max_buffers	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  enum { max_buffers = 1 };$/;"	e	enum:asio::detail::buffer_sequence_adapter_base::__anon9456e0780103
max_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^  enum { max_buffers = MaxBuffers < 16 ? MaxBuffers : 16 };$/;"	e	enum:prepared_buffers::__anon91b8a3e50403
max_connections	asio/include/asio/socket_base.hpp	/^  static const int max_connections = implementation_defined;$/;"	m	class:asio::socket_base	typeref:typename:const int
max_descriptor	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^  socket_type max_descriptor() const$/;"	f	class:asio::detail::posix_fd_set_adapter	typeref:typename:socket_type
max_descriptor	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  socket_type max_descriptor() const$/;"	f	class:asio::detail::win_fd_set_adapter	typeref:typename:socket_type
max_descriptor_	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^  socket_type max_descriptor_;$/;"	m	class:asio::detail::posix_fd_set_adapter	typeref:typename:socket_type
max_descriptor_	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  socket_type max_descriptor_;$/;"	m	class:asio::detail::win_fd_set_adapter	typeref:typename:socket_type
max_expiry_time	asio/include/asio/basic_socket_streambuf.hpp	/^  static time_point max_expiry_time()$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:time_point
max_length	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	e	enum:session::__anon383fe1b10103	file:
max_length	asio/src/examples/cpp03/echo/async_udp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	e	enum:server::__anond7306a130103	file:
max_length	asio/src/examples/cpp03/echo/blocking_tcp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anon580c4e640103	file:
max_length	asio/src/examples/cpp03/echo/blocking_tcp_echo_server.cpp	/^const int max_length = 1024;$/;"	v	typeref:typename:const int
max_length	asio/src/examples/cpp03/echo/blocking_udp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anonf6fcd6c60103	file:
max_length	asio/src/examples/cpp03/echo/blocking_udp_echo_server.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anon5e0ab7de0103	file:
max_length	asio/src/examples/cpp03/local/iostream_client.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anonc0a36d670103	file:
max_length	asio/src/examples/cpp03/local/stream_client.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anon4ba0fb6f0103	file:
max_length	asio/src/examples/cpp03/multicast/receiver.cpp	/^  enum { max_length = 1024 };$/;"	e	enum:receiver::__anon6c577f050103	file:
max_length	asio/src/examples/cpp03/ssl/client.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anon754c7acb0103	file:
max_length	asio/src/examples/cpp03/ssl/server.cpp	/^  enum { max_length = 1024 };$/;"	e	enum:session::__anondc5a5be30103	file:
max_length	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	e	enum:session::__anon7eba15f00303	file:
max_length	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	e	enum:server::__anon1daa9e520303	file:
max_length	asio/src/examples/cpp11/echo/blocking_tcp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anone0ec8e430103	file:
max_length	asio/src/examples/cpp11/echo/blocking_tcp_echo_server.cpp	/^const int max_length = 1024;$/;"	v	typeref:typename:const int
max_length	asio/src/examples/cpp11/echo/blocking_udp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anon7fdd16a50103	file:
max_length	asio/src/examples/cpp11/echo/blocking_udp_echo_server.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anone6eaf7bd0103	file:
max_length	asio/src/examples/cpp11/local/iostream_client.cpp	/^constexpr std::size_t max_length = 1024;$/;"	v	typeref:typename:std::size_t
max_length	asio/src/examples/cpp11/local/stream_client.cpp	/^constexpr std::size_t max_length = 1024;$/;"	v	typeref:typename:std::size_t
max_length	asio/src/examples/cpp11/ssl/client.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anonefbc110a0103	file:
max_length	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	e	enum:session::__anonaed66d930303	file:
max_length	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^  enum { max_length = 1024 };$/;"	e	enum:server::__anon4dc6f5f50303	file:
max_length	asio/src/examples/cpp14/echo/blocking_tcp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anon9b96e7060103	file:
max_length	asio/src/examples/cpp14/echo/blocking_tcp_echo_server.cpp	/^const int max_length = 1024;$/;"	v	typeref:typename:const int
max_length	asio/src/examples/cpp14/echo/blocking_udp_echo_client.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anon3a876f680103	file:
max_length	asio/src/examples/cpp14/echo/blocking_udp_echo_server.cpp	/^enum { max_length = 1024 };$/;"	e	enum:__anona19550800103	file:
max_length	asio/src/tests/unit/read.cpp	/^  enum { max_length = 8192 };$/;"	e	enum:test_stream::__anonfcb6f7950103	file:
max_length	asio/src/tests/unit/read_at.cpp	/^  enum { max_length = 8192 };$/;"	e	enum:test_random_access_device::__anon881a80290103	file:
max_length	asio/src/tests/unit/read_until.cpp	/^  enum { max_length = 8192 };$/;"	e	enum:test_stream::__anonba4f83e00103	file:
max_length	asio/src/tests/unit/write.cpp	/^  enum { max_length = 8192 };$/;"	e	enum:test_stream::__anon6a465b840103	file:
max_length	asio/src/tests/unit/write_at.cpp	/^  enum { max_length = 8192 };$/;"	e	enum:test_random_access_device::__anon761611b80103	file:
max_listen_connections	asio/include/asio/socket_base.hpp	/^  static const int max_listen_connections = implementation_defined;$/;"	m	class:asio::socket_base	typeref:typename:const int
max_mem_index	asio/include/asio/detail/thread_info_base.hpp	/^  enum { max_mem_index = 3 };$/;"	e	enum:asio::detail::thread_info_base::__anon6e8580630503
max_message_count	asio/src/examples/cpp03/multicast/sender.cpp	/^const int max_message_count = 10;$/;"	v	typeref:typename:const int
max_message_count	asio/src/examples/cpp11/multicast/sender.cpp	/^constexpr int max_message_count = 10;$/;"	v	typeref:typename:int
max_ops	asio/include/asio/detail/dev_poll_reactor.hpp	/^    connect_op = 1, except_op = 2, max_ops = 3 };$/;"	e	enum:asio::detail::dev_poll_reactor::op_types
max_ops	asio/include/asio/detail/epoll_reactor.hpp	/^    connect_op = 1, except_op = 2, max_ops = 3 };$/;"	e	enum:asio::detail::epoll_reactor::op_types
max_ops	asio/include/asio/detail/kqueue_reactor.hpp	/^    connect_op = 1, except_op = 2, max_ops = 3 };$/;"	e	enum:asio::detail::kqueue_reactor::op_types
max_ops	asio/include/asio/detail/select_reactor.hpp	/^    max_select_ops = 3, connect_op = 3, max_ops = 4 };$/;"	e	enum:asio::detail::select_reactor::op_types
max_recent_msgs	asio/src/examples/cpp03/chat/chat_server.cpp	/^  enum { max_recent_msgs = 100 };$/;"	e	enum:chat_room::__anona5a3a8700103	file:
max_recent_msgs	asio/src/examples/cpp11/chat/chat_server.cpp	/^  enum { max_recent_msgs = 100 };$/;"	e	enum:chat_room::__anon8880b1ef0103	file:
max_recent_msgs	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  enum { max_recent_msgs = 100 };$/;"	e	enum:chat_room::__anon1b3871a60103	file:
max_select_ops	asio/include/asio/detail/select_reactor.hpp	/^    max_select_ops = 3, connect_op = 3, max_ops = 4 };$/;"	e	enum:asio::detail::select_reactor::op_types
max_signal_number	asio/include/asio/detail/signal_set_service.hpp	/^enum { max_signal_number = NSIG };$/;"	e	enum:asio::detail::__anon48311bdf0103
max_size	asio/include/asio/basic_streambuf.hpp	/^  std::size_t max_size() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_streambuf	typeref:typename:std::size_t
max_size	asio/include/asio/basic_streambuf.hpp	/^  std::size_t max_size() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_streambuf_ref	typeref:typename:std::size_t
max_size	asio/include/asio/buffer.hpp	/^  std::size_t max_size() const ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:std::size_t
max_size	asio/include/asio/buffer.hpp	/^  std::size_t max_size() const ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:std::size_t
max_size	asio/include/asio/ip/basic_resolver_results.hpp	/^  size_type max_size() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:size_type
max_size_	asio/include/asio/basic_streambuf.hpp	/^  std::size_t max_size_;$/;"	m	class:asio::basic_streambuf	typeref:typename:std::size_t
max_size_	asio/include/asio/buffer.hpp	/^  const std::size_t max_size_;$/;"	m	class:asio::dynamic_string_buffer	typeref:typename:const std::size_t
max_size_	asio/include/asio/buffer.hpp	/^  const std::size_t max_size_;$/;"	m	class:asio::dynamic_vector_buffer	typeref:typename:const std::size_t
max_timeout_msec	asio/include/asio/detail/win_iocp_io_context.hpp	/^    max_timeout_msec = 5 * 60 * 1000,$/;"	e	enum:asio::detail::win_iocp_io_context::__anon22c6e4590103
max_timeout_usec	asio/include/asio/detail/win_iocp_io_context.hpp	/^    max_timeout_usec = max_timeout_msec * 1000,$/;"	e	enum:asio::detail::win_iocp_io_context::__anon22c6e4590103
max_tls_record_size	asio/include/asio/ssl/detail/stream_core.hpp	/^  enum { max_tls_record_size = 17 * 1024 };$/;"	e	enum:asio::ssl::detail::stream_core::__anone16b693b0103
maybe_unlock_and_signal_one	asio/include/asio/detail/conditionally_enabled_event.hpp	/^  bool maybe_unlock_and_signal_one($/;"	f	class:asio::detail::conditionally_enabled_event	typeref:typename:bool
maybe_unlock_and_signal_one	asio/include/asio/detail/null_event.hpp	/^  bool maybe_unlock_and_signal_one(Lock&)$/;"	f	class:asio::detail::null_event	typeref:typename:bool
maybe_unlock_and_signal_one	asio/include/asio/detail/posix_event.hpp	/^  bool maybe_unlock_and_signal_one(Lock& lock)$/;"	f	class:asio::detail::posix_event	typeref:typename:bool
maybe_unlock_and_signal_one	asio/include/asio/detail/std_event.hpp	/^  bool maybe_unlock_and_signal_one(Lock& lock)$/;"	f	class:asio::detail::std_event	typeref:typename:bool
maybe_unlock_and_signal_one	asio/include/asio/detail/win_event.hpp	/^  bool maybe_unlock_and_signal_one(Lock& lock)$/;"	f	class:asio::detail::win_event	typeref:typename:bool
mem_index	asio/include/asio/detail/thread_info_base.hpp	/^    enum { mem_index = 0 };$/;"	e	enum:asio::detail::thread_info_base::default_tag::__anon6e8580630103
mem_index	asio/include/asio/detail/thread_info_base.hpp	/^    enum { mem_index = 1 };$/;"	e	enum:asio::detail::thread_info_base::awaitable_frame_tag::__anon6e8580630203
mem_index	asio/include/asio/detail/thread_info_base.hpp	/^    enum { mem_index = 2 };$/;"	e	enum:asio::detail::thread_info_base::executor_function_tag::__anon6e8580630303
member	asio/src/examples/cpp11/executors/actor.cpp	/^  explicit member(executor e)$/;"	f	class:member	file:
member	asio/src/examples/cpp11/executors/actor.cpp	/^class member : public actor$/;"	c	file:
member	asio/src/examples/cpp14/executors/actor.cpp	/^  explicit member(executor e)$/;"	f	class:member	file:
member	asio/src/examples/cpp14/executors/actor.cpp	/^class member : public actor$/;"	c	file:
memberdef	asio/src/doc/reference.xsl	/^<xsl:template match="memberdef" mode="class-detail">$/;"	m
memberdefs	asio/src/doc/reference.xsl	/^  <xsl:variable name="memberdefs" select="\/doxygen\/\/compounddef\/sectiondef\/memberdef[@id=$d/;"	v	matchedTemplate:ref[@kindref='member']
memory_	asio/src/examples/cpp03/allocation/server.cpp	/^  handler_memory& memory_;$/;"	m	class:custom_alloc_handler	typeref:typename:handler_memory &	file:
memory_	asio/src/examples/cpp03/allocation/server.cpp	/^  handler_memory& memory_;$/;"	m	class:handler_allocator	typeref:typename:handler_memory &	file:
memory_	asio/src/examples/cpp11/allocation/server.cpp	/^  handler_memory& memory_;$/;"	m	class:custom_alloc_handler	typeref:typename:handler_memory &	file:
memory_	asio/src/examples/cpp11/allocation/server.cpp	/^  handler_memory& memory_;$/;"	m	class:handler_allocator	typeref:typename:handler_memory &	file:
message	asio/include/asio/error_code.hpp	/^  std::string message() const$/;"	f	class:asio::error_code	typeref:typename:std::string
message_	asio/src/examples/cpp03/multicast/sender.cpp	/^  std::string message_;$/;"	m	class:sender	typeref:typename:std::string	file:
message_	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  std::string message_;$/;"	m	class:tcp_connection	typeref:typename:std::string	file:
message_	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  std::string message_;$/;"	m	class:tcp_connection	typeref:typename:std::string	file:
message_	asio/src/examples/cpp11/multicast/sender.cpp	/^  std::string message_;$/;"	m	class:sender	typeref:typename:std::string	file:
message_count_	asio/src/examples/cpp03/multicast/sender.cpp	/^  int message_count_;$/;"	m	class:sender	typeref:typename:int	file:
message_count_	asio/src/examples/cpp11/multicast/sender.cpp	/^  int message_count_;$/;"	m	class:sender	typeref:typename:int	file:
message_do_not_route	asio/include/asio/socket_base.hpp	/^  static const int message_do_not_route = implementation_defined;$/;"	m	class:asio::socket_base	typeref:typename:const int
message_end_of_record	asio/include/asio/socket_base.hpp	/^  static const int message_end_of_record = implementation_defined;$/;"	m	class:asio::socket_base	typeref:typename:const int
message_flags	asio/include/asio/socket_base.hpp	/^  typedef int message_flags;$/;"	t	class:asio::socket_base	typeref:typename:int
message_handler	asio/src/examples/cpp11/executors/actor.cpp	/^  void message_handler(Message msg, actor_address \/* from *\/)$/;"	f	class:receiver	typeref:typename:void	file:
message_handler	asio/src/examples/cpp11/executors/actor.cpp	/^class message_handler : public message_handler_base$/;"	c	file:
message_handler	asio/src/examples/cpp14/executors/actor.cpp	/^  void message_handler(Message msg, actor_address \/* from *\/)$/;"	f	class:receiver	typeref:typename:void	file:
message_handler	asio/src/examples/cpp14/executors/actor.cpp	/^class message_handler : public message_handler_base$/;"	c	file:
message_handler_base	asio/src/examples/cpp11/executors/actor.cpp	/^class message_handler_base$/;"	c	file:
message_handler_base	asio/src/examples/cpp14/executors/actor.cpp	/^class message_handler_base$/;"	c	file:
message_id	asio/src/examples/cpp11/executors/actor.cpp	/^  virtual const std::type_info& message_id() const$/;"	f	class:mf_message_handler	typeref:typename:const std::type_info &	file:
message_id	asio/src/examples/cpp14/executors/actor.cpp	/^  virtual const std::type_info& message_id() const$/;"	f	class:mf_message_handler	typeref:typename:const std::type_info &	file:
message_out_of_band	asio/include/asio/socket_base.hpp	/^  static const int message_out_of_band = implementation_defined;$/;"	m	class:asio::socket_base	typeref:typename:const int
message_peek	asio/include/asio/socket_base.hpp	/^  static const int message_peek = implementation_defined;$/;"	m	class:asio::socket_base	typeref:typename:const int
message_queue_	asio/src/examples/cpp11/executors/actor.cpp	/^  std::deque<Message> message_queue_;$/;"	m	class:receiver	typeref:typename:std::deque<Message>	file:
message_queue_	asio/src/examples/cpp14/executors/actor.cpp	/^  std::deque<Message> message_queue_;$/;"	m	class:receiver	typeref:typename:std::deque<Message>	file:
message_size	asio/include/asio/error.hpp	/^  message_size = ASIO_SOCKET_ERROR(EMSGSIZE),$/;"	e	enum:asio::error::basic_errors
method	asio/include/asio/ssl/context_base.hpp	/^  enum method$/;"	g	class:asio::ssl::context_base
method	asio/src/examples/cpp03/http/server/request.hpp	/^  std::string method;$/;"	m	struct:http::server::request	typeref:typename:std::string
method	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    method,$/;"	e	enum:http::server::request_parser::state
method	asio/src/examples/cpp03/http/server2/request.hpp	/^  std::string method;$/;"	m	struct:http::server2::request	typeref:typename:std::string
method	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    method,$/;"	e	enum:http::server2::request_parser::state
method	asio/src/examples/cpp03/http/server3/request.hpp	/^  std::string method;$/;"	m	struct:http::server3::request	typeref:typename:std::string
method	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    method,$/;"	e	enum:http::server3::request_parser::state
method	asio/src/examples/cpp03/http/server4/request.hpp	/^  std::string method;$/;"	m	struct:http::server4::request	typeref:typename:std::string
method	asio/src/examples/cpp11/http/server/request.hpp	/^  std::string method;$/;"	m	struct:http::server::request	typeref:typename:std::string
method	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    method,$/;"	e	enum:http::server::request_parser::state
method_start	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    method_start,$/;"	e	enum:http::server::request_parser::state
method_start	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    method_start,$/;"	e	enum:http::server2::request_parser::state
method_start	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    method_start,$/;"	e	enum:http::server3::request_parser::state
method_start	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    method_start,$/;"	e	enum:http::server::request_parser::state
mf_message_handler	asio/src/examples/cpp11/executors/actor.cpp	/^  mf_message_handler(void (Actor::* mf)(Message, actor_address), Actor* a)$/;"	f	class:mf_message_handler	file:
mf_message_handler	asio/src/examples/cpp11/executors/actor.cpp	/^class mf_message_handler : public message_handler<Message>$/;"	c	file:
mf_message_handler	asio/src/examples/cpp14/executors/actor.cpp	/^  mf_message_handler(void (Actor::* mf)(Message, actor_address), Actor* a)$/;"	f	class:mf_message_handler	file:
mf_message_handler	asio/src/examples/cpp14/executors/actor.cpp	/^class mf_message_handler : public message_handler<Message>$/;"	c	file:
middle_priority_handler	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^void middle_priority_handler(const asio::error_code& \/*ec*\/)$/;"	f	typeref:typename:void
middle_priority_handler	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^void middle_priority_handler(const asio::error_code& \/*ec*\/)$/;"	f	typeref:typename:void
might_have_pending_waits	asio/include/asio/detail/deadline_timer_service.hpp	/^    bool might_have_pending_waits;$/;"	m	struct:asio::detail::deadline_timer_service::implementation_type	typeref:typename:bool
mime_type	asio/src/examples/cpp03/http/server/mime_types.cpp	/^  const char* mime_type;$/;"	m	struct:http::server::mime_types::mapping	typeref:typename:const char *	file:
mime_type	asio/src/examples/cpp03/http/server2/mime_types.cpp	/^  const char* mime_type;$/;"	m	struct:http::server2::mime_types::mapping	typeref:typename:const char *	file:
mime_type	asio/src/examples/cpp03/http/server3/mime_types.cpp	/^  const char* mime_type;$/;"	m	struct:http::server3::mime_types::mapping	typeref:typename:const char *	file:
mime_type	asio/src/examples/cpp03/http/server4/mime_types.cpp	/^  const char* mime_type;$/;"	m	struct:http::server4::mime_types::mapping	typeref:typename:const char *	file:
mime_type	asio/src/examples/cpp11/http/server/mime_types.cpp	/^  const char* mime_type;$/;"	m	struct:http::server::mime_types::mapping	typeref:typename:const char *	file:
mime_types	asio/src/examples/cpp03/http/server/mime_types.cpp	/^namespace mime_types {$/;"	n	namespace:http::server	file:
mime_types	asio/src/examples/cpp03/http/server/mime_types.hpp	/^namespace mime_types {$/;"	n	namespace:http::server
mime_types	asio/src/examples/cpp03/http/server2/mime_types.cpp	/^namespace mime_types {$/;"	n	namespace:http::server2	file:
mime_types	asio/src/examples/cpp03/http/server2/mime_types.hpp	/^namespace mime_types {$/;"	n	namespace:http::server2
mime_types	asio/src/examples/cpp03/http/server3/mime_types.cpp	/^namespace mime_types {$/;"	n	namespace:http::server3	file:
mime_types	asio/src/examples/cpp03/http/server3/mime_types.hpp	/^namespace mime_types {$/;"	n	namespace:http::server3
mime_types	asio/src/examples/cpp03/http/server4/mime_types.cpp	/^namespace mime_types {$/;"	n	namespace:http::server4	file:
mime_types	asio/src/examples/cpp03/http/server4/mime_types.hpp	/^namespace mime_types {$/;"	n	namespace:http::server4
mime_types	asio/src/examples/cpp11/http/server/mime_types.cpp	/^namespace mime_types {$/;"	n	namespace:http::server	file:
mime_types	asio/src/examples/cpp11/http/server/mime_types.hpp	/^namespace mime_types {$/;"	n	namespace:http::server
minimum_	asio/include/asio/completion_condition.hpp	/^  std::size_t minimum_;$/;"	m	class:asio::detail::transfer_at_least_t	typeref:typename:std::size_t
misc_errors	asio/include/asio/error.hpp	/^enum misc_errors$/;"	g	namespace:asio::error
misc_strings	asio/src/examples/cpp03/http/server/reply.cpp	/^namespace misc_strings {$/;"	n	namespace:http::server	file:
misc_strings	asio/src/examples/cpp03/http/server2/reply.cpp	/^namespace misc_strings {$/;"	n	namespace:http::server2	file:
misc_strings	asio/src/examples/cpp03/http/server3/reply.cpp	/^namespace misc_strings {$/;"	n	namespace:http::server3	file:
misc_strings	asio/src/examples/cpp03/http/server4/reply.cpp	/^namespace misc_strings {$/;"	n	namespace:http::server4	file:
misc_strings	asio/src/examples/cpp11/http/server/reply.cpp	/^namespace misc_strings {$/;"	n	namespace:http::server	file:
modified_	asio/include/asio/coroutine.hpp	/^  bool modified_;$/;"	m	class:asio::detail::coroutine_ref	typeref:typename:bool
more_fragments	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  bool more_fragments() const { return (rep_[6] & 0x20) != 0; }$/;"	f	class:ipv4_header	typeref:typename:bool
move_accept_handler	asio/src/tests/unit/ip/tcp.cpp	/^  move_accept_handler() {}$/;"	f	struct:ip_tcp_acceptor_compile::move_accept_handler	file:
move_accept_handler	asio/src/tests/unit/ip/tcp.cpp	/^  move_accept_handler(const move_accept_handler&) {}$/;"	f	struct:ip_tcp_acceptor_compile::move_accept_handler	file:
move_accept_handler	asio/src/tests/unit/ip/tcp.cpp	/^  move_accept_handler(move_accept_handler&&) {}$/;"	f	struct:ip_tcp_acceptor_compile::move_accept_handler	file:
move_accept_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct move_accept_handler$/;"	s	namespace:ip_tcp_acceptor_compile	file:
move_accept_ioc_handler	asio/src/tests/unit/ip/tcp.cpp	/^  move_accept_ioc_handler() {}$/;"	f	struct:ip_tcp_acceptor_compile::move_accept_ioc_handler	file:
move_accept_ioc_handler	asio/src/tests/unit/ip/tcp.cpp	/^  move_accept_ioc_handler(const move_accept_handler&) {}$/;"	f	struct:ip_tcp_acceptor_compile::move_accept_ioc_handler	file:
move_accept_ioc_handler	asio/src/tests/unit/ip/tcp.cpp	/^  move_accept_ioc_handler(move_accept_handler&&) {}$/;"	f	struct:ip_tcp_acceptor_compile::move_accept_ioc_handler	file:
move_accept_ioc_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct move_accept_ioc_handler$/;"	s	namespace:ip_tcp_acceptor_compile	file:
move_assign	asio/include/asio/detail/deadline_timer_service.hpp	/^  void move_assign(implementation_type& impl,$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:void
move_assign	asio/include/asio/detail/null_socket_service.hpp	/^  void move_assign(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
move_assign	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  void move_assign(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:void
move_assign	asio/include/asio/detail/reactive_socket_service.hpp	/^  void move_assign(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
move_assign	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  void move_assign(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:void
move_assign	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void move_assign(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
move_assign	asio/include/asio/detail/winrt_resolver_service.hpp	/^  void move_assign(implementation_type&,$/;"	f	class:asio::detail::winrt_resolver_service	typeref:typename:void
move_assign	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  void move_assign(implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:void
move_binder1	asio/include/asio/detail/bind_handler.hpp	/^  move_binder1(int, ASIO_MOVE_ARG(Handler) handler,$/;"	f	class:asio::detail::move_binder1
move_binder1	asio/include/asio/detail/bind_handler.hpp	/^  move_binder1(move_binder1&& other)$/;"	f	class:asio::detail::move_binder1
move_binder1	asio/include/asio/detail/bind_handler.hpp	/^class move_binder1$/;"	c	namespace:asio::detail
move_binder2	asio/include/asio/detail/bind_handler.hpp	/^  move_binder2(int, ASIO_MOVE_ARG(Handler) handler,$/;"	f	class:asio::detail::move_binder2
move_binder2	asio/include/asio/detail/bind_handler.hpp	/^  move_binder2(move_binder2&& other)$/;"	f	class:asio::detail::move_binder2
move_binder2	asio/include/asio/detail/bind_handler.hpp	/^class move_binder2$/;"	c	namespace:asio::detail
move_construct	asio/include/asio/detail/deadline_timer_service.hpp	/^  void move_construct(implementation_type& impl,$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:void
move_construct	asio/include/asio/detail/null_socket_service.hpp	/^  void move_construct(implementation_type&, implementation_type&)$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
move_construct	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  void move_construct(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:void
move_construct	asio/include/asio/detail/reactive_socket_service.hpp	/^  void move_construct(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
move_construct	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  void move_construct(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:void
move_construct	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void move_construct(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
move_construct	asio/include/asio/detail/winrt_resolver_service.hpp	/^  void move_construct(implementation_type&,$/;"	f	class:asio::detail::winrt_resolver_service	typeref:typename:void
move_construct	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  void move_construct(implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:void
move_timer	asio/include/asio/detail/impl/dev_poll_reactor.hpp	/^void dev_poll_reactor::move_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::dev_poll_reactor	typeref:typename:void
move_timer	asio/include/asio/detail/impl/epoll_reactor.hpp	/^void epoll_reactor::move_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::epoll_reactor	typeref:typename:void
move_timer	asio/include/asio/detail/impl/kqueue_reactor.hpp	/^void kqueue_reactor::move_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::kqueue_reactor	typeref:typename:void
move_timer	asio/include/asio/detail/impl/select_reactor.hpp	/^void select_reactor::move_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::select_reactor	typeref:typename:void
move_timer	asio/include/asio/detail/impl/win_iocp_io_context.hpp	/^void win_iocp_io_context::move_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
move_timer	asio/include/asio/detail/impl/winrt_timer_scheduler.hpp	/^void winrt_timer_scheduler::move_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::winrt_timer_scheduler	typeref:typename:void
move_timer	asio/include/asio/detail/timer_queue.hpp	/^  void move_timer(per_timer_data& target, per_timer_data& source)$/;"	f	class:asio::detail::timer_queue	typeref:typename:void
moved_permanently	asio/src/examples/cpp03/http/server/reply.cpp	/^const char moved_permanently[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
moved_permanently	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string moved_permanently =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
moved_permanently	asio/src/examples/cpp03/http/server/reply.hpp	/^    moved_permanently = 301,$/;"	e	enum:http::server::reply::status_type
moved_permanently	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char moved_permanently[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
moved_permanently	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string moved_permanently =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
moved_permanently	asio/src/examples/cpp03/http/server2/reply.hpp	/^    moved_permanently = 301,$/;"	e	enum:http::server2::reply::status_type
moved_permanently	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char moved_permanently[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
moved_permanently	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string moved_permanently =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
moved_permanently	asio/src/examples/cpp03/http/server3/reply.hpp	/^    moved_permanently = 301,$/;"	e	enum:http::server3::reply::status_type
moved_permanently	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char moved_permanently[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
moved_permanently	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string moved_permanently =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
moved_permanently	asio/src/examples/cpp03/http/server4/reply.hpp	/^    moved_permanently = 301,$/;"	e	enum:http::server4::reply::status_type
moved_permanently	asio/src/examples/cpp11/http/server/reply.cpp	/^const char moved_permanently[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
moved_permanently	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string moved_permanently =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
moved_permanently	asio/src/examples/cpp11/http/server/reply.hpp	/^    moved_permanently = 301,$/;"	e	enum:http::server::reply::status_type
moved_temporarily	asio/src/examples/cpp03/http/server/reply.cpp	/^const char moved_temporarily[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
moved_temporarily	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string moved_temporarily =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
moved_temporarily	asio/src/examples/cpp03/http/server/reply.hpp	/^    moved_temporarily = 302,$/;"	e	enum:http::server::reply::status_type
moved_temporarily	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char moved_temporarily[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
moved_temporarily	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string moved_temporarily =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
moved_temporarily	asio/src/examples/cpp03/http/server2/reply.hpp	/^    moved_temporarily = 302,$/;"	e	enum:http::server2::reply::status_type
moved_temporarily	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char moved_temporarily[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
moved_temporarily	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string moved_temporarily =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
moved_temporarily	asio/src/examples/cpp03/http/server3/reply.hpp	/^    moved_temporarily = 302,$/;"	e	enum:http::server3::reply::status_type
moved_temporarily	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char moved_temporarily[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
moved_temporarily	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string moved_temporarily =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
moved_temporarily	asio/src/examples/cpp03/http/server4/reply.hpp	/^    moved_temporarily = 302,$/;"	e	enum:http::server4::reply::status_type
moved_temporarily	asio/src/examples/cpp11/http/server/reply.cpp	/^const char moved_temporarily[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
moved_temporarily	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string moved_temporarily =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
moved_temporarily	asio/src/examples/cpp11/http/server/reply.hpp	/^    moved_temporarily = 302,$/;"	e	enum:http::server::reply::status_type
multicast	asio/include/asio/ip/multicast.hpp	/^namespace multicast {$/;"	n	namespace:asio::ip
multicast_enable_loopback	asio/include/asio/ip/detail/socket_option.hpp	/^  explicit multicast_enable_loopback(bool v)$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback
multicast_enable_loopback	asio/include/asio/ip/detail/socket_option.hpp	/^  multicast_enable_loopback()$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback
multicast_enable_loopback	asio/include/asio/ip/detail/socket_option.hpp	/^class multicast_enable_loopback$/;"	c	namespace:asio::ip::detail::socket_option
multicast_hops	asio/include/asio/ip/detail/socket_option.hpp	/^  explicit multicast_hops(int v)$/;"	f	class:asio::ip::detail::socket_option::multicast_hops
multicast_hops	asio/include/asio/ip/detail/socket_option.hpp	/^  multicast_hops()$/;"	f	class:asio::ip::detail::socket_option::multicast_hops
multicast_hops	asio/include/asio/ip/detail/socket_option.hpp	/^class multicast_hops$/;"	c	namespace:asio::ip::detail::socket_option
multicast_port	asio/src/examples/cpp03/multicast/receiver.cpp	/^const short multicast_port = 30001;$/;"	v	typeref:typename:const short
multicast_port	asio/src/examples/cpp03/multicast/sender.cpp	/^const short multicast_port = 30001;$/;"	v	typeref:typename:const short
multicast_port	asio/src/examples/cpp11/multicast/receiver.cpp	/^constexpr short multicast_port = 30001;$/;"	v	typeref:typename:short
multicast_port	asio/src/examples/cpp11/multicast/sender.cpp	/^constexpr short multicast_port = 30001;$/;"	v	typeref:typename:short
multicast_receiver_SOURCES	asio/src/examples/cpp03/Makefile.am	/^multicast_receiver_SOURCES = multicast\/receiver.cpp$/;"	m
multicast_receiver_SOURCES	asio/src/examples/cpp11/Makefile.am	/^multicast_receiver_SOURCES = multicast\/receiver.cpp$/;"	m
multicast_request	asio/include/asio/ip/detail/socket_option.hpp	/^  explicit multicast_request($/;"	f	class:asio::ip::detail::socket_option::multicast_request
multicast_request	asio/include/asio/ip/detail/socket_option.hpp	/^  explicit multicast_request(const address& multicast_address)$/;"	f	class:asio::ip::detail::socket_option::multicast_request
multicast_request	asio/include/asio/ip/detail/socket_option.hpp	/^  explicit multicast_request(const address_v4& multicast_address,$/;"	f	class:asio::ip::detail::socket_option::multicast_request
multicast_request	asio/include/asio/ip/detail/socket_option.hpp	/^  multicast_request()$/;"	f	class:asio::ip::detail::socket_option::multicast_request
multicast_request	asio/include/asio/ip/detail/socket_option.hpp	/^class multicast_request$/;"	c	namespace:asio::ip::detail::socket_option
multicast_sender_SOURCES	asio/src/examples/cpp03/Makefile.am	/^multicast_sender_SOURCES = multicast\/sender.cpp$/;"	m
multicast_sender_SOURCES	asio/src/examples/cpp11/Makefile.am	/^multicast_sender_SOURCES = multicast\/sender.cpp$/;"	m
multiple_buffers	asio/include/asio/buffer.hpp	/^struct multiple_buffers {};$/;"	s	namespace:asio::detail
multiple_choices	asio/src/examples/cpp03/http/server/reply.cpp	/^const char multiple_choices[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
multiple_choices	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string multiple_choices =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
multiple_choices	asio/src/examples/cpp03/http/server/reply.hpp	/^    multiple_choices = 300,$/;"	e	enum:http::server::reply::status_type
multiple_choices	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char multiple_choices[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
multiple_choices	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string multiple_choices =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
multiple_choices	asio/src/examples/cpp03/http/server2/reply.hpp	/^    multiple_choices = 300,$/;"	e	enum:http::server2::reply::status_type
multiple_choices	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char multiple_choices[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
multiple_choices	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string multiple_choices =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
multiple_choices	asio/src/examples/cpp03/http/server3/reply.hpp	/^    multiple_choices = 300,$/;"	e	enum:http::server3::reply::status_type
multiple_choices	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char multiple_choices[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
multiple_choices	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string multiple_choices =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
multiple_choices	asio/src/examples/cpp03/http/server4/reply.hpp	/^    multiple_choices = 300,$/;"	e	enum:http::server4::reply::status_type
multiple_choices	asio/src/examples/cpp11/http/server/reply.cpp	/^const char multiple_choices[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
multiple_choices	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string multiple_choices =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
multiple_choices	asio/src/examples/cpp11/http/server/reply.hpp	/^    multiple_choices = 300,$/;"	e	enum:http::server::reply::status_type
mutable_buffer	asio/include/asio/buffer.hpp	/^  mutable_buffer() ASIO_NOEXCEPT$/;"	f	class:asio::mutable_buffer
mutable_buffer	asio/include/asio/buffer.hpp	/^  mutable_buffer(void* data, std::size_t size) ASIO_NOEXCEPT$/;"	f	class:asio::mutable_buffer
mutable_buffer	asio/include/asio/buffer.hpp	/^  mutable_buffer(void* data, std::size_t size,$/;"	f	class:asio::mutable_buffer
mutable_buffer	asio/include/asio/buffer.hpp	/^class mutable_buffer$/;"	c	namespace:asio
mutable_buffer	asio/include/asio/buffers_iterator.hpp	/^          mutable_buffer>::value$/;"	e	enum:asio::detail::buffers_iterator_types::__anon4c1f04ba0103
mutable_buffers_1	asio/include/asio/buffer.hpp	/^  explicit mutable_buffers_1(const mutable_buffer& b) ASIO_NOEXCEPT$/;"	f	class:asio::mutable_buffers_1
mutable_buffers_1	asio/include/asio/buffer.hpp	/^  mutable_buffers_1(void* data, std::size_t size) ASIO_NOEXCEPT$/;"	f	class:asio::mutable_buffers_1
mutable_buffers_1	asio/include/asio/buffer.hpp	/^  mutable_buffers_1(void* data, std::size_t size,$/;"	f	class:asio::mutable_buffers_1
mutable_buffers_1	asio/include/asio/buffer.hpp	/^class mutable_buffers_1$/;"	c	namespace:asio
mutable_buffers_type	asio/include/asio/basic_streambuf.hpp	/^    mutable_buffers_type;$/;"	t	class:asio::basic_streambuf_ref	typeref:typename:basic_streambuf<Allocator>::mutable_buffers_type
mutable_buffers_type	asio/include/asio/basic_streambuf.hpp	/^  typedef implementation_defined mutable_buffers_type;$/;"	t	class:asio::basic_streambuf	typeref:typename:implementation_defined
mutable_buffers_type	asio/include/asio/buffer.hpp	/^  typedef ASIO_MUTABLE_BUFFER mutable_buffers_type;$/;"	t	class:asio::dynamic_string_buffer	typeref:typename:ASIO_MUTABLE_BUFFER
mutable_buffers_type	asio/include/asio/buffer.hpp	/^  typedef ASIO_MUTABLE_BUFFER mutable_buffers_type;$/;"	t	class:asio::dynamic_vector_buffer	typeref:typename:ASIO_MUTABLE_BUFFER
mutable_write_data	asio/src/tests/unit/write.cpp	/^static char mutable_write_data[]$/;"	v	typeref:typename:char[]	file:
mutable_write_data	asio/src/tests/unit/write_at.cpp	/^static char mutable_write_data[]$/;"	v	typeref:typename:char[]	file:
mutex	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    asio::detail::mutex& mutex()$/;"	f	class:asio::detail::conditionally_enabled_mutex::scoped_lock	typeref:typename:asio::detail::mutex &
mutex	asio/include/asio/detail/epoll_reactor.hpp	/^  typedef conditionally_enabled_mutex mutex;$/;"	t	class:asio::detail::epoll_reactor	typeref:typename:conditionally_enabled_mutex
mutex	asio/include/asio/detail/kqueue_reactor.hpp	/^  typedef conditionally_enabled_mutex mutex;$/;"	t	class:asio::detail::kqueue_reactor	typeref:typename:conditionally_enabled_mutex
mutex	asio/include/asio/detail/mutex.hpp	/^typedef null_mutex mutex;$/;"	t	namespace:asio::detail	typeref:typename:null_mutex
mutex	asio/include/asio/detail/scheduler.hpp	/^  typedef conditionally_enabled_mutex mutex;$/;"	t	class:asio::detail::scheduler	typeref:typename:conditionally_enabled_mutex
mutex	asio/include/asio/detail/scoped_lock.hpp	/^  Mutex& mutex()$/;"	f	class:asio::detail::scoped_lock	typeref:typename:Mutex &
mutex_	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    conditionally_enabled_mutex& mutex_;$/;"	m	class:asio::detail::conditionally_enabled_mutex::scoped_lock	typeref:typename:conditionally_enabled_mutex &
mutex_	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^  asio::detail::mutex mutex_;$/;"	m	class:asio::detail::conditionally_enabled_mutex	typeref:typename:asio::detail::mutex
mutex_	asio/include/asio/detail/dev_poll_reactor.hpp	/^  asio::detail::mutex mutex_;$/;"	m	class:asio::detail::dev_poll_reactor	typeref:typename:asio::detail::mutex
mutex_	asio/include/asio/detail/epoll_reactor.hpp	/^    mutex mutex_;$/;"	m	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:mutex
mutex_	asio/include/asio/detail/epoll_reactor.hpp	/^  mutex mutex_;$/;"	m	class:asio::detail::epoll_reactor	typeref:typename:mutex
mutex_	asio/include/asio/detail/kqueue_reactor.hpp	/^    mutex mutex_;$/;"	m	struct:asio::detail::kqueue_reactor::descriptor_state	typeref:typename:mutex
mutex_	asio/include/asio/detail/kqueue_reactor.hpp	/^  mutex mutex_;$/;"	m	class:asio::detail::kqueue_reactor	typeref:typename:mutex
mutex_	asio/include/asio/detail/resolver_service_base.hpp	/^  asio::detail::mutex mutex_;$/;"	m	class:asio::detail::resolver_service_base	typeref:typename:asio::detail::mutex
mutex_	asio/include/asio/detail/scheduler.hpp	/^  mutable mutex mutex_;$/;"	m	class:asio::detail::scheduler	typeref:typename:mutex
mutex_	asio/include/asio/detail/scoped_lock.hpp	/^  Mutex& mutex_;$/;"	m	class:asio::detail::scoped_lock	typeref:typename:Mutex &
mutex_	asio/include/asio/detail/select_reactor.hpp	/^  asio::detail::mutex mutex_;$/;"	m	class:asio::detail::select_reactor	typeref:typename:asio::detail::mutex
mutex_	asio/include/asio/detail/service_registry.hpp	/^  mutable asio::detail::mutex mutex_;$/;"	m	class:asio::detail::service_registry	typeref:typename:asio::detail::mutex
mutex_	asio/include/asio/detail/std_mutex.hpp	/^  std::mutex mutex_;$/;"	m	class:asio::detail::std_mutex	typeref:typename:std::mutex
mutex_	asio/include/asio/detail/std_static_mutex.hpp	/^  std::mutex mutex_;$/;"	m	class:asio::detail::std_static_mutex	typeref:typename:std::mutex
mutex_	asio/include/asio/detail/strand_executor_service.hpp	/^    mutex* mutex_;$/;"	m	class:asio::detail::strand_executor_service::strand_impl	typeref:typename:mutex *
mutex_	asio/include/asio/detail/strand_executor_service.hpp	/^  mutex mutex_;$/;"	m	class:asio::detail::strand_executor_service	typeref:typename:mutex
mutex_	asio/include/asio/detail/strand_service.hpp	/^    asio::detail::mutex mutex_;$/;"	m	class:asio::detail::strand_service::strand_impl	typeref:typename:asio::detail::mutex
mutex_	asio/include/asio/detail/strand_service.hpp	/^  asio::detail::mutex mutex_;$/;"	m	class:asio::detail::strand_service	typeref:typename:asio::detail::mutex
mutex_	asio/include/asio/detail/win_global.hpp	/^  static static_mutex mutex_;$/;"	m	struct:asio::detail::win_global_impl	typeref:typename:static_mutex
mutex_	asio/include/asio/detail/win_global.hpp	/^static_mutex win_global_impl<T>::mutex_ = ASIO_STATIC_MUTEX_INIT;$/;"	m	class:asio::detail::win_global_impl<T>	typeref:typename:static_mutex
mutex_	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  mutex mutex_;$/;"	m	class:asio::detail::win_iocp_handle_service	typeref:typename:mutex
mutex_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  asio::detail::mutex mutex_;$/;"	m	class:asio::detail::win_iocp_socket_service_base	typeref:typename:asio::detail::mutex
mutex_	asio/include/asio/detail/win_object_handle_service.hpp	/^  mutex mutex_;$/;"	m	class:asio::detail::win_object_handle_service	typeref:typename:mutex
mutex_	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  asio::detail::mutex mutex_;$/;"	m	class:asio::detail::winrt_ssocket_service_base	typeref:typename:asio::detail::mutex
mutex_	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^  asio::detail::mutex mutex_;$/;"	m	class:asio::detail::winrt_timer_scheduler	typeref:typename:asio::detail::mutex
mutex_	asio/src/examples/cpp11/executors/actor.cpp	/^  std::mutex mutex_;$/;"	m	class:receiver	typeref:typename:std::mutex	file:
mutex_	asio/src/examples/cpp11/executors/fork_join.cpp	/^  std::mutex mutex_;$/;"	m	class:fork_join_pool	typeref:typename:std::mutex	file:
mutex_	asio/src/examples/cpp11/executors/pipeline.cpp	/^    std::mutex mutex_;$/;"	m	class:thread_executor::thread_bag	typeref:typename:std::mutex	file:
mutex_	asio/src/examples/cpp11/executors/pipeline.cpp	/^  std::mutex mutex_;$/;"	m	class:queue_impl_base	typeref:typename:std::mutex	file:
mutex_	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  std::mutex mutex_;$/;"	m	class:priority_scheduler	typeref:typename:std::mutex	file:
mutex_	asio/src/examples/cpp14/executors/actor.cpp	/^  std::mutex mutex_;$/;"	m	class:receiver	typeref:typename:std::mutex	file:
mutex_	asio/src/examples/cpp14/executors/fork_join.cpp	/^  std::mutex mutex_;$/;"	m	class:fork_join_pool	typeref:typename:std::mutex	file:
mutex_	asio/src/examples/cpp14/executors/pipeline.cpp	/^    std::mutex mutex_;$/;"	m	class:thread_executor::thread_bag	typeref:typename:std::mutex	file:
mutex_	asio/src/examples/cpp14/executors/pipeline.cpp	/^  std::mutex mutex_;$/;"	m	class:queue_impl_base	typeref:typename:std::mutex	file:
mutex_	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  std::mutex mutex_;$/;"	m	class:priority_scheduler	typeref:typename:std::mutex	file:
mutex_	asio/src/tests/performance/client.cpp	/^  asio::detail::mutex mutex_;$/;"	m	class:stats	typeref:typename:asio::detail::mutex	file:
mutexes_	asio/include/asio/detail/strand_executor_service.hpp	/^  scoped_ptr<mutex> mutexes_[num_mutexes];$/;"	m	class:asio::detail::strand_executor_service	typeref:typename:scoped_ptr<mutex>[]
name	asio/include/asio/detail/io_control.hpp	/^  int name() const$/;"	f	class:asio::detail::io_control::bytes_readable	typeref:typename:int
name	asio/include/asio/detail/socket_option.hpp	/^  int name(const Protocol&) const$/;"	f	class:asio::detail::socket_option::boolean	typeref:typename:int
name	asio/include/asio/detail/socket_option.hpp	/^  int name(const Protocol&) const$/;"	f	class:asio::detail::socket_option::integer	typeref:typename:int
name	asio/include/asio/detail/socket_option.hpp	/^  int name(const Protocol&) const$/;"	f	class:asio::detail::socket_option::linger	typeref:typename:int
name	asio/include/asio/ip/detail/socket_option.hpp	/^  int name(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:int
name	asio/include/asio/ip/detail/socket_option.hpp	/^  int name(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:int
name	asio/include/asio/ip/detail/socket_option.hpp	/^  int name(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_request	typeref:typename:int
name	asio/include/asio/ip/detail/socket_option.hpp	/^  int name(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::network_interface	typeref:typename:int
name	asio/include/asio/ip/detail/socket_option.hpp	/^  int name(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::unicast_hops	typeref:typename:int
name	asio/src/doc/reference.xsl	/^  <xsl:param name="name"\/>$/;"	p	namedTemplate:cleanup-type
name	asio/src/doc/reference.xsl	/^  <xsl:param name="name"\/>$/;"	p	namedTemplate:make-id
name	asio/src/doc/reference.xsl	/^  <xsl:param name="name"\/>$/;"	p	namedTemplate:strip-asio-ns
name	asio/src/doc/reference.xsl	/^  <xsl:param name="name"\/>$/;"	p	namedTemplate:strip-ns
name	asio/src/doc/reference.xsl	/^  <xsl:variable name="name" select="name"\/>$/;"	v	namedTemplate:typedef
name	asio/src/doc/reference.xsl	/^  <xsl:variable name="name">$/;"	v	matchedTemplate:memberdef
name	asio/src/doc/reference.xsl	/^  <xsl:variable name="name">$/;"	v	matchedTemplate:ref[@kindref='compound']
name	asio/src/doc/reference.xsl	/^  <xsl:variable name="name">$/;"	v	namedTemplate:class-tables
name	asio/src/doc/reference.xsl	/^  <xsl:variable name="name">$/;"	v	namedTemplate:namespace-memberdef
name	asio/src/doc/tutorial.xsl	/^            <xsl:variable name="name">$/;"	v	matchedTemplate:ref[@kindref='member']
name	asio/src/doc/tutorial.xsl	/^  <xsl:param name="name"\/>$/;"	p	namedTemplate:make-id
name	asio/src/doc/tutorial.xsl	/^  <xsl:param name="name"\/>$/;"	p	namedTemplate:strip-asio-ns
name	asio/src/doc/tutorial.xsl	/^  <xsl:variable name="name">$/;"	v	matchedTemplate:ref[@kindref='compound']
name	asio/src/examples/cpp03/http/server/header.hpp	/^  std::string name;$/;"	m	struct:http::server::header	typeref:typename:std::string
name	asio/src/examples/cpp03/http/server2/header.hpp	/^  std::string name;$/;"	m	struct:http::server2::header	typeref:typename:std::string
name	asio/src/examples/cpp03/http/server3/header.hpp	/^  std::string name;$/;"	m	struct:http::server3::header	typeref:typename:std::string
name	asio/src/examples/cpp03/http/server4/header.hpp	/^  std::string name;$/;"	m	struct:http::server4::header	typeref:typename:std::string
name	asio/src/examples/cpp03/serialization/stock.hpp	/^  std::string name;$/;"	m	struct:s11n_example::stock	typeref:typename:std::string
name	asio/src/examples/cpp11/http/server/header.hpp	/^  std::string name;$/;"	m	struct:http::server::header	typeref:typename:std::string
name	asio/src/tests/unit/archetypes/gettable_socket_option.hpp	/^  int name(const Protocol&) const$/;"	f	class:archetypes::gettable_socket_option	typeref:typename:int
name	asio/src/tests/unit/archetypes/io_control_command.hpp	/^  int name() const$/;"	f	class:archetypes::io_control_command	typeref:typename:int
name	asio/src/tests/unit/archetypes/settable_socket_option.hpp	/^  int name(const Protocol&) const$/;"	f	class:archetypes::settable_socket_option	typeref:typename:int
name_too_long	asio/include/asio/error.hpp	/^  name_too_long = ASIO_SOCKET_ERROR(ENAMETOOLONG),$/;"	e	enum:asio::error::basic_errors
name_value_separator	asio/src/examples/cpp03/http/server/reply.cpp	/^const char name_value_separator[] = { ':', ' ' };$/;"	v	namespace:http::server::misc_strings	typeref:typename:const char[]
name_value_separator	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char name_value_separator[] = { ':', ' ' };$/;"	v	namespace:http::server2::misc_strings	typeref:typename:const char[]
name_value_separator	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char name_value_separator[] = { ':', ' ' };$/;"	v	namespace:http::server3::misc_strings	typeref:typename:const char[]
name_value_separator	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char name_value_separator[] = { ':', ' ' };$/;"	v	namespace:http::server4::misc_strings	typeref:typename:const char[]
name_value_separator	asio/src/examples/cpp11/http/server/reply.cpp	/^const char name_value_separator[] = { ':', ' ' };$/;"	v	namespace:http::server::misc_strings	typeref:typename:const char[]
namespace-memberdef	asio/src/doc/reference.xsl	/^<xsl:template name="namespace-memberdef">$/;"	n
native_buffer_type	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  typedef Windows::Storage::Streams::IBuffer^ native_buffer_type;$/;"	t	class:asio::detail::buffer_sequence_adapter_base	typeref:typename:Windows::Storage::Streams::IBuffer^
native_handle	asio/include/asio/basic_serial_port.hpp	/^  native_handle_type native_handle()$/;"	f	class:asio::basic_serial_port	typeref:typename:native_handle_type
native_handle	asio/include/asio/basic_socket.hpp	/^  native_handle_type native_handle()$/;"	f	class:asio::basic_socket	typeref:typename:native_handle_type
native_handle	asio/include/asio/basic_socket_acceptor.hpp	/^  native_handle_type native_handle()$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:native_handle_type
native_handle	asio/include/asio/detail/null_socket_service.hpp	/^  native_handle_type native_handle(implementation_type&)$/;"	f	class:asio::detail::null_socket_service	typeref:typename:native_handle_type
native_handle	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  native_handle_type native_handle(const implementation_type& impl) const$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:native_handle_type
native_handle	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  native_handle_type native_handle(implementation_type& impl)$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:native_handle_type
native_handle	asio/include/asio/detail/reactive_socket_service.hpp	/^  native_handle_type native_handle(implementation_type& impl)$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:native_handle_type
native_handle	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  native_handle_type native_handle(base_implementation_type& impl)$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:native_handle_type
native_handle	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  native_handle_type native_handle(const implementation_type& impl) const$/;"	f	class:asio::detail::win_iocp_handle_service	typeref:typename:native_handle_type
native_handle	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  native_handle_type native_handle(implementation_type& impl)$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:native_handle_type
native_handle	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  native_handle_type native_handle(implementation_type& impl)$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:native_handle_type
native_handle	asio/include/asio/detail/win_object_handle_service.hpp	/^  native_handle_type native_handle(const implementation_type& impl) const$/;"	f	class:asio::detail::win_object_handle_service	typeref:typename:native_handle_type
native_handle	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  native_handle_type native_handle(base_implementation_type& impl)$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:native_handle_type
native_handle	asio/include/asio/posix/basic_descriptor.hpp	/^  native_handle_type native_handle()$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:native_handle_type
native_handle	asio/include/asio/ssl/stream.hpp	/^  native_handle_type native_handle()$/;"	f	class:asio::ssl::stream	typeref:typename:native_handle_type
native_handle	asio/include/asio/ssl/verify_context.hpp	/^  native_handle_type native_handle()$/;"	f	class:asio::ssl::verify_context	typeref:typename:native_handle_type
native_handle	asio/include/asio/windows/basic_object_handle.hpp	/^  native_handle_type native_handle()$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:native_handle_type
native_handle	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  native_handle_type native_handle()$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:native_handle_type
native_handle_	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^    std::uintmax_t native_handle_; \/\/ Native handle, if any.$/;"	m	struct:custom_tracking::tracked_handler	typeref:typename:std::uintmax_t
native_handle_type	asio/include/asio/basic_datagram_socket.hpp	/^    Executor>::native_handle_type native_handle_type;$/;"	t	class:asio::basic_datagram_socket	typeref:typename:basic_socket<Protocol,Executor>::native_handle_type
native_handle_type	asio/include/asio/basic_datagram_socket.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::basic_datagram_socket	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/basic_raw_socket.hpp	/^    Executor>::native_handle_type native_handle_type;$/;"	t	class:asio::basic_raw_socket	typeref:typename:basic_socket<Protocol,Executor>::native_handle_type
native_handle_type	asio/include/asio/basic_raw_socket.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::basic_raw_socket	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/basic_seq_packet_socket.hpp	/^    Executor>::native_handle_type native_handle_type;$/;"	t	class:asio::basic_seq_packet_socket	typeref:typename:basic_socket<Protocol,Executor>::native_handle_type
native_handle_type	asio/include/asio/basic_seq_packet_socket.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::basic_seq_packet_socket	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/basic_serial_port.hpp	/^    native_handle_type;$/;"	t	class:asio::basic_serial_port	typeref:typename:detail::reactive_serial_port_service::native_handle_type
native_handle_type	asio/include/asio/basic_serial_port.hpp	/^    native_handle_type;$/;"	t	class:asio::basic_serial_port	typeref:typename:detail::win_iocp_serial_port_service::native_handle_type
native_handle_type	asio/include/asio/basic_serial_port.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::basic_serial_port	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/basic_socket.hpp	/^    Protocol>::native_handle_type native_handle_type;$/;"	t	class:asio::basic_socket	typeref:typename:detail::null_socket_service<Protocol>::native_handle_type
native_handle_type	asio/include/asio/basic_socket.hpp	/^    Protocol>::native_handle_type native_handle_type;$/;"	t	class:asio::basic_socket	typeref:typename:detail::reactive_socket_service<Protocol>::native_handle_type
native_handle_type	asio/include/asio/basic_socket.hpp	/^    Protocol>::native_handle_type native_handle_type;$/;"	t	class:asio::basic_socket	typeref:typename:detail::win_iocp_socket_service<Protocol>::native_handle_type
native_handle_type	asio/include/asio/basic_socket.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::basic_socket	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/basic_socket_acceptor.hpp	/^    Protocol>::native_handle_type native_handle_type;$/;"	t	class:asio::basic_socket_acceptor	typeref:typename:detail::null_socket_service<Protocol>::native_handle_type
native_handle_type	asio/include/asio/basic_socket_acceptor.hpp	/^    Protocol>::native_handle_type native_handle_type;$/;"	t	class:asio::basic_socket_acceptor	typeref:typename:detail::reactive_socket_service<Protocol>::native_handle_type
native_handle_type	asio/include/asio/basic_socket_acceptor.hpp	/^    Protocol>::native_handle_type native_handle_type;$/;"	t	class:asio::basic_socket_acceptor	typeref:typename:detail::win_iocp_socket_service<Protocol>::native_handle_type
native_handle_type	asio/include/asio/basic_socket_acceptor.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::basic_socket_acceptor	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/basic_stream_socket.hpp	/^    Executor>::native_handle_type native_handle_type;$/;"	t	class:asio::basic_stream_socket	typeref:typename:basic_socket<Protocol,Executor>::native_handle_type
native_handle_type	asio/include/asio/basic_stream_socket.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::basic_stream_socket	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/detail/null_socket_service.hpp	/^  typedef int native_handle_type;$/;"	t	class:asio::detail::null_socket_service	typeref:typename:int
native_handle_type	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  typedef int native_handle_type;$/;"	t	class:asio::detail::reactive_descriptor_service	typeref:typename:int
native_handle_type	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  typedef reactive_descriptor_service::native_handle_type native_handle_type;$/;"	t	class:asio::detail::reactive_serial_port_service	typeref:typename:reactive_descriptor_service::native_handle_type
native_handle_type	asio/include/asio/detail/reactive_socket_service.hpp	/^  typedef socket_type native_handle_type;$/;"	t	class:asio::detail::reactive_socket_service	typeref:typename:socket_type
native_handle_type	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  typedef socket_type native_handle_type;$/;"	t	class:asio::detail::reactive_socket_service_base	typeref:typename:socket_type
native_handle_type	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  typedef HANDLE native_handle_type;$/;"	t	class:asio::detail::win_iocp_handle_service	typeref:typename:HANDLE
native_handle_type	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  typedef win_iocp_handle_service::native_handle_type native_handle_type;$/;"	t	class:asio::detail::win_iocp_serial_port_service	typeref:typename:win_iocp_handle_service::native_handle_type
native_handle_type	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    native_handle_type(socket_type s)$/;"	f	class:asio::detail::win_iocp_socket_service::native_handle_type
native_handle_type	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    native_handle_type(socket_type s, const endpoint_type& ep)$/;"	f	class:asio::detail::win_iocp_socket_service::native_handle_type
native_handle_type	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  class native_handle_type$/;"	c	class:asio::detail::win_iocp_socket_service
native_handle_type	asio/include/asio/detail/win_object_handle_service.hpp	/^  typedef HANDLE native_handle_type;$/;"	t	class:asio::detail::win_object_handle_service	typeref:typename:HANDLE
native_handle_type	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  typedef Windows::Networking::Sockets::StreamSocket^ native_handle_type;$/;"	t	class:asio::detail::winrt_ssocket_service	typeref:typename:Windows::Networking::Sockets::StreamSocket^
native_handle_type	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  typedef Windows::Networking::Sockets::StreamSocket^ native_handle_type;$/;"	t	class:asio::detail::winrt_ssocket_service_base	typeref:typename:Windows::Networking::Sockets::StreamSocket^
native_handle_type	asio/include/asio/posix/basic_descriptor.hpp	/^    native_handle_type;$/;"	t	class:asio::posix::basic_descriptor	typeref:typename:detail::reactive_descriptor_service::native_handle_type
native_handle_type	asio/include/asio/posix/basic_descriptor.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::posix::basic_descriptor	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    native_handle_type;$/;"	t	class:asio::posix::basic_stream_descriptor	typeref:typename:basic_descriptor<Executor>::native_handle_type
native_handle_type	asio/include/asio/ssl/context.hpp	/^  typedef SSL_CTX* native_handle_type;$/;"	t	class:asio::ssl::context	typeref:typename:SSL_CTX *
native_handle_type	asio/include/asio/ssl/stream.hpp	/^  typedef SSL* native_handle_type;$/;"	t	class:asio::ssl::stream	typeref:typename:SSL *
native_handle_type	asio/include/asio/ssl/verify_context.hpp	/^  typedef X509_STORE_CTX* native_handle_type;$/;"	t	class:asio::ssl::verify_context	typeref:typename:X509_STORE_CTX *
native_handle_type	asio/include/asio/windows/basic_object_handle.hpp	/^    native_handle_type;$/;"	t	class:asio::windows::basic_object_handle	typeref:typename:asio::detail::win_object_handle_service::native_handle_type
native_handle_type	asio/include/asio/windows/basic_object_handle.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::windows::basic_object_handle	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/windows/basic_overlapped_handle.hpp	/^    native_handle_type;$/;"	t	class:asio::windows::basic_overlapped_handle	typeref:typename:asio::detail::win_iocp_handle_service::native_handle_type
native_handle_type	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::windows::basic_overlapped_handle	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/windows/basic_random_access_handle.hpp	/^    native_handle_type;$/;"	t	class:asio::windows::basic_random_access_handle	typeref:typename:asio::detail::win_iocp_handle_service::native_handle_type
native_handle_type	asio/include/asio/windows/basic_random_access_handle.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::windows::basic_random_access_handle	typeref:typename:implementation_defined
native_handle_type	asio/include/asio/windows/basic_stream_handle.hpp	/^    native_handle_type;$/;"	t	class:asio::windows::basic_stream_handle	typeref:typename:asio::detail::win_iocp_handle_service::native_handle_type
native_handle_type	asio/include/asio/windows/basic_stream_handle.hpp	/^  typedef implementation_defined native_handle_type;$/;"	t	class:asio::windows::basic_stream_handle	typeref:typename:implementation_defined
native_non_blocking	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID native_non_blocking($/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
native_non_blocking	asio/include/asio/basic_socket.hpp	/^  bool native_non_blocking() const$/;"	f	class:asio::basic_socket	typeref:typename:bool
native_non_blocking	asio/include/asio/basic_socket.hpp	/^  void native_non_blocking(bool mode)$/;"	f	class:asio::basic_socket	typeref:typename:void
native_non_blocking	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID native_non_blocking($/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
native_non_blocking	asio/include/asio/basic_socket_acceptor.hpp	/^  bool native_non_blocking() const$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:bool
native_non_blocking	asio/include/asio/basic_socket_acceptor.hpp	/^  void native_non_blocking(bool mode)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
native_non_blocking	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code native_non_blocking(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
native_non_blocking	asio/include/asio/detail/null_socket_service.hpp	/^  bool native_non_blocking(const implementation_type&) const$/;"	f	class:asio::detail::null_socket_service	typeref:typename:bool
native_non_blocking	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  asio::error_code native_non_blocking(implementation_type& impl,$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:asio::error_code
native_non_blocking	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  bool native_non_blocking(const implementation_type& impl) const$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:bool
native_non_blocking	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  asio::error_code native_non_blocking(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:asio::error_code
native_non_blocking	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  bool native_non_blocking(const base_implementation_type& impl) const$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:bool
native_non_blocking	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  asio::error_code native_non_blocking(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:asio::error_code
native_non_blocking	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  bool native_non_blocking(const base_implementation_type& impl) const$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:bool
native_non_blocking	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  asio::error_code native_non_blocking(base_implementation_type&,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:asio::error_code
native_non_blocking	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  bool native_non_blocking(const base_implementation_type&) const$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:bool
native_non_blocking	asio/include/asio/posix/basic_descriptor.hpp	/^  ASIO_SYNC_OP_VOID native_non_blocking($/;"	f	class:asio::posix::basic_descriptor	typeref:typename:ASIO_SYNC_OP_VOID
native_non_blocking	asio/include/asio/posix/basic_descriptor.hpp	/^  bool native_non_blocking() const$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:bool
native_non_blocking	asio/include/asio/posix/basic_descriptor.hpp	/^  void native_non_blocking(bool mode)$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:void
neg_infin	asio/include/asio/ssl/detail/stream_core.hpp	/^  static asio::deadline_timer::time_type neg_infin()$/;"	f	struct:asio::ssl::detail::stream_core	typeref:typename:asio::deadline_timer::time_type
neg_infin	asio/include/asio/ssl/detail/stream_core.hpp	/^  static asio::steady_timer::time_point neg_infin()$/;"	f	struct:asio::ssl::detail::stream_core	typeref:typename:asio::steady_timer::time_point
nested_decrement_to_zero	asio/src/tests/unit/io_context.cpp	/^void nested_decrement_to_zero(io_context* ioc, int* count)$/;"	f	typeref:typename:void
netdb_errors	asio/include/asio/error.hpp	/^enum netdb_errors$/;"	g	namespace:asio::error
network	asio/include/asio/ip/network_v4.hpp	/^  address_v4 network() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4	typeref:typename:address_v4
network_down	asio/include/asio/error.hpp	/^  network_down = ASIO_SOCKET_ERROR(ENETDOWN),$/;"	e	enum:asio::error::basic_errors
network_interface	asio/include/asio/ip/detail/socket_option.hpp	/^  explicit network_interface(const address_v4& ipv4_interface)$/;"	f	class:asio::ip::detail::socket_option::network_interface
network_interface	asio/include/asio/ip/detail/socket_option.hpp	/^  explicit network_interface(unsigned int ipv6_interface)$/;"	f	class:asio::ip::detail::socket_option::network_interface
network_interface	asio/include/asio/ip/detail/socket_option.hpp	/^  network_interface()$/;"	f	class:asio::ip::detail::socket_option::network_interface
network_interface	asio/include/asio/ip/detail/socket_option.hpp	/^class network_interface$/;"	c	namespace:asio::ip::detail::socket_option
network_reset	asio/include/asio/error.hpp	/^  network_reset = ASIO_SOCKET_ERROR(ENETRESET),$/;"	e	enum:asio::error::basic_errors
network_unreachable	asio/include/asio/error.hpp	/^  network_unreachable = ASIO_SOCKET_ERROR(ENETUNREACH),$/;"	e	enum:asio::error::basic_errors
network_v4	asio/include/asio/ip/network_v4.hpp	/^  network_v4() ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4
network_v4	asio/include/asio/ip/network_v4.hpp	/^  network_v4(const network_v4& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4
network_v4	asio/include/asio/ip/network_v4.hpp	/^  network_v4(network_v4&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4
network_v4	asio/include/asio/ip/network_v4.hpp	/^class network_v4$/;"	c	namespace:asio::ip
network_v6	asio/include/asio/ip/network_v6.hpp	/^  network_v6() ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v6
network_v6	asio/include/asio/ip/network_v6.hpp	/^  network_v6(const network_v6& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v6
network_v6	asio/include/asio/ip/network_v6.hpp	/^  network_v6(network_v6&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v6
network_v6	asio/include/asio/ip/network_v6.hpp	/^class network_v6$/;"	c	namespace:asio::ip
new_connection_	asio/src/examples/cpp03/http/server/server.hpp	/^  connection_ptr new_connection_;$/;"	m	class:http::server::server	typeref:typename:connection_ptr
new_connection_	asio/src/examples/cpp03/http/server2/server.hpp	/^  connection_ptr new_connection_;$/;"	m	class:http::server2::server	typeref:typename:connection_ptr
new_connection_	asio/src/examples/cpp03/http/server3/server.hpp	/^  connection_ptr new_connection_;$/;"	m	class:http::server3::server	typeref:typename:connection_ptr
new_port	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  unsigned short new_port() const$/;"	f	class:control_request	typeref:typename:unsigned short
new_socket	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  socket_holder& new_socket()$/;"	f	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:socket_holder &
new_socket	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  socket_holder& new_socket()$/;"	f	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:socket_holder &
new_socket_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  socket_holder new_socket_;$/;"	m	class:asio::detail::reactive_socket_accept_op_base	typeref:typename:socket_holder
new_socket_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  socket_holder new_socket_;$/;"	m	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:socket_holder
new_socket_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  socket_holder new_socket_;$/;"	m	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:socket_holder
newline	asio/src/doc/reference.xsl	/^<xsl:variable name="newline">$/;"	v
newline	asio/src/doc/tutorial.xsl	/^<xsl:variable name="newline">$/;"	v
next	asio/include/asio/detail/object_pool.hpp	/^  static Object*& next(Object* o)$/;"	f	class:asio::detail::object_pool_access	typeref:typename:Object * &
next	asio/include/asio/detail/op_queue.hpp	/^  static Operation* next(Operation* o)$/;"	f	class:asio::detail::op_queue_access	typeref:typename:Operation *
next	asio/include/asio/detail/op_queue.hpp	/^  static void next(Operation1*& o1, Operation2* o2)$/;"	f	class:asio::detail::op_queue_access	typeref:typename:void
next_	asio/include/asio/detail/call_stack.hpp	/^    context* next_;$/;"	m	class:asio::detail::call_stack::context	typeref:typename:context *
next_	asio/include/asio/detail/epoll_reactor.hpp	/^    descriptor_state* next_;$/;"	m	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:descriptor_state *
next_	asio/include/asio/detail/kqueue_reactor.hpp	/^    descriptor_state* next_;$/;"	m	struct:asio::detail::kqueue_reactor::descriptor_state	typeref:typename:descriptor_state *
next_	asio/include/asio/detail/scheduler_operation.hpp	/^  scheduler_operation* next_;$/;"	m	class:asio::detail::ASIO_INHERIT_TRACKED_HANDLER	typeref:typename:scheduler_operation *
next_	asio/include/asio/detail/signal_set_service.hpp	/^  signal_set_service* next_;$/;"	m	class:asio::detail::signal_set_service	typeref:typename:signal_set_service *
next_	asio/include/asio/detail/strand_executor_service.hpp	/^    strand_impl* next_;$/;"	m	class:asio::detail::strand_executor_service::strand_impl	typeref:typename:strand_impl *
next_	asio/include/asio/detail/thread_group.hpp	/^    item* next_;$/;"	m	struct:asio::detail::thread_group::item	typeref:typename:item *
next_	asio/include/asio/detail/timer_queue.hpp	/^    per_timer_data* next_;$/;"	m	class:asio::detail::timer_queue::per_timer_data	typeref:typename:per_timer_data *
next_	asio/include/asio/detail/timer_queue_base.hpp	/^  timer_queue_base* next_;$/;"	m	class:asio::detail::timer_queue_base	typeref:typename:timer_queue_base *
next_	asio/include/asio/detail/win_iocp_handle_service.hpp	/^    implementation_type* next_;$/;"	m	class:asio::detail::win_iocp_handle_service::implementation_type	typeref:typename:implementation_type *
next_	asio/include/asio/detail/win_iocp_operation.hpp	/^  win_iocp_operation* next_;$/;"	m	class:asio::detail::win_iocp_operation	typeref:typename:win_iocp_operation *
next_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    base_implementation_type* next_;$/;"	m	struct:asio::detail::win_iocp_socket_service_base::base_implementation_type	typeref:typename:base_implementation_type *
next_	asio/include/asio/detail/win_object_handle_service.hpp	/^    implementation_type* next_;$/;"	m	class:asio::detail::win_object_handle_service::implementation_type	typeref:typename:implementation_type *
next_	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^    base_implementation_type* next_;$/;"	m	struct:asio::detail::winrt_ssocket_service_base::base_implementation_type	typeref:typename:base_implementation_type *
next_	asio/include/asio/execution_context.hpp	/^  service* next_;$/;"	m	class:asio::execution_context::service	typeref:typename:service *
next_	asio/src/examples/cpp11/executors/actor.cpp	/^  actor_address next_;$/;"	m	class:member	typeref:typename:actor_address	file:
next_	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^    completion* next_;$/;"	m	struct:custom_tracking::completion	typeref:typename:completion *
next_	asio/src/examples/cpp14/executors/actor.cpp	/^  actor_address next_;$/;"	m	class:member	typeref:typename:actor_address	file:
next_by_key	asio/include/asio/detail/call_stack.hpp	/^    Value* next_by_key() const$/;"	f	class:asio::detail::call_stack::context	typeref:typename:Value *
next_elem_	asio/include/asio/detail/consuming_buffers.hpp	/^  std::size_t next_elem_;$/;"	m	class:consuming_buffers	typeref:typename:std::size_t
next_elem_offset_	asio/include/asio/detail/consuming_buffers.hpp	/^  std::size_t next_elem_offset_;$/;"	m	class:consuming_buffers	typeref:typename:std::size_t
next_frame_number_	asio/src/examples/cpp03/porthopper/server.cpp	/^  unsigned long next_frame_number_;$/;"	m	class:server	typeref:typename:unsigned long	file:
next_in_set_	asio/include/asio/detail/signal_set_service.hpp	/^    registration* next_in_set_;$/;"	m	class:asio::detail::signal_set_service::registration	typeref:typename:registration *
next_in_table_	asio/include/asio/detail/signal_set_service.hpp	/^    registration* next_in_table_;$/;"	m	class:asio::detail::signal_set_service::registration	typeref:typename:registration *
next_io_context_	asio/src/examples/cpp03/http/server2/io_context_pool.hpp	/^  std::size_t next_io_context_;$/;"	m	class:http::server2::io_context_pool	typeref:typename:std::size_t
next_layer	asio/include/asio/buffered_read_stream.hpp	/^  next_layer_type& next_layer()$/;"	f	class:asio::buffered_read_stream	typeref:typename:next_layer_type &
next_layer	asio/include/asio/buffered_stream.hpp	/^  next_layer_type& next_layer()$/;"	f	class:asio::buffered_stream	typeref:typename:next_layer_type &
next_layer	asio/include/asio/buffered_write_stream.hpp	/^  next_layer_type& next_layer()$/;"	f	class:asio::buffered_write_stream	typeref:typename:next_layer_type &
next_layer	asio/include/asio/ssl/stream.hpp	/^  const next_layer_type& next_layer() const$/;"	f	class:asio::ssl::stream	typeref:typename:const next_layer_type &
next_layer	asio/include/asio/ssl/stream.hpp	/^  next_layer_type& next_layer()$/;"	f	class:asio::ssl::stream	typeref:typename:next_layer_type &
next_layer_	asio/include/asio/buffered_read_stream.hpp	/^  Stream next_layer_;$/;"	m	class:asio::buffered_read_stream	typeref:typename:Stream
next_layer_	asio/include/asio/buffered_write_stream.hpp	/^  Stream next_layer_;$/;"	m	class:asio::buffered_write_stream	typeref:typename:Stream
next_layer_	asio/include/asio/impl/buffered_read_stream.hpp	/^    Stream& next_layer_;$/;"	m	class:asio::detail::initiate_async_buffered_fill	typeref:typename:Stream &
next_layer_	asio/include/asio/impl/buffered_read_stream.hpp	/^    Stream& next_layer_;$/;"	m	class:asio::detail::initiate_async_buffered_read_some	typeref:typename:Stream &
next_layer_	asio/include/asio/impl/buffered_write_stream.hpp	/^    Stream& next_layer_;$/;"	m	class:asio::detail::initiate_async_buffered_flush	typeref:typename:Stream &
next_layer_	asio/include/asio/impl/buffered_write_stream.hpp	/^    Stream& next_layer_;$/;"	m	class:asio::detail::initiate_async_buffered_write_some	typeref:typename:Stream &
next_layer_	asio/include/asio/ssl/detail/io.hpp	/^  Stream& next_layer_;$/;"	m	class:asio::ssl::detail::io_op	typeref:typename:Stream &
next_layer_	asio/include/asio/ssl/stream.hpp	/^  Stream next_layer_;$/;"	m	class:asio::ssl::stream	typeref:typename:Stream
next_layer_type	asio/include/asio/buffered_read_stream.hpp	/^  typedef typename remove_reference<Stream>::type next_layer_type;$/;"	t	class:asio::buffered_read_stream	typeref:typename:remove_reference<Stream>::type
next_layer_type	asio/include/asio/buffered_stream.hpp	/^  typedef typename remove_reference<Stream>::type next_layer_type;$/;"	t	class:asio::buffered_stream	typeref:typename:remove_reference<Stream>::type
next_layer_type	asio/include/asio/buffered_write_stream.hpp	/^  typedef typename remove_reference<Stream>::type next_layer_type;$/;"	t	class:asio::buffered_write_stream	typeref:typename:remove_reference<Stream>::type
next_layer_type	asio/include/asio/ssl/stream.hpp	/^  typedef typename remove_reference<Stream>::type next_layer_type;$/;"	t	class:asio::ssl::stream	typeref:typename:remove_reference<Stream>::type
next_read_length	asio/src/tests/unit/read.cpp	/^  void next_read_length(size_t length)$/;"	f	class:test_stream	typeref:typename:void	file:
next_read_length	asio/src/tests/unit/read_at.cpp	/^  void next_read_length(size_t length)$/;"	f	class:test_random_access_device	typeref:typename:void	file:
next_read_length	asio/src/tests/unit/read_until.cpp	/^  void next_read_length(size_t length)$/;"	f	class:test_stream	typeref:typename:void	file:
next_read_length_	asio/src/tests/unit/read.cpp	/^  size_t next_read_length_;$/;"	m	class:test_stream	typeref:typename:size_t	file:
next_read_length_	asio/src/tests/unit/read_at.cpp	/^  size_t next_read_length_;$/;"	m	class:test_random_access_device	typeref:typename:size_t	file:
next_read_length_	asio/src/tests/unit/read_until.cpp	/^  size_t next_read_length_;$/;"	m	class:test_stream	typeref:typename:size_t	file:
next_write_length	asio/src/tests/unit/write.cpp	/^  void next_write_length(size_t length)$/;"	f	class:test_stream	typeref:typename:void	file:
next_write_length	asio/src/tests/unit/write_at.cpp	/^  void next_write_length(size_t length)$/;"	f	class:test_random_access_device	typeref:typename:void	file:
next_write_length_	asio/src/tests/unit/write.cpp	/^  size_t next_write_length_;$/;"	m	class:test_stream	typeref:typename:size_t	file:
next_write_length_	asio/src/tests/unit/write_at.cpp	/^  size_t next_write_length_;$/;"	m	class:test_random_access_device	typeref:typename:size_t	file:
no_buffer_space	asio/include/asio/error.hpp	/^  no_buffer_space = ASIO_SOCKET_ERROR(ENOBUFS),$/;"	e	enum:asio::error::basic_errors
no_compression	asio/include/asio/ssl/context_base.hpp	/^  static const long no_compression = implementation_defined;$/;"	m	class:asio::ssl::context_base	typeref:typename:const long
no_content	asio/src/examples/cpp03/http/server/reply.cpp	/^const char no_content[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
no_content	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string no_content =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
no_content	asio/src/examples/cpp03/http/server/reply.hpp	/^    no_content = 204,$/;"	e	enum:http::server::reply::status_type
no_content	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char no_content[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
no_content	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string no_content =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
no_content	asio/src/examples/cpp03/http/server2/reply.hpp	/^    no_content = 204,$/;"	e	enum:http::server2::reply::status_type
no_content	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char no_content[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
no_content	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string no_content =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
no_content	asio/src/examples/cpp03/http/server3/reply.hpp	/^    no_content = 204,$/;"	e	enum:http::server3::reply::status_type
no_content	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char no_content[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
no_content	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string no_content =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
no_content	asio/src/examples/cpp03/http/server4/reply.hpp	/^    no_content = 204,$/;"	e	enum:http::server4::reply::status_type
no_content	asio/src/examples/cpp11/http/server/reply.cpp	/^const char no_content[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
no_content	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string no_content =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
no_content	asio/src/examples/cpp11/http/server/reply.hpp	/^    no_content = 204,$/;"	e	enum:http::server::reply::status_type
no_data	asio/include/asio/error.hpp	/^  no_data = ASIO_NETDB_ERROR(NO_DATA),$/;"	e	enum:asio::error::netdb_errors
no_delay	asio/include/asio/ip/tcp.hpp	/^    ASIO_OS_DEF(IPPROTO_TCP), ASIO_OS_DEF(TCP_NODELAY)> no_delay;$/;"	t	class:asio::ip::tcp
no_delay	asio/include/asio/ip/tcp.hpp	/^  typedef implementation_defined no_delay;$/;"	t	class:asio::ip::tcp	typeref:typename:implementation_defined
no_descriptors	asio/include/asio/error.hpp	/^  no_descriptors = ASIO_SOCKET_ERROR(EMFILE),$/;"	e	enum:asio::error::basic_errors
no_memory	asio/include/asio/error.hpp	/^  no_memory = ASIO_WIN_OR_POSIX($/;"	e	enum:asio::error::basic_errors
no_permission	asio/include/asio/error.hpp	/^  no_permission = ASIO_WIN_OR_POSIX($/;"	e	enum:asio::error::basic_errors
no_protocol_option	asio/include/asio/error.hpp	/^  no_protocol_option = ASIO_SOCKET_ERROR(ENOPROTOOPT),$/;"	e	enum:asio::error::basic_errors
no_recovery	asio/include/asio/error.hpp	/^  no_recovery = ASIO_NETDB_ERROR(NO_RECOVERY)$/;"	e	enum:asio::error::netdb_errors
no_sslv2	asio/include/asio/ssl/context_base.hpp	/^  static const long no_sslv2 = implementation_defined;$/;"	m	class:asio::ssl::context_base	typeref:typename:const long
no_sslv3	asio/include/asio/ssl/context_base.hpp	/^  static const long no_sslv3 = implementation_defined;$/;"	m	class:asio::ssl::context_base	typeref:typename:const long
no_such_device	asio/include/asio/error.hpp	/^  no_such_device = ASIO_WIN_OR_POSIX($/;"	e	enum:asio::error::basic_errors
no_tlsv1	asio/include/asio/ssl/context_base.hpp	/^  static const long no_tlsv1 = implementation_defined;$/;"	m	class:asio::ssl::context_base	typeref:typename:const long
no_tlsv1_1	asio/include/asio/ssl/context_base.hpp	/^  static const long no_tlsv1_1 = implementation_defined;$/;"	m	class:asio::ssl::context_base	typeref:typename:const long
no_tlsv1_2	asio/include/asio/ssl/context_base.hpp	/^  static const long no_tlsv1_2 = implementation_defined;$/;"	m	class:asio::ssl::context_base	typeref:typename:const long
no_tlsv1_3	asio/include/asio/ssl/context_base.hpp	/^  static const long no_tlsv1_3 = implementation_defined;$/;"	m	class:asio::ssl::context_base	typeref:typename:const long
nobase_include_HEADERS	asio/include/Makefile.am	/^nobase_include_HEADERS = \\$/;"	m
noinst_HEADERS	asio/src/examples/cpp03/Makefile.am	/^noinst_HEADERS = \\$/;"	m
noinst_HEADERS	asio/src/examples/cpp11/Makefile.am	/^noinst_HEADERS = \\$/;"	m
noinst_HEADERS	asio/src/tests/Makefile.am	/^noinst_HEADERS = \\$/;"	m
noinst_LIBRARIES	asio/src/examples/cpp03/Makefile.am	/^noinst_LIBRARIES = libasio.a$/;"	m
noinst_LIBRARIES	asio/src/examples/cpp11/Makefile.am	/^noinst_LIBRARIES = libasio.a$/;"	m
noinst_LIBRARIES	asio/src/examples/cpp14/Makefile.am	/^noinst_LIBRARIES = libasio.a$/;"	m
noinst_LIBRARIES	asio/src/tests/Makefile.am	/^noinst_LIBRARIES = libasio.a$/;"	m
noinst_PROGRAMS	asio/src/examples/cpp03/Makefile.am	/^noinst_PROGRAMS = \\$/;"	m
noinst_PROGRAMS	asio/src/examples/cpp11/Makefile.am	/^noinst_PROGRAMS = \\$/;"	m
noinst_PROGRAMS	asio/src/examples/cpp14/Makefile.am	/^noinst_PROGRAMS = \\$/;"	m
noinst_PROGRAMS	asio/src/tests/Makefile.am	/^noinst_PROGRAMS = \\$/;"	m
non_blocking	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID non_blocking($/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
non_blocking	asio/include/asio/basic_socket.hpp	/^  bool non_blocking() const$/;"	f	class:asio::basic_socket	typeref:typename:bool
non_blocking	asio/include/asio/basic_socket.hpp	/^  void non_blocking(bool mode)$/;"	f	class:asio::basic_socket	typeref:typename:void
non_blocking	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID non_blocking($/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
non_blocking	asio/include/asio/basic_socket_acceptor.hpp	/^  bool non_blocking() const$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:bool
non_blocking	asio/include/asio/basic_socket_acceptor.hpp	/^  void non_blocking(bool mode)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
non_blocking	asio/include/asio/detail/descriptor_ops.hpp	/^  non_blocking = user_set_non_blocking | internal_non_blocking,$/;"	e	enum:asio::detail::descriptor_ops::__anon0a8e43b60103
non_blocking	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code non_blocking(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
non_blocking	asio/include/asio/detail/null_socket_service.hpp	/^  bool non_blocking(const implementation_type&) const$/;"	f	class:asio::detail::null_socket_service	typeref:typename:bool
non_blocking	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  asio::error_code non_blocking(implementation_type& impl,$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:asio::error_code
non_blocking	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  bool non_blocking(const implementation_type& impl) const$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:bool
non_blocking	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  asio::error_code non_blocking(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:asio::error_code
non_blocking	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  bool non_blocking(const base_implementation_type& impl) const$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:bool
non_blocking	asio/include/asio/detail/socket_ops.hpp	/^  non_blocking = user_set_non_blocking | internal_non_blocking,$/;"	e	enum:asio::detail::socket_ops::__anonc4fdc2e00103
non_blocking	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  asio::error_code non_blocking(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:asio::error_code
non_blocking	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  bool non_blocking(const base_implementation_type& impl) const$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:bool
non_blocking	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  asio::error_code non_blocking(base_implementation_type&,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:asio::error_code
non_blocking	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  bool non_blocking(const base_implementation_type&) const$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:bool
non_blocking	asio/include/asio/posix/basic_descriptor.hpp	/^  ASIO_SYNC_OP_VOID non_blocking($/;"	f	class:asio::posix::basic_descriptor	typeref:typename:ASIO_SYNC_OP_VOID
non_blocking	asio/include/asio/posix/basic_descriptor.hpp	/^  bool non_blocking() const$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:bool
non_blocking	asio/include/asio/posix/basic_descriptor.hpp	/^  void non_blocking(bool mode)$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:void
non_const_lvalue	asio/include/asio/detail/non_const_lvalue.hpp	/^  explicit non_const_lvalue(T& t)$/;"	f	struct:asio::detail::non_const_lvalue
non_const_lvalue	asio/include/asio/detail/non_const_lvalue.hpp	/^struct non_const_lvalue$/;"	s	namespace:asio::detail
non_empty_output_queue_	asio/src/examples/cpp03/timeouts/server.cpp	/^  steady_timer non_empty_output_queue_;$/;"	m	class:tcp_session	typeref:typename:steady_timer	file:
non_empty_output_queue_	asio/src/examples/cpp11/timeouts/server.cpp	/^  steady_timer non_empty_output_queue_{socket_.get_executor()};$/;"	m	class:tcp_session	typeref:typename:steady_timer	file:
nonblocking_third_party_lib_SOURCES	asio/src/examples/cpp03/Makefile.am	/^nonblocking_third_party_lib_SOURCES = nonblocking\/third_party_lib.cpp$/;"	m
nonblocking_third_party_lib_SOURCES	asio/src/examples/cpp11/Makefile.am	/^nonblocking_third_party_lib_SOURCES = nonblocking\/third_party_lib.cpp$/;"	m
noncopyable	asio/include/asio/detail/noncopyable.hpp	/^  noncopyable() {}$/;"	f	class:asio::detail::noncopyable
noncopyable	asio/include/asio/detail/noncopyable.hpp	/^class noncopyable$/;"	c	namespace:asio::detail
none	asio/include/asio/serial_port_base.hpp	/^    enum type { none, odd, even };$/;"	e	enum:asio::serial_port_base::parity::type
none	asio/include/asio/serial_port_base.hpp	/^    enum type { none, software, hardware };$/;"	e	enum:asio::serial_port_base::flow_control::type
noop_deleter	asio/include/asio/detail/socket_ops.hpp	/^struct noop_deleter { void operator()(void*) {} };$/;"	s	namespace:asio::detail::socket_ops
not_connected	asio/include/asio/error.hpp	/^  not_connected = ASIO_SOCKET_ERROR(ENOTCONN),$/;"	e	enum:asio::error::basic_errors
not_done	asio/include/asio/detail/reactor_op.hpp	/^  enum status { not_done, done, done_and_exhausted };$/;"	e	enum:asio::detail::reactor_op::status
not_found	asio/include/asio/error.hpp	/^  not_found,$/;"	e	enum:asio::error::misc_errors
not_found	asio/src/examples/cpp03/http/server/reply.cpp	/^const char not_found[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
not_found	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string not_found =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
not_found	asio/src/examples/cpp03/http/server/reply.hpp	/^    not_found = 404,$/;"	e	enum:http::server::reply::status_type
not_found	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char not_found[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
not_found	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string not_found =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
not_found	asio/src/examples/cpp03/http/server2/reply.hpp	/^    not_found = 404,$/;"	e	enum:http::server2::reply::status_type
not_found	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char not_found[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
not_found	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string not_found =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
not_found	asio/src/examples/cpp03/http/server3/reply.hpp	/^    not_found = 404,$/;"	e	enum:http::server3::reply::status_type
not_found	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char not_found[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
not_found	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string not_found =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
not_found	asio/src/examples/cpp03/http/server4/reply.hpp	/^    not_found = 404,$/;"	e	enum:http::server4::reply::status_type
not_found	asio/src/examples/cpp11/http/server/reply.cpp	/^const char not_found[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
not_found	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string not_found =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
not_found	asio/src/examples/cpp11/http/server/reply.hpp	/^    not_found = 404,$/;"	e	enum:http::server::reply::status_type
not_implemented	asio/src/examples/cpp03/http/server/reply.cpp	/^const char not_implemented[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
not_implemented	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string not_implemented =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
not_implemented	asio/src/examples/cpp03/http/server/reply.hpp	/^    not_implemented = 501,$/;"	e	enum:http::server::reply::status_type
not_implemented	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char not_implemented[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
not_implemented	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string not_implemented =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
not_implemented	asio/src/examples/cpp03/http/server2/reply.hpp	/^    not_implemented = 501,$/;"	e	enum:http::server2::reply::status_type
not_implemented	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char not_implemented[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
not_implemented	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string not_implemented =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
not_implemented	asio/src/examples/cpp03/http/server3/reply.hpp	/^    not_implemented = 501,$/;"	e	enum:http::server3::reply::status_type
not_implemented	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char not_implemented[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
not_implemented	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string not_implemented =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
not_implemented	asio/src/examples/cpp03/http/server4/reply.hpp	/^    not_implemented = 501,$/;"	e	enum:http::server4::reply::status_type
not_implemented	asio/src/examples/cpp11/http/server/reply.cpp	/^const char not_implemented[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
not_implemented	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string not_implemented =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
not_implemented	asio/src/examples/cpp11/http/server/reply.hpp	/^    not_implemented = 501,$/;"	e	enum:http::server::reply::status_type
not_modified	asio/src/examples/cpp03/http/server/reply.cpp	/^const char not_modified[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
not_modified	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string not_modified =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
not_modified	asio/src/examples/cpp03/http/server/reply.hpp	/^    not_modified = 304,$/;"	e	enum:http::server::reply::status_type
not_modified	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char not_modified[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
not_modified	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string not_modified =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
not_modified	asio/src/examples/cpp03/http/server2/reply.hpp	/^    not_modified = 304,$/;"	e	enum:http::server2::reply::status_type
not_modified	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char not_modified[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
not_modified	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string not_modified =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
not_modified	asio/src/examples/cpp03/http/server3/reply.hpp	/^    not_modified = 304,$/;"	e	enum:http::server3::reply::status_type
not_modified	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char not_modified[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
not_modified	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string not_modified =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
not_modified	asio/src/examples/cpp03/http/server4/reply.hpp	/^    not_modified = 304,$/;"	e	enum:http::server4::reply::status_type
not_modified	asio/src/examples/cpp11/http/server/reply.cpp	/^const char not_modified[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
not_modified	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string not_modified =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
not_modified	asio/src/examples/cpp11/http/server/reply.hpp	/^    not_modified = 304,$/;"	e	enum:http::server::reply::status_type
not_socket	asio/include/asio/error.hpp	/^  not_socket = ASIO_SOCKET_ERROR(ENOTSOCK),$/;"	e	enum:asio::error::basic_errors
notify_fork	asio/include/asio/detail/resolver_service.hpp	/^  void notify_fork(execution_context::fork_event fork_ev)$/;"	f	class:asio::detail::resolver_service	typeref:typename:void
notify_fork	asio/include/asio/detail/winrt_resolver_service.hpp	/^  void notify_fork(execution_context::fork_event)$/;"	f	class:asio::detail::winrt_resolver_service	typeref:typename:void
now	asio/include/asio/detail/chrono_time_traits.hpp	/^  static time_type now()$/;"	f	struct:asio::detail::chrono_time_traits	typeref:typename:time_type
now	asio/include/asio/time_traits.hpp	/^  static time_type now()$/;"	f	struct:asio::time_traits	typeref:typename:time_type
now	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^  static time_point now()$/;"	f	struct:time_t_clock	typeref:typename:time_point	file:
now	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^  static time_point now() noexcept$/;"	f	struct:time_t_clock	typeref:typename:time_point	file:
now	asio/src/tests/unit/deadline_timer.cpp	/^ptime now()$/;"	f	typeref:typename:ptime
now	asio/src/tests/unit/system_timer.cpp	/^asio::system_timer::time_point now()$/;"	f	typeref:typename:asio::system_timer::time_point
nt_set_info_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  void* nt_set_info_;$/;"	m	class:asio::detail::win_iocp_socket_service_base	typeref:typename:void *
nt_set_info_fn	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  typedef LONG (NTAPI *nt_set_info_fn)(HANDLE, ULONG_PTR*, void*, ULONG, ULONG);$/;"	t	class:asio::detail::win_iocp_socket_service_base	typeref:typename:LONG (NTAPI *)(HANDLE,ULONG_PTR *,void *,ULONG,ULONG)
null	asio/src/examples/cpp03/services/logger_service.hpp	/^  impl_type null() const$/;"	f	class:services::logger_service	typeref:typename:impl_type
null_buffers	asio/include/asio/buffer.hpp	/^class null_buffers$/;"	c	namespace:asio
null_byte_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  unsigned char null_byte_;$/;"	m	class:socks4::reply	typeref:typename:unsigned char
null_byte_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  unsigned char null_byte_;$/;"	m	class:socks4::request	typeref:typename:unsigned char
null_byte_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  unsigned char null_byte_;$/;"	m	class:socks4::reply	typeref:typename:unsigned char
null_byte_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  unsigned char null_byte_;$/;"	m	class:socks4::request	typeref:typename:unsigned char
null_event	asio/include/asio/detail/null_event.hpp	/^  null_event()$/;"	f	class:asio::detail::null_event
null_event	asio/include/asio/detail/null_event.hpp	/^class null_event$/;"	c	namespace:asio::detail
null_fenced_block	asio/include/asio/detail/null_fenced_block.hpp	/^  explicit null_fenced_block(half_or_full_t)$/;"	f	class:asio::detail::null_fenced_block
null_fenced_block	asio/include/asio/detail/null_fenced_block.hpp	/^class null_fenced_block$/;"	c	namespace:asio::detail
null_global	asio/include/asio/detail/null_global.hpp	/^T& null_global()$/;"	f	namespace:asio::detail	typeref:typename:T &
null_global_impl	asio/include/asio/detail/null_global.hpp	/^  null_global_impl()$/;"	f	struct:asio::detail::null_global_impl
null_global_impl	asio/include/asio/detail/null_global.hpp	/^struct null_global_impl$/;"	s	namespace:asio::detail
null_mutex	asio/include/asio/detail/null_mutex.hpp	/^  null_mutex()$/;"	f	class:asio::detail::null_mutex
null_mutex	asio/include/asio/detail/null_mutex.hpp	/^class null_mutex$/;"	c	namespace:asio::detail
null_reactor	asio/include/asio/detail/null_reactor.hpp	/^  null_reactor(asio::execution_context& ctx)$/;"	f	class:asio::detail::null_reactor
null_reactor	asio/include/asio/detail/null_reactor.hpp	/^class null_reactor$/;"	c	namespace:asio::detail
null_signal_blocker	asio/include/asio/detail/null_signal_blocker.hpp	/^  null_signal_blocker()$/;"	f	class:asio::detail::null_signal_blocker
null_signal_blocker	asio/include/asio/detail/null_signal_blocker.hpp	/^class null_signal_blocker$/;"	c	namespace:asio::detail
null_socket_service	asio/include/asio/detail/null_socket_service.hpp	/^  null_socket_service(execution_context& context)$/;"	f	class:asio::detail::null_socket_service
null_socket_service	asio/include/asio/detail/null_socket_service.hpp	/^class null_socket_service :$/;"	c	namespace:asio::detail
null_static_mutex	asio/include/asio/detail/null_static_mutex.hpp	/^struct null_static_mutex$/;"	s	namespace:asio::detail
null_test	asio/src/tests/unit/unit_test.hpp	/^inline void null_test()$/;"	f	typeref:typename:void
null_thread	asio/include/asio/detail/null_thread.hpp	/^  null_thread(Function, unsigned int = 0)$/;"	f	class:asio::detail::null_thread
null_thread	asio/include/asio/detail/null_thread.hpp	/^class null_thread$/;"	c	namespace:asio::detail
null_tss_ptr	asio/include/asio/detail/null_tss_ptr.hpp	/^  null_tss_ptr()$/;"	f	class:asio::detail::null_tss_ptr
null_tss_ptr	asio/include/asio/detail/null_tss_ptr.hpp	/^class null_tss_ptr$/;"	c	namespace:asio::detail
num_buckets_	asio/include/asio/detail/hash_map.hpp	/^  std::size_t num_buckets_;$/;"	m	class:asio::detail::hash_map	typeref:typename:std::size_t
num_implementations	asio/include/asio/detail/strand_service.hpp	/^  enum { num_implementations = 193 };$/;"	e	enum:asio::detail::strand_service::__anon2acb22c20203
num_implementations	asio/include/asio/detail/strand_service.hpp	/^  enum { num_implementations = ASIO_STRAND_IMPLEMENTATIONS };$/;"	e	enum:asio::detail::strand_service::__anon2acb22c20103
num_kevents_	asio/include/asio/detail/kqueue_reactor.hpp	/^    int num_kevents_; \/\/ 1 == read only, 2 == read and write$/;"	m	struct:asio::detail::kqueue_reactor::descriptor_state	typeref:typename:int
num_mutexes	asio/include/asio/detail/strand_executor_service.hpp	/^  enum { num_mutexes = 193 };$/;"	e	enum:asio::detail::strand_executor_service::__anonb0dc1bd00103
num_replies_	asio/src/examples/cpp03/icmp/ping.cpp	/^  std::size_t num_replies_;$/;"	m	class:pinger	typeref:typename:std::size_t	file:
num_samples	asio/src/tests/latency/tcp_client.cpp	/^const int num_samples = 100000;$/;"	v	typeref:typename:const int
num_samples	asio/src/tests/latency/udp_client.cpp	/^const int num_samples = 100000;$/;"	v	typeref:typename:const int
number	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  unsigned long number() const$/;"	f	class:frame	typeref:typename:unsigned long
numeric_host	asio/include/asio/ip/resolver_base.hpp	/^  static const flags numeric_host = implementation_defined;$/;"	m	class:asio::ip::resolver_base	typeref:typename:const flags
numeric_service	asio/include/asio/ip/resolver_base.hpp	/^  static const flags numeric_service = implementation_defined;$/;"	m	class:asio::ip::resolver_base	typeref:typename:const flags
object_handle	asio/include/asio/windows/object_handle.hpp	/^typedef basic_object_handle<> object_handle;$/;"	t	namespace:asio::windows	typeref:typename:basic_object_handle<>
object_pool	asio/include/asio/detail/object_pool.hpp	/^  object_pool()$/;"	f	class:asio::detail::object_pool
object_pool	asio/include/asio/detail/object_pool.hpp	/^class object_pool$/;"	c	namespace:asio::detail
object_pool_access	asio/include/asio/detail/object_pool.hpp	/^class object_pool_access$/;"	c	namespace:asio::detail
object_type_	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^    const char* object_type_; \/\/ The object type associated with the handler.$/;"	m	struct:custom_tracking::tracked_handler	typeref:typename:const char *
odd	asio/include/asio/serial_port_base.hpp	/^    enum type { none, odd, even };$/;"	e	enum:asio::serial_port_base::parity::type
offset_	asio/include/asio/impl/read_at.hpp	/^    uint64_t offset_;$/;"	m	class:asio::detail::read_at_op	typeref:typename:uint64_t
offset_	asio/include/asio/impl/read_at.hpp	/^    uint64_t offset_;$/;"	m	class:asio::detail::read_at_streambuf_op	typeref:typename:uint64_t
offset_	asio/include/asio/impl/write_at.hpp	/^    uint64_t offset_;$/;"	m	class:asio::detail::write_at_op	typeref:typename:uint64_t
ofstream_	asio/src/examples/cpp03/services/logger_service.hpp	/^  std::ofstream ofstream_;$/;"	m	class:services::logger_service	typeref:typename:std::ofstream
ok	asio/src/examples/cpp03/http/server/reply.cpp	/^const char ok[] = "";$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
ok	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string ok =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
ok	asio/src/examples/cpp03/http/server/reply.hpp	/^    ok = 200,$/;"	e	enum:http::server::reply::status_type
ok	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char ok[] = "";$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
ok	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string ok =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
ok	asio/src/examples/cpp03/http/server2/reply.hpp	/^    ok = 200,$/;"	e	enum:http::server2::reply::status_type
ok	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char ok[] = "";$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
ok	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string ok =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
ok	asio/src/examples/cpp03/http/server3/reply.hpp	/^    ok = 200,$/;"	e	enum:http::server3::reply::status_type
ok	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char ok[] = "";$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
ok	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string ok =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
ok	asio/src/examples/cpp03/http/server4/reply.hpp	/^    ok = 200,$/;"	e	enum:http::server4::reply::status_type
ok	asio/src/examples/cpp11/http/server/reply.cpp	/^const char ok[] = "";$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
ok	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string ok =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
ok	asio/src/examples/cpp11/http/server/reply.hpp	/^    ok = 200,$/;"	e	enum:http::server::reply::status_type
old_mask_	asio/include/asio/detail/posix_signal_blocker.hpp	/^  sigset_t old_mask_;$/;"	m	class:asio::detail::posix_signal_blocker	typeref:typename:sigset_t
old_port	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  unsigned short old_port() const$/;"	f	class:control_request	typeref:typename:unsigned short
old_size_	asio/include/asio/detail/buffer_resize_guard.hpp	/^  size_t old_size_;$/;"	m	class:asio::detail::buffer_resize_guard	typeref:typename:size_t
old_style_transfer_all	asio/src/tests/unit/read.cpp	/^bool old_style_transfer_all(const asio::error_code& ec,$/;"	f	typeref:typename:bool
old_style_transfer_all	asio/src/tests/unit/read_at.cpp	/^bool old_style_transfer_all(const asio::error_code& ec,$/;"	f	typeref:typename:bool
old_style_transfer_all	asio/src/tests/unit/write.cpp	/^bool old_style_transfer_all(const asio::error_code& ec,$/;"	f	typeref:typename:bool
old_style_transfer_all	asio/src/tests/unit/write_at.cpp	/^bool old_style_transfer_all(const asio::error_code& ec,$/;"	f	typeref:typename:bool
on_completed	asio/include/asio/detail/winrt_async_manager.hpp	/^    auto on_completed = ref new AsyncActionCompletedHandler($/;"	m	class:asio::detail::winrt_async_manager	typeref:typename:auto
on_completed	asio/include/asio/detail/winrt_async_manager.hpp	/^    auto on_completed = ref new AsyncOperationCompletedHandler<TResult>($/;"	m	class:asio::detail::winrt_async_manager	typeref:typename:auto
on_completed	asio/include/asio/detail/winrt_async_manager.hpp	/^    auto on_completed$/;"	m	class:asio::detail::winrt_async_manager	typeref:typename:auto
on_dispatch_exit	asio/include/asio/detail/impl/strand_service.hpp	/^struct strand_service::on_dispatch_exit$/;"	s	class:asio::detail::strand_service
on_invoker_exit	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  struct on_invoker_exit$/;"	s	class:asio::detail::strand_executor_service::invoker
on_work_finished	asio/include/asio/detail/io_object_executor.hpp	/^  void on_work_finished() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::io_object_executor	typeref:typename:void
on_work_finished	asio/include/asio/executor.hpp	/^  void on_work_finished() const ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:void
on_work_finished	asio/include/asio/impl/executor.hpp	/^  void on_work_finished() ASIO_NOEXCEPT$/;"	f	class:asio::executor::impl	typeref:typename:void
on_work_finished	asio/include/asio/impl/io_context.hpp	/^io_context::executor_type::on_work_finished() const ASIO_NOEXCEPT$/;"	f	class:asio::io_context::executor_type	typeref:typename:void
on_work_finished	asio/include/asio/impl/thread_pool.hpp	/^inline void thread_pool::executor_type::on_work_finished()$/;"	f	class:asio::thread_pool::executor_type	typeref:typename:void
on_work_finished	asio/include/asio/impl/use_future.hpp	/^  void on_work_finished() const ASIO_NOEXCEPT {}$/;"	f	class:asio::detail::promise_executor	typeref:typename:void
on_work_finished	asio/include/asio/io_context_strand.hpp	/^  void on_work_finished() const ASIO_NOEXCEPT$/;"	f	class:asio::io_context::strand	typeref:typename:void
on_work_finished	asio/include/asio/strand.hpp	/^  void on_work_finished() const ASIO_NOEXCEPT$/;"	f	class:asio::strand	typeref:typename:void
on_work_finished	asio/include/asio/system_executor.hpp	/^  void on_work_finished() const ASIO_NOEXCEPT$/;"	f	class:asio::system_executor	typeref:typename:void
on_work_finished	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    void on_work_finished() const {}$/;"	f	class:handler_priority_queue::executor	typeref:typename:void	file:
on_work_finished	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void on_work_finished() const noexcept$/;"	f	class:fork_executor	typeref:typename:void	file:
on_work_finished	asio/src/examples/cpp11/executors/pipeline.cpp	/^  void on_work_finished() const noexcept$/;"	f	class:thread_executor	typeref:typename:void	file:
on_work_finished	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    void on_work_finished() const noexcept$/;"	f	class:priority_scheduler::executor_type	typeref:typename:void	file:
on_work_finished	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    void on_work_finished() const noexcept {}$/;"	f	class:handler_priority_queue::executor	typeref:typename:void	file:
on_work_finished	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void on_work_finished() const noexcept$/;"	f	class:fork_executor	typeref:typename:void	file:
on_work_finished	asio/src/examples/cpp14/executors/pipeline.cpp	/^  void on_work_finished() const noexcept$/;"	f	class:thread_executor	typeref:typename:void	file:
on_work_finished	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    void on_work_finished() const noexcept$/;"	f	class:priority_scheduler::executor_type	typeref:typename:void	file:
on_work_started	asio/include/asio/detail/io_object_executor.hpp	/^  void on_work_started() const ASIO_NOEXCEPT$/;"	f	class:asio::detail::io_object_executor	typeref:typename:void
on_work_started	asio/include/asio/executor.hpp	/^  void on_work_started() const ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:void
on_work_started	asio/include/asio/impl/executor.hpp	/^  void on_work_started() ASIO_NOEXCEPT$/;"	f	class:asio::executor::impl	typeref:typename:void
on_work_started	asio/include/asio/impl/io_context.hpp	/^io_context::executor_type::on_work_started() const ASIO_NOEXCEPT$/;"	f	class:asio::io_context::executor_type	typeref:typename:void
on_work_started	asio/include/asio/impl/thread_pool.hpp	/^thread_pool::executor_type::on_work_started() const ASIO_NOEXCEPT$/;"	f	class:asio::thread_pool::executor_type	typeref:typename:void
on_work_started	asio/include/asio/impl/use_future.hpp	/^  void on_work_started() const ASIO_NOEXCEPT {}$/;"	f	class:asio::detail::promise_executor	typeref:typename:void
on_work_started	asio/include/asio/io_context_strand.hpp	/^  void on_work_started() const ASIO_NOEXCEPT$/;"	f	class:asio::io_context::strand	typeref:typename:void
on_work_started	asio/include/asio/strand.hpp	/^  void on_work_started() const ASIO_NOEXCEPT$/;"	f	class:asio::strand	typeref:typename:void
on_work_started	asio/include/asio/system_executor.hpp	/^  void on_work_started() const ASIO_NOEXCEPT$/;"	f	class:asio::system_executor	typeref:typename:void
on_work_started	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    void on_work_started() const {}$/;"	f	class:handler_priority_queue::executor	typeref:typename:void	file:
on_work_started	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void on_work_started() const noexcept$/;"	f	class:fork_executor	typeref:typename:void	file:
on_work_started	asio/src/examples/cpp11/executors/pipeline.cpp	/^  void on_work_started() const noexcept$/;"	f	class:thread_executor	typeref:typename:void	file:
on_work_started	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    void on_work_started() const noexcept$/;"	f	class:priority_scheduler::executor_type	typeref:typename:void	file:
on_work_started	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    void on_work_started() const noexcept {}$/;"	f	class:handler_priority_queue::executor	typeref:typename:void	file:
on_work_started	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void on_work_started() const noexcept$/;"	f	class:fork_executor	typeref:typename:void	file:
on_work_started	asio/src/examples/cpp14/executors/pipeline.cpp	/^  void on_work_started() const noexcept$/;"	f	class:thread_executor	typeref:typename:void	file:
on_work_started	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    void on_work_started() const noexcept$/;"	f	class:priority_scheduler::executor_type	typeref:typename:void	file:
one	asio/include/asio/serial_port_base.hpp	/^    enum type { one, onepointfive, two };$/;"	e	enum:asio::serial_port_base::stop_bits::type
one_buffer	asio/include/asio/buffer.hpp	/^struct one_buffer {};$/;"	s	namespace:asio::detail
one_thread_	asio/include/asio/detail/scheduler.hpp	/^  const bool one_thread_;$/;"	m	class:asio::detail::scheduler	typeref:typename:const bool
onepointfive	asio/include/asio/serial_port_base.hpp	/^    enum type { one, onepointfive, two };$/;"	e	enum:asio::serial_port_base::stop_bits::type
op	asio/include/asio/detail/deadline_timer_service.hpp	/^    typedef wait_handler<Handler, IoExecutor> op;$/;"	t	function:asio::detail::deadline_timer_service::async_wait	typeref:typename:wait_handler<Handler,IoExecutor>
op	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  typedef executor_op<function_type, Allocator> op;$/;"	t	function:asio::detail::strand_executor_service::defer	typeref:typename:executor_op<function_type,Allocator>
op	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  typedef executor_op<function_type, Allocator> op;$/;"	t	function:asio::detail::strand_executor_service::dispatch	typeref:typename:executor_op<function_type,Allocator>
op	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  typedef executor_op<function_type, Allocator> op;$/;"	t	function:asio::detail::strand_executor_service::post	typeref:typename:executor_op<function_type,Allocator>
op	asio/include/asio/detail/impl/strand_service.hpp	/^  typedef completion_handler<Handler> op;$/;"	t	function:asio::detail::strand_service::dispatch	typeref:typename:completion_handler<Handler>
op	asio/include/asio/detail/impl/strand_service.hpp	/^  typedef completion_handler<Handler> op;$/;"	t	function:asio::detail::strand_service::post	typeref:typename:completion_handler<Handler>
op	asio/include/asio/detail/reactive_descriptor_service.hpp	/^    typedef descriptor_read_op<MutableBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_descriptor_service::async_read_some	typeref:typename:descriptor_read_op<MutableBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/reactive_descriptor_service.hpp	/^    typedef descriptor_write_op<ConstBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_descriptor_service::async_write_some	typeref:typename:descriptor_write_op<ConstBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/reactive_descriptor_service.hpp	/^    typedef reactive_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_descriptor_service::async_read_some	typeref:typename:reactive_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/reactive_descriptor_service.hpp	/^    typedef reactive_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_descriptor_service::async_write_some	typeref:typename:reactive_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/reactive_descriptor_service.hpp	/^    typedef reactive_wait_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_descriptor_service::async_wait	typeref:typename:reactive_wait_op<Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service.hpp	/^        PeerIoExecutor, Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service::async_move_accept	typeref:typename:reactive_socket_move_accept_op<Protocol,PeerIoExecutor,Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service.hpp	/^        endpoint_type, Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service::async_receive_from	typeref:typename:reactive_socket_recvfrom_op<MutableBufferSequence,endpoint_type,Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service.hpp	/^        endpoint_type, Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service::async_send_to	typeref:typename:reactive_socket_sendto_op<ConstBufferSequence,endpoint_type,Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service.hpp	/^    typedef reactive_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service::async_receive_from	typeref:typename:reactive_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service.hpp	/^    typedef reactive_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service::async_send_to	typeref:typename:reactive_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service.hpp	/^    typedef reactive_socket_accept_op<Socket, Protocol, Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service::async_accept	typeref:typename:reactive_socket_accept_op<Socket,Protocol,Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service.hpp	/^    typedef reactive_socket_connect_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service::async_connect	typeref:typename:reactive_socket_connect_op<Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service_base.hpp	/^        ConstBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service_base::async_send	typeref:typename:reactive_socket_send_op<ConstBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service_base.hpp	/^        MutableBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service_base::async_receive	typeref:typename:reactive_socket_recv_op<MutableBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service_base.hpp	/^        MutableBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service_base::async_receive_with_flags	typeref:typename:reactive_socket_recvmsg_op<MutableBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service_base.hpp	/^    typedef reactive_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service_base::async_receive	typeref:typename:reactive_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service_base.hpp	/^    typedef reactive_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service_base::async_receive_with_flags	typeref:typename:reactive_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service_base.hpp	/^    typedef reactive_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service_base::async_send	typeref:typename:reactive_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/reactive_socket_service_base.hpp	/^    typedef reactive_wait_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::reactive_socket_service_base::async_wait	typeref:typename:reactive_wait_op<Handler,IoExecutor>
op	asio/include/asio/detail/resolver_service.hpp	/^    typedef resolve_endpoint_op<Protocol, Handler, IoExecutor> op;$/;"	t	function:asio::detail::resolver_service::async_resolve	typeref:typename:resolve_endpoint_op<Protocol,Handler,IoExecutor>
op	asio/include/asio/detail/resolver_service.hpp	/^    typedef resolve_query_op<Protocol, Handler, IoExecutor> op;$/;"	t	function:asio::detail::resolver_service::async_resolve	typeref:typename:resolve_query_op<Protocol,Handler,IoExecutor>
op	asio/include/asio/detail/signal_set_service.hpp	/^    typedef signal_handler<Handler, IoExecutor> op;$/;"	t	function:asio::detail::signal_set_service::async_wait	typeref:typename:signal_handler<Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_handle_service.hpp	/^        ConstBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_handle_service::async_write_some	typeref:typename:win_iocp_handle_write_op<ConstBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_handle_service.hpp	/^        ConstBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_handle_service::async_write_some_at	typeref:typename:win_iocp_handle_write_op<ConstBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_handle_service.hpp	/^        MutableBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_handle_service::async_read_some	typeref:typename:win_iocp_handle_read_op<MutableBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_handle_service.hpp	/^        MutableBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_handle_service::async_read_some_at	typeref:typename:win_iocp_handle_read_op<MutableBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^    typedef win_iocp_overlapped_op<Handler, io_object_executor<Executor> > op;$/;"	t	function:asio::detail::win_iocp_overlapped_ptr::reset	typeref:typename:win_iocp_overlapped_op<Handler,io_object_executor<Executor>>
op	asio/include/asio/detail/win_iocp_socket_service.hpp	/^        ConstBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service::async_send_to	typeref:typename:win_iocp_socket_send_op<ConstBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service.hpp	/^        endpoint_type, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service::async_receive_from	typeref:typename:win_iocp_socket_recvfrom_op<MutableBufferSequence,endpoint_type,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service.hpp	/^        protocol_type, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service::async_accept	typeref:typename:win_iocp_socket_accept_op<Socket,protocol_type,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service.hpp	/^        protocol_type, PeerIoExecutor, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service::async_move_accept	typeref:typename:win_iocp_socket_move_accept_op<protocol_type,PeerIoExecutor,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    typedef win_iocp_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service::async_receive_from	typeref:typename:win_iocp_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    typedef win_iocp_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service::async_send_to	typeref:typename:win_iocp_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    typedef win_iocp_socket_connect_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service::async_connect	typeref:typename:win_iocp_socket_connect_op<Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^        ConstBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service_base::async_send	typeref:typename:win_iocp_socket_send_op<ConstBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^        MutableBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service_base::async_receive	typeref:typename:win_iocp_socket_recv_op<MutableBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^        MutableBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service_base::async_receive_with_flags	typeref:typename:win_iocp_socket_recvmsg_op<MutableBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    typedef win_iocp_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service_base::async_receive	typeref:typename:win_iocp_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    typedef win_iocp_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service_base::async_receive_with_flags	typeref:typename:win_iocp_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    typedef win_iocp_null_buffers_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service_base::async_send	typeref:typename:win_iocp_null_buffers_op<Handler,IoExecutor>
op	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    typedef win_iocp_wait_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_iocp_socket_service_base::async_wait	typeref:typename:win_iocp_wait_op<Handler,IoExecutor>
op	asio/include/asio/detail/win_object_handle_service.hpp	/^    typedef wait_handler<Handler, IoExecutor> op;$/;"	t	function:asio::detail::win_object_handle_service::async_wait	typeref:typename:wait_handler<Handler,IoExecutor>
op	asio/include/asio/detail/winrt_resolver_service.hpp	/^    typedef winrt_resolve_op<Protocol, Handler, IoExecutor> op;$/;"	t	function:asio::detail::winrt_resolver_service::async_resolve	typeref:typename:winrt_resolve_op<Protocol,Handler,IoExecutor>
op	asio/include/asio/detail/winrt_ssocket_service.hpp	/^    typedef winrt_socket_connect_op<Handler, IoExecutor> op;$/;"	t	function:asio::detail::winrt_ssocket_service::async_connect	typeref:typename:winrt_socket_connect_op<Handler,IoExecutor>
op	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^    typedef winrt_socket_recv_op<MutableBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::winrt_ssocket_service_base::async_receive	typeref:typename:winrt_socket_recv_op<MutableBufferSequence,Handler,IoExecutor>
op	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^    typedef winrt_socket_send_op<ConstBufferSequence, Handler, IoExecutor> op;$/;"	t	function:asio::detail::winrt_ssocket_service_base::async_send	typeref:typename:winrt_socket_send_op<ConstBufferSequence,Handler,IoExecutor>
op	asio/include/asio/impl/io_context.hpp	/^        typename decay<LegacyCompletionHandler>::type> op;$/;"	t	function:asio::io_context::initiate_dispatch::operator ()	typeref:typename:detail::completion_handler<typename decay<LegacyCompletionHandler>::type>
op	asio/include/asio/impl/io_context.hpp	/^      typename decay<LegacyCompletionHandler>::type> op;$/;"	t	function:asio::io_context::initiate_post::operator ()	typeref:typename:detail::completion_handler<typename decay<LegacyCompletionHandler>::type>
op	asio/include/asio/impl/io_context.hpp	/^  typedef detail::executor_op<function_type, Allocator, detail::operation> op;$/;"	t	function:asio::io_context::executor_type::defer	typeref:typename:detail::executor_op<function_type,Allocator,detail::operation>
op	asio/include/asio/impl/io_context.hpp	/^  typedef detail::executor_op<function_type, Allocator, detail::operation> op;$/;"	t	function:asio::io_context::executor_type::dispatch	typeref:typename:detail::executor_op<function_type,Allocator,detail::operation>
op	asio/include/asio/impl/io_context.hpp	/^  typedef detail::executor_op<function_type, Allocator, detail::operation> op;$/;"	t	function:asio::io_context::executor_type::post	typeref:typename:detail::executor_op<function_type,Allocator,detail::operation>
op	asio/include/asio/impl/system_executor.hpp	/^  typedef detail::executor_op<function_type, Allocator> op;$/;"	t	function:asio::system_executor::defer	typeref:typename:detail::executor_op<function_type,Allocator>
op	asio/include/asio/impl/system_executor.hpp	/^  typedef detail::executor_op<function_type, Allocator> op;$/;"	t	function:asio::system_executor::post	typeref:typename:detail::executor_op<function_type,Allocator>
op	asio/include/asio/impl/thread_pool.hpp	/^  typedef detail::executor_op<function_type, Allocator> op;$/;"	t	function:asio::thread_pool::executor_type::defer	typeref:typename:detail::executor_op<function_type,Allocator>
op	asio/include/asio/impl/thread_pool.hpp	/^  typedef detail::executor_op<function_type, Allocator> op;$/;"	t	function:asio::thread_pool::executor_type::dispatch	typeref:typename:detail::executor_op<function_type,Allocator>
op	asio/include/asio/impl/thread_pool.hpp	/^  typedef detail::executor_op<function_type, Allocator> op;$/;"	t	function:asio::thread_pool::executor_type::post	typeref:typename:detail::executor_op<function_type,Allocator>
op_	asio/include/asio/ssl/detail/io.hpp	/^  Operation op_;$/;"	m	class:asio::ssl::detail::io_op	typeref:typename:Operation
op_count_	asio/src/tests/performance/server.cpp	/^  int op_count_;$/;"	m	class:session	typeref:typename:int	file:
op_queue	asio/include/asio/detail/op_queue.hpp	/^  op_queue()$/;"	f	class:asio::detail::op_queue
op_queue	asio/include/asio/detail/op_queue.hpp	/^class op_queue$/;"	c	namespace:asio::detail
op_queue_	asio/include/asio/detail/dev_poll_reactor.hpp	/^  reactor_op_queue<socket_type> op_queue_[max_ops];$/;"	m	class:asio::detail::dev_poll_reactor	typeref:typename:reactor_op_queue<socket_type>[]
op_queue_	asio/include/asio/detail/epoll_reactor.hpp	/^    op_queue<reactor_op> op_queue_[max_ops];$/;"	m	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:op_queue<reactor_op>[]
op_queue_	asio/include/asio/detail/kqueue_reactor.hpp	/^    op_queue<reactor_op> op_queue_[max_ops];$/;"	m	struct:asio::detail::kqueue_reactor::descriptor_state	typeref:typename:op_queue<reactor_op>[]
op_queue_	asio/include/asio/detail/scheduler.hpp	/^  op_queue<operation> op_queue_;$/;"	m	class:asio::detail::scheduler	typeref:typename:op_queue<operation>
op_queue_	asio/include/asio/detail/select_reactor.hpp	/^  reactor_op_queue<socket_type> op_queue_[max_ops];$/;"	m	class:asio::detail::select_reactor	typeref:typename:reactor_op_queue<socket_type>[]
op_queue_	asio/include/asio/detail/timer_queue.hpp	/^    op_queue<wait_op> op_queue_;$/;"	m	class:asio::detail::timer_queue::per_timer_data	typeref:typename:op_queue<wait_op>
op_queue_	asio/include/asio/detail/win_object_handle_service.hpp	/^    op_queue<wait_op> op_queue_;$/;"	m	class:asio::detail::win_object_handle_service::implementation_type	typeref:typename:op_queue<wait_op>
op_queue_access	asio/include/asio/detail/op_queue.hpp	/^class op_queue_access$/;"	c	namespace:asio::detail
op_types	asio/include/asio/detail/dev_poll_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1,$/;"	g	class:asio::detail::dev_poll_reactor
op_types	asio/include/asio/detail/epoll_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1,$/;"	g	class:asio::detail::epoll_reactor
op_types	asio/include/asio/detail/kqueue_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1,$/;"	g	class:asio::detail::kqueue_reactor
op_types	asio/include/asio/detail/select_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1, except_op = 2,$/;"	g	class:asio::detail::select_reactor
open	asio/include/asio/basic_serial_port.hpp	/^  ASIO_SYNC_OP_VOID open(const std::string& device,$/;"	f	class:asio::basic_serial_port	typeref:typename:ASIO_SYNC_OP_VOID
open	asio/include/asio/basic_serial_port.hpp	/^  void open(const std::string& device)$/;"	f	class:asio::basic_serial_port	typeref:typename:void
open	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID open(const protocol_type& protocol,$/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
open	asio/include/asio/basic_socket.hpp	/^  void open(const protocol_type& protocol = protocol_type())$/;"	f	class:asio::basic_socket	typeref:typename:void
open	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID open(const protocol_type& protocol,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
open	asio/include/asio/basic_socket_acceptor.hpp	/^  void open(const protocol_type& protocol = protocol_type())$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
open	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code open(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
open	asio/include/asio/detail/reactive_socket_service.hpp	/^  asio::error_code open(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:asio::error_code
open	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  asio::error_code open(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:asio::error_code
open	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  asio::error_code open(implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:asio::error_code
open_price	asio/src/examples/cpp03/serialization/stock.hpp	/^  double open_price;$/;"	m	struct:s11n_example::stock	typeref:typename:double
openssl	asio/configure.ac	/^AC_ARG_WITH(openssl,$/;"	w
openssl_init	asio/include/asio/ssl/detail/openssl_init.hpp	/^  openssl_init()$/;"	f	class:asio::ssl::detail::openssl_init
openssl_init	asio/include/asio/ssl/detail/openssl_init.hpp	/^class openssl_init : private openssl_init_base$/;"	c	namespace:asio::ssl::detail
openssl_init_base	asio/include/asio/ssl/detail/openssl_init.hpp	/^class openssl_init_base$/;"	c	namespace:asio::ssl::detail
operation	asio/include/asio/detail/operation.hpp	/^typedef win_iocp_operation operation;$/;"	t	namespace:asio::detail	typeref:typename:win_iocp_operation
operation	asio/include/asio/detail/scheduler.hpp	/^  typedef scheduler_operation operation;$/;"	t	class:asio::detail::scheduler	typeref:typename:scheduler_operation
operation	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^  static void operation(asio::execution_context& \/*ctx*\/,$/;"	f	struct:custom_tracking	typeref:typename:void
operation_aborted	asio/include/asio/error.hpp	/^  operation_aborted = ASIO_WIN_OR_POSIX($/;"	e	enum:asio::error::basic_errors
operation_not_supported	asio/include/asio/error.hpp	/^  operation_not_supported = ASIO_SOCKET_ERROR(EOPNOTSUPP),$/;"	e	enum:asio::error::basic_errors
operation_type	asio/include/asio/detail/scheduler_operation.hpp	/^  typedef scheduler_operation operation_type;$/;"	t	class:asio::detail::ASIO_INHERIT_TRACKED_HANDLER	typeref:typename:scheduler_operation
operation_type	asio/include/asio/detail/win_iocp_operation.hpp	/^  typedef win_iocp_operation operation_type;$/;"	t	class:asio::detail::win_iocp_operation	typeref:typename:win_iocp_operation
operations_	asio/include/asio/detail/reactor_op_queue.hpp	/^  hash_map<key_type, mapped_type> operations_;$/;"	m	class:asio::detail::reactor_op_queue	typeref:typename:hash_map<key_type,mapped_type>
operations_composed_1_SOURCES	asio/src/examples/cpp11/Makefile.am	/^operations_composed_1_SOURCES = operations\/composed_1.cpp$/;"	m
operations_composed_1_SOURCES	asio/src/examples/cpp14/Makefile.am	/^operations_composed_1_SOURCES = operations\/composed_1.cpp$/;"	m
operations_composed_2_SOURCES	asio/src/examples/cpp11/Makefile.am	/^operations_composed_2_SOURCES = operations\/composed_2.cpp$/;"	m
operations_composed_2_SOURCES	asio/src/examples/cpp14/Makefile.am	/^operations_composed_2_SOURCES = operations\/composed_2.cpp$/;"	m
operations_composed_3_SOURCES	asio/src/examples/cpp11/Makefile.am	/^operations_composed_3_SOURCES = operations\/composed_3.cpp$/;"	m
operations_composed_3_SOURCES	asio/src/examples/cpp14/Makefile.am	/^operations_composed_3_SOURCES = operations\/composed_3.cpp$/;"	m
operations_composed_4_SOURCES	asio/src/examples/cpp11/Makefile.am	/^operations_composed_4_SOURCES = operations\/composed_4.cpp$/;"	m
operations_composed_4_SOURCES	asio/src/examples/cpp14/Makefile.am	/^operations_composed_4_SOURCES = operations\/composed_4.cpp$/;"	m
operations_composed_5_SOURCES	asio/src/examples/cpp11/Makefile.am	/^operations_composed_5_SOURCES = operations\/composed_5.cpp$/;"	m
operations_composed_5_SOURCES	asio/src/examples/cpp14/Makefile.am	/^operations_composed_5_SOURCES = operations\/composed_5.cpp$/;"	m
operations_composed_6_SOURCES	asio/src/examples/cpp11/Makefile.am	/^operations_composed_6_SOURCES = operations\/composed_6.cpp$/;"	m
operations_composed_6_SOURCES	asio/src/examples/cpp14/Makefile.am	/^operations_composed_6_SOURCES = operations\/composed_6.cpp$/;"	m
operations_composed_7_SOURCES	asio/src/examples/cpp11/Makefile.am	/^operations_composed_7_SOURCES = operations\/composed_7.cpp$/;"	m
operations_composed_7_SOURCES	asio/src/examples/cpp14/Makefile.am	/^operations_composed_7_SOURCES = operations\/composed_7.cpp$/;"	m
operations_composed_8_SOURCES	asio/src/examples/cpp11/Makefile.am	/^operations_composed_8_SOURCES = operations\/composed_8.cpp$/;"	m
operations_composed_8_SOURCES	asio/src/examples/cpp14/Makefile.am	/^operations_composed_8_SOURCES = operations\/composed_8.cpp$/;"	m
operator !	asio/include/asio/detail/socket_option.hpp	/^  bool operator!() const$/;"	f	class:asio::detail::socket_option::boolean	typeref:typename:bool
operator !	asio/include/asio/error_code.hpp	/^  bool operator!() const$/;"	f	class:asio::error_code	typeref:typename:bool
operator !	asio/include/asio/ip/detail/socket_option.hpp	/^  bool operator!() const$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:bool
operator !=	asio/include/asio/buffers_iterator.hpp	/^  friend bool operator!=(const buffers_iterator& a, const buffers_iterator& b)$/;"	f	namespace:asio	typeref:typename:bool
operator !=	asio/include/asio/detail/io_object_executor.hpp	/^  friend bool operator!=(const io_object_executor& a,$/;"	f	namespace:asio::detail	typeref:typename:bool
operator !=	asio/include/asio/error_code.hpp	/^  friend bool operator!=(const error_code& e1, const error_code& e2)$/;"	f	namespace:asio	typeref:typename:bool
operator !=	asio/include/asio/executor.hpp	/^  friend bool operator!=(const executor& a,$/;"	f	namespace:asio	typeref:typename:bool
operator !=	asio/include/asio/generic/basic_endpoint.hpp	/^  friend bool operator!=(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::generic	typeref:typename:bool
operator !=	asio/include/asio/generic/datagram_protocol.hpp	/^  friend bool operator!=(const datagram_protocol& p1,$/;"	f	namespace:asio::generic	typeref:typename:bool
operator !=	asio/include/asio/generic/raw_protocol.hpp	/^  friend bool operator!=(const raw_protocol& p1, const raw_protocol& p2)$/;"	f	namespace:asio::generic	typeref:typename:bool
operator !=	asio/include/asio/generic/seq_packet_protocol.hpp	/^  friend bool operator!=(const seq_packet_protocol& p1,$/;"	f	namespace:asio::generic	typeref:typename:bool
operator !=	asio/include/asio/generic/stream_protocol.hpp	/^  friend bool operator!=(const stream_protocol& p1, const stream_protocol& p2)$/;"	f	namespace:asio::generic	typeref:typename:bool
operator !=	asio/include/asio/impl/use_future.hpp	/^  friend bool operator!=(const promise_executor& a,$/;"	f	namespace:asio::detail	typeref:typename:bool
operator !=	asio/include/asio/io_context.hpp	/^  friend bool operator!=(const executor_type& a,$/;"	f	class:asio::io_context	typeref:typename:bool
operator !=	asio/include/asio/io_context_strand.hpp	/^  friend bool operator!=(const strand& a, const strand& b) ASIO_NOEXCEPT$/;"	f	class:asio::io_context	typeref:typename:bool
operator !=	asio/include/asio/ip/address.hpp	/^  friend bool operator!=(const address& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/address_v4.hpp	/^  friend bool operator!=(const address_v4& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/address_v4_iterator.hpp	/^  friend bool operator!=(const basic_address_iterator& a,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/address_v6.hpp	/^  friend bool operator!=(const address_v6& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/address_v6_iterator.hpp	/^  friend bool operator!=(const basic_address_iterator& a,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/basic_endpoint.hpp	/^  friend bool operator!=(const basic_endpoint<InternetProtocol>& e1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  friend bool operator!=(const basic_resolver_iterator& a,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/basic_resolver_results.hpp	/^  friend bool operator!=(const basic_resolver_results& a,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/icmp.hpp	/^  friend bool operator!=(const icmp& p1, const icmp& p2)$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/network_v4.hpp	/^  friend bool operator!=(const network_v4& a, const network_v4& b)$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/network_v6.hpp	/^  friend bool operator!=(const network_v6& a, const network_v6& b)$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/tcp.hpp	/^  friend bool operator!=(const tcp& p1, const tcp& p2)$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/ip/udp.hpp	/^  friend bool operator!=(const udp& p1, const udp& p2)$/;"	f	namespace:asio::ip	typeref:typename:bool
operator !=	asio/include/asio/local/basic_endpoint.hpp	/^  friend bool operator!=(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::local	typeref:typename:bool
operator !=	asio/include/asio/strand.hpp	/^  friend bool operator!=(const strand& a, const strand& b) ASIO_NOEXCEPT$/;"	f	namespace:asio	typeref:typename:bool
operator !=	asio/include/asio/system_executor.hpp	/^  friend bool operator!=(const system_executor&,$/;"	f	namespace:asio	typeref:typename:bool
operator !=	asio/include/asio/thread_pool.hpp	/^  friend bool operator!=(const executor_type& a,$/;"	f	class:asio::thread_pool	typeref:typename:bool
operator !=	asio/src/examples/cpp03/allocation/server.cpp	/^  bool operator!=(const handler_allocator& other) const$/;"	f	class:handler_allocator	typeref:typename:bool	file:
operator !=	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    bool operator!=(const executor& other) const$/;"	f	class:handler_priority_queue::executor	typeref:typename:bool	file:
operator !=	asio/src/examples/cpp11/allocation/server.cpp	/^  bool operator!=(const handler_allocator& other) const noexcept$/;"	f	class:handler_allocator	typeref:typename:bool	file:
operator !=	asio/src/examples/cpp11/executors/fork_join.cpp	/^  friend bool operator!=(const fork_executor& a,$/;"	f	typeref:typename:bool	file:
operator !=	asio/src/examples/cpp11/executors/pipeline.cpp	/^  friend bool operator!=(const thread_executor&,$/;"	f	typeref:typename:bool	file:
operator !=	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    friend bool operator!=(const executor_type& a,$/;"	f	class:priority_scheduler	typeref:typename:bool	file:
operator !=	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    bool operator!=(const executor& other) const noexcept$/;"	f	class:handler_priority_queue::executor	typeref:typename:bool	file:
operator !=	asio/src/examples/cpp14/executors/fork_join.cpp	/^  friend bool operator!=(const fork_executor& a,$/;"	f	typeref:typename:bool	file:
operator !=	asio/src/examples/cpp14/executors/pipeline.cpp	/^  friend bool operator!=(const thread_executor&,$/;"	f	typeref:typename:bool	file:
operator !=	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    friend bool operator!=(const executor_type& a,$/;"	f	class:priority_scheduler	typeref:typename:bool	file:
operator !=	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  bool operator!=(const connection_iter&) const noexcept$/;"	f	class:connection_iter	typeref:typename:bool	file:
operator ()	asio/include/asio/async_result.hpp	/^  void operator()(CompletionHandler&&) const$/;"	f	struct:asio::detail::initiation_archetype	typeref:typename:void
operator ()	asio/include/asio/basic_datagram_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::basic_datagram_socket::initiate_async_receive	typeref:typename:void
operator ()	asio/include/asio/basic_datagram_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::basic_datagram_socket::initiate_async_receive_from	typeref:typename:void
operator ()	asio/include/asio/basic_datagram_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::basic_datagram_socket::initiate_async_send	typeref:typename:void
operator ()	asio/include/asio/basic_datagram_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::basic_datagram_socket::initiate_async_send_to	typeref:typename:void
operator ()	asio/include/asio/basic_deadline_timer.hpp	/^    void operator()(ASIO_MOVE_ARG(WaitHandler) handler) const$/;"	f	class:asio::basic_deadline_timer::initiate_async_wait	typeref:typename:void
operator ()	asio/include/asio/basic_raw_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::basic_raw_socket::initiate_async_receive	typeref:typename:void
operator ()	asio/include/asio/basic_raw_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::basic_raw_socket::initiate_async_receive_from	typeref:typename:void
operator ()	asio/include/asio/basic_raw_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::basic_raw_socket::initiate_async_send	typeref:typename:void
operator ()	asio/include/asio/basic_raw_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::basic_raw_socket::initiate_async_send_to	typeref:typename:void
operator ()	asio/include/asio/basic_seq_packet_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::basic_seq_packet_socket::initiate_async_receive_with_flags	typeref:typename:void
operator ()	asio/include/asio/basic_seq_packet_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::basic_seq_packet_socket::initiate_async_send	typeref:typename:void
operator ()	asio/include/asio/basic_serial_port.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::basic_serial_port::initiate_async_read_some	typeref:typename:void
operator ()	asio/include/asio/basic_serial_port.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::basic_serial_port::initiate_async_write_some	typeref:typename:void
operator ()	asio/include/asio/basic_signal_set.hpp	/^    void operator()(ASIO_MOVE_ARG(SignalHandler) handler) const$/;"	f	class:asio::basic_signal_set::initiate_async_wait	typeref:typename:void
operator ()	asio/include/asio/basic_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(ConnectHandler) handler,$/;"	f	class:asio::basic_socket::initiate_async_connect	typeref:typename:void
operator ()	asio/include/asio/basic_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(WaitHandler) handler, wait_type w) const$/;"	f	class:asio::basic_socket::initiate_async_wait	typeref:typename:void
operator ()	asio/include/asio/basic_socket_acceptor.hpp	/^    void operator()(ASIO_MOVE_ARG(AcceptHandler) handler,$/;"	f	class:asio::basic_socket_acceptor::initiate_async_accept	typeref:typename:void
operator ()	asio/include/asio/basic_socket_acceptor.hpp	/^    void operator()(ASIO_MOVE_ARG(MoveAcceptHandler) handler,$/;"	f	class:asio::basic_socket_acceptor::initiate_async_move_accept	typeref:typename:void
operator ()	asio/include/asio/basic_socket_acceptor.hpp	/^    void operator()(ASIO_MOVE_ARG(WaitHandler) handler, wait_type w) const$/;"	f	class:asio::basic_socket_acceptor::initiate_async_wait	typeref:typename:void
operator ()	asio/include/asio/basic_stream_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::basic_stream_socket::initiate_async_receive	typeref:typename:void
operator ()	asio/include/asio/basic_stream_socket.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::basic_stream_socket::initiate_async_send	typeref:typename:void
operator ()	asio/include/asio/basic_waitable_timer.hpp	/^    void operator()(ASIO_MOVE_ARG(WaitHandler) handler) const$/;"	f	class:asio::basic_waitable_timer::initiate_async_wait	typeref:typename:void
operator ()	asio/include/asio/bind_executor.hpp	/^  typename detail::executor_binder_result_of0<T>::type operator()() const$/;"	f	class:asio::executor_binder	typeref:typename:detail::executor_binder_result_of0<T>::type
operator ()	asio/include/asio/bind_executor.hpp	/^  typename detail::executor_binder_result_of0<T>::type operator()()$/;"	f	class:asio::executor_binder	typeref:typename:detail::executor_binder_result_of0<T>::type
operator ()	asio/include/asio/bind_executor.hpp	/^  typename result_of<T(Args...)>::type operator()($/;"	f	class:asio::executor_binder	typeref:typename:result_of<T (Args...)>::type
operator ()	asio/include/asio/buffer.hpp	/^  void operator()()$/;"	f	class:asio::detail::buffer_debug_check	typeref:typename:void
operator ()	asio/include/asio/completion_condition.hpp	/^  std::size_t operator()(const Error& err, std::size_t bytes_transferred)$/;"	f	class:asio::detail::transfer_at_least_t	typeref:typename:std::size_t
operator ()	asio/include/asio/completion_condition.hpp	/^  std::size_t operator()(const Error& err, std::size_t bytes_transferred)$/;"	f	class:asio::detail::transfer_exactly_t	typeref:typename:std::size_t
operator ()	asio/include/asio/completion_condition.hpp	/^  std::size_t operator()(const Error& err, std::size_t)$/;"	f	class:asio::detail::transfer_all_t	typeref:typename:std::size_t
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()() const$/;"	f	class:asio::detail::binder1	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()() const$/;"	f	class:asio::detail::binder2	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()() const$/;"	f	class:asio::detail::binder3	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()() const$/;"	f	class:asio::detail::binder4	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()() const$/;"	f	class:asio::detail::binder5	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()()$/;"	f	class:asio::detail::binder1	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()()$/;"	f	class:asio::detail::binder2	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()()$/;"	f	class:asio::detail::binder3	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()()$/;"	f	class:asio::detail::binder4	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()()$/;"	f	class:asio::detail::binder5	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()()$/;"	f	class:asio::detail::move_binder1	typeref:typename:void
operator ()	asio/include/asio/detail/bind_handler.hpp	/^  void operator()()$/;"	f	class:asio::detail::move_binder2	typeref:typename:void
operator ()	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  void operator()()$/;"	f	class:asio::detail::strand_executor_service::invoker	typeref:typename:void
operator ()	asio/include/asio/detail/socket_ops.hpp	/^struct noop_deleter { void operator()(void*) {} };$/;"	f	struct:asio::detail::socket_ops::noop_deleter	typeref:typename:void
operator ()	asio/include/asio/detail/work_dispatcher.hpp	/^  void operator()()$/;"	f	class:asio::detail::work_dispatcher	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  bool operator()(Dispatcher& dispatcher, Handler&) const$/;"	f	struct:asio::detail::is_continuation_if_running	typeref:typename:bool
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  bool operator()(Dispatcher&, Handler& handler) const$/;"	f	struct:asio::detail::is_continuation_delegated	typeref:typename:bool
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()() const$/;"	f	class:asio::detail::rewrapped_handler	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()() const$/;"	f	class:asio::detail::wrapped_handler	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()()$/;"	f	class:asio::detail::rewrapped_handler	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()()$/;"	f	class:asio::detail::wrapped_handler	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()(const Arg1& arg1) const$/;"	f	class:asio::detail::wrapped_handler	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()(const Arg1& arg1)$/;"	f	class:asio::detail::wrapped_handler	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()(const Arg1& arg1, const Arg2& arg2) const$/;"	f	class:asio::detail::wrapped_handler	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()(const Arg1& arg1, const Arg2& arg2)$/;"	f	class:asio::detail::wrapped_handler	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()(const Arg1& arg1, const Arg2& arg2, const Arg3& arg3) const$/;"	f	class:asio::detail::wrapped_handler	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()(const Arg1& arg1, const Arg2& arg2, const Arg3& arg3)$/;"	f	class:asio::detail::wrapped_handler	typeref:typename:void
operator ()	asio/include/asio/detail/wrapped_handler.hpp	/^  void operator()(const Arg1& arg1, const Arg2& arg2, const Arg3& arg3,$/;"	f	class:asio::detail::wrapped_handler	typeref:typename:void
operator ()	asio/include/asio/impl/buffered_read_stream.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_buffered_fill	typeref:typename:void
operator ()	asio/include/asio/impl/buffered_read_stream.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_buffered_read_some	typeref:typename:void
operator ()	asio/include/asio/impl/buffered_read_stream.hpp	/^    void operator()(const asio::error_code& ec, std::size_t)$/;"	f	class:asio::detail::buffered_read_some_handler	typeref:typename:void
operator ()	asio/include/asio/impl/buffered_read_stream.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::buffered_fill_handler	typeref:typename:void
operator ()	asio/include/asio/impl/buffered_write_stream.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::detail::initiate_async_buffered_flush	typeref:typename:void
operator ()	asio/include/asio/impl/buffered_write_stream.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::detail::initiate_async_buffered_write_some	typeref:typename:void
operator ()	asio/include/asio/impl/buffered_write_stream.hpp	/^    void operator()(const asio::error_code& ec, std::size_t)$/;"	f	class:asio::detail::buffered_write_some_handler	typeref:typename:void
operator ()	asio/include/asio/impl/buffered_write_stream.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::buffered_flush_handler	typeref:typename:void
operator ()	asio/include/asio/impl/co_spawn.hpp	/^  void operator()(Handler&& handler, F&& f) const$/;"	f	class:asio::detail::initiate_co_spawn	typeref:typename:void
operator ()	asio/include/asio/impl/compose.hpp	/^    void operator()()$/;"	f	class:asio::detail::composed_op	typeref:typename:void
operator ()	asio/include/asio/impl/compose.hpp	/^    void operator()(ASIO_MOVE_ARG(Handler) handler,$/;"	f	class:asio::detail::initiate_composed_op	typeref:typename:void
operator ()	asio/include/asio/impl/compose.hpp	/^    void operator()(ASIO_MOVE_ARG(T)... t)$/;"	f	class:asio::detail::composed_op	typeref:typename:void
operator ()	asio/include/asio/impl/connect.hpp	/^    bool operator()(const asio::error_code&, const Endpoint&)$/;"	f	struct:asio::detail::default_connect_condition	typeref:typename:bool
operator ()	asio/include/asio/impl/connect.hpp	/^    void operator()(ASIO_MOVE_ARG(IteratorConnectHandler) handler,$/;"	f	class:asio::detail::initiate_async_iterator_connect	typeref:typename:void
operator ()	asio/include/asio/impl/connect.hpp	/^    void operator()(ASIO_MOVE_ARG(RangeConnectHandler) handler,$/;"	f	class:asio::detail::initiate_async_range_connect	typeref:typename:void
operator ()	asio/include/asio/impl/connect.hpp	/^    void operator()(asio::error_code ec, int start = 0)$/;"	f	class:asio::detail::iterator_connect_op	typeref:typename:void
operator ()	asio/include/asio/impl/connect.hpp	/^    void operator()(asio::error_code ec, int start = 0)$/;"	f	class:asio::detail::range_connect_op	typeref:typename:void
operator ()	asio/include/asio/impl/defer.hpp	/^  void operator()(ASIO_MOVE_ARG(CompletionHandler) handler) const$/;"	f	class:asio::detail::initiate_defer	typeref:typename:void
operator ()	asio/include/asio/impl/defer.hpp	/^  void operator()(ASIO_MOVE_ARG(CompletionHandler) handler) const$/;"	f	class:asio::detail::initiate_defer_with_executor	typeref:typename:void
operator ()	asio/include/asio/impl/detached.hpp	/^    void operator()()$/;"	f	class:asio::detail::detached_handler	typeref:typename:void
operator ()	asio/include/asio/impl/detached.hpp	/^    void operator()(Args...)$/;"	f	class:asio::detail::detached_handler	typeref:typename:void
operator ()	asio/include/asio/impl/dispatch.hpp	/^  void operator()(ASIO_MOVE_ARG(CompletionHandler) handler) const$/;"	f	class:asio::detail::initiate_dispatch	typeref:typename:void
operator ()	asio/include/asio/impl/dispatch.hpp	/^  void operator()(ASIO_MOVE_ARG(CompletionHandler) handler) const$/;"	f	class:asio::detail::initiate_dispatch_with_executor	typeref:typename:void
operator ()	asio/include/asio/impl/executor.hpp	/^  void operator()()$/;"	f	class:asio::executor::function	typeref:typename:void
operator ()	asio/include/asio/impl/io_context.hpp	/^  void operator()(ASIO_MOVE_ARG(LegacyCompletionHandler) handler,$/;"	f	struct:asio::io_context::initiate_dispatch	typeref:typename:void
operator ()	asio/include/asio/impl/io_context.hpp	/^  void operator()(ASIO_MOVE_ARG(LegacyCompletionHandler) handler,$/;"	f	struct:asio::io_context::initiate_post	typeref:typename:void
operator ()	asio/include/asio/impl/post.hpp	/^  void operator()(ASIO_MOVE_ARG(CompletionHandler) handler) const$/;"	f	class:asio::detail::initiate_post	typeref:typename:void
operator ()	asio/include/asio/impl/post.hpp	/^  void operator()(ASIO_MOVE_ARG(CompletionHandler) handler) const$/;"	f	class:asio::detail::initiate_post_with_executor	typeref:typename:void
operator ()	asio/include/asio/impl/read.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_buffer_sequence	typeref:typename:void
operator ()	asio/include/asio/impl/read.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_dynbuf_v1	typeref:typename:void
operator ()	asio/include/asio/impl/read.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_dynbuf_v2	typeref:typename:void
operator ()	asio/include/asio/impl/read.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_dynbuf_v1_op	typeref:typename:void
operator ()	asio/include/asio/impl/read.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_dynbuf_v2_op	typeref:typename:void
operator ()	asio/include/asio/impl/read.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_op	typeref:typename:void
operator ()	asio/include/asio/impl/read_at.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_at_buffer_sequence	typeref:typename:void
operator ()	asio/include/asio/impl/read_at.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_at_streambuf	typeref:typename:void
operator ()	asio/include/asio/impl/read_at.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_at_op	typeref:typename:void
operator ()	asio/include/asio/impl/read_at.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_at_streambuf_op	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_until_delim_string_v1	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_until_delim_string_v2	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_until_delim_v1	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_until_delim_v2	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_until_expr_v1	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_until_expr_v2	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_until_match_v1	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::detail::initiate_async_read_until_match_v2	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_until_delim_op_v1	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_until_delim_op_v2	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_until_delim_string_op_v1	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_until_delim_string_op_v2	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_until_expr_op_v1	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_until_expr_op_v2	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_until_match_op_v1	typeref:typename:void
operator ()	asio/include/asio/impl/read_until.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::read_until_match_op_v2	typeref:typename:void
operator ()	asio/include/asio/impl/redirect_error.hpp	/^    void operator()($/;"	f	struct:asio::async_result::init_wrapper	typeref:typename:void
operator ()	asio/include/asio/impl/redirect_error.hpp	/^  operator()(ASIO_MOVE_ARG(Arg) arg)$/;"	f	class:asio::detail::redirect_error_handler	typeref:typename:enable_if<!is_same<typename decay<Arg>::type,asio::error_code>::value>::type
operator ()	asio/include/asio/impl/redirect_error.hpp	/^  operator()(ASIO_MOVE_ARG(Arg) arg, ASIO_MOVE_ARG(Args)... args)$/;"	f	class:asio::detail::redirect_error_handler	typeref:typename:enable_if<!is_same<typename decay<Arg>::type,asio::error_code>::value>::type
operator ()	asio/include/asio/impl/redirect_error.hpp	/^  void operator()()$/;"	f	class:asio::detail::redirect_error_handler	typeref:typename:void
operator ()	asio/include/asio/impl/redirect_error.hpp	/^  void operator()(const asio::error_code& ec)$/;"	f	class:asio::detail::redirect_error_handler	typeref:typename:void
operator ()	asio/include/asio/impl/redirect_error.hpp	/^  void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::redirect_error_handler	typeref:typename:void
operator ()	asio/include/asio/impl/spawn.hpp	/^    void operator()()$/;"	f	class:asio::detail::coro_handler	typeref:typename:void
operator ()	asio/include/asio/impl/spawn.hpp	/^    void operator()()$/;"	f	struct:asio::detail::spawn_helper	typeref:typename:void
operator ()	asio/include/asio/impl/spawn.hpp	/^    void operator()(T value)$/;"	f	class:asio::detail::coro_handler	typeref:typename:void
operator ()	asio/include/asio/impl/spawn.hpp	/^    void operator()(asio::error_code ec)$/;"	f	class:asio::detail::coro_handler	typeref:typename:void
operator ()	asio/include/asio/impl/spawn.hpp	/^    void operator()(asio::error_code ec, T value)$/;"	f	class:asio::detail::coro_handler	typeref:typename:void
operator ()	asio/include/asio/impl/spawn.hpp	/^    void operator()(typename basic_yield_context<Handler>::caller_type& ca)$/;"	f	struct:asio::detail::coro_entry_point	typeref:typename:void
operator ()	asio/include/asio/impl/use_awaitable.hpp	/^  void operator()()$/;"	f	class:asio::detail::awaitable_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_awaitable.hpp	/^  void operator()(Arg&& arg)$/;"	f	class:asio::detail::awaitable_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_awaitable.hpp	/^  void operator()(Args&&... args)$/;"	f	class:asio::detail::awaitable_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_awaitable.hpp	/^  void operator()(const asio::error_code& ec)$/;"	f	class:asio::detail::awaitable_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_awaitable.hpp	/^  void operator()(const asio::error_code& ec, Arg&& arg)$/;"	f	class:asio::detail::awaitable_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_awaitable.hpp	/^  void operator()(const asio::error_code& ec, Args&&... args)$/;"	f	class:asio::detail::awaitable_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_awaitable.hpp	/^  void operator()(std::exception_ptr ex)$/;"	f	class:asio::detail::awaitable_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_awaitable.hpp	/^  void operator()(std::exception_ptr ex, Arg&& arg)$/;"	f	class:asio::detail::awaitable_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_awaitable.hpp	/^  void operator()(std::exception_ptr ex, Args&&... args)$/;"	f	class:asio::detail::awaitable_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()()$/;"	f	class:asio::detail::packaged_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()()$/;"	f	class:asio::detail::promise_handler_0	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()()$/;"	f	class:asio::detail::promise_invoker	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()(ASIO_MOVE_ARG(Arg) arg)$/;"	f	class:asio::detail::promise_handler_1	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()(ASIO_MOVE_ARG(Args)... args)$/;"	f	class:asio::detail::packaged_handler	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()(ASIO_MOVE_ARG(Args)... args)$/;"	f	class:asio::detail::promise_handler_n	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()(const asio::error_code& ec)$/;"	f	class:asio::detail::promise_handler_ec_0	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::promise_handler_ec_1	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::promise_handler_ec_n	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()(const std::exception_ptr& ex)$/;"	f	class:asio::detail::promise_handler_ex_0	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()(const std::exception_ptr& ex,$/;"	f	class:asio::detail::promise_handler_ex_1	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^  void operator()(const std::exception_ptr& ex,$/;"	f	class:asio::detail::promise_handler_ex_n	typeref:typename:void
operator ()	asio/include/asio/impl/use_future.hpp	/^use_future_t<Allocator>::operator()(ASIO_MOVE_ARG(Function) f) const$/;"	f	class:asio::use_future_t	typeref:typename:detail::packaged_token<typename decay<Function>::type,Allocator>
operator ()	asio/include/asio/impl/write.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::detail::initiate_async_write_buffer_sequence	typeref:typename:void
operator ()	asio/include/asio/impl/write.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::detail::initiate_async_write_dynbuf_v1	typeref:typename:void
operator ()	asio/include/asio/impl/write.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::detail::initiate_async_write_dynbuf_v2	typeref:typename:void
operator ()	asio/include/asio/impl/write.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::write_dynbuf_v1_op	typeref:typename:void
operator ()	asio/include/asio/impl/write.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::write_dynbuf_v2_op	typeref:typename:void
operator ()	asio/include/asio/impl/write.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::write_op	typeref:typename:void
operator ()	asio/include/asio/impl/write_at.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::detail::initiate_async_write_at_buffer_sequence	typeref:typename:void
operator ()	asio/include/asio/impl/write_at.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::detail::initiate_async_write_at_streambuf	typeref:typename:void
operator ()	asio/include/asio/impl/write_at.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::write_at_op	typeref:typename:void
operator ()	asio/include/asio/impl/write_at.hpp	/^    void operator()(const asio::error_code& ec,$/;"	f	class:asio::detail::write_at_streambuf_op	typeref:typename:void
operator ()	asio/include/asio/io_context_strand.hpp	/^    void operator()(ASIO_MOVE_ARG(LegacyCompletionHandler) handler,$/;"	f	struct:asio::io_context::strand::initiate_dispatch	typeref:typename:void
operator ()	asio/include/asio/io_context_strand.hpp	/^    void operator()(ASIO_MOVE_ARG(LegacyCompletionHandler) handler,$/;"	f	struct:asio::io_context::strand::initiate_post	typeref:typename:void
operator ()	asio/include/asio/ip/basic_resolver.hpp	/^    void operator()(ASIO_MOVE_ARG(ResolveHandler) handler,$/;"	f	class:asio::ip::basic_resolver::initiate_async_resolve	typeref:typename:void
operator ()	asio/include/asio/posix/basic_descriptor.hpp	/^    void operator()(ASIO_MOVE_ARG(WaitHandler) handler, wait_type w) const$/;"	f	class:asio::posix::basic_descriptor::initiate_async_wait	typeref:typename:void
operator ()	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::posix::basic_stream_descriptor::initiate_async_read_some	typeref:typename:void
operator ()	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::posix::basic_stream_descriptor::initiate_async_write_some	typeref:typename:void
operator ()	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^  engine::want operator()(engine& eng,$/;"	f	class:asio::ssl::detail::buffered_handshake_op	typeref:typename:engine::want
operator ()	asio/include/asio/ssl/detail/handshake_op.hpp	/^  engine::want operator()(engine& eng,$/;"	f	class:asio::ssl::detail::handshake_op	typeref:typename:engine::want
operator ()	asio/include/asio/ssl/detail/io.hpp	/^  void operator()(asio::error_code ec,$/;"	f	class:asio::ssl::detail::io_op	typeref:typename:void
operator ()	asio/include/asio/ssl/detail/read_op.hpp	/^  engine::want operator()(engine& eng,$/;"	f	class:asio::ssl::detail::read_op	typeref:typename:engine::want
operator ()	asio/include/asio/ssl/detail/shutdown_op.hpp	/^  engine::want operator()(engine& eng,$/;"	f	class:asio::ssl::detail::shutdown_op	typeref:typename:engine::want
operator ()	asio/include/asio/ssl/detail/write_op.hpp	/^  engine::want operator()(engine& eng,$/;"	f	class:asio::ssl::detail::write_op	typeref:typename:engine::want
operator ()	asio/include/asio/ssl/stream.hpp	/^    void operator()(ASIO_MOVE_ARG(BufferedHandshakeHandler) handler,$/;"	f	class:asio::ssl::stream::initiate_async_buffered_handshake	typeref:typename:void
operator ()	asio/include/asio/ssl/stream.hpp	/^    void operator()(ASIO_MOVE_ARG(HandshakeHandler) handler,$/;"	f	class:asio::ssl::stream::initiate_async_handshake	typeref:typename:void
operator ()	asio/include/asio/ssl/stream.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::ssl::stream::initiate_async_read_some	typeref:typename:void
operator ()	asio/include/asio/ssl/stream.hpp	/^    void operator()(ASIO_MOVE_ARG(ShutdownHandler) handler) const$/;"	f	class:asio::ssl::stream::initiate_async_shutdown	typeref:typename:void
operator ()	asio/include/asio/ssl/stream.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::ssl::stream::initiate_async_write_some	typeref:typename:void
operator ()	asio/include/asio/windows/basic_object_handle.hpp	/^    void operator()(ASIO_MOVE_ARG(WaitHandler) handler) const$/;"	f	class:asio::windows::basic_object_handle::initiate_async_wait	typeref:typename:void
operator ()	asio/include/asio/windows/basic_random_access_handle.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::windows::basic_random_access_handle::initiate_async_read_some_at	typeref:typename:void
operator ()	asio/include/asio/windows/basic_random_access_handle.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::windows::basic_random_access_handle::initiate_async_write_some_at	typeref:typename:void
operator ()	asio/include/asio/windows/basic_stream_handle.hpp	/^    void operator()(ASIO_MOVE_ARG(ReadHandler) handler,$/;"	f	class:asio::windows::basic_stream_handle::initiate_async_read_some	typeref:typename:void
operator ()	asio/include/asio/windows/basic_stream_handle.hpp	/^    void operator()(ASIO_MOVE_ARG(WriteHandler) handler,$/;"	f	class:asio::windows::basic_stream_handle::initiate_async_write_some	typeref:typename:void
operator ()	asio/src/examples/cpp03/allocation/server.cpp	/^  void operator()(Arg1 arg1)$/;"	f	class:custom_alloc_handler	typeref:typename:void	file:
operator ()	asio/src/examples/cpp03/allocation/server.cpp	/^  void operator()(Arg1 arg1, Arg2 arg2)$/;"	f	class:custom_alloc_handler	typeref:typename:void	file:
operator ()	asio/src/examples/cpp03/http/server4/file_handler.cpp	/^void file_handler::operator()(const request& req, reply& rep)$/;"	f	class:http::server4::file_handler	typeref:typename:void
operator ()	asio/src/examples/cpp03/http/server4/server.cpp	/^void server::operator()(asio::error_code ec, std::size_t length)$/;"	f	class:http::server4::server	typeref:typename:void
operator ()	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^    void operator()(asio::error_code ec, T t)$/;"	f	class:asio::async_result::completion_handler_type	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/allocation/server.cpp	/^  void operator()(Args&&... args)$/;"	f	class:custom_alloc_handler	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    bool operator()($/;"	f	struct:priority_scheduler::item_comp	typeref:typename:bool	file:
operator ()	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^  void operator()()$/;"	f	struct:low_priority_handler	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/operations/composed_3.cpp	/^  void operator()(CompletionHandler&& completion_handler,$/;"	f	struct:async_write_message_initiation	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/operations/composed_4.cpp	/^  void operator()(CompletionHandler&& completion_handler,$/;"	f	struct:async_write_message_initiation	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/operations/composed_5.cpp	/^      void operator()(const std::error_code& error, std::size_t \/*n*\/)$/;"	f	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/operations/composed_5.cpp	/^  void operator()(CompletionHandler&& completion_handler,$/;"	f	struct:async_write_message_initiation	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/operations/composed_6.cpp	/^      void operator()(const std::error_code& error, std::size_t = 0)$/;"	f	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/operations/composed_6.cpp	/^  void operator()(CompletionHandler&& completion_handler, tcp::socket& socket,$/;"	f	struct:async_write_message_initiation	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/operations/composed_7.cpp	/^  void operator()(Self& self,$/;"	f	struct:async_write_messages_implementation	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/operations/composed_8.cpp	/^  void operator()(Self& self,$/;"	f	struct:async_write_messages_implementation	typeref:typename:void	file:
operator ()	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^    void operator()(const std::error_code& error, T t)$/;"	f	class:asio::async_result::completion_handler_type	typeref:typename:void	file:
operator ()	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    bool operator()($/;"	f	struct:priority_scheduler::item_comp	typeref:typename:bool	file:
operator ()	asio/src/examples/cpp14/operations/composed_5.cpp	/^      void operator()(const std::error_code& error, std::size_t \/*n*\/)$/;"	f	struct:async_write_message::__anon32ec9f8e0102::intermediate_completion_handler	typeref:typename:void	file:
operator ()	asio/src/examples/cpp14/operations/composed_6.cpp	/^      void operator()(const std::error_code& error, std::size_t = 0)$/;"	f	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	typeref:typename:void	file:
operator ()	asio/src/tests/latency/tcp_client.cpp	/^  std::size_t operator()(const asio::error_code& ec, std::size_t)$/;"	f	struct:transfer_all	typeref:typename:std::size_t	file:
operator ()	asio/src/tests/latency/tcp_server.cpp	/^    void operator()(asio::error_code ec, std::size_t n = 0)$/;"	f	struct:tcp_server::ref	typeref:typename:void	file:
operator ()	asio/src/tests/latency/tcp_server.cpp	/^  void operator()(asio::error_code ec, std::size_t n = 0)$/;"	f	class:tcp_server	typeref:typename:void	file:
operator ()	asio/src/tests/latency/udp_server.cpp	/^    void operator()(asio::error_code ec, std::size_t n = 0)$/;"	f	struct:udp_server::ref	typeref:typename:void	file:
operator ()	asio/src/tests/latency/udp_server.cpp	/^  void operator()(asio::error_code ec, std::size_t n = 0)$/;"	f	class:udp_server	typeref:typename:void	file:
operator ()	asio/src/tests/performance/handler_allocator.hpp	/^  void operator()(Arg1 arg1)$/;"	f	class:custom_alloc_handler	typeref:typename:void
operator ()	asio/src/tests/performance/handler_allocator.hpp	/^  void operator()(Arg1 arg1, Arg2 arg2)$/;"	f	class:custom_alloc_handler	typeref:typename:void
operator ()	asio/src/tests/unit/archetypes/async_result.hpp	/^  void operator()(typename asio::decay<Arg1>::type)$/;"	f	struct:archetypes::concrete_handler	typeref:typename:void
operator ()	asio/src/tests/unit/archetypes/async_result.hpp	/^  void operator()(typename asio::decay<Arg1>::type, typename asio::decay<Arg2>::type)$/;"	f	struct:archetypes::concrete_handler	typeref:typename:void
operator ()	asio/src/tests/unit/compose.cpp	/^  void operator()(Self& self)$/;"	f	class:impl_0_completion_args	typeref:typename:void	file:
operator ()	asio/src/tests/unit/compose.cpp	/^  void operator()(Self& self)$/;"	f	class:impl_1_completion_arg	typeref:typename:void	file:
operator ()	asio/src/tests/unit/connect.cpp	/^  Iterator operator()(const asio::error_code& \/*ec*\/, Iterator next)$/;"	f	struct:legacy_true_cond_2	typeref:typename:Iterator	file:
operator ()	asio/src/tests/unit/connect.cpp	/^  bool operator()(const asio::error_code& \/*ec*\/,$/;"	f	struct:true_cond_2	typeref:typename:bool	file:
operator ()	asio/src/tests/unit/deadline_timer.cpp	/^  void operator()(const asio::error_code&) {}$/;"	f	struct:custom_allocation_timer_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/icmp.cpp	/^  void operator()(const asio::error_code&) {}$/;"	f	struct:ip_icmp_socket_compile::connect_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/icmp.cpp	/^  void operator()(const asio::error_code&, std::size_t) {}$/;"	f	struct:ip_icmp_socket_compile::receive_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/icmp.cpp	/^  void operator()(const asio::error_code&, std::size_t) {}$/;"	f	struct:ip_icmp_socket_compile::send_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/icmp.cpp	/^  void operator()(const asio::error_code&,$/;"	f	struct:ip_icmp_resolver_compile::resolve_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()($/;"	f	struct:ip_tcp_acceptor_compile::move_accept_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&) {}$/;"	f	struct:ip_tcp_acceptor_compile::accept_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&) {}$/;"	f	struct:ip_tcp_acceptor_compile::wait_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&) {}$/;"	f	struct:ip_tcp_socket_compile::connect_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&) {}$/;"	f	struct:ip_tcp_socket_compile::wait_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&, std::size_t) {}$/;"	f	struct:ip_tcp_socket_compile::read_some_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&, std::size_t) {}$/;"	f	struct:ip_tcp_socket_compile::receive_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&, std::size_t) {}$/;"	f	struct:ip_tcp_socket_compile::send_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&, std::size_t) {}$/;"	f	struct:ip_tcp_socket_compile::write_some_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&,$/;"	f	struct:ip_tcp_acceptor_compile::move_accept_ioc_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&,$/;"	f	struct:ip_tcp_resolver_compile::legacy_resolve_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/tcp.cpp	/^  void operator()(const asio::error_code&,$/;"	f	struct:ip_tcp_resolver_compile::resolve_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/udp.cpp	/^  void operator()(const asio::error_code&) {}$/;"	f	struct:ip_udp_socket_compile::connect_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/udp.cpp	/^  void operator()(const asio::error_code&) {}$/;"	f	struct:ip_udp_socket_compile::wait_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/udp.cpp	/^  void operator()(const asio::error_code&, std::size_t) {}$/;"	f	struct:ip_udp_socket_compile::receive_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/udp.cpp	/^  void operator()(const asio::error_code&, std::size_t) {}$/;"	f	struct:ip_udp_socket_compile::send_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/ip/udp.cpp	/^  void operator()(const asio::error_code&,$/;"	f	struct:ip_udp_resolver_compile::resolve_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/read.cpp	/^  size_t operator()(const asio::error_code& ec,$/;"	f	struct:short_transfer	typeref:typename:size_t	file:
operator ()	asio/src/tests/unit/read_at.cpp	/^  size_t operator()(const asio::error_code& ec,$/;"	f	struct:short_transfer	typeref:typename:size_t	file:
operator ()	asio/src/tests/unit/read_until.cpp	/^  std::pair<Iterator, bool> operator()($/;"	f	class:match_char	typeref:typename:std::pair<Iterator,bool>	file:
operator ()	asio/src/tests/unit/serial_port.cpp	/^  void operator()(const asio::error_code&, std::size_t) {}$/;"	f	struct:serial_port_compile::read_some_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/serial_port.cpp	/^  void operator()(const asio::error_code&, std::size_t) {}$/;"	f	struct:serial_port_compile::write_some_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/system_timer.cpp	/^  void operator()(const asio::error_code&) {}$/;"	f	struct:custom_allocation_timer_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/system_timer.cpp	/^  void operator()(const asio::error_code&) {}$/;"	f	struct:timer_handler	typeref:typename:void	file:
operator ()	asio/src/tests/unit/windows/overlapped_ptr.cpp	/^  void operator()(const asio::error_code&, std::size_t)$/;"	f	struct:windows_overlapped_ptr_compile::overlapped_handler_2	typeref:typename:void	file:
operator ()	asio/src/tests/unit/write.cpp	/^  size_t operator()(const asio::error_code& ec,$/;"	f	struct:short_transfer	typeref:typename:size_t	file:
operator ()	asio/src/tests/unit/write_at.cpp	/^  size_t operator()(const asio::error_code& ec,$/;"	f	struct:short_transfer	typeref:typename:size_t	file:
operator *	asio/include/asio/buffers_iterator.hpp	/^  reference operator*() const$/;"	f	class:asio::buffers_iterator	typeref:typename:reference
operator *	asio/include/asio/detail/scoped_ptr.hpp	/^  T& operator*()$/;"	f	class:asio::detail::scoped_ptr	typeref:typename:T &
operator *	asio/include/asio/ip/address_v4_iterator.hpp	/^  const address_v4& operator*() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:const address_v4 &
operator *	asio/include/asio/ip/address_v6_iterator.hpp	/^  const address_v6& operator*() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:const address_v6 &
operator *	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  const basic_resolver_entry<InternetProtocol>& operator*() const$/;"	f	class:asio::ip::basic_resolver_iterator	typeref:typename:const basic_resolver_entry<InternetProtocol> &
operator *	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  tcp::socket operator*()$/;"	f	class:connection_iter	typeref:typename:tcp::socket	file:
operator +	asio/include/asio/buffer.hpp	/^inline const_buffer operator+(const const_buffer& b,$/;"	f	namespace:asio	typeref:typename:const_buffer
operator +	asio/include/asio/buffer.hpp	/^inline const_buffer operator+(std::size_t n,$/;"	f	namespace:asio	typeref:typename:const_buffer
operator +	asio/include/asio/buffer.hpp	/^inline mutable_buffer operator+(const mutable_buffer& b,$/;"	f	namespace:asio	typeref:typename:mutable_buffer
operator +	asio/include/asio/buffer.hpp	/^inline mutable_buffer operator+(std::size_t n,$/;"	f	namespace:asio	typeref:typename:mutable_buffer
operator +	asio/include/asio/buffers_iterator.hpp	/^  friend buffers_iterator operator+(const buffers_iterator& iter,$/;"	f	namespace:asio	typeref:typename:buffers_iterator
operator +	asio/include/asio/buffers_iterator.hpp	/^  friend buffers_iterator operator+(std::ptrdiff_t difference,$/;"	f	namespace:asio	typeref:typename:buffers_iterator
operator ++	asio/include/asio/buffers_iterator.hpp	/^  buffers_iterator operator++(int)$/;"	f	class:asio::buffers_iterator	typeref:typename:buffers_iterator
operator ++	asio/include/asio/buffers_iterator.hpp	/^  buffers_iterator& operator++()$/;"	f	class:asio::buffers_iterator	typeref:typename:buffers_iterator &
operator ++	asio/include/asio/ip/address_v4_iterator.hpp	/^  basic_address_iterator operator++(int) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:basic_address_iterator
operator ++	asio/include/asio/ip/address_v4_iterator.hpp	/^  basic_address_iterator& operator++() ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:basic_address_iterator &
operator ++	asio/include/asio/ip/address_v6_iterator.hpp	/^  basic_address_iterator operator++(int) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:basic_address_iterator
operator ++	asio/include/asio/ip/address_v6_iterator.hpp	/^  basic_address_iterator& operator++() ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:basic_address_iterator &
operator ++	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  basic_resolver_iterator operator++(int)$/;"	f	class:asio::ip::basic_resolver_iterator	typeref:typename:basic_resolver_iterator
operator ++	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  basic_resolver_iterator& operator++()$/;"	f	class:asio::ip::basic_resolver_iterator	typeref:typename:basic_resolver_iterator &
operator ++	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  awaitable<void> operator++()$/;"	f	class:connection_iter	typeref:typename:awaitable<void>	file:
operator +=	asio/include/asio/buffer.hpp	/^  const_buffer& operator+=(std::size_t n) ASIO_NOEXCEPT$/;"	f	class:asio::const_buffer	typeref:typename:const_buffer &
operator +=	asio/include/asio/buffer.hpp	/^  mutable_buffer& operator+=(std::size_t n) ASIO_NOEXCEPT$/;"	f	class:asio::mutable_buffer	typeref:typename:mutable_buffer &
operator +=	asio/include/asio/buffers_iterator.hpp	/^  buffers_iterator& operator+=(std::ptrdiff_t difference)$/;"	f	class:asio::buffers_iterator	typeref:typename:buffers_iterator &
operator -	asio/include/asio/buffers_iterator.hpp	/^  friend buffers_iterator operator-(const buffers_iterator& iter,$/;"	f	namespace:asio	typeref:typename:buffers_iterator
operator -	asio/include/asio/buffers_iterator.hpp	/^  friend std::ptrdiff_t operator-(const buffers_iterator& a,$/;"	f	namespace:asio	typeref:typename:std::ptrdiff_t
operator --	asio/include/asio/buffers_iterator.hpp	/^  buffers_iterator operator--(int)$/;"	f	class:asio::buffers_iterator	typeref:typename:buffers_iterator
operator --	asio/include/asio/buffers_iterator.hpp	/^  buffers_iterator& operator--()$/;"	f	class:asio::buffers_iterator	typeref:typename:buffers_iterator &
operator --	asio/include/asio/ip/address_v4_iterator.hpp	/^  basic_address_iterator operator--(int)$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:basic_address_iterator
operator --	asio/include/asio/ip/address_v4_iterator.hpp	/^  basic_address_iterator& operator--() ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:basic_address_iterator &
operator --	asio/include/asio/ip/address_v6_iterator.hpp	/^  basic_address_iterator operator--(int)$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:basic_address_iterator
operator --	asio/include/asio/ip/address_v6_iterator.hpp	/^  basic_address_iterator& operator--() ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:basic_address_iterator &
operator -=	asio/include/asio/buffers_iterator.hpp	/^  buffers_iterator& operator-=(std::ptrdiff_t difference)$/;"	f	class:asio::buffers_iterator	typeref:typename:buffers_iterator &
operator ->	asio/include/asio/buffers_iterator.hpp	/^  pointer operator->() const$/;"	f	class:asio::buffers_iterator	typeref:typename:pointer
operator ->	asio/include/asio/detail/scoped_ptr.hpp	/^  T* operator->()$/;"	f	class:asio::detail::scoped_ptr	typeref:typename:T *
operator ->	asio/include/asio/ip/address_v4_iterator.hpp	/^  const address_v4* operator->() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:const address_v4 *
operator ->	asio/include/asio/ip/address_v6_iterator.hpp	/^  const address_v6* operator->() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:const address_v6 *
operator ->	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  const basic_resolver_entry<InternetProtocol>* operator->() const$/;"	f	class:asio::ip::basic_resolver_iterator	typeref:typename:const basic_resolver_entry<InternetProtocol> *
operator <	asio/include/asio/buffers_iterator.hpp	/^  friend bool operator<(const buffers_iterator& a, const buffers_iterator& b)$/;"	f	namespace:asio	typeref:typename:bool
operator <	asio/include/asio/generic/basic_endpoint.hpp	/^  friend bool operator<(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::generic	typeref:typename:bool
operator <	asio/include/asio/ip/address_v4.hpp	/^  friend bool operator<(const address_v4& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator <	asio/include/asio/ip/basic_endpoint.hpp	/^  friend bool operator<(const basic_endpoint<InternetProtocol>& e1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator <	asio/include/asio/local/basic_endpoint.hpp	/^  friend bool operator<(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::local	typeref:typename:bool
operator <	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    friend bool operator<(const queued_handler& a,$/;"	f	class:handler_priority_queue	typeref:typename:bool	file:
operator <	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    friend bool operator<(const std::unique_ptr<queued_handler_base>& a,$/;"	f	class:handler_priority_queue	typeref:typename:bool	file:
operator <<	asio/include/asio/error_code.hpp	/^std::basic_ostream<Elem, Traits>& operator<<($/;"	f	namespace:asio	typeref:typename:std::basic_ostream<Elem,Traits> &
operator <<	asio/include/asio/ip/impl/address.hpp	/^std::basic_ostream<Elem, Traits>& operator<<($/;"	f	namespace:asio::ip	typeref:typename:std::basic_ostream<Elem,Traits> &
operator <<	asio/include/asio/ip/impl/address_v4.hpp	/^std::basic_ostream<Elem, Traits>& operator<<($/;"	f	namespace:asio::ip	typeref:typename:std::basic_ostream<Elem,Traits> &
operator <<	asio/include/asio/ip/impl/address_v6.hpp	/^std::basic_ostream<Elem, Traits>& operator<<($/;"	f	namespace:asio::ip	typeref:typename:std::basic_ostream<Elem,Traits> &
operator <<	asio/include/asio/ip/impl/basic_endpoint.hpp	/^std::basic_ostream<Elem, Traits>& operator<<($/;"	f	namespace:asio::ip	typeref:typename:std::basic_ostream<Elem,Traits> &
operator <<	asio/include/asio/ip/impl/network_v4.hpp	/^std::basic_ostream<Elem, Traits>& operator<<($/;"	f	namespace:asio::ip	typeref:typename:std::basic_ostream<Elem,Traits> &
operator <<	asio/include/asio/ip/impl/network_v6.hpp	/^std::basic_ostream<Elem, Traits>& operator<<($/;"	f	namespace:asio::ip	typeref:typename:std::basic_ostream<Elem,Traits> &
operator <<	asio/include/asio/local/basic_endpoint.hpp	/^std::basic_ostream<Elem, Traits>& operator<<($/;"	f	namespace:asio::local	typeref:typename:std::basic_ostream<Elem,Traits> &
operator <<	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  friend std::ostream& operator<<(std::ostream& os, const icmp_header& header)$/;"	f	typeref:typename:std::ostream &
operator <=	asio/include/asio/buffers_iterator.hpp	/^  friend bool operator<=(const buffers_iterator& a, const buffers_iterator& b)$/;"	f	namespace:asio	typeref:typename:bool
operator <=	asio/include/asio/generic/basic_endpoint.hpp	/^  friend bool operator<=(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::generic	typeref:typename:bool
operator <=	asio/include/asio/ip/address.hpp	/^  friend bool operator<=(const address& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator <=	asio/include/asio/ip/address_v4.hpp	/^  friend bool operator<=(const address_v4& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator <=	asio/include/asio/ip/address_v6.hpp	/^  friend bool operator<=(const address_v6& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator <=	asio/include/asio/ip/basic_endpoint.hpp	/^  friend bool operator<=(const basic_endpoint<InternetProtocol>& e1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator <=	asio/include/asio/local/basic_endpoint.hpp	/^  friend bool operator<=(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::local	typeref:typename:bool
operator =	asio/include/asio/basic_datagram_socket.hpp	/^  >::type operator=(basic_datagram_socket<Protocol1, Executor1>&& other)$/;"	f	class:asio::basic_datagram_socket	typeref:typename:enable_if<is_convertible<Protocol1,Protocol>::value && is_convertible<Executor1,Executor>::value,basic_datagram_socket &>::type
operator =	asio/include/asio/basic_datagram_socket.hpp	/^  basic_datagram_socket& operator=(basic_datagram_socket&& other)$/;"	f	class:asio::basic_datagram_socket	typeref:typename:basic_datagram_socket &
operator =	asio/include/asio/basic_deadline_timer.hpp	/^  basic_deadline_timer& operator=(basic_deadline_timer&& other)$/;"	f	class:asio::basic_deadline_timer	typeref:typename:basic_deadline_timer &
operator =	asio/include/asio/basic_io_object.hpp	/^  basic_io_object& operator=(basic_io_object&& other)$/;"	f	class:asio::basic_io_object	typeref:typename:basic_io_object &
operator =	asio/include/asio/basic_raw_socket.hpp	/^  >::type operator=(basic_raw_socket<Protocol1, Executor1>&& other)$/;"	f	class:asio::basic_raw_socket	typeref:typename:enable_if<is_convertible<Protocol1,Protocol>::value && is_convertible<Executor1,Executor>::value,basic_raw_socket &>::type
operator =	asio/include/asio/basic_raw_socket.hpp	/^  basic_raw_socket& operator=(basic_raw_socket&& other)$/;"	f	class:asio::basic_raw_socket	typeref:typename:basic_raw_socket &
operator =	asio/include/asio/basic_seq_packet_socket.hpp	/^  >::type operator=(basic_seq_packet_socket<Protocol1, Executor1>&& other)$/;"	f	class:asio::basic_seq_packet_socket	typeref:typename:enable_if<is_convertible<Protocol1,Protocol>::value && is_convertible<Executor1,Executor>::value,basic_seq_packet_socket &>::type
operator =	asio/include/asio/basic_seq_packet_socket.hpp	/^  basic_seq_packet_socket& operator=(basic_seq_packet_socket&& other)$/;"	f	class:asio::basic_seq_packet_socket	typeref:typename:basic_seq_packet_socket &
operator =	asio/include/asio/basic_serial_port.hpp	/^  basic_serial_port& operator=(basic_serial_port&& other)$/;"	f	class:asio::basic_serial_port	typeref:typename:basic_serial_port &
operator =	asio/include/asio/basic_socket.hpp	/^  >::type operator=(basic_socket<Protocol1, Executor1> && other)$/;"	f	class:asio::basic_socket	typeref:typename:enable_if<is_convertible<Protocol1,Protocol>::value && is_convertible<Executor1,Executor>::value,basic_socket &>::type
operator =	asio/include/asio/basic_socket.hpp	/^  basic_socket& operator=(basic_socket&& other)$/;"	f	class:asio::basic_socket	typeref:typename:basic_socket &
operator =	asio/include/asio/basic_socket_acceptor.hpp	/^  >::type operator=(basic_socket_acceptor<Protocol1, Executor1>&& other)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:enable_if<is_convertible<Protocol1,Protocol>::value && is_convertible<Executor1,Executor>::value,basic_socket_acceptor &>::type
operator =	asio/include/asio/basic_socket_acceptor.hpp	/^  basic_socket_acceptor& operator=(basic_socket_acceptor&& other)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:basic_socket_acceptor &
operator =	asio/include/asio/basic_socket_iostream.hpp	/^  basic_socket_iostream& operator=(basic_socket_iostream&& other)$/;"	f	class:asio::basic_socket_iostream	typeref:typename:basic_socket_iostream &
operator =	asio/include/asio/basic_socket_iostream.hpp	/^  socket_iostream_base& operator=(socket_iostream_base&& other)$/;"	f	class:asio::detail::socket_iostream_base	typeref:typename:socket_iostream_base &
operator =	asio/include/asio/basic_socket_streambuf.hpp	/^  basic_socket_streambuf& operator=(basic_socket_streambuf&& other)$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:basic_socket_streambuf &
operator =	asio/include/asio/basic_stream_socket.hpp	/^  >::type operator=(basic_stream_socket<Protocol1, Executor1>&& other)$/;"	f	class:asio::basic_stream_socket	typeref:typename:enable_if<is_convertible<Protocol1,Protocol>::value && is_convertible<Executor1,Executor>::value,basic_stream_socket &>::type
operator =	asio/include/asio/basic_stream_socket.hpp	/^  basic_stream_socket& operator=(basic_stream_socket&& other)$/;"	f	class:asio::basic_stream_socket	typeref:typename:basic_stream_socket &
operator =	asio/include/asio/basic_waitable_timer.hpp	/^  basic_waitable_timer& operator=(basic_waitable_timer&& other)$/;"	f	class:asio::basic_waitable_timer	typeref:typename:basic_waitable_timer &
operator =	asio/include/asio/coroutine.hpp	/^  int& operator=(int v) { modified_ = true; return value_ = v; }$/;"	f	class:asio::detail::coroutine_ref	typeref:typename:int &
operator =	asio/include/asio/detail/io_object_impl.hpp	/^  io_object_impl& operator=(io_object_impl&& other)$/;"	f	class:asio::detail::io_object_impl	typeref:typename:io_object_impl &
operator =	asio/include/asio/detail/keyword_tss_ptr.hpp	/^  void operator=(T* value)$/;"	f	class:asio::detail::keyword_tss_ptr	typeref:typename:void
operator =	asio/include/asio/detail/null_tss_ptr.hpp	/^  void operator=(T* value)$/;"	f	class:asio::detail::null_tss_ptr	typeref:typename:void
operator =	asio/include/asio/detail/posix_tss_ptr.hpp	/^  void operator=(T* value)$/;"	f	class:asio::detail::posix_tss_ptr	typeref:typename:void
operator =	asio/include/asio/detail/reactor_op_queue.hpp	/^    void operator=(const mapped_type&) {}$/;"	f	struct:asio::detail::reactor_op_queue::mapped_type	typeref:typename:void
operator =	asio/include/asio/detail/socket_option.hpp	/^  boolean& operator=(bool v)$/;"	f	class:asio::detail::socket_option::boolean	typeref:typename:boolean &
operator =	asio/include/asio/detail/socket_option.hpp	/^  integer& operator=(int v)$/;"	f	class:asio::detail::socket_option::integer	typeref:typename:integer &
operator =	asio/include/asio/detail/tss_ptr.hpp	/^  void operator=(T* value)$/;"	f	class:asio::detail::tss_ptr	typeref:typename:void
operator =	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    void operator=(socket_type s)$/;"	f	class:asio::detail::win_iocp_socket_service::native_handle_type	typeref:typename:void
operator =	asio/include/asio/detail/win_tss_ptr.hpp	/^  void operator=(T* value)$/;"	f	class:asio::detail::win_tss_ptr	typeref:typename:void
operator =	asio/include/asio/executor.hpp	/^  executor& operator=(ASIO_MOVE_ARG(Executor) e) ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:executor &
operator =	asio/include/asio/executor.hpp	/^  executor& operator=(const executor& other) ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:executor &
operator =	asio/include/asio/executor.hpp	/^  executor& operator=(executor&& other) ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:executor &
operator =	asio/include/asio/executor.hpp	/^  executor& operator=(nullptr_t) ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:executor &
operator =	asio/include/asio/generic/basic_endpoint.hpp	/^  basic_endpoint& operator=(basic_endpoint&& other)$/;"	f	class:asio::generic::basic_endpoint	typeref:typename:basic_endpoint &
operator =	asio/include/asio/generic/basic_endpoint.hpp	/^  basic_endpoint& operator=(const basic_endpoint& other)$/;"	f	class:asio::generic::basic_endpoint	typeref:typename:basic_endpoint &
operator =	asio/include/asio/generic/detail/endpoint.hpp	/^  endpoint& operator=(const endpoint& other)$/;"	f	class:asio::generic::detail::endpoint	typeref:typename:endpoint &
operator =	asio/include/asio/ip/address_v4.hpp	/^  address_v4& operator=(address_v4&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v4	typeref:typename:address_v4 &
operator =	asio/include/asio/ip/address_v4.hpp	/^  address_v4& operator=(const address_v4& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v4	typeref:typename:address_v4 &
operator =	asio/include/asio/ip/address_v4_iterator.hpp	/^  basic_address_iterator& operator=($/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:basic_address_iterator &
operator =	asio/include/asio/ip/address_v4_range.hpp	/^  basic_address_range& operator=($/;"	f	class:asio::ip::basic_address_range	typeref:typename:basic_address_range &
operator =	asio/include/asio/ip/address_v6_iterator.hpp	/^  basic_address_iterator& operator=($/;"	f	class:asio::ip::basic_address_iterator	typeref:typename:basic_address_iterator &
operator =	asio/include/asio/ip/address_v6_range.hpp	/^  basic_address_range& operator=($/;"	f	class:asio::ip::basic_address_range	typeref:typename:basic_address_range &
operator =	asio/include/asio/ip/basic_endpoint.hpp	/^  basic_endpoint& operator=(basic_endpoint&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:basic_endpoint &
operator =	asio/include/asio/ip/basic_endpoint.hpp	/^  basic_endpoint& operator=(const basic_endpoint& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:basic_endpoint &
operator =	asio/include/asio/ip/basic_resolver.hpp	/^  basic_resolver& operator=(basic_resolver&& other)$/;"	f	class:asio::ip::basic_resolver	typeref:typename:basic_resolver &
operator =	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  basic_resolver_iterator& operator=(basic_resolver_iterator&& other)$/;"	f	class:asio::ip::basic_resolver_iterator	typeref:typename:basic_resolver_iterator &
operator =	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  basic_resolver_iterator& operator=(const basic_resolver_iterator& other)$/;"	f	class:asio::ip::basic_resolver_iterator	typeref:typename:basic_resolver_iterator &
operator =	asio/include/asio/ip/basic_resolver_results.hpp	/^  basic_resolver_results& operator=(basic_resolver_results&& other)$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:basic_resolver_results &
operator =	asio/include/asio/ip/basic_resolver_results.hpp	/^  basic_resolver_results& operator=(const basic_resolver_results& other)$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:basic_resolver_results &
operator =	asio/include/asio/ip/detail/endpoint.hpp	/^  endpoint& operator=(const endpoint& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::detail::endpoint	typeref:typename:endpoint &
operator =	asio/include/asio/ip/detail/socket_option.hpp	/^  multicast_enable_loopback& operator=(bool v)$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:multicast_enable_loopback &
operator =	asio/include/asio/ip/detail/socket_option.hpp	/^  multicast_hops& operator=(int v)$/;"	f	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:multicast_hops &
operator =	asio/include/asio/ip/detail/socket_option.hpp	/^  unicast_hops& operator=(int v)$/;"	f	class:asio::ip::detail::socket_option::unicast_hops	typeref:typename:unicast_hops &
operator =	asio/include/asio/ip/network_v4.hpp	/^  network_v4& operator=(const network_v4& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4	typeref:typename:network_v4 &
operator =	asio/include/asio/ip/network_v4.hpp	/^  network_v4& operator=(network_v4&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4	typeref:typename:network_v4 &
operator =	asio/include/asio/ip/network_v6.hpp	/^  network_v6& operator=(const network_v6& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v6	typeref:typename:network_v6 &
operator =	asio/include/asio/ip/network_v6.hpp	/^  network_v6& operator=(network_v6&& other) ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v6	typeref:typename:network_v6 &
operator =	asio/include/asio/local/basic_endpoint.hpp	/^  basic_endpoint& operator=(basic_endpoint&& other)$/;"	f	class:asio::local::basic_endpoint	typeref:typename:basic_endpoint &
operator =	asio/include/asio/local/basic_endpoint.hpp	/^  basic_endpoint& operator=(const basic_endpoint& other)$/;"	f	class:asio::local::basic_endpoint	typeref:typename:basic_endpoint &
operator =	asio/include/asio/local/detail/endpoint.hpp	/^  endpoint& operator=(const endpoint& other)$/;"	f	class:asio::local::detail::endpoint	typeref:typename:endpoint &
operator =	asio/include/asio/posix/basic_descriptor.hpp	/^  basic_descriptor& operator=(basic_descriptor&& other)$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:basic_descriptor &
operator =	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  basic_stream_descriptor& operator=(basic_stream_descriptor&& other)$/;"	f	class:asio::posix::basic_stream_descriptor	typeref:typename:basic_stream_descriptor &
operator =	asio/include/asio/strand.hpp	/^  strand& operator=($/;"	f	class:asio::strand	typeref:typename:strand &
operator =	asio/include/asio/strand.hpp	/^  strand& operator=(const strand& other) ASIO_NOEXCEPT$/;"	f	class:asio::strand	typeref:typename:strand &
operator =	asio/include/asio/strand.hpp	/^  strand& operator=(strand&& other) ASIO_NOEXCEPT$/;"	f	class:asio::strand	typeref:typename:strand &
operator =	asio/include/asio/windows/basic_object_handle.hpp	/^  basic_object_handle& operator=(basic_object_handle&& other)$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:basic_object_handle &
operator =	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  basic_overlapped_handle& operator=(basic_overlapped_handle&& other)$/;"	f	class:asio::windows::basic_overlapped_handle	typeref:typename:basic_overlapped_handle &
operator =	asio/include/asio/windows/basic_random_access_handle.hpp	/^  basic_random_access_handle& operator=(basic_random_access_handle&& other)$/;"	f	class:asio::windows::basic_random_access_handle	typeref:typename:basic_random_access_handle &
operator =	asio/include/asio/windows/basic_stream_handle.hpp	/^  basic_stream_handle& operator=(basic_stream_handle&& other)$/;"	f	class:asio::windows::basic_stream_handle	typeref:typename:basic_stream_handle &
operator ==	asio/include/asio/buffers_iterator.hpp	/^  friend bool operator==(const buffers_iterator& a, const buffers_iterator& b)$/;"	f	namespace:asio	typeref:typename:bool
operator ==	asio/include/asio/detail/io_object_executor.hpp	/^  friend bool operator==(const io_object_executor& a,$/;"	f	namespace:asio::detail	typeref:typename:bool
operator ==	asio/include/asio/error_code.hpp	/^  friend bool operator==(const error_code& e1, const error_code& e2)$/;"	f	namespace:asio	typeref:typename:bool
operator ==	asio/include/asio/executor.hpp	/^  friend bool operator==(const executor& a,$/;"	f	namespace:asio	typeref:typename:bool
operator ==	asio/include/asio/generic/basic_endpoint.hpp	/^  friend bool operator==(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::generic	typeref:typename:bool
operator ==	asio/include/asio/generic/datagram_protocol.hpp	/^  friend bool operator==(const datagram_protocol& p1,$/;"	f	namespace:asio::generic	typeref:typename:bool
operator ==	asio/include/asio/generic/raw_protocol.hpp	/^  friend bool operator==(const raw_protocol& p1, const raw_protocol& p2)$/;"	f	namespace:asio::generic	typeref:typename:bool
operator ==	asio/include/asio/generic/seq_packet_protocol.hpp	/^  friend bool operator==(const seq_packet_protocol& p1,$/;"	f	namespace:asio::generic	typeref:typename:bool
operator ==	asio/include/asio/generic/stream_protocol.hpp	/^  friend bool operator==(const stream_protocol& p1, const stream_protocol& p2)$/;"	f	namespace:asio::generic	typeref:typename:bool
operator ==	asio/include/asio/impl/use_future.hpp	/^  friend bool operator==(const promise_executor& a,$/;"	f	namespace:asio::detail	typeref:typename:bool
operator ==	asio/include/asio/io_context.hpp	/^  friend bool operator==(const executor_type& a,$/;"	f	class:asio::io_context	typeref:typename:bool
operator ==	asio/include/asio/io_context_strand.hpp	/^  friend bool operator==(const strand& a, const strand& b) ASIO_NOEXCEPT$/;"	f	class:asio::io_context	typeref:typename:bool
operator ==	asio/include/asio/ip/address_v4.hpp	/^  friend bool operator==(const address_v4& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/ip/address_v4_iterator.hpp	/^  friend bool operator==(const basic_address_iterator& a,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/ip/address_v6_iterator.hpp	/^  friend bool operator==(const basic_address_iterator& a,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/ip/basic_endpoint.hpp	/^  friend bool operator==(const basic_endpoint<InternetProtocol>& e1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  friend bool operator==(const basic_resolver_iterator& a,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/ip/basic_resolver_results.hpp	/^  friend bool operator==(const basic_resolver_results& a,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/ip/icmp.hpp	/^  friend bool operator==(const icmp& p1, const icmp& p2)$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/ip/network_v4.hpp	/^  friend bool operator==(const network_v4& a, const network_v4& b)$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/ip/network_v6.hpp	/^  friend bool operator==(const network_v6& a, const network_v6& b)$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/ip/tcp.hpp	/^  friend bool operator==(const tcp& p1, const tcp& p2)$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/ip/udp.hpp	/^  friend bool operator==(const udp& p1, const udp& p2)$/;"	f	namespace:asio::ip	typeref:typename:bool
operator ==	asio/include/asio/local/basic_endpoint.hpp	/^  friend bool operator==(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::local	typeref:typename:bool
operator ==	asio/include/asio/strand.hpp	/^  friend bool operator==(const strand& a, const strand& b) ASIO_NOEXCEPT$/;"	f	namespace:asio	typeref:typename:bool
operator ==	asio/include/asio/system_executor.hpp	/^  friend bool operator==(const system_executor&,$/;"	f	namespace:asio	typeref:typename:bool
operator ==	asio/include/asio/thread_pool.hpp	/^  friend bool operator==(const executor_type& a,$/;"	f	class:asio::thread_pool	typeref:typename:bool
operator ==	asio/src/examples/cpp03/allocation/server.cpp	/^  bool operator==(const handler_allocator& other) const$/;"	f	class:handler_allocator	typeref:typename:bool	file:
operator ==	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    bool operator==(const executor& other) const$/;"	f	class:handler_priority_queue::executor	typeref:typename:bool	file:
operator ==	asio/src/examples/cpp11/allocation/server.cpp	/^  bool operator==(const handler_allocator& other) const noexcept$/;"	f	class:handler_allocator	typeref:typename:bool	file:
operator ==	asio/src/examples/cpp11/executors/fork_join.cpp	/^  friend bool operator==(const fork_executor& a,$/;"	f	typeref:typename:bool	file:
operator ==	asio/src/examples/cpp11/executors/pipeline.cpp	/^  friend bool operator==(const thread_executor&,$/;"	f	typeref:typename:bool	file:
operator ==	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    friend bool operator==(const executor_type& a,$/;"	f	class:priority_scheduler	typeref:typename:bool	file:
operator ==	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    bool operator==(const executor& other) const noexcept$/;"	f	class:handler_priority_queue::executor	typeref:typename:bool	file:
operator ==	asio/src/examples/cpp14/executors/fork_join.cpp	/^  friend bool operator==(const fork_executor& a,$/;"	f	typeref:typename:bool	file:
operator ==	asio/src/examples/cpp14/executors/pipeline.cpp	/^  friend bool operator==(const thread_executor&,$/;"	f	typeref:typename:bool	file:
operator ==	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    friend bool operator==(const executor_type& a,$/;"	f	class:priority_scheduler	typeref:typename:bool	file:
operator ==	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  bool operator==(const connection_iter&) const noexcept$/;"	f	class:connection_iter	typeref:typename:bool	file:
operator >	asio/include/asio/buffers_iterator.hpp	/^  friend bool operator>(const buffers_iterator& a, const buffers_iterator& b)$/;"	f	namespace:asio	typeref:typename:bool
operator >	asio/include/asio/generic/basic_endpoint.hpp	/^  friend bool operator>(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::generic	typeref:typename:bool
operator >	asio/include/asio/ip/address.hpp	/^  friend bool operator>(const address& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator >	asio/include/asio/ip/address_v4.hpp	/^  friend bool operator>(const address_v4& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator >	asio/include/asio/ip/address_v6.hpp	/^  friend bool operator>(const address_v6& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator >	asio/include/asio/ip/basic_endpoint.hpp	/^  friend bool operator>(const basic_endpoint<InternetProtocol>& e1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator >	asio/include/asio/local/basic_endpoint.hpp	/^  friend bool operator>(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::local	typeref:typename:bool
operator >=	asio/include/asio/buffers_iterator.hpp	/^  friend bool operator>=(const buffers_iterator& a, const buffers_iterator& b)$/;"	f	namespace:asio	typeref:typename:bool
operator >=	asio/include/asio/generic/basic_endpoint.hpp	/^  friend bool operator>=(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::generic	typeref:typename:bool
operator >=	asio/include/asio/ip/address.hpp	/^  friend bool operator>=(const address& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator >=	asio/include/asio/ip/address_v4.hpp	/^  friend bool operator>=(const address_v4& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator >=	asio/include/asio/ip/address_v6.hpp	/^  friend bool operator>=(const address_v6& a1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator >=	asio/include/asio/ip/basic_endpoint.hpp	/^  friend bool operator>=(const basic_endpoint<InternetProtocol>& e1,$/;"	f	namespace:asio::ip	typeref:typename:bool
operator >=	asio/include/asio/local/basic_endpoint.hpp	/^  friend bool operator>=(const basic_endpoint<Protocol>& e1,$/;"	f	namespace:asio::local	typeref:typename:bool
operator >>	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  friend std::istream& operator>>(std::istream& is, icmp_header& header)$/;"	f	typeref:typename:std::istream &
operator >>	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  friend std::istream& operator>>(std::istream& is, ipv4_header& header)$/;"	f	typeref:typename:std::istream &
operator T*	asio/include/asio/detail/keyword_tss_ptr.hpp	/^  operator T*() const$/;"	f	class:asio::detail::keyword_tss_ptr
operator T*	asio/include/asio/detail/null_tss_ptr.hpp	/^  operator T*() const$/;"	f	class:asio::detail::null_tss_ptr
operator T*	asio/include/asio/detail/posix_tss_ptr.hpp	/^  operator T*() const$/;"	f	class:asio::detail::posix_tss_ptr
operator T*	asio/include/asio/detail/win_tss_ptr.hpp	/^  operator T*() const$/;"	f	class:asio::detail::win_tss_ptr
operator []	asio/include/asio/buffers_iterator.hpp	/^  reference operator[](std::ptrdiff_t difference) const$/;"	f	class:asio::buffers_iterator	typeref:typename:reference
operator []	asio/include/asio/spawn.hpp	/^  basic_yield_context operator[](asio::error_code& ec) const$/;"	f	class:asio::basic_yield_context	typeref:typename:basic_yield_context
operator []	asio/include/asio/use_future.hpp	/^  use_future_t<OtherAllocator> operator[](const OtherAllocator& allocator) const$/;"	f	class:asio::use_future_t	typeref:typename:use_future_t<OtherAllocator>
operator asio::detail::addrinfo_type*	asio/include/asio/detail/resolver_service_base.hpp	/^    operator asio::detail::addrinfo_type*()$/;"	f	class:asio::detail::resolver_service_base::auto_addrinfo
operator delete	asio/include/asio/impl/awaitable.hpp	/^  void operator delete(void* pointer, std::size_t size)$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void
operator endpoint_type	asio/include/asio/ip/basic_resolver_entry.hpp	/^  operator endpoint_type() const$/;"	f	class:asio::ip::basic_resolver_entry
operator fd_set*	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^  operator fd_set*()$/;"	f	class:asio::detail::posix_fd_set_adapter
operator fd_set*	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  operator fd_set*()$/;"	f	class:asio::detail::win_fd_set_adapter
operator new	asio/include/asio/impl/awaitable.hpp	/^  void* operator new(std::size_t size)$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void *
operator socket_type	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    operator socket_type() const$/;"	f	class:asio::detail::win_iocp_socket_service::native_handle_type
operator std::allocator<void>	asio/include/asio/use_future.hpp	/^    operator std::allocator<void>() const$/;"	f	struct:asio::use_future_t::std_allocator_void
operator unspecified_bool_type	asio/include/asio/error_code.hpp	/^  operator unspecified_bool_type() const$/;"	f	class:asio::error_code
operator unspecified_bool_type	asio/include/asio/executor.hpp	/^  operator unspecified_bool_type() const ASIO_NOEXCEPT$/;"	f	class:asio::executor
options	asio/include/asio/ssl/context_base.hpp	/^  typedef long options;$/;"	t	class:asio::ssl::context_base	typeref:typename:long
other	asio/include/asio/basic_datagram_socket.hpp	/^    typedef basic_datagram_socket<Protocol, Executor1> other;$/;"	t	struct:asio::basic_datagram_socket::rebind_executor	typeref:typename:basic_datagram_socket<Protocol,Executor1>
other	asio/include/asio/basic_deadline_timer.hpp	/^    typedef basic_deadline_timer<Time, TimeTraits, Executor1> other;$/;"	t	struct:asio::basic_deadline_timer::rebind_executor	typeref:typename:basic_deadline_timer<Time,TimeTraits,Executor1>
other	asio/include/asio/basic_raw_socket.hpp	/^    typedef basic_raw_socket<Protocol, Executor1> other;$/;"	t	struct:asio::basic_raw_socket::rebind_executor	typeref:typename:basic_raw_socket<Protocol,Executor1>
other	asio/include/asio/basic_seq_packet_socket.hpp	/^    typedef basic_seq_packet_socket<Protocol, Executor1> other;$/;"	t	struct:asio::basic_seq_packet_socket::rebind_executor	typeref:typename:basic_seq_packet_socket<Protocol,Executor1>
other	asio/include/asio/basic_serial_port.hpp	/^    typedef basic_serial_port<Executor1> other;$/;"	t	struct:asio::basic_serial_port::rebind_executor	typeref:typename:basic_serial_port<Executor1>
other	asio/include/asio/basic_signal_set.hpp	/^    typedef basic_signal_set<Executor1> other;$/;"	t	struct:asio::basic_signal_set::rebind_executor	typeref:typename:basic_signal_set<Executor1>
other	asio/include/asio/basic_socket.hpp	/^    typedef basic_socket<Protocol, Executor1> other;$/;"	t	struct:asio::basic_socket::rebind_executor	typeref:typename:basic_socket<Protocol,Executor1>
other	asio/include/asio/basic_socket_acceptor.hpp	/^    typedef basic_socket_acceptor<Protocol, Executor1> other;$/;"	t	struct:asio::basic_socket_acceptor::rebind_executor	typeref:typename:basic_socket_acceptor<Protocol,Executor1>
other	asio/include/asio/basic_stream_socket.hpp	/^    typedef basic_stream_socket<Protocol, Executor1> other;$/;"	t	struct:asio::basic_stream_socket::rebind_executor	typeref:typename:basic_stream_socket<Protocol,Executor1>
other	asio/include/asio/basic_waitable_timer.hpp	/^    typedef basic_waitable_timer<Clock, WaitTraits, Executor1> other;$/;"	t	struct:asio::basic_waitable_timer::rebind_executor	typeref:typename:basic_waitable_timer<Clock,WaitTraits,Executor1>
other	asio/include/asio/detail/handler_alloc_helpers.hpp	/^    typedef hook_allocator<Handler, U> other;$/;"	t	struct:asio::detail::hook_allocator::rebind	typeref:typename:hook_allocator<Handler,U>
other	asio/include/asio/detail/recycling_allocator.hpp	/^    typedef recycling_allocator<U, Purpose> other;$/;"	t	struct:asio::detail::recycling_allocator::rebind	typeref:typename:recycling_allocator<U,Purpose>
other	asio/include/asio/ip/basic_resolver.hpp	/^    typedef basic_resolver<InternetProtocol, Executor1> other;$/;"	t	struct:asio::ip::basic_resolver::rebind_executor	typeref:typename:basic_resolver<InternetProtocol,Executor1>
other	asio/include/asio/posix/basic_descriptor.hpp	/^    typedef basic_descriptor<Executor1> other;$/;"	t	struct:asio::posix::basic_descriptor::rebind_executor	typeref:typename:basic_descriptor<Executor1>
other	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    typedef basic_stream_descriptor<Executor1> other;$/;"	t	struct:asio::posix::basic_stream_descriptor::rebind_executor	typeref:typename:basic_stream_descriptor<Executor1>
other	asio/include/asio/windows/basic_object_handle.hpp	/^    typedef basic_object_handle<Executor1> other;$/;"	t	struct:asio::windows::basic_object_handle::rebind_executor	typeref:typename:basic_object_handle<Executor1>
other	asio/include/asio/windows/basic_overlapped_handle.hpp	/^    typedef basic_overlapped_handle<Executor1> other;$/;"	t	struct:asio::windows::basic_overlapped_handle::rebind_executor	typeref:typename:basic_overlapped_handle<Executor1>
other	asio/include/asio/windows/basic_random_access_handle.hpp	/^    typedef basic_random_access_handle<Executor1> other;$/;"	t	struct:asio::windows::basic_random_access_handle::rebind_executor	typeref:typename:basic_random_access_handle<Executor1>
other	asio/include/asio/windows/basic_stream_handle.hpp	/^    typedef basic_stream_handle<Executor1> other;$/;"	t	struct:asio::windows::basic_stream_handle::rebind_executor	typeref:typename:basic_stream_handle<Executor1>
other	asio/src/examples/cpp03/allocation/server.cpp	/^    typedef handler_allocator<U> other;$/;"	t	struct:handler_allocator::rebind	typeref:typename:handler_allocator<U>	file:
other_socket_type	asio/include/asio/basic_socket_acceptor.hpp	/^      Executor1>::other other_socket_type;$/;"	t	function:asio::basic_socket_acceptor::ASIO_INITFN_AUTO_RESULT_TYPE	typeref:typename:Protocol::socket::template rebind_executor<Executor1>::other
other_socket_type	asio/include/asio/basic_socket_acceptor.hpp	/^      typename ExecutionContext::executor_type>::other other_socket_type;$/;"	t	function:asio::basic_socket_acceptor::ASIO_INITFN_AUTO_RESULT_TYPE	typeref:typename:Protocol::socket::template rebind_executor<typename ExecutionContext::executor_type>::other
out_ec_	asio/include/asio/impl/spawn.hpp	/^    asio::error_code* out_ec_;$/;"	m	class:asio::detail::coro_async_result	typeref:typename:asio::error_code *
out_flags_	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^  socket_base::message_flags& out_flags_;$/;"	m	class:asio::detail::reactive_socket_recvmsg_op_base	typeref:typename:socket_base::message_flags &
out_flags_	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^  socket_base::message_flags& out_flags_;$/;"	m	class:asio::detail::win_iocp_socket_recvmsg_op	typeref:typename:socket_base::message_flags &
out_of_band_inline	asio/include/asio/socket_base.hpp	/^      out_of_band_inline;$/;"	t	class:asio::socket_base
out_of_band_inline	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined out_of_band_inline;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
outbound_data_	asio/src/examples/cpp03/serialization/connection.hpp	/^  std::string outbound_data_;$/;"	m	class:s11n_example::connection	typeref:typename:std::string
outbound_header_	asio/src/examples/cpp03/serialization/connection.hpp	/^  std::string outbound_header_;$/;"	m	class:s11n_example::connection	typeref:typename:std::string
outbound_interface	asio/include/asio/ip/multicast.hpp	/^  ASIO_OS_DEF(IPV6_MULTICAST_IF)> outbound_interface;$/;"	t	namespace:asio::ip::multicast
outbound_interface	asio/include/asio/ip/multicast.hpp	/^typedef implementation_defined outbound_interface;$/;"	t	namespace:asio::ip::multicast	typeref:typename:implementation_defined
output_	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  posix::stream_descriptor output_;$/;"	m	class:posix_chat_client	typeref:typename:posix::stream_descriptor	file:
output_buffer	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  void* output_buffer()$/;"	f	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:void *
output_buffer	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  void* output_buffer()$/;"	f	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:void *
output_buffer_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  unsigned char output_buffer_[(sizeof(sockaddr_storage_type) + 16) * 2];$/;"	m	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:unsigned char[]
output_buffer_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  unsigned char output_buffer_[(sizeof(sockaddr_storage_type) + 16) * 2];$/;"	m	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:unsigned char[]
output_buffer_	asio/include/asio/ssl/detail/stream_core.hpp	/^  const asio::mutable_buffer output_buffer_;$/;"	m	struct:asio::ssl::detail::stream_core	typeref:typename:const asio::mutable_buffer
output_buffer_space_	asio/include/asio/ssl/detail/stream_core.hpp	/^  std::vector<unsigned char> output_buffer_space_;$/;"	m	struct:asio::ssl::detail::stream_core	typeref:typename:std::vector<unsigned char>
output_deadline_	asio/src/examples/cpp03/timeouts/server.cpp	/^  steady_timer output_deadline_;$/;"	m	class:tcp_session	typeref:typename:steady_timer	file:
output_deadline_	asio/src/examples/cpp11/timeouts/server.cpp	/^  steady_timer output_deadline_{socket_.get_executor()};$/;"	m	class:tcp_session	typeref:typename:steady_timer	file:
output_queue_	asio/src/examples/cpp03/timeouts/server.cpp	/^  std::deque<std::string> output_queue_;$/;"	m	class:tcp_session	typeref:typename:std::deque<std::string>	file:
output_queue_	asio/src/examples/cpp11/timeouts/server.cpp	/^  std::deque<std::string> output_queue_;$/;"	m	class:tcp_session	typeref:typename:std::deque<std::string>	file:
output_value_type	asio/src/examples/cpp11/executors/pipeline.cpp	/^  typedef typename executor_binder<F, thread_executor>::argument_type::value_type output_value_t/;"	t	function:pipeline	typeref:typename:executor_binder<F,thread_executor>::argument_type::value_type	file:
output_value_type	asio/src/examples/cpp11/executors/pipeline.cpp	/^  typedef typename executor_binder<F, thread_executor>::second_argument_type::value_type output_/;"	t	function:pipeline	typeref:typename:executor_binder<F,thread_executor>::second_argument_type::value_type	file:
output_value_type	asio/src/examples/cpp14/executors/pipeline.cpp	/^  typedef typename executor_binder<F, thread_executor>::argument_type::value_type output_value_t/;"	t	function:pipeline	typeref:typename:executor_binder<F,thread_executor>::argument_type::value_type	file:
output_value_type	asio/src/examples/cpp14/executors/pipeline.cpp	/^  typedef typename executor_binder<F, thread_executor>::second_argument_type::value_type output_/;"	t	function:pipeline	typeref:typename:executor_binder<F,thread_executor>::second_argument_type::value_type	file:
outstanding_ops_	asio/include/asio/detail/winrt_async_manager.hpp	/^  atomic_count outstanding_ops_;$/;"	m	class:asio::detail::winrt_async_manager	typeref:typename:atomic_count
outstanding_work_	asio/include/asio/detail/scheduler.hpp	/^  atomic_count outstanding_work_;$/;"	m	class:asio::detail::scheduler	typeref:typename:atomic_count
outstanding_work_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  long outstanding_work_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:long
overflow	asio/include/asio/basic_socket_streambuf.hpp	/^  int_type overflow(int_type c)$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:int_type
overflow	asio/include/asio/basic_streambuf.hpp	/^  int_type overflow(int_type c)$/;"	f	class:asio::basic_streambuf	typeref:typename:int_type
overlapped_contains_result	asio/include/asio/detail/win_iocp_io_context.hpp	/^    overlapped_contains_result = 2$/;"	e	enum:asio::detail::win_iocp_io_context::__anon22c6e4590103
overlapped_handle	asio/include/asio/windows/overlapped_handle.hpp	/^typedef basic_overlapped_handle<> overlapped_handle;$/;"	t	namespace:asio::windows	typeref:typename:basic_overlapped_handle<>
overlapped_handler_1	asio/src/tests/unit/windows/overlapped_ptr.cpp	/^void overlapped_handler_1(const asio::error_code&, std::size_t)$/;"	f	namespace:windows_overlapped_ptr_compile	typeref:typename:void
overlapped_handler_2	asio/src/tests/unit/windows/overlapped_ptr.cpp	/^struct overlapped_handler_2$/;"	s	namespace:windows_overlapped_ptr_compile	file:
overlapped_ptr	asio/include/asio/windows/overlapped_ptr.hpp	/^  explicit overlapped_ptr(ExecutionContext& context,$/;"	f	class:asio::windows::overlapped_ptr
overlapped_ptr	asio/include/asio/windows/overlapped_ptr.hpp	/^  explicit overlapped_ptr(const Executor& ex,$/;"	f	class:asio::windows::overlapped_ptr
overlapped_ptr	asio/include/asio/windows/overlapped_ptr.hpp	/^  overlapped_ptr()$/;"	f	class:asio::windows::overlapped_ptr
overlapped_ptr	asio/include/asio/windows/overlapped_ptr.hpp	/^class overlapped_ptr$/;"	c	namespace:asio::windows
overload-count	asio/src/doc/reference.xsl	/^  <xsl:variable name="overload-count">$/;"	v	matchedTemplate:memberdef
overload-count	asio/src/doc/reference.xsl	/^  <xsl:variable name="overload-count">$/;"	v	namedTemplate:class-tables
overload-count	asio/src/doc/reference.xsl	/^  <xsl:variable name="overload-count">$/;"	v	namedTemplate:namespace-memberdef
overload-position	asio/src/doc/reference.xsl	/^  <xsl:variable name="overload-position">$/;"	v	matchedTemplate:memberdef
overload-position	asio/src/doc/reference.xsl	/^  <xsl:variable name="overload-position">$/;"	v	namedTemplate:class-tables
overload-position	asio/src/doc/reference.xsl	/^  <xsl:variable name="overload-position">$/;"	v	namedTemplate:namespace-memberdef
owner_	asio/include/asio/detail/service_registry.hpp	/^  execution_context& owner_;$/;"	m	class:asio::detail::service_registry	typeref:typename:execution_context &
owner_	asio/include/asio/detail/win_object_handle_service.hpp	/^    win_object_handle_service* owner_;$/;"	m	class:asio::detail::win_object_handle_service::implementation_type	typeref:typename:win_object_handle_service *
owner_	asio/include/asio/execution_context.hpp	/^  execution_context& owner_;$/;"	m	class:asio::execution_context::service	typeref:typename:execution_context &
owns_	asio/include/asio/executor_work_guard.hpp	/^  bool owns_;$/;"	m	class:asio::executor_work_guard	typeref:typename:bool
owns_work	asio/include/asio/executor_work_guard.hpp	/^  bool owns_work() const ASIO_NOEXCEPT$/;"	f	class:asio::executor_work_guard	typeref:typename:bool
p_	asio/include/asio/detail/local_free_on_block_exit.hpp	/^  void* p_;$/;"	m	class:asio::detail::local_free_on_block_exit	typeref:typename:void *
p_	asio/include/asio/detail/scoped_ptr.hpp	/^  T* p_;$/;"	m	class:asio::detail::scoped_ptr	typeref:typename:T *
p_	asio/include/asio/impl/use_future.hpp	/^  shared_ptr<std::promise<T> > p_;$/;"	m	class:asio::detail::promise_creator	typeref:typename:shared_ptr<std::promise<T>>
p_	asio/include/asio/impl/use_future.hpp	/^  shared_ptr<std::promise<T> > p_;$/;"	m	class:asio::detail::promise_executor	typeref:typename:shared_ptr<std::promise<T>>
p_	asio/include/asio/impl/use_future.hpp	/^  shared_ptr<std::promise<T> > p_;$/;"	m	class:asio::detail::promise_invoker	typeref:typename:shared_ptr<std::promise<T>>
p_	asio/src/tests/latency/tcp_server.cpp	/^    tcp_server* p_;$/;"	m	struct:tcp_server::ref	typeref:typename:tcp_server *	file:
p_	asio/src/tests/latency/udp_server.cpp	/^    udp_server* p_;$/;"	m	struct:udp_server::ref	typeref:typename:udp_server *	file:
package_0	asio/src/tests/unit/use_future.cpp	/^int package_0()$/;"	f	typeref:typename:int
package_1	asio/src/tests/unit/use_future.cpp	/^int package_1(int i)$/;"	f	typeref:typename:int
package_2	asio/src/tests/unit/use_future.cpp	/^int package_2(int i, double)$/;"	f	typeref:typename:int
package_3	asio/src/tests/unit/use_future.cpp	/^int package_3(int i, double, char)$/;"	f	typeref:typename:int
package_ec_0	asio/src/tests/unit/use_future.cpp	/^int package_ec_0(asio::error_code ec)$/;"	f	typeref:typename:int
package_ec_1	asio/src/tests/unit/use_future.cpp	/^int package_ec_1(asio::error_code ec, int i)$/;"	f	typeref:typename:int
package_ec_2	asio/src/tests/unit/use_future.cpp	/^int package_ec_2(asio::error_code ec, int i, double)$/;"	f	typeref:typename:int
package_ec_3	asio/src/tests/unit/use_future.cpp	/^int package_ec_3(asio::error_code ec, int i, double, char)$/;"	f	typeref:typename:int
package_ex_0	asio/src/tests/unit/use_future.cpp	/^int package_ex_0(std::exception_ptr ex)$/;"	f	typeref:typename:int
package_ex_1	asio/src/tests/unit/use_future.cpp	/^int package_ex_1(std::exception_ptr ex, int i)$/;"	f	typeref:typename:int
package_ex_2	asio/src/tests/unit/use_future.cpp	/^int package_ex_2(std::exception_ptr ex, int i, double)$/;"	f	typeref:typename:int
package_ex_3	asio/src/tests/unit/use_future.cpp	/^int package_ex_3(std::exception_ptr ex, int i, double, char)$/;"	f	typeref:typename:int
packaged_async_result	asio/include/asio/impl/use_future.hpp	/^  explicit packaged_async_result(completion_handler_type& h)$/;"	f	class:asio::detail::packaged_async_result
packaged_async_result	asio/include/asio/impl/use_future.hpp	/^class packaged_async_result$/;"	c	namespace:asio::detail
packaged_handler	asio/include/asio/impl/use_future.hpp	/^  packaged_handler(packaged_token<Function, Allocator> t)$/;"	f	class:asio::detail::packaged_handler
packaged_handler	asio/include/asio/impl/use_future.hpp	/^class packaged_handler$/;"	c	namespace:asio::detail
packaged_token	asio/include/asio/impl/use_future.hpp	/^  packaged_token(Function f, const Allocator& a)$/;"	f	class:asio::detail::packaged_token
packaged_token	asio/include/asio/impl/use_future.hpp	/^class packaged_token$/;"	c	namespace:asio::detail
pair	asio/include/asio/ip/basic_resolver_results.hpp	/^        auto pair = endpoints->GetAt(i);$/;"	m	class:asio::ip::basic_resolver_results	typeref:typename:auto
para	asio/src/doc/reference.xsl	/^<xsl:template match="para" mode="markup">$/;"	m
para	asio/src/doc/reference.xsl	/^<xsl:template match="para" mode="markup-nested">$/;"	m
para	asio/src/doc/tutorial.xsl	/^<xsl:template match="para">$/;"	m
param	asio/src/doc/reference.xsl	/^<xsl:template match="param" mode="class-detail">$/;"	m
param	asio/src/doc/reference.xsl	/^<xsl:template match="param" mode="class-detail-template">$/;"	m
parameter_problem	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^    redirect = 5, echo_request = 8, time_exceeded = 11, parameter_problem = 12,$/;"	e	enum:icmp_header::__anon3193b0390103
parameteritem	asio/src/doc/reference.xsl	/^<xsl:template match="parameteritem" mode="markup">$/;"	m
parameterlist	asio/src/doc/reference.xsl	/^<xsl:template match="parameterlist" mode="markup">$/;"	m
parity	asio/include/asio/serial_port_base.hpp	/^  class parity$/;"	c	class:asio::serial_port_base
parse	asio/src/examples/cpp03/http/server/request_parser.hpp	/^  boost::tuple<boost::tribool, InputIterator> parse(request& req,$/;"	f	class:http::server::request_parser	typeref:typename:boost::tuple<boost::tribool,InputIterator>
parse	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^  boost::tuple<boost::tribool, InputIterator> parse(request& req,$/;"	f	class:http::server2::request_parser	typeref:typename:boost::tuple<boost::tribool,InputIterator>
parse	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^  boost::tuple<boost::tribool, InputIterator> parse(request& req,$/;"	f	class:http::server3::request_parser	typeref:typename:boost::tuple<boost::tribool,InputIterator>
parse	asio/src/examples/cpp03/http/server4/request_parser.hpp	/^  boost::tuple<boost::tribool, InputIterator> parse(request& req,$/;"	f	class:http::server4::request_parser	typeref:typename:boost::tuple<boost::tribool,InputIterator>
parse	asio/src/examples/cpp11/http/server/request_parser.hpp	/^  std::tuple<result_type, InputIterator> parse(request& req,$/;"	f	class:http::server::request_parser	typeref:typename:std::tuple<result_type,InputIterator>
parse_debug_output	asio/src/tools/handlerviz.pl	/^sub parse_debug_output()$/;"	s
partial_search	asio/include/asio/impl/read_until.hpp	/^  std::pair<Iterator1, bool> partial_search($/;"	f	namespace:asio::detail	typeref:typename:std::pair<Iterator1,bool>
participants_	asio/src/examples/cpp03/chat/chat_server.cpp	/^  std::set<chat_participant_ptr> participants_;$/;"	m	class:chat_room	typeref:typename:std::set<chat_participant_ptr>	file:
participants_	asio/src/examples/cpp11/chat/chat_server.cpp	/^  std::set<chat_participant_ptr> participants_;$/;"	m	class:chat_room	typeref:typename:std::set<chat_participant_ptr>	file:
participants_	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  std::set<chat_participant_ptr> participants_;$/;"	m	class:chat_room	typeref:typename:std::set<chat_participant_ptr>	file:
passive	asio/include/asio/ip/resolver_base.hpp	/^  static const flags passive = implementation_defined;$/;"	m	class:asio::ip::resolver_base	typeref:typename:const flags
password_callback	asio/include/asio/ssl/detail/password_callback.hpp	/^  explicit password_callback(PasswordCallback callback)$/;"	f	class:asio::ssl::detail::password_callback
password_callback	asio/include/asio/ssl/detail/password_callback.hpp	/^class password_callback : public password_callback_base$/;"	c	namespace:asio::ssl::detail
password_callback_base	asio/include/asio/ssl/detail/password_callback.hpp	/^class password_callback_base$/;"	c	namespace:asio::ssl::detail
password_purpose	asio/include/asio/ssl/context_base.hpp	/^  enum password_purpose$/;"	g	class:asio::ssl::context_base
path	asio/include/asio/local/basic_endpoint.hpp	/^  std::string path() const$/;"	f	class:asio::local::basic_endpoint	typeref:typename:std::string
path	asio/include/asio/local/basic_endpoint.hpp	/^  void path(const char* p)$/;"	f	class:asio::local::basic_endpoint	typeref:typename:void
path	asio/include/asio/local/basic_endpoint.hpp	/^  void path(const std::string& p)$/;"	f	class:asio::local::basic_endpoint	typeref:typename:void
path_length_	asio/include/asio/local/detail/endpoint.hpp	/^  std::size_t path_length_;$/;"	m	class:asio::local::detail::endpoint	typeref:typename:std::size_t
payload	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  const std::string payload() const$/;"	f	class:frame	typeref:typename:const std::string
payload_size	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  enum { payload_size = 32 };$/;"	e	enum:frame::__anona16aa5440203
peek	asio/include/asio/buffered_stream.hpp	/^  std::size_t peek(const MutableBufferSequence& buffers)$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
peek	asio/include/asio/buffered_stream.hpp	/^  std::size_t peek(const MutableBufferSequence& buffers,$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
peek	asio/include/asio/buffered_write_stream.hpp	/^  std::size_t peek(const MutableBufferSequence& buffers)$/;"	f	class:asio::buffered_write_stream	typeref:typename:std::size_t
peek	asio/include/asio/buffered_write_stream.hpp	/^  std::size_t peek(const MutableBufferSequence& buffers,$/;"	f	class:asio::buffered_write_stream	typeref:typename:std::size_t
peek	asio/include/asio/impl/buffered_read_stream.hpp	/^std::size_t buffered_read_stream<Stream>::peek($/;"	f	class:asio::buffered_read_stream	typeref:typename:std::size_t
peek_copy	asio/include/asio/buffered_read_stream.hpp	/^  std::size_t peek_copy(const MutableBufferSequence& buffers)$/;"	f	class:asio::buffered_read_stream	typeref:typename:std::size_t
peer_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  Socket& peer_;$/;"	m	class:asio::detail::reactive_socket_accept_op_base	typeref:typename:Socket &
peer_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  Socket& peer_;$/;"	m	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:Socket &
peer_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  peer_socket_type peer_;$/;"	m	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:peer_socket_type
peer_endpoint_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  typename Protocol::endpoint* peer_endpoint_;$/;"	m	class:asio::detail::reactive_socket_accept_op_base	typeref:typename:Protocol::endpoint *
peer_endpoint_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  typename Protocol::endpoint* peer_endpoint_;$/;"	m	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:Protocol::endpoint *
peer_endpoint_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  typename Protocol::endpoint* peer_endpoint_;$/;"	m	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:Protocol::endpoint *
peer_socket_type	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^    rebind_executor<PeerIoExecutor>::other peer_socket_type;$/;"	t	class:asio::detail::reactive_socket_move_accept_op	typeref:typename:Protocol::socket::template rebind_executor<PeerIoExecutor>::other
peer_socket_type	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^    rebind_executor<PeerIoExecutor>::other peer_socket_type;$/;"	t	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:Protocol::socket::template rebind_executor<PeerIoExecutor>::other
pem	asio/include/asio/ssl/context_base.hpp	/^    pem$/;"	e	enum:asio::ssl::context_base::file_format
pending_event_change_index_	asio/include/asio/detail/dev_poll_reactor.hpp	/^  hash_map<int, std::size_t> pending_event_change_index_;$/;"	m	class:asio::detail::dev_poll_reactor	typeref:typename:hash_map<int,std::size_t>
pending_event_changes_	asio/include/asio/detail/dev_poll_reactor.hpp	/^  std::vector< ::pollfd> pending_event_changes_;$/;"	m	class:asio::detail::dev_poll_reactor	typeref:typename:std::vector<::pollfd>
pending_exception_	asio/include/asio/impl/awaitable.hpp	/^  std::exception_ptr pending_exception_ = nullptr;$/;"	m	class:asio::detail::awaitable_frame_base	typeref:typename:std::exception_ptr
pending_read_	asio/include/asio/ssl/detail/stream_core.hpp	/^  asio::deadline_timer pending_read_;$/;"	m	struct:asio::ssl::detail::stream_core	typeref:typename:asio::deadline_timer
pending_read_	asio/include/asio/ssl/detail/stream_core.hpp	/^  asio::steady_timer pending_read_;$/;"	m	struct:asio::ssl::detail::stream_core	typeref:typename:asio::steady_timer
pending_write_	asio/include/asio/ssl/detail/stream_core.hpp	/^  asio::deadline_timer pending_write_;$/;"	m	struct:asio::ssl::detail::stream_core	typeref:typename:asio::deadline_timer
pending_write_	asio/include/asio/ssl/detail/stream_core.hpp	/^  asio::steady_timer pending_write_;$/;"	m	struct:asio::ssl::detail::stream_core	typeref:typename:asio::steady_timer
per_descriptor_data	asio/include/asio/detail/dev_poll_reactor.hpp	/^  struct per_descriptor_data$/;"	s	class:asio::detail::dev_poll_reactor
per_descriptor_data	asio/include/asio/detail/epoll_reactor.hpp	/^  typedef descriptor_state* per_descriptor_data;$/;"	t	class:asio::detail::epoll_reactor	typeref:typename:descriptor_state *
per_descriptor_data	asio/include/asio/detail/kqueue_reactor.hpp	/^  typedef descriptor_state* per_descriptor_data;$/;"	t	class:asio::detail::kqueue_reactor	typeref:typename:descriptor_state *
per_descriptor_data	asio/include/asio/detail/select_reactor.hpp	/^  struct per_descriptor_data$/;"	s	class:asio::detail::select_reactor
per_timer_data	asio/include/asio/detail/timer_queue.hpp	/^    per_timer_data() :$/;"	f	class:asio::detail::timer_queue::per_timer_data
per_timer_data	asio/include/asio/detail/timer_queue.hpp	/^  class per_timer_data$/;"	c	class:asio::detail::timer_queue
perform	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^  void perform(reactor_op_queue<socket_type>& operations,$/;"	f	class:asio::detail::posix_fd_set_adapter	typeref:typename:void
perform	asio/include/asio/detail/reactor_op.hpp	/^  status perform()$/;"	f	class:asio::detail::reactor_op	typeref:typename:status
perform	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  void perform(reactor_op_queue<socket_type>& operations,$/;"	f	class:asio::detail::win_fd_set_adapter	typeref:typename:void
perform_func_	asio/include/asio/detail/reactor_op.hpp	/^  perform_func_type perform_func_;$/;"	m	class:asio::detail::reactor_op	typeref:typename:perform_func_type
perform_func_type	asio/include/asio/detail/reactor_op.hpp	/^  typedef status (*perform_func_type)(reactor_op*);$/;"	t	class:asio::detail::reactor_op	typeref:typename:status (*)(reactor_op *)
perform_operations	asio/include/asio/detail/reactor_op_queue.hpp	/^  bool perform_operations(Descriptor descriptor, op_queue<operation>& ops)$/;"	f	class:asio::detail::reactor_op_queue	typeref:typename:bool
perform_operations	asio/include/asio/detail/reactor_op_queue.hpp	/^  bool perform_operations(iterator i, op_queue<operation>& ops)$/;"	f	class:asio::detail::reactor_op_queue	typeref:typename:bool
performance_client_SOURCES	asio/src/tests/Makefile.am	/^performance_client_SOURCES = performance\/client.cpp$/;"	m
performance_server_SOURCES	asio/src/tests/Makefile.am	/^performance_server_SOURCES = performance\/server.cpp$/;"	m
period	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^  typedef duration::period period;$/;"	t	struct:time_t_clock	typeref:typename:duration::period	file:
period	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^  typedef duration::period period;$/;"	t	struct:time_t_clock	typeref:typename:duration::period	file:
period_type	asio/include/asio/detail/chrono_time_traits.hpp	/^  typedef typename duration_type::period period_type;$/;"	t	struct:asio::detail::chrono_time_traits	typeref:typename:duration_type::period
pinger	asio/src/examples/cpp03/icmp/ping.cpp	/^  pinger(asio::io_context& io_context, const char* destination)$/;"	f	class:pinger	file:
pinger	asio/src/examples/cpp03/icmp/ping.cpp	/^class pinger$/;"	c	file:
pipe_select_interrupter	asio/include/asio/detail/pipe_select_interrupter.hpp	/^class pipe_select_interrupter$/;"	c	namespace:asio::detail
pipeline	asio/src/examples/cpp11/executors/pipeline.cpp	/^std::future<void> pipeline(F f, Tail... t)$/;"	f	typeref:typename:std::future<void>
pipeline	asio/src/examples/cpp11/executors/pipeline.cpp	/^std::future<void> pipeline(queue_back<T> in, F f)$/;"	f	typeref:typename:std::future<void>
pipeline	asio/src/examples/cpp11/executors/pipeline.cpp	/^std::future<void> pipeline(queue_back<T> in, F f, Tail... t)$/;"	f	typeref:typename:std::future<void>
pipeline	asio/src/examples/cpp14/executors/pipeline.cpp	/^std::future<void> pipeline(F f, Tail... t)$/;"	f	typeref:typename:std::future<void>
pipeline	asio/src/examples/cpp14/executors/pipeline.cpp	/^std::future<void> pipeline(queue_back<T> in, F f)$/;"	f	typeref:typename:std::future<void>
pipeline	asio/src/examples/cpp14/executors/pipeline.cpp	/^std::future<void> pipeline(queue_back<T> in, F f, Tail... t)$/;"	f	typeref:typename:std::future<void>
placeholders	asio/include/asio/placeholders.hpp	/^namespace placeholders {$/;"	n	namespace:asio
pointer	asio/include/asio/buffers_iterator.hpp	/^      BufferSequence, ByteType>::byte_type* pointer;$/;"	t	class:asio::buffers_iterator	typeref:typename:detail::buffers_iterator_types<BufferSequence,ByteType>::byte_type *
pointer	asio/include/asio/buffers_iterator.hpp	/^  typedef const_or_non_const_ByteType* pointer;$/;"	t	class:asio::buffers_iterator	typeref:typename:const_or_non_const_ByteType *
pointer	asio/include/asio/ip/address_v4_iterator.hpp	/^  typedef const address_v4* pointer;$/;"	t	class:asio::ip::basic_address_iterator	typeref:typename:const address_v4 *
pointer	asio/include/asio/ip/address_v6_iterator.hpp	/^  typedef const address_v6* pointer;$/;"	t	class:asio::ip::basic_address_iterator	typeref:typename:const address_v6 *
pointer	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  typedef const basic_resolver_entry<InternetProtocol>* pointer;$/;"	t	class:asio::ip::basic_resolver_iterator	typeref:typename:const basic_resolver_entry<InternetProtocol> *
pointer	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  typedef boost::shared_ptr<connection> pointer;$/;"	t	class:connection	typeref:typename:boost::shared_ptr<connection>	file:
pointer	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  typedef boost::shared_ptr<tcp_connection> pointer;$/;"	t	class:tcp_connection	typeref:typename:boost::shared_ptr<tcp_connection>	file:
pointer	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  typedef boost::shared_ptr<tcp_connection> pointer;$/;"	t	class:tcp_connection	typeref:typename:boost::shared_ptr<tcp_connection>	file:
pointer	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  typedef boost::shared_ptr<connection> pointer;$/;"	t	class:connection	typeref:typename:boost::shared_ptr<connection>	file:
pool	asio/src/examples/cpp11/executors/fork_join.cpp	/^fork_join_pool pool;$/;"	v	typeref:typename:fork_join_pool
pool	asio/src/examples/cpp14/executors/fork_join.cpp	/^fork_join_pool pool;$/;"	v	typeref:typename:fork_join_pool
pool_	asio/include/asio/thread_pool.hpp	/^  thread_pool& pool_;$/;"	m	class:asio::thread_pool::executor_type	typeref:typename:thread_pool &
pool_	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^  mutable thread_pool pool_{1};$/;"	m	class:bank_account	typeref:typename:thread_pool	file:
pool_	asio/src/examples/cpp11/executors/bank_account_2.cpp	/^  mutable thread_pool pool_{1};$/;"	m	class:bank_account	typeref:typename:thread_pool	file:
pool_	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^  mutable thread_pool pool_{1};$/;"	m	class:bank_account	typeref:typename:thread_pool	file:
pool_	asio/src/examples/cpp14/executors/bank_account_2.cpp	/^  mutable thread_pool pool_{1};$/;"	m	class:bank_account	typeref:typename:thread_pool	file:
pop	asio/include/asio/detail/op_queue.hpp	/^  void pop()$/;"	f	class:asio::detail::op_queue	typeref:typename:void
pop	asio/src/examples/cpp11/executors/pipeline.cpp	/^  bool pop(T& t)$/;"	f	class:queue_back	typeref:typename:bool	file:
pop	asio/src/examples/cpp14/executors/pipeline.cpp	/^  bool pop(T& t)$/;"	f	class:queue_back	typeref:typename:bool	file:
pop_frame	asio/include/asio/impl/awaitable.hpp	/^  void pop_frame() noexcept$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void
port	asio/include/asio/ip/basic_endpoint.hpp	/^  unsigned short port() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:unsigned short
port	asio/include/asio/ip/basic_endpoint.hpp	/^  void port(unsigned short port_num) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:void
port_high_byte_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  unsigned char port_high_byte_;$/;"	m	class:socks4::reply	typeref:typename:unsigned char
port_high_byte_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  unsigned char port_high_byte_;$/;"	m	class:socks4::request	typeref:typename:unsigned char
port_high_byte_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  unsigned char port_high_byte_;$/;"	m	class:socks4::reply	typeref:typename:unsigned char
port_high_byte_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  unsigned char port_high_byte_;$/;"	m	class:socks4::request	typeref:typename:unsigned char
port_low_byte_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  unsigned char port_low_byte_;$/;"	m	class:socks4::reply	typeref:typename:unsigned char
port_low_byte_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  unsigned char port_low_byte_;$/;"	m	class:socks4::request	typeref:typename:unsigned char
port_low_byte_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  unsigned char port_low_byte_;$/;"	m	class:socks4::reply	typeref:typename:unsigned char
port_low_byte_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  unsigned char port_low_byte_;$/;"	m	class:socks4::request	typeref:typename:unsigned char
porthopper_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^porthopper_client_SOURCES = porthopper\/client.cpp$/;"	m
porthopper_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^porthopper_server_SOURCES = porthopper\/server.cpp$/;"	m
pos_infin	asio/include/asio/ssl/detail/stream_core.hpp	/^  static asio::deadline_timer::time_type pos_infin()$/;"	f	struct:asio::ssl::detail::stream_core	typeref:typename:asio::deadline_timer::time_type
pos_infin	asio/include/asio/ssl/detail/stream_core.hpp	/^  static asio::steady_timer::time_point pos_infin()$/;"	f	struct:asio::ssl::detail::stream_core	typeref:typename:asio::steady_timer::time_point
position_	asio/include/asio/buffers_iterator.hpp	/^  std::size_t position_;$/;"	m	class:asio::buffers_iterator	typeref:typename:std::size_t
position_	asio/src/tests/unit/read.cpp	/^  size_t position_;$/;"	m	class:test_stream	typeref:typename:size_t	file:
position_	asio/src/tests/unit/read_until.cpp	/^  size_t position_;$/;"	m	class:test_stream	typeref:typename:size_t	file:
position_	asio/src/tests/unit/write.cpp	/^  size_t position_;$/;"	m	class:test_stream	typeref:typename:size_t	file:
posix	asio/include/asio/posix/basic_descriptor.hpp	/^namespace posix {$/;"	n	namespace:asio
posix	asio/include/asio/posix/basic_stream_descriptor.hpp	/^namespace posix {$/;"	n	namespace:asio
posix	asio/include/asio/posix/descriptor.hpp	/^namespace posix {$/;"	n	namespace:asio
posix	asio/include/asio/posix/descriptor_base.hpp	/^namespace posix {$/;"	n	namespace:asio
posix	asio/include/asio/posix/stream_descriptor.hpp	/^namespace posix {$/;"	n	namespace:asio
posix_chat_client	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  posix_chat_client(asio::io_context& io_context,$/;"	f	class:posix_chat_client	file:
posix_chat_client	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^class posix_chat_client$/;"	c	file:
posix_event	asio/include/asio/detail/posix_event.hpp	/^class posix_event$/;"	c	namespace:asio::detail
posix_fd_set_adapter	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^  posix_fd_set_adapter()$/;"	f	class:asio::detail::posix_fd_set_adapter
posix_fd_set_adapter	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^class posix_fd_set_adapter : noncopyable$/;"	c	namespace:asio::detail
posix_global	asio/include/asio/detail/posix_global.hpp	/^T& posix_global()$/;"	f	namespace:asio::detail	typeref:typename:T &
posix_global_impl	asio/include/asio/detail/posix_global.hpp	/^struct posix_global_impl$/;"	s	namespace:asio::detail
posix_mutex	asio/include/asio/detail/posix_mutex.hpp	/^class posix_mutex$/;"	c	namespace:asio::detail
posix_signal_blocker	asio/include/asio/detail/posix_signal_blocker.hpp	/^  posix_signal_blocker()$/;"	f	class:asio::detail::posix_signal_blocker
posix_signal_blocker	asio/include/asio/detail/posix_signal_blocker.hpp	/^class posix_signal_blocker$/;"	c	namespace:asio::detail
posix_static_mutex	asio/include/asio/detail/posix_static_mutex.hpp	/^struct posix_static_mutex$/;"	s	namespace:asio::detail
posix_stream_descriptor_compile	asio/src/tests/unit/posix/stream_descriptor.cpp	/^namespace posix_stream_descriptor_compile {$/;"	n	file:
posix_thread	asio/include/asio/detail/posix_thread.hpp	/^  posix_thread(Function f, unsigned int = 0)$/;"	f	class:asio::detail::posix_thread
posix_thread	asio/include/asio/detail/posix_thread.hpp	/^class posix_thread$/;"	c	namespace:asio::detail
posix_time	asio/include/asio/detail/date_time_fwd.hpp	/^namespace posix_time {$/;"	n	namespace:boost
posix_time_duration	asio/include/asio/detail/chrono_time_traits.hpp	/^    explicit posix_time_duration(const duration_type& d)$/;"	f	class:asio::detail::chrono_time_traits::posix_time_duration
posix_time_duration	asio/include/asio/detail/chrono_time_traits.hpp	/^  class posix_time_duration$/;"	c	struct:asio::detail::chrono_time_traits
posix_tss_ptr	asio/include/asio/detail/posix_tss_ptr.hpp	/^  posix_tss_ptr()$/;"	f	class:asio::detail::posix_tss_ptr
posix_tss_ptr	asio/include/asio/detail/posix_tss_ptr.hpp	/^class posix_tss_ptr$/;"	c	namespace:asio::detail
possible_dup	asio/include/asio/detail/descriptor_ops.hpp	/^  possible_dup = 4$/;"	e	enum:asio::detail::descriptor_ops::__anon0a8e43b60103
possible_dup	asio/include/asio/detail/socket_ops.hpp	/^  possible_dup = 64$/;"	e	enum:asio::detail::socket_ops::__anonc4fdc2e00103
post	asio/include/asio/detail/impl/strand_executor_service.hpp	/^void strand_executor_service::post(const implementation_type& impl,$/;"	f	class:asio::detail::strand_executor_service	typeref:typename:void
post	asio/include/asio/detail/impl/strand_service.hpp	/^void strand_service::post(strand_service::implementation_type& impl,$/;"	f	class:asio::detail::strand_service	typeref:typename:void
post	asio/include/asio/detail/io_object_executor.hpp	/^  void post(ASIO_MOVE_ARG(F) f, const A& a) const$/;"	f	class:asio::detail::io_object_executor	typeref:typename:void
post	asio/include/asio/impl/executor.hpp	/^  void post(ASIO_MOVE_ARG(function) f)$/;"	f	class:asio::executor::impl	typeref:typename:void
post	asio/include/asio/impl/executor.hpp	/^void executor::post(ASIO_MOVE_ARG(Function) f,$/;"	f	class:asio::executor	typeref:typename:void
post	asio/include/asio/impl/io_context.hpp	/^void io_context::executor_type::post($/;"	f	class:asio::io_context::executor_type	typeref:typename:void
post	asio/include/asio/impl/system_executor.hpp	/^void system_executor::post($/;"	f	class:asio::system_executor	typeref:typename:void
post	asio/include/asio/impl/thread_pool.hpp	/^void thread_pool::executor_type::post($/;"	f	class:asio::thread_pool::executor_type	typeref:typename:void
post	asio/include/asio/impl/use_future.hpp	/^  void post(ASIO_MOVE_ARG(F) f, const A& a) const$/;"	f	class:asio::detail::promise_executor	typeref:typename:void
post	asio/include/asio/io_context_strand.hpp	/^  void post(ASIO_MOVE_ARG(Function) f, const Allocator& a) const$/;"	f	class:asio::io_context::strand	typeref:typename:void
post	asio/include/asio/strand.hpp	/^  void post(ASIO_MOVE_ARG(Function) f, const Allocator& a) const$/;"	f	class:asio::strand	typeref:typename:void
post	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    void post(const Function& f, const Allocator&) const$/;"	f	class:handler_priority_queue::executor	typeref:typename:void	file:
post	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void post(Func f, const Alloc& a) const$/;"	f	class:fork_executor	typeref:typename:void	file:
post	asio/src/examples/cpp11/executors/pipeline.cpp	/^  void post(Func f, const Alloc&) const$/;"	f	class:thread_executor	typeref:typename:void	file:
post	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    void post(Func f, const Alloc& a) const$/;"	f	class:priority_scheduler::executor_type	typeref:typename:void	file:
post	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    void post(Function f, const Allocator&) const$/;"	f	class:handler_priority_queue::executor	typeref:typename:void	file:
post	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void post(Func f, const Alloc& a) const$/;"	f	class:fork_executor	typeref:typename:void	file:
post	asio/src/examples/cpp14/executors/pipeline.cpp	/^  void post(Func f, const Alloc&) const$/;"	f	class:thread_executor	typeref:typename:void	file:
post	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    void post(Func f, const Alloc& a) const$/;"	f	class:priority_scheduler::executor_type	typeref:typename:void	file:
post_immediate_completion	asio/include/asio/detail/dev_poll_reactor.hpp	/^  void post_immediate_completion(reactor_op* op, bool is_continuation)$/;"	f	class:asio::detail::dev_poll_reactor	typeref:typename:void
post_immediate_completion	asio/include/asio/detail/epoll_reactor.hpp	/^  void post_immediate_completion(reactor_op* op, bool is_continuation)$/;"	f	class:asio::detail::epoll_reactor	typeref:typename:void
post_immediate_completion	asio/include/asio/detail/kqueue_reactor.hpp	/^  void post_immediate_completion(reactor_op* op, bool is_continuation)$/;"	f	class:asio::detail::kqueue_reactor	typeref:typename:void
post_immediate_completion	asio/include/asio/detail/select_reactor.hpp	/^  void post_immediate_completion(reactor_op* op, bool is_continuation)$/;"	f	class:asio::detail::select_reactor	typeref:typename:void
post_immediate_completion	asio/include/asio/detail/win_iocp_io_context.hpp	/^  void post_immediate_completion(win_iocp_operation* op, bool)$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
post_private_deferred_completion	asio/include/asio/detail/win_iocp_io_context.hpp	/^  void post_private_deferred_completion(win_iocp_operation* op)$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
post_private_immediate_completion	asio/include/asio/detail/win_iocp_io_context.hpp	/^  void post_private_immediate_completion(win_iocp_operation* op)$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
posting	asio/src/tests/unit/compose.cpp	/^  enum { starting, posting } state_;$/;"	e	enum:impl_0_completion_args::__anon61920b0f0103	file:
posting	asio/src/tests/unit/compose.cpp	/^  enum { starting, posting } state_;$/;"	e	enum:impl_1_completion_arg::__anon61920b0f0203	file:
preceding-node-name	asio/src/doc/reference.xsl	/^  <xsl:variable name="preceding-node-name">$/;"	v	matchedTemplate:text()
preceding-node-name	asio/src/doc/tutorial.xsl	/^  <xsl:variable name="preceding-node-name">$/;"	v	matchedTemplate:text()
prefix_length	asio/include/asio/ip/network_v4.hpp	/^  unsigned short prefix_length() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v4	typeref:typename:unsigned short
prefix_length	asio/include/asio/ip/network_v6.hpp	/^  unsigned short prefix_length() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::network_v6	typeref:typename:unsigned short
prefix_length_	asio/include/asio/ip/network_v4.hpp	/^  unsigned short prefix_length_;$/;"	m	class:asio::ip::network_v4	typeref:typename:unsigned short
prefix_length_	asio/include/asio/ip/network_v6.hpp	/^  unsigned short prefix_length_;$/;"	m	class:asio::ip::network_v6	typeref:typename:unsigned short
prepare	asio/include/asio/basic_streambuf.hpp	/^  mutable_buffers_type prepare(std::size_t n)$/;"	f	class:asio::basic_streambuf	typeref:typename:mutable_buffers_type
prepare	asio/include/asio/basic_streambuf.hpp	/^  mutable_buffers_type prepare(std::size_t n)$/;"	f	class:asio::basic_streambuf_ref	typeref:typename:mutable_buffers_type
prepare	asio/include/asio/buffer.hpp	/^  mutable_buffers_type prepare(std::size_t n)$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:mutable_buffers_type
prepare	asio/include/asio/buffer.hpp	/^  mutable_buffers_type prepare(std::size_t n)$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:mutable_buffers_type
prepare	asio/include/asio/detail/consuming_buffers.hpp	/^  Buffer prepare(std::size_t max_size)$/;"	f	class:consuming_single_buffer	typeref:typename:Buffer
prepare	asio/include/asio/detail/consuming_buffers.hpp	/^  boost::array<Buffer, 2> prepare(std::size_t max_size)$/;"	f	class:consuming_buffers	typeref:typename:boost::array<Buffer,2>
prepare	asio/include/asio/detail/consuming_buffers.hpp	/^  null_buffers prepare(std::size_t)$/;"	f	class:consuming_buffers	typeref:typename:null_buffers
prepare	asio/include/asio/detail/consuming_buffers.hpp	/^  prepared_buffers_type prepare(std::size_t max_size)$/;"	f	class:consuming_buffers	typeref:typename:prepared_buffers_type
prepare	asio/include/asio/detail/consuming_buffers.hpp	/^  std::array<Buffer, 2> prepare(std::size_t max_size)$/;"	f	class:consuming_buffers	typeref:typename:std::array<Buffer,2>
prepared_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^  prepared_buffers() : count(0) {}$/;"	f	struct:prepared_buffers
prepared_buffers	asio/include/asio/detail/consuming_buffers.hpp	/^struct prepared_buffers$/;"	s
prepared_buffers_max	asio/include/asio/detail/consuming_buffers.hpp	/^struct prepared_buffers_max$/;"	s	namespace:asio::detail
prepared_buffers_type	asio/include/asio/detail/consuming_buffers.hpp	/^    prepared_buffers_type;$/;"	t	class:consuming_buffers	typeref:typename:prepared_buffers<Buffer,prepared_buffers_max<Buffers>::value>
prev	asio/include/asio/detail/object_pool.hpp	/^  static Object*& prev(Object* o)$/;"	f	class:asio::detail::object_pool_access	typeref:typename:Object * &
prev_	asio/include/asio/detail/epoll_reactor.hpp	/^    descriptor_state* prev_;$/;"	m	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:descriptor_state *
prev_	asio/include/asio/detail/kqueue_reactor.hpp	/^    descriptor_state* prev_;$/;"	m	struct:asio::detail::kqueue_reactor::descriptor_state	typeref:typename:descriptor_state *
prev_	asio/include/asio/detail/signal_set_service.hpp	/^  signal_set_service* prev_;$/;"	m	class:asio::detail::signal_set_service	typeref:typename:signal_set_service *
prev_	asio/include/asio/detail/strand_executor_service.hpp	/^    strand_impl* prev_;$/;"	m	class:asio::detail::strand_executor_service::strand_impl	typeref:typename:strand_impl *
prev_	asio/include/asio/detail/timer_queue.hpp	/^    per_timer_data* prev_;$/;"	m	class:asio::detail::timer_queue::per_timer_data	typeref:typename:per_timer_data *
prev_	asio/include/asio/detail/win_iocp_handle_service.hpp	/^    implementation_type* prev_;$/;"	m	class:asio::detail::win_iocp_handle_service::implementation_type	typeref:typename:implementation_type *
prev_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    base_implementation_type* prev_;$/;"	m	struct:asio::detail::win_iocp_socket_service_base::base_implementation_type	typeref:typename:base_implementation_type *
prev_	asio/include/asio/detail/win_object_handle_service.hpp	/^    implementation_type* prev_;$/;"	m	class:asio::detail::win_object_handle_service::implementation_type	typeref:typename:implementation_type *
prev_	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^    base_implementation_type* prev_;$/;"	m	struct:asio::detail::winrt_ssocket_service_base::base_implementation_type	typeref:typename:base_implementation_type *
prev_in_table_	asio/include/asio/detail/signal_set_service.hpp	/^    registration* prev_in_table_;$/;"	m	class:asio::detail::signal_set_service::registration	typeref:typename:registration *
previous_size_	asio/include/asio/impl/buffered_read_stream.hpp	/^    std::size_t previous_size_;$/;"	m	class:asio::detail::buffered_fill_handler	typeref:typename:std::size_t
print	asio/src/examples/cpp03/tutorial/timer2/timer.cpp	/^void print(const asio::error_code& \/*e*\/)$/;"	f	typeref:typename:void
print	asio/src/examples/cpp03/tutorial/timer3/timer.cpp	/^void print(const asio::error_code& \/*e*\/,$/;"	f	typeref:typename:void
print	asio/src/examples/cpp03/tutorial/timer4/timer.cpp	/^  void print()$/;"	f	class:printer	typeref:typename:void	file:
print	asio/src/tests/performance/client.cpp	/^  void print()$/;"	f	class:stats	typeref:typename:void	file:
print1	asio/src/examples/cpp03/tutorial/timer5/timer.cpp	/^  void print1()$/;"	f	class:printer	typeref:typename:void	file:
print2	asio/src/examples/cpp03/tutorial/timer5/timer.cpp	/^  void print2()$/;"	f	class:printer	typeref:typename:void	file:
print_anon_nodes	asio/src/tools/handlerviz.pl	/^sub print_anon_nodes()$/;"	s
print_balance	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^  void print_balance() const$/;"	f	class:bank_account	typeref:typename:void	file:
print_balance	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^  void print_balance() const$/;"	f	class:bank_account	typeref:typename:void	file:
print_edges	asio/src/tools/handlerviz.pl	/^sub print_edges()$/;"	s
print_line	asio/boostify.pl	/^sub print_line$/;"	s
print_line	asio/tsify.pl	/^sub print_line$/;"	s
print_match	asio/src/examples/cpp03/spawn/parallel_grep.cpp	/^void print_match(std::string input_file, std::string line)$/;"	f	typeref:typename:void
print_node_order	asio/src/tools/handlerviz.pl	/^sub print_node_order()$/;"	s
print_nodes	asio/src/tools/handlerviz.pl	/^sub print_nodes()$/;"	s
print_usage_and_exit	asio/release.pl	/^sub print_usage_and_exit$/;"	s
printer	asio/src/examples/cpp03/tutorial/timer4/timer.cpp	/^  printer(asio::io_context& io)$/;"	f	class:printer	file:
printer	asio/src/examples/cpp03/tutorial/timer4/timer.cpp	/^class printer$/;"	c	file:
printer	asio/src/examples/cpp03/tutorial/timer5/timer.cpp	/^  printer(asio::io_context& io)$/;"	f	class:printer	file:
printer	asio/src/examples/cpp03/tutorial/timer5/timer.cpp	/^class printer$/;"	c	file:
priority_	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    int priority_;$/;"	m	class:handler_priority_queue::executor	typeref:typename:int	file:
priority_	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    int priority_;$/;"	m	class:handler_priority_queue::queued_handler	typeref:typename:int	file:
priority_	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    int priority_;$/;"	m	class:priority_scheduler::executor_type	typeref:typename:int	file:
priority_	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    int priority_;$/;"	m	struct:priority_scheduler::item_base	typeref:typename:int	file:
priority_	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    int priority_;$/;"	m	class:handler_priority_queue::executor	typeref:typename:int	file:
priority_	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    int priority_;$/;"	m	class:handler_priority_queue::queued_handler_base	typeref:typename:int	file:
priority_	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    int priority_;$/;"	m	class:priority_scheduler::executor_type	typeref:typename:int	file:
priority_	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    int priority_;$/;"	m	struct:priority_scheduler::item_base	typeref:typename:int	file:
priority_scheduler	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^class priority_scheduler : public execution_context$/;"	c	file:
priority_scheduler	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^class priority_scheduler : public execution_context$/;"	c	file:
private_op_queue	asio/include/asio/detail/scheduler_thread_info.hpp	/^  op_queue<scheduler_operation> private_op_queue;$/;"	m	struct:asio::detail::scheduler_thread_info	typeref:typename:op_queue<scheduler_operation>
private_outstanding_work	asio/include/asio/detail/scheduler_thread_info.hpp	/^  long private_outstanding_work;$/;"	m	struct:asio::detail::scheduler_thread_info	typeref:typename:long
process	asio/include/asio/impl/connect.hpp	/^    void process(asio::error_code ec,$/;"	f	class:asio::detail::range_connect_op	typeref:typename:void
process	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^  engine::want process(engine& eng,$/;"	f	class:asio::ssl::detail::buffered_handshake_op	typeref:typename:engine::want
programlisting	asio/src/doc/reference.xsl	/^<xsl:template match="programlisting" mode="markup">$/;"	m
programlisting	asio/src/doc/reference.xsl	/^<xsl:template match="programlisting" mode="markup-nested">$/;"	m
programlisting	asio/src/doc/tutorial.xsl	/^<xsl:template match="programlisting">$/;"	m
programlisting/emphasis	asio/src/doc/asioref.xsl	/^<xsl:template match="programlisting\/emphasis">$/;"	m
programlisting/link	asio/src/doc/asioref.xsl	/^<xsl:template match="programlisting\/link">$/;"	m
programlisting/phrase	asio/src/doc/asioref.xsl	/^<xsl:template match="programlisting\/phrase">$/;"	m
promise	asio/include/asio/detail/winrt_async_manager.hpp	/^    auto promise = std::make_shared<std::promise<asio::error_code>>();$/;"	m	class:asio::detail::winrt_async_manager	typeref:typename:auto
promise_	asio/include/asio/detail/winrt_async_manager.hpp	/^  std::promise<void> promise_;$/;"	m	class:asio::detail::winrt_async_manager	typeref:typename:std::promise<void>
promise_async_result	asio/include/asio/impl/use_future.hpp	/^  explicit promise_async_result(completion_handler_type& h)$/;"	f	class:asio::detail::promise_async_result
promise_async_result	asio/include/asio/impl/use_future.hpp	/^class promise_async_result$/;"	c	namespace:asio::detail
promise_creator	asio/include/asio/impl/use_future.hpp	/^class promise_creator$/;"	c	namespace:asio::detail
promise_executor	asio/include/asio/impl/use_future.hpp	/^  explicit promise_executor(const shared_ptr<std::promise<T> >& p)$/;"	f	class:asio::detail::promise_executor
promise_executor	asio/include/asio/impl/use_future.hpp	/^class promise_executor$/;"	c	namespace:asio::detail
promise_handler	asio/include/asio/impl/use_future.hpp	/^  promise_handler(use_future_t<Allocator> u)$/;"	f	class:asio::detail::promise_handler
promise_handler	asio/include/asio/impl/use_future.hpp	/^class promise_handler$/;"	c	namespace:asio::detail
promise_handler_0	asio/include/asio/impl/use_future.hpp	/^class promise_handler_0$/;"	c	namespace:asio::detail
promise_handler_1	asio/include/asio/impl/use_future.hpp	/^class promise_handler_1$/;"	c	namespace:asio::detail
promise_handler_ec_0	asio/include/asio/impl/use_future.hpp	/^class promise_handler_ec_0$/;"	c	namespace:asio::detail
promise_handler_ec_1	asio/include/asio/impl/use_future.hpp	/^class promise_handler_ec_1$/;"	c	namespace:asio::detail
promise_handler_ec_n	asio/include/asio/impl/use_future.hpp	/^class promise_handler_ec_n$/;"	c	namespace:asio::detail
promise_handler_ex_0	asio/include/asio/impl/use_future.hpp	/^class promise_handler_ex_0$/;"	c	namespace:asio::detail
promise_handler_ex_1	asio/include/asio/impl/use_future.hpp	/^class promise_handler_ex_1$/;"	c	namespace:asio::detail
promise_handler_ex_n	asio/include/asio/impl/use_future.hpp	/^class promise_handler_ex_n$/;"	c	namespace:asio::detail
promise_handler_n	asio/include/asio/impl/use_future.hpp	/^class promise_handler_n$/;"	c	namespace:asio::detail
promise_handler_selector	asio/include/asio/impl/use_future.hpp	/^class promise_handler_selector<void()>$/;"	c	namespace:asio::detail
promise_handler_selector	asio/include/asio/impl/use_future.hpp	/^class promise_handler_selector<void(Arg)>$/;"	c	namespace:asio::detail
promise_handler_selector	asio/include/asio/impl/use_future.hpp	/^class promise_handler_selector<void(Arg...)>$/;"	c	namespace:asio::detail
promise_handler_selector	asio/include/asio/impl/use_future.hpp	/^class promise_handler_selector<void(asio::error_code)>$/;"	c	namespace:asio::detail
promise_handler_selector	asio/include/asio/impl/use_future.hpp	/^class promise_handler_selector<void(asio::error_code, Arg)>$/;"	c	namespace:asio::detail
promise_handler_selector	asio/include/asio/impl/use_future.hpp	/^class promise_handler_selector<void(asio::error_code, Arg...)>$/;"	c	namespace:asio::detail
promise_handler_selector	asio/include/asio/impl/use_future.hpp	/^class promise_handler_selector<void(std::exception_ptr)>$/;"	c	namespace:asio::detail
promise_handler_selector	asio/include/asio/impl/use_future.hpp	/^class promise_handler_selector<void(std::exception_ptr, Arg)>$/;"	c	namespace:asio::detail
promise_handler_selector	asio/include/asio/impl/use_future.hpp	/^class promise_handler_selector<void(std::exception_ptr, Arg...)>$/;"	c	namespace:asio::detail
promise_invoke_and_set	asio/include/asio/impl/use_future.hpp	/^inline void promise_invoke_and_set(std::promise<T>& p,$/;"	f	namespace:asio::detail	typeref:typename:void
promise_invoke_and_set	asio/include/asio/impl/use_future.hpp	/^inline void promise_invoke_and_set(std::promise<void>& p,$/;"	f	namespace:asio::detail	typeref:typename:void
promise_invoker	asio/include/asio/impl/use_future.hpp	/^  promise_invoker(const shared_ptr<std::promise<T> >& p,$/;"	f	class:asio::detail::promise_invoker
promise_invoker	asio/include/asio/impl/use_future.hpp	/^class promise_invoker$/;"	c	namespace:asio::detail
promise_type	asio/include/asio/impl/awaitable.hpp	/^  typedef asio::detail::awaitable_frame<T, Executor> promise_type;$/;"	t	struct:std::experimental::coroutine_traits	typeref:typename:asio::detail::awaitable_frame<T,Executor>
protocol	asio/include/asio/generic/basic_endpoint.hpp	/^  protocol_type protocol() const$/;"	f	class:asio::generic::basic_endpoint	typeref:typename:protocol_type
protocol	asio/include/asio/generic/datagram_protocol.hpp	/^  int protocol() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::datagram_protocol	typeref:typename:int
protocol	asio/include/asio/generic/detail/endpoint.hpp	/^  int protocol() const$/;"	f	class:asio::generic::detail::endpoint	typeref:typename:int
protocol	asio/include/asio/generic/raw_protocol.hpp	/^  int protocol() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::raw_protocol	typeref:typename:int
protocol	asio/include/asio/generic/seq_packet_protocol.hpp	/^  int protocol() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::seq_packet_protocol	typeref:typename:int
protocol	asio/include/asio/generic/stream_protocol.hpp	/^  int protocol() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::stream_protocol	typeref:typename:int
protocol	asio/include/asio/ip/basic_endpoint.hpp	/^  protocol_type protocol() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:protocol_type
protocol	asio/include/asio/ip/icmp.hpp	/^  int protocol() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::icmp	typeref:typename:int
protocol	asio/include/asio/ip/tcp.hpp	/^  int protocol() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::tcp	typeref:typename:int
protocol	asio/include/asio/ip/udp.hpp	/^  int protocol() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::udp	typeref:typename:int
protocol	asio/include/asio/local/basic_endpoint.hpp	/^  protocol_type protocol() const$/;"	f	class:asio::local::basic_endpoint	typeref:typename:protocol_type
protocol	asio/include/asio/local/datagram_protocol.hpp	/^  int protocol() const ASIO_NOEXCEPT$/;"	f	class:asio::local::datagram_protocol	typeref:typename:int
protocol	asio/include/asio/local/stream_protocol.hpp	/^  int protocol() const ASIO_NOEXCEPT$/;"	f	class:asio::local::stream_protocol	typeref:typename:int
protocol	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned char protocol() const { return rep_[9]; }$/;"	f	class:ipv4_header	typeref:typename:unsigned char
protocol_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  Protocol protocol_;$/;"	m	class:asio::detail::reactive_socket_accept_op_base	typeref:typename:Protocol
protocol_	asio/include/asio/detail/reactive_socket_service.hpp	/^    protocol_type protocol_;$/;"	m	struct:asio::detail::reactive_socket_service::implementation_type	typeref:typename:protocol_type
protocol_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  Protocol protocol_;$/;"	m	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:Protocol
protocol_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  Protocol protocol_;$/;"	m	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:Protocol
protocol_	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    protocol_type protocol_;$/;"	m	struct:asio::detail::win_iocp_socket_service::implementation_type	typeref:typename:protocol_type
protocol_	asio/include/asio/detail/winrt_ssocket_service.hpp	/^    protocol_type protocol_;$/;"	m	struct:asio::detail::winrt_ssocket_service::implementation_type	typeref:typename:protocol_type
protocol_	asio/include/asio/generic/datagram_protocol.hpp	/^  int protocol_;$/;"	m	class:asio::generic::datagram_protocol	typeref:typename:int
protocol_	asio/include/asio/generic/detail/endpoint.hpp	/^  int protocol_;$/;"	m	class:asio::generic::detail::endpoint	typeref:typename:int
protocol_	asio/include/asio/generic/raw_protocol.hpp	/^  int protocol_;$/;"	m	class:asio::generic::raw_protocol	typeref:typename:int
protocol_	asio/include/asio/generic/seq_packet_protocol.hpp	/^  int protocol_;$/;"	m	class:asio::generic::seq_packet_protocol	typeref:typename:int
protocol_	asio/include/asio/generic/stream_protocol.hpp	/^  int protocol_;$/;"	m	class:asio::generic::stream_protocol	typeref:typename:int
protocol_	asio/include/asio/ip/icmp.hpp	/^  int protocol_;$/;"	m	class:asio::ip::icmp	typeref:typename:int
protocol_type	asio/include/asio/basic_datagram_socket.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::basic_datagram_socket	typeref:typename:Protocol
protocol_type	asio/include/asio/basic_raw_socket.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::basic_raw_socket	typeref:typename:Protocol
protocol_type	asio/include/asio/basic_seq_packet_socket.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::basic_seq_packet_socket	typeref:typename:Protocol
protocol_type	asio/include/asio/basic_socket.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::basic_socket	typeref:typename:Protocol
protocol_type	asio/include/asio/basic_socket_acceptor.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::basic_socket_acceptor	typeref:typename:Protocol
protocol_type	asio/include/asio/basic_socket_iostream.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:Protocol
protocol_type	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:Protocol
protocol_type	asio/include/asio/basic_stream_socket.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::basic_stream_socket	typeref:typename:Protocol
protocol_type	asio/include/asio/detail/null_socket_service.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::detail::null_socket_service	typeref:typename:Protocol
protocol_type	asio/include/asio/detail/reactive_socket_service.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::detail::reactive_socket_service	typeref:typename:Protocol
protocol_type	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::detail::win_iocp_socket_service	typeref:typename:Protocol
protocol_type	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::detail::winrt_ssocket_service	typeref:typename:Protocol
protocol_type	asio/include/asio/generic/basic_endpoint.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::generic::basic_endpoint	typeref:typename:Protocol
protocol_type	asio/include/asio/ip/basic_endpoint.hpp	/^  typedef InternetProtocol protocol_type;$/;"	t	class:asio::ip::basic_endpoint	typeref:typename:InternetProtocol
protocol_type	asio/include/asio/ip/basic_resolver.hpp	/^  typedef InternetProtocol protocol_type;$/;"	t	class:asio::ip::basic_resolver	typeref:typename:InternetProtocol
protocol_type	asio/include/asio/ip/basic_resolver_entry.hpp	/^  typedef InternetProtocol protocol_type;$/;"	t	class:asio::ip::basic_resolver_entry	typeref:typename:InternetProtocol
protocol_type	asio/include/asio/ip/basic_resolver_query.hpp	/^  typedef InternetProtocol protocol_type;$/;"	t	class:asio::ip::basic_resolver_query	typeref:typename:InternetProtocol
protocol_type	asio/include/asio/ip/basic_resolver_results.hpp	/^  typedef InternetProtocol protocol_type;$/;"	t	class:asio::ip::basic_resolver_results	typeref:typename:InternetProtocol
protocol_type	asio/include/asio/local/basic_endpoint.hpp	/^  typedef Protocol protocol_type;$/;"	t	class:asio::local::basic_endpoint	typeref:typename:Protocol
protocol_type_	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  int protocol_type_;$/;"	m	class:asio::detail::reactive_socket_recvfrom_op_base	typeref:typename:int
ptr	asio/include/asio/detail/posix_thread.hpp	/^    func_base* ptr;$/;"	m	struct:asio::detail::posix_thread::auto_func_base_ptr	typeref:typename:func_base *
ptr	asio/include/asio/detail/win_thread.hpp	/^    func_base* ptr;$/;"	m	struct:asio::detail::win_thread::auto_func_base_ptr	typeref:typename:func_base *
ptr_	asio/include/asio/detail/null_global.hpp	/^  T* ptr_;$/;"	m	struct:asio::detail::null_global_impl	typeref:typename:T *
ptr_	asio/include/asio/detail/posix_global.hpp	/^  T* ptr_;$/;"	m	struct:asio::detail::posix_global_impl	typeref:typename:T *
ptr_	asio/include/asio/detail/service_registry.hpp	/^    execution_context::service* ptr_;$/;"	m	struct:asio::detail::service_registry::auto_service_ptr	typeref:typename:execution_context::service *
ptr_	asio/include/asio/detail/std_global.hpp	/^  T* ptr_;$/;"	m	struct:asio::detail::std_global_impl	typeref:typename:T *
ptr_	asio/include/asio/detail/win_global.hpp	/^  T* ptr_;$/;"	m	struct:asio::detail::win_global_impl	typeref:typename:T *
ptr_	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  win_iocp_operation* ptr_;$/;"	m	class:asio::detail::win_iocp_overlapped_ptr	typeref:typename:win_iocp_operation *
ptr_	asio/include/asio/impl/executor.hpp	/^    impl* ptr_;$/;"	m	struct:asio::executor::impl::raw_mem	typeref:typename:impl *
puberror	asio/include/asio/basic_socket_streambuf.hpp	/^  const asio::error_code& puberror() const$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:const asio::error_code &
pump	asio/include/asio/impl/awaitable.hpp	/^  void pump()$/;"	f	class:asio::detail::awaitable_thread	typeref:typename:void
push	asio/include/asio/detail/op_queue.hpp	/^  void push(Operation* h)$/;"	f	class:asio::detail::op_queue	typeref:typename:void
push	asio/include/asio/detail/op_queue.hpp	/^  void push(op_queue<OtherOperation>& q)$/;"	f	class:asio::detail::op_queue	typeref:typename:void
push	asio/src/examples/cpp11/executors/pipeline.cpp	/^  void push(T t)$/;"	f	class:queue_front	typeref:typename:void	file:
push	asio/src/examples/cpp14/executors/pipeline.cpp	/^  void push(T t)$/;"	f	class:queue_front	typeref:typename:void	file:
push_frame	asio/include/asio/impl/awaitable.hpp	/^  void push_frame(awaitable_frame_base<Executor>* caller) noexcept$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void
put_buffer_	asio/include/asio/basic_socket_streambuf.hpp	/^  std::vector<char> put_buffer_;$/;"	m	class:asio::detail::socket_streambuf_buffers	typeref:typename:std::vector<char>
putback_max	asio/include/asio/basic_socket_streambuf.hpp	/^  enum { putback_max = 8 };$/;"	e	enum:asio::basic_socket_streambuf::__anon8ef6d9760203
query	asio/include/asio/ip/basic_resolver.hpp	/^  typedef basic_resolver_query<InternetProtocol> query;$/;"	t	class:asio::ip::basic_resolver	typeref:typename:basic_resolver_query<InternetProtocol>
query_	asio/include/asio/detail/resolve_query_op.hpp	/^  query_type query_;$/;"	m	class:asio::detail::resolve_query_op	typeref:typename:query_type
query_	asio/include/asio/detail/winrt_resolve_op.hpp	/^  query_type query_;$/;"	m	class:asio::detail::winrt_resolve_op	typeref:typename:query_type
query_type	asio/include/asio/detail/resolve_query_op.hpp	/^  typedef asio::ip::basic_resolver_query<Protocol> query_type;$/;"	t	class:asio::detail::resolve_query_op	typeref:typename:asio::ip::basic_resolver_query<Protocol>
query_type	asio/include/asio/detail/resolver_service.hpp	/^  typedef asio::ip::basic_resolver_query<Protocol> query_type;$/;"	t	class:asio::detail::resolver_service	typeref:typename:asio::ip::basic_resolver_query<Protocol>
query_type	asio/include/asio/detail/winrt_resolve_op.hpp	/^  typedef asio::ip::basic_resolver_query<Protocol> query_type;$/;"	t	class:asio::detail::winrt_resolve_op	typeref:typename:asio::ip::basic_resolver_query<Protocol>
query_type	asio/include/asio/detail/winrt_resolver_service.hpp	/^  typedef asio::ip::basic_resolver_query<Protocol> query_type;$/;"	t	class:asio::detail::winrt_resolver_service	typeref:typename:asio::ip::basic_resolver_query<Protocol>
queue_	asio/include/asio/detail/signal_set_service.hpp	/^    op_queue<signal_op> queue_;$/;"	m	class:asio::detail::signal_set_service::implementation_type	typeref:typename:op_queue<signal_op>
queue_	asio/include/asio/detail/signal_set_service.hpp	/^    op_queue<signal_op>* queue_;$/;"	m	class:asio::detail::signal_set_service::registration	typeref:typename:op_queue<signal_op> *
queue_	asio/src/examples/cpp11/executors/fork_join.cpp	/^  std::queue<std::shared_ptr<function_base>> queue_;$/;"	m	class:fork_join_pool	typeref:typename:std::queue<std::shared_ptr<function_base>>	file:
queue_	asio/src/examples/cpp11/executors/pipeline.cpp	/^  std::queue<T> queue_;$/;"	m	class:queue_impl	typeref:typename:std::queue<T>	file:
queue_	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^    item_comp> queue_;$/;"	m	class:priority_scheduler	typeref:typename:std::priority_queue<std::shared_ptr<item_base>,std::vector<std::shared_ptr<item_base>>,item_comp>	file:
queue_	asio/src/examples/cpp14/executors/fork_join.cpp	/^  std::queue<std::shared_ptr<function_base>> queue_;$/;"	m	class:fork_join_pool	typeref:typename:std::queue<std::shared_ptr<function_base>>	file:
queue_	asio/src/examples/cpp14/executors/pipeline.cpp	/^  std::queue<T> queue_;$/;"	m	class:queue_impl	typeref:typename:std::queue<T>	file:
queue_	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^    item_comp> queue_;$/;"	m	class:priority_scheduler	typeref:typename:std::priority_queue<std::shared_ptr<item_base>,std::vector<std::shared_ptr<item_base>>,item_comp>	file:
queue_back	asio/src/examples/cpp11/executors/pipeline.cpp	/^  explicit queue_back(std::shared_ptr<queue_impl<T>> impl)$/;"	f	class:queue_back	file:
queue_back	asio/src/examples/cpp11/executors/pipeline.cpp	/^class queue_back$/;"	c	file:
queue_back	asio/src/examples/cpp14/executors/pipeline.cpp	/^  explicit queue_back(std::shared_ptr<queue_impl<T>> impl)$/;"	f	class:queue_back	file:
queue_back	asio/src/examples/cpp14/executors/pipeline.cpp	/^class queue_back$/;"	c	file:
queue_front	asio/src/examples/cpp11/executors/pipeline.cpp	/^  explicit queue_front(std::shared_ptr<queue_impl<T>> impl)$/;"	f	class:queue_front	file:
queue_front	asio/src/examples/cpp11/executors/pipeline.cpp	/^class queue_front$/;"	c	file:
queue_front	asio/src/examples/cpp14/executors/pipeline.cpp	/^  explicit queue_front(std::shared_ptr<queue_impl<T>> impl)$/;"	f	class:queue_front	file:
queue_front	asio/src/examples/cpp14/executors/pipeline.cpp	/^class queue_front$/;"	c	file:
queue_impl	asio/src/examples/cpp11/executors/pipeline.cpp	/^class queue_impl : public queue_impl_base$/;"	c	file:
queue_impl	asio/src/examples/cpp14/executors/pipeline.cpp	/^class queue_impl : public queue_impl_base$/;"	c	file:
queue_impl_base	asio/src/examples/cpp11/executors/pipeline.cpp	/^class queue_impl_base$/;"	c	file:
queue_impl_base	asio/src/examples/cpp14/executors/pipeline.cpp	/^class queue_impl_base$/;"	c	file:
queued_handler	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^    queued_handler(int p, boost::function<void()> f)$/;"	f	class:handler_priority_queue::queued_handler	file:
queued_handler	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^  class queued_handler$/;"	c	class:handler_priority_queue	file:
queued_handler	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    queued_handler(int p, Function f)$/;"	f	class:handler_priority_queue::queued_handler	file:
queued_handler	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^  class queued_handler : public queued_handler_base$/;"	c	class:handler_priority_queue	file:
queued_handler_base	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    queued_handler_base(int p)$/;"	f	class:handler_priority_queue::queued_handler_base	file:
queued_handler_base	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^  class queued_handler_base$/;"	c	class:handler_priority_queue	file:
random_access_handle	asio/include/asio/windows/random_access_handle.hpp	/^typedef basic_random_access_handle<> random_access_handle;$/;"	t	namespace:asio::windows	typeref:typename:basic_random_access_handle<>
range_connect_op	asio/include/asio/impl/connect.hpp	/^    range_connect_op(basic_socket<Protocol, Executor>& sock,$/;"	f	class:asio::detail::range_connect_op
range_connect_op	asio/include/asio/impl/connect.hpp	/^    range_connect_op(const range_connect_op& other)$/;"	f	class:asio::detail::range_connect_op
range_connect_op	asio/include/asio/impl/connect.hpp	/^    range_connect_op(range_connect_op&& other)$/;"	f	class:asio::detail::range_connect_op
range_connect_op	asio/include/asio/impl/connect.hpp	/^  class range_connect_op : base_from_connect_condition<ConnectCondition>$/;"	c	namespace:asio::detail
range_handler	asio/src/tests/unit/connect.cpp	/^void range_handler(const asio::error_code& ec,$/;"	f	typeref:typename:void
raw_mem	asio/include/asio/impl/executor.hpp	/^    explicit raw_mem(const Allocator& a)$/;"	f	struct:asio::executor::impl::raw_mem
raw_mem	asio/include/asio/impl/executor.hpp	/^  struct raw_mem$/;"	s	class:asio::executor::impl
raw_protocol	asio/include/asio/generic/raw_protocol.hpp	/^  raw_protocol(const Protocol& source_protocol)$/;"	f	class:asio::generic::raw_protocol
raw_protocol	asio/include/asio/generic/raw_protocol.hpp	/^  raw_protocol(int address_family, int socket_protocol)$/;"	f	class:asio::generic::raw_protocol
raw_protocol	asio/include/asio/generic/raw_protocol.hpp	/^class raw_protocol$/;"	c	namespace:asio::generic
rdbuf	asio/include/asio/basic_socket_iostream.hpp	/^  basic_socket_streambuf<Protocol, Clock, WaitTraits>* rdbuf() const$/;"	f	class:asio::basic_socket_iostream	typeref:typename:basic_socket_streambuf<Protocol,Clock,WaitTraits> *
reactive_descriptor_service	asio/include/asio/detail/reactive_descriptor_service.hpp	/^class reactive_descriptor_service :$/;"	c	namespace:asio::detail
reactive_null_buffers_op	asio/include/asio/detail/reactive_null_buffers_op.hpp	/^  reactive_null_buffers_op(Handler& handler, const IoExecutor& io_ex)$/;"	f	class:asio::detail::reactive_null_buffers_op
reactive_null_buffers_op	asio/include/asio/detail/reactive_null_buffers_op.hpp	/^class reactive_null_buffers_op : public reactor_op$/;"	c	namespace:asio::detail
reactive_serial_port_service	asio/include/asio/detail/reactive_serial_port_service.hpp	/^class reactive_serial_port_service :$/;"	c	namespace:asio::detail
reactive_socket_accept_op	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  reactive_socket_accept_op(socket_type socket,$/;"	f	class:asio::detail::reactive_socket_accept_op
reactive_socket_accept_op	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^class reactive_socket_accept_op :$/;"	c	namespace:asio::detail
reactive_socket_accept_op_base	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  reactive_socket_accept_op_base(socket_type socket,$/;"	f	class:asio::detail::reactive_socket_accept_op_base
reactive_socket_accept_op_base	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^class reactive_socket_accept_op_base : public reactor_op$/;"	c	namespace:asio::detail
reactive_socket_connect_op	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^  reactive_socket_connect_op(socket_type socket,$/;"	f	class:asio::detail::reactive_socket_connect_op
reactive_socket_connect_op	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^class reactive_socket_connect_op : public reactive_socket_connect_op_base$/;"	c	namespace:asio::detail
reactive_socket_connect_op_base	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^  reactive_socket_connect_op_base(socket_type socket, func_type complete_func)$/;"	f	class:asio::detail::reactive_socket_connect_op_base
reactive_socket_connect_op_base	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^class reactive_socket_connect_op_base : public reactor_op$/;"	c	namespace:asio::detail
reactive_socket_move_accept_op	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  reactive_socket_move_accept_op(const PeerIoExecutor& peer_io_ex,$/;"	f	class:asio::detail::reactive_socket_move_accept_op
reactive_socket_move_accept_op	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^class reactive_socket_move_accept_op :$/;"	c	namespace:asio::detail
reactive_socket_recv_op	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^  reactive_socket_recv_op(socket_type socket, socket_ops::state_type state,$/;"	f	class:asio::detail::reactive_socket_recv_op
reactive_socket_recv_op	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^class reactive_socket_recv_op :$/;"	c	namespace:asio::detail
reactive_socket_recv_op_base	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^  reactive_socket_recv_op_base(socket_type socket,$/;"	f	class:asio::detail::reactive_socket_recv_op_base
reactive_socket_recv_op_base	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^class reactive_socket_recv_op_base : public reactor_op$/;"	c	namespace:asio::detail
reactive_socket_recvfrom_op	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  reactive_socket_recvfrom_op(socket_type socket, int protocol_type,$/;"	f	class:asio::detail::reactive_socket_recvfrom_op
reactive_socket_recvfrom_op	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^class reactive_socket_recvfrom_op :$/;"	c	namespace:asio::detail
reactive_socket_recvfrom_op_base	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  reactive_socket_recvfrom_op_base(socket_type socket, int protocol_type,$/;"	f	class:asio::detail::reactive_socket_recvfrom_op_base
reactive_socket_recvfrom_op_base	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^class reactive_socket_recvfrom_op_base : public reactor_op$/;"	c	namespace:asio::detail
reactive_socket_recvmsg_op	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^  reactive_socket_recvmsg_op(socket_type socket,$/;"	f	class:asio::detail::reactive_socket_recvmsg_op
reactive_socket_recvmsg_op	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^class reactive_socket_recvmsg_op :$/;"	c	namespace:asio::detail
reactive_socket_recvmsg_op_base	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^  reactive_socket_recvmsg_op_base(socket_type socket,$/;"	f	class:asio::detail::reactive_socket_recvmsg_op_base
reactive_socket_recvmsg_op_base	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^class reactive_socket_recvmsg_op_base : public reactor_op$/;"	c	namespace:asio::detail
reactive_socket_send_op	asio/include/asio/detail/reactive_socket_send_op.hpp	/^  reactive_socket_send_op(socket_type socket, socket_ops::state_type state,$/;"	f	class:asio::detail::reactive_socket_send_op
reactive_socket_send_op	asio/include/asio/detail/reactive_socket_send_op.hpp	/^class reactive_socket_send_op :$/;"	c	namespace:asio::detail
reactive_socket_send_op_base	asio/include/asio/detail/reactive_socket_send_op.hpp	/^  reactive_socket_send_op_base(socket_type socket,$/;"	f	class:asio::detail::reactive_socket_send_op_base
reactive_socket_send_op_base	asio/include/asio/detail/reactive_socket_send_op.hpp	/^class reactive_socket_send_op_base : public reactor_op$/;"	c	namespace:asio::detail
reactive_socket_sendto_op	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^  reactive_socket_sendto_op(socket_type socket,$/;"	f	class:asio::detail::reactive_socket_sendto_op
reactive_socket_sendto_op	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^class reactive_socket_sendto_op :$/;"	c	namespace:asio::detail
reactive_socket_sendto_op_base	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^  reactive_socket_sendto_op_base(socket_type socket,$/;"	f	class:asio::detail::reactive_socket_sendto_op_base
reactive_socket_sendto_op_base	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^class reactive_socket_sendto_op_base : public reactor_op$/;"	c	namespace:asio::detail
reactive_socket_service	asio/include/asio/detail/reactive_socket_service.hpp	/^  reactive_socket_service(execution_context& context)$/;"	f	class:asio::detail::reactive_socket_service
reactive_socket_service	asio/include/asio/detail/reactive_socket_service.hpp	/^class reactive_socket_service :$/;"	c	namespace:asio::detail
reactive_socket_service_base	asio/include/asio/detail/reactive_socket_service_base.hpp	/^class reactive_socket_service_base$/;"	c	namespace:asio::detail
reactive_wait_op	asio/include/asio/detail/reactive_wait_op.hpp	/^  reactive_wait_op(Handler& handler, const IoExecutor& io_ex)$/;"	f	class:asio::detail::reactive_wait_op
reactive_wait_op	asio/include/asio/detail/reactive_wait_op.hpp	/^class reactive_wait_op : public reactor_op$/;"	c	namespace:asio::detail
reactor	asio/include/asio/detail/reactor_fwd.hpp	/^typedef class null_reactor reactor;$/;"	t	namespace:asio::detail	typeref:class:null_reactor
reactor_	asio/include/asio/detail/epoll_reactor.hpp	/^    epoll_reactor* reactor_;$/;"	m	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:epoll_reactor *
reactor_	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  reactor& reactor_;$/;"	m	class:asio::detail::reactive_descriptor_service	typeref:typename:reactor &
reactor_	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  reactor& reactor_;$/;"	m	class:asio::detail::reactive_socket_service_base	typeref:typename:reactor &
reactor_	asio/include/asio/detail/signal_set_service.hpp	/^  reactor& reactor_;$/;"	m	class:asio::detail::signal_set_service	typeref:typename:reactor &
reactor_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  select_reactor* reactor_;$/;"	m	class:asio::detail::win_iocp_socket_service_base	typeref:typename:select_reactor *
reactor_data_	asio/include/asio/detail/reactive_descriptor_service.hpp	/^    reactor::per_descriptor_data reactor_data_;$/;"	m	class:asio::detail::reactive_descriptor_service::implementation_type	typeref:typename:reactor::per_descriptor_data
reactor_data_	asio/include/asio/detail/reactive_socket_service_base.hpp	/^    reactor::per_descriptor_data reactor_data_;$/;"	m	struct:asio::detail::reactive_socket_service_base::base_implementation_type	typeref:typename:reactor::per_descriptor_data
reactor_data_	asio/include/asio/detail/signal_set_service.hpp	/^  reactor::per_descriptor_data reactor_data_;$/;"	m	class:asio::detail::signal_set_service	typeref:typename:reactor::per_descriptor_data
reactor_data_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    select_reactor::per_descriptor_data reactor_data_;$/;"	m	struct:asio::detail::win_iocp_socket_service_base::base_implementation_type	typeref:typename:select_reactor::per_descriptor_data
reactor_deregistration	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^  static void reactor_deregistration(asio::execution_context& context,$/;"	f	struct:custom_tracking	typeref:typename:void
reactor_events	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^  static void reactor_events(asio::execution_context& context,$/;"	f	struct:custom_tracking	typeref:typename:void
reactor_op	asio/include/asio/detail/reactor_op.hpp	/^  reactor_op(perform_func_type perform_func, func_type complete_func)$/;"	f	class:asio::detail::reactor_op
reactor_op	asio/include/asio/detail/reactor_op.hpp	/^class reactor_op$/;"	c	namespace:asio::detail
reactor_op_queue	asio/include/asio/detail/reactor_op_queue.hpp	/^  reactor_op_queue()$/;"	f	class:asio::detail::reactor_op_queue
reactor_op_queue	asio/include/asio/detail/reactor_op_queue.hpp	/^class reactor_op_queue$/;"	c	namespace:asio::detail
reactor_operation	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^  static void reactor_operation(const tracked_handler& h,$/;"	f	struct:custom_tracking	typeref:typename:void
reactor_registration	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^  static void reactor_registration(asio::execution_context& context,$/;"	f	struct:custom_tracking	typeref:typename:void
read	asio/include/asio/impl/read.hpp	/^inline std::size_t read(SyncReadStream& s, DynamicBuffer_v2 buffers,$/;"	f	namespace:asio	typeref:typename:std::size_t
read	asio/include/asio/impl/read.hpp	/^inline std::size_t read(SyncReadStream& s, const MutableBufferSequence& buffers,$/;"	f	namespace:asio	typeref:typename:std::size_t
read	asio/include/asio/impl/read.hpp	/^inline std::size_t read(SyncReadStream& s,$/;"	f	namespace:asio	typeref:typename:std::size_t
read	asio/include/asio/impl/read.hpp	/^std::size_t read(SyncReadStream& s, DynamicBuffer_v2 buffers,$/;"	f	namespace:asio	typeref:typename:std::size_t
read	asio/include/asio/impl/read.hpp	/^std::size_t read(SyncReadStream& s, const MutableBufferSequence& buffers,$/;"	f	namespace:asio	typeref:typename:std::size_t
read	asio/include/asio/impl/read.hpp	/^std::size_t read(SyncReadStream& s,$/;"	f	namespace:asio	typeref:typename:std::size_t
read	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^  void read()$/;"	f	class:server	typeref:typename:void	file:
read	asio/src/examples/cpp11/local/connect_pair.cpp	/^  void read()$/;"	f	class:uppercase_filter	typeref:typename:void	file:
read	asio/src/tests/unit/is_read_buffered.cpp	/^  size_t read(const Mutable_Buffers&)$/;"	f	class:test_stream	typeref:typename:size_t	file:
read	asio/src/tests/unit/is_read_buffered.cpp	/^  size_t read(const Mutable_Buffers&, asio::error_code& ec)$/;"	f	class:test_stream	typeref:typename:size_t	file:
read	asio/src/tests/unit/is_write_buffered.cpp	/^  size_t read(const Mutable_Buffers&)$/;"	f	class:test_stream	typeref:typename:size_t	file:
read	asio/src/tests/unit/is_write_buffered.cpp	/^  size_t read(const Mutable_Buffers&, asio::error_code& ec)$/;"	f	class:test_stream	typeref:typename:size_t	file:
read_allocator_	asio/src/tests/performance/client.cpp	/^  handler_allocator read_allocator_;$/;"	m	class:session	typeref:typename:handler_allocator	file:
read_allocator_	asio/src/tests/performance/server.cpp	/^  handler_allocator read_allocator_;$/;"	m	class:session	typeref:typename:handler_allocator	file:
read_at	asio/include/asio/impl/read_at.hpp	/^inline std::size_t read_at(SyncRandomAccessReadDevice& d,$/;"	f	namespace:asio	typeref:typename:std::size_t
read_at	asio/include/asio/impl/read_at.hpp	/^std::size_t read_at(SyncRandomAccessReadDevice& d,$/;"	f	namespace:asio	typeref:typename:std::size_t
read_at_buffer_sequence	asio/include/asio/impl/read_at.hpp	/^  std::size_t read_at_buffer_sequence(SyncRandomAccessReadDevice& d,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
read_at_op	asio/include/asio/impl/read_at.hpp	/^    read_at_op(AsyncRandomAccessReadDevice& device,$/;"	f	class:asio::detail::read_at_op
read_at_op	asio/include/asio/impl/read_at.hpp	/^    read_at_op(const read_at_op& other)$/;"	f	class:asio::detail::read_at_op
read_at_op	asio/include/asio/impl/read_at.hpp	/^    read_at_op(read_at_op&& other)$/;"	f	class:asio::detail::read_at_op
read_at_op	asio/include/asio/impl/read_at.hpp	/^  class read_at_op$/;"	c	namespace:asio::detail
read_at_streambuf_op	asio/include/asio/impl/read_at.hpp	/^    read_at_streambuf_op(AsyncRandomAccessReadDevice& device,$/;"	f	class:asio::detail::read_at_streambuf_op
read_at_streambuf_op	asio/include/asio/impl/read_at.hpp	/^    read_at_streambuf_op(const read_at_streambuf_op& other)$/;"	f	class:asio::detail::read_at_streambuf_op
read_at_streambuf_op	asio/include/asio/impl/read_at.hpp	/^    read_at_streambuf_op(read_at_streambuf_op&& other)$/;"	f	class:asio::detail::read_at_streambuf_op
read_at_streambuf_op	asio/include/asio/impl/read_at.hpp	/^  class read_at_streambuf_op$/;"	c	namespace:asio::detail
read_buffer	asio/src/examples/cpp03/services/daytime_client.cpp	/^char read_buffer[1024];$/;"	v	typeref:typename:char[1024]
read_buffer_sequence	asio/include/asio/impl/read.hpp	/^  std::size_t read_buffer_sequence(SyncReadStream& s,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
read_data	asio/src/tests/unit/read.cpp	/^static const char read_data[]$/;"	v	typeref:typename:const char[]	file:
read_data	asio/src/tests/unit/read_at.cpp	/^static const char read_data[]$/;"	v	typeref:typename:const char[]	file:
read_data	asio/src/tests/unit/read_until.cpp	/^static const char read_data[]$/;"	v	typeref:typename:const char[]	file:
read_data_	asio/src/tests/performance/client.cpp	/^  char* read_data_;$/;"	m	class:session	typeref:typename:char *	file:
read_data_	asio/src/tests/performance/server.cpp	/^  char* read_data_;$/;"	m	class:session	typeref:typename:char *	file:
read_data_length_	asio/src/tests/performance/client.cpp	/^  size_t read_data_length_;$/;"	m	class:session	typeref:typename:size_t	file:
read_data_length_	asio/src/tests/performance/server.cpp	/^  size_t read_data_length_;$/;"	m	class:session	typeref:typename:size_t	file:
read_descriptor	asio/include/asio/detail/eventfd_select_interrupter.hpp	/^  int read_descriptor() const$/;"	f	class:asio::detail::eventfd_select_interrupter	typeref:typename:int
read_descriptor	asio/include/asio/detail/pipe_select_interrupter.hpp	/^  int read_descriptor() const$/;"	f	class:asio::detail::pipe_select_interrupter	typeref:typename:int
read_descriptor	asio/include/asio/detail/socket_select_interrupter.hpp	/^  socket_type read_descriptor() const$/;"	f	class:asio::detail::socket_select_interrupter	typeref:typename:socket_type
read_descriptor_	asio/include/asio/detail/eventfd_select_interrupter.hpp	/^  int read_descriptor_;$/;"	m	class:asio::detail::eventfd_select_interrupter	typeref:typename:int
read_descriptor_	asio/include/asio/detail/pipe_select_interrupter.hpp	/^  int read_descriptor_;$/;"	m	class:asio::detail::pipe_select_interrupter	typeref:typename:int
read_descriptor_	asio/include/asio/detail/socket_select_interrupter.hpp	/^  socket_type read_descriptor_;$/;"	m	class:asio::detail::socket_select_interrupter	typeref:typename:socket_type
read_dynbuf_v1_op	asio/include/asio/impl/read.hpp	/^    read_dynbuf_v1_op(AsyncReadStream& stream,$/;"	f	class:asio::detail::read_dynbuf_v1_op
read_dynbuf_v1_op	asio/include/asio/impl/read.hpp	/^    read_dynbuf_v1_op(const read_dynbuf_v1_op& other)$/;"	f	class:asio::detail::read_dynbuf_v1_op
read_dynbuf_v1_op	asio/include/asio/impl/read.hpp	/^    read_dynbuf_v1_op(read_dynbuf_v1_op&& other)$/;"	f	class:asio::detail::read_dynbuf_v1_op
read_dynbuf_v1_op	asio/include/asio/impl/read.hpp	/^  class read_dynbuf_v1_op$/;"	c	namespace:asio::detail
read_dynbuf_v2_op	asio/include/asio/impl/read.hpp	/^    read_dynbuf_v2_op(AsyncReadStream& stream,$/;"	f	class:asio::detail::read_dynbuf_v2_op
read_dynbuf_v2_op	asio/include/asio/impl/read.hpp	/^    read_dynbuf_v2_op(const read_dynbuf_v2_op& other)$/;"	f	class:asio::detail::read_dynbuf_v2_op
read_dynbuf_v2_op	asio/include/asio/impl/read.hpp	/^    read_dynbuf_v2_op(read_dynbuf_v2_op&& other)$/;"	f	class:asio::detail::read_dynbuf_v2_op
read_dynbuf_v2_op	asio/include/asio/impl/read.hpp	/^  class read_dynbuf_v2_op$/;"	c	namespace:asio::detail
read_handler	asio/src/examples/cpp03/services/daytime_client.cpp	/^void read_handler(const asio::error_code& e,$/;"	f	typeref:typename:void
read_in_progress_	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  bool read_in_progress_;$/;"	m	class:connection	typeref:typename:bool	file:
read_in_progress_	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  bool read_in_progress_ = false;$/;"	m	class:connection	typeref:typename:bool	file:
read_line	asio/src/examples/cpp03/timeouts/blocking_tcp_client.cpp	/^  std::string read_line(asio::chrono::steady_clock::duration timeout)$/;"	f	class:client	typeref:typename:std::string	file:
read_line	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^  std::string read_line(std::chrono::steady_clock::duration timeout)$/;"	f	class:client	typeref:typename:std::string	file:
read_line	asio/src/examples/cpp11/timeouts/server.cpp	/^  void read_line()$/;"	f	class:tcp_session	typeref:typename:void	file:
read_msg_	asio/src/examples/cpp03/chat/chat_client.cpp	/^  chat_message read_msg_;$/;"	m	class:chat_client	typeref:typename:chat_message	file:
read_msg_	asio/src/examples/cpp03/chat/chat_server.cpp	/^  chat_message read_msg_;$/;"	m	class:chat_session	typeref:typename:chat_message	file:
read_msg_	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  chat_message read_msg_;$/;"	m	class:posix_chat_client	typeref:typename:chat_message	file:
read_msg_	asio/src/examples/cpp11/chat/chat_client.cpp	/^  chat_message read_msg_;$/;"	m	class:chat_client	typeref:typename:chat_message	file:
read_msg_	asio/src/examples/cpp11/chat/chat_server.cpp	/^  chat_message read_msg_;$/;"	m	class:chat_session	typeref:typename:chat_message	file:
read_op	asio/include/asio/detail/dev_poll_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1,$/;"	e	enum:asio::detail::dev_poll_reactor::op_types
read_op	asio/include/asio/detail/epoll_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1,$/;"	e	enum:asio::detail::epoll_reactor::op_types
read_op	asio/include/asio/detail/kqueue_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1,$/;"	e	enum:asio::detail::kqueue_reactor::op_types
read_op	asio/include/asio/detail/select_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1, except_op = 2,$/;"	e	enum:asio::detail::select_reactor::op_types
read_op	asio/include/asio/impl/read.hpp	/^    read_op(AsyncReadStream& stream, const MutableBufferSequence& buffers,$/;"	f	class:asio::detail::read_op
read_op	asio/include/asio/impl/read.hpp	/^    read_op(const read_op& other)$/;"	f	class:asio::detail::read_op
read_op	asio/include/asio/impl/read.hpp	/^    read_op(read_op&& other)$/;"	f	class:asio::detail::read_op
read_op	asio/include/asio/impl/read.hpp	/^  class read_op$/;"	c	namespace:asio::detail
read_op	asio/include/asio/ssl/detail/read_op.hpp	/^  read_op(const MutableBufferSequence& buffers)$/;"	f	class:asio::ssl::detail::read_op
read_op	asio/include/asio/ssl/detail/read_op.hpp	/^class read_op$/;"	c	namespace:asio::ssl::detail
read_size_helper	asio/include/asio/basic_streambuf.hpp	/^  friend std::size_t read_size_helper($/;"	f	namespace:asio	typeref:typename:std::size_t
read_some	asio/include/asio/basic_serial_port.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers)$/;"	f	class:asio::basic_serial_port	typeref:typename:std::size_t
read_some	asio/include/asio/basic_serial_port.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers,$/;"	f	class:asio::basic_serial_port	typeref:typename:std::size_t
read_some	asio/include/asio/basic_stream_socket.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers)$/;"	f	class:asio::basic_stream_socket	typeref:typename:std::size_t
read_some	asio/include/asio/basic_stream_socket.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers,$/;"	f	class:asio::basic_stream_socket	typeref:typename:std::size_t
read_some	asio/include/asio/buffered_stream.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers)$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
read_some	asio/include/asio/buffered_stream.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers,$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
read_some	asio/include/asio/buffered_write_stream.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers)$/;"	f	class:asio::buffered_write_stream	typeref:typename:std::size_t
read_some	asio/include/asio/buffered_write_stream.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers,$/;"	f	class:asio::buffered_write_stream	typeref:typename:std::size_t
read_some	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  size_t read_some(implementation_type& impl,$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:size_t
read_some	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  size_t read_some(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:size_t
read_some	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  size_t read_some(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_handle_service	typeref:typename:size_t
read_some	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  size_t read_some(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:size_t
read_some	asio/include/asio/impl/buffered_read_stream.hpp	/^std::size_t buffered_read_stream<Stream>::read_some($/;"	f	class:asio::buffered_read_stream	typeref:typename:std::size_t
read_some	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers)$/;"	f	class:asio::posix::basic_stream_descriptor	typeref:typename:std::size_t
read_some	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers,$/;"	f	class:asio::posix::basic_stream_descriptor	typeref:typename:std::size_t
read_some	asio/include/asio/ssl/stream.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers)$/;"	f	class:asio::ssl::stream	typeref:typename:std::size_t
read_some	asio/include/asio/ssl/stream.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers,$/;"	f	class:asio::ssl::stream	typeref:typename:std::size_t
read_some	asio/include/asio/windows/basic_stream_handle.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers)$/;"	f	class:asio::windows::basic_stream_handle	typeref:typename:std::size_t
read_some	asio/include/asio/windows/basic_stream_handle.hpp	/^  std::size_t read_some(const MutableBufferSequence& buffers,$/;"	f	class:asio::windows::basic_stream_handle	typeref:typename:std::size_t
read_some	asio/src/tests/unit/read.cpp	/^  size_t read_some(const Mutable_Buffers& buffers)$/;"	f	class:test_stream	typeref:typename:size_t	file:
read_some	asio/src/tests/unit/read.cpp	/^  size_t read_some(const Mutable_Buffers& buffers,$/;"	f	class:test_stream	typeref:typename:size_t	file:
read_some	asio/src/tests/unit/read_until.cpp	/^  size_t read_some(const Mutable_Buffers& buffers)$/;"	f	class:test_stream	typeref:typename:size_t	file:
read_some	asio/src/tests/unit/read_until.cpp	/^  size_t read_some(const Mutable_Buffers& buffers,$/;"	f	class:test_stream	typeref:typename:size_t	file:
read_some_at	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  size_t read_some_at(implementation_type& impl, uint64_t offset,$/;"	f	class:asio::detail::win_iocp_handle_service	typeref:typename:size_t
read_some_at	asio/include/asio/windows/basic_random_access_handle.hpp	/^  std::size_t read_some_at(uint64_t offset,$/;"	f	class:asio::windows::basic_random_access_handle	typeref:typename:std::size_t
read_some_at	asio/src/tests/unit/read_at.cpp	/^  size_t read_some_at(asio::uint64_t offset,$/;"	f	class:test_random_access_device	typeref:typename:size_t	file:
read_some_handler	asio/src/tests/unit/buffered_read_stream.cpp	/^void read_some_handler(const asio::error_code&, std::size_t)$/;"	f	typeref:typename:void
read_some_handler	asio/src/tests/unit/buffered_stream.cpp	/^void read_some_handler(const asio::error_code&, std::size_t)$/;"	f	typeref:typename:void
read_some_handler	asio/src/tests/unit/buffered_write_stream.cpp	/^void read_some_handler(const asio::error_code&, std::size_t)$/;"	f	typeref:typename:void
read_some_handler	asio/src/tests/unit/generic/stream_protocol.cpp	/^void read_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:generic_stream_protocol_socket_compile	typeref:typename:void
read_some_handler	asio/src/tests/unit/ip/tcp.cpp	/^  read_some_handler() {}$/;"	f	struct:ip_tcp_socket_compile::read_some_handler	file:
read_some_handler	asio/src/tests/unit/ip/tcp.cpp	/^  read_some_handler(read_some_handler&&) {}$/;"	f	struct:ip_tcp_socket_compile::read_some_handler	file:
read_some_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct read_some_handler$/;"	s	namespace:ip_tcp_socket_compile	file:
read_some_handler	asio/src/tests/unit/local/stream_protocol.cpp	/^void read_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:local_stream_protocol_socket_compile	typeref:typename:void
read_some_handler	asio/src/tests/unit/posix/stream_descriptor.cpp	/^void read_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:posix_stream_descriptor_compile	typeref:typename:void
read_some_handler	asio/src/tests/unit/serial_port.cpp	/^  read_some_handler() {}$/;"	f	struct:serial_port_compile::read_some_handler	file:
read_some_handler	asio/src/tests/unit/serial_port.cpp	/^  read_some_handler(read_some_handler&&) {}$/;"	f	struct:serial_port_compile::read_some_handler	file:
read_some_handler	asio/src/tests/unit/serial_port.cpp	/^struct read_some_handler$/;"	s	namespace:serial_port_compile	file:
read_some_handler	asio/src/tests/unit/ssl/stream.cpp	/^void read_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:ssl_stream_compile	typeref:typename:void
read_some_handler	asio/src/tests/unit/windows/random_access_handle.cpp	/^void read_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:windows_random_access_handle_compile	typeref:typename:void
read_some_handler	asio/src/tests/unit/windows/stream_handle.cpp	/^void read_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:windows_stream_handle_compile	typeref:typename:void
read_stream_type	asio/include/asio/buffered_stream.hpp	/^  typedef buffered_read_stream<write_stream_type&> read_stream_type;$/;"	t	class:asio::buffered_stream	typeref:typename:buffered_read_stream<write_stream_type &>
read_until	asio/include/asio/impl/read_until.hpp	/^inline std::size_t read_until(SyncReadStream& s,$/;"	f	namespace:asio	typeref:typename:std::size_t
read_until	asio/include/asio/impl/read_until.hpp	/^std::size_t read_until(SyncReadStream& s, DynamicBuffer_v2 buffers,$/;"	f	namespace:asio	typeref:typename:std::size_t
read_until	asio/include/asio/impl/read_until.hpp	/^std::size_t read_until(SyncReadStream& s,$/;"	f	namespace:asio	typeref:typename:std::size_t
read_until_delim_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_op_v1(AsyncReadStream& stream,$/;"	f	class:asio::detail::read_until_delim_op_v1
read_until_delim_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_op_v1(const read_until_delim_op_v1& other)$/;"	f	class:asio::detail::read_until_delim_op_v1
read_until_delim_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_op_v1(read_until_delim_op_v1&& other)$/;"	f	class:asio::detail::read_until_delim_op_v1
read_until_delim_op_v1	asio/include/asio/impl/read_until.hpp	/^  class read_until_delim_op_v1$/;"	c	namespace:asio::detail
read_until_delim_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_op_v2(AsyncReadStream& stream,$/;"	f	class:asio::detail::read_until_delim_op_v2
read_until_delim_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_op_v2(const read_until_delim_op_v2& other)$/;"	f	class:asio::detail::read_until_delim_op_v2
read_until_delim_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_op_v2(read_until_delim_op_v2&& other)$/;"	f	class:asio::detail::read_until_delim_op_v2
read_until_delim_op_v2	asio/include/asio/impl/read_until.hpp	/^  class read_until_delim_op_v2$/;"	c	namespace:asio::detail
read_until_delim_string_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_string_op_v1(AsyncReadStream& stream,$/;"	f	class:asio::detail::read_until_delim_string_op_v1
read_until_delim_string_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_string_op_v1(const read_until_delim_string_op_v1& other)$/;"	f	class:asio::detail::read_until_delim_string_op_v1
read_until_delim_string_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_string_op_v1(read_until_delim_string_op_v1&& other)$/;"	f	class:asio::detail::read_until_delim_string_op_v1
read_until_delim_string_op_v1	asio/include/asio/impl/read_until.hpp	/^  class read_until_delim_string_op_v1$/;"	c	namespace:asio::detail
read_until_delim_string_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_string_op_v2(AsyncReadStream& stream,$/;"	f	class:asio::detail::read_until_delim_string_op_v2
read_until_delim_string_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_string_op_v2(const read_until_delim_string_op_v2& other)$/;"	f	class:asio::detail::read_until_delim_string_op_v2
read_until_delim_string_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_delim_string_op_v2(read_until_delim_string_op_v2&& other)$/;"	f	class:asio::detail::read_until_delim_string_op_v2
read_until_delim_string_op_v2	asio/include/asio/impl/read_until.hpp	/^  class read_until_delim_string_op_v2$/;"	c	namespace:asio::detail
read_until_expr_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_expr_op_v1(AsyncReadStream& stream,$/;"	f	class:asio::detail::read_until_expr_op_v1
read_until_expr_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_expr_op_v1(const read_until_expr_op_v1& other)$/;"	f	class:asio::detail::read_until_expr_op_v1
read_until_expr_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_expr_op_v1(read_until_expr_op_v1&& other)$/;"	f	class:asio::detail::read_until_expr_op_v1
read_until_expr_op_v1	asio/include/asio/impl/read_until.hpp	/^  class read_until_expr_op_v1$/;"	c	namespace:asio::detail
read_until_expr_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_expr_op_v2(AsyncReadStream& stream,$/;"	f	class:asio::detail::read_until_expr_op_v2
read_until_expr_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_expr_op_v2(const read_until_expr_op_v2& other)$/;"	f	class:asio::detail::read_until_expr_op_v2
read_until_expr_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_expr_op_v2(read_until_expr_op_v2&& other)$/;"	f	class:asio::detail::read_until_expr_op_v2
read_until_expr_op_v2	asio/include/asio/impl/read_until.hpp	/^  class read_until_expr_op_v2$/;"	c	namespace:asio::detail
read_until_match_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_match_op_v1(AsyncReadStream& stream,$/;"	f	class:asio::detail::read_until_match_op_v1
read_until_match_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_match_op_v1(const read_until_match_op_v1& other)$/;"	f	class:asio::detail::read_until_match_op_v1
read_until_match_op_v1	asio/include/asio/impl/read_until.hpp	/^    read_until_match_op_v1(read_until_match_op_v1&& other)$/;"	f	class:asio::detail::read_until_match_op_v1
read_until_match_op_v1	asio/include/asio/impl/read_until.hpp	/^  class read_until_match_op_v1$/;"	c	namespace:asio::detail
read_until_match_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_match_op_v2(AsyncReadStream& stream,$/;"	f	class:asio::detail::read_until_match_op_v2
read_until_match_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_match_op_v2(const read_until_match_op_v2& other)$/;"	f	class:asio::detail::read_until_match_op_v2
read_until_match_op_v2	asio/include/asio/impl/read_until.hpp	/^    read_until_match_op_v2(read_until_match_op_v2&& other)$/;"	f	class:asio::detail::read_until_match_op_v2
read_until_match_op_v2	asio/include/asio/impl/read_until.hpp	/^  class read_until_match_op_v2$/;"	c	namespace:asio::detail
reader	asio/src/examples/cpp11/executors/pipeline.cpp	/^void reader(queue_front<std::string> out)$/;"	f	typeref:typename:void
reader	asio/src/examples/cpp14/executors/pipeline.cpp	/^void reader(queue_front<std::string> out)$/;"	f	typeref:typename:void
reader	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  awaitable<void> reader()$/;"	f	class:chat_session	typeref:typename:awaitable<void>	file:
reading	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  enum { reading, writing } state_;$/;"	e	enum:third_party_lib::session::__anon5335a9ae0103	file:
reading	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  enum { reading, writing } state_ = reading;$/;"	e	enum:third_party_lib::session::__anon68f665cd0103	file:
ready_	asio/include/asio/detail/win_iocp_operation.hpp	/^  long ready_;$/;"	m	class:asio::detail::win_iocp_operation	typeref:typename:long
ready_	asio/include/asio/impl/spawn.hpp	/^    atomic_count ready_;$/;"	m	class:asio::detail::coro_async_result	typeref:typename:atomic_count
ready_	asio/include/asio/impl/spawn.hpp	/^    atomic_count* ready_;$/;"	m	class:asio::detail::coro_handler	typeref:typename:atomic_count *
ready_queue_	asio/include/asio/detail/strand_executor_service.hpp	/^    op_queue<scheduler_operation> ready_queue_;$/;"	m	class:asio::detail::strand_executor_service::strand_impl	typeref:typename:op_queue<scheduler_operation>
ready_queue_	asio/include/asio/detail/strand_service.hpp	/^    op_queue<operation> ready_queue_;$/;"	m	class:asio::detail::strand_service::strand_impl	typeref:typename:op_queue<operation>
rebind	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  struct rebind$/;"	s	class:asio::detail::hook_allocator
rebind	asio/include/asio/detail/recycling_allocator.hpp	/^  struct rebind$/;"	s	class:asio::detail::recycling_allocator
rebind	asio/include/asio/use_future.hpp	/^  use_future_t<OtherAllocator> rebind(const OtherAllocator& allocator) const$/;"	f	class:asio::use_future_t	typeref:typename:use_future_t<OtherAllocator>
rebind	asio/src/examples/cpp03/allocation/server.cpp	/^  struct rebind$/;"	s	class:handler_allocator	file:
rebind_executor	asio/include/asio/basic_datagram_socket.hpp	/^  struct rebind_executor$/;"	s	class:asio::basic_datagram_socket
rebind_executor	asio/include/asio/basic_deadline_timer.hpp	/^  struct rebind_executor$/;"	s	class:asio::basic_deadline_timer
rebind_executor	asio/include/asio/basic_raw_socket.hpp	/^  struct rebind_executor$/;"	s	class:asio::basic_raw_socket
rebind_executor	asio/include/asio/basic_seq_packet_socket.hpp	/^  struct rebind_executor$/;"	s	class:asio::basic_seq_packet_socket
rebind_executor	asio/include/asio/basic_serial_port.hpp	/^  struct rebind_executor$/;"	s	class:asio::basic_serial_port
rebind_executor	asio/include/asio/basic_signal_set.hpp	/^  struct rebind_executor$/;"	s	class:asio::basic_signal_set
rebind_executor	asio/include/asio/basic_socket.hpp	/^  struct rebind_executor$/;"	s	class:asio::basic_socket
rebind_executor	asio/include/asio/basic_socket_acceptor.hpp	/^  struct rebind_executor$/;"	s	class:asio::basic_socket_acceptor
rebind_executor	asio/include/asio/basic_stream_socket.hpp	/^  struct rebind_executor$/;"	s	class:asio::basic_stream_socket
rebind_executor	asio/include/asio/basic_waitable_timer.hpp	/^  struct rebind_executor$/;"	s	class:asio::basic_waitable_timer
rebind_executor	asio/include/asio/ip/basic_resolver.hpp	/^  struct rebind_executor$/;"	s	class:asio::ip::basic_resolver
rebind_executor	asio/include/asio/posix/basic_descriptor.hpp	/^  struct rebind_executor$/;"	s	class:asio::posix::basic_descriptor
rebind_executor	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  struct rebind_executor$/;"	s	class:asio::posix::basic_stream_descriptor
rebind_executor	asio/include/asio/windows/basic_object_handle.hpp	/^  struct rebind_executor$/;"	s	class:asio::windows::basic_object_handle
rebind_executor	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  struct rebind_executor$/;"	s	class:asio::windows::basic_overlapped_handle
rebind_executor	asio/include/asio/windows/basic_random_access_handle.hpp	/^  struct rebind_executor$/;"	s	class:asio::windows::basic_random_access_handle
rebind_executor	asio/include/asio/windows/basic_stream_handle.hpp	/^  struct rebind_executor$/;"	s	class:asio::windows::basic_stream_handle
receive	asio/include/asio/basic_datagram_socket.hpp	/^  std::size_t receive(const MutableBufferSequence& buffers)$/;"	f	class:asio::basic_datagram_socket	typeref:typename:std::size_t
receive	asio/include/asio/basic_datagram_socket.hpp	/^  std::size_t receive(const MutableBufferSequence& buffers,$/;"	f	class:asio::basic_datagram_socket	typeref:typename:std::size_t
receive	asio/include/asio/basic_raw_socket.hpp	/^  std::size_t receive(const MutableBufferSequence& buffers)$/;"	f	class:asio::basic_raw_socket	typeref:typename:std::size_t
receive	asio/include/asio/basic_raw_socket.hpp	/^  std::size_t receive(const MutableBufferSequence& buffers,$/;"	f	class:asio::basic_raw_socket	typeref:typename:std::size_t
receive	asio/include/asio/basic_seq_packet_socket.hpp	/^  std::size_t receive(const MutableBufferSequence& buffers,$/;"	f	class:asio::basic_seq_packet_socket	typeref:typename:std::size_t
receive	asio/include/asio/basic_stream_socket.hpp	/^  std::size_t receive(const MutableBufferSequence& buffers)$/;"	f	class:asio::basic_stream_socket	typeref:typename:std::size_t
receive	asio/include/asio/basic_stream_socket.hpp	/^  std::size_t receive(const MutableBufferSequence& buffers,$/;"	f	class:asio::basic_stream_socket	typeref:typename:std::size_t
receive	asio/include/asio/detail/null_socket_service.hpp	/^  std::size_t receive(implementation_type&, const MutableBufferSequence&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:std::size_t
receive	asio/include/asio/detail/null_socket_service.hpp	/^  std::size_t receive(implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:std::size_t
receive	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  size_t receive(base_implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:size_t
receive	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  size_t receive(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:size_t
receive	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  size_t receive(base_implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:size_t
receive	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  size_t receive(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:size_t
receive	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  std::size_t receive(base_implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:std::size_t
receive	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  std::size_t receive(base_implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:std::size_t
receive	asio/src/examples/cpp03/timeouts/blocking_udp_client.cpp	/^  std::size_t receive(const asio::mutable_buffer& buffer,$/;"	f	class:client	typeref:typename:std::size_t	file:
receive	asio/src/examples/cpp11/fork/daemon.cpp	/^  void receive()$/;"	f	class:udp_daytime_server	typeref:typename:void	file:
receive	asio/src/examples/cpp11/timeouts/blocking_udp_client.cpp	/^  std::size_t receive(const asio::mutable_buffer& buffer,$/;"	f	class:client	typeref:typename:std::size_t	file:
receive_buffer_size	asio/include/asio/socket_base.hpp	/^      receive_buffer_size;$/;"	t	class:asio::socket_base
receive_buffer_size	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined receive_buffer_size;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
receive_from	asio/include/asio/basic_datagram_socket.hpp	/^  std::size_t receive_from(const MutableBufferSequence& buffers,$/;"	f	class:asio::basic_datagram_socket	typeref:typename:std::size_t
receive_from	asio/include/asio/basic_raw_socket.hpp	/^  std::size_t receive_from(const MutableBufferSequence& buffers,$/;"	f	class:asio::basic_raw_socket	typeref:typename:std::size_t
receive_from	asio/include/asio/detail/null_socket_service.hpp	/^  std::size_t receive_from(implementation_type&, const MutableBufferSequence&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:std::size_t
receive_from	asio/include/asio/detail/null_socket_service.hpp	/^  std::size_t receive_from(implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:std::size_t
receive_from	asio/include/asio/detail/reactive_socket_service.hpp	/^  size_t receive_from(implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:size_t
receive_from	asio/include/asio/detail/reactive_socket_service.hpp	/^  size_t receive_from(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:size_t
receive_from	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  size_t receive_from(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:size_t
receive_handler	asio/src/tests/unit/generic/datagram_protocol.cpp	/^void receive_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:generic_datagram_protocol_socket_compile	typeref:typename:void
receive_handler	asio/src/tests/unit/generic/raw_protocol.cpp	/^void receive_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:generic_raw_protocol_socket_compile	typeref:typename:void
receive_handler	asio/src/tests/unit/generic/seq_packet_protocol.cpp	/^void receive_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:generic_seq_packet_protocol_socket_compile	typeref:typename:void
receive_handler	asio/src/tests/unit/generic/stream_protocol.cpp	/^void receive_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:generic_stream_protocol_socket_compile	typeref:typename:void
receive_handler	asio/src/tests/unit/ip/icmp.cpp	/^  receive_handler() {}$/;"	f	struct:ip_icmp_socket_compile::receive_handler	file:
receive_handler	asio/src/tests/unit/ip/icmp.cpp	/^  receive_handler(receive_handler&&) {}$/;"	f	struct:ip_icmp_socket_compile::receive_handler	file:
receive_handler	asio/src/tests/unit/ip/icmp.cpp	/^struct receive_handler$/;"	s	namespace:ip_icmp_socket_compile	file:
receive_handler	asio/src/tests/unit/ip/tcp.cpp	/^  receive_handler() {}$/;"	f	struct:ip_tcp_socket_compile::receive_handler	file:
receive_handler	asio/src/tests/unit/ip/tcp.cpp	/^  receive_handler(receive_handler&&) {}$/;"	f	struct:ip_tcp_socket_compile::receive_handler	file:
receive_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct receive_handler$/;"	s	namespace:ip_tcp_socket_compile	file:
receive_handler	asio/src/tests/unit/ip/udp.cpp	/^  receive_handler() {}$/;"	f	struct:ip_udp_socket_compile::receive_handler	file:
receive_handler	asio/src/tests/unit/ip/udp.cpp	/^  receive_handler(receive_handler&&) {}$/;"	f	struct:ip_udp_socket_compile::receive_handler	file:
receive_handler	asio/src/tests/unit/ip/udp.cpp	/^struct receive_handler$/;"	s	namespace:ip_udp_socket_compile	file:
receive_handler	asio/src/tests/unit/local/datagram_protocol.cpp	/^void receive_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:local_datagram_protocol_socket_compile	typeref:typename:void
receive_handler	asio/src/tests/unit/local/stream_protocol.cpp	/^void receive_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:local_stream_protocol_socket_compile	typeref:typename:void
receive_low_watermark	asio/include/asio/socket_base.hpp	/^      receive_low_watermark;$/;"	t	class:asio::socket_base
receive_low_watermark	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined receive_low_watermark;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
receive_response	asio/src/examples/cpp11/ssl/client.cpp	/^  void receive_response(std::size_t length)$/;"	f	class:client	typeref:typename:void	file:
receive_with_flags	asio/include/asio/detail/null_socket_service.hpp	/^  std::size_t receive_with_flags(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:std::size_t
receive_with_flags	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  size_t receive_with_flags(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:size_t
receive_with_flags	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  size_t receive_with_flags(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:size_t
receiver	asio/src/examples/cpp03/multicast/receiver.cpp	/^  receiver(asio::io_context& io_context,$/;"	f	class:receiver	file:
receiver	asio/src/examples/cpp03/multicast/receiver.cpp	/^class receiver$/;"	c	file:
receiver	asio/src/examples/cpp11/executors/actor.cpp	/^  receiver()$/;"	f	class:receiver	file:
receiver	asio/src/examples/cpp11/executors/actor.cpp	/^class receiver : public actor$/;"	c	file:
receiver	asio/src/examples/cpp11/multicast/receiver.cpp	/^  receiver(asio::io_context& io_context,$/;"	f	class:receiver	file:
receiver	asio/src/examples/cpp11/multicast/receiver.cpp	/^class receiver$/;"	c	file:
receiver	asio/src/examples/cpp14/executors/actor.cpp	/^  receiver()$/;"	f	class:receiver	file:
receiver	asio/src/examples/cpp14/executors/actor.cpp	/^class receiver : public actor$/;"	c	file:
recent_msgs_	asio/src/examples/cpp03/chat/chat_server.cpp	/^  chat_message_queue recent_msgs_;$/;"	m	class:chat_room	typeref:typename:chat_message_queue	file:
recent_msgs_	asio/src/examples/cpp11/chat/chat_server.cpp	/^  chat_message_queue recent_msgs_;$/;"	m	class:chat_room	typeref:typename:chat_message_queue	file:
recent_msgs_	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  std::deque<std::string> recent_msgs_;$/;"	m	class:chat_room	typeref:typename:std::deque<std::string>	file:
recv_buffer_	asio/src/examples/cpp03/fork/daemon.cpp	/^  boost::array<char, 1> recv_buffer_;$/;"	m	class:udp_daytime_server	typeref:typename:boost::array<char,1>	file:
recv_buffer_	asio/src/examples/cpp03/tutorial/daytime6/server.cpp	/^  boost::array<char, 1> recv_buffer_;$/;"	m	class:udp_server	typeref:typename:boost::array<char,1>	file:
recv_buffer_	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  boost::array<char, 1> recv_buffer_;$/;"	m	class:udp_server	typeref:typename:boost::array<char,1>	file:
recv_buffer_	asio/src/examples/cpp11/fork/daemon.cpp	/^  std::array<char, 1> recv_buffer_;$/;"	m	class:udp_daytime_server	typeref:typename:std::array<char,1>	file:
recycling_allocator	asio/include/asio/detail/recycling_allocator.hpp	/^  recycling_allocator()$/;"	f	class:asio::detail::recycling_allocator
recycling_allocator	asio/include/asio/detail/recycling_allocator.hpp	/^  recycling_allocator(const recycling_allocator<U, Purpose>&)$/;"	f	class:asio::detail::recycling_allocator
recycling_allocator	asio/include/asio/detail/recycling_allocator.hpp	/^class recycling_allocator$/;"	c	namespace:asio::detail
recycling_allocator	asio/include/asio/detail/recycling_allocator.hpp	/^class recycling_allocator<void, Purpose>$/;"	c	namespace:asio::detail
redirect	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^    redirect = 5, echo_request = 8, time_exceeded = 11, parameter_problem = 12,$/;"	e	enum:icmp_header::__anon3193b0390103
redirect_error	asio/include/asio/redirect_error.hpp	/^inline redirect_error_t<typename decay<CompletionToken>::type> redirect_error($/;"	f	namespace:asio	typeref:typename:redirect_error_t<typename decay<CompletionToken>::type>
redirect_error_handler	asio/include/asio/impl/redirect_error.hpp	/^  redirect_error_handler(asio::error_code& ec,$/;"	f	class:asio::detail::redirect_error_handler
redirect_error_handler	asio/include/asio/impl/redirect_error.hpp	/^  redirect_error_handler(redirect_error_t<CompletionToken> e)$/;"	f	class:asio::detail::redirect_error_handler
redirect_error_handler	asio/include/asio/impl/redirect_error.hpp	/^class redirect_error_handler$/;"	c	namespace:asio::detail
redirect_error_signature	asio/include/asio/impl/redirect_error.hpp	/^struct redirect_error_signature$/;"	s	namespace:asio::detail
redirect_error_signature	asio/include/asio/impl/redirect_error.hpp	/^struct redirect_error_signature<R(asio::error_code)>$/;"	s	namespace:asio::detail
redirect_error_signature	asio/include/asio/impl/redirect_error.hpp	/^struct redirect_error_signature<R(asio::error_code, Args...)>$/;"	s	namespace:asio::detail
redirect_error_signature	asio/include/asio/impl/redirect_error.hpp	/^struct redirect_error_signature<R(const asio::error_code&)>$/;"	s	namespace:asio::detail
redirect_error_signature	asio/include/asio/impl/redirect_error.hpp	/^struct redirect_error_signature<R(const asio::error_code&, Args...)>$/;"	s	namespace:asio::detail
redirect_error_t	asio/include/asio/redirect_error.hpp	/^  redirect_error_t(ASIO_MOVE_ARG(T) completion_token,$/;"	f	class:asio::redirect_error_t
redirect_error_t	asio/include/asio/redirect_error.hpp	/^class redirect_error_t$/;"	c	namespace:asio
reenter	asio/include/asio/yield.hpp	/^# define reenter(/;"	d
ref	asio/src/tests/latency/tcp_server.cpp	/^    explicit ref(tcp_server* p)$/;"	f	struct:tcp_server::ref	file:
ref	asio/src/tests/latency/tcp_server.cpp	/^  struct ref$/;"	s	class:tcp_server	file:
ref	asio/src/tests/latency/udp_server.cpp	/^    explicit ref(udp_server* p)$/;"	f	struct:udp_server::ref	file:
ref	asio/src/tests/latency/udp_server.cpp	/^  struct ref$/;"	s	class:udp_server	file:
ref-id	asio/src/doc/reference.xsl	/^      <xsl:variable name="ref-id">$/;"	v	matchedTemplate:ref[@kindref='compound']
ref-id	asio/src/doc/reference.xsl	/^      <xsl:variable name="ref-id">$/;"	v	matchedTemplate:ref[@kindref='member']
ref-id	asio/src/doc/tutorial.xsl	/^      <xsl:variable name="ref-id">$/;"	v	matchedTemplate:ref[@kindref='compound']
ref-name	asio/src/doc/reference.xsl	/^      <xsl:variable name="ref-name">$/;"	v	matchedTemplate:ref[@kindref='compound']
ref-name	asio/src/doc/reference.xsl	/^      <xsl:variable name="ref-name">$/;"	v	matchedTemplate:ref[@kindref='member']
ref-name	asio/src/doc/tutorial.xsl	/^      <xsl:variable name="ref-name">$/;"	v	matchedTemplate:ref[@kindref='compound']
ref[@kindref='compound']	asio/src/doc/reference.xsl	/^<xsl:template match="ref[@kindref='compound']" mode="markup">$/;"	m
ref[@kindref='compound']	asio/src/doc/reference.xsl	/^<xsl:template match="ref[@kindref='compound']" mode="markup-nested">$/;"	m
ref[@kindref='compound']	asio/src/doc/tutorial.xsl	/^<xsl:template match="ref[@kindref='compound']">$/;"	m
ref[@kindref='member']	asio/src/doc/reference.xsl	/^<xsl:template match="ref[@kindref='member']" mode="markup">$/;"	m
ref[@kindref='member']	asio/src/doc/reference.xsl	/^<xsl:template match="ref[@kindref='member']" mode="markup-nested">$/;"	m
ref[@kindref='member']	asio/src/doc/tutorial.xsl	/^<xsl:template match="ref[@kindref='member']">$/;"	m
ref_	asio/include/asio/ssl/detail/openssl_init.hpp	/^  asio::detail::shared_ptr<do_init> ref_;$/;"	m	class:asio::ssl::detail::openssl_init	typeref:typename:asio::detail::shared_ptr<do_init>
ref_count_	asio/include/asio/impl/executor.hpp	/^  mutable detail::atomic_count ref_count_;$/;"	m	class:asio::executor::impl	typeref:typename:detail::atomic_count
reference	asio/include/asio/buffers_iterator.hpp	/^      BufferSequence, ByteType>::byte_type& reference;$/;"	t	class:asio::buffers_iterator	typeref:typename:detail::buffers_iterator_types<BufferSequence,ByteType>::byte_type &
reference	asio/include/asio/buffers_iterator.hpp	/^  typedef const_or_non_const_ByteType& reference;$/;"	t	class:asio::buffers_iterator	typeref:typename:const_or_non_const_ByteType &
reference	asio/include/asio/ip/address_v4_iterator.hpp	/^  typedef const address_v4& reference;$/;"	t	class:asio::ip::basic_address_iterator	typeref:typename:const address_v4 &
reference	asio/include/asio/ip/address_v6_iterator.hpp	/^  typedef const address_v6& reference;$/;"	t	class:asio::ip::basic_address_iterator	typeref:typename:const address_v6 &
reference	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  typedef const basic_resolver_entry<InternetProtocol>& reference;$/;"	t	class:asio::ip::basic_resolver_iterator	typeref:typename:const basic_resolver_entry<InternetProtocol> &
reference	asio/include/asio/ip/basic_resolver_results.hpp	/^  typedef value_type& reference;$/;"	t	class:asio::ip::basic_resolver_results	typeref:typename:value_type &
refid	asio/src/doc/tutorial.xsl	/^  <xsl:variable name="refid">$/;"	v	matchedTemplate:ref[@kindref='compound']
refid	asio/src/doc/tutorial.xsl	/^  <xsl:variable name="refid">$/;"	v	matchedTemplate:ref[@kindref='member']
refid-to-anchor	asio/src/doc/tutorial.xsl	/^<xsl:template name="refid-to-anchor">$/;"	n
register_handler	asio/src/examples/cpp11/executors/actor.cpp	/^  void register_handler(void (Actor::* mf)(Message, actor_address))$/;"	f	class:actor	typeref:typename:void	file:
register_handler	asio/src/examples/cpp14/executors/actor.cpp	/^  void register_handler(void (Actor::* mf)(Message, actor_address))$/;"	f	class:actor	typeref:typename:void	file:
registered_descriptors_	asio/include/asio/detail/epoll_reactor.hpp	/^  object_pool<descriptor_state> registered_descriptors_;$/;"	m	class:asio::detail::epoll_reactor	typeref:typename:object_pool<descriptor_state>
registered_descriptors_	asio/include/asio/detail/kqueue_reactor.hpp	/^  object_pool<descriptor_state> registered_descriptors_;$/;"	m	class:asio::detail::kqueue_reactor	typeref:typename:object_pool<descriptor_state>
registered_descriptors_mutex_	asio/include/asio/detail/epoll_reactor.hpp	/^  mutex registered_descriptors_mutex_;$/;"	m	class:asio::detail::epoll_reactor	typeref:typename:mutex
registered_descriptors_mutex_	asio/include/asio/detail/kqueue_reactor.hpp	/^  mutex registered_descriptors_mutex_;$/;"	m	class:asio::detail::kqueue_reactor	typeref:typename:mutex
registered_events_	asio/include/asio/detail/epoll_reactor.hpp	/^    uint32_t registered_events_;$/;"	m	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:uint32_t
registration	asio/include/asio/detail/signal_set_service.hpp	/^    registration()$/;"	f	class:asio::detail::signal_set_service::registration
registration	asio/include/asio/detail/signal_set_service.hpp	/^  class registration$/;"	c	class:asio::detail::signal_set_service
registrations_	asio/include/asio/detail/signal_set_service.hpp	/^  registration* registrations_[max_signal_number];$/;"	m	class:asio::detail::signal_set_service	typeref:typename:registration * []
rehash	asio/include/asio/detail/hash_map.hpp	/^  void rehash(std::size_t num_buckets)$/;"	f	class:asio::detail::hash_map	typeref:typename:void
release	asio/include/asio/basic_socket.hpp	/^  native_handle_type release()$/;"	f	class:asio::basic_socket	typeref:typename:(deprecated ("This function always fails with ""operation_not_supported when used on Windows versions ""prior to Windows 8.1."))native_handle_type
release	asio/include/asio/basic_socket.hpp	/^  native_handle_type release(asio::error_code& ec)$/;"	f	class:asio::basic_socket	typeref:typename:(deprecated ("This function always fails with ""operation_not_supported when used on Windows versions ""prior to Windows 8.1."))native_handle_type
release	asio/include/asio/basic_socket_acceptor.hpp	/^  native_handle_type release()$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:(deprecated ("This function always fails with ""operation_not_supported when used on Windows versions ""prior to Windows 8.1."))native_handle_type
release	asio/include/asio/basic_socket_acceptor.hpp	/^  native_handle_type release(asio::error_code& ec)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:(deprecated ("This function always fails with ""operation_not_supported when used on Windows versions ""prior to Windows 8.1."))native_handle_type
release	asio/include/asio/detail/null_socket_service.hpp	/^  native_handle_type release(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:native_handle_type
release	asio/include/asio/detail/scoped_ptr.hpp	/^  T* release()$/;"	f	class:asio::detail::scoped_ptr	typeref:typename:T *
release	asio/include/asio/detail/socket_holder.hpp	/^  socket_type release()$/;"	f	class:asio::detail::socket_holder	typeref:typename:socket_type
release	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  OVERLAPPED* release()$/;"	f	class:asio::detail::win_iocp_overlapped_ptr	typeref:typename:OVERLAPPED *
release	asio/include/asio/posix/basic_descriptor.hpp	/^  native_handle_type release()$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:native_handle_type
release	asio/include/asio/windows/overlapped_ptr.hpp	/^  OVERLAPPED* release()$/;"	f	class:asio::windows::overlapped_ptr	typeref:typename:OVERLAPPED *
remote_endpoint	asio/include/asio/basic_socket.hpp	/^  endpoint_type remote_endpoint() const$/;"	f	class:asio::basic_socket	typeref:typename:endpoint_type
remote_endpoint	asio/include/asio/basic_socket.hpp	/^  endpoint_type remote_endpoint(asio::error_code& ec) const$/;"	f	class:asio::basic_socket	typeref:typename:endpoint_type
remote_endpoint	asio/include/asio/detail/null_socket_service.hpp	/^  endpoint_type remote_endpoint(const implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:endpoint_type
remote_endpoint	asio/include/asio/detail/reactive_socket_service.hpp	/^  endpoint_type remote_endpoint(const implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:endpoint_type
remote_endpoint	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    endpoint_type remote_endpoint() const$/;"	f	class:asio::detail::win_iocp_socket_service::native_handle_type	typeref:typename:endpoint_type
remote_endpoint	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  endpoint_type remote_endpoint(const implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:endpoint_type
remote_endpoint	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  endpoint_type remote_endpoint(const implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:endpoint_type
remote_endpoint_	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    endpoint_type remote_endpoint_;$/;"	m	class:asio::detail::win_iocp_socket_service::native_handle_type	typeref:typename:endpoint_type
remote_endpoint_	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    endpoint_type remote_endpoint_;$/;"	m	struct:asio::detail::win_iocp_socket_service::implementation_type	typeref:typename:endpoint_type
remote_endpoint_	asio/src/examples/cpp03/fork/daemon.cpp	/^  udp::endpoint remote_endpoint_;$/;"	m	class:udp_daytime_server	typeref:typename:udp::endpoint	file:
remote_endpoint_	asio/src/examples/cpp03/tutorial/daytime6/server.cpp	/^  udp::endpoint remote_endpoint_;$/;"	m	class:udp_server	typeref:typename:udp::endpoint	file:
remote_endpoint_	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  udp::endpoint remote_endpoint_;$/;"	m	class:udp_server	typeref:typename:udp::endpoint	file:
remote_endpoint_	asio/src/examples/cpp11/fork/daemon.cpp	/^  udp::endpoint remote_endpoint_;$/;"	m	class:udp_daytime_server	typeref:typename:udp::endpoint	file:
remove	asio/include/asio/basic_signal_set.hpp	/^  ASIO_SYNC_OP_VOID remove(int signal_number,$/;"	f	class:asio::basic_signal_set	typeref:typename:ASIO_SYNC_OP_VOID
remove	asio/include/asio/basic_signal_set.hpp	/^  void remove(int signal_number)$/;"	f	class:asio::basic_signal_set	typeref:typename:void
remove_timer	asio/include/asio/detail/timer_queue.hpp	/^  void remove_timer(per_timer_data& timer)$/;"	f	class:asio::detail::timer_queue	typeref:typename:void
remove_timer_queue	asio/include/asio/detail/impl/dev_poll_reactor.hpp	/^void dev_poll_reactor::remove_timer_queue(timer_queue<Time_Traits>& queue)$/;"	f	class:asio::detail::dev_poll_reactor	typeref:typename:void
remove_timer_queue	asio/include/asio/detail/impl/epoll_reactor.hpp	/^void epoll_reactor::remove_timer_queue(timer_queue<Time_Traits>& queue)$/;"	f	class:asio::detail::epoll_reactor	typeref:typename:void
remove_timer_queue	asio/include/asio/detail/impl/kqueue_reactor.hpp	/^void kqueue_reactor::remove_timer_queue(timer_queue<Time_Traits>& queue)$/;"	f	class:asio::detail::kqueue_reactor	typeref:typename:void
remove_timer_queue	asio/include/asio/detail/impl/select_reactor.hpp	/^void select_reactor::remove_timer_queue(timer_queue<Time_Traits>& queue)$/;"	f	class:asio::detail::select_reactor	typeref:typename:void
remove_timer_queue	asio/include/asio/detail/impl/win_iocp_io_context.hpp	/^void win_iocp_io_context::remove_timer_queue($/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
remove_timer_queue	asio/include/asio/detail/impl/winrt_timer_scheduler.hpp	/^void winrt_timer_scheduler::remove_timer_queue(timer_queue<Time_Traits>& queue)$/;"	f	class:asio::detail::winrt_timer_scheduler	typeref:typename:void
rep	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^  typedef duration::rep rep;$/;"	t	struct:time_t_clock	typeref:typename:duration::rep	file:
rep	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^  typedef duration::rep rep;$/;"	t	struct:time_t_clock	typeref:typename:duration::rep	file:
rep_	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  unsigned char rep_[8];$/;"	m	class:icmp_header	typeref:typename:unsigned char[8]
rep_	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned char rep_[60];$/;"	m	class:ipv4_header	typeref:typename:unsigned char[60]
repeat_count_	asio/src/examples/cpp11/operations/composed_6.cpp	/^      std::size_t repeat_count_;$/;"	m	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:std::size_t	file:
repeat_count_	asio/src/examples/cpp11/operations/composed_7.cpp	/^  std::size_t repeat_count_;$/;"	m	struct:async_write_messages_implementation	typeref:typename:std::size_t	file:
repeat_count_	asio/src/examples/cpp11/operations/composed_8.cpp	/^  std::size_t repeat_count_;$/;"	m	struct:async_write_messages_implementation	typeref:typename:std::size_t	file:
repeat_count_	asio/src/examples/cpp14/operations/composed_6.cpp	/^      std::size_t repeat_count_;$/;"	m	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	typeref:typename:std::size_t	file:
replace-scope-marker	asio/src/doc/tutorial.xsl	/^<xsl:template name="replace-scope-marker">$/;"	n
reply	asio/src/examples/cpp03/http/server/reply.hpp	/^struct reply$/;"	s	namespace:http::server
reply	asio/src/examples/cpp03/http/server2/reply.hpp	/^struct reply$/;"	s	namespace:http::server2
reply	asio/src/examples/cpp03/http/server3/reply.hpp	/^struct reply$/;"	s	namespace:http::server3
reply	asio/src/examples/cpp03/http/server4/reply.hpp	/^struct reply$/;"	s	namespace:http::server4
reply	asio/src/examples/cpp03/socks4/socks4.hpp	/^  reply()$/;"	f	class:socks4::reply
reply	asio/src/examples/cpp03/socks4/socks4.hpp	/^class reply$/;"	c	namespace:socks4
reply	asio/src/examples/cpp11/http/server/reply.hpp	/^struct reply$/;"	s	namespace:http::server
reply	asio/src/examples/cpp11/socks4/socks4.hpp	/^  reply()$/;"	f	class:socks4::reply
reply	asio/src/examples/cpp11/socks4/socks4.hpp	/^class reply$/;"	c	namespace:socks4
reply_	asio/src/examples/cpp03/http/server/connection.hpp	/^  reply reply_;$/;"	m	class:http::server::connection	typeref:typename:reply
reply_	asio/src/examples/cpp03/http/server2/connection.hpp	/^  reply reply_;$/;"	m	class:http::server2::connection	typeref:typename:reply
reply_	asio/src/examples/cpp03/http/server3/connection.hpp	/^  reply reply_;$/;"	m	class:http::server3::connection	typeref:typename:reply
reply_	asio/src/examples/cpp03/http/server4/server.hpp	/^  boost::shared_ptr<reply> reply_;$/;"	m	class:http::server4::server	typeref:typename:boost::shared_ptr<reply>
reply_	asio/src/examples/cpp03/ssl/client.cpp	/^  char reply_[max_length];$/;"	m	class:client	typeref:typename:char[]	file:
reply_	asio/src/examples/cpp11/http/server/connection.hpp	/^  reply reply_;$/;"	m	class:http::server::connection	typeref:typename:reply
reply_	asio/src/examples/cpp11/ssl/client.cpp	/^  char reply_[max_length];$/;"	m	class:client	typeref:typename:char[]	file:
reply_buffer_	asio/src/examples/cpp03/icmp/ping.cpp	/^  asio::streambuf reply_buffer_;$/;"	m	class:pinger	typeref:typename:asio::streambuf	file:
request	asio/src/examples/cpp03/http/server/request.hpp	/^struct request$/;"	s	namespace:http::server
request	asio/src/examples/cpp03/http/server2/request.hpp	/^struct request$/;"	s	namespace:http::server2
request	asio/src/examples/cpp03/http/server3/request.hpp	/^struct request$/;"	s	namespace:http::server3
request	asio/src/examples/cpp03/http/server4/request.hpp	/^struct request$/;"	s	namespace:http::server4
request	asio/src/examples/cpp03/socks4/socks4.hpp	/^  request(command_type cmd, const asio::ip::tcp::endpoint& endpoint,$/;"	f	class:socks4::request
request	asio/src/examples/cpp03/socks4/socks4.hpp	/^class request$/;"	c	namespace:socks4
request	asio/src/examples/cpp11/http/server/request.hpp	/^struct request$/;"	s	namespace:http::server
request	asio/src/examples/cpp11/socks4/socks4.hpp	/^  request(command_type cmd, const asio::ip::tcp::endpoint& endpoint,$/;"	f	class:socks4::request
request	asio/src/examples/cpp11/socks4/socks4.hpp	/^class request$/;"	c	namespace:socks4
request_	asio/src/examples/cpp03/http/client/async_client.cpp	/^  asio::streambuf request_;$/;"	m	class:client	typeref:typename:asio::streambuf	file:
request_	asio/src/examples/cpp03/http/server/connection.hpp	/^  request request_;$/;"	m	class:http::server::connection	typeref:typename:request
request_	asio/src/examples/cpp03/http/server2/connection.hpp	/^  request request_;$/;"	m	class:http::server2::connection	typeref:typename:request
request_	asio/src/examples/cpp03/http/server3/connection.hpp	/^  request request_;$/;"	m	class:http::server3::connection	typeref:typename:request
request_	asio/src/examples/cpp03/http/server4/server.hpp	/^  boost::shared_ptr<request> request_;$/;"	m	class:http::server4::server	typeref:typename:boost::shared_ptr<request>
request_	asio/src/examples/cpp03/ssl/client.cpp	/^  char request_[max_length];$/;"	m	class:client	typeref:typename:char[]	file:
request_	asio/src/examples/cpp11/http/server/connection.hpp	/^  request request_;$/;"	m	class:http::server::connection	typeref:typename:request
request_	asio/src/examples/cpp11/ssl/client.cpp	/^  char request_[max_length];$/;"	m	class:client	typeref:typename:char[]	file:
request_failed	asio/src/examples/cpp03/socks4/socks4.hpp	/^    request_failed = 0x5b,$/;"	e	enum:socks4::reply::status_type
request_failed	asio/src/examples/cpp11/socks4/socks4.hpp	/^    request_failed = 0x5b,$/;"	e	enum:socks4::reply::status_type
request_failed_bad_user_id	asio/src/examples/cpp03/socks4/socks4.hpp	/^    request_failed_bad_user_id = 0x5d$/;"	e	enum:socks4::reply::status_type
request_failed_bad_user_id	asio/src/examples/cpp11/socks4/socks4.hpp	/^    request_failed_bad_user_id = 0x5d$/;"	e	enum:socks4::reply::status_type
request_failed_no_identd	asio/src/examples/cpp03/socks4/socks4.hpp	/^    request_failed_no_identd = 0x5c,$/;"	e	enum:socks4::reply::status_type
request_failed_no_identd	asio/src/examples/cpp11/socks4/socks4.hpp	/^    request_failed_no_identd = 0x5c,$/;"	e	enum:socks4::reply::status_type
request_granted	asio/src/examples/cpp03/socks4/socks4.hpp	/^    request_granted = 0x5a,$/;"	e	enum:socks4::reply::status_type
request_granted	asio/src/examples/cpp11/socks4/socks4.hpp	/^    request_granted = 0x5a,$/;"	e	enum:socks4::reply::status_type
request_handler	asio/src/examples/cpp03/http/server/request_handler.cpp	/^request_handler::request_handler(const std::string& doc_root)$/;"	f	class:http::server::request_handler
request_handler	asio/src/examples/cpp03/http/server/request_handler.hpp	/^class request_handler$/;"	c	namespace:http::server
request_handler	asio/src/examples/cpp03/http/server2/request_handler.cpp	/^request_handler::request_handler(const std::string& doc_root)$/;"	f	class:http::server2::request_handler
request_handler	asio/src/examples/cpp03/http/server2/request_handler.hpp	/^class request_handler$/;"	c	namespace:http::server2
request_handler	asio/src/examples/cpp03/http/server3/request_handler.cpp	/^request_handler::request_handler(const std::string& doc_root)$/;"	f	class:http::server3::request_handler
request_handler	asio/src/examples/cpp03/http/server3/request_handler.hpp	/^class request_handler$/;"	c	namespace:http::server3
request_handler	asio/src/examples/cpp11/http/server/request_handler.cpp	/^request_handler::request_handler(const std::string& doc_root)$/;"	f	class:http::server::request_handler
request_handler	asio/src/examples/cpp11/http/server/request_handler.hpp	/^class request_handler$/;"	c	namespace:http::server
request_handler_	asio/src/examples/cpp03/http/server/connection.hpp	/^  request_handler& request_handler_;$/;"	m	class:http::server::connection	typeref:typename:request_handler &
request_handler_	asio/src/examples/cpp03/http/server/server.hpp	/^  request_handler request_handler_;$/;"	m	class:http::server::server	typeref:typename:request_handler
request_handler_	asio/src/examples/cpp03/http/server2/connection.hpp	/^  request_handler& request_handler_;$/;"	m	class:http::server2::connection	typeref:typename:request_handler &
request_handler_	asio/src/examples/cpp03/http/server2/server.hpp	/^  request_handler request_handler_;$/;"	m	class:http::server2::server	typeref:typename:request_handler
request_handler_	asio/src/examples/cpp03/http/server3/connection.hpp	/^  request_handler& request_handler_;$/;"	m	class:http::server3::connection	typeref:typename:request_handler &
request_handler_	asio/src/examples/cpp03/http/server3/server.hpp	/^  request_handler request_handler_;$/;"	m	class:http::server3::server	typeref:typename:request_handler
request_handler_	asio/src/examples/cpp03/http/server4/server.hpp	/^  boost::function<void(const request&, reply&)> request_handler_;$/;"	m	class:http::server4::server	typeref:typename:boost::function<void (const request &,reply &)>
request_handler_	asio/src/examples/cpp11/http/server/connection.hpp	/^  request_handler& request_handler_;$/;"	m	class:http::server::connection	typeref:typename:request_handler &
request_handler_	asio/src/examples/cpp11/http/server/server.hpp	/^  request_handler request_handler_;$/;"	m	class:http::server::server	typeref:typename:request_handler
request_parser	asio/src/examples/cpp03/http/server/request_parser.cpp	/^request_parser::request_parser()$/;"	f	class:http::server::request_parser
request_parser	asio/src/examples/cpp03/http/server/request_parser.hpp	/^class request_parser$/;"	c	namespace:http::server
request_parser	asio/src/examples/cpp03/http/server2/request_parser.cpp	/^request_parser::request_parser()$/;"	f	class:http::server2::request_parser
request_parser	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^class request_parser$/;"	c	namespace:http::server2
request_parser	asio/src/examples/cpp03/http/server3/request_parser.cpp	/^request_parser::request_parser()$/;"	f	class:http::server3::request_parser
request_parser	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^class request_parser$/;"	c	namespace:http::server3
request_parser	asio/src/examples/cpp03/http/server4/request_parser.hpp	/^class request_parser : asio::coroutine$/;"	c	namespace:http::server4
request_parser	asio/src/examples/cpp11/http/server/request_parser.cpp	/^request_parser::request_parser()$/;"	f	class:http::server::request_parser
request_parser	asio/src/examples/cpp11/http/server/request_parser.hpp	/^class request_parser$/;"	c	namespace:http::server
request_parser_	asio/src/examples/cpp03/http/server/connection.hpp	/^  request_parser request_parser_;$/;"	m	class:http::server::connection	typeref:typename:request_parser
request_parser_	asio/src/examples/cpp03/http/server2/connection.hpp	/^  request_parser request_parser_;$/;"	m	class:http::server2::connection	typeref:typename:request_parser
request_parser_	asio/src/examples/cpp03/http/server3/connection.hpp	/^  request_parser request_parser_;$/;"	m	class:http::server3::connection	typeref:typename:request_parser
request_parser_	asio/src/examples/cpp03/http/server4/server.hpp	/^  request_parser request_parser_;$/;"	m	class:http::server4::server	typeref:typename:request_parser
request_parser_	asio/src/examples/cpp11/http/server/connection.hpp	/^  request_parser request_parser_;$/;"	m	class:http::server::connection	typeref:typename:request_parser
reserve	asio/include/asio/basic_streambuf.hpp	/^  void reserve(std::size_t n)$/;"	f	class:asio::basic_streambuf	typeref:typename:void
reserve	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  void reserve(u_int n)$/;"	f	class:asio::detail::win_fd_set_adapter	typeref:typename:void
reset	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^  void reset()$/;"	f	class:asio::detail::posix_fd_set_adapter	typeref:typename:void
reset	asio/include/asio/detail/scoped_ptr.hpp	/^  void reset(T* p = 0)$/;"	f	class:asio::detail::scoped_ptr	typeref:typename:void
reset	asio/include/asio/detail/socket_holder.hpp	/^  void reset()$/;"	f	class:asio::detail::socket_holder	typeref:typename:void
reset	asio/include/asio/detail/socket_holder.hpp	/^  void reset(socket_type s)$/;"	f	class:asio::detail::socket_holder	typeref:typename:void
reset	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  void reset()$/;"	f	class:asio::detail::win_fd_set_adapter	typeref:typename:void
reset	asio/include/asio/detail/win_iocp_operation.hpp	/^  void reset()$/;"	f	class:asio::detail::win_iocp_operation	typeref:typename:void
reset	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  void reset()$/;"	f	class:asio::detail::win_iocp_overlapped_ptr	typeref:typename:void
reset	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  void reset(const Executor& ex, Handler handler)$/;"	f	class:asio::detail::win_iocp_overlapped_ptr	typeref:typename:void
reset	asio/include/asio/executor_work_guard.hpp	/^  void reset() ASIO_NOEXCEPT$/;"	f	class:asio::executor_work_guard	typeref:typename:void
reset	asio/include/asio/impl/compose.hpp	/^    void reset()$/;"	f	struct:asio::detail::composed_io_executors	typeref:typename:void
reset	asio/include/asio/impl/compose.hpp	/^    void reset()$/;"	f	struct:asio::detail::composed_work	typeref:typename:void
reset	asio/include/asio/impl/io_context.hpp	/^inline void io_context::reset()$/;"	f	class:asio::io_context	typeref:typename:void
reset	asio/include/asio/windows/overlapped_ptr.hpp	/^  void reset()$/;"	f	class:asio::windows::overlapped_ptr	typeref:typename:void
reset	asio/include/asio/windows/overlapped_ptr.hpp	/^  void reset(ExecutionContext& context, ASIO_MOVE_ARG(Handler) handler,$/;"	f	class:asio::windows::overlapped_ptr	typeref:typename:void
reset	asio/include/asio/windows/overlapped_ptr.hpp	/^  void reset(const Executor& ex, ASIO_MOVE_ARG(Handler) handler,$/;"	f	class:asio::windows::overlapped_ptr	typeref:typename:void
reset	asio/src/examples/cpp03/http/server/request_parser.cpp	/^void request_parser::reset()$/;"	f	class:http::server::request_parser	typeref:typename:void
reset	asio/src/examples/cpp03/http/server2/request_parser.cpp	/^void request_parser::reset()$/;"	f	class:http::server2::request_parser	typeref:typename:void
reset	asio/src/examples/cpp03/http/server3/request_parser.cpp	/^void request_parser::reset()$/;"	f	class:http::server3::request_parser	typeref:typename:void
reset	asio/src/examples/cpp11/http/server/request_parser.cpp	/^void request_parser::reset()$/;"	f	class:http::server::request_parser	typeref:typename:void
reset	asio/src/tests/unit/read.cpp	/^  void reset(const void* data, size_t length)$/;"	f	class:test_stream	typeref:typename:void	file:
reset	asio/src/tests/unit/read_at.cpp	/^  void reset(const void* data, size_t length)$/;"	f	class:test_random_access_device	typeref:typename:void	file:
reset	asio/src/tests/unit/read_until.cpp	/^  void reset(const void* data, size_t length)$/;"	f	class:test_stream	typeref:typename:void	file:
reset	asio/src/tests/unit/write.cpp	/^  void reset(size_t length = max_length)$/;"	f	class:test_stream	typeref:typename:void	file:
reset	asio/src/tests/unit/write_at.cpp	/^  void reset()$/;"	f	class:test_random_access_device	typeref:typename:void	file:
resize	asio/include/asio/detail/buffered_stream_storage.hpp	/^  void resize(size_type length)$/;"	f	class:asio::detail::buffered_stream_storage	typeref:typename:void
resize	asio/include/asio/detail/socket_option.hpp	/^  void resize(const Protocol&, std::size_t s)$/;"	f	class:asio::detail::socket_option::boolean	typeref:typename:void
resize	asio/include/asio/detail/socket_option.hpp	/^  void resize(const Protocol&, std::size_t s)$/;"	f	class:asio::detail::socket_option::integer	typeref:typename:void
resize	asio/include/asio/detail/socket_option.hpp	/^  void resize(const Protocol&, std::size_t s)$/;"	f	class:asio::detail::socket_option::linger	typeref:typename:void
resize	asio/include/asio/generic/basic_endpoint.hpp	/^  void resize(std::size_t new_size)$/;"	f	class:asio::generic::basic_endpoint	typeref:typename:void
resize	asio/include/asio/ip/basic_endpoint.hpp	/^  void resize(std::size_t new_size)$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:void
resize	asio/include/asio/ip/detail/socket_option.hpp	/^  void resize(const Protocol& protocol, std::size_t s)$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:void
resize	asio/include/asio/ip/detail/socket_option.hpp	/^  void resize(const Protocol& protocol, std::size_t s)$/;"	f	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:void
resize	asio/include/asio/ip/detail/socket_option.hpp	/^  void resize(const Protocol&, std::size_t s)$/;"	f	class:asio::ip::detail::socket_option::unicast_hops	typeref:typename:void
resize	asio/include/asio/local/basic_endpoint.hpp	/^  void resize(std::size_t new_size)$/;"	f	class:asio::local::basic_endpoint	typeref:typename:void
resize	asio/src/tests/unit/archetypes/gettable_socket_option.hpp	/^  void resize(const Protocol&, std::size_t)$/;"	f	class:archetypes::gettable_socket_option	typeref:typename:void
resolve	asio/include/asio/detail/resolver_service.hpp	/^  results_type resolve(implementation_type&, const query_type& query,$/;"	f	class:asio::detail::resolver_service	typeref:typename:results_type
resolve	asio/include/asio/detail/resolver_service.hpp	/^  results_type resolve(implementation_type&,$/;"	f	class:asio::detail::resolver_service	typeref:typename:results_type
resolve	asio/include/asio/detail/winrt_resolver_service.hpp	/^  results_type resolve(implementation_type&,$/;"	f	class:asio::detail::winrt_resolver_service	typeref:typename:results_type
resolve	asio/include/asio/ip/basic_resolver.hpp	/^  results_type resolve(ASIO_STRING_VIEW_PARAM host,$/;"	f	class:asio::ip::basic_resolver	typeref:typename:results_type
resolve	asio/include/asio/ip/basic_resolver.hpp	/^  results_type resolve(const endpoint_type& e)$/;"	f	class:asio::ip::basic_resolver	typeref:typename:results_type
resolve	asio/include/asio/ip/basic_resolver.hpp	/^  results_type resolve(const endpoint_type& e, asio::error_code& ec)$/;"	f	class:asio::ip::basic_resolver	typeref:typename:results_type
resolve	asio/include/asio/ip/basic_resolver.hpp	/^  results_type resolve(const protocol_type& protocol,$/;"	f	class:asio::ip::basic_resolver	typeref:typename:results_type
resolve	asio/include/asio/ip/basic_resolver.hpp	/^  results_type resolve(const query& q)$/;"	f	class:asio::ip::basic_resolver	typeref:typename:results_type
resolve	asio/include/asio/ip/basic_resolver.hpp	/^  results_type resolve(const query& q, asio::error_code& ec)$/;"	f	class:asio::ip::basic_resolver	typeref:typename:results_type
resolve_endpoint_op	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  resolve_endpoint_op(socket_ops::weak_cancel_token_type cancel_token,$/;"	f	class:asio::detail::resolve_endpoint_op
resolve_endpoint_op	asio/include/asio/detail/resolve_endpoint_op.hpp	/^class resolve_endpoint_op : public resolve_op$/;"	c	namespace:asio::detail
resolve_handler	asio/src/tests/unit/ip/icmp.cpp	/^  resolve_handler() {}$/;"	f	struct:ip_icmp_resolver_compile::resolve_handler	file:
resolve_handler	asio/src/tests/unit/ip/icmp.cpp	/^  resolve_handler(resolve_handler&&) {}$/;"	f	struct:ip_icmp_resolver_compile::resolve_handler	file:
resolve_handler	asio/src/tests/unit/ip/icmp.cpp	/^struct resolve_handler$/;"	s	namespace:ip_icmp_resolver_compile	file:
resolve_handler	asio/src/tests/unit/ip/tcp.cpp	/^  resolve_handler() {}$/;"	f	struct:ip_tcp_resolver_compile::resolve_handler	file:
resolve_handler	asio/src/tests/unit/ip/tcp.cpp	/^  resolve_handler(resolve_handler&&) {}$/;"	f	struct:ip_tcp_resolver_compile::resolve_handler	file:
resolve_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct resolve_handler$/;"	s	namespace:ip_tcp_resolver_compile	file:
resolve_handler	asio/src/tests/unit/ip/udp.cpp	/^  resolve_handler() {}$/;"	f	struct:ip_udp_resolver_compile::resolve_handler	file:
resolve_handler	asio/src/tests/unit/ip/udp.cpp	/^  resolve_handler(resolve_handler&&) {}$/;"	f	struct:ip_udp_resolver_compile::resolve_handler	file:
resolve_handler	asio/src/tests/unit/ip/udp.cpp	/^struct resolve_handler$/;"	s	namespace:ip_udp_resolver_compile	file:
resolve_op	asio/include/asio/detail/resolve_op.hpp	/^  resolve_op(func_type complete_func)$/;"	f	class:asio::detail::resolve_op
resolve_op	asio/include/asio/detail/resolve_op.hpp	/^class resolve_op : public operation$/;"	c	namespace:asio::detail
resolve_query_op	asio/include/asio/detail/resolve_query_op.hpp	/^  resolve_query_op(socket_ops::weak_cancel_token_type cancel_token,$/;"	f	class:asio::detail::resolve_query_op
resolve_query_op	asio/include/asio/detail/resolve_query_op.hpp	/^class resolve_query_op : public resolve_op$/;"	c	namespace:asio::detail
resolver	asio/include/asio/ip/icmp.hpp	/^  typedef basic_resolver<icmp> resolver;$/;"	t	class:asio::ip::icmp	typeref:typename:basic_resolver<icmp>
resolver	asio/include/asio/ip/tcp.hpp	/^  typedef basic_resolver<tcp> resolver;$/;"	t	class:asio::ip::tcp	typeref:typename:basic_resolver<tcp>
resolver	asio/include/asio/ip/udp.hpp	/^  typedef basic_resolver<udp> resolver;$/;"	t	class:asio::ip::udp	typeref:typename:basic_resolver<udp>
resolver_	asio/src/examples/cpp03/http/client/async_client.cpp	/^  tcp::resolver resolver_;$/;"	m	class:client	typeref:typename:tcp::resolver	file:
resolver_	asio/src/examples/cpp03/icmp/ping.cpp	/^  icmp::resolver resolver_;$/;"	m	class:pinger	typeref:typename:icmp::resolver	file:
resolver_base	asio/include/asio/ip/resolver_base.hpp	/^class resolver_base$/;"	c	namespace:asio::ip
resolver_errc	asio/include/asio/error.hpp	/^namespace resolver_errc {$/;"	n	namespace:asio
resolver_query_base	asio/include/asio/ip/resolver_query_base.hpp	/^class resolver_query_base : public resolver_base$/;"	c	namespace:asio::ip
resolver_service	asio/include/asio/detail/resolver_service.hpp	/^  resolver_service(execution_context& context)$/;"	f	class:asio::detail::resolver_service
resolver_service	asio/include/asio/detail/resolver_service.hpp	/^class resolver_service :$/;"	c	namespace:asio::detail
resolver_service_base	asio/include/asio/detail/resolver_service_base.hpp	/^class resolver_service_base$/;"	c	namespace:asio::detail
resolver_type	asio/include/asio/basic_socket_streambuf.hpp	/^    typedef typename Protocol::resolver resolver_type;$/;"	t	function:asio::basic_socket_streambuf::connect	typeref:typename:Protocol::resolver
response_	asio/src/examples/cpp03/http/client/async_client.cpp	/^  asio::streambuf response_;$/;"	m	class:client	typeref:typename:asio::streambuf	file:
restart	asio/include/asio/detail/win_iocp_io_context.hpp	/^  void restart()$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
result	asio/include/asio/async_result.hpp	/^  async_result<typename decay<CompletionToken>::type, Signature> result;$/;"	m	struct:asio::async_completion	typeref:typename:async_result<typename decay<CompletionToken>::type,Signature>
result	asio/include/asio/impl/awaitable.hpp	/^    struct result$/;"	s	function:asio::detail::awaitable_frame_base::await_transform
result	asio/include/asio/impl/awaitable.hpp	/^    struct result$/;"	s	function:asio::detail::awaitable_frame_base::final_suspend
result	asio/include/asio/impl/connect.hpp	/^  Iterator result = connect(s, begin, connect_condition, ec);$/;"	v	namespace:asio	typeref:typename:Iterator
result	asio/include/asio/impl/connect.hpp	/^  Iterator result = connect(s, begin, ec);$/;"	v	namespace:asio	typeref:typename:Iterator
result_	asio/include/asio/detail/winrt_async_op.hpp	/^  TResult result_;$/;"	m	class:asio::detail::winrt_async_op	typeref:typename:TResult
result_	asio/include/asio/detail/winsock_init.hpp	/^    long result_;$/;"	m	struct:asio::detail::winsock_init_base::data	typeref:typename:long
result_of	asio/include/asio/detail/type_traits.hpp	/^struct result_of<F(Args...)> : std::invoke_result<F, Args...> {};$/;"	s	namespace:asio
result_type	asio/include/asio/bind_executor.hpp	/^  typedef R result_type;$/;"	t	struct:asio::detail::executor_binder_result_type	typeref:typename:R
result_type	asio/include/asio/bind_executor.hpp	/^  typedef see_below result_type;$/;"	t	class:asio::executor_binder	typeref:typename:see_below
result_type	asio/include/asio/bind_executor.hpp	/^  typedef typename T::result_type result_type;$/;"	t	struct:asio::detail::executor_binder_result_type	typeref:typename:T::result_type
result_type	asio/include/asio/completion_condition.hpp	/^  typedef std::size_t result_type;$/;"	t	class:asio::detail::transfer_all_t	typeref:typename:std::size_t
result_type	asio/include/asio/completion_condition.hpp	/^  typedef std::size_t result_type;$/;"	t	class:asio::detail::transfer_at_least_t	typeref:typename:std::size_t
result_type	asio/include/asio/completion_condition.hpp	/^  typedef std::size_t result_type;$/;"	t	class:asio::detail::transfer_exactly_t	typeref:typename:std::size_t
result_type	asio/include/asio/detail/wrapped_handler.hpp	/^  typedef void result_type;$/;"	t	class:asio::detail::wrapped_handler	typeref:typename:void
result_type	asio/include/asio/impl/detached.hpp	/^    typedef void result_type;$/;"	t	class:asio::detail::detached_handler	typeref:typename:void
result_type	asio/include/asio/impl/redirect_error.hpp	/^  typedef void result_type;$/;"	t	class:asio::detail::redirect_error_handler	typeref:typename:void
result_type	asio/include/asio/impl/use_awaitable.hpp	/^  typedef void result_type;$/;"	t	class:asio::detail::awaitable_handler_base	typeref:typename:void
result_type	asio/include/asio/impl/use_future.hpp	/^  typedef void result_type;$/;"	t	class:asio::detail::packaged_handler	typeref:typename:void
result_type	asio/include/asio/impl/use_future.hpp	/^  typedef void result_type;$/;"	t	class:asio::detail::promise_handler	typeref:typename:void
result_type	asio/include/asio/ssl/rfc2818_verification.hpp	/^  typedef bool result_type;$/;"	t	class:asio::ssl::rfc2818_verification	typeref:typename:bool
result_type	asio/src/examples/cpp11/http/server/request_parser.hpp	/^  enum result_type { good, bad, indeterminate };$/;"	g	class:http::server::request_parser
result_type	asio/src/tests/latency/tcp_client.cpp	/^  typedef std::size_t result_type;$/;"	t	struct:transfer_all	typeref:typename:std::size_t	file:
result_type_or_void	asio/include/asio/bind_executor.hpp	/^  typedef result_type result_type_or_void;$/;"	t	struct:asio::detail::executor_binder_result_type	typeref:typename:result_type
result_type_or_void	asio/include/asio/bind_executor.hpp	/^  typedef void result_type_or_void;$/;"	t	struct:asio::detail::executor_binder_result_type	typeref:typename:void
results	asio/include/asio/ip/basic_resolver_results.hpp	/^    basic_resolver_results results;$/;"	m	class:asio::ip::basic_resolver_results	typeref:typename:basic_resolver_results
results	asio/include/asio/placeholders.hpp	/^unspecified results;$/;"	v	namespace:asio::placeholders	typeref:typename:unspecified
results_	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  results_type results_;$/;"	m	class:asio::detail::resolve_endpoint_op	typeref:typename:results_type
results_type	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  typedef asio::ip::basic_resolver_results<Protocol> results_type;$/;"	t	class:asio::detail::resolve_endpoint_op	typeref:typename:asio::ip::basic_resolver_results<Protocol>
results_type	asio/include/asio/detail/resolve_query_op.hpp	/^  typedef asio::ip::basic_resolver_results<Protocol> results_type;$/;"	t	class:asio::detail::resolve_query_op	typeref:typename:asio::ip::basic_resolver_results<Protocol>
results_type	asio/include/asio/detail/resolver_service.hpp	/^  typedef asio::ip::basic_resolver_results<Protocol> results_type;$/;"	t	class:asio::detail::resolver_service	typeref:typename:asio::ip::basic_resolver_results<Protocol>
results_type	asio/include/asio/detail/winrt_resolve_op.hpp	/^  typedef asio::ip::basic_resolver_results<Protocol> results_type;$/;"	t	class:asio::detail::winrt_resolve_op	typeref:typename:asio::ip::basic_resolver_results<Protocol>
results_type	asio/include/asio/detail/winrt_resolver_service.hpp	/^  typedef asio::ip::basic_resolver_results<Protocol> results_type;$/;"	t	class:asio::detail::winrt_resolver_service	typeref:typename:asio::ip::basic_resolver_results<Protocol>
results_type	asio/include/asio/ip/basic_resolver.hpp	/^  typedef basic_resolver_results<InternetProtocol> results_type;$/;"	t	class:asio::ip::basic_resolver	typeref:typename:basic_resolver_results<InternetProtocol>
resume	asio/include/asio/impl/awaitable.hpp	/^  void resume()$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void
rethrow_exception	asio/include/asio/impl/awaitable.hpp	/^  void rethrow_exception()$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void
return_coro	asio/src/tests/unit/coroutine.cpp	/^void return_coro(asio::coroutine& coro)$/;"	f	typeref:typename:void
return_test	asio/src/tests/unit/coroutine.cpp	/^void return_test()$/;"	f	typeref:typename:void
return_type	asio/include/asio/async_result.hpp	/^  typedef void return_type;$/;"	t	class:asio::async_result	typeref:typename:void
return_type	asio/include/asio/bind_executor.hpp	/^  typedef typename async_result<T, Signature>::return_type return_type;$/;"	t	class:asio::async_result	typeref:typename:async_result<T,Signature>::return_type
return_type	asio/include/asio/impl/detached.hpp	/^  typedef void return_type;$/;"	t	struct:asio::async_result	typeref:typename:void
return_type	asio/include/asio/impl/redirect_error.hpp	/^      ::return_type return_type;$/;"	t	struct:asio::async_result	typeref:typename:async_result<CompletionToken,typename detail::redirect_error_signature<Signature>::type>::return_type
return_type	asio/include/asio/impl/spawn.hpp	/^    typedef T return_type;$/;"	t	class:asio::detail::coro_async_result	typeref:typename:T
return_type	asio/include/asio/impl/spawn.hpp	/^    typedef void return_type;$/;"	t	class:asio::detail::coro_async_result	typeref:typename:void
return_type	asio/include/asio/impl/use_awaitable.hpp	/^  typedef typename handler_type::awaitable_type return_type;$/;"	t	class:asio::async_result	typeref:typename:handler_type::awaitable_type
return_type	asio/include/asio/impl/use_future.hpp	/^  typedef typename completion_handler_type::future_type return_type;$/;"	t	class:asio::detail::packaged_async_result	typeref:typename:completion_handler_type::future_type
return_type	asio/include/asio/impl/use_future.hpp	/^  typedef typename completion_handler_type::future_type return_type;$/;"	t	class:asio::detail::promise_async_result	typeref:typename:completion_handler_type::future_type
return_type	asio/include/asio/packaged_task.hpp	/^  typedef std::future<Result> return_type;$/;"	t	class:asio::async_result	typeref:typename:std::future<Result>
return_type	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  typedef T return_type;$/;"	t	class:asio::async_result	typeref:typename:T	file:
return_type	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  typedef T return_type;$/;"	t	class:asio::async_result	typeref:typename:T	file:
return_type	asio/src/tests/unit/archetypes/async_result.hpp	/^  typedef int return_type;$/;"	t	class:asio::async_result	typeref:typename:int
return_value	asio/include/asio/impl/awaitable.hpp	/^  void return_value(U&& u)$/;"	f	class:asio::detail::awaitable_frame	typeref:typename:void
return_values	asio/include/asio/impl/awaitable.hpp	/^  void return_values(Us&&... us)$/;"	f	class:asio::detail::awaitable_frame	typeref:typename:void
return_void	asio/include/asio/impl/awaitable.hpp	/^  void return_void()$/;"	f	class:asio::detail::awaitable_frame	typeref:typename:void
reusable_memory_	asio/include/asio/detail/thread_info_base.hpp	/^  void* reusable_memory_[max_mem_index];$/;"	m	class:asio::detail::thread_info_base	typeref:typename:void * []
reuse_address	asio/include/asio/socket_base.hpp	/^      reuse_address;$/;"	t	class:asio::socket_base
reuse_address	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined reuse_address;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
rewrapped_handler	asio/include/asio/detail/wrapped_handler.hpp	/^  explicit rewrapped_handler(Handler& handler, const Context& context)$/;"	f	class:asio::detail::rewrapped_handler
rewrapped_handler	asio/include/asio/detail/wrapped_handler.hpp	/^  explicit rewrapped_handler(const Handler& handler, const Context& context)$/;"	f	class:asio::detail::rewrapped_handler
rewrapped_handler	asio/include/asio/detail/wrapped_handler.hpp	/^  rewrapped_handler(const rewrapped_handler& other)$/;"	f	class:asio::detail::rewrapped_handler
rewrapped_handler	asio/include/asio/detail/wrapped_handler.hpp	/^  rewrapped_handler(rewrapped_handler&& other)$/;"	f	class:asio::detail::rewrapped_handler
rewrapped_handler	asio/include/asio/detail/wrapped_handler.hpp	/^class rewrapped_handler$/;"	c	namespace:asio::detail
rfc2818_verification	asio/include/asio/ssl/rfc2818_verification.hpp	/^  explicit rfc2818_verification(const std::string& host)$/;"	f	class:asio::ssl::rfc2818_verification
rfc2818_verification	asio/include/asio/ssl/rfc2818_verification.hpp	/^class rfc2818_verification$/;"	c	namespace:asio::ssl
room_	asio/src/examples/cpp03/chat/chat_server.cpp	/^  chat_room room_;$/;"	m	class:chat_server	typeref:typename:chat_room	file:
room_	asio/src/examples/cpp03/chat/chat_server.cpp	/^  chat_room& room_;$/;"	m	class:chat_session	typeref:typename:chat_room &	file:
room_	asio/src/examples/cpp11/chat/chat_server.cpp	/^  chat_room room_;$/;"	m	class:chat_server	typeref:typename:chat_room	file:
room_	asio/src/examples/cpp11/chat/chat_server.cpp	/^  chat_room& room_;$/;"	m	class:chat_session	typeref:typename:chat_room &	file:
room_	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  chat_room& room_;$/;"	m	class:chat_session	typeref:typename:chat_room &	file:
rp	asio/src/tests/unit/generic/raw_protocol.cpp	/^  typedef generic::raw_protocol rp;$/;"	t	function:generic_raw_protocol_socket_compile::test	typeref:typename:generic::raw_protocol	file:
run	asio/autogen.sh	/^run()$/;"	f
run	asio/include/asio/detail/null_reactor.hpp	/^  void run(long \/*usec*\/, op_queue<scheduler_operation>& \/*ops*\/)$/;"	f	class:asio::detail::null_reactor	typeref:typename:void
run	asio/include/asio/detail/posix_thread.hpp	/^    virtual void run()$/;"	f	class:asio::detail::posix_thread::func	typeref:typename:void
run	asio/include/asio/detail/win_thread.hpp	/^    virtual void run()$/;"	f	class:asio::detail::win_thread::func	typeref:typename:void
run	asio/include/asio/detail/winapp_thread.hpp	/^    virtual void run()$/;"	f	class:asio::detail::winapp_thread::func	typeref:typename:void
run	asio/include/asio/detail/wince_thread.hpp	/^    virtual void run()$/;"	f	class:asio::detail::wince_thread::func	typeref:typename:void
run	asio/src/examples/cpp03/http/server/server.cpp	/^void server::run()$/;"	f	class:http::server::server	typeref:typename:void
run	asio/src/examples/cpp03/http/server2/io_context_pool.cpp	/^void io_context_pool::run()$/;"	f	class:http::server2::io_context_pool	typeref:typename:void
run	asio/src/examples/cpp03/http/server2/server.cpp	/^void server::run()$/;"	f	class:http::server2::server	typeref:typename:void
run	asio/src/examples/cpp03/http/server3/server.cpp	/^void server::run()$/;"	f	class:http::server3::server	typeref:typename:void
run	asio/src/examples/cpp03/local/connect_pair.cpp	/^void run(asio::io_context* io_context)$/;"	f	typeref:typename:void
run	asio/src/examples/cpp03/timeouts/blocking_tcp_client.cpp	/^  void run(asio::chrono::steady_clock::duration timeout)$/;"	f	class:client	typeref:typename:void	file:
run	asio/src/examples/cpp03/timeouts/blocking_udp_client.cpp	/^  void run(asio::chrono::steady_clock::duration timeout)$/;"	f	class:client	typeref:typename:void	file:
run	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  void run()$/;"	f	class:priority_scheduler	typeref:typename:void	file:
run	asio/src/examples/cpp11/http/server/server.cpp	/^void server::run()$/;"	f	class:http::server::server	typeref:typename:void
run	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^  void run(std::chrono::steady_clock::duration timeout)$/;"	f	class:client	typeref:typename:void	file:
run	asio/src/examples/cpp11/timeouts/blocking_udp_client.cpp	/^  void run(std::chrono::steady_clock::duration timeout)$/;"	f	class:client	typeref:typename:void	file:
run	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  void run()$/;"	f	class:priority_scheduler	typeref:typename:void	file:
run	asio/src/tests/unit/connect.cpp	/^  void run()$/;"	f	class:connection_sink	typeref:typename:void	file:
run_for	asio/include/asio/impl/io_context.hpp	/^std::size_t io_context::run_for($/;"	f	class:asio::io_context	typeref:typename:std::size_t
run_one_for	asio/include/asio/impl/io_context.hpp	/^std::size_t io_context::run_one_for($/;"	f	class:asio::io_context	typeref:typename:std::size_t
run_one_until	asio/include/asio/impl/io_context.hpp	/^std::size_t io_context::run_one_until($/;"	f	class:asio::io_context	typeref:typename:std::size_t
run_test	asio/src/tests/unit/unit_test.hpp	/^inline void run_test(const char* name)$/;"	f	namespace:asio::detail	typeref:typename:void
run_until	asio/include/asio/impl/io_context.hpp	/^std::size_t io_context::run_until($/;"	f	class:asio::io_context	typeref:typename:std::size_t
running_in_this_thread	asio/include/asio/impl/io_context.hpp	/^io_context::executor_type::running_in_this_thread() const ASIO_NOEXCEPT$/;"	f	class:asio::io_context::executor_type	typeref:typename:bool
running_in_this_thread	asio/include/asio/impl/thread_pool.hpp	/^thread_pool::executor_type::running_in_this_thread() const ASIO_NOEXCEPT$/;"	f	class:asio::thread_pool::executor_type	typeref:typename:bool
running_in_this_thread	asio/include/asio/io_context_strand.hpp	/^  bool running_in_this_thread() const ASIO_NOEXCEPT$/;"	f	class:asio::io_context::strand	typeref:typename:bool
running_in_this_thread	asio/include/asio/strand.hpp	/^  bool running_in_this_thread() const ASIO_NOEXCEPT$/;"	f	class:asio::strand	typeref:typename:bool
s11n_example	asio/src/examples/cpp03/serialization/client.cpp	/^namespace s11n_example {$/;"	n	file:
s11n_example	asio/src/examples/cpp03/serialization/connection.hpp	/^namespace s11n_example {$/;"	n
s11n_example	asio/src/examples/cpp03/serialization/server.cpp	/^namespace s11n_example {$/;"	n	file:
s11n_example	asio/src/examples/cpp03/serialization/stock.hpp	/^namespace s11n_example {$/;"	n
s6_addr	asio/include/asio/detail/old_win_sdk_compat.hpp	/^# define s6_addr /;"	d
s6_addr	asio/include/asio/detail/socket_types.hpp	/^struct in6_addr_type { unsigned char s6_addr[16]; };$/;"	m	struct:asio::detail::in6_addr_type	typeref:typename:unsigned char[16]
s_addr	asio/include/asio/detail/socket_types.hpp	/^struct in4_addr_type { u_long_type s_addr; };$/;"	m	struct:asio::detail::in4_addr_type	typeref:typename:u_long_type
sa_family	asio/include/asio/detail/socket_types.hpp	/^struct socket_addr_type { int sa_family; };$/;"	m	struct:asio::detail::socket_addr_type	typeref:typename:int
safe_cancellation_thread_id_	asio/include/asio/detail/win_iocp_handle_service.hpp	/^    DWORD safe_cancellation_thread_id_;$/;"	m	class:asio::detail::win_iocp_handle_service::implementation_type	typeref:typename:DWORD
safe_cancellation_thread_id_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    DWORD safe_cancellation_thread_id_;$/;"	m	struct:asio::detail::win_iocp_socket_service_base::base_implementation_type	typeref:typename:DWORD
salt_	asio/include/asio/detail/strand_executor_service.hpp	/^  std::size_t salt_;$/;"	m	class:asio::detail::strand_executor_service	typeref:typename:std::size_t
salt_	asio/include/asio/detail/strand_service.hpp	/^  std::size_t salt_;$/;"	m	class:asio::detail::strand_service	typeref:typename:std::size_t
sb_	asio/include/asio/basic_streambuf.hpp	/^  basic_streambuf<Allocator>& sb_;$/;"	m	class:asio::basic_streambuf_ref	typeref:typename:basic_streambuf<Allocator> &
sbarrier	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^  static void sbarrier()$/;"	f	class:asio::detail::gcc_x86_fenced_block	typeref:typename:void
schedule_timer	asio/include/asio/detail/impl/dev_poll_reactor.hpp	/^void dev_poll_reactor::schedule_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::dev_poll_reactor	typeref:typename:void
schedule_timer	asio/include/asio/detail/impl/epoll_reactor.hpp	/^void epoll_reactor::schedule_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::epoll_reactor	typeref:typename:void
schedule_timer	asio/include/asio/detail/impl/kqueue_reactor.hpp	/^void kqueue_reactor::schedule_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::kqueue_reactor	typeref:typename:void
schedule_timer	asio/include/asio/detail/impl/select_reactor.hpp	/^void select_reactor::schedule_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::select_reactor	typeref:typename:void
schedule_timer	asio/include/asio/detail/impl/win_iocp_io_context.hpp	/^void win_iocp_io_context::schedule_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
schedule_timer	asio/include/asio/detail/impl/winrt_timer_scheduler.hpp	/^void winrt_timer_scheduler::schedule_timer(timer_queue<Time_Traits>& queue,$/;"	f	class:asio::detail::winrt_timer_scheduler	typeref:typename:void
scheduler	asio/include/asio/detail/scheduler.hpp	/^class scheduler$/;"	c	namespace:asio::detail
scheduler_	asio/include/asio/detail/deadline_timer_service.hpp	/^  timer_scheduler& scheduler_;$/;"	m	class:asio::detail::deadline_timer_service	typeref:typename:timer_scheduler &
scheduler_	asio/include/asio/detail/dev_poll_reactor.hpp	/^  scheduler& scheduler_;$/;"	m	class:asio::detail::dev_poll_reactor	typeref:typename:scheduler &
scheduler_	asio/include/asio/detail/epoll_reactor.hpp	/^  scheduler& scheduler_;$/;"	m	class:asio::detail::epoll_reactor	typeref:typename:scheduler &
scheduler_	asio/include/asio/detail/kqueue_reactor.hpp	/^  scheduler& scheduler_;$/;"	m	class:asio::detail::kqueue_reactor	typeref:typename:scheduler &
scheduler_	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  scheduler_impl& scheduler_;$/;"	m	class:asio::detail::resolve_endpoint_op	typeref:typename:scheduler_impl &
scheduler_	asio/include/asio/detail/resolve_query_op.hpp	/^  scheduler_impl& scheduler_;$/;"	m	class:asio::detail::resolve_query_op	typeref:typename:scheduler_impl &
scheduler_	asio/include/asio/detail/resolver_service_base.hpp	/^  scheduler_impl& scheduler_;$/;"	m	class:asio::detail::resolver_service_base	typeref:typename:scheduler_impl &
scheduler_	asio/include/asio/detail/select_reactor.hpp	/^  scheduler_type& scheduler_;$/;"	m	class:asio::detail::select_reactor	typeref:typename:scheduler_type &
scheduler_	asio/include/asio/detail/signal_set_service.hpp	/^  scheduler_impl& scheduler_;$/;"	m	class:asio::detail::signal_set_service	typeref:typename:scheduler_impl &
scheduler_	asio/include/asio/detail/win_object_handle_service.hpp	/^  scheduler_impl& scheduler_;$/;"	m	class:asio::detail::win_object_handle_service	typeref:typename:scheduler_impl &
scheduler_	asio/include/asio/detail/winrt_async_manager.hpp	/^  scheduler_impl& scheduler_;$/;"	m	class:asio::detail::winrt_async_manager	typeref:typename:scheduler_impl &
scheduler_	asio/include/asio/detail/winrt_resolver_service.hpp	/^  scheduler_impl& scheduler_;$/;"	m	class:asio::detail::winrt_resolver_service	typeref:typename:scheduler_impl &
scheduler_	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  scheduler_impl& scheduler_;$/;"	m	class:asio::detail::winrt_ssocket_service_base	typeref:typename:scheduler_impl &
scheduler_	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^  scheduler_impl& scheduler_;$/;"	m	class:asio::detail::winrt_timer_scheduler	typeref:typename:scheduler_impl &
scheduler_	asio/include/asio/system_context.hpp	/^  detail::scheduler& scheduler_;$/;"	m	class:asio::system_context	typeref:typename:detail::scheduler &
scheduler_	asio/include/asio/thread_pool.hpp	/^  detail::scheduler& scheduler_;$/;"	m	class:asio::thread_pool	typeref:typename:detail::scheduler &
scheduler_impl	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  typedef class scheduler scheduler_impl;$/;"	t	class:asio::detail::resolve_endpoint_op	typeref:class:scheduler
scheduler_impl	asio/include/asio/detail/resolve_endpoint_op.hpp	/^  typedef class win_iocp_io_context scheduler_impl;$/;"	t	class:asio::detail::resolve_endpoint_op	typeref:class:win_iocp_io_context
scheduler_impl	asio/include/asio/detail/resolve_query_op.hpp	/^  typedef class scheduler scheduler_impl;$/;"	t	class:asio::detail::resolve_query_op	typeref:class:scheduler
scheduler_impl	asio/include/asio/detail/resolve_query_op.hpp	/^  typedef class win_iocp_io_context scheduler_impl;$/;"	t	class:asio::detail::resolve_query_op	typeref:class:win_iocp_io_context
scheduler_impl	asio/include/asio/detail/resolver_service_base.hpp	/^  typedef class scheduler scheduler_impl;$/;"	t	class:asio::detail::resolver_service_base	typeref:class:scheduler
scheduler_impl	asio/include/asio/detail/resolver_service_base.hpp	/^  typedef class win_iocp_io_context scheduler_impl;$/;"	t	class:asio::detail::resolver_service_base	typeref:class:win_iocp_io_context
scheduler_impl	asio/include/asio/detail/signal_set_service.hpp	/^  typedef class scheduler scheduler_impl;$/;"	t	class:asio::detail::signal_set_service	typeref:class:scheduler
scheduler_impl	asio/include/asio/detail/signal_set_service.hpp	/^  typedef class win_iocp_io_context scheduler_impl;$/;"	t	class:asio::detail::signal_set_service	typeref:class:win_iocp_io_context
scheduler_impl	asio/include/asio/detail/win_object_handle_service.hpp	/^  typedef class scheduler scheduler_impl;$/;"	t	class:asio::detail::win_object_handle_service	typeref:class:scheduler
scheduler_impl	asio/include/asio/detail/win_object_handle_service.hpp	/^  typedef class win_iocp_io_context scheduler_impl;$/;"	t	class:asio::detail::win_object_handle_service	typeref:class:win_iocp_io_context
scheduler_impl	asio/include/asio/detail/winrt_async_manager.hpp	/^  typedef class win_iocp_io_context scheduler_impl;$/;"	t	class:asio::detail::winrt_async_manager	typeref:class:win_iocp_io_context
scheduler_impl	asio/include/asio/detail/winrt_resolver_service.hpp	/^  typedef class win_iocp_io_context scheduler_impl;$/;"	t	class:asio::detail::winrt_resolver_service	typeref:class:win_iocp_io_context
scheduler_impl	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  typedef class scheduler scheduler_impl;$/;"	t	class:asio::detail::winrt_ssocket_service_base	typeref:class:scheduler
scheduler_impl	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  typedef class win_iocp_io_context scheduler_impl;$/;"	t	class:asio::detail::winrt_ssocket_service_base	typeref:class:win_iocp_io_context
scheduler_impl	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^  typedef class scheduler scheduler_impl;$/;"	t	class:asio::detail::winrt_timer_scheduler	typeref:class:scheduler
scheduler_impl	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^  typedef class win_iocp_io_context scheduler_impl;$/;"	t	class:asio::detail::winrt_timer_scheduler	typeref:class:win_iocp_io_context
scheduler_operation	asio/include/asio/detail/scheduler_operation.hpp	/^  scheduler_operation(func_type func)$/;"	f	class:asio::detail::ASIO_INHERIT_TRACKED_HANDLER
scheduler_thread_info	asio/include/asio/detail/scheduler_thread_info.hpp	/^struct scheduler_thread_info : public thread_info_base$/;"	s	namespace:asio::detail
scheduler_type	asio/include/asio/detail/select_reactor.hpp	/^  typedef class scheduler scheduler_type;$/;"	t	class:asio::detail::select_reactor	typeref:class:scheduler
scheduler_type	asio/include/asio/detail/select_reactor.hpp	/^  typedef class win_iocp_io_context scheduler_type;$/;"	t	class:asio::detail::select_reactor	typeref:class:win_iocp_io_context
scope	asio/src/doc/tutorial.xsl	/^            <xsl:variable name="scope">$/;"	v	matchedTemplate:ref[@kindref='member']
scope_id	asio/include/asio/ip/address_v6.hpp	/^  unsigned long scope_id() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v6	typeref:typename:unsigned long
scope_id	asio/include/asio/ip/address_v6.hpp	/^  void scope_id(unsigned long id) ASIO_NOEXCEPT$/;"	f	class:asio::ip::address_v6	typeref:typename:void
scope_id_	asio/include/asio/ip/address_v6.hpp	/^  unsigned long scope_id_;$/;"	m	class:asio::ip::address_v6	typeref:typename:unsigned long
scoped-text	asio/src/doc/tutorial.xsl	/^  <xsl:variable name="scoped-text">$/;"	v	namedTemplate:refid-to-anchor
scoped_lock	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    explicit scoped_lock(conditionally_enabled_mutex& m)$/;"	f	class:asio::detail::conditionally_enabled_mutex::scoped_lock
scoped_lock	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    scoped_lock(conditionally_enabled_mutex& m, adopt_lock_t)$/;"	f	class:asio::detail::conditionally_enabled_mutex::scoped_lock
scoped_lock	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^  class scoped_lock$/;"	c	class:asio::detail::conditionally_enabled_mutex
scoped_lock	asio/include/asio/detail/null_mutex.hpp	/^  typedef asio::detail::scoped_lock<null_mutex> scoped_lock;$/;"	t	class:asio::detail::null_mutex	typeref:typename:asio::detail::scoped_lock<null_mutex>
scoped_lock	asio/include/asio/detail/null_static_mutex.hpp	/^  typedef asio::detail::scoped_lock<null_static_mutex> scoped_lock;$/;"	t	struct:asio::detail::null_static_mutex	typeref:typename:asio::detail::scoped_lock<null_static_mutex>
scoped_lock	asio/include/asio/detail/posix_mutex.hpp	/^  typedef asio::detail::scoped_lock<posix_mutex> scoped_lock;$/;"	t	class:asio::detail::posix_mutex	typeref:typename:asio::detail::scoped_lock<posix_mutex>
scoped_lock	asio/include/asio/detail/posix_static_mutex.hpp	/^  typedef asio::detail::scoped_lock<posix_static_mutex> scoped_lock;$/;"	t	struct:asio::detail::posix_static_mutex	typeref:typename:asio::detail::scoped_lock<posix_static_mutex>
scoped_lock	asio/include/asio/detail/scoped_lock.hpp	/^  explicit scoped_lock(Mutex& m)$/;"	f	class:asio::detail::scoped_lock
scoped_lock	asio/include/asio/detail/scoped_lock.hpp	/^  scoped_lock(Mutex& m, adopt_lock_t)$/;"	f	class:asio::detail::scoped_lock
scoped_lock	asio/include/asio/detail/scoped_lock.hpp	/^class scoped_lock$/;"	c	namespace:asio::detail
scoped_lock	asio/include/asio/detail/std_mutex.hpp	/^  typedef asio::detail::scoped_lock<std_mutex> scoped_lock;$/;"	t	class:asio::detail::std_mutex	typeref:typename:asio::detail::scoped_lock<std_mutex>
scoped_lock	asio/include/asio/detail/std_static_mutex.hpp	/^  typedef asio::detail::scoped_lock<std_static_mutex> scoped_lock;$/;"	t	class:asio::detail::std_static_mutex	typeref:typename:asio::detail::scoped_lock<std_static_mutex>
scoped_lock	asio/include/asio/detail/win_mutex.hpp	/^  typedef asio::detail::scoped_lock<win_mutex> scoped_lock;$/;"	t	class:asio::detail::win_mutex	typeref:typename:asio::detail::scoped_lock<win_mutex>
scoped_lock	asio/include/asio/detail/win_static_mutex.hpp	/^  typedef asio::detail::scoped_lock<win_static_mutex> scoped_lock;$/;"	t	struct:asio::detail::win_static_mutex	typeref:typename:asio::detail::scoped_lock<win_static_mutex>
scoped_ptr	asio/include/asio/detail/scoped_ptr.hpp	/^  explicit scoped_ptr(T* p = 0)$/;"	f	class:asio::detail::scoped_ptr
scoped_ptr	asio/include/asio/detail/scoped_ptr.hpp	/^class scoped_ptr$/;"	c	namespace:asio::detail
search_file	asio/src/examples/cpp03/spawn/parallel_grep.cpp	/^void search_file(std::string search_string, std::string input_file,$/;"	f	typeref:typename:void
search_position_	asio/include/asio/impl/read_until.hpp	/^    std::size_t search_position_;$/;"	m	class:asio::detail::read_until_delim_op_v1	typeref:typename:std::size_t
search_position_	asio/include/asio/impl/read_until.hpp	/^    std::size_t search_position_;$/;"	m	class:asio::detail::read_until_delim_op_v2	typeref:typename:std::size_t
search_position_	asio/include/asio/impl/read_until.hpp	/^    std::size_t search_position_;$/;"	m	class:asio::detail::read_until_delim_string_op_v1	typeref:typename:std::size_t
search_position_	asio/include/asio/impl/read_until.hpp	/^    std::size_t search_position_;$/;"	m	class:asio::detail::read_until_delim_string_op_v2	typeref:typename:std::size_t
search_position_	asio/include/asio/impl/read_until.hpp	/^    std::size_t search_position_;$/;"	m	class:asio::detail::read_until_expr_op_v1	typeref:typename:std::size_t
search_position_	asio/include/asio/impl/read_until.hpp	/^    std::size_t search_position_;$/;"	m	class:asio::detail::read_until_expr_op_v2	typeref:typename:std::size_t
search_position_	asio/include/asio/impl/read_until.hpp	/^    std::size_t search_position_;$/;"	m	class:asio::detail::read_until_match_op_v1	typeref:typename:std::size_t
search_position_	asio/include/asio/impl/read_until.hpp	/^    std::size_t search_position_;$/;"	m	class:asio::detail::read_until_match_op_v2	typeref:typename:std::size_t
second_argument_type	asio/include/asio/bind_executor.hpp	/^  typedef A2 second_argument_type;$/;"	t	struct:asio::detail::executor_binder_argument_type	typeref:typename:A2
second_argument_type	asio/include/asio/bind_executor.hpp	/^  typedef see_below second_argument_type;$/;"	t	class:asio::executor_binder	typeref:typename:see_below
second_argument_type	asio/include/asio/bind_executor.hpp	/^  typedef typename T::second_argument_type second_argument_type;$/;"	t	struct:asio::detail::executor_binder_argument_types	typeref:typename:T::second_argument_type
section[@id='asio.examples']/*/listitem	asio/src/doc/asioref.xsl	/^<xsl:template match="section[@id='asio.examples']\/*\/listitem">$/;"	m
section[@id='asio.index']	asio/src/doc/asioref.xsl	/^<xsl:template match="section[@id='asio.index']"><\/xsl:template>$/;"	m
section[@id='asio.reference']/informaltable	asio/src/doc/asioref.xsl	/^<xsl:template match="section[@id='asio.reference']\/informaltable">$/;"	m
select_interrupter	asio/include/asio/detail/select_interrupter.hpp	/^typedef socket_select_interrupter select_interrupter;$/;"	t	namespace:asio::detail	typeref:typename:socket_select_interrupter
select_reactor	asio/include/asio/detail/select_reactor.hpp	/^class select_reactor$/;"	c	namespace:asio::detail
self_	asio/include/asio/basic_datagram_socket.hpp	/^    basic_datagram_socket* self_;$/;"	m	class:asio::basic_datagram_socket::initiate_async_receive	typeref:typename:basic_datagram_socket *
self_	asio/include/asio/basic_datagram_socket.hpp	/^    basic_datagram_socket* self_;$/;"	m	class:asio::basic_datagram_socket::initiate_async_receive_from	typeref:typename:basic_datagram_socket *
self_	asio/include/asio/basic_datagram_socket.hpp	/^    basic_datagram_socket* self_;$/;"	m	class:asio::basic_datagram_socket::initiate_async_send	typeref:typename:basic_datagram_socket *
self_	asio/include/asio/basic_datagram_socket.hpp	/^    basic_datagram_socket* self_;$/;"	m	class:asio::basic_datagram_socket::initiate_async_send_to	typeref:typename:basic_datagram_socket *
self_	asio/include/asio/basic_deadline_timer.hpp	/^    basic_deadline_timer* self_;$/;"	m	class:asio::basic_deadline_timer::initiate_async_wait	typeref:typename:basic_deadline_timer *
self_	asio/include/asio/basic_raw_socket.hpp	/^    basic_raw_socket* self_;$/;"	m	class:asio::basic_raw_socket::initiate_async_receive	typeref:typename:basic_raw_socket *
self_	asio/include/asio/basic_raw_socket.hpp	/^    basic_raw_socket* self_;$/;"	m	class:asio::basic_raw_socket::initiate_async_receive_from	typeref:typename:basic_raw_socket *
self_	asio/include/asio/basic_raw_socket.hpp	/^    basic_raw_socket* self_;$/;"	m	class:asio::basic_raw_socket::initiate_async_send	typeref:typename:basic_raw_socket *
self_	asio/include/asio/basic_raw_socket.hpp	/^    basic_raw_socket* self_;$/;"	m	class:asio::basic_raw_socket::initiate_async_send_to	typeref:typename:basic_raw_socket *
self_	asio/include/asio/basic_seq_packet_socket.hpp	/^    basic_seq_packet_socket* self_;$/;"	m	class:asio::basic_seq_packet_socket::initiate_async_receive_with_flags	typeref:typename:basic_seq_packet_socket *
self_	asio/include/asio/basic_seq_packet_socket.hpp	/^    basic_seq_packet_socket* self_;$/;"	m	class:asio::basic_seq_packet_socket::initiate_async_send	typeref:typename:basic_seq_packet_socket *
self_	asio/include/asio/basic_serial_port.hpp	/^    basic_serial_port* self_;$/;"	m	class:asio::basic_serial_port::initiate_async_read_some	typeref:typename:basic_serial_port *
self_	asio/include/asio/basic_serial_port.hpp	/^    basic_serial_port* self_;$/;"	m	class:asio::basic_serial_port::initiate_async_write_some	typeref:typename:basic_serial_port *
self_	asio/include/asio/basic_signal_set.hpp	/^    basic_signal_set* self_;$/;"	m	class:asio::basic_signal_set::initiate_async_wait	typeref:typename:basic_signal_set *
self_	asio/include/asio/basic_socket.hpp	/^    basic_socket* self_;$/;"	m	class:asio::basic_socket::initiate_async_connect	typeref:typename:basic_socket *
self_	asio/include/asio/basic_socket.hpp	/^    basic_socket* self_;$/;"	m	class:asio::basic_socket::initiate_async_wait	typeref:typename:basic_socket *
self_	asio/include/asio/basic_socket_acceptor.hpp	/^    basic_socket_acceptor* self_;$/;"	m	class:asio::basic_socket_acceptor::initiate_async_accept	typeref:typename:basic_socket_acceptor *
self_	asio/include/asio/basic_socket_acceptor.hpp	/^    basic_socket_acceptor* self_;$/;"	m	class:asio::basic_socket_acceptor::initiate_async_move_accept	typeref:typename:basic_socket_acceptor *
self_	asio/include/asio/basic_socket_acceptor.hpp	/^    basic_socket_acceptor* self_;$/;"	m	class:asio::basic_socket_acceptor::initiate_async_wait	typeref:typename:basic_socket_acceptor *
self_	asio/include/asio/basic_stream_socket.hpp	/^    basic_stream_socket* self_;$/;"	m	class:asio::basic_stream_socket::initiate_async_receive	typeref:typename:basic_stream_socket *
self_	asio/include/asio/basic_stream_socket.hpp	/^    basic_stream_socket* self_;$/;"	m	class:asio::basic_stream_socket::initiate_async_send	typeref:typename:basic_stream_socket *
self_	asio/include/asio/basic_waitable_timer.hpp	/^    basic_waitable_timer* self_;$/;"	m	class:asio::basic_waitable_timer::initiate_async_wait	typeref:typename:basic_waitable_timer *
self_	asio/include/asio/ip/basic_resolver.hpp	/^    basic_resolver* self_;$/;"	m	class:asio::ip::basic_resolver::initiate_async_resolve	typeref:typename:basic_resolver *
self_	asio/include/asio/posix/basic_descriptor.hpp	/^    basic_descriptor* self_;$/;"	m	class:asio::posix::basic_descriptor::initiate_async_wait	typeref:typename:basic_descriptor *
self_	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    basic_stream_descriptor* self_;$/;"	m	class:asio::posix::basic_stream_descriptor::initiate_async_read_some	typeref:typename:basic_stream_descriptor *
self_	asio/include/asio/posix/basic_stream_descriptor.hpp	/^    basic_stream_descriptor* self_;$/;"	m	class:asio::posix::basic_stream_descriptor::initiate_async_write_some	typeref:typename:basic_stream_descriptor *
self_	asio/include/asio/ssl/stream.hpp	/^    stream* self_;$/;"	m	class:asio::ssl::stream::initiate_async_buffered_handshake	typeref:typename:stream *
self_	asio/include/asio/ssl/stream.hpp	/^    stream* self_;$/;"	m	class:asio::ssl::stream::initiate_async_handshake	typeref:typename:stream *
self_	asio/include/asio/ssl/stream.hpp	/^    stream* self_;$/;"	m	class:asio::ssl::stream::initiate_async_read_some	typeref:typename:stream *
self_	asio/include/asio/ssl/stream.hpp	/^    stream* self_;$/;"	m	class:asio::ssl::stream::initiate_async_shutdown	typeref:typename:stream *
self_	asio/include/asio/ssl/stream.hpp	/^    stream* self_;$/;"	m	class:asio::ssl::stream::initiate_async_write_some	typeref:typename:stream *
self_	asio/include/asio/windows/basic_object_handle.hpp	/^    basic_object_handle* self_;$/;"	m	class:asio::windows::basic_object_handle::initiate_async_wait	typeref:typename:basic_object_handle *
self_	asio/include/asio/windows/basic_random_access_handle.hpp	/^    basic_random_access_handle* self_;$/;"	m	class:asio::windows::basic_random_access_handle::initiate_async_read_some_at	typeref:typename:basic_random_access_handle *
self_	asio/include/asio/windows/basic_random_access_handle.hpp	/^    basic_random_access_handle* self_;$/;"	m	class:asio::windows::basic_random_access_handle::initiate_async_write_some_at	typeref:typename:basic_random_access_handle *
self_	asio/include/asio/windows/basic_stream_handle.hpp	/^    basic_stream_handle* self_;$/;"	m	class:asio::windows::basic_stream_handle::initiate_async_read_some	typeref:typename:basic_stream_handle *
self_	asio/include/asio/windows/basic_stream_handle.hpp	/^    basic_stream_handle* self_;$/;"	m	class:asio::windows::basic_stream_handle::initiate_async_write_some	typeref:typename:basic_stream_handle *
sell_price	asio/src/examples/cpp03/serialization/stock.hpp	/^  double sell_price;$/;"	m	struct:s11n_example::stock	typeref:typename:double
sell_quantity	asio/src/examples/cpp03/serialization/stock.hpp	/^  int sell_quantity;$/;"	m	struct:s11n_example::stock	typeref:typename:int
send	asio/include/asio/basic_datagram_socket.hpp	/^  std::size_t send(const ConstBufferSequence& buffers)$/;"	f	class:asio::basic_datagram_socket	typeref:typename:std::size_t
send	asio/include/asio/basic_datagram_socket.hpp	/^  std::size_t send(const ConstBufferSequence& buffers,$/;"	f	class:asio::basic_datagram_socket	typeref:typename:std::size_t
send	asio/include/asio/basic_raw_socket.hpp	/^  std::size_t send(const ConstBufferSequence& buffers)$/;"	f	class:asio::basic_raw_socket	typeref:typename:std::size_t
send	asio/include/asio/basic_raw_socket.hpp	/^  std::size_t send(const ConstBufferSequence& buffers,$/;"	f	class:asio::basic_raw_socket	typeref:typename:std::size_t
send	asio/include/asio/basic_seq_packet_socket.hpp	/^  std::size_t send(const ConstBufferSequence& buffers,$/;"	f	class:asio::basic_seq_packet_socket	typeref:typename:std::size_t
send	asio/include/asio/basic_stream_socket.hpp	/^  std::size_t send(const ConstBufferSequence& buffers)$/;"	f	class:asio::basic_stream_socket	typeref:typename:std::size_t
send	asio/include/asio/basic_stream_socket.hpp	/^  std::size_t send(const ConstBufferSequence& buffers,$/;"	f	class:asio::basic_stream_socket	typeref:typename:std::size_t
send	asio/include/asio/detail/null_socket_service.hpp	/^  std::size_t send(implementation_type&, const ConstBufferSequence&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:std::size_t
send	asio/include/asio/detail/null_socket_service.hpp	/^  std::size_t send(implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:std::size_t
send	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  size_t send(base_implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:size_t
send	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  size_t send(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:size_t
send	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  size_t send(base_implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:size_t
send	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  size_t send(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:size_t
send	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  std::size_t send(base_implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:std::size_t
send	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^  std::size_t send(base_implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::winrt_ssocket_service_base	typeref:typename:std::size_t
send	asio/src/examples/cpp11/executors/actor.cpp	/^  friend void send(Message msg, actor_address from, actor_address to)$/;"	f	typeref:typename:void	file:
send	asio/src/examples/cpp14/executors/actor.cpp	/^  friend void send(Message msg, actor_address from, actor_address to)$/;"	f	typeref:typename:void	file:
send_break	asio/include/asio/basic_serial_port.hpp	/^  ASIO_SYNC_OP_VOID send_break(asio::error_code& ec)$/;"	f	class:asio::basic_serial_port	typeref:typename:ASIO_SYNC_OP_VOID
send_break	asio/include/asio/basic_serial_port.hpp	/^  void send_break()$/;"	f	class:asio::basic_serial_port	typeref:typename:void
send_break	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  asio::error_code send_break(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:asio::error_code
send_break	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  asio::error_code send_break(implementation_type&,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:asio::error_code
send_buffer_size	asio/include/asio/socket_base.hpp	/^      send_buffer_size;$/;"	t	class:asio::socket_base
send_buffer_size	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined send_buffer_size;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
send_handler	asio/src/tests/unit/generic/datagram_protocol.cpp	/^void send_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:generic_datagram_protocol_socket_compile	typeref:typename:void
send_handler	asio/src/tests/unit/generic/raw_protocol.cpp	/^void send_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:generic_raw_protocol_socket_compile	typeref:typename:void
send_handler	asio/src/tests/unit/generic/seq_packet_protocol.cpp	/^void send_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:generic_seq_packet_protocol_socket_compile	typeref:typename:void
send_handler	asio/src/tests/unit/generic/stream_protocol.cpp	/^void send_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:generic_stream_protocol_socket_compile	typeref:typename:void
send_handler	asio/src/tests/unit/ip/icmp.cpp	/^  send_handler() {}$/;"	f	struct:ip_icmp_socket_compile::send_handler	file:
send_handler	asio/src/tests/unit/ip/icmp.cpp	/^  send_handler(send_handler&&) {}$/;"	f	struct:ip_icmp_socket_compile::send_handler	file:
send_handler	asio/src/tests/unit/ip/icmp.cpp	/^struct send_handler$/;"	s	namespace:ip_icmp_socket_compile	file:
send_handler	asio/src/tests/unit/ip/tcp.cpp	/^  send_handler() {}$/;"	f	struct:ip_tcp_socket_compile::send_handler	file:
send_handler	asio/src/tests/unit/ip/tcp.cpp	/^  send_handler(send_handler&&) {}$/;"	f	struct:ip_tcp_socket_compile::send_handler	file:
send_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct send_handler$/;"	s	namespace:ip_tcp_socket_compile	file:
send_handler	asio/src/tests/unit/ip/udp.cpp	/^  send_handler() {}$/;"	f	struct:ip_udp_socket_compile::send_handler	file:
send_handler	asio/src/tests/unit/ip/udp.cpp	/^  send_handler(send_handler&&) {}$/;"	f	struct:ip_udp_socket_compile::send_handler	file:
send_handler	asio/src/tests/unit/ip/udp.cpp	/^struct send_handler$/;"	s	namespace:ip_udp_socket_compile	file:
send_handler	asio/src/tests/unit/local/datagram_protocol.cpp	/^void send_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:local_datagram_protocol_socket_compile	typeref:typename:void
send_handler	asio/src/tests/unit/local/stream_protocol.cpp	/^void send_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:local_stream_protocol_socket_compile	typeref:typename:void
send_low_watermark	asio/include/asio/socket_base.hpp	/^      send_low_watermark;$/;"	t	class:asio::socket_base
send_low_watermark	asio/include/asio/socket_base.hpp	/^  typedef implementation_defined send_low_watermark;$/;"	t	class:asio::socket_base	typeref:typename:implementation_defined
send_request	asio/src/examples/cpp11/ssl/client.cpp	/^  void send_request()$/;"	f	class:client	typeref:typename:void	file:
send_to	asio/include/asio/basic_datagram_socket.hpp	/^  std::size_t send_to(const ConstBufferSequence& buffers,$/;"	f	class:asio::basic_datagram_socket	typeref:typename:std::size_t
send_to	asio/include/asio/basic_raw_socket.hpp	/^  std::size_t send_to(const ConstBufferSequence& buffers,$/;"	f	class:asio::basic_raw_socket	typeref:typename:std::size_t
send_to	asio/include/asio/detail/null_socket_service.hpp	/^  std::size_t send_to(implementation_type&, const ConstBufferSequence&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:std::size_t
send_to	asio/include/asio/detail/null_socket_service.hpp	/^  std::size_t send_to(implementation_type&, const null_buffers&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:std::size_t
send_to	asio/include/asio/detail/reactive_socket_service.hpp	/^  size_t send_to(implementation_type& impl, const ConstBufferSequence& buffers,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:size_t
send_to	asio/include/asio/detail/reactive_socket_service.hpp	/^  size_t send_to(implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:size_t
send_to	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  size_t send_to(implementation_type& impl, const ConstBufferSequence& buffers,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:size_t
send_to	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  size_t send_to(implementation_type& impl, const null_buffers&,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:size_t
sender	asio/src/examples/cpp03/multicast/sender.cpp	/^  sender(asio::io_context& io_context,$/;"	f	class:sender	file:
sender	asio/src/examples/cpp03/multicast/sender.cpp	/^class sender$/;"	c	file:
sender	asio/src/examples/cpp11/multicast/sender.cpp	/^  sender(asio::io_context& io_context,$/;"	f	class:sender	file:
sender	asio/src/examples/cpp11/multicast/sender.cpp	/^class sender$/;"	c	file:
sender_	asio/src/tests/latency/tcp_server.cpp	/^  tcp::endpoint sender_;$/;"	m	class:tcp_server	typeref:typename:tcp::endpoint	file:
sender_	asio/src/tests/latency/udp_server.cpp	/^  udp::endpoint sender_;$/;"	m	class:udp_server	typeref:typename:udp::endpoint	file:
sender_endpoint_	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  Endpoint& sender_endpoint_;$/;"	m	class:asio::detail::reactive_socket_recvfrom_op_base	typeref:typename:Endpoint &
sender_endpoint_	asio/src/examples/cpp03/echo/async_udp_echo_server.cpp	/^  udp::endpoint sender_endpoint_;$/;"	m	class:server	typeref:typename:udp::endpoint	file:
sender_endpoint_	asio/src/examples/cpp03/multicast/receiver.cpp	/^  asio::ip::udp::endpoint sender_endpoint_;$/;"	m	class:receiver	typeref:typename:asio::ip::udp::endpoint	file:
sender_endpoint_	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^  udp::endpoint sender_endpoint_;$/;"	m	class:server	typeref:typename:udp::endpoint	file:
sender_endpoint_	asio/src/examples/cpp11/multicast/receiver.cpp	/^  asio::ip::udp::endpoint sender_endpoint_;$/;"	m	class:receiver	typeref:typename:asio::ip::udp::endpoint	file:
sender_endpoint_	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^  udp::endpoint sender_endpoint_;$/;"	m	class:server	typeref:typename:udp::endpoint	file:
separate-compilation	asio/configure.ac	/^AC_ARG_ENABLE(separate-compilation,$/;"	e
seq_packet_protocol	asio/include/asio/generic/seq_packet_protocol.hpp	/^  seq_packet_protocol(const Protocol& source_protocol)$/;"	f	class:asio::generic::seq_packet_protocol
seq_packet_protocol	asio/include/asio/generic/seq_packet_protocol.hpp	/^  seq_packet_protocol(int address_family, int socket_protocol)$/;"	f	class:asio::generic::seq_packet_protocol
seq_packet_protocol	asio/include/asio/generic/seq_packet_protocol.hpp	/^class seq_packet_protocol$/;"	c	namespace:asio::generic
sequence_number	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  unsigned short sequence_number() const { return decode(6, 7); }$/;"	f	class:icmp_header	typeref:typename:unsigned short
sequence_number	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  void sequence_number(unsigned short n) { encode(6, 7, n); }$/;"	f	class:icmp_header	typeref:typename:void
sequence_number_	asio/src/examples/cpp03/icmp/ping.cpp	/^  unsigned short sequence_number_;$/;"	m	class:pinger	typeref:typename:unsigned short	file:
serial_port	asio/include/asio/serial_port.hpp	/^typedef basic_serial_port<> serial_port;$/;"	t	namespace:asio	typeref:typename:basic_serial_port<>
serial_port_base	asio/include/asio/serial_port_base.hpp	/^class serial_port_base$/;"	c	namespace:asio
serial_port_base_compile	asio/src/tests/unit/serial_port_base.cpp	/^namespace serial_port_base_compile {$/;"	n	file:
serial_port_compile	asio/src/tests/unit/serial_port.cpp	/^namespace serial_port_compile {$/;"	n	file:
serialize	asio/src/examples/cpp03/serialization/stock.hpp	/^  void serialize(Archive& ar, const unsigned int version)$/;"	f	struct:s11n_example::stock	typeref:typename:void
server	asio/include/asio/ssl/stream_base.hpp	/^    server$/;"	e	enum:asio::ssl::stream_base::handshake_type
server	asio/src/examples/cpp03/allocation/server.cpp	/^  server(asio::io_context& io_context, short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp03/allocation/server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  server(asio::io_context& io_context, short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  server(asio::io_context& io_context, short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp03/echo/async_udp_echo_server.cpp	/^  server(asio::io_context& io_context, short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp03/echo/async_udp_echo_server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp03/echo/blocking_tcp_echo_server.cpp	/^void server(asio::io_context& io_context, unsigned short port)$/;"	f	typeref:typename:void
server	asio/src/examples/cpp03/echo/blocking_udp_echo_server.cpp	/^void server(asio::io_context& io_context, unsigned short port)$/;"	f	typeref:typename:void
server	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  server(asio::io_context& io_context, unsigned short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp03/http/server/connection.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp03/http/server/connection.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp03/http/server/connection_manager.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp03/http/server/connection_manager.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp03/http/server/header.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp03/http/server/mime_types.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp03/http/server/mime_types.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp03/http/server/reply.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp03/http/server/reply.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp03/http/server/request.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp03/http/server/request_handler.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp03/http/server/request_handler.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp03/http/server/request_parser.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp03/http/server/request_parser.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp03/http/server/server.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp03/http/server/server.cpp	/^server::server(const std::string& address, const std::string& port,$/;"	f	class:http::server::server
server	asio/src/examples/cpp03/http/server/server.hpp	/^class server$/;"	c	namespace:http::server
server	asio/src/examples/cpp03/http/server/server.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp03/http/server2/server.cpp	/^server::server(const std::string& address, const std::string& port,$/;"	f	class:http::server2::server
server	asio/src/examples/cpp03/http/server2/server.hpp	/^class server$/;"	c	namespace:http::server2
server	asio/src/examples/cpp03/http/server3/server.cpp	/^server::server(const std::string& address, const std::string& port,$/;"	f	class:http::server3::server
server	asio/src/examples/cpp03/http/server3/server.hpp	/^class server$/;"	c	namespace:http::server3
server	asio/src/examples/cpp03/http/server4/server.cpp	/^server::server(asio::io_context& io_context,$/;"	f	class:http::server4::server
server	asio/src/examples/cpp03/http/server4/server.hpp	/^class server : asio::coroutine$/;"	c	namespace:http::server4
server	asio/src/examples/cpp03/local/stream_server.cpp	/^  server(asio::io_context& io_context, const std::string& file)$/;"	f	class:server	file:
server	asio/src/examples/cpp03/local/stream_server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  server(asio::io_context& io_context, unsigned short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp03/porthopper/server.cpp	/^  server(asio::io_context& io_context, unsigned short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp03/porthopper/server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp03/serialization/server.cpp	/^  server(asio::io_context& io_context, unsigned short port)$/;"	f	class:s11n_example::server	file:
server	asio/src/examples/cpp03/serialization/server.cpp	/^class server$/;"	c	namespace:s11n_example	file:
server	asio/src/examples/cpp03/ssl/server.cpp	/^  server(asio::io_context& io_context, unsigned short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp03/ssl/server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp03/timeouts/server.cpp	/^  server(asio::io_context& io_context,$/;"	f	class:server	file:
server	asio/src/examples/cpp03/timeouts/server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  server(asio::io_context& io_context,$/;"	f	class:server	file:
server	asio/src/examples/cpp03/windows/transmit_file.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp11/allocation/server.cpp	/^  server(asio::io_context& io_context, short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp11/allocation/server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  server(asio::io_context& io_context, short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  server(asio::io_context& io_context, short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^  server(asio::io_context& io_context, short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp11/echo/blocking_tcp_echo_server.cpp	/^void server(asio::io_context& io_context, unsigned short port)$/;"	f	typeref:typename:void
server	asio/src/examples/cpp11/echo/blocking_udp_echo_server.cpp	/^void server(asio::io_context& io_context, unsigned short port)$/;"	f	typeref:typename:void
server	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^  server(asio::io_context& io_context, unsigned short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp11/http/server/connection.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp11/http/server/connection.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp11/http/server/connection_manager.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp11/http/server/connection_manager.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp11/http/server/header.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp11/http/server/mime_types.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp11/http/server/mime_types.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp11/http/server/reply.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp11/http/server/reply.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp11/http/server/request.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp11/http/server/request_handler.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp11/http/server/request_handler.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp11/http/server/request_parser.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp11/http/server/request_parser.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp11/http/server/server.cpp	/^namespace server {$/;"	n	namespace:http	file:
server	asio/src/examples/cpp11/http/server/server.cpp	/^server::server(const std::string& address, const std::string& port,$/;"	f	class:http::server::server
server	asio/src/examples/cpp11/http/server/server.hpp	/^class server$/;"	c	namespace:http::server
server	asio/src/examples/cpp11/http/server/server.hpp	/^namespace server {$/;"	n	namespace:http
server	asio/src/examples/cpp11/local/stream_server.cpp	/^  server(asio::io_context& io_context, const std::string& file)$/;"	f	class:server	file:
server	asio/src/examples/cpp11/local/stream_server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  server(asio::io_context& io_context, unsigned short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp11/ssl/server.cpp	/^  server(asio::io_context& io_context, unsigned short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp11/ssl/server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp11/timeouts/server.cpp	/^  server(asio::io_context& io_context,$/;"	f	class:server	file:
server	asio/src/examples/cpp11/timeouts/server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  server(asio::io_context& io_context, short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^  server(asio::io_context& io_context, short port)$/;"	f	class:server	file:
server	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^class server$/;"	c	file:
server	asio/src/examples/cpp14/echo/blocking_tcp_echo_server.cpp	/^void server(asio::io_context& io_context, unsigned short port)$/;"	f	typeref:typename:void
server	asio/src/examples/cpp14/echo/blocking_udp_echo_server.cpp	/^void server(asio::io_context& io_context, unsigned short port)$/;"	f	typeref:typename:void
server	asio/src/tests/performance/server.cpp	/^  server(asio::io_context& ioc, const asio::ip::tcp::endpoint& endpoint,$/;"	f	class:server	file:
server	asio/src/tests/performance/server.cpp	/^class server$/;"	c	file:
server2	asio/src/examples/cpp03/http/server2/connection.cpp	/^namespace server2 {$/;"	n	namespace:http	file:
server2	asio/src/examples/cpp03/http/server2/connection.hpp	/^namespace server2 {$/;"	n	namespace:http
server2	asio/src/examples/cpp03/http/server2/header.hpp	/^namespace server2 {$/;"	n	namespace:http
server2	asio/src/examples/cpp03/http/server2/io_context_pool.cpp	/^namespace server2 {$/;"	n	namespace:http	file:
server2	asio/src/examples/cpp03/http/server2/io_context_pool.hpp	/^namespace server2 {$/;"	n	namespace:http
server2	asio/src/examples/cpp03/http/server2/mime_types.cpp	/^namespace server2 {$/;"	n	namespace:http	file:
server2	asio/src/examples/cpp03/http/server2/mime_types.hpp	/^namespace server2 {$/;"	n	namespace:http
server2	asio/src/examples/cpp03/http/server2/reply.cpp	/^namespace server2 {$/;"	n	namespace:http	file:
server2	asio/src/examples/cpp03/http/server2/reply.hpp	/^namespace server2 {$/;"	n	namespace:http
server2	asio/src/examples/cpp03/http/server2/request.hpp	/^namespace server2 {$/;"	n	namespace:http
server2	asio/src/examples/cpp03/http/server2/request_handler.cpp	/^namespace server2 {$/;"	n	namespace:http	file:
server2	asio/src/examples/cpp03/http/server2/request_handler.hpp	/^namespace server2 {$/;"	n	namespace:http
server2	asio/src/examples/cpp03/http/server2/request_parser.cpp	/^namespace server2 {$/;"	n	namespace:http	file:
server2	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^namespace server2 {$/;"	n	namespace:http
server2	asio/src/examples/cpp03/http/server2/server.cpp	/^namespace server2 {$/;"	n	namespace:http	file:
server2	asio/src/examples/cpp03/http/server2/server.hpp	/^namespace server2 {$/;"	n	namespace:http
server3	asio/src/examples/cpp03/http/server3/connection.cpp	/^namespace server3 {$/;"	n	namespace:http	file:
server3	asio/src/examples/cpp03/http/server3/connection.hpp	/^namespace server3 {$/;"	n	namespace:http
server3	asio/src/examples/cpp03/http/server3/header.hpp	/^namespace server3 {$/;"	n	namespace:http
server3	asio/src/examples/cpp03/http/server3/mime_types.cpp	/^namespace server3 {$/;"	n	namespace:http	file:
server3	asio/src/examples/cpp03/http/server3/mime_types.hpp	/^namespace server3 {$/;"	n	namespace:http
server3	asio/src/examples/cpp03/http/server3/reply.cpp	/^namespace server3 {$/;"	n	namespace:http	file:
server3	asio/src/examples/cpp03/http/server3/reply.hpp	/^namespace server3 {$/;"	n	namespace:http
server3	asio/src/examples/cpp03/http/server3/request.hpp	/^namespace server3 {$/;"	n	namespace:http
server3	asio/src/examples/cpp03/http/server3/request_handler.cpp	/^namespace server3 {$/;"	n	namespace:http	file:
server3	asio/src/examples/cpp03/http/server3/request_handler.hpp	/^namespace server3 {$/;"	n	namespace:http
server3	asio/src/examples/cpp03/http/server3/request_parser.cpp	/^namespace server3 {$/;"	n	namespace:http	file:
server3	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^namespace server3 {$/;"	n	namespace:http
server3	asio/src/examples/cpp03/http/server3/server.cpp	/^namespace server3 {$/;"	n	namespace:http	file:
server3	asio/src/examples/cpp03/http/server3/server.hpp	/^namespace server3 {$/;"	n	namespace:http
server4	asio/src/examples/cpp03/http/server4/file_handler.cpp	/^namespace server4 {$/;"	n	namespace:http	file:
server4	asio/src/examples/cpp03/http/server4/file_handler.hpp	/^namespace server4 {$/;"	n	namespace:http
server4	asio/src/examples/cpp03/http/server4/header.hpp	/^namespace server4 {$/;"	n	namespace:http
server4	asio/src/examples/cpp03/http/server4/mime_types.cpp	/^namespace server4 {$/;"	n	namespace:http	file:
server4	asio/src/examples/cpp03/http/server4/mime_types.hpp	/^namespace server4 {$/;"	n	namespace:http
server4	asio/src/examples/cpp03/http/server4/reply.cpp	/^namespace server4 {$/;"	n	namespace:http	file:
server4	asio/src/examples/cpp03/http/server4/reply.hpp	/^namespace server4 {$/;"	n	namespace:http
server4	asio/src/examples/cpp03/http/server4/request.hpp	/^namespace server4 {$/;"	n	namespace:http
server4	asio/src/examples/cpp03/http/server4/request_parser.cpp	/^namespace server4 {$/;"	n	namespace:http	file:
server4	asio/src/examples/cpp03/http/server4/request_parser.hpp	/^namespace server4 {$/;"	n	namespace:http
server4	asio/src/examples/cpp03/http/server4/server.cpp	/^namespace server4 {$/;"	n	namespace:http	file:
server4	asio/src/examples/cpp03/http/server4/server.hpp	/^namespace server4 {$/;"	n	namespace:http
service	asio/include/asio/execution_context.hpp	/^class execution_context::service$/;"	c	class:asio::execution_context
service	asio/include/asio/io_context.hpp	/^class io_context::service$/;"	c	class:asio::io_context
service_	asio/include/asio/basic_io_object.hpp	/^  IoObjectService* service_;$/;"	m	class:asio::basic_io_object	typeref:typename:IoObjectService *
service_	asio/include/asio/basic_io_object.hpp	/^  service_type& service_;$/;"	m	class:asio::basic_io_object	typeref:typename:service_type &
service_	asio/include/asio/detail/io_object_impl.hpp	/^  service_type* service_;$/;"	m	class:asio::detail::io_object_impl	typeref:typename:service_type *
service_	asio/include/asio/detail/strand_executor_service.hpp	/^    strand_executor_service* service_;$/;"	m	class:asio::detail::strand_executor_service::strand_impl	typeref:typename:strand_executor_service *
service_	asio/include/asio/io_context_strand.hpp	/^  asio::detail::strand_service& service_;$/;"	m	class:asio::io_context::strand	typeref:typename:asio::detail::strand_service &
service_	asio/src/examples/cpp03/services/basic_logger.hpp	/^  service_type& service_;$/;"	m	class:services::basic_logger	typeref:typename:service_type &
service_already_exists	asio/include/asio/execution_context.hpp	/^class service_already_exists$/;"	c	namespace:asio
service_base	asio/include/asio/io_context.hpp	/^  service_base(asio::io_context& io_context)$/;"	f	class:asio::detail::service_base
service_base	asio/include/asio/io_context.hpp	/^class service_base$/;"	c	namespace:asio::detail
service_has_move	asio/include/asio/basic_io_object.hpp	/^  class service_has_move$/;"	c	namespace:asio::detail
service_id	asio/include/asio/execution_context.hpp	/^class service_id$/;"	c	namespace:asio::detail
service_name	asio/include/asio/ip/basic_resolver_entry.hpp	/^  std::basic_string<char, std::char_traits<char>, Allocator> service_name($/;"	f	class:asio::ip::basic_resolver_entry	typeref:typename:std::basic_string<char,std::char_traits<char>,Allocator>
service_name	asio/include/asio/ip/basic_resolver_entry.hpp	/^  std::string service_name() const$/;"	f	class:asio::ip::basic_resolver_entry	typeref:typename:std::string
service_name	asio/include/asio/ip/basic_resolver_query.hpp	/^  std::string service_name() const$/;"	f	class:asio::ip::basic_resolver_query	typeref:typename:std::string
service_name_	asio/include/asio/ip/basic_resolver_entry.hpp	/^  std::string service_name_;$/;"	m	class:asio::ip::basic_resolver_entry	typeref:typename:std::string
service_name_	asio/include/asio/ip/basic_resolver_query.hpp	/^  std::string service_name_;$/;"	m	class:asio::ip::basic_resolver_query	typeref:typename:std::string
service_not_found	asio/include/asio/error.hpp	/^  service_not_found = ASIO_WIN_OR_POSIX($/;"	e	enum:asio::error::addrinfo_errors
service_registry	asio/include/asio/detail/service_registry.hpp	/^class service_registry$/;"	c	namespace:asio::detail
service_registry_	asio/include/asio/execution_context.hpp	/^  asio::detail::service_registry* service_registry_;$/;"	m	class:asio::execution_context	typeref:typename:asio::detail::service_registry *
service_type	asio/include/asio/basic_io_object.hpp	/^    typedef IoObjectService service_type;$/;"	t	class:asio::detail::service_has_move	typeref:typename:IoObjectService
service_type	asio/include/asio/basic_io_object.hpp	/^  typedef IoObjectService service_type;$/;"	t	class:asio::basic_io_object	typeref:typename:IoObjectService
service_type	asio/include/asio/detail/io_object_impl.hpp	/^  typedef IoObjectService service_type;$/;"	t	class:asio::detail::io_object_impl	typeref:typename:IoObjectService
service_type	asio/src/examples/cpp03/services/basic_logger.hpp	/^  typedef Service service_type;$/;"	t	class:services::basic_logger	typeref:typename:Service
service_unavailable	asio/src/examples/cpp03/http/server/reply.cpp	/^const char service_unavailable[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
service_unavailable	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string service_unavailable =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
service_unavailable	asio/src/examples/cpp03/http/server/reply.hpp	/^    service_unavailable = 503$/;"	e	enum:http::server::reply::status_type
service_unavailable	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char service_unavailable[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
service_unavailable	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string service_unavailable =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
service_unavailable	asio/src/examples/cpp03/http/server2/reply.hpp	/^    service_unavailable = 503$/;"	e	enum:http::server2::reply::status_type
service_unavailable	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char service_unavailable[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
service_unavailable	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string service_unavailable =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
service_unavailable	asio/src/examples/cpp03/http/server3/reply.hpp	/^    service_unavailable = 503$/;"	e	enum:http::server3::reply::status_type
service_unavailable	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char service_unavailable[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
service_unavailable	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string service_unavailable =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
service_unavailable	asio/src/examples/cpp03/http/server4/reply.hpp	/^    service_unavailable = 503$/;"	e	enum:http::server4::reply::status_type
service_unavailable	asio/src/examples/cpp11/http/server/reply.cpp	/^const char service_unavailable[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
service_unavailable	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string service_unavailable =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
service_unavailable	asio/src/examples/cpp11/http/server/reply.hpp	/^    service_unavailable = 503$/;"	e	enum:http::server::reply::status_type
services	asio/src/examples/cpp03/services/basic_logger.hpp	/^namespace services {$/;"	n
services	asio/src/examples/cpp03/services/logger.hpp	/^namespace services {$/;"	n
services	asio/src/examples/cpp03/services/logger_service.hpp	/^namespace services {$/;"	n
services_daytime_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^services_daytime_client_SOURCES = \\$/;"	m
session	asio/src/examples/cpp03/allocation/server.cpp	/^  session(asio::io_context& io_context)$/;"	f	class:session	file:
session	asio/src/examples/cpp03/allocation/server.cpp	/^class session$/;"	c	file:
session	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  session(asio::io_context& io_context)$/;"	f	class:session	file:
session	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^class session$/;"	c	file:
session	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  session(asio::io_context& io_context)$/;"	f	class:session	file:
session	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^class session$/;"	c	file:
session	asio/src/examples/cpp03/echo/blocking_tcp_echo_server.cpp	/^void session(socket_ptr sock)$/;"	f	typeref:typename:void
session	asio/src/examples/cpp03/local/stream_server.cpp	/^  session(asio::io_context& io_context)$/;"	f	class:session	file:
session	asio/src/examples/cpp03/local/stream_server.cpp	/^class session$/;"	c	file:
session	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  session(tcp::socket& socket)$/;"	f	class:third_party_lib::session	file:
session	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^class session$/;"	c	namespace:third_party_lib	file:
session	asio/src/examples/cpp03/spawn/echo_server.cpp	/^  explicit session(asio::io_context& io_context)$/;"	f	class:session	file:
session	asio/src/examples/cpp03/spawn/echo_server.cpp	/^class session : public boost::enable_shared_from_this<session>$/;"	c	file:
session	asio/src/examples/cpp03/ssl/server.cpp	/^  session(asio::io_context& io_context,$/;"	f	class:session	file:
session	asio/src/examples/cpp03/ssl/server.cpp	/^class session$/;"	c	file:
session	asio/src/examples/cpp11/allocation/server.cpp	/^  session(tcp::socket socket)$/;"	f	class:session	file:
session	asio/src/examples/cpp11/allocation/server.cpp	/^class session$/;"	c	file:
session	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  session(tcp::socket socket)$/;"	f	class:session	file:
session	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^class session$/;"	c	file:
session	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  session(tcp::socket socket)$/;"	f	class:session	file:
session	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^class session$/;"	c	file:
session	asio/src/examples/cpp11/echo/blocking_tcp_echo_server.cpp	/^void session(tcp::socket sock)$/;"	f	typeref:typename:void
session	asio/src/examples/cpp11/local/stream_server.cpp	/^  session(stream_protocol::socket sock)$/;"	f	class:session	file:
session	asio/src/examples/cpp11/local/stream_server.cpp	/^class session$/;"	c	file:
session	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  session(tcp::socket& socket)$/;"	f	class:third_party_lib::session	file:
session	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^class session$/;"	c	namespace:third_party_lib	file:
session	asio/src/examples/cpp11/spawn/echo_server.cpp	/^  explicit session(asio::io_context& io_context, tcp::socket socket)$/;"	f	class:session	file:
session	asio/src/examples/cpp11/spawn/echo_server.cpp	/^class session : public std::enable_shared_from_this<session>$/;"	c	file:
session	asio/src/examples/cpp11/ssl/server.cpp	/^  session(tcp::socket socket, asio::ssl::context& context)$/;"	f	class:session	file:
session	asio/src/examples/cpp11/ssl/server.cpp	/^class session : public std::enable_shared_from_this<session>$/;"	c	file:
session	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  session(tcp::socket socket)$/;"	f	class:session	file:
session	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^class session$/;"	c	file:
session	asio/src/examples/cpp14/echo/blocking_tcp_echo_server.cpp	/^void session(tcp::socket sock)$/;"	f	typeref:typename:void
session	asio/src/tests/performance/client.cpp	/^  session(asio::io_context& ioc, size_t block_size, stats& s)$/;"	f	class:session	file:
session	asio/src/tests/performance/client.cpp	/^class session$/;"	c	file:
session	asio/src/tests/performance/server.cpp	/^  session(asio::io_context& ioc, size_t block_size)$/;"	f	class:session	file:
session	asio/src/tests/performance/server.cpp	/^class session$/;"	c	file:
session_impl_	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  third_party_lib::session session_impl_;$/;"	m	class:connection	typeref:typename:third_party_lib::session	file:
session_impl_	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  third_party_lib::session session_impl_{socket_};$/;"	m	class:connection	typeref:typename:third_party_lib::session	file:
session_ptr	asio/src/examples/cpp03/allocation/server.cpp	/^typedef boost::shared_ptr<session> session_ptr;$/;"	t	typeref:typename:boost::shared_ptr<session>	file:
session_ptr	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^typedef boost::shared_ptr<session> session_ptr;$/;"	t	typeref:typename:boost::shared_ptr<session>	file:
session_ptr	asio/src/examples/cpp03/local/stream_server.cpp	/^typedef boost::shared_ptr<session> session_ptr;$/;"	t	typeref:typename:boost::shared_ptr<session>	file:
sessions_	asio/src/tests/performance/client.cpp	/^  std::list<session*> sessions_;$/;"	m	class:client	typeref:typename:std::list<session * >	file:
set	asio/include/asio/detail/io_control.hpp	/^  void set(std::size_t value)$/;"	f	class:asio::detail::io_control::bytes_readable	typeref:typename:void
set	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^  bool set(socket_type descriptor)$/;"	f	class:asio::detail::posix_fd_set_adapter	typeref:typename:bool
set	asio/include/asio/detail/posix_fd_set_adapter.hpp	/^  void set(reactor_op_queue<socket_type>& operations, op_queue<operation>& ops)$/;"	f	class:asio::detail::posix_fd_set_adapter	typeref:typename:void
set	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  bool set(socket_type descriptor)$/;"	f	class:asio::detail::win_fd_set_adapter	typeref:typename:bool
set	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  void set(reactor_op_queue<socket_type>& operations, op_queue<operation>&)$/;"	f	class:asio::detail::win_fd_set_adapter	typeref:typename:void
set_error	asio/include/asio/impl/awaitable.hpp	/^  void set_error(const asio::error_code& ec)$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void
set_except	asio/include/asio/impl/awaitable.hpp	/^  void set_except(std::exception_ptr e) noexcept$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void
set_option	asio/include/asio/basic_serial_port.hpp	/^  ASIO_SYNC_OP_VOID set_option(const SettableSerialPortOption& option,$/;"	f	class:asio::basic_serial_port	typeref:typename:ASIO_SYNC_OP_VOID
set_option	asio/include/asio/basic_serial_port.hpp	/^  void set_option(const SettableSerialPortOption& option)$/;"	f	class:asio::basic_serial_port	typeref:typename:void
set_option	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID set_option(const SettableSocketOption& option,$/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
set_option	asio/include/asio/basic_socket.hpp	/^  void set_option(const SettableSocketOption& option)$/;"	f	class:asio::basic_socket	typeref:typename:void
set_option	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID set_option(const SettableSocketOption& option,$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
set_option	asio/include/asio/basic_socket_acceptor.hpp	/^  void set_option(const SettableSocketOption& option)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
set_option	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code set_option(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
set_option	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  asio::error_code set_option(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:asio::error_code
set_option	asio/include/asio/detail/reactive_socket_service.hpp	/^  asio::error_code set_option(implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:asio::error_code
set_option	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  asio::error_code set_option(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:asio::error_code
set_option	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  asio::error_code set_option(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:asio::error_code
set_option	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  asio::error_code set_option(implementation_type& impl,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:asio::error_code
set_password_callback	asio/include/asio/ssl/impl/context.hpp	/^ASIO_SYNC_OP_VOID context::set_password_callback($/;"	f	class:asio::ssl::context	typeref:typename:ASIO_SYNC_OP_VOID
set_password_callback	asio/include/asio/ssl/impl/context.hpp	/^void context::set_password_callback(PasswordCallback callback)$/;"	f	class:asio::ssl::context	typeref:typename:void
set_ready_events	asio/include/asio/detail/epoll_reactor.hpp	/^    void set_ready_events(uint32_t events) { task_result_ = events; }$/;"	f	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:void
set_terminate_threads	asio/include/asio/detail/win_thread.hpp	/^  static void set_terminate_threads(bool b)$/;"	f	class:asio::detail::win_thread_base	typeref:typename:void
set_verify_callback	asio/include/asio/ssl/impl/context.hpp	/^ASIO_SYNC_OP_VOID context::set_verify_callback($/;"	f	class:asio::ssl::context	typeref:typename:ASIO_SYNC_OP_VOID
set_verify_callback	asio/include/asio/ssl/impl/context.hpp	/^void context::set_verify_callback(VerifyCallback callback)$/;"	f	class:asio::ssl::context	typeref:typename:void
set_verify_callback	asio/include/asio/ssl/stream.hpp	/^  ASIO_SYNC_OP_VOID set_verify_callback(VerifyCallback callback,$/;"	f	class:asio::ssl::stream	typeref:typename:ASIO_SYNC_OP_VOID
set_verify_callback	asio/include/asio/ssl/stream.hpp	/^  void set_verify_callback(VerifyCallback callback)$/;"	f	class:asio::ssl::stream	typeref:typename:void
set_verify_depth	asio/include/asio/ssl/stream.hpp	/^  ASIO_SYNC_OP_VOID set_verify_depth($/;"	f	class:asio::ssl::stream	typeref:typename:ASIO_SYNC_OP_VOID
set_verify_depth	asio/include/asio/ssl/stream.hpp	/^  void set_verify_depth(int depth)$/;"	f	class:asio::ssl::stream	typeref:typename:void
set_verify_mode	asio/include/asio/ssl/stream.hpp	/^  ASIO_SYNC_OP_VOID set_verify_mode($/;"	f	class:asio::ssl::stream	typeref:typename:ASIO_SYNC_OP_VOID
set_verify_mode	asio/include/asio/ssl/stream.hpp	/^  void set_verify_mode(verify_mode v)$/;"	f	class:asio::ssl::stream	typeref:typename:void
setbuf	asio/include/asio/basic_socket_streambuf.hpp	/^  std::streambuf* setbuf(char_type* s, std::streamsize n)$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:std::streambuf *
settable_socket_option	asio/src/tests/unit/archetypes/settable_socket_option.hpp	/^class settable_socket_option$/;"	c	namespace:archetypes
shared_cancel_token_type	asio/include/asio/detail/socket_ops.hpp	/^typedef shared_ptr<void> shared_cancel_token_type;$/;"	t	namespace:asio::detail::socket_ops	typeref:typename:shared_ptr<void>
shared_const_buffer	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  explicit shared_const_buffer(const std::string& data)$/;"	f	class:shared_const_buffer	file:
shared_const_buffer	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^class shared_const_buffer$/;"	c	file:
shared_const_buffer	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  explicit shared_const_buffer(const std::string& data)$/;"	f	class:shared_const_buffer	file:
shared_const_buffer	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^class shared_const_buffer$/;"	c	file:
short_transfer	asio/src/tests/unit/read.cpp	/^  short_transfer() {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/read.cpp	/^  short_transfer(const short_transfer&) {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/read.cpp	/^  short_transfer(short_transfer&&) {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/read.cpp	/^struct short_transfer$/;"	s	file:
short_transfer	asio/src/tests/unit/read_at.cpp	/^  short_transfer() {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/read_at.cpp	/^  short_transfer(const short_transfer&) {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/read_at.cpp	/^  short_transfer(short_transfer&&) {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/read_at.cpp	/^struct short_transfer$/;"	s	file:
short_transfer	asio/src/tests/unit/write.cpp	/^  short_transfer() {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/write.cpp	/^  short_transfer(const short_transfer&) {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/write.cpp	/^  short_transfer(short_transfer&&) {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/write.cpp	/^struct short_transfer$/;"	s	file:
short_transfer	asio/src/tests/unit/write_at.cpp	/^  short_transfer() {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/write_at.cpp	/^  short_transfer(const short_transfer&) {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/write_at.cpp	/^  short_transfer(short_transfer&&) {}$/;"	f	struct:short_transfer	file:
short_transfer	asio/src/tests/unit/write_at.cpp	/^struct short_transfer$/;"	s	file:
shrink	asio/include/asio/buffer.hpp	/^  void shrink(std::size_t n)$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:void
shrink	asio/include/asio/buffer.hpp	/^  void shrink(std::size_t n)$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:void
shut_down	asio/include/asio/error.hpp	/^  shut_down = ASIO_SOCKET_ERROR(ESHUTDOWN),$/;"	e	enum:asio::error::basic_errors
shutdown	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID shutdown(shutdown_type what,$/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
shutdown	asio/include/asio/basic_socket.hpp	/^  void shutdown(shutdown_type what)$/;"	f	class:asio::basic_socket	typeref:typename:void
shutdown	asio/include/asio/detail/deadline_timer_service.hpp	/^  void shutdown()$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:void
shutdown	asio/include/asio/detail/null_reactor.hpp	/^  void shutdown()$/;"	f	class:asio::detail::null_reactor	typeref:typename:void
shutdown	asio/include/asio/detail/null_socket_service.hpp	/^  asio::error_code shutdown(implementation_type&,$/;"	f	class:asio::detail::null_socket_service	typeref:typename:asio::error_code
shutdown	asio/include/asio/detail/null_socket_service.hpp	/^  void shutdown()$/;"	f	class:asio::detail::null_socket_service	typeref:typename:void
shutdown	asio/include/asio/detail/reactive_socket_service.hpp	/^  asio::error_code shutdown(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:asio::error_code
shutdown	asio/include/asio/detail/reactive_socket_service.hpp	/^  void shutdown()$/;"	f	class:asio::detail::reactive_socket_service	typeref:typename:void
shutdown	asio/include/asio/detail/resolver_service.hpp	/^  void shutdown()$/;"	f	class:asio::detail::resolver_service	typeref:typename:void
shutdown	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  asio::error_code shutdown(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:asio::error_code
shutdown	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  void shutdown()$/;"	f	class:asio::detail::win_iocp_socket_service	typeref:typename:void
shutdown	asio/include/asio/detail/winrt_async_manager.hpp	/^  void shutdown()$/;"	f	class:asio::detail::winrt_async_manager	typeref:typename:void
shutdown	asio/include/asio/detail/winrt_resolver_service.hpp	/^  void shutdown()$/;"	f	class:asio::detail::winrt_resolver_service	typeref:typename:void
shutdown	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  asio::error_code shutdown(implementation_type&,$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:asio::error_code
shutdown	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  void shutdown()$/;"	f	class:asio::detail::winrt_ssocket_service	typeref:typename:void
shutdown	asio/include/asio/ssl/stream.hpp	/^  ASIO_SYNC_OP_VOID shutdown(asio::error_code& ec)$/;"	f	class:asio::ssl::stream	typeref:typename:ASIO_SYNC_OP_VOID
shutdown	asio/include/asio/ssl/stream.hpp	/^  void shutdown()$/;"	f	class:asio::ssl::stream	typeref:typename:void
shutdown	asio/src/examples/cpp03/services/logger_service.hpp	/^  void shutdown()$/;"	f	class:services::logger_service	typeref:typename:void
shutdown	asio/src/examples/cpp11/executors/pipeline.cpp	/^    virtual void shutdown()$/;"	f	class:thread_executor::thread_bag	typeref:typename:void	file:
shutdown	asio/src/examples/cpp14/executors/pipeline.cpp	/^    virtual void shutdown()$/;"	f	class:thread_executor::thread_bag	typeref:typename:void	file:
shutdown_	asio/include/asio/detail/dev_poll_reactor.hpp	/^  bool shutdown_;$/;"	m	class:asio::detail::dev_poll_reactor	typeref:typename:bool
shutdown_	asio/include/asio/detail/epoll_reactor.hpp	/^    bool shutdown_;$/;"	m	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:bool
shutdown_	asio/include/asio/detail/epoll_reactor.hpp	/^  bool shutdown_;$/;"	m	class:asio::detail::epoll_reactor	typeref:typename:bool
shutdown_	asio/include/asio/detail/kqueue_reactor.hpp	/^    bool shutdown_;$/;"	m	struct:asio::detail::kqueue_reactor::descriptor_state	typeref:typename:bool
shutdown_	asio/include/asio/detail/kqueue_reactor.hpp	/^  bool shutdown_;$/;"	m	class:asio::detail::kqueue_reactor	typeref:typename:bool
shutdown_	asio/include/asio/detail/scheduler.hpp	/^  bool shutdown_;$/;"	m	class:asio::detail::scheduler	typeref:typename:bool
shutdown_	asio/include/asio/detail/select_reactor.hpp	/^  bool shutdown_;$/;"	m	class:asio::detail::select_reactor	typeref:typename:bool
shutdown_	asio/include/asio/detail/strand_executor_service.hpp	/^    bool shutdown_;$/;"	m	class:asio::detail::strand_executor_service::strand_impl	typeref:typename:bool
shutdown_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  long shutdown_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:long
shutdown_	asio/include/asio/detail/win_object_handle_service.hpp	/^  bool shutdown_;$/;"	m	class:asio::detail::win_object_handle_service	typeref:typename:bool
shutdown_	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^  bool shutdown_;$/;"	m	class:asio::detail::winrt_timer_scheduler	typeref:typename:bool
shutdown_both	asio/include/asio/socket_base.hpp	/^    shutdown_both = implementation_defined$/;"	e	enum:asio::socket_base::shutdown_type
shutdown_handler	asio/src/tests/unit/ssl/stream.cpp	/^void shutdown_handler(const asio::error_code&)$/;"	f	namespace:ssl_stream_compile	typeref:typename:void
shutdown_op	asio/include/asio/ssl/detail/shutdown_op.hpp	/^class shutdown_op$/;"	c	namespace:asio::ssl::detail
shutdown_receive	asio/include/asio/socket_base.hpp	/^    shutdown_receive = implementation_defined,$/;"	e	enum:asio::socket_base::shutdown_type
shutdown_send	asio/include/asio/socket_base.hpp	/^    shutdown_send = implementation_defined,$/;"	e	enum:asio::socket_base::shutdown_type
shutdown_service	asio/src/tests/unit/io_context.cpp	/^  virtual void shutdown_service() {}$/;"	f	class:test_service	typeref:typename:void	file:
shutdown_type	asio/include/asio/socket_base.hpp	/^  enum shutdown_type$/;"	g	class:asio::socket_base
signal	asio/include/asio/detail/conditionally_enabled_event.hpp	/^  void signal(conditionally_enabled_mutex::scoped_lock& lock)$/;"	f	class:asio::detail::conditionally_enabled_event	typeref:typename:void
signal	asio/include/asio/detail/null_event.hpp	/^  void signal(Lock&)$/;"	f	class:asio::detail::null_event	typeref:typename:void
signal	asio/include/asio/detail/posix_event.hpp	/^  void signal(Lock& lock)$/;"	f	class:asio::detail::posix_event	typeref:typename:void
signal	asio/include/asio/detail/std_event.hpp	/^  void signal(Lock& lock)$/;"	f	class:asio::detail::std_event	typeref:typename:void
signal	asio/include/asio/detail/win_event.hpp	/^  void signal(Lock& lock)$/;"	f	class:asio::detail::win_event	typeref:typename:void
signal_	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  asio::signal_set signal_;$/;"	m	class:server	typeref:typename:asio::signal_set	file:
signal_	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^  asio::signal_set signal_;$/;"	m	class:server	typeref:typename:asio::signal_set	file:
signal_all	asio/include/asio/detail/conditionally_enabled_event.hpp	/^  void signal_all(conditionally_enabled_mutex::scoped_lock& lock)$/;"	f	class:asio::detail::conditionally_enabled_event	typeref:typename:void
signal_all	asio/include/asio/detail/null_event.hpp	/^  void signal_all(Lock&)$/;"	f	class:asio::detail::null_event	typeref:typename:void
signal_all	asio/include/asio/detail/posix_event.hpp	/^  void signal_all(Lock& lock)$/;"	f	class:asio::detail::posix_event	typeref:typename:void
signal_all	asio/include/asio/detail/std_event.hpp	/^  void signal_all(Lock& lock)$/;"	f	class:asio::detail::std_event	typeref:typename:void
signal_all	asio/include/asio/detail/win_event.hpp	/^  void signal_all(Lock& lock)$/;"	f	class:asio::detail::win_event	typeref:typename:void
signal_blocker	asio/include/asio/detail/signal_blocker.hpp	/^typedef null_signal_blocker signal_blocker;$/;"	t	namespace:asio::detail	typeref:typename:null_signal_blocker
signal_handler	asio/include/asio/detail/signal_handler.hpp	/^  signal_handler(Handler& h, const IoExecutor& io_ex)$/;"	f	class:asio::detail::signal_handler
signal_handler	asio/include/asio/detail/signal_handler.hpp	/^class signal_handler : public signal_op$/;"	c	namespace:asio::detail
signal_handler	asio/src/tests/unit/signal_set.cpp	/^void signal_handler(const asio::error_code&, int)$/;"	f	namespace:signal_set_compile	typeref:typename:void
signal_init	asio/include/asio/detail/signal_init.hpp	/^  signal_init()$/;"	f	class:asio::detail::signal_init
signal_init	asio/include/asio/detail/signal_init.hpp	/^class signal_init$/;"	c	namespace:asio::detail
signal_number	asio/include/asio/placeholders.hpp	/^unspecified signal_number;$/;"	v	namespace:asio::placeholders	typeref:typename:unspecified
signal_number_	asio/include/asio/detail/signal_op.hpp	/^  int signal_number_;$/;"	m	class:asio::detail::signal_op	typeref:typename:int
signal_number_	asio/include/asio/detail/signal_set_service.hpp	/^    int signal_number_;$/;"	m	class:asio::detail::signal_set_service::registration	typeref:typename:int
signal_op	asio/include/asio/detail/signal_op.hpp	/^  signal_op(func_type func)$/;"	f	class:asio::detail::signal_op
signal_op	asio/include/asio/detail/signal_op.hpp	/^class signal_op$/;"	c	namespace:asio::detail
signal_set	asio/include/asio/signal_set.hpp	/^typedef basic_signal_set<> signal_set;$/;"	t	namespace:asio	typeref:typename:basic_signal_set<>
signal_set_compile	asio/src/tests/unit/signal_set.cpp	/^namespace signal_set_compile {$/;"	n	file:
signal_set_service	asio/include/asio/detail/signal_set_service.hpp	/^class signal_set_service :$/;"	c	namespace:asio::detail
signals_	asio/include/asio/detail/signal_set_service.hpp	/^    registration* signals_;$/;"	m	class:asio::detail::signal_set_service::implementation_type	typeref:typename:registration *
signals_	asio/src/examples/cpp03/http/server/server.hpp	/^  asio::signal_set signals_;$/;"	m	class:http::server::server	typeref:typename:asio::signal_set
signals_	asio/src/examples/cpp03/http/server2/server.hpp	/^  asio::signal_set signals_;$/;"	m	class:http::server2::server	typeref:typename:asio::signal_set
signals_	asio/src/examples/cpp03/http/server3/server.hpp	/^  asio::signal_set signals_;$/;"	m	class:http::server3::server	typeref:typename:asio::signal_set
signals_	asio/src/examples/cpp11/http/server/server.hpp	/^  asio::signal_set signals_;$/;"	m	class:http::server::server	typeref:typename:asio::signal_set
signed_size_type	asio/include/asio/detail/socket_types.hpp	/^typedef int signed_size_type;$/;"	t	namespace:asio::detail	typeref:typename:int
simplesect	asio/src/doc/reference.xsl	/^<xsl:template match="simplesect" mode="markup">$/;"	m
sin6_addr	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  in6_addr_emulation sin6_addr;$/;"	m	struct:asio::detail::sockaddr_in6_emulation	typeref:typename:in6_addr_emulation
sin6_addr	asio/include/asio/detail/socket_types.hpp	/^  in6_addr_type sin6_addr; u_short_type sin6_port;$/;"	m	struct:asio::detail::sockaddr_in6_type	typeref:typename:in6_addr_type
sin6_family	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  short sin6_family;$/;"	m	struct:asio::detail::sockaddr_in6_emulation	typeref:typename:short
sin6_family	asio/include/asio/detail/socket_types.hpp	/^struct sockaddr_in6_type { int sin6_family;$/;"	m	struct:asio::detail::sockaddr_in6_type	typeref:typename:int
sin6_flowinfo	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  u_long sin6_flowinfo;$/;"	m	struct:asio::detail::sockaddr_in6_emulation	typeref:typename:u_long
sin6_flowinfo	asio/include/asio/detail/socket_types.hpp	/^  u_long_type sin6_flowinfo; u_long_type sin6_scope_id; };$/;"	m	struct:asio::detail::sockaddr_in6_type	typeref:typename:u_long_type
sin6_port	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  u_short sin6_port;$/;"	m	struct:asio::detail::sockaddr_in6_emulation	typeref:typename:u_short
sin6_port	asio/include/asio/detail/socket_types.hpp	/^  in6_addr_type sin6_addr; u_short_type sin6_port;$/;"	m	struct:asio::detail::sockaddr_in6_type	typeref:typename:u_short_type
sin6_scope_id	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  u_long sin6_scope_id;$/;"	m	struct:asio::detail::sockaddr_in6_emulation	typeref:typename:u_long
sin6_scope_id	asio/include/asio/detail/socket_types.hpp	/^  u_long_type sin6_flowinfo; u_long_type sin6_scope_id; };$/;"	m	struct:asio::detail::sockaddr_in6_type	typeref:typename:u_long_type
sin_addr	asio/include/asio/detail/socket_types.hpp	/^  in4_addr_type sin_addr; u_short_type sin_port; };$/;"	m	struct:asio::detail::sockaddr_in4_type	typeref:typename:in4_addr_type
sin_family	asio/include/asio/detail/socket_types.hpp	/^struct sockaddr_in4_type { int sin_family;$/;"	m	struct:asio::detail::sockaddr_in4_type	typeref:typename:int
sin_port	asio/include/asio/detail/socket_types.hpp	/^  in4_addr_type sin_addr; u_short_type sin_port; };$/;"	m	struct:asio::detail::sockaddr_in4_type	typeref:typename:u_short_type
single_dh_use	asio/include/asio/ssl/context_base.hpp	/^  static const long single_dh_use = implementation_defined;$/;"	m	class:asio::ssl::context_base	typeref:typename:const long
single_thread_pool	asio/src/examples/cpp11/executors/actor.cpp	/^  struct single_thread_pool : thread_pool { single_thread_pool() : thread_pool(1) {} };$/;"	f	struct:main::single_thread_pool	file:
single_thread_pool	asio/src/examples/cpp11/executors/actor.cpp	/^  struct single_thread_pool : thread_pool { single_thread_pool() : thread_pool(1) {} };$/;"	s	function:main	file:
single_thread_pool	asio/src/examples/cpp14/executors/actor.cpp	/^  struct single_thread_pool : thread_pool { single_thread_pool() : thread_pool(1) {} };$/;"	f	struct:main::single_thread_pool	file:
single_thread_pool	asio/src/examples/cpp14/executors/actor.cpp	/^  struct single_thread_pool : thread_pool { single_thread_pool() : thread_pool(1) {} };$/;"	s	function:main	file:
size	asio/include/asio/basic_streambuf.hpp	/^  std::size_t size() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_streambuf	typeref:typename:std::size_t
size	asio/include/asio/basic_streambuf.hpp	/^  std::size_t size() const ASIO_NOEXCEPT$/;"	f	class:asio::basic_streambuf_ref	typeref:typename:std::size_t
size	asio/include/asio/buffer.hpp	/^  std::size_t size() const ASIO_NOEXCEPT$/;"	f	class:asio::const_buffer	typeref:typename:std::size_t
size	asio/include/asio/buffer.hpp	/^  std::size_t size() const ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_string_buffer	typeref:typename:std::size_t
size	asio/include/asio/buffer.hpp	/^  std::size_t size() const ASIO_NOEXCEPT$/;"	f	class:asio::dynamic_vector_buffer	typeref:typename:std::size_t
size	asio/include/asio/buffer.hpp	/^  std::size_t size() const ASIO_NOEXCEPT$/;"	f	class:asio::mutable_buffer	typeref:typename:std::size_t
size	asio/include/asio/detail/buffered_stream_storage.hpp	/^  size_type size() const$/;"	f	class:asio::detail::buffered_stream_storage	typeref:typename:size_type
size	asio/include/asio/detail/socket_option.hpp	/^  std::size_t size(const Protocol&) const$/;"	f	class:asio::detail::socket_option::boolean	typeref:typename:std::size_t
size	asio/include/asio/detail/socket_option.hpp	/^  std::size_t size(const Protocol&) const$/;"	f	class:asio::detail::socket_option::integer	typeref:typename:std::size_t
size	asio/include/asio/detail/socket_option.hpp	/^  std::size_t size(const Protocol&) const$/;"	f	class:asio::detail::socket_option::linger	typeref:typename:std::size_t
size	asio/include/asio/detail/winrt_utils.hpp	/^  std::size_t size = buffer_size(buffers);$/;"	v	namespace:asio::detail::winrt_utils	typeref:typename:std::size_t
size	asio/include/asio/generic/basic_endpoint.hpp	/^  std::size_t size() const$/;"	f	class:asio::generic::basic_endpoint	typeref:typename:std::size_t
size	asio/include/asio/generic/detail/endpoint.hpp	/^  std::size_t size() const$/;"	f	class:asio::generic::detail::endpoint	typeref:typename:std::size_t
size	asio/include/asio/ip/address_v4_range.hpp	/^  std::size_t size() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_address_range	typeref:typename:std::size_t
size	asio/include/asio/ip/basic_endpoint.hpp	/^  std::size_t size() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_endpoint	typeref:typename:std::size_t
size	asio/include/asio/ip/basic_resolver_results.hpp	/^  size_type size() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:size_type
size	asio/include/asio/ip/detail/endpoint.hpp	/^  std::size_t size() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::detail::endpoint	typeref:typename:std::size_t
size	asio/include/asio/ip/detail/socket_option.hpp	/^  std::size_t size(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:std::size_t
size	asio/include/asio/ip/detail/socket_option.hpp	/^  std::size_t size(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:std::size_t
size	asio/include/asio/ip/detail/socket_option.hpp	/^  std::size_t size(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::multicast_request	typeref:typename:std::size_t
size	asio/include/asio/ip/detail/socket_option.hpp	/^  std::size_t size(const Protocol& protocol) const$/;"	f	class:asio::ip::detail::socket_option::network_interface	typeref:typename:std::size_t
size	asio/include/asio/ip/detail/socket_option.hpp	/^  std::size_t size(const Protocol&) const$/;"	f	class:asio::ip::detail::socket_option::unicast_hops	typeref:typename:std::size_t
size	asio/include/asio/local/basic_endpoint.hpp	/^  std::size_t size() const$/;"	f	class:asio::local::basic_endpoint	typeref:typename:std::size_t
size	asio/include/asio/local/detail/endpoint.hpp	/^  std::size_t size() const$/;"	f	class:asio::local::detail::endpoint	typeref:typename:std::size_t
size	asio/src/tests/unit/archetypes/gettable_socket_option.hpp	/^  std::size_t size(const Protocol&) const$/;"	f	class:archetypes::gettable_socket_option	typeref:typename:std::size_t
size	asio/src/tests/unit/archetypes/settable_socket_option.hpp	/^  std::size_t size(const Protocol&) const$/;"	f	class:archetypes::settable_socket_option	typeref:typename:std::size_t
size_	asio/include/asio/buffer.hpp	/^  std::size_t size_;$/;"	m	class:asio::const_buffer	typeref:typename:std::size_t
size_	asio/include/asio/buffer.hpp	/^  std::size_t size_;$/;"	m	class:asio::dynamic_string_buffer	typeref:typename:std::size_t
size_	asio/include/asio/buffer.hpp	/^  std::size_t size_;$/;"	m	class:asio::dynamic_vector_buffer	typeref:typename:std::size_t
size_	asio/include/asio/buffer.hpp	/^  std::size_t size_;$/;"	m	class:asio::mutable_buffer	typeref:typename:std::size_t
size_	asio/include/asio/completion_condition.hpp	/^  std::size_t size_;$/;"	m	class:asio::detail::transfer_exactly_t	typeref:typename:std::size_t
size_	asio/include/asio/detail/hash_map.hpp	/^  std::size_t size_;$/;"	m	class:asio::detail::hash_map	typeref:typename:std::size_t
size_	asio/include/asio/generic/detail/endpoint.hpp	/^  std::size_t size_;$/;"	m	class:asio::generic::detail::endpoint	typeref:typename:std::size_t
size_type	asio/include/asio/detail/buffered_stream_storage.hpp	/^  typedef std::size_t size_type;$/;"	t	class:asio::detail::buffered_stream_storage	typeref:typename:std::size_t
size_type	asio/include/asio/ip/basic_resolver_results.hpp	/^  typedef std::size_t size_type;$/;"	t	class:asio::ip::basic_resolver_results	typeref:typename:std::size_t
sleep_increment	asio/src/tests/unit/io_context.cpp	/^void sleep_increment(io_context* ioc, int* count)$/;"	f	typeref:typename:void
sleep_increment	asio/src/tests/unit/io_context_strand.cpp	/^void sleep_increment(io_context* ioc, int* count)$/;"	f	typeref:typename:void
sleep_increment	asio/src/tests/unit/strand.cpp	/^void sleep_increment(io_context* ioc, int* count)$/;"	f	typeref:typename:void
sockaddr_in4_type	asio/include/asio/detail/socket_types.hpp	/^struct sockaddr_in4_type { int sin_family;$/;"	s	namespace:asio::detail
sockaddr_in6_emulation	asio/include/asio/detail/old_win_sdk_compat.hpp	/^struct sockaddr_in6_emulation$/;"	s	namespace:asio::detail
sockaddr_in6_type	asio/include/asio/detail/socket_types.hpp	/^struct sockaddr_in6_type { int sin6_family;$/;"	s	namespace:asio::detail
sockaddr_storage_alignsize	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  sockaddr_storage_alignsize = (sizeof(__int64)), \/\/ Desired alignment.$/;"	e	enum:asio::detail::__anoned65e2760103
sockaddr_storage_emulation	asio/include/asio/detail/old_win_sdk_compat.hpp	/^struct sockaddr_storage_emulation$/;"	s	namespace:asio::detail
sockaddr_storage_maxsize	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  sockaddr_storage_maxsize = 128, \/\/ Maximum size.$/;"	e	enum:asio::detail::__anoned65e2760103
sockaddr_storage_pad1size	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  sockaddr_storage_pad1size = (sockaddr_storage_alignsize - sizeof(short)),$/;"	e	enum:asio::detail::__anoned65e2760103
sockaddr_storage_pad2size	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  sockaddr_storage_pad2size = (sockaddr_storage_maxsize -$/;"	e	enum:asio::detail::__anoned65e2760103
sockaddr_storage_type	asio/include/asio/detail/socket_types.hpp	/^struct sockaddr_storage_type { int ss_family;$/;"	s	namespace:asio::detail
socket	asio/include/asio/basic_socket_iostream.hpp	/^  basic_socket<Protocol>& socket()$/;"	f	class:asio::basic_socket_iostream	typeref:typename:basic_socket<Protocol> &
socket	asio/include/asio/basic_socket_streambuf.hpp	/^  basic_socket<Protocol>& socket()$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:basic_socket<Protocol> &
socket	asio/include/asio/generic/datagram_protocol.hpp	/^  typedef basic_datagram_socket<datagram_protocol> socket;$/;"	t	class:asio::generic::datagram_protocol	typeref:typename:basic_datagram_socket<datagram_protocol>
socket	asio/include/asio/generic/raw_protocol.hpp	/^  typedef basic_raw_socket<raw_protocol> socket;$/;"	t	class:asio::generic::raw_protocol	typeref:typename:basic_raw_socket<raw_protocol>
socket	asio/include/asio/generic/seq_packet_protocol.hpp	/^  typedef basic_seq_packet_socket<seq_packet_protocol> socket;$/;"	t	class:asio::generic::seq_packet_protocol	typeref:typename:basic_seq_packet_socket<seq_packet_protocol>
socket	asio/include/asio/generic/stream_protocol.hpp	/^  typedef basic_stream_socket<stream_protocol> socket;$/;"	t	class:asio::generic::stream_protocol	typeref:typename:basic_stream_socket<stream_protocol>
socket	asio/include/asio/ip/icmp.hpp	/^  typedef basic_raw_socket<icmp> socket;$/;"	t	class:asio::ip::icmp	typeref:typename:basic_raw_socket<icmp>
socket	asio/include/asio/ip/tcp.hpp	/^  typedef basic_stream_socket<tcp> socket;$/;"	t	class:asio::ip::tcp	typeref:typename:basic_stream_socket<tcp>
socket	asio/include/asio/ip/udp.hpp	/^  typedef basic_datagram_socket<udp> socket;$/;"	t	class:asio::ip::udp	typeref:typename:basic_datagram_socket<udp>
socket	asio/include/asio/local/datagram_protocol.hpp	/^  typedef basic_datagram_socket<datagram_protocol> socket;$/;"	t	class:asio::local::datagram_protocol	typeref:typename:basic_datagram_socket<datagram_protocol>
socket	asio/include/asio/local/stream_protocol.hpp	/^  typedef basic_stream_socket<stream_protocol> socket;$/;"	t	class:asio::local::stream_protocol	typeref:typename:basic_stream_socket<stream_protocol>
socket	asio/src/examples/cpp03/allocation/server.cpp	/^  tcp::socket& socket()$/;"	f	class:session	typeref:typename:tcp::socket &	file:
socket	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  tcp::socket& socket()$/;"	f	class:session	typeref:typename:tcp::socket &	file:
socket	asio/src/examples/cpp03/chat/chat_server.cpp	/^  tcp::socket& socket()$/;"	f	class:chat_session	typeref:typename:tcp::socket &	file:
socket	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  tcp::socket& socket()$/;"	f	class:session	typeref:typename:tcp::socket &	file:
socket	asio/src/examples/cpp03/http/server/connection.cpp	/^asio::ip::tcp::socket& connection::socket()$/;"	f	class:http::server::connection	typeref:typename:asio::ip::tcp::socket &
socket	asio/src/examples/cpp03/http/server2/connection.cpp	/^asio::ip::tcp::socket& connection::socket()$/;"	f	class:http::server2::connection	typeref:typename:asio::ip::tcp::socket &
socket	asio/src/examples/cpp03/http/server3/connection.cpp	/^asio::ip::tcp::socket& connection::socket()$/;"	f	class:http::server3::connection	typeref:typename:asio::ip::tcp::socket &
socket	asio/src/examples/cpp03/local/connect_pair.cpp	/^  stream_protocol::socket& socket()$/;"	f	class:uppercase_filter	typeref:typename:stream_protocol::socket &	file:
socket	asio/src/examples/cpp03/local/stream_server.cpp	/^  stream_protocol::socket& socket()$/;"	f	class:session	typeref:typename:stream_protocol::socket &	file:
socket	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  tcp::socket& socket()$/;"	f	class:connection	typeref:typename:tcp::socket &	file:
socket	asio/src/examples/cpp03/serialization/connection.hpp	/^  asio::ip::tcp::socket& socket()$/;"	f	class:s11n_example::connection	typeref:typename:asio::ip::tcp::socket &
socket	asio/src/examples/cpp03/spawn/echo_server.cpp	/^  tcp::socket& socket()$/;"	f	class:session	typeref:typename:tcp::socket &	file:
socket	asio/src/examples/cpp03/ssl/server.cpp	/^  ssl_socket::lowest_layer_type& socket()$/;"	f	class:session	typeref:typename:ssl_socket::lowest_layer_type &	file:
socket	asio/src/examples/cpp03/timeouts/server.cpp	/^  tcp::socket& socket()$/;"	f	class:tcp_session	typeref:typename:tcp::socket &	file:
socket	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  tcp::socket& socket()$/;"	f	class:tcp_connection	typeref:typename:tcp::socket &	file:
socket	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  tcp::socket& socket()$/;"	f	class:tcp_connection	typeref:typename:tcp::socket &	file:
socket	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  tcp_socket& socket()$/;"	f	class:connection	typeref:typename:tcp_socket &	file:
socket	asio/src/tests/performance/server.cpp	/^  asio::ip::tcp::socket& socket()$/;"	f	class:session	typeref:typename:asio::ip::tcp::socket &	file:
socket_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::reactive_socket_accept_op_base	typeref:typename:socket_type
socket_	asio/include/asio/detail/reactive_socket_connect_op.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::reactive_socket_connect_op_base	typeref:typename:socket_type
socket_	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::reactive_socket_recv_op_base	typeref:typename:socket_type
socket_	asio/include/asio/detail/reactive_socket_recvfrom_op.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::reactive_socket_recvfrom_op_base	typeref:typename:socket_type
socket_	asio/include/asio/detail/reactive_socket_recvmsg_op.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::reactive_socket_recvmsg_op_base	typeref:typename:socket_type
socket_	asio/include/asio/detail/reactive_socket_send_op.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::reactive_socket_send_op_base	typeref:typename:socket_type
socket_	asio/include/asio/detail/reactive_socket_sendto_op.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::reactive_socket_sendto_op_base	typeref:typename:socket_type
socket_	asio/include/asio/detail/reactive_socket_service_base.hpp	/^    socket_type socket_;$/;"	m	struct:asio::detail::reactive_socket_service_base::base_implementation_type	typeref:typename:socket_type
socket_	asio/include/asio/detail/socket_holder.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::socket_holder	typeref:typename:socket_type
socket_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:socket_type
socket_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:socket_type
socket_	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^  socket_type socket_;$/;"	m	class:asio::detail::win_iocp_socket_connect_op_base	typeref:typename:socket_type
socket_	asio/include/asio/detail/win_iocp_socket_service.hpp	/^    socket_type socket_;$/;"	m	class:asio::detail::win_iocp_socket_service::native_handle_type	typeref:typename:socket_type
socket_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    socket_type socket_;$/;"	m	struct:asio::detail::win_iocp_socket_service_base::base_implementation_type	typeref:typename:socket_type
socket_	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^    native_handle_type socket_;$/;"	m	struct:asio::detail::winrt_ssocket_service_base::base_implementation_type	typeref:typename:native_handle_type
socket_	asio/include/asio/impl/connect.hpp	/^    basic_socket<Protocol, Executor>& socket_;$/;"	m	class:asio::detail::initiate_async_iterator_connect	typeref:typename:basic_socket<Protocol,Executor> &
socket_	asio/include/asio/impl/connect.hpp	/^    basic_socket<Protocol, Executor>& socket_;$/;"	m	class:asio::detail::initiate_async_range_connect	typeref:typename:basic_socket<Protocol,Executor> &
socket_	asio/include/asio/impl/connect.hpp	/^    basic_socket<Protocol, Executor>& socket_;$/;"	m	class:asio::detail::iterator_connect_op	typeref:typename:basic_socket<Protocol,Executor> &
socket_	asio/include/asio/impl/connect.hpp	/^    basic_socket<Protocol, Executor>& socket_;$/;"	m	class:asio::detail::range_connect_op	typeref:typename:basic_socket<Protocol,Executor> &
socket_	asio/src/examples/cpp03/allocation/server.cpp	/^  tcp::socket socket_;$/;"	m	class:session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  tcp::socket socket_;$/;"	m	class:session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/chat/chat_client.cpp	/^  tcp::socket socket_;$/;"	m	class:chat_client	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/chat/chat_server.cpp	/^  tcp::socket socket_;$/;"	m	class:chat_session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  tcp::socket socket_;$/;"	m	class:posix_chat_client	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  tcp::socket socket_;$/;"	m	class:session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/echo/async_udp_echo_server.cpp	/^  udp::socket socket_;$/;"	m	class:server	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp03/fork/daemon.cpp	/^  udp::socket socket_;$/;"	m	class:udp_daytime_server	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  tcp::socket socket_;$/;"	m	class:server	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/http/client/async_client.cpp	/^  tcp::socket socket_;$/;"	m	class:client	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/http/server/connection.hpp	/^  asio::ip::tcp::socket socket_;$/;"	m	class:http::server::connection	typeref:typename:asio::ip::tcp::socket
socket_	asio/src/examples/cpp03/http/server2/connection.hpp	/^  asio::ip::tcp::socket socket_;$/;"	m	class:http::server2::connection	typeref:typename:asio::ip::tcp::socket
socket_	asio/src/examples/cpp03/http/server3/connection.hpp	/^  asio::ip::tcp::socket socket_;$/;"	m	class:http::server3::connection	typeref:typename:asio::ip::tcp::socket
socket_	asio/src/examples/cpp03/http/server4/server.hpp	/^  boost::shared_ptr<tcp::socket> socket_;$/;"	m	class:http::server4::server	typeref:typename:boost::shared_ptr<tcp::socket>
socket_	asio/src/examples/cpp03/icmp/ping.cpp	/^  icmp::socket socket_;$/;"	m	class:pinger	typeref:typename:icmp::socket	file:
socket_	asio/src/examples/cpp03/local/connect_pair.cpp	/^  stream_protocol::socket socket_;$/;"	m	class:uppercase_filter	typeref:typename:stream_protocol::socket	file:
socket_	asio/src/examples/cpp03/local/stream_server.cpp	/^  stream_protocol::socket socket_;$/;"	m	class:session	typeref:typename:stream_protocol::socket	file:
socket_	asio/src/examples/cpp03/multicast/receiver.cpp	/^  asio::ip::udp::socket socket_;$/;"	m	class:receiver	typeref:typename:asio::ip::udp::socket	file:
socket_	asio/src/examples/cpp03/multicast/sender.cpp	/^  asio::ip::udp::socket socket_;$/;"	m	class:sender	typeref:typename:asio::ip::udp::socket	file:
socket_	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  tcp::socket socket_;$/;"	m	class:connection	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  tcp::socket& socket_;$/;"	m	class:third_party_lib::session	typeref:typename:tcp::socket &	file:
socket_	asio/src/examples/cpp03/serialization/connection.hpp	/^  asio::ip::tcp::socket socket_;$/;"	m	class:s11n_example::connection	typeref:typename:asio::ip::tcp::socket
socket_	asio/src/examples/cpp03/spawn/echo_server.cpp	/^  tcp::socket socket_;$/;"	m	class:session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/ssl/client.cpp	/^  asio::ssl::stream<asio::ip::tcp::socket> socket_;$/;"	m	class:client	typeref:typename:asio::ssl::stream<asio::ip::tcp::socket>	file:
socket_	asio/src/examples/cpp03/ssl/server.cpp	/^  ssl_socket socket_;$/;"	m	class:session	typeref:typename:ssl_socket	file:
socket_	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  tcp::socket socket_;$/;"	m	class:client	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/timeouts/blocking_tcp_client.cpp	/^  tcp::socket socket_;$/;"	m	class:client	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  tcp_socket& socket_;$/;"	m	class:asio::async_result	typeref:typename:tcp_socket &	file:
socket_	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  tcp_socket& socket_;$/;"	m	struct:close_after	typeref:typename:tcp_socket &	file:
socket_	asio/src/examples/cpp03/timeouts/blocking_udp_client.cpp	/^  udp::socket socket_;$/;"	m	class:client	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp03/timeouts/server.cpp	/^  tcp::socket socket_;$/;"	m	class:tcp_session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/timeouts/server.cpp	/^  udp::socket socket_;$/;"	m	class:udp_broadcaster	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  tcp::socket socket_;$/;"	m	class:tcp_connection	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/tutorial/daytime6/server.cpp	/^  udp::socket socket_;$/;"	m	class:udp_server	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  tcp::socket socket_;$/;"	m	class:tcp_connection	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  udp::socket socket_;$/;"	m	class:udp_server	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  tcp_socket socket_;$/;"	m	class:connection	typeref:typename:tcp_socket	file:
socket_	asio/src/examples/cpp11/allocation/server.cpp	/^  tcp::socket socket_;$/;"	m	class:session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  tcp::socket socket_;$/;"	m	class:session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/chat/chat_client.cpp	/^  tcp::socket socket_;$/;"	m	class:chat_client	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/chat/chat_server.cpp	/^  tcp::socket socket_;$/;"	m	class:chat_session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  tcp::socket socket_;$/;"	m	class:session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/echo/async_udp_echo_server.cpp	/^  udp::socket socket_;$/;"	m	class:server	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp11/fork/daemon.cpp	/^  udp::socket socket_;$/;"	m	class:udp_daytime_server	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^  tcp::socket socket_;$/;"	m	class:server	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/http/server/connection.hpp	/^  asio::ip::tcp::socket socket_;$/;"	m	class:http::server::connection	typeref:typename:asio::ip::tcp::socket
socket_	asio/src/examples/cpp11/local/connect_pair.cpp	/^  stream_protocol::socket socket_;$/;"	m	class:uppercase_filter	typeref:typename:stream_protocol::socket	file:
socket_	asio/src/examples/cpp11/local/stream_server.cpp	/^  stream_protocol::socket socket_;$/;"	m	class:session	typeref:typename:stream_protocol::socket	file:
socket_	asio/src/examples/cpp11/multicast/receiver.cpp	/^  asio::ip::udp::socket socket_;$/;"	m	class:receiver	typeref:typename:asio::ip::udp::socket	file:
socket_	asio/src/examples/cpp11/multicast/sender.cpp	/^  asio::ip::udp::socket socket_;$/;"	m	class:sender	typeref:typename:asio::ip::udp::socket	file:
socket_	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  tcp::socket socket_;$/;"	m	class:connection	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  tcp::socket& socket_;$/;"	m	class:third_party_lib::session	typeref:typename:tcp::socket &	file:
socket_	asio/src/examples/cpp11/operations/composed_5.cpp	/^      tcp::socket& socket_;$/;"	m	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:tcp::socket &	file:
socket_	asio/src/examples/cpp11/operations/composed_6.cpp	/^      tcp::socket& socket_;$/;"	m	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:typename:tcp::socket &	file:
socket_	asio/src/examples/cpp11/operations/composed_7.cpp	/^  tcp::socket& socket_;$/;"	m	struct:async_write_messages_implementation	typeref:typename:tcp::socket &	file:
socket_	asio/src/examples/cpp11/operations/composed_8.cpp	/^  tcp::socket& socket_;$/;"	m	struct:async_write_messages_implementation	typeref:typename:tcp::socket &	file:
socket_	asio/src/examples/cpp11/spawn/echo_server.cpp	/^  tcp::socket socket_;$/;"	m	class:session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/ssl/client.cpp	/^  asio::ssl::stream<tcp::socket> socket_;$/;"	m	class:client	typeref:typename:asio::ssl::stream<tcp::socket>	file:
socket_	asio/src/examples/cpp11/ssl/server.cpp	/^  asio::ssl::stream<tcp::socket> socket_;$/;"	m	class:session	typeref:typename:asio::ssl::stream<tcp::socket>	file:
socket_	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  tcp::socket socket_;$/;"	m	class:client	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^  tcp::socket socket_{io_context_};$/;"	m	class:client	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  tcp_socket& socket_;$/;"	m	class:asio::async_result	typeref:typename:tcp_socket &	file:
socket_	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  tcp_socket& socket_;$/;"	m	struct:close_after	typeref:typename:tcp_socket &	file:
socket_	asio/src/examples/cpp11/timeouts/blocking_udp_client.cpp	/^  udp::socket socket_;$/;"	m	class:client	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp11/timeouts/server.cpp	/^  tcp::socket socket_;$/;"	m	class:tcp_session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp11/timeouts/server.cpp	/^  udp::socket socket_;$/;"	m	class:udp_broadcaster	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  tcp::socket socket_;$/;"	m	class:server	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  tcp::socket socket_;$/;"	m	class:session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp14/echo/async_udp_echo_server.cpp	/^  udp::socket socket_;$/;"	m	class:server	typeref:typename:udp::socket	file:
socket_	asio/src/examples/cpp14/operations/composed_5.cpp	/^      tcp::socket& socket_;$/;"	m	struct:async_write_message::__anon32ec9f8e0102::intermediate_completion_handler	typeref:typename:tcp::socket &	file:
socket_	asio/src/examples/cpp14/operations/composed_6.cpp	/^      tcp::socket& socket_;$/;"	m	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	typeref:typename:tcp::socket &	file:
socket_	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  tcp::socket socket_;$/;"	m	class:chat_session	typeref:typename:tcp::socket	file:
socket_	asio/src/examples/cpp17/coroutines_ts/range_based_for.cpp	/^  tcp::socket socket_;$/;"	m	class:connection_iter	typeref:typename:tcp::socket	file:
socket_	asio/src/tests/latency/tcp_server.cpp	/^  tcp::socket socket_;$/;"	m	class:tcp_server	typeref:typename:tcp::socket	file:
socket_	asio/src/tests/latency/udp_server.cpp	/^  udp::socket socket_;$/;"	m	class:udp_server	typeref:typename:udp::socket	file:
socket_	asio/src/tests/performance/client.cpp	/^  asio::ip::tcp::socket socket_;$/;"	m	class:session	typeref:typename:asio::ip::tcp::socket	file:
socket_	asio/src/tests/performance/server.cpp	/^  asio::ip::tcp::socket socket_;$/;"	m	class:session	typeref:typename:asio::ip::tcp::socket	file:
socket_	asio/src/tests/unit/connect.cpp	/^  asio::ip::tcp::socket socket_;$/;"	m	class:connection_sink	typeref:typename:asio::ip::tcp::socket	file:
socket_addr_type	asio/include/asio/detail/socket_types.hpp	/^struct socket_addr_type { int sa_family; };$/;"	s	namespace:asio::detail
socket_base	asio/include/asio/socket_base.hpp	/^class socket_base$/;"	c	namespace:asio
socket_base_compile	asio/src/tests/unit/socket_base.cpp	/^namespace socket_base_compile {$/;"	n	file:
socket_base_runtime	asio/src/tests/unit/socket_base.cpp	/^namespace socket_base_runtime {$/;"	n	file:
socket_errc	asio/include/asio/error.hpp	/^namespace socket_errc {$/;"	n	namespace:asio
socket_holder	asio/include/asio/detail/socket_holder.hpp	/^  explicit socket_holder(socket_type s)$/;"	f	class:asio::detail::socket_holder
socket_holder	asio/include/asio/detail/socket_holder.hpp	/^  socket_holder()$/;"	f	class:asio::detail::socket_holder
socket_holder	asio/include/asio/detail/socket_holder.hpp	/^class socket_holder$/;"	c	namespace:asio::detail
socket_iostream_base	asio/include/asio/basic_socket_iostream.hpp	/^  socket_iostream_base()$/;"	f	class:asio::detail::socket_iostream_base
socket_iostream_base	asio/include/asio/basic_socket_iostream.hpp	/^  socket_iostream_base(basic_stream_socket<Protocol> s)$/;"	f	class:asio::detail::socket_iostream_base
socket_iostream_base	asio/include/asio/basic_socket_iostream.hpp	/^  socket_iostream_base(socket_iostream_base&& other)$/;"	f	class:asio::detail::socket_iostream_base
socket_iostream_base	asio/include/asio/basic_socket_iostream.hpp	/^class socket_iostream_base$/;"	c	namespace:asio::detail
socket_ops	asio/include/asio/detail/socket_ops.hpp	/^namespace socket_ops {$/;"	n	namespace:asio::detail
socket_option	asio/include/asio/detail/socket_option.hpp	/^namespace socket_option {$/;"	n	namespace:asio::detail
socket_option	asio/include/asio/ip/detail/socket_option.hpp	/^namespace socket_option {$/;"	n	namespace:asio::ip::detail
socket_ptr	asio/src/examples/cpp03/echo/blocking_tcp_echo_server.cpp	/^typedef boost::shared_ptr<tcp::socket> socket_ptr;$/;"	t	typeref:typename:boost::shared_ptr<tcp::socket>	file:
socket_select_interrupter	asio/include/asio/detail/socket_select_interrupter.hpp	/^class socket_select_interrupter$/;"	c	namespace:asio::detail
socket_service_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  win_iocp_socket_service_base& socket_service_;$/;"	m	class:asio::detail::win_iocp_socket_accept_op	typeref:typename:win_iocp_socket_service_base &
socket_service_	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  win_iocp_socket_service_base& socket_service_;$/;"	m	class:asio::detail::win_iocp_socket_move_accept_op	typeref:typename:win_iocp_socket_service_base &
socket_streambuf_buffers	asio/include/asio/basic_socket_streambuf.hpp	/^  socket_streambuf_buffers()$/;"	f	class:asio::detail::socket_streambuf_buffers
socket_streambuf_buffers	asio/include/asio/basic_socket_streambuf.hpp	/^class socket_streambuf_buffers$/;"	c	namespace:asio::detail
socket_streambuf_io_context	asio/include/asio/basic_socket_streambuf.hpp	/^  socket_streambuf_io_context(io_context* ctx)$/;"	f	class:asio::detail::socket_streambuf_io_context
socket_streambuf_io_context	asio/include/asio/basic_socket_streambuf.hpp	/^class socket_streambuf_io_context$/;"	c	namespace:asio::detail
socket_type_not_supported	asio/include/asio/error.hpp	/^  socket_type_not_supported = ASIO_WIN_OR_POSIX($/;"	e	enum:asio::error::addrinfo_errors
socks4	asio/src/examples/cpp03/socks4/socks4.hpp	/^namespace socks4 {$/;"	n
socks4	asio/src/examples/cpp11/socks4/socks4.hpp	/^namespace socks4 {$/;"	n
socks4_sync_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^socks4_sync_client_SOURCES = socks4\/sync_client.cpp$/;"	m
socks4_sync_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^socks4_sync_client_SOURCES = socks4\/sync_client.cpp$/;"	m
software	asio/include/asio/serial_port_base.hpp	/^    enum type { none, software, hardware };$/;"	e	enum:asio::serial_port_base::flow_control::type
solaris_fenced_block	asio/include/asio/detail/solaris_fenced_block.hpp	/^  explicit solaris_fenced_block(full_t)$/;"	f	class:asio::detail::solaris_fenced_block
solaris_fenced_block	asio/include/asio/detail/solaris_fenced_block.hpp	/^  explicit solaris_fenced_block(half_t)$/;"	f	class:asio::detail::solaris_fenced_block
solaris_fenced_block	asio/include/asio/detail/solaris_fenced_block.hpp	/^class solaris_fenced_block$/;"	c	namespace:asio::detail
source_address	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  asio::ip::address_v4 source_address() const$/;"	f	class:ipv4_header	typeref:typename:asio::ip::address_v4
source_contains_asio_include	asio/boostify.pl	/^sub source_contains_asio_include$/;"	s
source_contains_asio_include	asio/tsify.pl	/^sub source_contains_asio_include$/;"	s
source_contains_asio_thread_usage	asio/boostify.pl	/^sub source_contains_asio_thread_usage$/;"	s
source_contains_asio_thread_usage	asio/tsify.pl	/^sub source_contains_asio_thread_usage$/;"	s
source_quench	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  enum { echo_reply = 0, destination_unreachable = 3, source_quench = 4,$/;"	e	enum:icmp_header::__anon3193b0390103
sp	asio/src/doc/reference.xsl	/^<xsl:template match="sp" mode="codeline">$/;"	m
sp	asio/src/doc/reference.xsl	/^<xsl:template match="sp" mode="markup">$/;"	m
sp	asio/src/doc/reference.xsl	/^<xsl:template match="sp" mode="markup-nested">$/;"	m
sp	asio/src/doc/tutorial.xsl	/^<xsl:template match="sp" mode="codeline">$/;"	m
sp	asio/src/doc/tutorial.xsl	/^<xsl:template match="sp">$/;"	m
sp	asio/src/tests/unit/generic/stream_protocol.cpp	/^  typedef generic::stream_protocol sp;$/;"	t	function:generic_stream_protocol_socket_compile::test	typeref:typename:generic::stream_protocol	file:
sp	asio/src/tests/unit/local/connect_pair.cpp	/^  typedef local::stream_protocol sp;$/;"	t	function:local_connect_pair_compile::test	typeref:typename:local::stream_protocol	file:
sp	asio/src/tests/unit/local/stream_protocol.cpp	/^  typedef local::stream_protocol sp;$/;"	t	function:local_stream_protocol_socket_compile::test	typeref:typename:local::stream_protocol	file:
space_	asio/src/tests/latency/allocator.hpp	/^  boost::aligned_storage<1024>::type space_;$/;"	m	class:allocator	typeref:typename:boost::aligned_storage<1024>::type
space_before_header_value	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    space_before_header_value,$/;"	e	enum:http::server::request_parser::state
space_before_header_value	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    space_before_header_value,$/;"	e	enum:http::server2::request_parser::state
space_before_header_value	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    space_before_header_value,$/;"	e	enum:http::server3::request_parser::state
space_before_header_value	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    space_before_header_value,$/;"	e	enum:http::server::request_parser::state
spares_	asio/include/asio/detail/hash_map.hpp	/^  std::list<value_type> spares_;$/;"	m	class:asio::detail::hash_map	typeref:typename:std::list<value_type>
spawn	asio/include/asio/impl/spawn.hpp	/^inline void spawn(ASIO_MOVE_ARG(Function) function,$/;"	f	namespace:asio	typeref:typename:void
spawn	asio/include/asio/impl/spawn.hpp	/^inline void spawn(ExecutionContext& ctx,$/;"	f	namespace:asio	typeref:typename:void
spawn	asio/include/asio/impl/spawn.hpp	/^inline void spawn(const Executor& ex,$/;"	f	namespace:asio	typeref:typename:void
spawn	asio/include/asio/impl/spawn.hpp	/^inline void spawn(const asio::io_context::strand& s,$/;"	f	namespace:asio	typeref:typename:void
spawn	asio/include/asio/impl/spawn.hpp	/^inline void spawn(const strand<Executor>& ex,$/;"	f	namespace:asio	typeref:typename:void
spawn	asio/include/asio/impl/spawn.hpp	/^void spawn(basic_yield_context<Handler> ctx,$/;"	f	namespace:asio	typeref:typename:void
spawn_data	asio/include/asio/impl/spawn.hpp	/^    spawn_data(ASIO_MOVE_ARG(Hand) handler,$/;"	f	struct:asio::detail::spawn_data
spawn_data	asio/include/asio/impl/spawn.hpp	/^  struct spawn_data : private noncopyable$/;"	s	namespace:asio::detail
spawn_echo_server_LDADD	asio/src/examples/cpp03/Makefile.am	/^spawn_echo_server_LDADD = $(LDADD) -lboost_coroutine -lboost_context -lboost_thread -lboost_chro/;"	m
spawn_echo_server_LDADD	asio/src/examples/cpp11/Makefile.am	/^spawn_echo_server_LDADD = $(LDADD) -lboost_coroutine -lboost_context -lboost_thread -lboost_chro/;"	m
spawn_echo_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^spawn_echo_server_SOURCES = spawn\/echo_server.cpp$/;"	m
spawn_echo_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^spawn_echo_server_SOURCES = spawn\/echo_server.cpp$/;"	m
spawn_helper	asio/include/asio/impl/spawn.hpp	/^  struct spawn_helper$/;"	s	namespace:asio::detail
spawn_parallel_grep_LDADD	asio/src/examples/cpp03/Makefile.am	/^spawn_parallel_grep_LDADD = $(LDADD) -lboost_coroutine -lboost_context -lboost_thread -lboost_ch/;"	m
spawn_parallel_grep_LDADD	asio/src/examples/cpp11/Makefile.am	/^spawn_parallel_grep_LDADD = $(LDADD) -lboost_coroutine -lboost_context -lboost_thread -lboost_ch/;"	m
spawn_parallel_grep_SOURCES	asio/src/examples/cpp03/Makefile.am	/^spawn_parallel_grep_SOURCES = spawn\/parallel_grep.cpp$/;"	m
spawn_parallel_grep_SOURCES	asio/src/examples/cpp11/Makefile.am	/^spawn_parallel_grep_SOURCES = spawn\/parallel_grep.cpp$/;"	m
spp	asio/src/tests/unit/generic/seq_packet_protocol.cpp	/^  typedef generic::seq_packet_protocol spp;$/;"	t	function:generic_seq_packet_protocol_socket_compile::test	typeref:typename:generic::seq_packet_protocol	file:
srcid	asio/src/doc/tutorial.xsl	/^    <xsl:variable name="srcid" select="concat(@id, 'src')"\/>$/;"	v	matchedTemplate:/doxygen
ss_bytes	asio/include/asio/detail/socket_types.hpp	/^  unsigned char ss_bytes[128 - sizeof(int)]; };$/;"	m	struct:asio::detail::sockaddr_storage_type	typeref:typename:unsigned char[]
ss_family	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  short ss_family;$/;"	m	struct:asio::detail::sockaddr_storage_emulation	typeref:typename:short
ss_family	asio/include/asio/detail/socket_types.hpp	/^struct sockaddr_storage_type { int ss_family;$/;"	m	struct:asio::detail::sockaddr_storage_type	typeref:typename:int
ssl	asio/include/asio/ssl/context.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/context_base.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/engine.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/handshake_op.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/io.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/openssl_init.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/password_callback.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/read_op.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/shutdown_op.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/stream_core.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/verify_callback.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/detail/write_op.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/error.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/impl/context.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/rfc2818_verification.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/stream.hpp	/^    SSL* ssl;$/;"	m	struct:asio::ssl::stream::impl_struct	typeref:typename:SSL *
ssl	asio/include/asio/ssl/stream.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/stream_base.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/verify_context.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl	asio/include/asio/ssl/verify_mode.hpp	/^namespace ssl {$/;"	n	namespace:asio
ssl_	asio/include/asio/ssl/detail/engine.hpp	/^  SSL* ssl_;$/;"	m	class:asio::ssl::detail::engine	typeref:typename:SSL *
ssl_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^ssl_client_SOURCES = ssl\/client.cpp$/;"	m
ssl_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^ssl_client_SOURCES = ssl\/client.cpp$/;"	m
ssl_errors	asio/include/asio/ssl/error.hpp	/^enum ssl_errors$/;"	g	namespace:asio::error
ssl_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^ssl_server_SOURCES = ssl\/server.cpp$/;"	m
ssl_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^ssl_server_SOURCES = ssl\/server.cpp$/;"	m
ssl_socket	asio/src/examples/cpp03/ssl/server.cpp	/^typedef asio::ssl::stream<asio::ip::tcp::socket> ssl_socket;$/;"	t	typeref:typename:asio::ssl::stream<asio::ip::tcp::socket>	file:
ssl_stream_compile	asio/src/tests/unit/ssl/stream.cpp	/^namespace ssl_stream_compile {$/;"	n	file:
sslv2	asio/include/asio/ssl/context_base.hpp	/^    sslv2,$/;"	e	enum:asio::ssl::context_base::method
sslv23	asio/include/asio/ssl/context_base.hpp	/^    sslv23,$/;"	e	enum:asio::ssl::context_base::method
sslv23_client	asio/include/asio/ssl/context_base.hpp	/^    sslv23_client,$/;"	e	enum:asio::ssl::context_base::method
sslv23_server	asio/include/asio/ssl/context_base.hpp	/^    sslv23_server,$/;"	e	enum:asio::ssl::context_base::method
sslv2_client	asio/include/asio/ssl/context_base.hpp	/^    sslv2_client,$/;"	e	enum:asio::ssl::context_base::method
sslv2_server	asio/include/asio/ssl/context_base.hpp	/^    sslv2_server,$/;"	e	enum:asio::ssl::context_base::method
sslv3	asio/include/asio/ssl/context_base.hpp	/^    sslv3,$/;"	e	enum:asio::ssl::context_base::method
sslv3_client	asio/include/asio/ssl/context_base.hpp	/^    sslv3_client,$/;"	e	enum:asio::ssl::context_base::method
sslv3_server	asio/include/asio/ssl/context_base.hpp	/^    sslv3_server,$/;"	e	enum:asio::ssl::context_base::method
start	asio/include/asio/detail/handler_work.hpp	/^  static void start(Handler& handler) ASIO_NOEXCEPT$/;"	f	class:asio::detail::handler_work	typeref:typename:void
start	asio/include/asio/detail/handler_work.hpp	/^  static void start(Handler& handler,$/;"	f	class:asio::detail::handler_work	typeref:typename:void
start	asio/include/asio/detail/handler_work.hpp	/^  static void start(Handler&) ASIO_NOEXCEPT {}$/;"	f	class:asio::detail::handler_work	typeref:typename:void
start	asio/src/examples/cpp03/allocation/server.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp03/chat/chat_server.cpp	/^  void start()$/;"	f	class:chat_session	typeref:typename:void	file:
start	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp03/http/server/connection.cpp	/^void connection::start()$/;"	f	class:http::server::connection	typeref:typename:void
start	asio/src/examples/cpp03/http/server/connection_manager.cpp	/^void connection_manager::start(connection_ptr c)$/;"	f	class:http::server::connection_manager	typeref:typename:void
start	asio/src/examples/cpp03/http/server2/connection.cpp	/^void connection::start()$/;"	f	class:http::server2::connection	typeref:typename:void
start	asio/src/examples/cpp03/http/server3/connection.cpp	/^void connection::start()$/;"	f	class:http::server3::connection	typeref:typename:void
start	asio/src/examples/cpp03/local/connect_pair.cpp	/^  void start()$/;"	f	class:uppercase_filter	typeref:typename:void	file:
start	asio/src/examples/cpp03/local/stream_server.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  void start()$/;"	f	class:connection	typeref:typename:void	file:
start	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  static const control_request start(unsigned short port)$/;"	f	class:control_request	typeref:typename:const control_request
start	asio/src/examples/cpp03/ssl/server.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  void start(tcp::resolver::results_type endpoints)$/;"	f	class:client	typeref:typename:void	file:
start	asio/src/examples/cpp03/timeouts/server.cpp	/^  void start()$/;"	f	class:tcp_session	typeref:typename:void	file:
start	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  void start()$/;"	f	class:tcp_connection	typeref:typename:void	file:
start	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  void start()$/;"	f	class:tcp_connection	typeref:typename:void	file:
start	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  void start()$/;"	f	class:connection	typeref:typename:void	file:
start	asio/src/examples/cpp11/allocation/server.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp11/chat/chat_server.cpp	/^  void start()$/;"	f	class:chat_session	typeref:typename:void	file:
start	asio/src/examples/cpp11/echo/async_tcp_echo_server.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp11/http/server/connection.cpp	/^void connection::start()$/;"	f	class:http::server::connection	typeref:typename:void
start	asio/src/examples/cpp11/http/server/connection_manager.cpp	/^void connection_manager::start(connection_ptr c)$/;"	f	class:http::server::connection_manager	typeref:typename:void
start	asio/src/examples/cpp11/local/stream_server.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  void start()$/;"	f	class:connection	typeref:typename:void	file:
start	asio/src/examples/cpp11/ssl/server.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  void start(tcp::resolver::results_type endpoints)$/;"	f	class:client	typeref:typename:void	file:
start	asio/src/examples/cpp11/timeouts/server.cpp	/^  void start()$/;"	f	class:tcp_session	typeref:typename:void	file:
start	asio/src/examples/cpp14/echo/async_tcp_echo_server.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  void start()$/;"	f	class:chat_session	typeref:typename:void	file:
start	asio/src/tests/performance/client.cpp	/^  void start(asio::ip::tcp::resolver::results_type endpoints)$/;"	f	class:session	typeref:typename:void	file:
start	asio/src/tests/performance/server.cpp	/^  void start()$/;"	f	class:session	typeref:typename:void	file:
start_	asio/include/asio/impl/connect.hpp	/^    int start_;$/;"	m	class:asio::detail::iterator_connect_op	typeref:typename:int
start_	asio/include/asio/impl/connect.hpp	/^    int start_;$/;"	m	class:asio::detail::range_connect_op	typeref:typename:int
start_	asio/include/asio/impl/read.hpp	/^    int start_;$/;"	m	class:asio::detail::read_dynbuf_v1_op	typeref:typename:int
start_	asio/include/asio/impl/read.hpp	/^    int start_;$/;"	m	class:asio::detail::read_dynbuf_v2_op	typeref:typename:int
start_	asio/include/asio/impl/read.hpp	/^    int start_;$/;"	m	class:asio::detail::read_op	typeref:typename:int
start_	asio/include/asio/impl/read_at.hpp	/^    int start_;$/;"	m	class:asio::detail::read_at_op	typeref:typename:int
start_	asio/include/asio/impl/read_at.hpp	/^    int start_;$/;"	m	class:asio::detail::read_at_streambuf_op	typeref:typename:int
start_	asio/include/asio/impl/read_until.hpp	/^    int start_;$/;"	m	class:asio::detail::read_until_delim_op_v1	typeref:typename:int
start_	asio/include/asio/impl/read_until.hpp	/^    int start_;$/;"	m	class:asio::detail::read_until_delim_op_v2	typeref:typename:int
start_	asio/include/asio/impl/read_until.hpp	/^    int start_;$/;"	m	class:asio::detail::read_until_delim_string_op_v1	typeref:typename:int
start_	asio/include/asio/impl/read_until.hpp	/^    int start_;$/;"	m	class:asio::detail::read_until_delim_string_op_v2	typeref:typename:int
start_	asio/include/asio/impl/read_until.hpp	/^    int start_;$/;"	m	class:asio::detail::read_until_expr_op_v1	typeref:typename:int
start_	asio/include/asio/impl/read_until.hpp	/^    int start_;$/;"	m	class:asio::detail::read_until_expr_op_v2	typeref:typename:int
start_	asio/include/asio/impl/read_until.hpp	/^    int start_;$/;"	m	class:asio::detail::read_until_match_op_v1	typeref:typename:int
start_	asio/include/asio/impl/read_until.hpp	/^    int start_;$/;"	m	class:asio::detail::read_until_match_op_v2	typeref:typename:int
start_	asio/include/asio/impl/write.hpp	/^    int start_;$/;"	m	class:asio::detail::write_op	typeref:typename:int
start_	asio/include/asio/impl/write_at.hpp	/^    int start_;$/;"	m	class:asio::detail::write_at_op	typeref:typename:int
start_	asio/include/asio/ssl/detail/io.hpp	/^  int start_;$/;"	m	class:asio::ssl::detail::io_op	typeref:typename:int
start_accept	asio/src/examples/cpp03/chat/chat_server.cpp	/^  void start_accept()$/;"	f	class:chat_server	typeref:typename:void	file:
start_accept	asio/src/examples/cpp03/echo/async_tcp_echo_server.cpp	/^  void start_accept()$/;"	f	class:server	typeref:typename:void	file:
start_accept	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  void start_accept()$/;"	f	class:server	typeref:typename:void	file:
start_accept	asio/src/examples/cpp03/http/server/server.cpp	/^void server::start_accept()$/;"	f	class:http::server::server	typeref:typename:void
start_accept	asio/src/examples/cpp03/http/server2/server.cpp	/^void server::start_accept()$/;"	f	class:http::server2::server	typeref:typename:void
start_accept	asio/src/examples/cpp03/http/server3/server.cpp	/^void server::start_accept()$/;"	f	class:http::server3::server	typeref:typename:void
start_accept	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  void start_accept()$/;"	f	class:server	typeref:typename:void	file:
start_accept	asio/src/examples/cpp03/ssl/server.cpp	/^  void start_accept()$/;"	f	class:server	typeref:typename:void	file:
start_accept	asio/src/examples/cpp03/timeouts/server.cpp	/^  void start_accept()$/;"	f	class:server	typeref:typename:void	file:
start_accept	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  void start_accept()$/;"	f	class:tcp_server	typeref:typename:void	file:
start_accept	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  void start_accept()$/;"	f	class:tcp_server	typeref:typename:void	file:
start_accept	asio/src/examples/cpp03/windows/transmit_file.cpp	/^  void start_accept()$/;"	f	class:server	typeref:typename:void	file:
start_accept	asio/src/tests/performance/server.cpp	/^  void start_accept()$/;"	f	class:server	typeref:typename:void	file:
start_connect	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  void start_connect(tcp::resolver::results_type::iterator endpoint_iter)$/;"	f	class:client	typeref:typename:void	file:
start_connect	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  void start_connect(tcp::resolver::results_type::iterator endpoint_iter)$/;"	f	class:client	typeref:typename:void	file:
start_operations	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  void start_operations()$/;"	f	class:connection	typeref:typename:void	file:
start_read	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  void start_read()$/;"	f	class:server	typeref:typename:void	file:
start_read	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  void start_read()$/;"	f	class:client	typeref:typename:void	file:
start_read	asio/src/examples/cpp03/timeouts/server.cpp	/^  void start_read()$/;"	f	class:tcp_session	typeref:typename:void	file:
start_read	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  void start_read()$/;"	f	class:client	typeref:typename:void	file:
start_read_at_buffer_sequence_op	asio/include/asio/impl/read_at.hpp	/^  inline void start_read_at_buffer_sequence_op(AsyncRandomAccessReadDevice& d,$/;"	f	namespace:asio::detail	typeref:typename:void
start_read_buffer_sequence_op	asio/include/asio/impl/read.hpp	/^  inline void start_read_buffer_sequence_op(AsyncReadStream& stream,$/;"	f	namespace:asio::detail	typeref:typename:void
start_receive	asio/src/examples/cpp03/fork/daemon.cpp	/^  void start_receive()$/;"	f	class:udp_daytime_server	typeref:typename:void	file:
start_receive	asio/src/examples/cpp03/icmp/ping.cpp	/^  void start_receive()$/;"	f	class:pinger	typeref:typename:void	file:
start_receive	asio/src/examples/cpp03/tutorial/daytime6/server.cpp	/^  void start_receive()$/;"	f	class:udp_server	typeref:typename:void	file:
start_receive	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  void start_receive()$/;"	f	class:udp_server	typeref:typename:void	file:
start_send	asio/src/examples/cpp03/icmp/ping.cpp	/^  void start_send()$/;"	f	class:pinger	typeref:typename:void	file:
start_signal_wait	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  void start_signal_wait()$/;"	f	class:server	typeref:typename:void	file:
start_sleep_increments	asio/src/tests/unit/io_context.cpp	/^void start_sleep_increments(io_context* ioc, int* count)$/;"	f	typeref:typename:void
start_sleep_increments	asio/src/tests/unit/io_context_strand.cpp	/^void start_sleep_increments(io_context* ioc, io_context::strand* s, int* count)$/;"	f	typeref:typename:void
start_sleep_increments	asio/src/tests/unit/strand.cpp	/^void start_sleep_increments(io_context* ioc,$/;"	f	typeref:typename:void
start_write	asio/src/examples/cpp03/fork/process_per_connection.cpp	/^  void start_write(std::size_t length)$/;"	f	class:server	typeref:typename:void	file:
start_write	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  void start_write()$/;"	f	class:client	typeref:typename:void	file:
start_write	asio/src/examples/cpp03/timeouts/server.cpp	/^  void start_write()$/;"	f	class:tcp_session	typeref:typename:void	file:
start_write	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  void start_write()$/;"	f	class:client	typeref:typename:void	file:
start_write_at_buffer_sequence_op	asio/include/asio/impl/write_at.hpp	/^  inline void start_write_at_buffer_sequence_op(AsyncRandomAccessWriteDevice& d,$/;"	f	namespace:asio::detail	typeref:typename:void
start_write_buffer_sequence_op	asio/include/asio/impl/write.hpp	/^  inline void start_write_buffer_sequence_op(AsyncWriteStream& stream,$/;"	f	namespace:asio::detail	typeref:typename:void
starting	asio/src/examples/cpp11/operations/composed_6.cpp	/^      enum { starting, waiting, writing } state_;$/;"	e	enum:async_write_message_initiation::operator ()::intermediate_completion_handler::__anonf893724c0103	file:
starting	asio/src/examples/cpp11/operations/composed_7.cpp	/^  enum { starting, waiting, writing } state_;$/;"	e	enum:async_write_messages_implementation::__anonf8a58acd0103	file:
starting	asio/src/examples/cpp14/operations/composed_6.cpp	/^      enum { starting, waiting, writing } state_;$/;"	e	enum:async_write_messages::__anon32feb80f0102::intermediate_completion_handler::__anon32feb80f0203	file:
starting	asio/src/examples/cpp14/operations/composed_7.cpp	/^  enum { starting, waiting, writing };$/;"	e	enum:async_write_messages::__anon3310d0900103	file:
starting	asio/src/tests/unit/compose.cpp	/^  enum { starting, posting } state_;$/;"	e	enum:impl_0_completion_args::__anon61920b0f0103	file:
starting	asio/src/tests/unit/compose.cpp	/^  enum { starting, posting } state_;$/;"	e	enum:impl_1_completion_arg::__anon61920b0f0203	file:
starts-with-whitespace	asio/src/doc/reference.xsl	/^      starts-with($text, ' ') or starts-with($text, $newline)"\/>$/;"	v	matchedTemplate:text()
starts-with-whitespace	asio/src/doc/tutorial.xsl	/^      starts-with($text, ' ') or starts-with($text, $newline)"\/>$/;"	v	matchedTemplate:text()
state	asio/src/examples/cpp03/http/server/request_parser.hpp	/^  enum state$/;"	g	class:http::server::request_parser
state	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^  enum state$/;"	g	class:http::server2::request_parser
state	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^  enum state$/;"	g	class:http::server3::request_parser
state	asio/src/examples/cpp11/http/server/request_parser.hpp	/^  enum state$/;"	g	class:http::server::request_parser
state_	asio/include/asio/detail/posix_event.hpp	/^  std::size_t state_;$/;"	m	class:asio::detail::posix_event	typeref:typename:std::size_t
state_	asio/include/asio/detail/reactive_descriptor_service.hpp	/^    descriptor_ops::state_type state_;$/;"	m	class:asio::detail::reactive_descriptor_service::implementation_type	typeref:typename:descriptor_ops::state_type
state_	asio/include/asio/detail/reactive_socket_accept_op.hpp	/^  socket_ops::state_type state_;$/;"	m	class:asio::detail::reactive_socket_accept_op_base	typeref:typename:socket_ops::state_type
state_	asio/include/asio/detail/reactive_socket_recv_op.hpp	/^  socket_ops::state_type state_;$/;"	m	class:asio::detail::reactive_socket_recv_op_base	typeref:typename:socket_ops::state_type
state_	asio/include/asio/detail/reactive_socket_send_op.hpp	/^  socket_ops::state_type state_;$/;"	m	class:asio::detail::reactive_socket_send_op_base	typeref:typename:socket_ops::state_type
state_	asio/include/asio/detail/reactive_socket_service_base.hpp	/^    socket_ops::state_type state_;$/;"	m	struct:asio::detail::reactive_socket_service_base::base_implementation_type	typeref:typename:socket_ops::state_type
state_	asio/include/asio/detail/std_event.hpp	/^    std::size_t& state_;$/;"	m	class:asio::detail::std_event::waiter	typeref:typename:std::size_t &
state_	asio/include/asio/detail/std_event.hpp	/^  std::size_t state_;$/;"	m	class:asio::detail::std_event	typeref:typename:std::size_t
state_	asio/include/asio/detail/win_event.hpp	/^  std::size_t state_;$/;"	m	class:asio::detail::win_event	typeref:typename:std::size_t
state_	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^  socket_ops::state_type state_;$/;"	m	class:asio::detail::win_iocp_socket_recv_op	typeref:typename:socket_ops::state_type
state_	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^    socket_ops::state_type state_;$/;"	m	struct:asio::detail::win_iocp_socket_service_base::base_implementation_type	typeref:typename:socket_ops::state_type
state_	asio/src/examples/cpp03/http/server/request_parser.hpp	/^  } state_;$/;"	m	class:http::server::request_parser	typeref:enum:http::server::request_parser::state
state_	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^  } state_;$/;"	m	class:http::server2::request_parser	typeref:enum:http::server2::request_parser::state
state_	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^  } state_;$/;"	m	class:http::server3::request_parser	typeref:enum:http::server3::request_parser::state
state_	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  enum { reading, writing } state_;$/;"	m	class:third_party_lib::session	typeref:enum:third_party_lib::session::__anon5335a9ae0103	file:
state_	asio/src/examples/cpp11/http/server/request_parser.hpp	/^  } state_;$/;"	m	class:http::server::request_parser	typeref:enum:http::server::request_parser::state
state_	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  enum { reading, writing } state_ = reading;$/;"	m	class:third_party_lib::session	typeref:enum:third_party_lib::session::__anon68f665cd0103	file:
state_	asio/src/examples/cpp11/operations/composed_6.cpp	/^      enum { starting, waiting, writing } state_;$/;"	m	struct:async_write_message_initiation::operator ()::intermediate_completion_handler	typeref:enum:async_write_message_initiation::operator ()::intermediate_completion_handler::__anonf893724c0103	file:
state_	asio/src/examples/cpp11/operations/composed_7.cpp	/^  enum { starting, waiting, writing } state_;$/;"	m	struct:async_write_messages_implementation	typeref:enum:async_write_messages_implementation::__anonf8a58acd0103	file:
state_	asio/src/examples/cpp14/operations/composed_6.cpp	/^      enum { starting, waiting, writing } state_;$/;"	m	struct:async_write_messages::__anon32feb80f0102::intermediate_completion_handler	typeref:enum:async_write_messages::__anon32feb80f0102::intermediate_completion_handler::__anon32feb80f0203	file:
state_	asio/src/tests/unit/compose.cpp	/^  enum { starting, posting } state_;$/;"	m	class:impl_0_completion_args	typeref:enum:impl_0_completion_args::__anon61920b0f0103	file:
state_	asio/src/tests/unit/compose.cpp	/^  enum { starting, posting } state_;$/;"	m	class:impl_1_completion_arg	typeref:enum:impl_1_completion_arg::__anon61920b0f0203	file:
state_type	asio/include/asio/detail/descriptor_ops.hpp	/^typedef unsigned char state_type;$/;"	t	namespace:asio::detail::descriptor_ops	typeref:typename:unsigned char
state_type	asio/include/asio/detail/socket_ops.hpp	/^typedef unsigned char state_type;$/;"	t	namespace:asio::detail::socket_ops	typeref:typename:unsigned char
static_mutex	asio/include/asio/detail/static_mutex.hpp	/^typedef null_static_mutex static_mutex;$/;"	t	namespace:asio::detail	typeref:typename:null_static_mutex
static_ptr_	asio/include/asio/detail/posix_global.hpp	/^  static T* static_ptr_;$/;"	m	struct:asio::detail::posix_global_impl	typeref:typename:T *
static_ptr_	asio/include/asio/detail/posix_global.hpp	/^T* posix_global_impl<T>::static_ptr_ = 0;$/;"	m	class:asio::detail::posix_global_impl<T>	typeref:typename:T *
stats	asio/src/tests/performance/client.cpp	/^  stats()$/;"	f	class:stats	file:
stats	asio/src/tests/performance/client.cpp	/^class stats$/;"	c	file:
stats_	asio/src/tests/performance/client.cpp	/^  stats stats_;$/;"	m	class:client	typeref:typename:stats	file:
stats_	asio/src/tests/performance/client.cpp	/^  stats& stats_;$/;"	m	class:session	typeref:typename:stats &	file:
status	asio/include/asio/detail/reactor_op.hpp	/^  enum status { not_done, done, done_and_exhausted };$/;"	g	class:asio::detail::reactor_op
status	asio/src/examples/cpp03/http/server/reply.hpp	/^  } status;$/;"	m	struct:http::server::reply	typeref:enum:http::server::reply::status_type
status	asio/src/examples/cpp03/http/server2/reply.hpp	/^  } status;$/;"	m	struct:http::server2::reply	typeref:enum:http::server2::reply::status_type
status	asio/src/examples/cpp03/http/server3/reply.hpp	/^  } status;$/;"	m	struct:http::server3::reply	typeref:enum:http::server3::reply::status_type
status	asio/src/examples/cpp03/http/server4/reply.hpp	/^  } status;$/;"	m	struct:http::server4::reply	typeref:enum:http::server4::reply::status_type
status	asio/src/examples/cpp03/socks4/socks4.hpp	/^  unsigned char status() const$/;"	f	class:socks4::reply	typeref:typename:unsigned char
status	asio/src/examples/cpp11/http/server/reply.hpp	/^  } status;$/;"	m	struct:http::server::reply	typeref:enum:http::server::reply::status_type
status	asio/src/examples/cpp11/socks4/socks4.hpp	/^  unsigned char status() const$/;"	f	class:socks4::reply	typeref:typename:unsigned char
status_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  unsigned char status_;$/;"	m	class:socks4::reply	typeref:typename:unsigned char
status_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  unsigned char status_;$/;"	m	class:socks4::reply	typeref:typename:unsigned char
status_strings	asio/src/examples/cpp03/http/server/reply.cpp	/^namespace status_strings {$/;"	n	namespace:http::server	file:
status_strings	asio/src/examples/cpp03/http/server2/reply.cpp	/^namespace status_strings {$/;"	n	namespace:http::server2	file:
status_strings	asio/src/examples/cpp03/http/server3/reply.cpp	/^namespace status_strings {$/;"	n	namespace:http::server3	file:
status_strings	asio/src/examples/cpp03/http/server4/reply.cpp	/^namespace status_strings {$/;"	n	namespace:http::server4	file:
status_strings	asio/src/examples/cpp11/http/server/reply.cpp	/^namespace status_strings {$/;"	n	namespace:http::server	file:
status_type	asio/src/examples/cpp03/http/server/reply.hpp	/^  enum status_type$/;"	g	struct:http::server::reply
status_type	asio/src/examples/cpp03/http/server2/reply.hpp	/^  enum status_type$/;"	g	struct:http::server2::reply
status_type	asio/src/examples/cpp03/http/server3/reply.hpp	/^  enum status_type$/;"	g	struct:http::server3::reply
status_type	asio/src/examples/cpp03/http/server4/reply.hpp	/^  enum status_type$/;"	g	struct:http::server4::reply
status_type	asio/src/examples/cpp03/socks4/socks4.hpp	/^  enum status_type$/;"	g	class:socks4::reply
status_type	asio/src/examples/cpp11/http/server/reply.hpp	/^  enum status_type$/;"	g	struct:http::server::reply
status_type	asio/src/examples/cpp11/socks4/socks4.hpp	/^  enum status_type$/;"	g	class:socks4::reply
std	asio/include/asio/error.hpp	/^namespace std {$/;"	n
std	asio/include/asio/impl/awaitable.hpp	/^namespace std { namespace experimental {$/;"	n
std	asio/include/asio/ssl/error.hpp	/^namespace std {$/;"	n
std_allocator_void	asio/include/asio/use_future.hpp	/^    ASIO_CONSTEXPR std_allocator_void()$/;"	f	struct:asio::use_future_t::std_allocator_void	typeref:typename:ASIO_CONSTEXPR
std_allocator_void	asio/include/asio/use_future.hpp	/^  struct std_allocator_void$/;"	s	class:asio::use_future_t
std_event	asio/include/asio/detail/std_event.hpp	/^  std_event()$/;"	f	class:asio::detail::std_event
std_event	asio/include/asio/detail/std_event.hpp	/^class std_event$/;"	c	namespace:asio::detail
std_fenced_block	asio/include/asio/detail/std_fenced_block.hpp	/^  explicit std_fenced_block(full_t)$/;"	f	class:asio::detail::std_fenced_block
std_fenced_block	asio/include/asio/detail/std_fenced_block.hpp	/^  explicit std_fenced_block(half_t)$/;"	f	class:asio::detail::std_fenced_block
std_fenced_block	asio/include/asio/detail/std_fenced_block.hpp	/^class std_fenced_block$/;"	c	namespace:asio::detail
std_global	asio/include/asio/detail/std_global.hpp	/^T& std_global()$/;"	f	namespace:asio::detail	typeref:typename:T &
std_global_impl	asio/include/asio/detail/std_global.hpp	/^struct std_global_impl$/;"	s	namespace:asio::detail
std_mutex	asio/include/asio/detail/std_mutex.hpp	/^  std_mutex()$/;"	f	class:asio::detail::std_mutex
std_mutex	asio/include/asio/detail/std_mutex.hpp	/^class std_mutex$/;"	c	namespace:asio::detail
std_static_mutex	asio/include/asio/detail/std_static_mutex.hpp	/^  std_static_mutex(int)$/;"	f	class:asio::detail::std_static_mutex
std_static_mutex	asio/include/asio/detail/std_static_mutex.hpp	/^class std_static_mutex$/;"	c	namespace:asio::detail
std_thread	asio/include/asio/detail/std_thread.hpp	/^  std_thread(Function f, unsigned int = 0)$/;"	f	class:asio::detail::std_thread
std_thread	asio/include/asio/detail/std_thread.hpp	/^class std_thread$/;"	c	namespace:asio::detail
steady_clock	asio/include/asio/detail/chrono.hpp	/^typedef std::chrono::monotonic_clock steady_clock;$/;"	t	namespace:asio::chrono	typeref:typename:std::chrono::monotonic_clock
steady_timer	asio/include/asio/steady_timer.hpp	/^typedef basic_waitable_timer<chrono::steady_clock> steady_timer;$/;"	t	namespace:asio	typeref:typename:basic_waitable_timer<chrono::steady_clock>
steady_timer	asio/include/asio/ts/netfwd.hpp	/^typedef basic_waitable_timer<chrono::steady_clock> steady_timer;$/;"	t	namespace:asio	typeref:typename:basic_waitable_timer<chrono::steady_clock>
stock	asio/src/examples/cpp03/serialization/stock.hpp	/^struct stock$/;"	s	namespace:s11n_example
stock_replies	asio/src/examples/cpp03/http/server/reply.cpp	/^namespace stock_replies {$/;"	n	namespace:http::server	file:
stock_replies	asio/src/examples/cpp03/http/server2/reply.cpp	/^namespace stock_replies {$/;"	n	namespace:http::server2	file:
stock_replies	asio/src/examples/cpp03/http/server3/reply.cpp	/^namespace stock_replies {$/;"	n	namespace:http::server3	file:
stock_replies	asio/src/examples/cpp03/http/server4/reply.cpp	/^namespace stock_replies {$/;"	n	namespace:http::server4	file:
stock_replies	asio/src/examples/cpp11/http/server/reply.cpp	/^namespace stock_replies {$/;"	n	namespace:http::server	file:
stock_reply	asio/src/examples/cpp03/http/server/reply.cpp	/^reply reply::stock_reply(reply::status_type status)$/;"	f	class:http::server::reply	typeref:typename:reply
stock_reply	asio/src/examples/cpp03/http/server2/reply.cpp	/^reply reply::stock_reply(reply::status_type status)$/;"	f	class:http::server2::reply	typeref:typename:reply
stock_reply	asio/src/examples/cpp03/http/server3/reply.cpp	/^reply reply::stock_reply(reply::status_type status)$/;"	f	class:http::server3::reply	typeref:typename:reply
stock_reply	asio/src/examples/cpp03/http/server4/reply.cpp	/^reply reply::stock_reply(reply::status_type status)$/;"	f	class:http::server4::reply	typeref:typename:reply
stock_reply	asio/src/examples/cpp11/http/server/reply.cpp	/^reply reply::stock_reply(reply::status_type status)$/;"	f	class:http::server::reply	typeref:typename:reply
stocks_	asio/src/examples/cpp03/serialization/client.cpp	/^  std::vector<stock> stocks_;$/;"	m	class:s11n_example::client	typeref:typename:std::vector<stock>	file:
stocks_	asio/src/examples/cpp03/serialization/server.cpp	/^  std::vector<stock> stocks_;$/;"	m	class:s11n_example::server	typeref:typename:std::vector<stock>	file:
stop	asio/src/examples/cpp03/http/server/connection.cpp	/^void connection::stop()$/;"	f	class:http::server::connection	typeref:typename:void
stop	asio/src/examples/cpp03/http/server/connection_manager.cpp	/^void connection_manager::stop(connection_ptr c)$/;"	f	class:http::server::connection_manager	typeref:typename:void
stop	asio/src/examples/cpp03/http/server2/io_context_pool.cpp	/^void io_context_pool::stop()$/;"	f	class:http::server2::io_context_pool	typeref:typename:void
stop	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  static const control_request stop(unsigned short port)$/;"	f	class:control_request	typeref:typename:const control_request
stop	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  void stop()$/;"	f	class:client	typeref:typename:void	file:
stop	asio/src/examples/cpp03/timeouts/server.cpp	/^  void stop()$/;"	f	class:tcp_session	typeref:typename:void	file:
stop	asio/src/examples/cpp11/executors/pipeline.cpp	/^  void stop()$/;"	f	class:queue_front	typeref:typename:void	file:
stop	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  void stop()$/;"	f	class:priority_scheduler	typeref:typename:void	file:
stop	asio/src/examples/cpp11/http/server/connection.cpp	/^void connection::stop()$/;"	f	class:http::server::connection	typeref:typename:void
stop	asio/src/examples/cpp11/http/server/connection_manager.cpp	/^void connection_manager::stop(connection_ptr c)$/;"	f	class:http::server::connection_manager	typeref:typename:void
stop	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  void stop()$/;"	f	class:client	typeref:typename:void	file:
stop	asio/src/examples/cpp11/timeouts/server.cpp	/^  void stop()$/;"	f	class:tcp_session	typeref:typename:void	file:
stop	asio/src/examples/cpp14/executors/pipeline.cpp	/^  void stop()$/;"	f	class:queue_front	typeref:typename:void	file:
stop	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  void stop()$/;"	f	class:priority_scheduler	typeref:typename:void	file:
stop	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  void stop()$/;"	f	class:chat_session	typeref:typename:void	file:
stop	asio/src/tests/performance/client.cpp	/^  void stop()$/;"	f	class:session	typeref:typename:void	file:
stop_	asio/src/examples/cpp11/executors/pipeline.cpp	/^  bool stop_ = false;$/;"	m	class:queue_impl_base	typeref:typename:bool	file:
stop_	asio/src/examples/cpp14/executors/pipeline.cpp	/^  bool stop_ = false;$/;"	m	class:queue_impl_base	typeref:typename:bool	file:
stop_all	asio/src/examples/cpp03/http/server/connection_manager.cpp	/^void connection_manager::stop_all()$/;"	f	class:http::server::connection_manager	typeref:typename:void
stop_all	asio/src/examples/cpp11/http/server/connection_manager.cpp	/^void connection_manager::stop_all()$/;"	f	class:http::server::connection_manager	typeref:typename:void
stop_bits	asio/include/asio/serial_port_base.hpp	/^  class stop_bits$/;"	c	class:asio::serial_port_base
stop_event_posted_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  long stop_event_posted_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:long
stop_thread_	asio/include/asio/detail/select_reactor.hpp	/^  bool stop_thread_;$/;"	m	class:asio::detail::select_reactor	typeref:typename:bool
stop_thread_	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^  bool stop_thread_;$/;"	m	class:asio::detail::winrt_timer_scheduler	typeref:typename:bool
stop_threads	asio/src/examples/cpp11/executors/fork_join.cpp	/^  void stop_threads()$/;"	f	class:fork_join_pool	typeref:typename:void	file:
stop_threads	asio/src/examples/cpp14/executors/fork_join.cpp	/^  void stop_threads()$/;"	f	class:fork_join_pool	typeref:typename:void	file:
stop_timer_	asio/src/tests/performance/client.cpp	/^  asio::steady_timer stop_timer_;$/;"	m	class:client	typeref:typename:asio::steady_timer	file:
stopped	asio/include/asio/detail/win_iocp_io_context.hpp	/^  bool stopped() const$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:bool
stopped	asio/src/examples/cpp03/timeouts/server.cpp	/^  bool stopped() const$/;"	f	class:tcp_session	typeref:typename:bool	file:
stopped	asio/src/examples/cpp11/timeouts/server.cpp	/^  bool stopped() const$/;"	f	class:tcp_session	typeref:typename:bool	file:
stopped_	asio/include/asio/detail/scheduler.hpp	/^  bool stopped_;$/;"	m	class:asio::detail::scheduler	typeref:typename:bool
stopped_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  mutable long stopped_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:long
stopped_	asio/src/examples/cpp03/timeouts/async_tcp_client.cpp	/^  bool stopped_;$/;"	m	class:client	typeref:typename:bool	file:
stopped_	asio/src/examples/cpp11/executors/priority_scheduler.cpp	/^  bool stopped_ = false;$/;"	m	class:priority_scheduler	typeref:typename:bool	file:
stopped_	asio/src/examples/cpp11/timeouts/async_tcp_client.cpp	/^  bool stopped_ = false;$/;"	m	class:client	typeref:typename:bool	file:
stopped_	asio/src/examples/cpp14/executors/priority_scheduler.cpp	/^  bool stopped_ = false;$/;"	m	class:priority_scheduler	typeref:typename:bool	file:
storage_	asio/include/asio/buffered_read_stream.hpp	/^  detail::buffered_stream_storage storage_;$/;"	m	class:asio::buffered_read_stream	typeref:typename:detail::buffered_stream_storage
storage_	asio/include/asio/buffered_write_stream.hpp	/^  detail::buffered_stream_storage storage_;$/;"	m	class:asio::buffered_write_stream	typeref:typename:detail::buffered_stream_storage
storage_	asio/include/asio/impl/buffered_read_stream.hpp	/^    detail::buffered_stream_storage& storage_;$/;"	m	class:asio::detail::buffered_fill_handler	typeref:typename:detail::buffered_stream_storage &
storage_	asio/include/asio/impl/buffered_read_stream.hpp	/^    detail::buffered_stream_storage& storage_;$/;"	m	class:asio::detail::buffered_read_some_handler	typeref:typename:detail::buffered_stream_storage &
storage_	asio/include/asio/impl/buffered_write_stream.hpp	/^    detail::buffered_stream_storage& storage_;$/;"	m	class:asio::detail::buffered_flush_handler	typeref:typename:detail::buffered_stream_storage &
storage_	asio/include/asio/impl/buffered_write_stream.hpp	/^    detail::buffered_stream_storage& storage_;$/;"	m	class:asio::detail::buffered_write_some_handler	typeref:typename:detail::buffered_stream_storage &
storage_	asio/src/examples/cpp03/allocation/server.cpp	/^  boost::aligned_storage<1024> storage_;$/;"	m	class:handler_memory	typeref:typename:boost::aligned_storage<1024>	file:
storage_	asio/src/examples/cpp11/allocation/server.cpp	/^  typename std::aligned_storage<1024>::type storage_;$/;"	m	class:handler_memory	typeref:typename:std::aligned_storage<1024>::type	file:
storage_	asio/src/tests/performance/handler_allocator.hpp	/^  boost::aligned_storage<1024> storage_;$/;"	m	class:handler_allocator	typeref:typename:boost::aligned_storage<1024>
store_function_type	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  typedef asio::error_code (*store_function_type)($/;"	t	class:asio::detail::reactive_serial_port_service	typeref:typename:asio::error_code (*)(const void *,termios &,asio::error_code &)
store_function_type	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  typedef asio::error_code (*store_function_type)($/;"	t	class:asio::detail::win_iocp_serial_port_service	typeref:typename:asio::error_code (*)(const void *,::DCB &,asio::error_code &)
store_option	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  static asio::error_code store_option(const void* option,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:asio::error_code
store_option	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  static asio::error_code store_option(const void* option,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:asio::error_code
strand	asio/include/asio/io_context_strand.hpp	/^  explicit strand(asio::io_context& io_context)$/;"	f	class:asio::io_context::strand
strand	asio/include/asio/io_context_strand.hpp	/^class io_context::strand$/;"	c	class:asio::io_context
strand	asio/include/asio/strand.hpp	/^  explicit strand(const Executor& e)$/;"	f	class:asio::strand
strand	asio/include/asio/strand.hpp	/^  strand($/;"	f	class:asio::strand
strand	asio/include/asio/strand.hpp	/^  strand()$/;"	f	class:asio::strand
strand	asio/include/asio/strand.hpp	/^  strand(const strand& other) ASIO_NOEXCEPT$/;"	f	class:asio::strand
strand	asio/include/asio/strand.hpp	/^  strand(strand&& other) ASIO_NOEXCEPT$/;"	f	class:asio::strand
strand	asio/include/asio/strand.hpp	/^  strand(strand<OtherExecutor>&& other) ASIO_NOEXCEPT$/;"	f	class:asio::strand
strand	asio/include/asio/strand.hpp	/^class strand$/;"	c	namespace:asio
strand_	asio/src/examples/cpp03/http/server3/connection.hpp	/^  asio::strand<asio::io_context::executor_type> strand_;$/;"	m	class:http::server3::connection	typeref:typename:asio::strand<asio::io_context::executor_type>
strand_	asio/src/examples/cpp03/spawn/echo_server.cpp	/^  asio::strand<asio::io_context::executor_type> strand_;$/;"	m	class:session	typeref:typename:asio::strand<asio::io_context::executor_type>	file:
strand_	asio/src/examples/cpp03/tutorial/timer5/timer.cpp	/^  asio::strand<asio::io_context::executor_type> strand_;$/;"	m	class:printer	typeref:typename:asio::strand<asio::io_context::executor_type>	file:
strand_	asio/src/examples/cpp11/spawn/echo_server.cpp	/^  asio::strand<asio::io_context::executor_type> strand_;$/;"	m	class:session	typeref:typename:asio::strand<asio::io_context::executor_type>	file:
strand_	asio/src/tests/performance/client.cpp	/^  asio::io_context::strand strand_;$/;"	m	class:session	typeref:typename:asio::io_context::strand	file:
strand_	asio/src/tests/performance/server.cpp	/^  asio::io_context::strand strand_;$/;"	m	class:session	typeref:typename:asio::io_context::strand	file:
strand_executor_service	asio/include/asio/detail/strand_executor_service.hpp	/^class strand_executor_service$/;"	c	namespace:asio::detail
strand_impl	asio/include/asio/detail/impl/strand_service.hpp	/^inline strand_service::strand_impl::strand_impl()$/;"	f	class:asio::detail::strand_service::strand_impl
strand_impl	asio/include/asio/detail/strand_executor_service.hpp	/^  class strand_impl$/;"	c	class:asio::detail::strand_executor_service
strand_impl	asio/include/asio/detail/strand_service.hpp	/^  class strand_impl$/;"	c	class:asio::detail::strand_service
strand_service	asio/include/asio/detail/strand_service.hpp	/^class strand_service$/;"	c	namespace:asio::detail
strand_test	asio/src/tests/unit/io_context_strand.cpp	/^void strand_test()$/;"	f	typeref:typename:void
strand_test	asio/src/tests/unit/strand.cpp	/^void strand_test()$/;"	f	typeref:typename:void
strand_wrap_test	asio/src/tests/unit/io_context_strand.cpp	/^void strand_wrap_test()$/;"	f	typeref:typename:void
stream	asio/include/asio/ssl/stream.hpp	/^  stream(Arg& arg, context& ctx)$/;"	f	class:asio::ssl::stream
stream	asio/include/asio/ssl/stream.hpp	/^  stream(Arg&& arg, context& ctx)$/;"	f	class:asio::ssl::stream
stream	asio/include/asio/ssl/stream.hpp	/^class stream :$/;"	c	namespace:asio::ssl
stream_	asio/include/asio/impl/read.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_buffer_sequence	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_dynbuf_v1	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_dynbuf_v2	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_dynbuf_v1_op	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_dynbuf_v2_op	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_op	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_until_delim_string_v1	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_until_delim_string_v2	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_until_delim_v1	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_until_delim_v2	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_until_expr_v1	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_until_expr_v2	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_until_match_v1	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::initiate_async_read_until_match_v2	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_until_delim_op_v1	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_until_delim_op_v2	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_until_delim_string_op_v1	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_until_delim_string_op_v2	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_until_expr_op_v1	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_until_expr_op_v2	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_until_match_op_v1	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/read_until.hpp	/^    AsyncReadStream& stream_;$/;"	m	class:asio::detail::read_until_match_op_v2	typeref:typename:AsyncReadStream &
stream_	asio/include/asio/impl/write.hpp	/^    AsyncWriteStream& stream_;$/;"	m	class:asio::detail::initiate_async_write_buffer_sequence	typeref:typename:AsyncWriteStream &
stream_	asio/include/asio/impl/write.hpp	/^    AsyncWriteStream& stream_;$/;"	m	class:asio::detail::initiate_async_write_dynbuf_v1	typeref:typename:AsyncWriteStream &
stream_	asio/include/asio/impl/write.hpp	/^    AsyncWriteStream& stream_;$/;"	m	class:asio::detail::initiate_async_write_dynbuf_v2	typeref:typename:AsyncWriteStream &
stream_	asio/include/asio/impl/write.hpp	/^    AsyncWriteStream& stream_;$/;"	m	class:asio::detail::write_dynbuf_v1_op	typeref:typename:AsyncWriteStream &
stream_	asio/include/asio/impl/write.hpp	/^    AsyncWriteStream& stream_;$/;"	m	class:asio::detail::write_dynbuf_v2_op	typeref:typename:AsyncWriteStream &
stream_	asio/include/asio/impl/write.hpp	/^    AsyncWriteStream& stream_;$/;"	m	class:asio::detail::write_op	typeref:typename:AsyncWriteStream &
stream_base	asio/include/asio/ssl/stream_base.hpp	/^class stream_base$/;"	c	namespace:asio::ssl
stream_core	asio/include/asio/ssl/detail/stream_core.hpp	/^  stream_core(SSL_CTX* context, const Executor& ex)$/;"	f	struct:asio::ssl::detail::stream_core
stream_core	asio/include/asio/ssl/detail/stream_core.hpp	/^struct stream_core$/;"	s	namespace:asio::ssl::detail
stream_descriptor	asio/include/asio/posix/stream_descriptor.hpp	/^typedef basic_stream_descriptor<> stream_descriptor;$/;"	t	namespace:asio::posix	typeref:typename:basic_stream_descriptor<>
stream_errc	asio/include/asio/error.hpp	/^namespace stream_errc {$/;"	n	namespace:asio
stream_errors	asio/include/asio/ssl/error.hpp	/^enum stream_errors$/;"	g	namespace:asio::ssl::error
stream_handle	asio/include/asio/windows/stream_handle.hpp	/^typedef basic_stream_handle<> stream_handle;$/;"	t	namespace:asio::windows	typeref:typename:basic_stream_handle<>
stream_impl_	asio/include/asio/buffered_stream.hpp	/^  read_stream_type stream_impl_;$/;"	m	class:asio::buffered_stream	typeref:typename:read_stream_type
stream_oriented	asio/include/asio/detail/socket_ops.hpp	/^  stream_oriented = 16,$/;"	e	enum:asio::detail::socket_ops::__anonc4fdc2e00103
stream_protocol	asio/include/asio/generic/stream_protocol.hpp	/^  stream_protocol(const Protocol& source_protocol)$/;"	f	class:asio::generic::stream_protocol
stream_protocol	asio/include/asio/generic/stream_protocol.hpp	/^  stream_protocol(int address_family, int socket_protocol)$/;"	f	class:asio::generic::stream_protocol
stream_protocol	asio/include/asio/generic/stream_protocol.hpp	/^class stream_protocol$/;"	c	namespace:asio::generic
stream_protocol	asio/include/asio/local/stream_protocol.hpp	/^class stream_protocol$/;"	c	namespace:asio::local
stream_truncated	asio/include/asio/ssl/error.hpp	/^  stream_truncated,$/;"	e	enum:asio::ssl::error::stream_errors
stream_type	asio/src/tests/unit/buffered_read_stream.cpp	/^    asio::ip::tcp::socket> stream_type;$/;"	t	typeref:typename:asio::buffered_read_stream<asio::ip::tcp::socket>	file:
stream_type	asio/src/tests/unit/buffered_stream.cpp	/^    asio::ip::tcp::socket> stream_type;$/;"	t	typeref:typename:asio::buffered_stream<asio::ip::tcp::socket>	file:
stream_type	asio/src/tests/unit/buffered_write_stream.cpp	/^    asio::ip::tcp::socket> stream_type;$/;"	t	typeref:typename:asio::buffered_write_stream<asio::ip::tcp::socket>	file:
streambuf	asio/include/asio/streambuf.hpp	/^typedef basic_streambuf<> streambuf;$/;"	t	namespace:asio	typeref:typename:basic_streambuf<>
streambuf_	asio/include/asio/basic_socket_iostream.hpp	/^  basic_socket_streambuf<Protocol, Clock, WaitTraits> streambuf_;$/;"	m	class:asio::detail::socket_iostream_base	typeref:typename:basic_socket_streambuf<Protocol,Clock,WaitTraits>
streambuf_	asio/include/asio/impl/read_at.hpp	/^    asio::basic_streambuf<Allocator>& streambuf_;$/;"	m	class:asio::detail::read_at_streambuf_op	typeref:typename:asio::basic_streambuf<Allocator> &
streambuf_	asio/include/asio/impl/write_at.hpp	/^    asio::basic_streambuf<Allocator>& streambuf_;$/;"	m	class:asio::detail::write_at_streambuf_op	typeref:typename:asio::basic_streambuf<Allocator> &
streambuf_test	asio/src/tests/unit/streambuf.cpp	/^void streambuf_test()$/;"	f	typeref:typename:void
string_	asio/include/asio/buffer.hpp	/^  std::basic_string<Elem, Traits, Allocator>& string_;$/;"	m	class:asio::dynamic_string_buffer	typeref:typename:std::basic_string<Elem,Traits,Allocator> &
strip-asio-ns	asio/src/doc/reference.xsl	/^<xsl:template name="strip-asio-ns">$/;"	n
strip-asio-ns	asio/src/doc/tutorial.xsl	/^<xsl:template name="strip-asio-ns">$/;"	n
strip-leading-whitespace	asio/src/doc/reference.xsl	/^<xsl:template name="strip-leading-whitespace">$/;"	n
strip-leading-whitespace	asio/src/doc/tutorial.xsl	/^<xsl:template name="strip-leading-whitespace">$/;"	n
strip-ns	asio/src/doc/reference.xsl	/^<xsl:template name="strip-ns">$/;"	n
stripped-type	asio/src/doc/reference.xsl	/^ <xsl:variable name="stripped-type">$/;"	v	matchedTemplate:memberdef
stripped-type	asio/src/doc/reference.xsl	/^<xsl:variable name="stripped-type">$/;"	v	namedTemplate:function
stripped-type	asio/src/doc/reference.xsl	/^<xsl:variable name="stripped-type">$/;"	v	namedTemplate:namespace-memberdef
subscriber	asio/src/examples/cpp03/timeouts/server.cpp	/^class subscriber$/;"	c	file:
subscriber	asio/src/examples/cpp11/timeouts/server.cpp	/^class subscriber$/;"	c	file:
subscriber_ptr	asio/src/examples/cpp03/timeouts/server.cpp	/^typedef boost::shared_ptr<subscriber> subscriber_ptr;$/;"	t	typeref:typename:boost::shared_ptr<subscriber>	file:
subscriber_ptr	asio/src/examples/cpp11/timeouts/server.cpp	/^typedef std::shared_ptr<subscriber> subscriber_ptr;$/;"	t	typeref:typename:std::shared_ptr<subscriber>	file:
subscribers_	asio/src/examples/cpp03/porthopper/server.cpp	/^  std::set<udp::endpoint> subscribers_;$/;"	m	class:server	typeref:typename:std::set<udp::endpoint>	file:
subscribers_	asio/src/examples/cpp03/timeouts/server.cpp	/^  std::set<subscriber_ptr> subscribers_;$/;"	m	class:channel	typeref:typename:std::set<subscriber_ptr>	file:
subscribers_	asio/src/examples/cpp11/timeouts/server.cpp	/^  std::set<subscriber_ptr> subscribers_;$/;"	m	class:channel	typeref:typename:std::set<subscriber_ptr>	file:
subtract	asio/include/asio/detail/chrono_time_traits.hpp	/^  static duration_type subtract(const time_type& t1, const time_type& t2)$/;"	f	struct:asio::detail::chrono_time_traits	typeref:typename:duration_type
subtract	asio/include/asio/time_traits.hpp	/^  static duration_type subtract(const time_type& t1, const time_type& t2)$/;"	f	struct:asio::time_traits	typeref:typename:duration_type
success	asio/src/examples/cpp03/socks4/socks4.hpp	/^  bool success() const$/;"	f	class:socks4::reply	typeref:typename:bool
success	asio/src/examples/cpp11/socks4/socks4.hpp	/^  bool success() const$/;"	f	class:socks4::reply	typeref:typename:bool
swap	asio/include/asio/ip/basic_resolver_results.hpp	/^  void swap(basic_resolver_results& that) ASIO_NOEXCEPT$/;"	f	class:asio::ip::basic_resolver_results	typeref:typename:void
swap_heap	asio/include/asio/detail/timer_queue.hpp	/^  void swap_heap(std::size_t index1, std::size_t index2)$/;"	f	class:asio::detail::timer_queue	typeref:typename:void
sync	asio/include/asio/basic_socket_streambuf.hpp	/^  int sync()$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:int
system_context	asio/include/asio/system_context.hpp	/^class system_context : public execution_context$/;"	c	namespace:asio
system_error	asio/include/asio/system_error.hpp	/^typedef std::system_error system_error;$/;"	t	namespace:asio	typeref:typename:std::system_error
system_executor	asio/include/asio/system_executor.hpp	/^class system_executor$/;"	c	namespace:asio
system_timer	asio/include/asio/system_timer.hpp	/^typedef basic_waitable_timer<chrono::system_clock> system_timer;$/;"	t	namespace:asio	typeref:typename:basic_waitable_timer<chrono::system_clock>
system_timer	asio/include/asio/ts/netfwd.hpp	/^typedef basic_waitable_timer<chrono::system_clock> system_timer;$/;"	t	namespace:asio	typeref:typename:basic_waitable_timer<chrono::system_clock>
system_timer_cancel_test	asio/src/tests/unit/system_timer.cpp	/^void system_timer_cancel_test()$/;"	f	typeref:typename:void
system_timer_custom_allocation_test	asio/src/tests/unit/system_timer.cpp	/^void system_timer_custom_allocation_test()$/;"	f	typeref:typename:void
system_timer_move_test	asio/src/tests/unit/system_timer.cpp	/^void system_timer_move_test()$/;"	f	typeref:typename:void
system_timer_test	asio/src/tests/unit/system_timer.cpp	/^void system_timer_test()$/;"	f	typeref:typename:void
system_timer_thread_test	asio/src/tests/unit/system_timer.cpp	/^void system_timer_thread_test()$/;"	f	typeref:typename:void
t	asio/src/tests/unit/deadline_timer.cpp	/^    asio::deadline_timer t;$/;"	m	struct:deadline_timer_cancel_test::timer	typeref:typename:asio::deadline_timer	file:
t	asio/src/tests/unit/deadline_timer.cpp	/^    asio::deadline_timer t;$/;"	m	struct:deadline_timer_custom_allocation_test::timer	typeref:typename:asio::deadline_timer	file:
t	asio/src/tests/unit/system_timer.cpp	/^    asio::system_timer t;$/;"	m	struct:system_timer_cancel_test::timer	typeref:typename:asio::system_timer	file:
t	asio/src/tests/unit/system_timer.cpp	/^    asio::system_timer t;$/;"	m	struct:system_timer_custom_allocation_test::timer	typeref:typename:asio::system_timer	file:
t_	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^    T* t_;$/;"	m	class:asio::async_result::completion_handler_type	typeref:typename:T *	file:
t_	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  T t_;$/;"	m	class:asio::async_result	typeref:typename:T	file:
t_	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^    T* t_;$/;"	m	class:asio::async_result::completion_handler_type	typeref:typename:T *	file:
t_	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  T t_;$/;"	m	class:asio::async_result	typeref:typename:T	file:
tail_	asio/include/asio/impl/compose.hpp	/^    composed_io_executors<void(Tail...)> tail_;$/;"	m	struct:asio::detail::composed_io_executors	typeref:typename:composed_io_executors<void (Tail...)>
tail_	asio/include/asio/impl/compose.hpp	/^    composed_work<void(Tail...)> tail_;$/;"	m	struct:asio::detail::composed_work	typeref:typename:composed_work<void (Tail...)>
tail_send	asio/src/examples/cpp11/executors/actor.cpp	/^  void tail_send(Message msg, actor_address to)$/;"	f	class:actor	typeref:typename:void	file:
tail_send	asio/src/examples/cpp14/executors/actor.cpp	/^  void tail_send(Message msg, actor_address to)$/;"	f	class:actor	typeref:typename:void	file:
target	asio/include/asio/impl/executor.hpp	/^  const void* target() const ASIO_NOEXCEPT$/;"	f	class:asio::executor::impl	typeref:typename:const void *
target	asio/include/asio/impl/executor.hpp	/^  void* target() ASIO_NOEXCEPT$/;"	f	class:asio::executor::impl	typeref:typename:void *
target	asio/include/asio/impl/executor.hpp	/^Executor* executor::target() ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:Executor *
target	asio/include/asio/impl/executor.hpp	/^const Executor* executor::target() const ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:const Executor *
target_	asio/include/asio/bind_executor.hpp	/^  T target_;$/;"	m	class:asio::detail::executor_binder_base	typeref:typename:T
target_	asio/include/asio/bind_executor.hpp	/^  async_result<T, Signature> target_;$/;"	m	class:asio::async_result	typeref:typename:async_result<T,Signature>
target_endpoint	asio/src/tests/unit/connect.cpp	/^  asio::ip::tcp::endpoint target_endpoint()$/;"	f	class:connection_sink	typeref:typename:asio::ip::tcp::endpoint	file:
target_endpoint_	asio/src/tests/unit/connect.cpp	/^  asio::ip::tcp::endpoint target_endpoint_;$/;"	m	class:connection_sink	typeref:typename:asio::ip::tcp::endpoint	file:
target_type	asio/include/asio/bind_executor.hpp	/^  typedef T target_type;$/;"	t	class:asio::executor_binder	typeref:typename:T
target_type	asio/include/asio/executor.hpp	/^  const std::type_info& target_type() const ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:const std::type_info &
target_type	asio/include/asio/executor.hpp	/^  const void* target_type() const ASIO_NOEXCEPT$/;"	f	class:asio::executor	typeref:typename:const void *
target_type	asio/include/asio/impl/executor.hpp	/^  type_id_result_type target_type() const ASIO_NOEXCEPT$/;"	f	class:asio::executor::impl	typeref:typename:type_id_result_type
task_	asio/include/asio/detail/scheduler.hpp	/^  reactor* task_;$/;"	m	class:asio::detail::scheduler	typeref:typename:reactor *
task_interrupted_	asio/include/asio/detail/scheduler.hpp	/^  bool task_interrupted_;$/;"	m	class:asio::detail::scheduler	typeref:typename:bool
task_operation	asio/include/asio/detail/scheduler.hpp	/^    task_operation() : operation(0) {}$/;"	f	struct:asio::detail::scheduler::task_operation
task_operation	asio/include/asio/detail/scheduler.hpp	/^  struct task_operation : operation$/;"	s	class:asio::detail::scheduler
task_operation_	asio/include/asio/detail/scheduler.hpp	/^  } task_operation_;$/;"	m	class:asio::detail::scheduler	typeref:struct:asio::detail::scheduler::task_operation
task_result_	asio/include/asio/detail/scheduler_operation.hpp	/^  unsigned int task_result_; \/\/ Passed into bytes transferred.$/;"	m	class:asio::detail::ASIO_INHERIT_TRACKED_HANDLER	typeref:typename:unsigned int
tcp	asio/include/asio/ip/tcp.hpp	/^  explicit tcp(int protocol_family) ASIO_NOEXCEPT$/;"	f	class:asio::ip::tcp
tcp	asio/include/asio/ip/tcp.hpp	/^class tcp$/;"	c	namespace:asio::ip
tcp	asio/src/examples/cpp03/http/server4/server.hpp	/^  typedef asio::ip::tcp tcp;$/;"	t	class:http::server4::server	typeref:typename:asio::ip::tcp
tcp_acceptor	asio/src/examples/cpp03/windows/transmit_file.cpp	/^    asio::io_context::executor_type> tcp_acceptor;$/;"	t	typeref:typename:asio::basic_socket_acceptor<tcp,asio::io_context::executor_type>	file:
tcp_acceptor	asio/src/examples/cpp17/coroutines_ts/echo_server_with_default.cpp	/^using tcp_acceptor = use_awaitable_t<>::as_default_on_t<tcp::acceptor>;$/;"	t	typeref:typename:use_awaitable_t<>::as_default_on_t<tcp::acceptor>	file:
tcp_connection	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  tcp_connection(asio::io_context& io_context)$/;"	f	class:tcp_connection	file:
tcp_connection	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^class tcp_connection$/;"	c	file:
tcp_connection	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  tcp_connection(asio::io_context& io_context)$/;"	f	class:tcp_connection	file:
tcp_connection	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^class tcp_connection$/;"	c	file:
tcp_server	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^  tcp_server(asio::io_context& io_context)$/;"	f	class:tcp_server	file:
tcp_server	asio/src/examples/cpp03/tutorial/daytime3/server.cpp	/^class tcp_server$/;"	c	file:
tcp_server	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  tcp_server(asio::io_context& io_context)$/;"	f	class:tcp_server	file:
tcp_server	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^class tcp_server$/;"	c	file:
tcp_server	asio/src/tests/latency/tcp_server.cpp	/^  tcp_server(tcp::acceptor& acceptor, std::size_t buf_size) :$/;"	f	class:tcp_server	file:
tcp_server	asio/src/tests/latency/tcp_server.cpp	/^class tcp_server : asio::coroutine$/;"	c	file:
tcp_session	asio/src/examples/cpp03/timeouts/server.cpp	/^  tcp_session(asio::io_context& io_context, channel& ch)$/;"	f	class:tcp_session	file:
tcp_session	asio/src/examples/cpp03/timeouts/server.cpp	/^class tcp_session$/;"	c	file:
tcp_session	asio/src/examples/cpp11/timeouts/server.cpp	/^  tcp_session(tcp::socket socket, channel& ch)$/;"	f	class:tcp_session	file:
tcp_session	asio/src/examples/cpp11/timeouts/server.cpp	/^class tcp_session$/;"	c	file:
tcp_session_ptr	asio/src/examples/cpp03/timeouts/server.cpp	/^typedef boost::shared_ptr<tcp_session> tcp_session_ptr;$/;"	t	typeref:typename:boost::shared_ptr<tcp_session>	file:
tcp_session_ptr	asio/src/examples/cpp11/timeouts/server.cpp	/^typedef std::shared_ptr<tcp_session> tcp_session_ptr;$/;"	t	typeref:typename:std::shared_ptr<tcp_session>	file:
tcp_socket	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^    asio::io_context::executor_type> tcp_socket;$/;"	t	typeref:typename:asio::basic_stream_socket<tcp,asio::io_context::executor_type>	file:
tcp_socket	asio/src/examples/cpp03/windows/transmit_file.cpp	/^    asio::io_context::executor_type> tcp_socket;$/;"	t	typeref:typename:asio::basic_stream_socket<tcp,asio::io_context::executor_type>	file:
tcp_socket	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^using tcp_socket = asio::basic_stream_socket<$/;"	t	typeref:typename:asio::basic_stream_socket<tcp,asio::io_context::executor_type>	file:
tcp_socket	asio/src/examples/cpp17/coroutines_ts/echo_server_with_default.cpp	/^using tcp_socket = use_awaitable_t<>::as_default_on_t<tcp::socket>;$/;"	t	typeref:typename:use_awaitable_t<>::as_default_on_t<tcp::socket>	file:
tcp_socket_ptr	asio/src/examples/cpp03/porthopper/server.cpp	/^typedef boost::shared_ptr<tcp::socket> tcp_socket_ptr;$/;"	t	typeref:typename:boost::shared_ptr<tcp::socket>	file:
templateparamlist	asio/src/doc/reference.xsl	/^<xsl:template match="templateparamlist" mode="class-detail">$/;"	m
terminate_threads	asio/include/asio/detail/win_thread.hpp	/^  static bool terminate_threads()$/;"	f	class:asio::detail::win_thread_base	typeref:typename:bool
terminate_threads_	asio/include/asio/detail/win_thread.hpp	/^  static long terminate_threads_;$/;"	m	class:asio::detail::win_thread_base	typeref:typename:long
terminate_threads_	asio/include/asio/detail/win_thread.hpp	/^long win_thread_base<T>::terminate_threads_ = 0;$/;"	m	class:asio::detail::win_thread_base<T>	typeref:typename:long
test	asio/src/tests/unit/buffer.cpp	/^void test()$/;"	f	namespace:buffer_compile	typeref:typename:void
test	asio/src/tests/unit/buffer.cpp	/^void test()$/;"	f	namespace:buffer_copy_runtime	typeref:typename:void
test	asio/src/tests/unit/buffer.cpp	/^void test()$/;"	f	namespace:is_buffer_sequence	typeref:typename:void
test	asio/src/tests/unit/buffers_iterator.cpp	/^void test()$/;"	f	namespace:buffers_iterator_compile	typeref:typename:void
test	asio/src/tests/unit/generic/datagram_protocol.cpp	/^void test()$/;"	f	namespace:generic_datagram_protocol_socket_compile	typeref:typename:void
test	asio/src/tests/unit/generic/raw_protocol.cpp	/^void test()$/;"	f	namespace:generic_raw_protocol_socket_compile	typeref:typename:void
test	asio/src/tests/unit/generic/seq_packet_protocol.cpp	/^void test()$/;"	f	namespace:generic_seq_packet_protocol_socket_compile	typeref:typename:void
test	asio/src/tests/unit/generic/stream_protocol.cpp	/^void test()$/;"	f	namespace:generic_stream_protocol_socket_compile	typeref:typename:void
test	asio/src/tests/unit/ip/address.cpp	/^void test()$/;"	f	namespace:ip_address_compile	typeref:typename:void
test	asio/src/tests/unit/ip/address_v4.cpp	/^void test()$/;"	f	namespace:ip_address_v4_compile	typeref:typename:void
test	asio/src/tests/unit/ip/address_v4.cpp	/^void test()$/;"	f	namespace:ip_address_v4_runtime	typeref:typename:void
test	asio/src/tests/unit/ip/address_v6.cpp	/^void test()$/;"	f	namespace:ip_address_v6_compile	typeref:typename:void
test	asio/src/tests/unit/ip/address_v6.cpp	/^void test()$/;"	f	namespace:ip_address_v6_runtime	typeref:typename:void
test	asio/src/tests/unit/ip/host_name.cpp	/^void test()$/;"	f	namespace:ip_host_name_compile	typeref:typename:void
test	asio/src/tests/unit/ip/icmp.cpp	/^void test()$/;"	f	namespace:ip_icmp_resolver_compile	typeref:typename:void
test	asio/src/tests/unit/ip/icmp.cpp	/^void test()$/;"	f	namespace:ip_icmp_socket_compile	typeref:typename:void
test	asio/src/tests/unit/ip/multicast.cpp	/^void test()$/;"	f	namespace:ip_multicast_compile	typeref:typename:void
test	asio/src/tests/unit/ip/multicast.cpp	/^void test()$/;"	f	namespace:ip_multicast_runtime	typeref:typename:void
test	asio/src/tests/unit/ip/network_v4.cpp	/^void test()$/;"	f	namespace:ip_network_v4_compile	typeref:typename:void
test	asio/src/tests/unit/ip/network_v4.cpp	/^void test()$/;"	f	namespace:ip_network_v4_runtime	typeref:typename:void
test	asio/src/tests/unit/ip/network_v6.cpp	/^void test()$/;"	f	namespace:ip_network_v6_compile	typeref:typename:void
test	asio/src/tests/unit/ip/network_v6.cpp	/^void test()$/;"	f	namespace:ip_network_v6_runtime	typeref:typename:void
test	asio/src/tests/unit/ip/tcp.cpp	/^void test()$/;"	f	namespace:ip_tcp_acceptor_compile	typeref:typename:void
test	asio/src/tests/unit/ip/tcp.cpp	/^void test()$/;"	f	namespace:ip_tcp_acceptor_runtime	typeref:typename:void
test	asio/src/tests/unit/ip/tcp.cpp	/^void test()$/;"	f	namespace:ip_tcp_compile	typeref:typename:void
test	asio/src/tests/unit/ip/tcp.cpp	/^void test()$/;"	f	namespace:ip_tcp_iostream_compile	typeref:typename:void
test	asio/src/tests/unit/ip/tcp.cpp	/^void test()$/;"	f	namespace:ip_tcp_resolver_compile	typeref:typename:void
test	asio/src/tests/unit/ip/tcp.cpp	/^void test()$/;"	f	namespace:ip_tcp_resolver_entry_compile	typeref:typename:void
test	asio/src/tests/unit/ip/tcp.cpp	/^void test()$/;"	f	namespace:ip_tcp_runtime	typeref:typename:void
test	asio/src/tests/unit/ip/tcp.cpp	/^void test()$/;"	f	namespace:ip_tcp_socket_compile	typeref:typename:void
test	asio/src/tests/unit/ip/tcp.cpp	/^void test()$/;"	f	namespace:ip_tcp_socket_runtime	typeref:typename:void
test	asio/src/tests/unit/ip/udp.cpp	/^void test()$/;"	f	namespace:ip_udp_resolver_compile	typeref:typename:void
test	asio/src/tests/unit/ip/udp.cpp	/^void test()$/;"	f	namespace:ip_udp_socket_compile	typeref:typename:void
test	asio/src/tests/unit/ip/udp.cpp	/^void test()$/;"	f	namespace:ip_udp_socket_runtime	typeref:typename:void
test	asio/src/tests/unit/ip/unicast.cpp	/^void test()$/;"	f	namespace:ip_unicast_compile	typeref:typename:void
test	asio/src/tests/unit/ip/unicast.cpp	/^void test()$/;"	f	namespace:ip_unicast_runtime	typeref:typename:void
test	asio/src/tests/unit/ip/v6_only.cpp	/^void test()$/;"	f	namespace:ip_v6_only_compile	typeref:typename:void
test	asio/src/tests/unit/ip/v6_only.cpp	/^void test()$/;"	f	namespace:ip_v6_only_runtime	typeref:typename:void
test	asio/src/tests/unit/local/connect_pair.cpp	/^void test()$/;"	f	namespace:local_connect_pair_compile	typeref:typename:void
test	asio/src/tests/unit/local/datagram_protocol.cpp	/^void test()$/;"	f	namespace:local_datagram_protocol_socket_compile	typeref:typename:void
test	asio/src/tests/unit/local/stream_protocol.cpp	/^void test()$/;"	f	namespace:local_stream_protocol_socket_compile	typeref:typename:void
test	asio/src/tests/unit/posix/stream_descriptor.cpp	/^void test()$/;"	f	namespace:posix_stream_descriptor_compile	typeref:typename:void
test	asio/src/tests/unit/serial_port.cpp	/^void test()$/;"	f	namespace:serial_port_compile	typeref:typename:void
test	asio/src/tests/unit/serial_port_base.cpp	/^void test()$/;"	f	namespace:serial_port_base_compile	typeref:typename:void
test	asio/src/tests/unit/signal_set.cpp	/^void test()$/;"	f	namespace:signal_set_compile	typeref:typename:void
test	asio/src/tests/unit/socket_base.cpp	/^void test()$/;"	f	namespace:socket_base_compile	typeref:typename:void
test	asio/src/tests/unit/socket_base.cpp	/^void test()$/;"	f	namespace:socket_base_runtime	typeref:typename:void
test	asio/src/tests/unit/ssl/stream.cpp	/^void test()$/;"	f	namespace:ssl_stream_compile	typeref:typename:void
test	asio/src/tests/unit/windows/object_handle.cpp	/^void test()$/;"	f	namespace:windows_object_handle_compile	typeref:typename:void
test	asio/src/tests/unit/windows/overlapped_ptr.cpp	/^void test()$/;"	f	namespace:windows_overlapped_ptr_compile	typeref:typename:void
test	asio/src/tests/unit/windows/random_access_handle.cpp	/^void test()$/;"	f	namespace:windows_random_access_handle_compile	typeref:typename:void
test	asio/src/tests/unit/windows/stream_handle.cpp	/^void test()$/;"	f	namespace:windows_stream_handle_compile	typeref:typename:void
test_2_arg_const_buffer_write	asio/src/tests/unit/write.cpp	/^void test_2_arg_const_buffer_write()$/;"	f	typeref:typename:void
test_2_arg_dynamic_string_read	asio/src/tests/unit/read.cpp	/^void test_2_arg_dynamic_string_read()$/;"	f	typeref:typename:void
test_2_arg_dynamic_string_write	asio/src/tests/unit/write.cpp	/^void test_2_arg_dynamic_string_write()$/;"	f	typeref:typename:void
test_2_arg_mutable_buffer_read	asio/src/tests/unit/read.cpp	/^void test_2_arg_mutable_buffer_read()$/;"	f	typeref:typename:void
test_2_arg_mutable_buffer_write	asio/src/tests/unit/write.cpp	/^void test_2_arg_mutable_buffer_write()$/;"	f	typeref:typename:void
test_2_arg_streambuf_read	asio/src/tests/unit/read.cpp	/^void test_2_arg_streambuf_read()$/;"	f	typeref:typename:void
test_2_arg_vector_buffers_read	asio/src/tests/unit/read.cpp	/^void test_2_arg_vector_buffers_read()$/;"	f	typeref:typename:void
test_2_arg_vector_buffers_write	asio/src/tests/unit/write.cpp	/^void test_2_arg_vector_buffers_write()$/;"	f	typeref:typename:void
test_2_arg_zero_buffers_read	asio/src/tests/unit/read.cpp	/^void test_2_arg_zero_buffers_read()$/;"	f	typeref:typename:void
test_2_arg_zero_buffers_write	asio/src/tests/unit/write.cpp	/^void test_2_arg_zero_buffers_write()$/;"	f	typeref:typename:void
test_3_arg_boost_array_buffers_async_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_boost_array_buffers_async_read()$/;"	f	typeref:typename:void
test_3_arg_boost_array_buffers_async_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_boost_array_buffers_async_write()$/;"	f	typeref:typename:void
test_3_arg_const_buffer_async_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_const_buffer_async_write()$/;"	f	typeref:typename:void
test_3_arg_const_buffer_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_const_buffer_write()$/;"	f	typeref:typename:void
test_3_arg_const_buffer_write_at	asio/src/tests/unit/write_at.cpp	/^void test_3_arg_const_buffer_write_at()$/;"	f	typeref:typename:void
test_3_arg_dynamic_string_async_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_dynamic_string_async_read()$/;"	f	typeref:typename:void
test_3_arg_dynamic_string_async_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_dynamic_string_async_write()$/;"	f	typeref:typename:void
test_3_arg_dynamic_string_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_dynamic_string_read()$/;"	f	typeref:typename:void
test_3_arg_dynamic_string_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_dynamic_string_write()$/;"	f	typeref:typename:void
test_3_arg_mutable_buffer_async_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_mutable_buffer_async_read()$/;"	f	typeref:typename:void
test_3_arg_mutable_buffer_async_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_mutable_buffer_async_write()$/;"	f	typeref:typename:void
test_3_arg_mutable_buffer_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_mutable_buffer_read()$/;"	f	typeref:typename:void
test_3_arg_mutable_buffer_read_at	asio/src/tests/unit/read_at.cpp	/^void test_3_arg_mutable_buffer_read_at()$/;"	f	typeref:typename:void
test_3_arg_mutable_buffer_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_mutable_buffer_write()$/;"	f	typeref:typename:void
test_3_arg_mutable_buffer_write_at	asio/src/tests/unit/write_at.cpp	/^void test_3_arg_mutable_buffer_write_at()$/;"	f	typeref:typename:void
test_3_arg_nothrow_const_buffer_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_nothrow_const_buffer_write()$/;"	f	typeref:typename:void
test_3_arg_nothrow_dynamic_string_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_nothrow_dynamic_string_read()$/;"	f	typeref:typename:void
test_3_arg_nothrow_dynamic_string_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_nothrow_dynamic_string_write()$/;"	f	typeref:typename:void
test_3_arg_nothrow_mutable_buffer_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_nothrow_mutable_buffer_read()$/;"	f	typeref:typename:void
test_3_arg_nothrow_mutable_buffer_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_nothrow_mutable_buffer_write()$/;"	f	typeref:typename:void
test_3_arg_nothrow_streambuf_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_nothrow_streambuf_read()$/;"	f	typeref:typename:void
test_3_arg_nothrow_vector_buffers_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_nothrow_vector_buffers_read()$/;"	f	typeref:typename:void
test_3_arg_nothrow_vector_buffers_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_nothrow_vector_buffers_write()$/;"	f	typeref:typename:void
test_3_arg_nothrow_zero_buffers_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_nothrow_zero_buffers_read()$/;"	f	typeref:typename:void
test_3_arg_nothrow_zero_buffers_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_nothrow_zero_buffers_write()$/;"	f	typeref:typename:void
test_3_arg_std_array_buffers_async_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_std_array_buffers_async_read()$/;"	f	typeref:typename:void
test_3_arg_std_array_buffers_async_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_std_array_buffers_async_write()$/;"	f	typeref:typename:void
test_3_arg_streambuf_async_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_streambuf_async_read()$/;"	f	typeref:typename:void
test_3_arg_streambuf_async_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_streambuf_async_write()$/;"	f	typeref:typename:void
test_3_arg_streambuf_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_streambuf_read()$/;"	f	typeref:typename:void
test_3_arg_streambuf_read_at	asio/src/tests/unit/read_at.cpp	/^void test_3_arg_streambuf_read_at()$/;"	f	typeref:typename:void
test_3_arg_vector_buffers_async_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_vector_buffers_async_read()$/;"	f	typeref:typename:void
test_3_arg_vector_buffers_async_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_vector_buffers_async_write()$/;"	f	typeref:typename:void
test_3_arg_vector_buffers_read	asio/src/tests/unit/read.cpp	/^void test_3_arg_vector_buffers_read()$/;"	f	typeref:typename:void
test_3_arg_vector_buffers_read_at	asio/src/tests/unit/read_at.cpp	/^void test_3_arg_vector_buffers_read_at()$/;"	f	typeref:typename:void
test_3_arg_vector_buffers_write	asio/src/tests/unit/write.cpp	/^void test_3_arg_vector_buffers_write()$/;"	f	typeref:typename:void
test_3_arg_vector_buffers_write_at	asio/src/tests/unit/write_at.cpp	/^void test_3_arg_vector_buffers_write_at()$/;"	f	typeref:typename:void
test_4_arg_boost_array_buffers_async_read	asio/src/tests/unit/read.cpp	/^void test_4_arg_boost_array_buffers_async_read()$/;"	f	typeref:typename:void
test_4_arg_boost_array_buffers_async_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_boost_array_buffers_async_read_at()$/;"	f	typeref:typename:void
test_4_arg_boost_array_buffers_async_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_boost_array_buffers_async_write()$/;"	f	typeref:typename:void
test_4_arg_boost_array_buffers_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_boost_array_buffers_async_write_at()$/;"	f	typeref:typename:void
test_4_arg_const_buffer_async_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_const_buffer_async_write()$/;"	f	typeref:typename:void
test_4_arg_const_buffer_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_const_buffer_async_write_at()$/;"	f	typeref:typename:void
test_4_arg_const_buffer_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_const_buffer_write()$/;"	f	typeref:typename:void
test_4_arg_const_buffer_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_const_buffer_write_at()$/;"	f	typeref:typename:void
test_4_arg_dynamic_string_async_read	asio/src/tests/unit/read.cpp	/^void test_4_arg_dynamic_string_async_read()$/;"	f	typeref:typename:void
test_4_arg_dynamic_string_async_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_dynamic_string_async_write()$/;"	f	typeref:typename:void
test_4_arg_dynamic_string_read	asio/src/tests/unit/read.cpp	/^void test_4_arg_dynamic_string_read()$/;"	f	typeref:typename:void
test_4_arg_dynamic_string_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_dynamic_string_write()$/;"	f	typeref:typename:void
test_4_arg_mutable_buffer_async_read	asio/src/tests/unit/read.cpp	/^void test_4_arg_mutable_buffer_async_read()$/;"	f	typeref:typename:void
test_4_arg_mutable_buffer_async_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_mutable_buffer_async_read_at()$/;"	f	typeref:typename:void
test_4_arg_mutable_buffer_async_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_mutable_buffer_async_write()$/;"	f	typeref:typename:void
test_4_arg_mutable_buffer_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_mutable_buffer_async_write_at()$/;"	f	typeref:typename:void
test_4_arg_mutable_buffer_read	asio/src/tests/unit/read.cpp	/^void test_4_arg_mutable_buffer_read()$/;"	f	typeref:typename:void
test_4_arg_mutable_buffer_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_mutable_buffer_read_at()$/;"	f	typeref:typename:void
test_4_arg_mutable_buffer_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_mutable_buffer_write()$/;"	f	typeref:typename:void
test_4_arg_mutable_buffer_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_mutable_buffer_write_at()$/;"	f	typeref:typename:void
test_4_arg_nothrow_const_buffer_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_nothrow_const_buffer_write_at()$/;"	f	typeref:typename:void
test_4_arg_nothrow_mutable_buffer_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_nothrow_mutable_buffer_read_at()$/;"	f	typeref:typename:void
test_4_arg_nothrow_mutable_buffer_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_nothrow_mutable_buffer_write_at()$/;"	f	typeref:typename:void
test_4_arg_nothrow_streambuf_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_nothrow_streambuf_read_at()$/;"	f	typeref:typename:void
test_4_arg_nothrow_vector_buffers_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_nothrow_vector_buffers_read_at()$/;"	f	typeref:typename:void
test_4_arg_nothrow_vector_buffers_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_nothrow_vector_buffers_write_at()$/;"	f	typeref:typename:void
test_4_arg_std_array_buffers_async_read	asio/src/tests/unit/read.cpp	/^void test_4_arg_std_array_buffers_async_read()$/;"	f	typeref:typename:void
test_4_arg_std_array_buffers_async_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_std_array_buffers_async_read_at()$/;"	f	typeref:typename:void
test_4_arg_std_array_buffers_async_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_std_array_buffers_async_write()$/;"	f	typeref:typename:void
test_4_arg_std_array_buffers_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_std_array_buffers_async_write_at()$/;"	f	typeref:typename:void
test_4_arg_streambuf_async_read	asio/src/tests/unit/read.cpp	/^void test_4_arg_streambuf_async_read()$/;"	f	typeref:typename:void
test_4_arg_streambuf_async_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_streambuf_async_read_at()$/;"	f	typeref:typename:void
test_4_arg_streambuf_async_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_streambuf_async_write()$/;"	f	typeref:typename:void
test_4_arg_streambuf_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_streambuf_async_write_at()$/;"	f	typeref:typename:void
test_4_arg_streambuf_read	asio/src/tests/unit/read.cpp	/^void test_4_arg_streambuf_read()$/;"	f	typeref:typename:void
test_4_arg_streambuf_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_streambuf_read_at()$/;"	f	typeref:typename:void
test_4_arg_vector_buffers_async_read	asio/src/tests/unit/read.cpp	/^void test_4_arg_vector_buffers_async_read()$/;"	f	typeref:typename:void
test_4_arg_vector_buffers_async_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_vector_buffers_async_read_at()$/;"	f	typeref:typename:void
test_4_arg_vector_buffers_async_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_vector_buffers_async_write()$/;"	f	typeref:typename:void
test_4_arg_vector_buffers_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_vector_buffers_async_write_at()$/;"	f	typeref:typename:void
test_4_arg_vector_buffers_read	asio/src/tests/unit/read.cpp	/^void test_4_arg_vector_buffers_read()$/;"	f	typeref:typename:void
test_4_arg_vector_buffers_read_at	asio/src/tests/unit/read_at.cpp	/^void test_4_arg_vector_buffers_read_at()$/;"	f	typeref:typename:void
test_4_arg_vector_buffers_write	asio/src/tests/unit/write.cpp	/^void test_4_arg_vector_buffers_write()$/;"	f	typeref:typename:void
test_4_arg_vector_buffers_write_at	asio/src/tests/unit/write_at.cpp	/^void test_4_arg_vector_buffers_write_at()$/;"	f	typeref:typename:void
test_5_arg_boost_array_buffers_async_read_at	asio/src/tests/unit/read_at.cpp	/^void test_5_arg_boost_array_buffers_async_read_at()$/;"	f	typeref:typename:void
test_5_arg_boost_array_buffers_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_5_arg_boost_array_buffers_async_write_at()$/;"	f	typeref:typename:void
test_5_arg_const_buffer_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_5_arg_const_buffer_async_write_at()$/;"	f	typeref:typename:void
test_5_arg_const_buffer_write_at	asio/src/tests/unit/write_at.cpp	/^void test_5_arg_const_buffer_write_at()$/;"	f	typeref:typename:void
test_5_arg_mutable_buffer_async_read_at	asio/src/tests/unit/read_at.cpp	/^void test_5_arg_mutable_buffer_async_read_at()$/;"	f	typeref:typename:void
test_5_arg_mutable_buffer_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_5_arg_mutable_buffer_async_write_at()$/;"	f	typeref:typename:void
test_5_arg_mutable_buffer_read_at	asio/src/tests/unit/read_at.cpp	/^void test_5_arg_mutable_buffer_read_at()$/;"	f	typeref:typename:void
test_5_arg_mutable_buffer_write_at	asio/src/tests/unit/write_at.cpp	/^void test_5_arg_mutable_buffer_write_at()$/;"	f	typeref:typename:void
test_5_arg_std_array_buffers_async_read_at	asio/src/tests/unit/read_at.cpp	/^void test_5_arg_std_array_buffers_async_read_at()$/;"	f	typeref:typename:void
test_5_arg_std_array_buffers_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_5_arg_std_array_buffers_async_write_at()$/;"	f	typeref:typename:void
test_5_arg_streambuf_async_read_at	asio/src/tests/unit/read_at.cpp	/^void test_5_arg_streambuf_async_read_at()$/;"	f	typeref:typename:void
test_5_arg_streambuf_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_5_arg_streambuf_async_write_at()$/;"	f	typeref:typename:void
test_5_arg_streambuf_read_at	asio/src/tests/unit/read_at.cpp	/^void test_5_arg_streambuf_read_at()$/;"	f	typeref:typename:void
test_5_arg_vector_buffers_async_read_at	asio/src/tests/unit/read_at.cpp	/^void test_5_arg_vector_buffers_async_read_at()$/;"	f	typeref:typename:void
test_5_arg_vector_buffers_async_write_at	asio/src/tests/unit/write_at.cpp	/^void test_5_arg_vector_buffers_async_write_at()$/;"	f	typeref:typename:void
test_5_arg_vector_buffers_read_at	asio/src/tests/unit/read_at.cpp	/^void test_5_arg_vector_buffers_read_at()$/;"	f	typeref:typename:void
test_5_arg_vector_buffers_write_at	asio/src/tests/unit/write_at.cpp	/^void test_5_arg_vector_buffers_write_at()$/;"	f	typeref:typename:void
test_async_connect_iter	asio/src/tests/unit/connect.cpp	/^void test_async_connect_iter()$/;"	f	typeref:typename:void
test_async_connect_iter_cond	asio/src/tests/unit/connect.cpp	/^void test_async_connect_iter_cond()$/;"	f	typeref:typename:void
test_async_connect_range	asio/src/tests/unit/connect.cpp	/^void test_async_connect_range()$/;"	f	typeref:typename:void
test_async_connect_range_cond	asio/src/tests/unit/connect.cpp	/^void test_async_connect_range_cond()$/;"	f	typeref:typename:void
test_async_operations	asio/src/tests/unit/buffered_read_stream.cpp	/^void test_async_operations()$/;"	f	typeref:typename:void
test_async_operations	asio/src/tests/unit/buffered_stream.cpp	/^void test_async_operations()$/;"	f	typeref:typename:void
test_async_operations	asio/src/tests/unit/buffered_write_stream.cpp	/^void test_async_operations()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp11/operations/composed_1.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp11/operations/composed_2.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp11/operations/composed_3.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp11/operations/composed_4.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp11/operations/composed_5.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp11/operations/composed_6.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp11/operations/composed_7.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp11/operations/composed_8.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp14/operations/composed_1.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp14/operations/composed_2.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp14/operations/composed_3.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp14/operations/composed_4.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp14/operations/composed_5.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp14/operations/composed_6.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp14/operations/composed_7.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_callback	asio/src/examples/cpp14/operations/composed_8.cpp	/^void test_callback()$/;"	f	typeref:typename:void
test_compile	asio/src/tests/unit/buffered_read_stream.cpp	/^void test_compile()$/;"	f	typeref:typename:void
test_compile	asio/src/tests/unit/buffered_stream.cpp	/^void test_compile()$/;"	f	typeref:typename:void
test_compile	asio/src/tests/unit/buffered_write_stream.cpp	/^void test_compile()$/;"	f	typeref:typename:void
test_connect_iter	asio/src/tests/unit/connect.cpp	/^void test_connect_iter()$/;"	f	typeref:typename:void
test_connect_iter_cond	asio/src/tests/unit/connect.cpp	/^void test_connect_iter_cond()$/;"	f	typeref:typename:void
test_connect_iter_cond_ec	asio/src/tests/unit/connect.cpp	/^void test_connect_iter_cond_ec()$/;"	f	typeref:typename:void
test_connect_iter_ec	asio/src/tests/unit/connect.cpp	/^void test_connect_iter_ec()$/;"	f	typeref:typename:void
test_connect_range	asio/src/tests/unit/connect.cpp	/^void test_connect_range()$/;"	f	typeref:typename:void
test_connect_range_cond	asio/src/tests/unit/connect.cpp	/^void test_connect_range_cond()$/;"	f	typeref:typename:void
test_connect_range_cond_ec	asio/src/tests/unit/connect.cpp	/^void test_connect_range_cond_ec()$/;"	f	typeref:typename:void
test_connect_range_ec	asio/src/tests/unit/connect.cpp	/^void test_connect_range_ec()$/;"	f	typeref:typename:void
test_dynamic_string_async_read_until_char	asio/src/tests/unit/read_until.cpp	/^void test_dynamic_string_async_read_until_char()$/;"	f	typeref:typename:void
test_dynamic_string_async_read_until_match_condition	asio/src/tests/unit/read_until.cpp	/^void test_dynamic_string_async_read_until_match_condition()$/;"	f	typeref:typename:void
test_dynamic_string_async_read_until_string	asio/src/tests/unit/read_until.cpp	/^void test_dynamic_string_async_read_until_string()$/;"	f	typeref:typename:void
test_dynamic_string_read_until_char	asio/src/tests/unit/read_until.cpp	/^void test_dynamic_string_read_until_char()$/;"	f	typeref:typename:void
test_dynamic_string_read_until_match_condition	asio/src/tests/unit/read_until.cpp	/^void test_dynamic_string_read_until_match_condition()$/;"	f	typeref:typename:void
test_dynamic_string_read_until_string	asio/src/tests/unit/read_until.cpp	/^void test_dynamic_string_read_until_string()$/;"	f	typeref:typename:void
test_error_code	asio/src/tests/unit/error.cpp	/^void test_error_code(const asio::error_code& code)$/;"	f	typeref:typename:void
test_errors	asio/src/tests/unit/unit_test.hpp	/^inline atomic_count& test_errors()$/;"	f	namespace:asio::detail	typeref:typename:atomic_count &
test_future	asio/src/examples/cpp11/operations/composed_1.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp11/operations/composed_2.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp11/operations/composed_3.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp11/operations/composed_4.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp11/operations/composed_5.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp11/operations/composed_6.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp11/operations/composed_7.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp11/operations/composed_8.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp14/operations/composed_1.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp14/operations/composed_2.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp14/operations/composed_3.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp14/operations/composed_4.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp14/operations/composed_5.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp14/operations/composed_6.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp14/operations/composed_7.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_future	asio/src/examples/cpp14/operations/composed_8.cpp	/^void test_future()$/;"	f	typeref:typename:void
test_main	asio/src/tests/unit/unit_test.hpp	/^int test_main(int, char**)$/;"	f	typeref:typename:int
test_name	asio/src/tests/unit/unit_test.hpp	/^inline const char*& test_name()$/;"	f	namespace:asio::detail	typeref:typename:const char * &
test_random_access_device	asio/src/tests/unit/read_at.cpp	/^  test_random_access_device(asio::io_context& io_context)$/;"	f	class:test_random_access_device	file:
test_random_access_device	asio/src/tests/unit/read_at.cpp	/^class test_random_access_device$/;"	c	file:
test_random_access_device	asio/src/tests/unit/write_at.cpp	/^  test_random_access_device(asio::io_context& io_context)$/;"	f	class:test_random_access_device	file:
test_random_access_device	asio/src/tests/unit/write_at.cpp	/^class test_random_access_device$/;"	c	file:
test_service	asio/src/tests/unit/io_context.cpp	/^  test_service(asio::io_context& s)$/;"	f	class:test_service	file:
test_service	asio/src/tests/unit/io_context.cpp	/^class test_service : public asio::io_context::service$/;"	c	file:
test_stream	asio/src/tests/unit/is_read_buffered.cpp	/^  test_stream(asio::io_context& io_context)$/;"	f	class:test_stream	file:
test_stream	asio/src/tests/unit/is_read_buffered.cpp	/^class test_stream$/;"	c	file:
test_stream	asio/src/tests/unit/is_write_buffered.cpp	/^  test_stream(asio::io_context& io_context)$/;"	f	class:test_stream	file:
test_stream	asio/src/tests/unit/is_write_buffered.cpp	/^class test_stream$/;"	c	file:
test_stream	asio/src/tests/unit/read.cpp	/^  test_stream(asio::io_context& io_context)$/;"	f	class:test_stream	file:
test_stream	asio/src/tests/unit/read.cpp	/^class test_stream$/;"	c	file:
test_stream	asio/src/tests/unit/read_until.cpp	/^  test_stream(asio::io_context& io_context)$/;"	f	class:test_stream	file:
test_stream	asio/src/tests/unit/read_until.cpp	/^class test_stream$/;"	c	file:
test_stream	asio/src/tests/unit/write.cpp	/^  test_stream(asio::io_context& io_context)$/;"	f	class:test_stream	file:
test_stream	asio/src/tests/unit/write.cpp	/^class test_stream$/;"	c	file:
test_streambuf_async_read_until_char	asio/src/tests/unit/read_until.cpp	/^void test_streambuf_async_read_until_char()$/;"	f	typeref:typename:void
test_streambuf_async_read_until_match_condition	asio/src/tests/unit/read_until.cpp	/^void test_streambuf_async_read_until_match_condition()$/;"	f	typeref:typename:void
test_streambuf_async_read_until_string	asio/src/tests/unit/read_until.cpp	/^void test_streambuf_async_read_until_string()$/;"	f	typeref:typename:void
test_streambuf_read_until_char	asio/src/tests/unit/read_until.cpp	/^void test_streambuf_read_until_char()$/;"	f	typeref:typename:void
test_streambuf_read_until_match_condition	asio/src/tests/unit/read_until.cpp	/^void test_streambuf_read_until_match_condition()$/;"	f	typeref:typename:void
test_streambuf_read_until_string	asio/src/tests/unit/read_until.cpp	/^void test_streambuf_read_until_string()$/;"	f	typeref:typename:void
test_sync_operations	asio/src/tests/unit/buffered_read_stream.cpp	/^void test_sync_operations()$/;"	f	typeref:typename:void
test_sync_operations	asio/src/tests/unit/buffered_stream.cpp	/^void test_sync_operations()$/;"	f	typeref:typename:void
test_sync_operations	asio/src/tests/unit/buffered_write_stream.cpp	/^void test_sync_operations()$/;"	f	typeref:typename:void
text	asio/src/doc/reference.xsl	/^  <xsl:param name="text"\/>$/;"	p	namedTemplate:escape-name
text	asio/src/doc/reference.xsl	/^  <xsl:param name="text"\/>$/;"	p	namedTemplate:escape-text
text	asio/src/doc/reference.xsl	/^  <xsl:param name="text"\/>$/;"	p	namedTemplate:strip-leading-whitespace
text	asio/src/doc/reference.xsl	/^  <xsl:variable name="text" select="."\/>$/;"	v	matchedTemplate:text()
text	asio/src/doc/tutorial.xsl	/^  <xsl:param name="text"\/>$/;"	p	namedTemplate:escape-text
text	asio/src/doc/tutorial.xsl	/^  <xsl:param name="text"\/>$/;"	p	namedTemplate:refid-to-anchor
text	asio/src/doc/tutorial.xsl	/^  <xsl:param name="text"\/>$/;"	p	namedTemplate:replace-scope-marker
text	asio/src/doc/tutorial.xsl	/^  <xsl:param name="text"\/>$/;"	p	namedTemplate:strip-leading-whitespace
text	asio/src/doc/tutorial.xsl	/^  <xsl:variable name="text" select="."\/>$/;"	v	matchedTemplate:text()
text	asio/src/doc/tutorial.xsl	/^  <xsl:variable name="text">$/;"	v	matchedTemplate:ref[@kindref='member']
text()	asio/src/doc/reference.xsl	/^<xsl:template match="text()" mode="markup">$/;"	m
text()	asio/src/doc/reference.xsl	/^<xsl:template match="text()" mode="markup-nested">$/;"	m
text()	asio/src/doc/tutorial.xsl	/^<xsl:template match="text()">$/;"	m
third_party_lib	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^namespace third_party_lib {$/;"	n	file:
third_party_lib	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^namespace third_party_lib {$/;"	n	file:
this_	asio/include/asio/detail/impl/strand_executor_service.hpp	/^    invoker* this_;$/;"	m	struct:asio::detail::strand_executor_service::invoker::on_invoker_exit	typeref:typename:invoker *
this_	asio/include/asio/impl/awaitable.hpp	/^      awaitable_frame_base* this_;$/;"	m	struct:asio::detail::awaitable_frame_base::await_transform::result	typeref:typename:awaitable_frame_base *
this_	asio/include/asio/impl/awaitable.hpp	/^      awaitable_frame_base* this_;$/;"	m	struct:asio::detail::awaitable_frame_base::final_suspend::result	typeref:typename:awaitable_frame_base *
this_coro	asio/include/asio/this_coro.hpp	/^namespace this_coro {$/;"	n	namespace:asio
thread	asio/include/asio/detail/thread.hpp	/^typedef null_thread thread;$/;"	t	namespace:asio::detail	typeref:typename:null_thread
thread	asio/include/asio/thread.hpp	/^  explicit thread(Function f)$/;"	f	class:asio::thread
thread	asio/include/asio/thread.hpp	/^class thread$/;"	c	namespace:asio
thread_	asio/include/asio/detail/scheduler.hpp	/^  asio::detail::thread* thread_;$/;"	m	class:asio::detail::scheduler	typeref:typename:asio::detail::thread *
thread_	asio/include/asio/detail/select_reactor.hpp	/^  asio::detail::thread* thread_;$/;"	m	class:asio::detail::select_reactor	typeref:typename:asio::detail::thread *
thread_	asio/include/asio/detail/std_thread.hpp	/^  std::thread thread_;$/;"	m	class:asio::detail::std_thread	typeref:typename:std::thread
thread_	asio/include/asio/detail/thread_group.hpp	/^    asio::detail::thread thread_;$/;"	m	struct:asio::detail::thread_group::item	typeref:typename:asio::detail::thread
thread_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  scoped_ptr<thread> thread_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:scoped_ptr<thread>
thread_	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^  asio::detail::thread* thread_;$/;"	m	class:asio::detail::winrt_timer_scheduler	typeref:typename:asio::detail::thread *
thread_	asio/src/tests/unit/connect.cpp	/^  asio::detail::thread thread_;$/;"	m	class:connection_sink	typeref:typename:asio::detail::thread	file:
thread_bag	asio/src/examples/cpp11/executors/pipeline.cpp	/^    explicit thread_bag(execution_context& ctx)$/;"	f	class:thread_executor::thread_bag	file:
thread_bag	asio/src/examples/cpp11/executors/pipeline.cpp	/^  class thread_bag : public execution_context::service$/;"	c	class:thread_executor	file:
thread_bag	asio/src/examples/cpp14/executors/pipeline.cpp	/^    explicit thread_bag(execution_context& ctx)$/;"	f	class:thread_executor::thread_bag	file:
thread_bag	asio/src/examples/cpp14/executors/pipeline.cpp	/^  class thread_bag : public execution_context::service$/;"	c	class:thread_executor	file:
thread_call_stack	asio/include/asio/detail/thread_context.hpp	/^  typedef call_stack<thread_context, thread_info_base> thread_call_stack;$/;"	t	class:asio::detail::thread_context	typeref:typename:call_stack<thread_context,thread_info_base>
thread_context	asio/include/asio/detail/thread_context.hpp	/^class thread_context$/;"	c	namespace:asio::detail
thread_count_	asio/src/examples/cpp11/executors/fork_join.cpp	/^  std::size_t thread_count_;$/;"	m	class:fork_join_pool	typeref:typename:std::size_t	file:
thread_count_	asio/src/examples/cpp14/executors/fork_join.cpp	/^  std::size_t thread_count_;$/;"	m	class:fork_join_pool	typeref:typename:std::size_t	file:
thread_executor	asio/src/examples/cpp11/executors/pipeline.cpp	/^class thread_executor$/;"	c	file:
thread_executor	asio/src/examples/cpp14/executors/pipeline.cpp	/^class thread_executor$/;"	c	file:
thread_group	asio/include/asio/detail/thread_group.hpp	/^  thread_group()$/;"	f	class:asio::detail::thread_group
thread_group	asio/include/asio/detail/thread_group.hpp	/^class thread_group$/;"	c	namespace:asio::detail
thread_info	asio/include/asio/detail/scheduler.hpp	/^  typedef scheduler_thread_info thread_info;$/;"	t	class:asio::detail::scheduler	typeref:typename:scheduler_thread_info
thread_info_base	asio/include/asio/detail/thread_info_base.hpp	/^  thread_info_base()$/;"	f	class:asio::detail::thread_info_base
thread_info_base	asio/include/asio/detail/thread_info_base.hpp	/^class thread_info_base$/;"	c	namespace:asio::detail
thread_pool	asio/include/asio/thread_pool.hpp	/^class thread_pool$/;"	c	namespace:asio
thread_pool_size_	asio/src/examples/cpp03/http/server3/server.hpp	/^  std::size_t thread_pool_size_;$/;"	m	class:http::server3::server	typeref:typename:std::size_t
threads_	asio/include/asio/system_context.hpp	/^  detail::thread_group threads_;$/;"	m	class:asio::system_context	typeref:typename:detail::thread_group
threads_	asio/include/asio/thread_pool.hpp	/^  detail::thread_group threads_;$/;"	m	class:asio::thread_pool	typeref:typename:detail::thread_group
threads_	asio/src/examples/cpp11/executors/fork_join.cpp	/^  thread_pool threads_;$/;"	m	class:fork_join_pool	typeref:typename:thread_pool	file:
threads_	asio/src/examples/cpp11/executors/pipeline.cpp	/^    std::vector<std::thread> threads_;$/;"	m	class:thread_executor::thread_bag	typeref:typename:std::vector<std::thread>	file:
threads_	asio/src/examples/cpp14/executors/fork_join.cpp	/^  thread_pool threads_;$/;"	m	class:fork_join_pool	typeref:typename:thread_pool	file:
threads_	asio/src/examples/cpp14/executors/pipeline.cpp	/^    std::vector<std::thread> threads_;$/;"	m	class:thread_executor::thread_bag	typeref:typename:std::vector<std::thread>	file:
throw_error	asio/include/asio/detail/throw_error.hpp	/^inline void throw_error(const asio::error_code& err)$/;"	f	namespace:asio::detail	typeref:typename:void
throw_error	asio/include/asio/detail/throw_error.hpp	/^inline void throw_error(const asio::error_code& err,$/;"	f	namespace:asio::detail	typeref:typename:void
throw_exception	asio/src/tests/unit/io_context.cpp	/^void throw_exception()$/;"	f	typeref:typename:void
throw_exception	asio/src/tests/unit/io_context_strand.cpp	/^void throw_exception()$/;"	f	typeref:typename:void
throw_exception	asio/src/tests/unit/strand.cpp	/^void throw_exception()$/;"	f	typeref:typename:void
throw_exception	asio/src/tests/unit/unit_test.hpp	/^void throw_exception(const T& t)$/;"	f	namespace:asio::detail	typeref:typename:void
ticks	asio/include/asio/detail/chrono_time_traits.hpp	/^    int64_t ticks() const$/;"	f	class:asio::detail::chrono_time_traits::posix_time_duration	typeref:typename:int64_t
time_	asio/include/asio/detail/timer_queue.hpp	/^    time_type time_;$/;"	m	struct:asio::detail::timer_queue::heap_entry	typeref:typename:time_type
time_exceeded	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^    redirect = 5, echo_request = 8, time_exceeded = 11, parameter_problem = 12,$/;"	e	enum:icmp_header::__anon3193b0390103
time_point	asio/include/asio/basic_socket_iostream.hpp	/^  typedef typename WaitTraits::time_point time_point;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:WaitTraits::time_point
time_point	asio/include/asio/basic_socket_iostream.hpp	/^  typedef typename traits_helper::time_type time_point;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:traits_helper::time_type
time_point	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef typename WaitTraits::time_point time_point;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:WaitTraits::time_point
time_point	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef typename traits_helper::time_type time_point;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:traits_helper::time_type
time_point	asio/include/asio/basic_waitable_timer.hpp	/^  typedef typename clock_type::time_point time_point;$/;"	t	class:asio::basic_waitable_timer	typeref:typename:clock_type::time_point
time_point	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^  typedef asio::chrono::time_point<time_t_clock> time_point;$/;"	t	struct:time_t_clock	typeref:typename:asio::chrono::time_point<time_t_clock>	file:
time_point	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^  typedef std::chrono::time_point<time_t_clock> time_point;$/;"	t	struct:time_t_clock	typeref:typename:std::chrono::time_point<time_t_clock>	file:
time_sent_	asio/src/examples/cpp03/icmp/ping.cpp	/^  chrono::steady_clock::time_point time_sent_;$/;"	m	class:pinger	typeref:typename:chrono::steady_clock::time_point	file:
time_t_clock	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^struct time_t_clock$/;"	s	file:
time_t_clock	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^struct time_t_clock$/;"	s	file:
time_t_timer	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^  time_t_clock, time_t_wait_traits> time_t_timer;$/;"	t	typeref:typename:asio::basic_waitable_timer<time_t_clock,time_t_wait_traits>	file:
time_t_timer	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^  time_t_clock, time_t_wait_traits> time_t_timer;$/;"	t	typeref:typename:asio::basic_waitable_timer<time_t_clock,time_t_wait_traits>	file:
time_t_wait_traits	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^struct time_t_wait_traits$/;"	s	file:
time_t_wait_traits	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^struct time_t_wait_traits$/;"	s	file:
time_to_live	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned int time_to_live() const { return rep_[8]; }$/;"	f	class:ipv4_header	typeref:typename:unsigned int
time_traits	asio/include/asio/time_traits.hpp	/^struct time_traits<boost::posix_time::ptime>$/;"	s	namespace:asio
time_type	asio/include/asio/basic_deadline_timer.hpp	/^  typedef typename traits_type::time_type time_type;$/;"	t	class:asio::basic_deadline_timer	typeref:typename:traits_type::time_type
time_type	asio/include/asio/basic_socket_iostream.hpp	/^  typedef typename WaitTraits::time_type time_type;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:WaitTraits::time_type
time_type	asio/include/asio/basic_socket_iostream.hpp	/^  typedef typename traits_helper::time_type time_type;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:traits_helper::time_type
time_type	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef typename WaitTraits::time_type time_type;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:WaitTraits::time_type
time_type	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef typename traits_helper::time_type time_type;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:traits_helper::time_type
time_type	asio/include/asio/detail/chrono_time_traits.hpp	/^  typedef typename clock_type::time_point time_type;$/;"	t	struct:asio::detail::chrono_time_traits	typeref:typename:clock_type::time_point
time_type	asio/include/asio/detail/deadline_timer_service.hpp	/^  typedef typename Time_Traits::time_type time_type;$/;"	t	class:asio::detail::deadline_timer_service	typeref:typename:Time_Traits::time_type
time_type	asio/include/asio/detail/timer_queue.hpp	/^  typedef typename Time_Traits::time_type time_type;$/;"	t	class:asio::detail::timer_queue	typeref:typename:Time_Traits::time_type
time_type	asio/include/asio/time_traits.hpp	/^  typedef boost::posix_time::ptime time_type;$/;"	t	struct:asio::time_traits	typeref:typename:boost::posix_time::ptime
timed_out	asio/include/asio/error.hpp	/^  timed_out = ASIO_SOCKET_ERROR(ETIMEDOUT),$/;"	e	enum:asio::error::basic_errors
timeout	asio/include/asio/basic_socket_streambuf.hpp	/^  int timeout() const$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:int
timeout	asio/src/examples/cpp03/spawn/echo_server.cpp	/^  void timeout(asio::yield_context yield)$/;"	f	class:session	typeref:typename:void	file:
timeout_	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  asio::chrono::steady_clock::duration timeout_;$/;"	m	class:asio::async_result	typeref:typename:asio::chrono::steady_clock::duration	file:
timeout_	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^  asio::chrono::steady_clock::duration timeout_;$/;"	m	struct:close_after	typeref:typename:asio::chrono::steady_clock::duration	file:
timeout_	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  std::chrono::steady_clock::duration timeout_;$/;"	m	class:asio::async_result	typeref:typename:std::chrono::steady_clock::duration	file:
timeout_	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^  std::chrono::steady_clock::duration timeout_;$/;"	m	struct:close_after	typeref:typename:std::chrono::steady_clock::duration	file:
timeouts_async_tcp_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^timeouts_async_tcp_client_SOURCES = timeouts\/async_tcp_client.cpp$/;"	m
timeouts_async_tcp_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^timeouts_async_tcp_client_SOURCES = timeouts\/async_tcp_client.cpp$/;"	m
timeouts_blocking_tcp_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^timeouts_blocking_tcp_client_SOURCES = timeouts\/blocking_tcp_client.cpp$/;"	m
timeouts_blocking_tcp_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^timeouts_blocking_tcp_client_SOURCES = timeouts\/blocking_tcp_client.cpp$/;"	m
timeouts_blocking_token_tcp_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^timeouts_blocking_token_tcp_client_SOURCES = timeouts\/blocking_token_tcp_client.cpp$/;"	m
timeouts_blocking_token_tcp_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^timeouts_blocking_token_tcp_client_SOURCES = timeouts\/blocking_token_tcp_client.cpp$/;"	m
timeouts_blocking_udp_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^timeouts_blocking_udp_client_SOURCES = timeouts\/blocking_udp_client.cpp$/;"	m
timeouts_blocking_udp_client_SOURCES	asio/src/examples/cpp11/Makefile.am	/^timeouts_blocking_udp_client_SOURCES = timeouts\/blocking_udp_client.cpp$/;"	m
timeouts_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^timeouts_server_SOURCES = timeouts\/server.cpp$/;"	m
timeouts_server_SOURCES	asio/src/examples/cpp11/Makefile.am	/^timeouts_server_SOURCES = timeouts\/server.cpp$/;"	m
timer	asio/src/tests/unit/deadline_timer.cpp	/^    timer() : t(io_context) { t.expires_at(boost::posix_time::pos_infin); }$/;"	f	struct:deadline_timer_cancel_test::timer	file:
timer	asio/src/tests/unit/deadline_timer.cpp	/^    timer() : t(io_context) {}$/;"	f	struct:deadline_timer_custom_allocation_test::timer	file:
timer	asio/src/tests/unit/deadline_timer.cpp	/^  struct timer$/;"	s	function:deadline_timer_cancel_test	file:
timer	asio/src/tests/unit/deadline_timer.cpp	/^  struct timer$/;"	s	function:deadline_timer_custom_allocation_test	file:
timer	asio/src/tests/unit/io_context.cpp	/^typedef deadline_timer timer;$/;"	t	typeref:typename:deadline_timer	file:
timer	asio/src/tests/unit/io_context.cpp	/^typedef steady_timer timer;$/;"	t	typeref:typename:steady_timer	file:
timer	asio/src/tests/unit/io_context_strand.cpp	/^typedef deadline_timer timer;$/;"	t	typeref:typename:deadline_timer	file:
timer	asio/src/tests/unit/io_context_strand.cpp	/^typedef steady_timer timer;$/;"	t	typeref:typename:steady_timer	file:
timer	asio/src/tests/unit/strand.cpp	/^typedef deadline_timer timer;$/;"	t	typeref:typename:deadline_timer	file:
timer	asio/src/tests/unit/strand.cpp	/^typedef steady_timer timer;$/;"	t	typeref:typename:steady_timer	file:
timer	asio/src/tests/unit/system_timer.cpp	/^    timer() : t(io_context) {}$/;"	f	struct:system_timer_custom_allocation_test::timer	file:
timer	asio/src/tests/unit/system_timer.cpp	/^    timer() : t(io_context)$/;"	f	struct:system_timer_cancel_test::timer	file:
timer	asio/src/tests/unit/system_timer.cpp	/^  struct timer$/;"	s	function:system_timer_cancel_test	file:
timer	asio/src/tests/unit/system_timer.cpp	/^  struct timer$/;"	s	function:system_timer_custom_allocation_test	file:
timer1_	asio/src/examples/cpp03/tutorial/timer5/timer.cpp	/^  asio::steady_timer timer1_;$/;"	m	class:printer	typeref:typename:asio::steady_timer	file:
timer2_	asio/src/examples/cpp03/tutorial/timer5/timer.cpp	/^  asio::steady_timer timer2_;$/;"	m	class:printer	typeref:typename:asio::steady_timer	file:
timer_	asio/include/asio/detail/timer_queue.hpp	/^    per_timer_data* timer_;$/;"	m	struct:asio::detail::timer_queue::heap_entry	typeref:typename:per_timer_data *
timer_	asio/src/examples/cpp03/icmp/ping.cpp	/^  steady_timer timer_;$/;"	m	class:pinger	typeref:typename:steady_timer	file:
timer_	asio/src/examples/cpp03/multicast/sender.cpp	/^  asio::steady_timer timer_;$/;"	m	class:sender	typeref:typename:asio::steady_timer	file:
timer_	asio/src/examples/cpp03/porthopper/server.cpp	/^  asio::steady_timer timer_;$/;"	m	class:server	typeref:typename:asio::steady_timer	file:
timer_	asio/src/examples/cpp03/spawn/echo_server.cpp	/^  asio::steady_timer timer_;$/;"	m	class:session	typeref:typename:asio::steady_timer	file:
timer_	asio/src/examples/cpp03/tutorial/timer4/timer.cpp	/^  asio::steady_timer timer_;$/;"	m	class:printer	typeref:typename:asio::steady_timer	file:
timer_	asio/src/examples/cpp11/multicast/sender.cpp	/^  asio::steady_timer timer_;$/;"	m	class:sender	typeref:typename:asio::steady_timer	file:
timer_	asio/src/examples/cpp11/spawn/echo_server.cpp	/^  asio::steady_timer timer_;$/;"	m	class:session	typeref:typename:asio::steady_timer	file:
timer_	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  asio::steady_timer timer_;$/;"	m	class:chat_session	typeref:typename:asio::steady_timer	file:
timer_data	asio/include/asio/detail/deadline_timer_service.hpp	/^    typename timer_queue<Time_Traits>::per_timer_data timer_data;$/;"	m	struct:asio::detail::deadline_timer_service::implementation_type	typeref:typename:timer_queue<Time_Traits>::per_timer_data
timer_fd_	asio/include/asio/detail/epoll_reactor.hpp	/^  int timer_fd_;$/;"	m	class:asio::detail::epoll_reactor	typeref:typename:int
timer_handler	asio/src/tests/unit/deadline_timer.cpp	/^void timer_handler(const asio::error_code&)$/;"	f	typeref:typename:void
timer_handler	asio/src/tests/unit/system_timer.cpp	/^  timer_handler() {}$/;"	f	struct:timer_handler	file:
timer_handler	asio/src/tests/unit/system_timer.cpp	/^  timer_handler(timer_handler&&) {}$/;"	f	struct:timer_handler	file:
timer_handler	asio/src/tests/unit/system_timer.cpp	/^struct timer_handler$/;"	s	file:
timer_ptr	asio/src/examples/cpp03/porthopper/server.cpp	/^typedef boost::shared_ptr<asio::steady_timer> timer_ptr;$/;"	t	typeref:typename:boost::shared_ptr<asio::steady_timer>	file:
timer_queue	asio/include/asio/detail/timer_queue.hpp	/^  timer_queue()$/;"	f	class:asio::detail::timer_queue
timer_queue	asio/include/asio/detail/timer_queue.hpp	/^class timer_queue$/;"	c	namespace:asio::detail
timer_queue_	asio/include/asio/detail/deadline_timer_service.hpp	/^  timer_queue<Time_Traits> timer_queue_;$/;"	m	class:asio::detail::deadline_timer_service	typeref:typename:timer_queue<Time_Traits>
timer_queue_base	asio/include/asio/detail/timer_queue_base.hpp	/^  timer_queue_base() : next_(0) {}$/;"	f	class:asio::detail::timer_queue_base
timer_queue_base	asio/include/asio/detail/timer_queue_base.hpp	/^class timer_queue_base$/;"	c	namespace:asio::detail
timer_queue_set	asio/include/asio/detail/timer_queue_set.hpp	/^class timer_queue_set$/;"	c	namespace:asio::detail
timer_queues_	asio/include/asio/detail/dev_poll_reactor.hpp	/^  timer_queue_set timer_queues_;$/;"	m	class:asio::detail::dev_poll_reactor	typeref:typename:timer_queue_set
timer_queues_	asio/include/asio/detail/epoll_reactor.hpp	/^  timer_queue_set timer_queues_;$/;"	m	class:asio::detail::epoll_reactor	typeref:typename:timer_queue_set
timer_queues_	asio/include/asio/detail/kqueue_reactor.hpp	/^  timer_queue_set timer_queues_;$/;"	m	class:asio::detail::kqueue_reactor	typeref:typename:timer_queue_set
timer_queues_	asio/include/asio/detail/select_reactor.hpp	/^  timer_queue_set timer_queues_;$/;"	m	class:asio::detail::select_reactor	typeref:typename:timer_queue_set
timer_queues_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  timer_queue_set timer_queues_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:timer_queue_set
timer_queues_	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^  timer_queue_set timer_queues_;$/;"	m	class:asio::detail::winrt_timer_scheduler	typeref:typename:timer_queue_set
timer_scheduler	asio/include/asio/detail/timer_scheduler_fwd.hpp	/^typedef class winrt_timer_scheduler timer_scheduler;$/;"	t	namespace:asio::detail	typeref:class:winrt_timer_scheduler
timer_thread_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  scoped_ptr<thread> timer_thread_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:scoped_ptr<thread>
timers_	asio/include/asio/detail/timer_queue.hpp	/^  per_timer_data* timers_;$/;"	m	class:asio::detail::timer_queue	typeref:typename:per_timer_data *
timers_time_t_timer_SOURCES	asio/src/examples/cpp03/Makefile.am	/^timers_time_t_timer_SOURCES = timers\/time_t_timer.cpp$/;"	m
timers_time_t_timer_SOURCES	asio/src/examples/cpp11/Makefile.am	/^timers_time_t_timer_SOURCES = timers\/time_t_timer.cpp$/;"	m
timestamp_reply	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^    timestamp_request = 13, timestamp_reply = 14, info_request = 15,$/;"	e	enum:icmp_header::__anon3193b0390103
timestamp_request	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^    timestamp_request = 13, timestamp_reply = 14, info_request = 15,$/;"	e	enum:icmp_header::__anon3193b0390103
title	asio/src/doc/reference.xsl	/^  <xsl:variable name="title">$/;"	v	matchedTemplate:title
title	asio/src/doc/reference.xsl	/^<xsl:template match="title" mode="markup">$/;"	m
title	asio/src/doc/tutorial.xsl	/^  <xsl:variable name="title">$/;"	v	matchedTemplate:title
title	asio/src/doc/tutorial.xsl	/^<xsl:template match="title">$/;"	m
title/link	asio/src/doc/asioref.xsl	/^<xsl:template match="title\/link">$/;"	m
tls	asio/include/asio/ssl/context_base.hpp	/^    tls,$/;"	e	enum:asio::ssl::context_base::method
tls_client	asio/include/asio/ssl/context_base.hpp	/^    tls_client,$/;"	e	enum:asio::ssl::context_base::method
tls_server	asio/include/asio/ssl/context_base.hpp	/^    tls_server$/;"	e	enum:asio::ssl::context_base::method
tlsv1	asio/include/asio/ssl/context_base.hpp	/^    tlsv1,$/;"	e	enum:asio::ssl::context_base::method
tlsv11	asio/include/asio/ssl/context_base.hpp	/^    tlsv11,$/;"	e	enum:asio::ssl::context_base::method
tlsv11_client	asio/include/asio/ssl/context_base.hpp	/^    tlsv11_client,$/;"	e	enum:asio::ssl::context_base::method
tlsv11_server	asio/include/asio/ssl/context_base.hpp	/^    tlsv11_server,$/;"	e	enum:asio::ssl::context_base::method
tlsv12	asio/include/asio/ssl/context_base.hpp	/^    tlsv12,$/;"	e	enum:asio::ssl::context_base::method
tlsv12_client	asio/include/asio/ssl/context_base.hpp	/^    tlsv12_client,$/;"	e	enum:asio::ssl::context_base::method
tlsv12_server	asio/include/asio/ssl/context_base.hpp	/^    tlsv12_server,$/;"	e	enum:asio::ssl::context_base::method
tlsv13	asio/include/asio/ssl/context_base.hpp	/^    tlsv13,$/;"	e	enum:asio::ssl::context_base::method
tlsv13_client	asio/include/asio/ssl/context_base.hpp	/^    tlsv13_client,$/;"	e	enum:asio::ssl::context_base::method
tlsv13_server	asio/include/asio/ssl/context_base.hpp	/^    tlsv13_server,$/;"	e	enum:asio::ssl::context_base::method
tlsv1_client	asio/include/asio/ssl/context_base.hpp	/^    tlsv1_client,$/;"	e	enum:asio::ssl::context_base::method
tlsv1_server	asio/include/asio/ssl/context_base.hpp	/^    tlsv1_server,$/;"	e	enum:asio::ssl::context_base::method
tmp	asio/include/asio/detail/winrt_utils.hpp	/^  std::wstring tmp(from, from + std::strlen(from));$/;"	v	namespace:asio::detail::winrt_utils	typeref:typename:std::wstring
tmp	asio/include/asio/detail/winrt_utils.hpp	/^  std::wstring tmp(from.begin(), from.end());$/;"	v	namespace:asio::detail::winrt_utils	typeref:typename:std::wstring
to_buffer	asio/src/examples/cpp03/http/server/reply.cpp	/^asio::const_buffer to_buffer(reply::status_type status)$/;"	f	namespace:http::server::status_strings	typeref:typename:asio::const_buffer
to_buffer	asio/src/examples/cpp03/http/server2/reply.cpp	/^asio::const_buffer to_buffer(reply::status_type status)$/;"	f	namespace:http::server2::status_strings	typeref:typename:asio::const_buffer
to_buffer	asio/src/examples/cpp03/http/server3/reply.cpp	/^asio::const_buffer to_buffer(reply::status_type status)$/;"	f	namespace:http::server3::status_strings	typeref:typename:asio::const_buffer
to_buffer	asio/src/examples/cpp03/http/server4/reply.cpp	/^asio::const_buffer to_buffer(reply::status_type status)$/;"	f	namespace:http::server4::status_strings	typeref:typename:asio::const_buffer
to_buffer	asio/src/examples/cpp11/http/server/reply.cpp	/^asio::const_buffer to_buffer(reply::status_type status)$/;"	f	namespace:http::server::status_strings	typeref:typename:asio::const_buffer
to_buffers	asio/src/examples/cpp03/http/server/reply.cpp	/^std::vector<asio::const_buffer> reply::to_buffers()$/;"	f	class:http::server::reply	typeref:typename:std::vector<asio::const_buffer>
to_buffers	asio/src/examples/cpp03/http/server2/reply.cpp	/^std::vector<asio::const_buffer> reply::to_buffers()$/;"	f	class:http::server2::reply	typeref:typename:std::vector<asio::const_buffer>
to_buffers	asio/src/examples/cpp03/http/server3/reply.cpp	/^std::vector<asio::const_buffer> reply::to_buffers()$/;"	f	class:http::server3::reply	typeref:typename:std::vector<asio::const_buffer>
to_buffers	asio/src/examples/cpp03/http/server4/reply.cpp	/^std::vector<asio::const_buffer> reply::to_buffers()$/;"	f	class:http::server4::reply	typeref:typename:std::vector<asio::const_buffer>
to_buffers	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  boost::array<asio::mutable_buffer, 1> to_buffers()$/;"	f	class:control_request	typeref:typename:boost::array<asio::mutable_buffer,1>
to_buffers	asio/src/examples/cpp03/porthopper/protocol.hpp	/^  boost::array<asio::mutable_buffer, 1> to_buffers()$/;"	f	class:frame	typeref:typename:boost::array<asio::mutable_buffer,1>
to_buffers	asio/src/examples/cpp11/http/server/reply.cpp	/^std::vector<asio::const_buffer> reply::to_buffers()$/;"	f	class:http::server::reply	typeref:typename:std::vector<asio::const_buffer>
to_msec	asio/include/asio/detail/timer_queue.hpp	/^  long to_msec(const Duration& d, long max_duration) const$/;"	f	class:asio::detail::timer_queue	typeref:typename:long
to_posix_duration	asio/include/asio/detail/chrono_time_traits.hpp	/^  static posix_time_duration to_posix_duration(const duration_type& d)$/;"	f	struct:asio::detail::chrono_time_traits	typeref:typename:posix_time_duration
to_posix_duration	asio/include/asio/time_traits.hpp	/^  static boost::posix_time::time_duration to_posix_duration($/;"	f	struct:asio::time_traits	typeref:typename:boost::posix_time::time_duration
to_string	asio/src/examples/cpp03/http/server/reply.cpp	/^std::string to_string(reply::status_type status)$/;"	f	namespace:http::server::stock_replies	typeref:typename:std::string
to_string	asio/src/examples/cpp03/http/server2/reply.cpp	/^std::string to_string(reply::status_type status)$/;"	f	namespace:http::server2::stock_replies	typeref:typename:std::string
to_string	asio/src/examples/cpp03/http/server3/reply.cpp	/^std::string to_string(reply::status_type status)$/;"	f	namespace:http::server3::stock_replies	typeref:typename:std::string
to_string	asio/src/examples/cpp03/http/server4/reply.cpp	/^std::string to_string(reply::status_type status)$/;"	f	namespace:http::server4::stock_replies	typeref:typename:std::string
to_string	asio/src/examples/cpp11/http/server/reply.cpp	/^std::string to_string(reply::status_type status)$/;"	f	namespace:http::server::stock_replies	typeref:typename:std::string
to_usec	asio/include/asio/detail/timer_queue.hpp	/^  long to_usec(const Duration& d, long max_duration) const$/;"	f	class:asio::detail::timer_queue	typeref:typename:long
to_wait_duration	asio/include/asio/wait_traits.hpp	/^  static typename Clock::duration to_wait_duration($/;"	f	struct:asio::wait_traits	typeref:typename:Clock::duration
to_wait_duration	asio/src/examples/cpp03/timers/time_t_timer.cpp	/^  static time_t_clock::duration to_wait_duration($/;"	f	struct:time_t_wait_traits	typeref:typename:time_t_clock::duration	file:
to_wait_duration	asio/src/examples/cpp11/timers/time_t_timer.cpp	/^  static time_t_clock::duration to_wait_duration($/;"	f	struct:time_t_wait_traits	typeref:typename:time_t_clock::duration	file:
token_	asio/include/asio/redirect_error.hpp	/^  CompletionToken token_;$/;"	m	class:asio::redirect_error_t	typeref:typename:CompletionToken
token_	asio/src/examples/cpp03/timeouts/blocking_token_tcp_client.cpp	/^    close_after token_;$/;"	m	class:asio::async_result::completion_handler_type	typeref:typename:close_after	file:
token_	asio/src/examples/cpp11/timeouts/blocking_token_tcp_client.cpp	/^    close_after token_;$/;"	m	class:asio::async_result::completion_handler_type	typeref:typename:close_after	file:
token_handler	asio/src/examples/cpp11/executors/actor.cpp	/^  void token_handler(int token, actor_address \/*from*\/)$/;"	f	class:member	typeref:typename:void	file:
token_handler	asio/src/examples/cpp14/executors/actor.cpp	/^  void token_handler(int token, actor_address \/*from*\/)$/;"	f	class:member	typeref:typename:void	file:
tolower_compare	asio/src/examples/cpp03/http/server4/request_parser.cpp	/^bool request_parser::tolower_compare(char a, char b)$/;"	f	class:http::server4::request_parser	typeref:typename:bool
top	asio/include/asio/detail/call_stack.hpp	/^  static Value* top()$/;"	f	class:asio::detail::call_stack	typeref:typename:Value *
top_	asio/include/asio/detail/call_stack.hpp	/^  static tss_ptr<context> top_;$/;"	m	class:asio::detail::call_stack	typeref:typename:tss_ptr<context>
top_	asio/include/asio/detail/call_stack.hpp	/^call_stack<Key, Value>::top_;$/;"	m	class:asio::detail::call_stack<Key, Value>	typeref:typename:tss_ptr<typename call_stack<Key,Value>::context>
top_of_stack_	asio/include/asio/impl/awaitable.hpp	/^  awaitable_frame_base<Executor>* top_of_stack_;$/;"	m	class:asio::detail::awaitable_thread	typeref:typename:awaitable_frame_base<Executor> *
total_buffer_size_	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  std::size_t total_buffer_size_;$/;"	m	class:asio::detail::buffer_sequence_adapter	typeref:typename:std::size_t
total_buffer_size_	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^  std::size_t total_buffer_size_;$/;"	m	class:asio::ssl::detail::buffered_handshake_op	typeref:typename:std::size_t
total_bytes_read_	asio/src/tests/performance/client.cpp	/^  size_t total_bytes_read_;$/;"	m	class:stats	typeref:typename:size_t	file:
total_bytes_written_	asio/src/tests/performance/client.cpp	/^  size_t total_bytes_written_;$/;"	m	class:stats	typeref:typename:size_t	file:
total_consumed	asio/include/asio/detail/consuming_buffers.hpp	/^  std::size_t total_consumed() const$/;"	f	class:consuming_buffers	typeref:typename:std::size_t
total_consumed	asio/include/asio/detail/consuming_buffers.hpp	/^  std::size_t total_consumed() const$/;"	f	class:consuming_single_buffer	typeref:typename:std::size_t
total_consumed_	asio/include/asio/detail/consuming_buffers.hpp	/^  std::size_t total_consumed_;$/;"	m	class:consuming_buffers	typeref:typename:std::size_t
total_consumed_	asio/include/asio/detail/consuming_buffers.hpp	/^  std::size_t total_consumed_;$/;"	m	class:consuming_single_buffer	typeref:typename:std::size_t
total_length	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned short total_length() const { return decode(2, 3); }$/;"	f	class:ipv4_header	typeref:typename:unsigned short
total_microseconds	asio/include/asio/detail/chrono_time_traits.hpp	/^    int64_t total_microseconds() const$/;"	f	class:asio::detail::chrono_time_traits::posix_time_duration	typeref:typename:int64_t
total_milliseconds	asio/include/asio/detail/chrono_time_traits.hpp	/^    int64_t total_milliseconds() const$/;"	f	class:asio::detail::chrono_time_traits::posix_time_duration	typeref:typename:int64_t
total_seconds	asio/include/asio/detail/chrono_time_traits.hpp	/^    int64_t total_seconds() const$/;"	f	class:asio::detail::chrono_time_traits::posix_time_duration	typeref:typename:int64_t
total_size	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  std::size_t total_size() const$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:std::size_t
total_size_	asio/include/asio/detail/consuming_buffers.hpp	/^  std::size_t total_size_;$/;"	m	class:consuming_buffers	typeref:typename:std::size_t
total_transferred_	asio/include/asio/impl/read.hpp	/^    std::size_t total_transferred_;$/;"	m	class:asio::detail::read_dynbuf_v1_op	typeref:typename:std::size_t
total_transferred_	asio/include/asio/impl/read.hpp	/^    std::size_t total_transferred_;$/;"	m	class:asio::detail::read_dynbuf_v2_op	typeref:typename:std::size_t
total_transferred_	asio/include/asio/impl/read_at.hpp	/^    std::size_t total_transferred_;$/;"	m	class:asio::detail::read_at_streambuf_op	typeref:typename:std::size_t
tracked_handler	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^  struct tracked_handler$/;"	s	struct:custom_tracking
traits_helper	asio/include/asio/basic_socket_iostream.hpp	/^  typedef WaitTraits traits_helper;$/;"	t	class:asio::basic_socket_iostream	typeref:typename:WaitTraits
traits_helper	asio/include/asio/basic_socket_streambuf.hpp	/^  typedef WaitTraits traits_helper;$/;"	t	class:asio::basic_socket_streambuf	typeref:typename:WaitTraits
traits_type	asio/include/asio/basic_deadline_timer.hpp	/^  typedef TimeTraits traits_type;$/;"	t	class:asio::basic_deadline_timer	typeref:typename:TimeTraits
traits_type	asio/include/asio/basic_waitable_timer.hpp	/^  typedef WaitTraits traits_type;$/;"	t	class:asio::basic_waitable_timer	typeref:typename:WaitTraits
transfer_all	asio/include/asio/completion_condition.hpp	/^inline detail::transfer_all_t transfer_all()$/;"	f	namespace:asio	typeref:typename:detail::transfer_all_t
transfer_all	asio/src/tests/latency/tcp_client.cpp	/^struct transfer_all$/;"	s	file:
transfer_all_t	asio/include/asio/completion_condition.hpp	/^class transfer_all_t$/;"	c	namespace:asio::detail
transfer_at_least	asio/include/asio/completion_condition.hpp	/^inline detail::transfer_at_least_t transfer_at_least(std::size_t minimum)$/;"	f	namespace:asio	typeref:typename:detail::transfer_at_least_t
transfer_at_least_t	asio/include/asio/completion_condition.hpp	/^  explicit transfer_at_least_t(std::size_t minimum)$/;"	f	class:asio::detail::transfer_at_least_t
transfer_at_least_t	asio/include/asio/completion_condition.hpp	/^class transfer_at_least_t$/;"	c	namespace:asio::detail
transfer_exactly	asio/include/asio/completion_condition.hpp	/^inline detail::transfer_exactly_t transfer_exactly(std::size_t size)$/;"	f	namespace:asio	typeref:typename:detail::transfer_exactly_t
transfer_exactly_t	asio/include/asio/completion_condition.hpp	/^  explicit transfer_exactly_t(std::size_t size)$/;"	f	class:asio::detail::transfer_exactly_t
transfer_exactly_t	asio/include/asio/completion_condition.hpp	/^class transfer_exactly_t$/;"	c	namespace:asio::detail
transmit_file	asio/src/examples/cpp03/windows/transmit_file.cpp	/^void transmit_file(tcp_socket& socket,$/;"	f	typeref:typename:void
tree_id_	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^    std::uintmax_t tree_id_ = 0; \/\/ To identify related handlers.$/;"	m	struct:custom_tracking::tracked_handler	typeref:typename:std::uintmax_t
true_cond_1	asio/src/tests/unit/connect.cpp	/^bool true_cond_1(const asio::error_code& \/*ec*\/,$/;"	f	typeref:typename:bool
true_cond_2	asio/src/tests/unit/connect.cpp	/^struct true_cond_2$/;"	s	file:
try_again	asio/include/asio/error.hpp	/^  const error::netdb_errors try_again = error::host_not_found_try_again;$/;"	v	namespace:asio::resolver_errc	typeref:typename:const error::netdb_errors
try_again	asio/include/asio/error.hpp	/^  try_again = ASIO_WIN_OR_POSIX($/;"	e	enum:asio::error::basic_errors
try_speculative_	asio/include/asio/detail/epoll_reactor.hpp	/^    bool try_speculative_[max_ops];$/;"	m	class:asio::detail::epoll_reactor::descriptor_state	typeref:typename:bool[]
tss_key_	asio/include/asio/detail/posix_tss_ptr.hpp	/^  pthread_key_t tss_key_;$/;"	m	class:asio::detail::posix_tss_ptr	typeref:typename:pthread_key_t
tss_key_	asio/include/asio/detail/win_tss_ptr.hpp	/^  DWORD tss_key_;$/;"	m	class:asio::detail::win_tss_ptr	typeref:typename:DWORD
tss_ptr	asio/include/asio/detail/tss_ptr.hpp	/^class tss_ptr$/;"	c	namespace:asio::detail
tss_ptr_	asio/include/asio/detail/win_global.hpp	/^  static tss_ptr<T> tss_ptr_;$/;"	m	struct:asio::detail::win_global_impl	typeref:typename:tss_ptr<T>
tss_ptr_	asio/include/asio/detail/win_global.hpp	/^tss_ptr<T> win_global_impl<T>::tss_ptr_;$/;"	m	class:asio::detail::win_global_impl<T>	typeref:typename:tss_ptr<T>
tutorial_daytime1_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_daytime1_client_SOURCES = tutorial\/daytime1\/client.cpp$/;"	m
tutorial_daytime2_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_daytime2_server_SOURCES = tutorial\/daytime2\/server.cpp$/;"	m
tutorial_daytime3_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_daytime3_server_SOURCES = tutorial\/daytime3\/server.cpp$/;"	m
tutorial_daytime4_client_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_daytime4_client_SOURCES = tutorial\/daytime4\/client.cpp$/;"	m
tutorial_daytime5_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_daytime5_server_SOURCES = tutorial\/daytime5\/server.cpp$/;"	m
tutorial_daytime6_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_daytime6_server_SOURCES = tutorial\/daytime6\/server.cpp$/;"	m
tutorial_daytime7_server_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_daytime7_server_SOURCES = tutorial\/daytime7\/server.cpp$/;"	m
tutorial_timer1_timer_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_timer1_timer_SOURCES = tutorial\/timer1\/timer.cpp$/;"	m
tutorial_timer2_timer_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_timer2_timer_SOURCES = tutorial\/timer2\/timer.cpp$/;"	m
tutorial_timer3_timer_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_timer3_timer_SOURCES = tutorial\/timer3\/timer.cpp$/;"	m
tutorial_timer4_timer_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_timer4_timer_SOURCES = tutorial\/timer4\/timer.cpp$/;"	m
tutorial_timer5_timer_SOURCES	asio/src/examples/cpp03/Makefile.am	/^tutorial_timer5_timer_SOURCES = tutorial\/timer5\/timer.cpp$/;"	m
two	asio/include/asio/serial_port_base.hpp	/^    enum type { one, onepointfive, two };$/;"	e	enum:asio::serial_port_base::stop_bits::type
type	asio/include/asio/associated_allocator.hpp	/^  typedef E type;$/;"	t	struct:asio::detail::associated_allocator_impl	typeref:typename:E
type	asio/include/asio/associated_allocator.hpp	/^  typedef see_below type;$/;"	t	struct:asio::associated_allocator	typeref:typename:see_below
type	asio/include/asio/associated_allocator.hpp	/^  typedef typename T::allocator_type type;$/;"	t	struct:asio::detail::associated_allocator_impl	typeref:typename:T::allocator_type
type	asio/include/asio/associated_allocator.hpp	/^  typedef void type;$/;"	t	struct:asio::detail::associated_allocator_check	typeref:typename:void
type	asio/include/asio/associated_executor.hpp	/^  typedef E type;$/;"	t	struct:asio::detail::associated_executor_impl	typeref:typename:E
type	asio/include/asio/associated_executor.hpp	/^  typedef see_below type;$/;"	t	struct:asio::associated_executor	typeref:typename:see_below
type	asio/include/asio/associated_executor.hpp	/^  typedef typename T::executor_type type;$/;"	t	struct:asio::detail::associated_executor_impl	typeref:typename:T::executor_type
type	asio/include/asio/associated_executor.hpp	/^  typedef void type;$/;"	t	struct:asio::detail::associated_executor_check	typeref:typename:void
type	asio/include/asio/async_result.hpp	/^  typedef see_below type;$/;"	t	struct:asio::default_completion_token	typeref:typename:see_below
type	asio/include/asio/async_result.hpp	/^  typedef typename T::default_completion_token_type type;$/;"	t	struct:asio::detail::default_completion_token_impl	typeref:typename:T::default_completion_token_type
type	asio/include/asio/async_result.hpp	/^  typedef void type;$/;"	t	struct:asio::detail::default_completion_token_check	typeref:typename:void
type	asio/include/asio/async_result.hpp	/^  typedef void type;$/;"	t	struct:asio::detail::default_completion_token_impl	typeref:typename:void
type	asio/include/asio/bind_executor.hpp	/^  typedef Executor type;$/;"	t	struct:asio::associated_executor	typeref:typename:Executor
type	asio/include/asio/bind_executor.hpp	/^  typedef typename associated_allocator<T, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<T,Allocator>::type
type	asio/include/asio/bind_executor.hpp	/^  typedef typename result_of<T()>::type type;$/;"	t	struct:asio::detail::executor_binder_result_of0
type	asio/include/asio/bind_executor.hpp	/^  typedef void type;$/;"	t	struct:asio::detail::executor_binder_check	typeref:typename:void
type	asio/include/asio/bind_executor.hpp	/^  typedef void type;$/;"	t	struct:asio::detail::executor_binder_result_of0	typeref:typename:void
type	asio/include/asio/buffers_iterator.hpp	/^      typedef ByteType type;$/;"	t	struct:asio::detail::buffers_iterator_types_helper::byte_type	typeref:typename:ByteType
type	asio/include/asio/buffers_iterator.hpp	/^      typedef typename add_const<ByteType>::type type;$/;"	t	struct:asio::detail::buffers_iterator_types_helper::byte_type	typeref:typename:add_const<ByteType>::type
type	asio/include/asio/detail/bind_handler.hpp	/^  typedef typename associated_allocator<Handler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<Handler,Allocator>::type
type	asio/include/asio/detail/bind_handler.hpp	/^  typedef typename associated_executor<Handler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<Handler,Executor>::type
type	asio/include/asio/detail/dependent_type.hpp	/^  typedef T type;$/;"	t	struct:asio::detail::dependent_type	typeref:typename:T
type	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  typedef Allocator type;$/;"	t	struct:asio::detail::get_hook_allocator	typeref:typename:Allocator
type	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  typedef hook_allocator<Handler, T> type;$/;"	v	namespace:asio::detail	typeref:struct:get_hook_allocator
type	asio/include/asio/detail/recycling_allocator.hpp	/^  typedef Allocator type;$/;"	t	struct:asio::detail::get_recycling_allocator	typeref:typename:Allocator
type	asio/include/asio/detail/recycling_allocator.hpp	/^  typedef recycling_allocator<T, Purpose> type;$/;"	t	struct:asio::detail::get_recycling_allocator	typeref:typename:recycling_allocator<T,Purpose>
type	asio/include/asio/generic/datagram_protocol.hpp	/^  int type() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::datagram_protocol	typeref:typename:int
type	asio/include/asio/generic/raw_protocol.hpp	/^  int type() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::raw_protocol	typeref:typename:int
type	asio/include/asio/generic/seq_packet_protocol.hpp	/^  int type() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::seq_packet_protocol	typeref:typename:int
type	asio/include/asio/generic/stream_protocol.hpp	/^  int type() const ASIO_NOEXCEPT$/;"	f	class:asio::generic::stream_protocol	typeref:typename:int
type	asio/include/asio/impl/buffered_read_stream.hpp	/^  typedef typename associated_allocator<ReadHandler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<ReadHandler,Allocator>::type
type	asio/include/asio/impl/buffered_read_stream.hpp	/^  typedef typename associated_executor<ReadHandler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<ReadHandler,Executor>::type
type	asio/include/asio/impl/buffered_write_stream.hpp	/^  typedef typename associated_allocator<WriteHandler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<WriteHandler,Allocator>::type
type	asio/include/asio/impl/buffered_write_stream.hpp	/^  typedef typename associated_executor<WriteHandler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<WriteHandler,Executor>::type
type	asio/include/asio/impl/connect.hpp	/^      IteratorConnectHandler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<IteratorConnectHandler,Allocator>::type
type	asio/include/asio/impl/connect.hpp	/^      IteratorConnectHandler, Executor1>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<IteratorConnectHandler,Executor1>::type
type	asio/include/asio/impl/connect.hpp	/^      RangeConnectHandler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<RangeConnectHandler,Allocator>::type
type	asio/include/asio/impl/connect.hpp	/^      RangeConnectHandler, Executor1>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<RangeConnectHandler,Executor1>::type
type	asio/include/asio/impl/read.hpp	/^  typedef typename associated_allocator<ReadHandler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<ReadHandler,Allocator>::type
type	asio/include/asio/impl/read.hpp	/^  typedef typename associated_executor<ReadHandler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<ReadHandler,Executor>::type
type	asio/include/asio/impl/read_at.hpp	/^  typedef typename associated_allocator<ReadHandler, Allocator1>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<ReadHandler,Allocator1>::type
type	asio/include/asio/impl/read_at.hpp	/^  typedef typename associated_allocator<ReadHandler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<ReadHandler,Allocator>::type
type	asio/include/asio/impl/read_at.hpp	/^  typedef typename associated_executor<ReadHandler, Executor1>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<ReadHandler,Executor1>::type
type	asio/include/asio/impl/read_at.hpp	/^  typedef typename associated_executor<ReadHandler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<ReadHandler,Executor>::type
type	asio/include/asio/impl/read_until.hpp	/^  typedef typename associated_allocator<ReadHandler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<ReadHandler,Allocator>::type
type	asio/include/asio/impl/read_until.hpp	/^  typedef typename associated_executor<ReadHandler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<ReadHandler,Executor>::type
type	asio/include/asio/impl/redirect_error.hpp	/^  typedef Signature type;$/;"	t	struct:asio::detail::redirect_error_signature	typeref:typename:Signature
type	asio/include/asio/impl/redirect_error.hpp	/^  typedef typename associated_allocator<Handler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<Handler,Allocator>::type
type	asio/include/asio/impl/redirect_error.hpp	/^  typedef typename associated_executor<Handler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<Handler,Executor>::type
type	asio/include/asio/impl/spawn.hpp	/^  typedef typename associated_allocator<Handler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<Handler,Allocator>::type
type	asio/include/asio/impl/spawn.hpp	/^  typedef typename associated_executor<Handler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<Handler,Executor>::type
type	asio/include/asio/impl/write.hpp	/^  typedef typename associated_allocator<WriteHandler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<WriteHandler,Allocator>::type
type	asio/include/asio/impl/write.hpp	/^  typedef typename associated_executor<WriteHandler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<WriteHandler,Executor>::type
type	asio/include/asio/impl/write_at.hpp	/^  typedef typename associated_allocator<WriteHandler, Allocator1>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<WriteHandler,Allocator1>::type
type	asio/include/asio/impl/write_at.hpp	/^  typedef typename associated_allocator<WriteHandler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<WriteHandler,Allocator>::type
type	asio/include/asio/impl/write_at.hpp	/^  typedef typename associated_executor<WriteHandler, Executor1>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<WriteHandler,Executor1>::type
type	asio/include/asio/impl/write_at.hpp	/^  typedef typename associated_executor<WriteHandler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<WriteHandler,Executor>::type
type	asio/include/asio/ip/icmp.hpp	/^  int type() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::icmp	typeref:typename:int
type	asio/include/asio/ip/tcp.hpp	/^  int type() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::tcp	typeref:typename:int
type	asio/include/asio/ip/udp.hpp	/^  int type() const ASIO_NOEXCEPT$/;"	f	class:asio::ip::udp	typeref:typename:int
type	asio/include/asio/local/datagram_protocol.hpp	/^  int type() const ASIO_NOEXCEPT$/;"	f	class:asio::local::datagram_protocol	typeref:typename:int
type	asio/include/asio/local/stream_protocol.hpp	/^  int type() const ASIO_NOEXCEPT$/;"	f	class:asio::local::stream_protocol	typeref:typename:int
type	asio/include/asio/serial_port_base.hpp	/^    enum type { none, odd, even };$/;"	g	class:asio::serial_port_base::parity
type	asio/include/asio/serial_port_base.hpp	/^    enum type { none, software, hardware };$/;"	g	class:asio::serial_port_base::flow_control
type	asio/include/asio/serial_port_base.hpp	/^    enum type { one, onepointfive, two };$/;"	g	class:asio::serial_port_base::stop_bits
type	asio/include/asio/ssl/detail/io.hpp	/^  typedef typename associated_allocator<Handler, Allocator>::type type;$/;"	t	struct:asio::associated_allocator	typeref:typename:associated_allocator<Handler,Allocator>::type
type	asio/include/asio/ssl/detail/io.hpp	/^  typedef typename associated_executor<Handler, Executor>::type type;$/;"	t	struct:asio::associated_executor	typeref:typename:associated_executor<Handler,Executor>::type
type	asio/src/doc/reference.xsl	/^  <xsl:variable name="type">$/;"	v	namedTemplate:cleanup-type
type	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  unsigned char type() const { return rep_[0]; }$/;"	f	class:icmp_header	typeref:typename:unsigned char
type	asio/src/examples/cpp03/icmp/icmp_header.hpp	/^  void type(unsigned char n) { rep_[0] = n; }$/;"	f	class:icmp_header	typeref:typename:void
type-id	asio/src/doc/reference.xsl	/^    <xsl:variable name="type-id">$/;"	v	namedTemplate:class-tables
type-name	asio/src/doc/reference.xsl	/^    <xsl:variable name="type-name">$/;"	v	namedTemplate:class-tables
type-ref-id	asio/src/doc/reference.xsl	/^    <xsl:variable name="type-ref-id" select="@refid"\/>$/;"	v	namedTemplate:class-tables
type_	asio/include/asio/ip/address.hpp	/^  enum { ipv4, ipv6 } type_;$/;"	m	class:asio::ip::address	typeref:enum:asio::ip::address::__anonb5f433120103
type_	asio/include/asio/ssl/detail/buffered_handshake_op.hpp	/^  stream_base::handshake_type type_;$/;"	m	class:asio::ssl::detail::buffered_handshake_op	typeref:typename:stream_base::handshake_type
type_	asio/include/asio/ssl/detail/handshake_op.hpp	/^  stream_base::handshake_type type_;$/;"	m	class:asio::ssl::detail::handshake_op	typeref:typename:stream_base::handshake_type
type_id	asio/include/asio/executor.hpp	/^  static type_id_result_type type_id()$/;"	f	class:asio::executor	typeref:typename:type_id_result_type
type_id_result_type	asio/include/asio/executor.hpp	/^  typedef const std::type_info& type_id_result_type;$/;"	t	class:asio::executor	typeref:typename:const std::type_info &
type_id_result_type	asio/include/asio/executor.hpp	/^  typedef const void* type_id_result_type;$/;"	t	class:asio::executor	typeref:typename:const void *
type_info_	asio/include/asio/execution_context.hpp	/^    const std::type_info* type_info_;$/;"	m	struct:asio::execution_context::service::key	typeref:typename:const std::type_info *
type_of_service	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned char type_of_service() const { return rep_[1]; }$/;"	f	class:ipv4_header	typeref:typename:unsigned char
typedef	asio/src/doc/reference.xsl	/^<xsl:template name="typedef">$/;"	n
typeid_wrapper	asio/include/asio/detail/service_registry.hpp	/^class typeid_wrapper {};$/;"	c	namespace:asio::detail
u	asio/include/asio/detail/old_win_sdk_compat.hpp	/^  } u;$/;"	m	struct:asio::detail::in6_addr_emulation	typeref:union:asio::detail::in6_addr_emulation::__anoned65e276020a
u_long_type	asio/include/asio/detail/socket_types.hpp	/^typedef unsigned __int32 u_long_type;$/;"	t	namespace:asio::detail	typeref:typename:unsigned __int32
u_short_type	asio/include/asio/detail/socket_types.hpp	/^typedef unsigned __int16 u_short_type;$/;"	t	namespace:asio::detail	typeref:typename:unsigned __int16
udp	asio/include/asio/ip/udp.hpp	/^  explicit udp(int protocol_family) ASIO_NOEXCEPT$/;"	f	class:asio::ip::udp
udp	asio/include/asio/ip/udp.hpp	/^class udp$/;"	c	namespace:asio::ip
udp_broadcaster	asio/src/examples/cpp03/timeouts/server.cpp	/^  udp_broadcaster(asio::io_context& io_context,$/;"	f	class:udp_broadcaster	file:
udp_broadcaster	asio/src/examples/cpp03/timeouts/server.cpp	/^class udp_broadcaster$/;"	c	file:
udp_broadcaster	asio/src/examples/cpp11/timeouts/server.cpp	/^  udp_broadcaster(asio::io_context& io_context,$/;"	f	class:udp_broadcaster	file:
udp_broadcaster	asio/src/examples/cpp11/timeouts/server.cpp	/^class udp_broadcaster$/;"	c	file:
udp_daytime_server	asio/src/examples/cpp03/fork/daemon.cpp	/^  udp_daytime_server(asio::io_context& io_context)$/;"	f	class:udp_daytime_server	file:
udp_daytime_server	asio/src/examples/cpp03/fork/daemon.cpp	/^class udp_daytime_server$/;"	c	file:
udp_daytime_server	asio/src/examples/cpp11/fork/daemon.cpp	/^  udp_daytime_server(asio::io_context& io_context)$/;"	f	class:udp_daytime_server	file:
udp_daytime_server	asio/src/examples/cpp11/fork/daemon.cpp	/^class udp_daytime_server$/;"	c	file:
udp_server	asio/src/examples/cpp03/tutorial/daytime6/server.cpp	/^  udp_server(asio::io_context& io_context)$/;"	f	class:udp_server	file:
udp_server	asio/src/examples/cpp03/tutorial/daytime6/server.cpp	/^class udp_server$/;"	c	file:
udp_server	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^  udp_server(asio::io_context& io_context)$/;"	f	class:udp_server	file:
udp_server	asio/src/examples/cpp03/tutorial/daytime7/server.cpp	/^class udp_server$/;"	c	file:
udp_server	asio/src/tests/latency/udp_server.cpp	/^  udp_server(asio::io_context& io_context,$/;"	f	class:udp_server	file:
udp_server	asio/src/tests/latency/udp_server.cpp	/^class udp_server : asio::coroutine$/;"	c	file:
udp_socket_	asio/src/examples/cpp03/porthopper/server.cpp	/^  udp::socket udp_socket_;$/;"	m	class:server	typeref:typename:udp::socket	file:
uint_type	asio/include/asio/ip/address_v4.hpp	/^  typedef uint_least32_t uint_type;$/;"	t	class:asio::ip::address_v4	typeref:typename:uint_least32_t
ulink	asio/src/doc/tutorial.xsl	/^<xsl:template match="ulink">$/;"	m
ulong_ptr_t	asio/include/asio/detail/win_iocp_io_context.hpp	/^  typedef ULONG ulong_ptr_t;$/;"	t	class:asio::detail::win_iocp_io_context	typeref:typename:ULONG
unauthorized	asio/src/examples/cpp03/http/server/reply.cpp	/^const char unauthorized[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
unauthorized	asio/src/examples/cpp03/http/server/reply.cpp	/^const std::string unauthorized =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
unauthorized	asio/src/examples/cpp03/http/server/reply.hpp	/^    unauthorized = 401,$/;"	e	enum:http::server::reply::status_type
unauthorized	asio/src/examples/cpp03/http/server2/reply.cpp	/^const char unauthorized[] =$/;"	v	namespace:http::server2::stock_replies	typeref:typename:const char[]
unauthorized	asio/src/examples/cpp03/http/server2/reply.cpp	/^const std::string unauthorized =$/;"	v	namespace:http::server2::status_strings	typeref:typename:const std::string
unauthorized	asio/src/examples/cpp03/http/server2/reply.hpp	/^    unauthorized = 401,$/;"	e	enum:http::server2::reply::status_type
unauthorized	asio/src/examples/cpp03/http/server3/reply.cpp	/^const char unauthorized[] =$/;"	v	namespace:http::server3::stock_replies	typeref:typename:const char[]
unauthorized	asio/src/examples/cpp03/http/server3/reply.cpp	/^const std::string unauthorized =$/;"	v	namespace:http::server3::status_strings	typeref:typename:const std::string
unauthorized	asio/src/examples/cpp03/http/server3/reply.hpp	/^    unauthorized = 401,$/;"	e	enum:http::server3::reply::status_type
unauthorized	asio/src/examples/cpp03/http/server4/reply.cpp	/^const char unauthorized[] =$/;"	v	namespace:http::server4::stock_replies	typeref:typename:const char[]
unauthorized	asio/src/examples/cpp03/http/server4/reply.cpp	/^const std::string unauthorized =$/;"	v	namespace:http::server4::status_strings	typeref:typename:const std::string
unauthorized	asio/src/examples/cpp03/http/server4/reply.hpp	/^    unauthorized = 401,$/;"	e	enum:http::server4::reply::status_type
unauthorized	asio/src/examples/cpp11/http/server/reply.cpp	/^const char unauthorized[] =$/;"	v	namespace:http::server::stock_replies	typeref:typename:const char[]
unauthorized	asio/src/examples/cpp11/http/server/reply.cpp	/^const std::string unauthorized =$/;"	v	namespace:http::server::status_strings	typeref:typename:const std::string
unauthorized	asio/src/examples/cpp11/http/server/reply.hpp	/^    unauthorized = 401,$/;"	e	enum:http::server::reply::status_type
unblock	asio/include/asio/detail/null_signal_blocker.hpp	/^  void unblock()$/;"	f	class:asio::detail::null_signal_blocker	typeref:typename:void
unblock	asio/include/asio/detail/posix_signal_blocker.hpp	/^  void unblock()$/;"	f	class:asio::detail::posix_signal_blocker	typeref:typename:void
undelivered_	asio/include/asio/detail/signal_set_service.hpp	/^    std::size_t undelivered_;$/;"	m	class:asio::detail::signal_set_service::registration	typeref:typename:std::size_t
underflow	asio/include/asio/basic_socket_streambuf.hpp	/^  int_type underflow()$/;"	f	class:asio::basic_socket_streambuf	typeref:typename:int_type
underflow	asio/include/asio/basic_streambuf.hpp	/^  int_type underflow()$/;"	f	class:asio::basic_streambuf	typeref:typename:int_type
unexpected_result	asio/include/asio/ssl/error.hpp	/^  unexpected_result$/;"	e	enum:asio::ssl::error::stream_errors
unhandled_exception	asio/include/asio/impl/awaitable.hpp	/^  void unhandled_exception()$/;"	f	class:asio::detail::awaitable_frame_base	typeref:typename:void
unicast	asio/include/asio/ip/unicast.hpp	/^namespace unicast {$/;"	n	namespace:asio::ip
unicast_hops	asio/include/asio/ip/detail/socket_option.hpp	/^  explicit unicast_hops(int v)$/;"	f	class:asio::ip::detail::socket_option::unicast_hops
unicast_hops	asio/include/asio/ip/detail/socket_option.hpp	/^  unicast_hops()$/;"	f	class:asio::ip::detail::socket_option::unicast_hops
unicast_hops	asio/include/asio/ip/detail/socket_option.hpp	/^class unicast_hops$/;"	c	namespace:asio::ip::detail::socket_option
unique_lock_	asio/include/asio/detail/std_event.hpp	/^    std::unique_lock<std::mutex> unique_lock_;$/;"	m	struct:asio::detail::std_event::unique_lock_adapter	typeref:typename:std::unique_lock<std::mutex>
unique_lock_adapter	asio/include/asio/detail/std_event.hpp	/^    explicit unique_lock_adapter(Lock& lock)$/;"	f	struct:asio::detail::std_event::unique_lock_adapter
unique_lock_adapter	asio/include/asio/detail/std_event.hpp	/^  struct unique_lock_adapter$/;"	s	class:asio::detail::std_event
unit_associated_allocator_SOURCES	asio/src/tests/Makefile.am	/^unit_associated_allocator_SOURCES = unit\/associated_allocator.cpp$/;"	m
unit_associated_executor_SOURCES	asio/src/tests/Makefile.am	/^unit_associated_executor_SOURCES = unit\/associated_executor.cpp$/;"	m
unit_async_result_SOURCES	asio/src/tests/Makefile.am	/^unit_async_result_SOURCES = unit\/async_result.cpp$/;"	m
unit_awaitable_SOURCES	asio/src/tests/Makefile.am	/^unit_awaitable_SOURCES = unit\/awaitable.cpp$/;"	m
unit_basic_datagram_socket_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_datagram_socket_SOURCES = unit\/basic_datagram_socket.cpp$/;"	m
unit_basic_deadline_timer_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_deadline_timer_SOURCES = unit\/basic_deadline_timer.cpp$/;"	m
unit_basic_raw_socket_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_raw_socket_SOURCES = unit\/basic_raw_socket.cpp$/;"	m
unit_basic_seq_packet_socket_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_seq_packet_socket_SOURCES = unit\/basic_seq_packet_socket.cpp$/;"	m
unit_basic_serial_port_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_serial_port_SOURCES = unit\/basic_serial_port.cpp$/;"	m
unit_basic_signal_set_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_signal_set_SOURCES = unit\/basic_signal_set.cpp$/;"	m
unit_basic_socket_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_socket_SOURCES = unit\/basic_socket.cpp$/;"	m
unit_basic_socket_acceptor_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_socket_acceptor_SOURCES = unit\/basic_socket_acceptor.cpp$/;"	m
unit_basic_stream_socket_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_stream_socket_SOURCES = unit\/basic_stream_socket.cpp$/;"	m
unit_basic_streambuf_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_streambuf_SOURCES = unit\/basic_streambuf.cpp$/;"	m
unit_basic_waitable_timer_SOURCES	asio/src/tests/Makefile.am	/^unit_basic_waitable_timer_SOURCES = unit\/basic_waitable_timer.cpp$/;"	m
unit_bind_executor_SOURCES	asio/src/tests/Makefile.am	/^unit_bind_executor_SOURCES = unit\/bind_executor.cpp$/;"	m
unit_buffer_SOURCES	asio/src/tests/Makefile.am	/^unit_buffer_SOURCES = unit\/buffer.cpp$/;"	m
unit_buffered_read_stream_SOURCES	asio/src/tests/Makefile.am	/^unit_buffered_read_stream_SOURCES = unit\/buffered_read_stream.cpp$/;"	m
unit_buffered_stream_SOURCES	asio/src/tests/Makefile.am	/^unit_buffered_stream_SOURCES = unit\/buffered_stream.cpp$/;"	m
unit_buffered_write_stream_SOURCES	asio/src/tests/Makefile.am	/^unit_buffered_write_stream_SOURCES = unit\/buffered_write_stream.cpp$/;"	m
unit_buffers_iterator_SOURCES	asio/src/tests/Makefile.am	/^unit_buffers_iterator_SOURCES = unit\/buffers_iterator.cpp$/;"	m
unit_co_spawn_SOURCES	asio/src/tests/Makefile.am	/^unit_co_spawn_SOURCES = unit\/co_spawn.cpp$/;"	m
unit_completion_condition_SOURCES	asio/src/tests/Makefile.am	/^unit_completion_condition_SOURCES = unit\/completion_condition.cpp$/;"	m
unit_compose_SOURCES	asio/src/tests/Makefile.am	/^unit_compose_SOURCES = unit\/compose.cpp$/;"	m
unit_connect_SOURCES	asio/src/tests/Makefile.am	/^unit_connect_SOURCES = unit\/connect.cpp$/;"	m
unit_coroutine_SOURCES	asio/src/tests/Makefile.am	/^unit_coroutine_SOURCES = unit\/coroutine.cpp$/;"	m
unit_deadline_timer_SOURCES	asio/src/tests/Makefile.am	/^unit_deadline_timer_SOURCES = unit\/deadline_timer.cpp$/;"	m
unit_defer_SOURCES	asio/src/tests/Makefile.am	/^unit_defer_SOURCES = unit\/defer.cpp$/;"	m
unit_detached_SOURCES	asio/src/tests/Makefile.am	/^unit_detached_SOURCES = unit\/detached.cpp$/;"	m
unit_dispatch_SOURCES	asio/src/tests/Makefile.am	/^unit_dispatch_SOURCES = unit\/dispatch.cpp$/;"	m
unit_error_SOURCES	asio/src/tests/Makefile.am	/^unit_error_SOURCES = unit\/error.cpp$/;"	m
unit_execution_context_SOURCES	asio/src/tests/Makefile.am	/^unit_execution_context_SOURCES = unit\/execution_context.cpp$/;"	m
unit_executor_SOURCES	asio/src/tests/Makefile.am	/^unit_executor_SOURCES = unit\/executor.cpp$/;"	m
unit_executor_work_guard_SOURCES	asio/src/tests/Makefile.am	/^unit_executor_work_guard_SOURCES = unit\/executor_work_guard.cpp$/;"	m
unit_generic_basic_endpoint_SOURCES	asio/src/tests/Makefile.am	/^unit_generic_basic_endpoint_SOURCES = unit\/generic\/basic_endpoint.cpp$/;"	m
unit_generic_datagram_protocol_SOURCES	asio/src/tests/Makefile.am	/^unit_generic_datagram_protocol_SOURCES = unit\/generic\/datagram_protocol.cpp$/;"	m
unit_generic_raw_protocol_SOURCES	asio/src/tests/Makefile.am	/^unit_generic_raw_protocol_SOURCES = unit\/generic\/raw_protocol.cpp$/;"	m
unit_generic_seq_packet_protocol_SOURCES	asio/src/tests/Makefile.am	/^unit_generic_seq_packet_protocol_SOURCES = unit\/generic\/seq_packet_protocol.cpp$/;"	m
unit_generic_stream_protocol_SOURCES	asio/src/tests/Makefile.am	/^unit_generic_stream_protocol_SOURCES = unit\/generic\/stream_protocol.cpp$/;"	m
unit_high_resolution_timer_SOURCES	asio/src/tests/Makefile.am	/^unit_high_resolution_timer_SOURCES = unit\/high_resolution_timer.cpp$/;"	m
unit_io_context_SOURCES	asio/src/tests/Makefile.am	/^unit_io_context_SOURCES = unit\/io_context.cpp$/;"	m
unit_io_context_strand_SOURCES	asio/src/tests/Makefile.am	/^unit_io_context_strand_SOURCES = unit\/io_context_strand.cpp$/;"	m
unit_ip_address_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_address_SOURCES = unit\/ip\/address.cpp$/;"	m
unit_ip_address_v4_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_address_v4_SOURCES = unit\/ip\/address_v4.cpp$/;"	m
unit_ip_address_v4_iterator_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_address_v4_iterator_SOURCES = unit\/ip\/address_v4_iterator.cpp$/;"	m
unit_ip_address_v4_range_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_address_v4_range_SOURCES = unit\/ip\/address_v4_range.cpp$/;"	m
unit_ip_address_v6_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_address_v6_SOURCES = unit\/ip\/address_v6.cpp$/;"	m
unit_ip_address_v6_iterator_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_address_v6_iterator_SOURCES = unit\/ip\/address_v6_iterator.cpp$/;"	m
unit_ip_address_v6_range_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_address_v6_range_SOURCES = unit\/ip\/address_v6_range.cpp$/;"	m
unit_ip_basic_endpoint_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_basic_endpoint_SOURCES = unit\/ip\/basic_endpoint.cpp$/;"	m
unit_ip_basic_resolver_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_basic_resolver_SOURCES = unit\/ip\/basic_resolver.cpp$/;"	m
unit_ip_basic_resolver_entry_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_basic_resolver_entry_SOURCES = unit\/ip\/basic_resolver_entry.cpp$/;"	m
unit_ip_basic_resolver_iterator_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_basic_resolver_iterator_SOURCES = unit\/ip\/basic_resolver_iterator.cpp$/;"	m
unit_ip_basic_resolver_query_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_basic_resolver_query_SOURCES = unit\/ip\/basic_resolver_query.cpp$/;"	m
unit_ip_host_name_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_host_name_SOURCES = unit\/ip\/host_name.cpp$/;"	m
unit_ip_icmp_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_icmp_SOURCES = unit\/ip\/icmp.cpp$/;"	m
unit_ip_multicast_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_multicast_SOURCES = unit\/ip\/multicast.cpp$/;"	m
unit_ip_network_v4_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_network_v4_SOURCES = unit\/ip\/network_v4.cpp$/;"	m
unit_ip_network_v6_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_network_v6_SOURCES = unit\/ip\/network_v6.cpp$/;"	m
unit_ip_resolver_query_base_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_resolver_query_base_SOURCES = unit\/ip\/resolver_query_base.cpp$/;"	m
unit_ip_tcp_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_tcp_SOURCES = unit\/ip\/tcp.cpp$/;"	m
unit_ip_udp_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_udp_SOURCES = unit\/ip\/udp.cpp$/;"	m
unit_ip_unicast_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_unicast_SOURCES = unit\/ip\/unicast.cpp$/;"	m
unit_ip_v6_only_SOURCES	asio/src/tests/Makefile.am	/^unit_ip_v6_only_SOURCES = unit\/ip\/v6_only.cpp$/;"	m
unit_is_read_buffered_SOURCES	asio/src/tests/Makefile.am	/^unit_is_read_buffered_SOURCES = unit\/is_read_buffered.cpp$/;"	m
unit_is_write_buffered_SOURCES	asio/src/tests/Makefile.am	/^unit_is_write_buffered_SOURCES = unit\/is_write_buffered.cpp$/;"	m
unit_local_basic_endpoint_SOURCES	asio/src/tests/Makefile.am	/^unit_local_basic_endpoint_SOURCES = unit\/local\/basic_endpoint.cpp$/;"	m
unit_local_connect_pair_SOURCES	asio/src/tests/Makefile.am	/^unit_local_connect_pair_SOURCES = unit\/local\/connect_pair.cpp$/;"	m
unit_local_datagram_protocol_SOURCES	asio/src/tests/Makefile.am	/^unit_local_datagram_protocol_SOURCES = unit\/local\/datagram_protocol.cpp$/;"	m
unit_local_stream_protocol_SOURCES	asio/src/tests/Makefile.am	/^unit_local_stream_protocol_SOURCES = unit\/local\/stream_protocol.cpp$/;"	m
unit_packaged_task_SOURCES	asio/src/tests/Makefile.am	/^unit_packaged_task_SOURCES = unit\/packaged_task.cpp$/;"	m
unit_placeholders_SOURCES	asio/src/tests/Makefile.am	/^unit_placeholders_SOURCES = unit\/placeholders.cpp$/;"	m
unit_posix_basic_descriptor_SOURCES	asio/src/tests/Makefile.am	/^unit_posix_basic_descriptor_SOURCES = unit\/posix\/basic_descriptor.cpp$/;"	m
unit_posix_basic_stream_descriptor_SOURCES	asio/src/tests/Makefile.am	/^unit_posix_basic_stream_descriptor_SOURCES = unit\/posix\/basic_stream_descriptor.cpp$/;"	m
unit_posix_descriptor_SOURCES	asio/src/tests/Makefile.am	/^unit_posix_descriptor_SOURCES = unit\/posix\/descriptor.cpp$/;"	m
unit_posix_descriptor_base_SOURCES	asio/src/tests/Makefile.am	/^unit_posix_descriptor_base_SOURCES = unit\/posix\/descriptor_base.cpp$/;"	m
unit_posix_stream_descriptor_SOURCES	asio/src/tests/Makefile.am	/^unit_posix_stream_descriptor_SOURCES = unit\/posix\/stream_descriptor.cpp$/;"	m
unit_post_SOURCES	asio/src/tests/Makefile.am	/^unit_post_SOURCES = unit\/post.cpp$/;"	m
unit_read_SOURCES	asio/src/tests/Makefile.am	/^unit_read_SOURCES = unit\/read.cpp$/;"	m
unit_read_at_SOURCES	asio/src/tests/Makefile.am	/^unit_read_at_SOURCES = unit\/read_at.cpp$/;"	m
unit_read_until_SOURCES	asio/src/tests/Makefile.am	/^unit_read_until_SOURCES = unit\/read_until.cpp$/;"	m
unit_redirect_error_SOURCES	asio/src/tests/Makefile.am	/^unit_redirect_error_SOURCES = unit\/redirect_error.cpp$/;"	m
unit_serial_port_SOURCES	asio/src/tests/Makefile.am	/^unit_serial_port_SOURCES = unit\/serial_port.cpp$/;"	m
unit_serial_port_base_SOURCES	asio/src/tests/Makefile.am	/^unit_serial_port_base_SOURCES = unit\/serial_port_base.cpp$/;"	m
unit_signal_set_SOURCES	asio/src/tests/Makefile.am	/^unit_signal_set_SOURCES = unit\/signal_set.cpp$/;"	m
unit_socket_base_SOURCES	asio/src/tests/Makefile.am	/^unit_socket_base_SOURCES = unit\/socket_base.cpp$/;"	m
unit_ssl_context_SOURCES	asio/src/tests/Makefile.am	/^unit_ssl_context_SOURCES = unit\/ssl\/context.cpp$/;"	m
unit_ssl_context_base_SOURCES	asio/src/tests/Makefile.am	/^unit_ssl_context_base_SOURCES = unit\/ssl\/context_base.cpp$/;"	m
unit_ssl_error_SOURCES	asio/src/tests/Makefile.am	/^unit_ssl_error_SOURCES = unit\/ssl\/error.cpp$/;"	m
unit_ssl_rfc2818_verification_SOURCES	asio/src/tests/Makefile.am	/^unit_ssl_rfc2818_verification_SOURCES = unit\/ssl\/rfc2818_verification.cpp$/;"	m
unit_ssl_stream_SOURCES	asio/src/tests/Makefile.am	/^unit_ssl_stream_SOURCES = unit\/ssl\/stream.cpp$/;"	m
unit_ssl_stream_base_SOURCES	asio/src/tests/Makefile.am	/^unit_ssl_stream_base_SOURCES = unit\/ssl\/stream_base.cpp$/;"	m
unit_steady_timer_SOURCES	asio/src/tests/Makefile.am	/^unit_steady_timer_SOURCES = unit\/steady_timer.cpp$/;"	m
unit_strand_SOURCES	asio/src/tests/Makefile.am	/^unit_strand_SOURCES = unit\/strand.cpp$/;"	m
unit_streambuf_SOURCES	asio/src/tests/Makefile.am	/^unit_streambuf_SOURCES = unit\/streambuf.cpp$/;"	m
unit_system_context_SOURCES	asio/src/tests/Makefile.am	/^unit_system_context_SOURCES = unit\/system_context.cpp$/;"	m
unit_system_executor_SOURCES	asio/src/tests/Makefile.am	/^unit_system_executor_SOURCES = unit\/system_executor.cpp$/;"	m
unit_system_timer_SOURCES	asio/src/tests/Makefile.am	/^unit_system_timer_SOURCES = unit\/system_timer.cpp$/;"	m
unit_this_coro_SOURCES	asio/src/tests/Makefile.am	/^unit_this_coro_SOURCES = unit\/this_coro.cpp$/;"	m
unit_thread_SOURCES	asio/src/tests/Makefile.am	/^unit_thread_SOURCES = unit\/thread.cpp$/;"	m
unit_time_traits_SOURCES	asio/src/tests/Makefile.am	/^unit_time_traits_SOURCES = unit\/time_traits.cpp$/;"	m
unit_ts_buffer_SOURCES	asio/src/tests/Makefile.am	/^unit_ts_buffer_SOURCES = unit\/ts\/buffer.cpp$/;"	m
unit_ts_executor_SOURCES	asio/src/tests/Makefile.am	/^unit_ts_executor_SOURCES = unit\/ts\/executor.cpp$/;"	m
unit_ts_internet_SOURCES	asio/src/tests/Makefile.am	/^unit_ts_internet_SOURCES = unit\/ts\/internet.cpp$/;"	m
unit_ts_io_context_SOURCES	asio/src/tests/Makefile.am	/^unit_ts_io_context_SOURCES = unit\/ts\/io_context.cpp$/;"	m
unit_ts_net_SOURCES	asio/src/tests/Makefile.am	/^unit_ts_net_SOURCES = unit\/ts\/net.cpp$/;"	m
unit_ts_netfwd_SOURCES	asio/src/tests/Makefile.am	/^unit_ts_netfwd_SOURCES = unit\/ts\/netfwd.cpp$/;"	m
unit_ts_socket_SOURCES	asio/src/tests/Makefile.am	/^unit_ts_socket_SOURCES = unit\/ts\/socket.cpp$/;"	m
unit_ts_timer_SOURCES	asio/src/tests/Makefile.am	/^unit_ts_timer_SOURCES = unit\/ts\/timer.cpp$/;"	m
unit_use_awaitable_SOURCES	asio/src/tests/Makefile.am	/^unit_use_awaitable_SOURCES = unit\/use_awaitable.cpp$/;"	m
unit_use_future_SOURCES	asio/src/tests/Makefile.am	/^unit_use_future_SOURCES = unit\/use_future.cpp$/;"	m
unit_uses_executor_SOURCES	asio/src/tests/Makefile.am	/^unit_uses_executor_SOURCES = unit\/uses_executor.cpp$/;"	m
unit_wait_traits_SOURCES	asio/src/tests/Makefile.am	/^unit_wait_traits_SOURCES = unit\/wait_traits.cpp$/;"	m
unit_windows_basic_object_handle_SOURCES	asio/src/tests/Makefile.am	/^unit_windows_basic_object_handle_SOURCES = unit\/windows\/basic_object_handle.cpp$/;"	m
unit_windows_basic_overlapped_handle_SOURCES	asio/src/tests/Makefile.am	/^unit_windows_basic_overlapped_handle_SOURCES = unit\/windows\/basic_overlapped_handle.cpp$/;"	m
unit_windows_basic_random_access_handle_SOURCES	asio/src/tests/Makefile.am	/^unit_windows_basic_random_access_handle_SOURCES = unit\/windows\/basic_random_access_handle.cpp$/;"	m
unit_windows_basic_stream_handle_SOURCES	asio/src/tests/Makefile.am	/^unit_windows_basic_stream_handle_SOURCES = unit\/windows\/basic_stream_handle.cpp$/;"	m
unit_windows_object_handle_SOURCES	asio/src/tests/Makefile.am	/^unit_windows_object_handle_SOURCES = unit\/windows\/object_handle.cpp$/;"	m
unit_windows_overlapped_handle_SOURCES	asio/src/tests/Makefile.am	/^unit_windows_overlapped_handle_SOURCES = unit\/windows\/overlapped_handle.cpp$/;"	m
unit_windows_overlapped_ptr_SOURCES	asio/src/tests/Makefile.am	/^unit_windows_overlapped_ptr_SOURCES = unit\/windows\/overlapped_ptr.cpp$/;"	m
unit_windows_random_access_handle_SOURCES	asio/src/tests/Makefile.am	/^unit_windows_random_access_handle_SOURCES = unit\/windows\/random_access_handle.cpp$/;"	m
unit_windows_stream_handle_SOURCES	asio/src/tests/Makefile.am	/^unit_windows_stream_handle_SOURCES = unit\/windows\/stream_handle.cpp$/;"	m
unit_write_SOURCES	asio/src/tests/Makefile.am	/^unit_write_SOURCES = unit\/write.cpp$/;"	m
unit_write_at_SOURCES	asio/src/tests/Makefile.am	/^unit_write_at_SOURCES = unit\/write_at.cpp$/;"	m
unlock	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    void unlock()$/;"	f	class:asio::detail::conditionally_enabled_mutex::scoped_lock	typeref:typename:void
unlock	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^  void unlock()$/;"	f	class:asio::detail::conditionally_enabled_mutex	typeref:typename:void
unlock	asio/include/asio/detail/null_mutex.hpp	/^  void unlock()$/;"	f	class:asio::detail::null_mutex	typeref:typename:void
unlock	asio/include/asio/detail/null_static_mutex.hpp	/^  void unlock()$/;"	f	struct:asio::detail::null_static_mutex	typeref:typename:void
unlock	asio/include/asio/detail/posix_mutex.hpp	/^  void unlock()$/;"	f	class:asio::detail::posix_mutex	typeref:typename:void
unlock	asio/include/asio/detail/posix_static_mutex.hpp	/^  void unlock()$/;"	f	struct:asio::detail::posix_static_mutex	typeref:typename:void
unlock	asio/include/asio/detail/scoped_lock.hpp	/^  void unlock()$/;"	f	class:asio::detail::scoped_lock	typeref:typename:void
unlock	asio/include/asio/detail/std_mutex.hpp	/^  void unlock()$/;"	f	class:asio::detail::std_mutex	typeref:typename:void
unlock	asio/include/asio/detail/std_static_mutex.hpp	/^  void unlock()$/;"	f	class:asio::detail::std_static_mutex	typeref:typename:void
unlock	asio/include/asio/detail/win_mutex.hpp	/^  void unlock()$/;"	f	class:asio::detail::win_mutex	typeref:typename:void
unlock	asio/include/asio/detail/win_static_mutex.hpp	/^  void unlock()$/;"	f	struct:asio::detail::win_static_mutex	typeref:typename:void
unlock_and_signal_one	asio/include/asio/detail/conditionally_enabled_event.hpp	/^  void unlock_and_signal_one($/;"	f	class:asio::detail::conditionally_enabled_event	typeref:typename:void
unlock_and_signal_one	asio/include/asio/detail/null_event.hpp	/^  void unlock_and_signal_one(Lock&)$/;"	f	class:asio::detail::null_event	typeref:typename:void
unlock_and_signal_one	asio/include/asio/detail/posix_event.hpp	/^  void unlock_and_signal_one(Lock& lock)$/;"	f	class:asio::detail::posix_event	typeref:typename:void
unlock_and_signal_one	asio/include/asio/detail/std_event.hpp	/^  void unlock_and_signal_one(Lock& lock)$/;"	f	class:asio::detail::std_event	typeref:typename:void
unlock_and_signal_one	asio/include/asio/detail/win_event.hpp	/^  void unlock_and_signal_one(Lock& lock)$/;"	f	class:asio::detail::win_event	typeref:typename:void
unqualified-class-name	asio/src/doc/reference.xsl	/^  <xsl:variable name="unqualified-class-name">$/;"	v	namedTemplate:class
unqualified-name	asio/src/doc/reference.xsl	/^  <xsl:variable name="unqualified-name">$/;"	v	namedTemplate:namespace-memberdef
unqualified-type-name	asio/src/doc/reference.xsl	/^    <xsl:variable name="unqualified-type-name">$/;"	v	namedTemplate:class-tables
unsent_count_	asio/src/tests/performance/server.cpp	/^  int unsent_count_;$/;"	m	class:session	typeref:typename:int	file:
unspecified_bool_true	asio/include/asio/error_code.hpp	/^  static void unspecified_bool_true(unspecified_bool_type_t) {}$/;"	f	class:asio::error_code	typeref:typename:void
unspecified_bool_true	asio/include/asio/executor.hpp	/^  static void unspecified_bool_true(unspecified_bool_type_t) {}$/;"	f	class:asio::executor	typeref:typename:void
unspecified_bool_type	asio/include/asio/error_code.hpp	/^  typedef void (*unspecified_bool_type)(unspecified_bool_type_t);$/;"	t	class:asio::error_code	typeref:typename:void (*)(unspecified_bool_type_t)
unspecified_bool_type	asio/include/asio/executor.hpp	/^  typedef void (*unspecified_bool_type)(unspecified_bool_type_t);$/;"	t	class:asio::executor	typeref:typename:void (*)(unspecified_bool_type_t)
unspecified_bool_type_t	asio/include/asio/error_code.hpp	/^  struct unspecified_bool_type_t$/;"	s	class:asio::error_code
unspecified_bool_type_t	asio/include/asio/executor.hpp	/^  struct unspecified_bool_type_t {};$/;"	s	class:asio::executor
unspecified_system_error	asio/include/asio/ssl/error.hpp	/^  unspecified_system_error,$/;"	e	enum:asio::ssl::error::stream_errors
unused_	asio/include/asio/detail/null_static_mutex.hpp	/^  int unused_;$/;"	m	struct:asio::detail::null_static_mutex	typeref:typename:int
unwritten_count_	asio/src/tests/performance/client.cpp	/^  int unwritten_count_;$/;"	m	class:session	typeref:typename:int	file:
up_heap	asio/include/asio/detail/timer_queue.hpp	/^  void up_heap(std::size_t index)$/;"	f	class:asio::detail::timer_queue	typeref:typename:void
update_asio_version_hpp	asio/release.pl	/^sub update_asio_version_hpp$/;"	s
update_boost_asio_version_hpp	asio/release.pl	/^sub update_boost_asio_version_hpp$/;"	s
update_configure_ac	asio/release.pl	/^sub update_configure_ac$/;"	s
update_readme	asio/release.pl	/^sub update_readme$/;"	s
upper	asio/src/examples/cpp11/executors/pipeline.cpp	/^void upper(queue_back<std::string> in, queue_front<std::string> out)$/;"	f	typeref:typename:void
upper	asio/src/examples/cpp14/executors/pipeline.cpp	/^void upper(queue_back<std::string> in, queue_front<std::string> out)$/;"	f	typeref:typename:void
uppercase_filter	asio/src/examples/cpp03/local/connect_pair.cpp	/^  uppercase_filter(asio::io_context& io_context)$/;"	f	class:uppercase_filter	file:
uppercase_filter	asio/src/examples/cpp03/local/connect_pair.cpp	/^class uppercase_filter$/;"	c	file:
uppercase_filter	asio/src/examples/cpp11/local/connect_pair.cpp	/^  uppercase_filter(stream_protocol::socket sock)$/;"	f	class:uppercase_filter	file:
uppercase_filter	asio/src/examples/cpp11/local/connect_pair.cpp	/^class uppercase_filter$/;"	c	file:
uri	asio/src/examples/cpp03/http/server/request.hpp	/^  std::string uri;$/;"	m	struct:http::server::request	typeref:typename:std::string
uri	asio/src/examples/cpp03/http/server/request_parser.hpp	/^    uri,$/;"	e	enum:http::server::request_parser::state
uri	asio/src/examples/cpp03/http/server2/request.hpp	/^  std::string uri;$/;"	m	struct:http::server2::request	typeref:typename:std::string
uri	asio/src/examples/cpp03/http/server2/request_parser.hpp	/^    uri,$/;"	e	enum:http::server2::request_parser::state
uri	asio/src/examples/cpp03/http/server3/request.hpp	/^  std::string uri;$/;"	m	struct:http::server3::request	typeref:typename:std::string
uri	asio/src/examples/cpp03/http/server3/request_parser.hpp	/^    uri,$/;"	e	enum:http::server3::request_parser::state
uri	asio/src/examples/cpp03/http/server4/request.hpp	/^  std::string uri;$/;"	m	struct:http::server4::request	typeref:typename:std::string
uri	asio/src/examples/cpp11/http/server/request.hpp	/^  std::string uri;$/;"	m	struct:http::server::request	typeref:typename:std::string
uri	asio/src/examples/cpp11/http/server/request_parser.hpp	/^    uri,$/;"	e	enum:http::server::request_parser::state
url_decode	asio/src/examples/cpp03/http/server/request_handler.cpp	/^bool request_handler::url_decode(const std::string& in, std::string& out)$/;"	f	class:http::server::request_handler	typeref:typename:bool
url_decode	asio/src/examples/cpp03/http/server2/request_handler.cpp	/^bool request_handler::url_decode(const std::string& in, std::string& out)$/;"	f	class:http::server2::request_handler	typeref:typename:bool
url_decode	asio/src/examples/cpp03/http/server3/request_handler.cpp	/^bool request_handler::url_decode(const std::string& in, std::string& out)$/;"	f	class:http::server3::request_handler	typeref:typename:bool
url_decode	asio/src/examples/cpp03/http/server4/file_handler.cpp	/^bool file_handler::url_decode(const std::string& in, std::string& out)$/;"	f	class:http::server4::file_handler	typeref:typename:bool
url_decode	asio/src/examples/cpp11/http/server/request_handler.cpp	/^bool request_handler::url_decode(const std::string& in, std::string& out)$/;"	f	class:http::server::request_handler	typeref:typename:bool
use_awaitable	asio/include/asio/use_awaitable.hpp	/^constexpr use_awaitable_t<> use_awaitable;$/;"	v	namespace:asio	typeref:typename:use_awaitable_t<>
use_awaitable_t	asio/include/asio/use_awaitable.hpp	/^  ASIO_CONSTEXPR use_awaitable_t()$/;"	f	struct:asio::use_awaitable_t	typeref:typename:ASIO_CONSTEXPR
use_awaitable_t	asio/include/asio/use_awaitable.hpp	/^struct use_awaitable_t$/;"	s	namespace:asio
use_count_	asio/src/examples/cpp11/executors/fork_join.cpp	/^  std::size_t use_count_;$/;"	m	class:fork_join_pool	typeref:typename:std::size_t	file:
use_count_	asio/src/examples/cpp14/executors/fork_join.cpp	/^  std::size_t use_count_;$/;"	m	class:fork_join_pool	typeref:typename:std::size_t	file:
use_file	asio/src/examples/cpp03/services/basic_logger.hpp	/^  void use_file(const std::string& file)$/;"	f	class:services::basic_logger	typeref:typename:void
use_file	asio/src/examples/cpp03/services/logger_service.hpp	/^  void use_file(impl_type& \/*impl*\/, const std::string& file)$/;"	f	class:services::logger_service	typeref:typename:void
use_file_impl	asio/src/examples/cpp03/services/logger_service.hpp	/^  void use_file_impl(const std::string& file)$/;"	f	class:services::logger_service	typeref:typename:void
use_future	asio/include/asio/use_future.hpp	/^constexpr use_future_t<> use_future;$/;"	v	namespace:asio	typeref:typename:use_future_t<>
use_future_0_test	asio/src/tests/unit/use_future.cpp	/^void use_future_0_test()$/;"	f	typeref:typename:void
use_future_1_test	asio/src/tests/unit/use_future.cpp	/^void use_future_1_test()$/;"	f	typeref:typename:void
use_future_2_test	asio/src/tests/unit/use_future.cpp	/^void use_future_2_test()$/;"	f	typeref:typename:void
use_future_3_test	asio/src/tests/unit/use_future.cpp	/^void use_future_3_test()$/;"	f	typeref:typename:void
use_future_package_0_test	asio/src/tests/unit/use_future.cpp	/^void use_future_package_0_test()$/;"	f	typeref:typename:void
use_future_package_1_test	asio/src/tests/unit/use_future.cpp	/^void use_future_package_1_test()$/;"	f	typeref:typename:void
use_future_package_2_test	asio/src/tests/unit/use_future.cpp	/^void use_future_package_2_test()$/;"	f	typeref:typename:void
use_future_package_3_test	asio/src/tests/unit/use_future.cpp	/^void use_future_package_3_test()$/;"	f	typeref:typename:void
use_future_t	asio/include/asio/use_future.hpp	/^  ASIO_CONSTEXPR use_future_t()$/;"	f	class:asio::use_future_t	typeref:typename:ASIO_CONSTEXPR
use_future_t	asio/include/asio/use_future.hpp	/^  explicit use_future_t(const Allocator& allocator)$/;"	f	class:asio::use_future_t
use_future_t	asio/include/asio/use_future.hpp	/^class use_future_t$/;"	c	namespace:asio
use_service	asio/include/asio/detail/impl/service_registry.hpp	/^Service& service_registry::use_service()$/;"	f	class:asio::detail::service_registry	typeref:typename:Service &
use_service	asio/include/asio/detail/impl/service_registry.hpp	/^Service& service_registry::use_service(io_context& owner)$/;"	f	class:asio::detail::service_registry	typeref:typename:Service &
use_service	asio/include/asio/impl/execution_context.hpp	/^inline Service& use_service(execution_context& e)$/;"	f	namespace:asio	typeref:typename:Service &
use_service	asio/include/asio/impl/io_context.hpp	/^inline Service& use_service(io_context& ioc)$/;"	f	namespace:asio	typeref:typename:Service &
use_service	asio/include/asio/impl/io_context.hpp	/^inline detail::io_context_impl& use_service<detail::io_context_impl>($/;"	f	namespace:asio	typeref:typename:detail::io_context_impl &
user_id_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  std::string user_id_;$/;"	m	class:socks4::request	typeref:typename:std::string
user_id_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  std::string user_id_;$/;"	m	class:socks4::request	typeref:typename:std::string
user_set_linger	asio/include/asio/detail/socket_ops.hpp	/^  user_set_linger = 8,$/;"	e	enum:asio::detail::socket_ops::__anonc4fdc2e00103
user_set_non_blocking	asio/include/asio/detail/descriptor_ops.hpp	/^  user_set_non_blocking = 1,$/;"	e	enum:asio::detail::descriptor_ops::__anon0a8e43b60103
user_set_non_blocking	asio/include/asio/detail/socket_ops.hpp	/^  user_set_non_blocking = 1,$/;"	e	enum:asio::detail::socket_ops::__anonc4fdc2e00103
uses_executor	asio/include/asio/bind_executor.hpp	/^struct uses_executor<executor_binder<T, Executor>, Executor>$/;"	s	namespace:asio
uses_executor	asio/include/asio/uses_executor.hpp	/^struct uses_executor : false_type {};$/;"	s	namespace:asio
v1	asio/include/asio/detail/chrono_time_traits.hpp	/^struct gcd { enum { value = gcd<v2, v1 % v2>::value }; };$/;"	e	enum:asio::detail::gcd::__anon35986a930103
v4	asio/include/asio/ip/detail/endpoint.hpp	/^    asio::detail::sockaddr_in4_type v4;$/;"	m	union:asio::ip::detail::endpoint::data_union	typeref:typename:asio::detail::sockaddr_in4_type
v4	asio/include/asio/ip/icmp.hpp	/^  static icmp v4() ASIO_NOEXCEPT$/;"	f	class:asio::ip::icmp	typeref:typename:icmp
v4	asio/include/asio/ip/tcp.hpp	/^  static tcp v4() ASIO_NOEXCEPT$/;"	f	class:asio::ip::tcp	typeref:typename:tcp
v4	asio/include/asio/ip/udp.hpp	/^  static udp v4() ASIO_NOEXCEPT$/;"	f	class:asio::ip::udp	typeref:typename:udp
v4_mapped	asio/include/asio/ip/address_v6.hpp	/^enum v4_mapped_t { v4_mapped };$/;"	e	enum:asio::ip::v4_mapped_t
v4_mapped	asio/include/asio/ip/resolver_base.hpp	/^  static const flags v4_mapped = implementation_defined;$/;"	m	class:asio::ip::resolver_base	typeref:typename:const flags
v4_mapped_t	asio/include/asio/ip/address_v6.hpp	/^enum v4_mapped_t { v4_mapped };$/;"	g	namespace:asio::ip
v6	asio/include/asio/ip/detail/endpoint.hpp	/^    asio::detail::sockaddr_in6_type v6;$/;"	m	union:asio::ip::detail::endpoint::data_union	typeref:typename:asio::detail::sockaddr_in6_type
v6	asio/include/asio/ip/icmp.hpp	/^  static icmp v6() ASIO_NOEXCEPT$/;"	f	class:asio::ip::icmp	typeref:typename:icmp
v6	asio/include/asio/ip/tcp.hpp	/^  static tcp v6() ASIO_NOEXCEPT$/;"	f	class:asio::ip::tcp	typeref:typename:tcp
v6	asio/include/asio/ip/udp.hpp	/^  static udp v6() ASIO_NOEXCEPT$/;"	f	class:asio::ip::udp	typeref:typename:udp
v6_only	asio/include/asio/ip/v6_only.hpp	/^typedef implementation_defined v6_only;$/;"	t	namespace:asio::ip	typeref:typename:implementation_defined
valid	asio/include/asio/awaitable.hpp	/^  bool valid() const noexcept$/;"	f	class:asio::awaitable	typeref:typename:bool
valid_const_a	asio/src/tests/unit/buffer.cpp	/^struct valid_const_a$/;"	s	namespace:is_buffer_sequence	file:
valid_const_b	asio/src/tests/unit/buffer.cpp	/^struct valid_const_b$/;"	s	namespace:is_buffer_sequence	file:
valid_mutable_a	asio/src/tests/unit/buffer.cpp	/^struct valid_mutable_a$/;"	s	namespace:is_buffer_sequence	file:
valid_mutable_b	asio/src/tests/unit/buffer.cpp	/^struct valid_mutable_b$/;"	s	namespace:is_buffer_sequence	file:
valid_request_	asio/src/examples/cpp03/http/server4/server.hpp	/^  boost::tribool valid_request_;$/;"	m	class:http::server4::server	typeref:typename:boost::tribool
validate	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static void validate(Iterator begin, Iterator end)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:void
validate	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static void validate(const Buffers& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:void
validate	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static void validate(const asio::const_buffer& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:void
validate	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static void validate(const asio::const_buffers_1& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:void
validate	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static void validate(const asio::mutable_buffer& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:void
validate	asio/include/asio/detail/buffer_sequence_adapter.hpp	/^  static void validate(const asio::mutable_buffers_1& buffer_sequence)$/;"	f	class:asio::detail::buffer_sequence_adapter	typeref:typename:void
value	asio/include/asio/basic_io_object.hpp	/^    static const bool value =$/;"	m	class:asio::detail::service_has_move	typeref:typename:const bool
value	asio/include/asio/connect.hpp	/^    enum { value = (sizeof((has_iterator_helper)((T*)(0))) == 1) };$/;"	e	enum:asio::detail::has_iterator_typedef::__anonfdcf696e0103
value	asio/include/asio/connect.hpp	/^  static const bool value;$/;"	m	struct:asio::is_endpoint_sequence	typeref:typename:const bool
value	asio/include/asio/detail/chrono_time_traits.hpp	/^struct gcd { enum { value = gcd<v2, v1 % v2>::value }; };$/;"	e	enum:asio::detail::gcd::__anon35986a930103
value	asio/include/asio/detail/chrono_time_traits.hpp	/^struct gcd<v1, 0> { enum { value = v1 }; };$/;"	e	enum:asio::detail::gcd::__anon35986a930203
value	asio/include/asio/detail/consuming_buffers.hpp	/^  enum { value = buffer_sequence_adapter_base::max_buffers };$/;"	e	enum:asio::detail::prepared_buffers_max::__anon91b8a3e50303
value	asio/include/asio/detail/non_const_lvalue.hpp	/^      typename decay<T>::type&, typename decay<T>::type>::type value;$/;"	m	struct:asio::detail::non_const_lvalue
value	asio/include/asio/detail/socket_option.hpp	/^  bool value() const$/;"	f	class:asio::detail::socket_option::boolean	typeref:typename:bool
value	asio/include/asio/detail/socket_option.hpp	/^  int value() const$/;"	f	class:asio::detail::socket_option::integer	typeref:typename:int
value	asio/include/asio/error.hpp	/^  static const bool value = true;$/;"	m	struct:std::is_error_code_enum	typeref:typename:const bool
value	asio/include/asio/error_code.hpp	/^  int value() const$/;"	f	class:asio::error_code	typeref:typename:int
value	asio/include/asio/impl/connect.hpp	/^    static const bool value =$/;"	m	struct:asio::detail::is_legacy_connect_condition	typeref:typename:const bool
value	asio/include/asio/impl/serial_port_base.hpp	/^inline serial_port_base::parity::type serial_port_base::parity::value() const$/;"	f	class:asio::serial_port_base::parity	typeref:typename:serial_port_base::parity::type
value	asio/include/asio/impl/serial_port_base.hpp	/^inline unsigned int serial_port_base::baud_rate::value() const$/;"	f	class:asio::serial_port_base::baud_rate	typeref:typename:unsigned int
value	asio/include/asio/impl/serial_port_base.hpp	/^inline unsigned int serial_port_base::character_size::value() const$/;"	f	class:asio::serial_port_base::character_size	typeref:typename:unsigned int
value	asio/include/asio/impl/serial_port_base.hpp	/^serial_port_base::flow_control::value() const$/;"	f	class:asio::serial_port_base::flow_control	typeref:typename:serial_port_base::flow_control::type
value	asio/include/asio/impl/serial_port_base.hpp	/^serial_port_base::stop_bits::value() const$/;"	f	class:asio::serial_port_base::stop_bits	typeref:typename:serial_port_base::stop_bits::type
value	asio/include/asio/ip/detail/socket_option.hpp	/^  bool value() const$/;"	f	class:asio::ip::detail::socket_option::multicast_enable_loopback	typeref:typename:bool
value	asio/include/asio/ip/detail/socket_option.hpp	/^  int value() const$/;"	f	class:asio::ip::detail::socket_option::multicast_hops	typeref:typename:int
value	asio/include/asio/ip/detail/socket_option.hpp	/^  int value() const$/;"	f	class:asio::ip::detail::socket_option::unicast_hops	typeref:typename:int
value	asio/include/asio/is_read_buffered.hpp	/^  static const bool value;$/;"	m	class:asio::is_read_buffered	typeref:typename:const bool
value	asio/include/asio/is_write_buffered.hpp	/^  static const bool value;$/;"	m	class:asio::is_write_buffered	typeref:typename:const bool
value	asio/include/asio/read_until.hpp	/^    enum { value = (sizeof((has_result_type_helper)((T*)(0))) == 1) };$/;"	e	enum:asio::detail::has_result_type::__anone39dd34b0103
value	asio/include/asio/read_until.hpp	/^  static const bool value;$/;"	m	struct:asio::is_match_condition	typeref:typename:const bool
value	asio/include/asio/ssl/error.hpp	/^  static const bool value = true;$/;"	m	struct:std::is_error_code_enum	typeref:typename:const bool
value	asio/src/examples/cpp03/http/server/header.hpp	/^  std::string value;$/;"	m	struct:http::server::header	typeref:typename:std::string
value	asio/src/examples/cpp03/http/server2/header.hpp	/^  std::string value;$/;"	m	struct:http::server2::header	typeref:typename:std::string
value	asio/src/examples/cpp03/http/server3/header.hpp	/^  std::string value;$/;"	m	struct:http::server3::header	typeref:typename:std::string
value	asio/src/examples/cpp03/http/server4/header.hpp	/^  std::string value;$/;"	m	struct:http::server4::header	typeref:typename:std::string
value	asio/src/examples/cpp11/http/server/header.hpp	/^  std::string value;$/;"	m	struct:http::server::header	typeref:typename:std::string
value	asio/src/tests/unit/read_until.cpp	/^    enum { value = true };$/;"	e	enum:asio::is_match_condition::__anonba4f83e00203	file:
value_	asio/include/asio/coroutine.hpp	/^  int value_;$/;"	m	class:asio::coroutine	typeref:typename:int
value_	asio/include/asio/coroutine.hpp	/^  int& value_;$/;"	m	class:asio::detail::coroutine_ref	typeref:typename:int &
value_	asio/include/asio/detail/call_stack.hpp	/^    Value* value_;$/;"	m	class:asio::detail::call_stack::context	typeref:typename:Value *
value_	asio/include/asio/detail/gcc_sync_fenced_block.hpp	/^  int value_;$/;"	m	class:asio::detail::gcc_sync_fenced_block	typeref:typename:int
value_	asio/include/asio/detail/io_control.hpp	/^  detail::ioctl_arg_type value_;$/;"	m	class:asio::detail::io_control::bytes_readable	typeref:typename:detail::ioctl_arg_type
value_	asio/include/asio/detail/keyword_tss_ptr.hpp	/^  static ASIO_THREAD_KEYWORD T* value_;$/;"	m	class:asio::detail::keyword_tss_ptr	typeref:typename:ASIO_THREAD_KEYWORD T *
value_	asio/include/asio/detail/keyword_tss_ptr.hpp	/^ASIO_THREAD_KEYWORD T* keyword_tss_ptr<T>::value_;$/;"	m	class:asio::detail::keyword_tss_ptr<T>	typeref:typename:ASIO_THREAD_KEYWORD T *
value_	asio/include/asio/detail/null_tss_ptr.hpp	/^  T* value_;$/;"	m	class:asio::detail::null_tss_ptr	typeref:typename:T *
value_	asio/include/asio/detail/socket_option.hpp	/^  detail::linger_type value_;$/;"	m	class:asio::detail::socket_option::linger	typeref:typename:detail::linger_type
value_	asio/include/asio/detail/socket_option.hpp	/^  int value_;$/;"	m	class:asio::detail::socket_option::boolean	typeref:typename:int
value_	asio/include/asio/detail/socket_option.hpp	/^  int value_;$/;"	m	class:asio::detail::socket_option::integer	typeref:typename:int
value_	asio/include/asio/error_code.hpp	/^  int value_;$/;"	m	class:asio::error_code	typeref:typename:int
value_	asio/include/asio/impl/spawn.hpp	/^    T* value_;$/;"	m	class:asio::detail::coro_handler	typeref:typename:T *
value_	asio/include/asio/impl/spawn.hpp	/^    return_type value_;$/;"	m	class:asio::detail::coro_async_result	typeref:typename:return_type
value_	asio/include/asio/ip/detail/socket_option.hpp	/^  int value_;$/;"	m	class:asio::ip::detail::socket_option::unicast_hops	typeref:typename:int
value_	asio/include/asio/serial_port_base.hpp	/^    type value_;$/;"	m	class:asio::serial_port_base::flow_control	typeref:typename:type
value_	asio/include/asio/serial_port_base.hpp	/^    type value_;$/;"	m	class:asio::serial_port_base::parity	typeref:typename:type
value_	asio/include/asio/serial_port_base.hpp	/^    type value_;$/;"	m	class:asio::serial_port_base::stop_bits	typeref:typename:type
value_	asio/include/asio/serial_port_base.hpp	/^    unsigned int value_;$/;"	m	class:asio::serial_port_base::baud_rate	typeref:typename:unsigned int
value_	asio/include/asio/serial_port_base.hpp	/^    unsigned int value_;$/;"	m	class:asio::serial_port_base::character_size	typeref:typename:unsigned int
value_type	asio/include/asio/awaitable.hpp	/^  typedef T value_type;$/;"	t	class:asio::awaitable	typeref:typename:T
value_type	asio/include/asio/buffer.hpp	/^  typedef const_buffer value_type;$/;"	t	class:asio::const_buffers_1	typeref:typename:const_buffer
value_type	asio/include/asio/buffer.hpp	/^  typedef mutable_buffer value_type;$/;"	t	class:asio::mutable_buffers_1	typeref:typename:mutable_buffer
value_type	asio/include/asio/buffer.hpp	/^  typedef mutable_buffer value_type;$/;"	t	class:asio::null_buffers	typeref:typename:mutable_buffer
value_type	asio/include/asio/buffers_iterator.hpp	/^  typedef ByteType value_type;$/;"	t	class:asio::buffers_iterator	typeref:typename:ByteType
value_type	asio/include/asio/detail/consuming_buffers.hpp	/^  typedef Buffer value_type;$/;"	t	struct:prepared_buffers	typeref:typename:Buffer
value_type	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  typedef T value_type;$/;"	t	class:asio::detail::hook_allocator	typeref:typename:T
value_type	asio/include/asio/detail/handler_alloc_helpers.hpp	/^  typedef void value_type;$/;"	t	class:asio::detail::hook_allocator	typeref:typename:void
value_type	asio/include/asio/detail/hash_map.hpp	/^  typedef std::pair<K, V> value_type;$/;"	t	class:asio::detail::hash_map	typeref:typename:std::pair<K,V>
value_type	asio/include/asio/detail/reactor_op_queue.hpp	/^  typedef typename hash_map<key_type, mapped_type>::value_type value_type;$/;"	t	class:asio::detail::reactor_op_queue	typeref:typename:hash_map<key_type,mapped_type>::value_type
value_type	asio/include/asio/detail/recycling_allocator.hpp	/^  typedef T value_type;$/;"	t	class:asio::detail::recycling_allocator	typeref:typename:T
value_type	asio/include/asio/detail/recycling_allocator.hpp	/^  typedef void value_type;$/;"	t	class:asio::detail::recycling_allocator	typeref:typename:void
value_type	asio/include/asio/ip/address_v4_iterator.hpp	/^  typedef address_v4 value_type;$/;"	t	class:asio::ip::basic_address_iterator	typeref:typename:address_v4
value_type	asio/include/asio/ip/address_v6_iterator.hpp	/^  typedef address_v6 value_type;$/;"	t	class:asio::ip::basic_address_iterator	typeref:typename:address_v6
value_type	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  typedef basic_resolver_entry<InternetProtocol> value_type;$/;"	t	class:asio::ip::basic_resolver_iterator	typeref:typename:basic_resolver_entry<InternetProtocol>
value_type	asio/include/asio/ip/basic_resolver_results.hpp	/^  typedef basic_resolver_entry<protocol_type> value_type;$/;"	t	class:asio::ip::basic_resolver_results	typeref:typename:basic_resolver_entry<protocol_type>
value_type	asio/src/examples/cpp03/allocation/server.cpp	/^  typedef T value_type;$/;"	t	class:handler_allocator	typeref:typename:T	file:
value_type	asio/src/examples/cpp03/buffers/reference_counted.cpp	/^  typedef asio::const_buffer value_type;$/;"	t	class:shared_const_buffer	typeref:typename:asio::const_buffer	file:
value_type	asio/src/examples/cpp11/allocation/server.cpp	/^  using value_type = T;$/;"	t	class:handler_allocator	typeref:typename:T	file:
value_type	asio/src/examples/cpp11/buffers/reference_counted.cpp	/^  typedef asio::const_buffer value_type;$/;"	t	class:shared_const_buffer	typeref:typename:asio::const_buffer	file:
value_type	asio/src/examples/cpp11/executors/pipeline.cpp	/^  typedef T value_type;$/;"	t	class:queue_back	typeref:typename:T	file:
value_type	asio/src/examples/cpp11/executors/pipeline.cpp	/^  typedef T value_type;$/;"	t	class:queue_front	typeref:typename:T	file:
value_type	asio/src/examples/cpp14/executors/pipeline.cpp	/^  typedef T value_type;$/;"	t	class:queue_back	typeref:typename:T	file:
value_type	asio/src/examples/cpp14/executors/pipeline.cpp	/^  typedef T value_type;$/;"	t	class:queue_front	typeref:typename:T	file:
value_type	asio/src/tests/unit/buffer.cpp	/^  typedef const_buffer value_type;$/;"	t	struct:is_buffer_sequence::invalid_const_b	typeref:typename:const_buffer	file:
value_type	asio/src/tests/unit/buffer.cpp	/^  typedef const_buffer value_type;$/;"	t	struct:is_buffer_sequence::invalid_const_c	typeref:typename:const_buffer	file:
value_type	asio/src/tests/unit/buffer.cpp	/^  typedef const_buffer value_type;$/;"	t	struct:is_buffer_sequence::valid_const_a	typeref:typename:const_buffer	file:
value_type	asio/src/tests/unit/buffer.cpp	/^  typedef int value_type;$/;"	t	struct:is_buffer_sequence::invalid_const_a	typeref:typename:int	file:
value_type	asio/src/tests/unit/buffer.cpp	/^  typedef int value_type;$/;"	t	struct:is_buffer_sequence::invalid_mutable_a	typeref:typename:int	file:
value_type	asio/src/tests/unit/buffer.cpp	/^  typedef mutable_buffer value_type;$/;"	t	struct:is_buffer_sequence::invalid_mutable_b	typeref:typename:mutable_buffer	file:
value_type	asio/src/tests/unit/buffer.cpp	/^  typedef mutable_buffer value_type;$/;"	t	struct:is_buffer_sequence::invalid_mutable_c	typeref:typename:mutable_buffer	file:
value_type	asio/src/tests/unit/buffer.cpp	/^  typedef mutable_buffer value_type;$/;"	t	struct:is_buffer_sequence::valid_mutable_a	typeref:typename:mutable_buffer	file:
values_	asio/include/asio/detail/hash_map.hpp	/^  std::list<value_type> values_;$/;"	m	class:asio::detail::hash_map	typeref:typename:std::list<value_type>
values_	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  values_ptr_type values_;$/;"	m	class:asio::ip::basic_resolver_iterator	typeref:typename:values_ptr_type
values_erase	asio/include/asio/detail/hash_map.hpp	/^  void values_erase(iterator it)$/;"	f	class:asio::detail::hash_map	typeref:typename:void
values_insert	asio/include/asio/detail/hash_map.hpp	/^  iterator values_insert(iterator it, const value_type& v)$/;"	f	class:asio::detail::hash_map	typeref:typename:iterator
values_ptr_type	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  typedef asio::detail::shared_ptr<values_type> values_ptr_type;$/;"	t	class:asio::ip::basic_resolver_iterator	typeref:typename:asio::detail::shared_ptr<values_type>
values_type	asio/include/asio/ip/basic_resolver_iterator.hpp	/^  typedef std::vector<basic_resolver_entry<InternetProtocol> > values_type;$/;"	t	class:asio::ip::basic_resolver_iterator	typeref:typename:std::vector<basic_resolver_entry<InternetProtocol>>
values_type	asio/include/asio/ip/basic_resolver_results.hpp	/^  typedef std::vector<basic_resolver_entry<InternetProtocol> > values_type;$/;"	t	class:asio::ip::basic_resolver_results	typeref:typename:std::vector<basic_resolver_entry<InternetProtocol>>
variable	asio/src/doc/reference.xsl	/^<xsl:template name="variable">$/;"	n
vector_	asio/include/asio/buffer.hpp	/^  std::vector<Elem, Allocator>& vector_;$/;"	m	class:asio::dynamic_vector_buffer	typeref:typename:std::vector<Elem,Allocator> &
verify_callback	asio/include/asio/ssl/detail/verify_callback.hpp	/^  explicit verify_callback(VerifyCallback callback)$/;"	f	class:asio::ssl::detail::verify_callback
verify_callback	asio/include/asio/ssl/detail/verify_callback.hpp	/^class verify_callback : public verify_callback_base$/;"	c	namespace:asio::ssl::detail
verify_callback	asio/src/tests/unit/ssl/stream.cpp	/^bool verify_callback(bool, asio::ssl::verify_context&)$/;"	f	namespace:ssl_stream_compile	typeref:typename:bool
verify_callback_base	asio/include/asio/ssl/detail/verify_callback.hpp	/^class verify_callback_base$/;"	c	namespace:asio::ssl::detail
verify_certificate	asio/src/examples/cpp03/ssl/client.cpp	/^  bool verify_certificate(bool preverified,$/;"	f	class:client	typeref:typename:bool	file:
verify_certificate	asio/src/examples/cpp11/ssl/client.cpp	/^  bool verify_certificate(bool preverified,$/;"	f	class:client	typeref:typename:bool	file:
verify_client_once	asio/include/asio/ssl/verify_mode.hpp	/^const int verify_client_once = SSL_VERIFY_CLIENT_ONCE;$/;"	v	namespace:asio::ssl	typeref:typename:const int
verify_client_once	asio/include/asio/ssl/verify_mode.hpp	/^const int verify_client_once = implementation_defined;$/;"	v	namespace:asio::ssl	typeref:typename:const int
verify_context	asio/include/asio/ssl/verify_context.hpp	/^  explicit verify_context(native_handle_type handle)$/;"	f	class:asio::ssl::verify_context
verify_context	asio/include/asio/ssl/verify_context.hpp	/^class verify_context$/;"	c	namespace:asio::ssl
verify_fail_if_no_peer_cert	asio/include/asio/ssl/verify_mode.hpp	/^const int verify_fail_if_no_peer_cert = SSL_VERIFY_FAIL_IF_NO_PEER_CERT;$/;"	v	namespace:asio::ssl	typeref:typename:const int
verify_fail_if_no_peer_cert	asio/include/asio/ssl/verify_mode.hpp	/^const int verify_fail_if_no_peer_cert = implementation_defined;$/;"	v	namespace:asio::ssl	typeref:typename:const int
verify_mode	asio/include/asio/ssl/context_base.hpp	/^  typedef int verify_mode;$/;"	t	class:asio::ssl::context_base	typeref:typename:int
verify_mode	asio/include/asio/ssl/verify_mode.hpp	/^typedef int verify_mode;$/;"	t	namespace:asio::ssl	typeref:typename:int
verify_none	asio/include/asio/ssl/verify_mode.hpp	/^const int verify_none = SSL_VERIFY_NONE;$/;"	v	namespace:asio::ssl	typeref:typename:const int
verify_none	asio/include/asio/ssl/verify_mode.hpp	/^const int verify_none = implementation_defined;$/;"	v	namespace:asio::ssl	typeref:typename:const int
verify_peer	asio/include/asio/ssl/verify_mode.hpp	/^const int verify_peer = SSL_VERIFY_PEER;$/;"	v	namespace:asio::ssl	typeref:typename:const int
verify_peer	asio/include/asio/ssl/verify_mode.hpp	/^const int verify_peer = implementation_defined;$/;"	v	namespace:asio::ssl	typeref:typename:const int
version	asio/src/examples/cpp03/icmp/ipv4_header.hpp	/^  unsigned char version() const { return (rep_[0] >> 4) & 0xF; }$/;"	f	class:ipv4_header	typeref:typename:unsigned char
version	asio/src/examples/cpp03/socks4/socks4.hpp	/^const unsigned char version = 0x04;$/;"	v	namespace:socks4	typeref:typename:const unsigned char
version	asio/src/examples/cpp11/socks4/socks4.hpp	/^const unsigned char version = 0x04;$/;"	v	namespace:socks4	typeref:typename:const unsigned char
version_	asio/src/examples/cpp03/socks4/socks4.hpp	/^  unsigned char version_;$/;"	m	class:socks4::request	typeref:typename:unsigned char
version_	asio/src/examples/cpp11/socks4/socks4.hpp	/^  unsigned char version_;$/;"	m	class:socks4::request	typeref:typename:unsigned char
wait	asio/include/asio/basic_deadline_timer.hpp	/^  void wait()$/;"	f	class:asio::basic_deadline_timer	typeref:typename:void
wait	asio/include/asio/basic_deadline_timer.hpp	/^  void wait(asio::error_code& ec)$/;"	f	class:asio::basic_deadline_timer	typeref:typename:void
wait	asio/include/asio/basic_socket.hpp	/^  ASIO_SYNC_OP_VOID wait(wait_type w, asio::error_code& ec)$/;"	f	class:asio::basic_socket	typeref:typename:ASIO_SYNC_OP_VOID
wait	asio/include/asio/basic_socket.hpp	/^  void wait(wait_type w)$/;"	f	class:asio::basic_socket	typeref:typename:void
wait	asio/include/asio/basic_socket_acceptor.hpp	/^  ASIO_SYNC_OP_VOID wait(wait_type w, asio::error_code& ec)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:ASIO_SYNC_OP_VOID
wait	asio/include/asio/basic_socket_acceptor.hpp	/^  void wait(wait_type w)$/;"	f	class:asio::basic_socket_acceptor	typeref:typename:void
wait	asio/include/asio/basic_waitable_timer.hpp	/^  void wait()$/;"	f	class:asio::basic_waitable_timer	typeref:typename:void
wait	asio/include/asio/basic_waitable_timer.hpp	/^  void wait(asio::error_code& ec)$/;"	f	class:asio::basic_waitable_timer	typeref:typename:void
wait	asio/include/asio/detail/conditionally_enabled_event.hpp	/^  void wait(conditionally_enabled_mutex::scoped_lock& lock)$/;"	f	class:asio::detail::conditionally_enabled_event	typeref:typename:void
wait	asio/include/asio/detail/deadline_timer_service.hpp	/^  void wait(implementation_type& impl, asio::error_code& ec)$/;"	f	class:asio::detail::deadline_timer_service	typeref:typename:void
wait	asio/include/asio/detail/null_event.hpp	/^  void wait(Lock&)$/;"	f	class:asio::detail::null_event	typeref:typename:void
wait	asio/include/asio/detail/posix_event.hpp	/^  void wait(Lock& lock)$/;"	f	class:asio::detail::posix_event	typeref:typename:void
wait	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  asio::error_code wait(implementation_type& impl,$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:asio::error_code
wait	asio/include/asio/detail/reactive_socket_service_base.hpp	/^  asio::error_code wait(base_implementation_type& impl,$/;"	f	class:asio::detail::reactive_socket_service_base	typeref:typename:asio::error_code
wait	asio/include/asio/detail/std_event.hpp	/^  void wait(Lock& lock)$/;"	f	class:asio::detail::std_event	typeref:typename:void
wait	asio/include/asio/detail/win_event.hpp	/^  void wait(Lock& lock)$/;"	f	class:asio::detail::win_event	typeref:typename:void
wait	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^  asio::error_code wait(base_implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_socket_service_base	typeref:typename:asio::error_code
wait	asio/include/asio/posix/basic_descriptor.hpp	/^  ASIO_SYNC_OP_VOID wait(wait_type w, asio::error_code& ec)$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:ASIO_SYNC_OP_VOID
wait	asio/include/asio/posix/basic_descriptor.hpp	/^  void wait(wait_type w)$/;"	f	class:asio::posix::basic_descriptor	typeref:typename:void
wait	asio/include/asio/windows/basic_object_handle.hpp	/^  void wait()$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:void
wait	asio/include/asio/windows/basic_object_handle.hpp	/^  void wait(asio::error_code& ec)$/;"	f	class:asio::windows::basic_object_handle	typeref:typename:void
wait	asio/src/examples/cpp11/executors/actor.cpp	/^  Message wait()$/;"	f	class:receiver	typeref:typename:Message	file:
wait	asio/src/examples/cpp14/executors/actor.cpp	/^  Message wait()$/;"	f	class:receiver	typeref:typename:Message	file:
wait_duration_msec	asio/include/asio/detail/timer_queue.hpp	/^  virtual long wait_duration_msec(long max_duration) const$/;"	f	class:asio::detail::timer_queue	typeref:typename:long
wait_duration_usec	asio/include/asio/detail/timer_queue.hpp	/^  virtual long wait_duration_usec(long max_duration) const$/;"	f	class:asio::detail::timer_queue	typeref:typename:long
wait_error	asio/include/asio/posix/descriptor_base.hpp	/^    wait_error$/;"	e	enum:asio::posix::descriptor_base::wait_type
wait_error	asio/include/asio/socket_base.hpp	/^    wait_error$/;"	e	enum:asio::socket_base::wait_type
wait_for_signal	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^  void wait_for_signal()$/;"	f	class:server	typeref:typename:void	file:
wait_for_usec	asio/include/asio/detail/conditionally_enabled_event.hpp	/^  bool wait_for_usec($/;"	f	class:asio::detail::conditionally_enabled_event	typeref:typename:bool
wait_for_usec	asio/include/asio/detail/null_event.hpp	/^  bool wait_for_usec(Lock&, long usec)$/;"	f	class:asio::detail::null_event	typeref:typename:bool
wait_for_usec	asio/include/asio/detail/posix_event.hpp	/^  bool wait_for_usec(Lock& lock, long usec)$/;"	f	class:asio::detail::posix_event	typeref:typename:bool
wait_for_usec	asio/include/asio/detail/std_event.hpp	/^  bool wait_for_usec(Lock& lock, long usec)$/;"	f	class:asio::detail::std_event	typeref:typename:bool
wait_for_usec	asio/include/asio/detail/win_event.hpp	/^  bool wait_for_usec(Lock& lock, long usec)$/;"	f	class:asio::detail::win_event	typeref:typename:bool
wait_handle_	asio/include/asio/detail/win_object_handle_service.hpp	/^    HANDLE wait_handle_;$/;"	m	class:asio::detail::win_object_handle_service::implementation_type	typeref:typename:HANDLE
wait_handler	asio/include/asio/detail/wait_handler.hpp	/^  wait_handler(Handler& h, const IoExecutor& ex)$/;"	f	class:asio::detail::wait_handler
wait_handler	asio/include/asio/detail/wait_handler.hpp	/^class wait_handler : public wait_op$/;"	c	namespace:asio::detail
wait_handler	asio/src/tests/unit/ip/tcp.cpp	/^  wait_handler() {}$/;"	f	struct:ip_tcp_acceptor_compile::wait_handler	file:
wait_handler	asio/src/tests/unit/ip/tcp.cpp	/^  wait_handler() {}$/;"	f	struct:ip_tcp_socket_compile::wait_handler	file:
wait_handler	asio/src/tests/unit/ip/tcp.cpp	/^  wait_handler(wait_handler&&) {}$/;"	f	struct:ip_tcp_acceptor_compile::wait_handler	file:
wait_handler	asio/src/tests/unit/ip/tcp.cpp	/^  wait_handler(wait_handler&&) {}$/;"	f	struct:ip_tcp_socket_compile::wait_handler	file:
wait_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct wait_handler$/;"	s	namespace:ip_tcp_acceptor_compile	file:
wait_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct wait_handler$/;"	s	namespace:ip_tcp_socket_compile	file:
wait_handler	asio/src/tests/unit/ip/udp.cpp	/^  wait_handler() {}$/;"	f	struct:ip_udp_socket_compile::wait_handler	file:
wait_handler	asio/src/tests/unit/ip/udp.cpp	/^  wait_handler(wait_handler&&) {}$/;"	f	struct:ip_udp_socket_compile::wait_handler	file:
wait_handler	asio/src/tests/unit/ip/udp.cpp	/^struct wait_handler$/;"	s	namespace:ip_udp_socket_compile	file:
wait_handler	asio/src/tests/unit/posix/stream_descriptor.cpp	/^void wait_handler(const asio::error_code&)$/;"	f	namespace:posix_stream_descriptor_compile	typeref:typename:void
wait_handler	asio/src/tests/unit/windows/object_handle.cpp	/^void wait_handler(const asio::error_code&)$/;"	f	namespace:windows_object_handle_compile	typeref:typename:void
wait_op	asio/include/asio/detail/wait_op.hpp	/^  wait_op(func_type func)$/;"	f	class:asio::detail::wait_op
wait_op	asio/include/asio/detail/wait_op.hpp	/^class wait_op$/;"	c	namespace:asio::detail
wait_read	asio/include/asio/posix/descriptor_base.hpp	/^    wait_read,$/;"	e	enum:asio::posix::descriptor_base::wait_type
wait_read	asio/include/asio/socket_base.hpp	/^    wait_read,$/;"	e	enum:asio::socket_base::wait_type
wait_traits	asio/include/asio/wait_traits.hpp	/^struct wait_traits$/;"	s	namespace:asio
wait_type	asio/include/asio/posix/descriptor_base.hpp	/^  enum wait_type$/;"	g	class:asio::posix::descriptor_base
wait_type	asio/include/asio/socket_base.hpp	/^  enum wait_type$/;"	g	class:asio::socket_base
wait_write	asio/include/asio/posix/descriptor_base.hpp	/^    wait_write,$/;"	e	enum:asio::posix::descriptor_base::wait_type
wait_write	asio/include/asio/socket_base.hpp	/^    wait_write,$/;"	e	enum:asio::socket_base::wait_type
waitable_timer_	asio/include/asio/detail/win_iocp_io_context.hpp	/^  auto_handle waitable_timer_;$/;"	m	class:asio::detail::win_iocp_io_context	typeref:typename:auto_handle
waiter	asio/include/asio/detail/std_event.hpp	/^    explicit waiter(std::size_t& state)$/;"	f	class:asio::detail::std_event::waiter
waiter	asio/include/asio/detail/std_event.hpp	/^  class waiter$/;"	c	class:asio::detail::std_event
waiting	asio/src/examples/cpp11/operations/composed_6.cpp	/^      enum { starting, waiting, writing } state_;$/;"	e	enum:async_write_message_initiation::operator ()::intermediate_completion_handler::__anonf893724c0103	file:
waiting	asio/src/examples/cpp11/operations/composed_7.cpp	/^  enum { starting, waiting, writing } state_;$/;"	e	enum:async_write_messages_implementation::__anonf8a58acd0103	file:
waiting	asio/src/examples/cpp14/operations/composed_6.cpp	/^      enum { starting, waiting, writing } state_;$/;"	e	enum:async_write_messages::__anon32feb80f0102::intermediate_completion_handler::__anon32feb80f0203	file:
waiting	asio/src/examples/cpp14/operations/composed_7.cpp	/^  enum { starting, waiting, writing };$/;"	e	enum:async_write_messages::__anon3310d0900103	file:
waiting_queue_	asio/include/asio/detail/strand_executor_service.hpp	/^    op_queue<scheduler_operation> waiting_queue_;$/;"	m	class:asio::detail::strand_executor_service::strand_impl	typeref:typename:op_queue<scheduler_operation>
waiting_queue_	asio/include/asio/detail/strand_service.hpp	/^    op_queue<operation> waiting_queue_;$/;"	m	class:asio::detail::strand_service::strand_impl	typeref:typename:op_queue<operation>
wake_for_dispatch	asio/include/asio/detail/win_iocp_io_context.hpp	/^    wake_for_dispatch = 1,$/;"	e	enum:asio::detail::win_iocp_io_context::__anon22c6e4590103
wakeup_event_	asio/include/asio/detail/scheduler.hpp	/^  event wakeup_event_;$/;"	m	class:asio::detail::scheduler	typeref:typename:event
want	asio/include/asio/ssl/detail/engine.hpp	/^  enum want$/;"	g	class:asio::ssl::detail::engine
want_	asio/include/asio/ssl/detail/io.hpp	/^  engine::want want_;$/;"	m	class:asio::ssl::detail::io_op	typeref:typename:engine::want
want_input_and_retry	asio/include/asio/ssl/detail/engine.hpp	/^    want_input_and_retry = -2,$/;"	e	enum:asio::ssl::detail::engine::want
want_nothing	asio/include/asio/ssl/detail/engine.hpp	/^    want_nothing = 0,$/;"	e	enum:asio::ssl::detail::engine::want
want_output	asio/include/asio/ssl/detail/engine.hpp	/^    want_output = 1$/;"	e	enum:asio::ssl::detail::engine::want
want_output_and_retry	asio/include/asio/ssl/detail/engine.hpp	/^    want_output_and_retry = -1,$/;"	e	enum:asio::ssl::detail::engine::want
want_read	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  bool want_read() const$/;"	f	class:third_party_lib::session	typeref:typename:bool	file:
want_read	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  bool want_read() const$/;"	f	class:third_party_lib::session	typeref:typename:bool	file:
want_write	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  bool want_write() const$/;"	f	class:third_party_lib::session	typeref:typename:bool	file:
want_write	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  bool want_write() const$/;"	f	class:third_party_lib::session	typeref:typename:bool	file:
weak_cancel_token_type	asio/include/asio/detail/socket_ops.hpp	/^typedef weak_ptr<void> weak_cancel_token_type;$/;"	t	namespace:asio::detail::socket_ops	typeref:typename:weak_ptr<void>
what	asio/include/asio/ip/bad_address_cast.hpp	/^  virtual const char* what() const ASIO_NOEXCEPT_OR_NOTHROW$/;"	f	class:asio::ip::bad_address_cast	typeref:typename:const char *
win_event	asio/include/asio/detail/win_event.hpp	/^class win_event$/;"	c	namespace:asio::detail
win_fd_set	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  struct win_fd_set$/;"	s	class:asio::detail::win_fd_set_adapter
win_fd_set_adapter	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  win_fd_set_adapter()$/;"	f	class:asio::detail::win_fd_set_adapter
win_fd_set_adapter	asio/include/asio/detail/win_fd_set_adapter.hpp	/^class win_fd_set_adapter : noncopyable$/;"	c	namespace:asio::detail
win_fenced_block	asio/include/asio/detail/win_fenced_block.hpp	/^  explicit win_fenced_block(full_t)$/;"	f	class:asio::detail::win_fenced_block
win_fenced_block	asio/include/asio/detail/win_fenced_block.hpp	/^  explicit win_fenced_block(half_t)$/;"	f	class:asio::detail::win_fenced_block
win_fenced_block	asio/include/asio/detail/win_fenced_block.hpp	/^class win_fenced_block$/;"	c	namespace:asio::detail
win_global	asio/include/asio/detail/win_global.hpp	/^T& win_global()$/;"	f	namespace:asio::detail	typeref:typename:T &
win_global_impl	asio/include/asio/detail/win_global.hpp	/^struct win_global_impl$/;"	s	namespace:asio::detail
win_iocp_handle_read_op	asio/include/asio/detail/win_iocp_handle_read_op.hpp	/^  win_iocp_handle_read_op(const MutableBufferSequence& buffers,$/;"	f	class:asio::detail::win_iocp_handle_read_op
win_iocp_handle_read_op	asio/include/asio/detail/win_iocp_handle_read_op.hpp	/^class win_iocp_handle_read_op : public operation$/;"	c	namespace:asio::detail
win_iocp_handle_service	asio/include/asio/detail/win_iocp_handle_service.hpp	/^class win_iocp_handle_service :$/;"	c	namespace:asio::detail
win_iocp_handle_write_op	asio/include/asio/detail/win_iocp_handle_write_op.hpp	/^  win_iocp_handle_write_op(const ConstBufferSequence& buffers,$/;"	f	class:asio::detail::win_iocp_handle_write_op
win_iocp_handle_write_op	asio/include/asio/detail/win_iocp_handle_write_op.hpp	/^class win_iocp_handle_write_op : public operation$/;"	c	namespace:asio::detail
win_iocp_io_context	asio/include/asio/detail/win_iocp_io_context.hpp	/^class win_iocp_io_context$/;"	c	namespace:asio::detail
win_iocp_null_buffers_op	asio/include/asio/detail/win_iocp_null_buffers_op.hpp	/^  win_iocp_null_buffers_op(socket_ops::weak_cancel_token_type cancel_token,$/;"	f	class:asio::detail::win_iocp_null_buffers_op
win_iocp_null_buffers_op	asio/include/asio/detail/win_iocp_null_buffers_op.hpp	/^class win_iocp_null_buffers_op : public reactor_op$/;"	c	namespace:asio::detail
win_iocp_operation	asio/include/asio/detail/win_iocp_operation.hpp	/^  win_iocp_operation(func_type func)$/;"	f	class:asio::detail::win_iocp_operation
win_iocp_operation	asio/include/asio/detail/win_iocp_operation.hpp	/^class win_iocp_operation$/;"	c	namespace:asio::detail
win_iocp_overlapped_op	asio/include/asio/detail/win_iocp_overlapped_op.hpp	/^  win_iocp_overlapped_op(Handler& handler, const IoExecutor& io_ex)$/;"	f	class:asio::detail::win_iocp_overlapped_op
win_iocp_overlapped_op	asio/include/asio/detail/win_iocp_overlapped_op.hpp	/^class win_iocp_overlapped_op : public operation$/;"	c	namespace:asio::detail
win_iocp_overlapped_ptr	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  explicit win_iocp_overlapped_ptr(const Executor& ex,$/;"	f	class:asio::detail::win_iocp_overlapped_ptr
win_iocp_overlapped_ptr	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  win_iocp_overlapped_ptr()$/;"	f	class:asio::detail::win_iocp_overlapped_ptr
win_iocp_overlapped_ptr	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^class win_iocp_overlapped_ptr$/;"	c	namespace:asio::detail
win_iocp_serial_port_service	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^class win_iocp_serial_port_service :$/;"	c	namespace:asio::detail
win_iocp_socket_accept_op	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  win_iocp_socket_accept_op(win_iocp_socket_service_base& socket_service,$/;"	f	class:asio::detail::win_iocp_socket_accept_op
win_iocp_socket_accept_op	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^class win_iocp_socket_accept_op : public operation$/;"	c	namespace:asio::detail
win_iocp_socket_connect_op	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^  win_iocp_socket_connect_op(socket_type socket,$/;"	f	class:asio::detail::win_iocp_socket_connect_op
win_iocp_socket_connect_op	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^class win_iocp_socket_connect_op : public win_iocp_socket_connect_op_base$/;"	c	namespace:asio::detail
win_iocp_socket_connect_op_base	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^  win_iocp_socket_connect_op_base(socket_type socket, func_type complete_func)$/;"	f	class:asio::detail::win_iocp_socket_connect_op_base
win_iocp_socket_connect_op_base	asio/include/asio/detail/win_iocp_socket_connect_op.hpp	/^class win_iocp_socket_connect_op_base : public reactor_op$/;"	c	namespace:asio::detail
win_iocp_socket_move_accept_op	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^  win_iocp_socket_move_accept_op($/;"	f	class:asio::detail::win_iocp_socket_move_accept_op
win_iocp_socket_move_accept_op	asio/include/asio/detail/win_iocp_socket_accept_op.hpp	/^class win_iocp_socket_move_accept_op : public operation$/;"	c	namespace:asio::detail
win_iocp_socket_recv_op	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^  win_iocp_socket_recv_op(socket_ops::state_type state,$/;"	f	class:asio::detail::win_iocp_socket_recv_op
win_iocp_socket_recv_op	asio/include/asio/detail/win_iocp_socket_recv_op.hpp	/^class win_iocp_socket_recv_op : public operation$/;"	c	namespace:asio::detail
win_iocp_socket_recvfrom_op	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^  win_iocp_socket_recvfrom_op(Endpoint& endpoint,$/;"	f	class:asio::detail::win_iocp_socket_recvfrom_op
win_iocp_socket_recvfrom_op	asio/include/asio/detail/win_iocp_socket_recvfrom_op.hpp	/^class win_iocp_socket_recvfrom_op : public operation$/;"	c	namespace:asio::detail
win_iocp_socket_recvmsg_op	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^  win_iocp_socket_recvmsg_op($/;"	f	class:asio::detail::win_iocp_socket_recvmsg_op
win_iocp_socket_recvmsg_op	asio/include/asio/detail/win_iocp_socket_recvmsg_op.hpp	/^class win_iocp_socket_recvmsg_op : public operation$/;"	c	namespace:asio::detail
win_iocp_socket_send_op	asio/include/asio/detail/win_iocp_socket_send_op.hpp	/^  win_iocp_socket_send_op(socket_ops::weak_cancel_token_type cancel_token,$/;"	f	class:asio::detail::win_iocp_socket_send_op
win_iocp_socket_send_op	asio/include/asio/detail/win_iocp_socket_send_op.hpp	/^class win_iocp_socket_send_op : public operation$/;"	c	namespace:asio::detail
win_iocp_socket_service	asio/include/asio/detail/win_iocp_socket_service.hpp	/^  win_iocp_socket_service(execution_context& context)$/;"	f	class:asio::detail::win_iocp_socket_service
win_iocp_socket_service	asio/include/asio/detail/win_iocp_socket_service.hpp	/^class win_iocp_socket_service :$/;"	c	namespace:asio::detail
win_iocp_socket_service_base	asio/include/asio/detail/win_iocp_socket_service_base.hpp	/^class win_iocp_socket_service_base$/;"	c	namespace:asio::detail
win_iocp_thread_info	asio/include/asio/detail/win_iocp_thread_info.hpp	/^struct win_iocp_thread_info : public thread_info_base$/;"	s	namespace:asio::detail
win_iocp_wait_op	asio/include/asio/detail/win_iocp_wait_op.hpp	/^  win_iocp_wait_op(socket_ops::weak_cancel_token_type cancel_token,$/;"	f	class:asio::detail::win_iocp_wait_op
win_iocp_wait_op	asio/include/asio/detail/win_iocp_wait_op.hpp	/^class win_iocp_wait_op : public reactor_op$/;"	c	namespace:asio::detail
win_mutex	asio/include/asio/detail/win_mutex.hpp	/^class win_mutex$/;"	c	namespace:asio::detail
win_object_handle_service	asio/include/asio/detail/win_object_handle_service.hpp	/^class win_object_handle_service :$/;"	c	namespace:asio::detail
win_static_mutex	asio/include/asio/detail/win_static_mutex.hpp	/^struct win_static_mutex$/;"	s	namespace:asio::detail
win_thread	asio/include/asio/detail/win_thread.hpp	/^  win_thread(Function f, unsigned int stack_size = 0)$/;"	f	class:asio::detail::win_thread
win_thread	asio/include/asio/detail/win_thread.hpp	/^class win_thread$/;"	c	namespace:asio::detail
win_thread_base	asio/include/asio/detail/win_thread.hpp	/^class win_thread_base$/;"	c	namespace:asio::detail
win_tss_ptr	asio/include/asio/detail/win_tss_ptr.hpp	/^  win_tss_ptr()$/;"	f	class:asio::detail::win_tss_ptr
win_tss_ptr	asio/include/asio/detail/win_tss_ptr.hpp	/^class win_tss_ptr$/;"	c	namespace:asio::detail
winapp_thread	asio/include/asio/detail/winapp_thread.hpp	/^  winapp_thread(Function f, unsigned int = 0)$/;"	f	class:asio::detail::winapp_thread
winapp_thread	asio/include/asio/detail/winapp_thread.hpp	/^class winapp_thread$/;"	c	namespace:asio::detail
winapp_thread_function	asio/include/asio/detail/winapp_thread.hpp	/^inline DWORD WINAPI winapp_thread_function(LPVOID arg)$/;"	f	namespace:asio::detail	typeref:typename:DWORD WINAPI
wince_thread	asio/include/asio/detail/wince_thread.hpp	/^  wince_thread(Function f, unsigned int = 0)$/;"	f	class:asio::detail::wince_thread
wince_thread	asio/include/asio/detail/wince_thread.hpp	/^class wince_thread$/;"	c	namespace:asio::detail
wince_thread_function	asio/include/asio/detail/wince_thread.hpp	/^inline DWORD WINAPI wince_thread_function(LPVOID arg)$/;"	f	namespace:asio::detail	typeref:typename:DWORD WINAPI
windows	asio/include/asio/windows/basic_object_handle.hpp	/^namespace windows {$/;"	n	namespace:asio
windows	asio/include/asio/windows/basic_overlapped_handle.hpp	/^namespace windows {$/;"	n	namespace:asio
windows	asio/include/asio/windows/basic_random_access_handle.hpp	/^namespace windows {$/;"	n	namespace:asio
windows	asio/include/asio/windows/basic_stream_handle.hpp	/^namespace windows {$/;"	n	namespace:asio
windows	asio/include/asio/windows/object_handle.hpp	/^namespace windows {$/;"	n	namespace:asio
windows	asio/include/asio/windows/overlapped_handle.hpp	/^namespace windows {$/;"	n	namespace:asio
windows	asio/include/asio/windows/overlapped_ptr.hpp	/^namespace windows {$/;"	n	namespace:asio
windows	asio/include/asio/windows/random_access_handle.hpp	/^namespace windows {$/;"	n	namespace:asio
windows	asio/include/asio/windows/stream_handle.hpp	/^namespace windows {$/;"	n	namespace:asio
windows_object_handle_compile	asio/src/tests/unit/windows/object_handle.cpp	/^namespace windows_object_handle_compile {$/;"	n	file:
windows_overlapped_ptr_compile	asio/src/tests/unit/windows/overlapped_ptr.cpp	/^namespace windows_overlapped_ptr_compile {$/;"	n	file:
windows_random_access_handle_compile	asio/src/tests/unit/windows/random_access_handle.cpp	/^namespace windows_random_access_handle_compile {$/;"	n	file:
windows_stream_handle_compile	asio/src/tests/unit/windows/stream_handle.cpp	/^namespace windows_stream_handle_compile {$/;"	n	file:
windows_transmit_file_SOURCES	asio/src/examples/cpp03/Makefile.am	/^windows_transmit_file_SOURCES = windows\/transmit_file.cpp$/;"	m
winrt_async_manager	asio/include/asio/detail/winrt_async_manager.hpp	/^  winrt_async_manager(execution_context& context)$/;"	f	class:asio::detail::winrt_async_manager
winrt_async_manager	asio/include/asio/detail/winrt_async_manager.hpp	/^class winrt_async_manager$/;"	c	namespace:asio::detail
winrt_async_op	asio/include/asio/detail/winrt_async_op.hpp	/^  winrt_async_op(func_type complete_func)$/;"	f	class:asio::detail::winrt_async_op
winrt_async_op	asio/include/asio/detail/winrt_async_op.hpp	/^class winrt_async_op$/;"	c	namespace:asio::detail
winrt_async_op	asio/include/asio/detail/winrt_async_op.hpp	/^class winrt_async_op<void>$/;"	c	namespace:asio::detail
winrt_resolve_op	asio/include/asio/detail/winrt_resolve_op.hpp	/^  winrt_resolve_op(const query_type& query,$/;"	f	class:asio::detail::winrt_resolve_op
winrt_resolve_op	asio/include/asio/detail/winrt_resolve_op.hpp	/^class winrt_resolve_op :$/;"	c	namespace:asio::detail
winrt_resolver_service	asio/include/asio/detail/winrt_resolver_service.hpp	/^  winrt_resolver_service(execution_context& context)$/;"	f	class:asio::detail::winrt_resolver_service
winrt_resolver_service	asio/include/asio/detail/winrt_resolver_service.hpp	/^class winrt_resolver_service :$/;"	c	namespace:asio::detail
winrt_socket_connect_op	asio/include/asio/detail/winrt_socket_connect_op.hpp	/^  winrt_socket_connect_op(Handler& handler, const IoExecutor& io_ex)$/;"	f	class:asio::detail::winrt_socket_connect_op
winrt_socket_connect_op	asio/include/asio/detail/winrt_socket_connect_op.hpp	/^class winrt_socket_connect_op :$/;"	c	namespace:asio::detail
winrt_socket_recv_op	asio/include/asio/detail/winrt_socket_recv_op.hpp	/^  winrt_socket_recv_op(const MutableBufferSequence& buffers,$/;"	f	class:asio::detail::winrt_socket_recv_op
winrt_socket_recv_op	asio/include/asio/detail/winrt_socket_recv_op.hpp	/^class winrt_socket_recv_op :$/;"	c	namespace:asio::detail
winrt_socket_send_op	asio/include/asio/detail/winrt_socket_send_op.hpp	/^  winrt_socket_send_op(const ConstBufferSequence& buffers,$/;"	f	class:asio::detail::winrt_socket_send_op
winrt_socket_send_op	asio/include/asio/detail/winrt_socket_send_op.hpp	/^class winrt_socket_send_op :$/;"	c	namespace:asio::detail
winrt_ssocket_service	asio/include/asio/detail/winrt_ssocket_service.hpp	/^  winrt_ssocket_service(execution_context& context)$/;"	f	class:asio::detail::winrt_ssocket_service
winrt_ssocket_service	asio/include/asio/detail/winrt_ssocket_service.hpp	/^class winrt_ssocket_service :$/;"	c	namespace:asio::detail
winrt_ssocket_service_base	asio/include/asio/detail/winrt_ssocket_service_base.hpp	/^class winrt_ssocket_service_base$/;"	c	namespace:asio::detail
winrt_timer_scheduler	asio/include/asio/detail/winrt_timer_scheduler.hpp	/^class winrt_timer_scheduler$/;"	c	namespace:asio::detail
winrt_utils	asio/include/asio/detail/winrt_utils.hpp	/^namespace winrt_utils {$/;"	n	namespace:asio::detail
winsock_init	asio/include/asio/detail/winsock_init.hpp	/^  winsock_init(bool allow_throw = true)$/;"	f	class:asio::detail::winsock_init
winsock_init	asio/include/asio/detail/winsock_init.hpp	/^  winsock_init(const winsock_init&)$/;"	f	class:asio::detail::winsock_init
winsock_init	asio/include/asio/detail/winsock_init.hpp	/^class winsock_init : private winsock_init_base$/;"	c	namespace:asio::detail
winsock_init_base	asio/include/asio/detail/winsock_init.hpp	/^class winsock_init_base$/;"	c	namespace:asio::detail
winsock_init_instance	asio/include/asio/detail/winsock_init.hpp	/^static const winsock_init<>& winsock_init_instance = winsock_init<>(false);$/;"	v	namespace:asio::detail	typeref:typename:const winsock_init<> &
withdraw	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^  void withdraw(int amount)$/;"	f	class:bank_account	typeref:typename:void	file:
withdraw	asio/src/examples/cpp11/executors/bank_account_2.cpp	/^  void withdraw(int amount)$/;"	f	class:bank_account	typeref:typename:void	file:
withdraw	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^  void withdraw(int amount)$/;"	f	class:bank_account	typeref:typename:void	file:
withdraw	asio/src/examples/cpp14/executors/bank_account_2.cpp	/^  void withdraw(int amount)$/;"	f	class:bank_account	typeref:typename:void	file:
work	asio/include/asio/impl/io_context.hpp	/^inline io_context::work::work(asio::io_context& io_context)$/;"	f	class:asio::io_context::work
work	asio/include/asio/impl/io_context.hpp	/^inline io_context::work::work(const work& other)$/;"	f	class:asio::io_context::work
work	asio/include/asio/io_context.hpp	/^class io_context::work$/;"	c	class:asio::io_context
work_	asio/include/asio/detail/impl/strand_executor_service.hpp	/^  executor_work_guard<Executor> work_;$/;"	m	class:asio::detail::strand_executor_service::invoker	typeref:typename:executor_work_guard<Executor>
work_	asio/include/asio/detail/work_dispatcher.hpp	/^  executor_work_guard<typename associated_executor<Handler>::type> work_;$/;"	m	class:asio::detail::work_dispatcher	typeref:typename:executor_work_guard<typename associated_executor<Handler>::type>
work_	asio/include/asio/impl/compose.hpp	/^    Work work_;$/;"	m	class:asio::detail::composed_op	typeref:typename:Work
work_	asio/src/examples/cpp03/http/server2/io_context_pool.hpp	/^  std::list<io_context_work> work_;$/;"	m	class:http::server2::io_context_pool	typeref:typename:std::list<io_context_work>
work_	asio/src/examples/cpp03/services/logger_service.hpp	/^      asio::io_context::executor_type> work_;$/;"	m	class:services::logger_service	typeref:typename:asio::executor_work_guard<asio::io_context::executor_type>
work_count_	asio/src/examples/cpp11/executors/fork_join.cpp	/^    std::shared_ptr<std::size_t> work_count_;$/;"	m	struct:fork_join_pool::function_base	typeref:typename:std::shared_ptr<std::size_t>	file:
work_count_	asio/src/examples/cpp11/executors/fork_join.cpp	/^  std::shared_ptr<std::size_t> work_count_;$/;"	m	class:fork_executor	typeref:typename:std::shared_ptr<std::size_t>	file:
work_count_	asio/src/examples/cpp14/executors/fork_join.cpp	/^    std::shared_ptr<std::size_t> work_count_;$/;"	m	struct:fork_join_pool::function_base	typeref:typename:std::shared_ptr<std::size_t>	file:
work_count_	asio/src/examples/cpp14/executors/fork_join.cpp	/^  std::shared_ptr<std::size_t> work_count_;$/;"	m	class:fork_executor	typeref:typename:std::shared_ptr<std::size_t>	file:
work_dispatcher	asio/include/asio/detail/work_dispatcher.hpp	/^  explicit work_dispatcher(ASIO_MOVE_ARG(CompletionHandler) handler)$/;"	f	class:asio::detail::work_dispatcher
work_dispatcher	asio/include/asio/detail/work_dispatcher.hpp	/^  work_dispatcher(const work_dispatcher& other)$/;"	f	class:asio::detail::work_dispatcher
work_dispatcher	asio/include/asio/detail/work_dispatcher.hpp	/^  work_dispatcher(work_dispatcher&& other)$/;"	f	class:asio::detail::work_dispatcher
work_dispatcher	asio/include/asio/detail/work_dispatcher.hpp	/^class work_dispatcher$/;"	c	namespace:asio::detail
work_finished	asio/include/asio/detail/scheduler.hpp	/^  void work_finished()$/;"	f	class:asio::detail::scheduler	typeref:typename:void
work_finished	asio/include/asio/detail/win_iocp_io_context.hpp	/^  void work_finished()$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
work_io_context_	asio/src/examples/cpp03/services/logger_service.hpp	/^  asio::io_context work_io_context_;$/;"	m	class:services::logger_service	typeref:typename:asio::io_context
work_scheduler_	asio/include/asio/detail/resolver_service_base.hpp	/^  asio::detail::scoped_ptr<scheduler_impl> work_scheduler_;$/;"	m	class:asio::detail::resolver_service_base	typeref:typename:asio::detail::scoped_ptr<scheduler_impl>
work_started	asio/include/asio/detail/scheduler.hpp	/^  void work_started()$/;"	f	class:asio::detail::scheduler	typeref:typename:void
work_started	asio/include/asio/detail/win_iocp_io_context.hpp	/^  void work_started()$/;"	f	class:asio::detail::win_iocp_io_context	typeref:typename:void
work_thread_	asio/include/asio/detail/resolver_service_base.hpp	/^  asio::detail::scoped_ptr<asio::detail::thread> work_thread_;$/;"	m	class:asio::detail::resolver_service_base	typeref:typename:asio::detail::scoped_ptr<asio::detail::thread>
work_thread_	asio/src/examples/cpp03/services/logger_service.hpp	/^  boost::scoped_ptr<asio::thread> work_thread_;$/;"	m	class:services::logger_service	typeref:typename:boost::scoped_ptr<asio::thread>
would_block	asio/include/asio/error.hpp	/^  would_block = ASIO_SOCKET_ERROR(EWOULDBLOCK)$/;"	e	enum:asio::error::basic_errors
wrap	asio/include/asio/impl/io_context.hpp	/^io_context::wrap(Handler handler)$/;"	f	class:asio::io_context	typeref:typename:unspecified
wrap	asio/include/asio/io_context_strand.hpp	/^  wrap(Handler handler)$/;"	f	class:asio::io_context::strand	typeref:typename:unspecified
wrap	asio/src/examples/cpp03/invocation/prioritised_handlers.cpp	/^  wrap(int priority, Handler handler)$/;"	f	class:handler_priority_queue	typeref:typename:asio::executor_binder<Handler,executor>	file:
wrap	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^  wrap(int priority, Handler handler)$/;"	f	class:handler_priority_queue	typeref:typename:asio::executor_binder<Handler,executor>	file:
wrapped_handler	asio/include/asio/detail/wrapped_handler.hpp	/^  wrapped_handler(Dispatcher dispatcher, Handler& handler)$/;"	f	class:asio::detail::wrapped_handler
wrapped_handler	asio/include/asio/detail/wrapped_handler.hpp	/^  wrapped_handler(const wrapped_handler& other)$/;"	f	class:asio::detail::wrapped_handler
wrapped_handler	asio/include/asio/detail/wrapped_handler.hpp	/^  wrapped_handler(wrapped_handler&& other)$/;"	f	class:asio::detail::wrapped_handler
wrapped_handler	asio/include/asio/detail/wrapped_handler.hpp	/^class wrapped_handler$/;"	c	namespace:asio::detail
write	asio/include/asio/impl/write.hpp	/^inline std::size_t write(SyncWriteStream& s, DynamicBuffer_v2 buffers,$/;"	f	namespace:asio	typeref:typename:std::size_t
write	asio/include/asio/impl/write.hpp	/^inline std::size_t write(SyncWriteStream& s, const ConstBufferSequence& buffers,$/;"	f	namespace:asio	typeref:typename:std::size_t
write	asio/include/asio/impl/write.hpp	/^inline std::size_t write(SyncWriteStream& s,$/;"	f	namespace:asio	typeref:typename:std::size_t
write	asio/include/asio/impl/write.hpp	/^std::size_t write(SyncWriteStream& s, DynamicBuffer_v2 buffers,$/;"	f	namespace:asio	typeref:typename:std::size_t
write	asio/include/asio/impl/write.hpp	/^std::size_t write(SyncWriteStream& s,$/;"	f	namespace:asio	typeref:typename:std::size_t
write	asio/src/examples/cpp03/chat/chat_client.cpp	/^  void write(const chat_message& msg)$/;"	f	class:chat_client	typeref:typename:void	file:
write	asio/src/examples/cpp11/chat/chat_client.cpp	/^  void write(const chat_message& msg)$/;"	f	class:chat_client	typeref:typename:void	file:
write	asio/src/examples/cpp11/fork/process_per_connection.cpp	/^  void write(std::size_t length)$/;"	f	class:server	typeref:typename:void	file:
write	asio/src/examples/cpp11/local/connect_pair.cpp	/^  void write(std::size_t size)$/;"	f	class:uppercase_filter	typeref:typename:void	file:
write	asio/src/tests/unit/is_read_buffered.cpp	/^  size_t write(const Const_Buffers&)$/;"	f	class:test_stream	typeref:typename:size_t	file:
write	asio/src/tests/unit/is_read_buffered.cpp	/^  size_t write(const Const_Buffers&, asio::error_code& ec)$/;"	f	class:test_stream	typeref:typename:size_t	file:
write	asio/src/tests/unit/is_write_buffered.cpp	/^  size_t write(const Const_Buffers&)$/;"	f	class:test_stream	typeref:typename:size_t	file:
write	asio/src/tests/unit/is_write_buffered.cpp	/^  size_t write(const Const_Buffers&, asio::error_code& ec)$/;"	f	class:test_stream	typeref:typename:size_t	file:
write_allocator_	asio/src/tests/performance/client.cpp	/^  handler_allocator write_allocator_;$/;"	m	class:session	typeref:typename:handler_allocator	file:
write_allocator_	asio/src/tests/performance/server.cpp	/^  handler_allocator write_allocator_;$/;"	m	class:session	typeref:typename:handler_allocator	file:
write_at	asio/include/asio/impl/write_at.hpp	/^inline std::size_t write_at(SyncRandomAccessWriteDevice& d,$/;"	f	namespace:asio	typeref:typename:std::size_t
write_at	asio/include/asio/impl/write_at.hpp	/^std::size_t write_at(SyncRandomAccessWriteDevice& d,$/;"	f	namespace:asio	typeref:typename:std::size_t
write_at_buffer_sequence	asio/include/asio/impl/write_at.hpp	/^  std::size_t write_at_buffer_sequence(SyncRandomAccessWriteDevice& d,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
write_at_op	asio/include/asio/impl/write_at.hpp	/^    write_at_op(AsyncRandomAccessWriteDevice& device,$/;"	f	class:asio::detail::write_at_op
write_at_op	asio/include/asio/impl/write_at.hpp	/^    write_at_op(const write_at_op& other)$/;"	f	class:asio::detail::write_at_op
write_at_op	asio/include/asio/impl/write_at.hpp	/^    write_at_op(write_at_op&& other)$/;"	f	class:asio::detail::write_at_op
write_at_op	asio/include/asio/impl/write_at.hpp	/^  class write_at_op$/;"	c	namespace:asio::detail
write_at_streambuf_op	asio/include/asio/impl/write_at.hpp	/^    write_at_streambuf_op($/;"	f	class:asio::detail::write_at_streambuf_op
write_at_streambuf_op	asio/include/asio/impl/write_at.hpp	/^    write_at_streambuf_op(const write_at_streambuf_op& other)$/;"	f	class:asio::detail::write_at_streambuf_op
write_at_streambuf_op	asio/include/asio/impl/write_at.hpp	/^    write_at_streambuf_op(write_at_streambuf_op&& other)$/;"	f	class:asio::detail::write_at_streambuf_op
write_at_streambuf_op	asio/include/asio/impl/write_at.hpp	/^  class write_at_streambuf_op$/;"	c	namespace:asio::detail
write_buffer_	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  asio::const_buffer write_buffer_;$/;"	m	class:third_party_lib::session	typeref:typename:asio::const_buffer	file:
write_buffer_	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  asio::const_buffer write_buffer_;$/;"	m	class:third_party_lib::session	typeref:typename:asio::const_buffer	file:
write_buffer_sequence	asio/include/asio/impl/write.hpp	/^  std::size_t write_buffer_sequence(SyncWriteStream& s,$/;"	f	namespace:asio::detail	typeref:typename:std::size_t
write_data	asio/src/tests/unit/ip/tcp.cpp	/^static const char write_data[]$/;"	v	namespace:ip_tcp_socket_runtime	typeref:typename:const char[]	file:
write_data	asio/src/tests/unit/write.cpp	/^static const char write_data[]$/;"	v	typeref:typename:const char[]	file:
write_data	asio/src/tests/unit/write_at.cpp	/^static const char write_data[]$/;"	v	typeref:typename:const char[]	file:
write_data_	asio/src/tests/performance/client.cpp	/^  char* write_data_;$/;"	m	class:session	typeref:typename:char *	file:
write_data_	asio/src/tests/performance/server.cpp	/^  char* write_data_;$/;"	m	class:session	typeref:typename:char *	file:
write_descriptor_	asio/include/asio/detail/eventfd_select_interrupter.hpp	/^  int write_descriptor_;$/;"	m	class:asio::detail::eventfd_select_interrupter	typeref:typename:int
write_descriptor_	asio/include/asio/detail/pipe_select_interrupter.hpp	/^  int write_descriptor_;$/;"	m	class:asio::detail::pipe_select_interrupter	typeref:typename:int
write_descriptor_	asio/include/asio/detail/socket_select_interrupter.hpp	/^  socket_type write_descriptor_;$/;"	m	class:asio::detail::socket_select_interrupter	typeref:typename:socket_type
write_dynbuf_v1_op	asio/include/asio/impl/write.hpp	/^    write_dynbuf_v1_op(AsyncWriteStream& stream,$/;"	f	class:asio::detail::write_dynbuf_v1_op
write_dynbuf_v1_op	asio/include/asio/impl/write.hpp	/^    write_dynbuf_v1_op(const write_dynbuf_v1_op& other)$/;"	f	class:asio::detail::write_dynbuf_v1_op
write_dynbuf_v1_op	asio/include/asio/impl/write.hpp	/^    write_dynbuf_v1_op(write_dynbuf_v1_op&& other)$/;"	f	class:asio::detail::write_dynbuf_v1_op
write_dynbuf_v1_op	asio/include/asio/impl/write.hpp	/^  class write_dynbuf_v1_op$/;"	c	namespace:asio::detail
write_dynbuf_v2_op	asio/include/asio/impl/write.hpp	/^    write_dynbuf_v2_op(AsyncWriteStream& stream,$/;"	f	class:asio::detail::write_dynbuf_v2_op
write_dynbuf_v2_op	asio/include/asio/impl/write.hpp	/^    write_dynbuf_v2_op(const write_dynbuf_v2_op& other)$/;"	f	class:asio::detail::write_dynbuf_v2_op
write_dynbuf_v2_op	asio/include/asio/impl/write.hpp	/^    write_dynbuf_v2_op(write_dynbuf_v2_op&& other)$/;"	f	class:asio::detail::write_dynbuf_v2_op
write_dynbuf_v2_op	asio/include/asio/impl/write.hpp	/^  class write_dynbuf_v2_op$/;"	c	namespace:asio::detail
write_in_progress_	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  bool write_in_progress_;$/;"	m	class:connection	typeref:typename:bool	file:
write_in_progress_	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  bool write_in_progress_ = false;$/;"	m	class:connection	typeref:typename:bool	file:
write_line	asio/src/examples/cpp03/timeouts/blocking_tcp_client.cpp	/^  void write_line(const std::string& line,$/;"	f	class:client	typeref:typename:void	file:
write_line	asio/src/examples/cpp11/timeouts/blocking_tcp_client.cpp	/^  void write_line(const std::string& line,$/;"	f	class:client	typeref:typename:void	file:
write_line	asio/src/examples/cpp11/timeouts/server.cpp	/^  void write_line()$/;"	f	class:tcp_session	typeref:typename:void	file:
write_msg_	asio/src/examples/cpp03/chat/posix_chat_client.cpp	/^  chat_message write_msg_;$/;"	m	class:posix_chat_client	typeref:typename:chat_message	file:
write_msgs_	asio/src/examples/cpp03/chat/chat_client.cpp	/^  chat_message_queue write_msgs_;$/;"	m	class:chat_client	typeref:typename:chat_message_queue	file:
write_msgs_	asio/src/examples/cpp03/chat/chat_server.cpp	/^  chat_message_queue write_msgs_;$/;"	m	class:chat_session	typeref:typename:chat_message_queue	file:
write_msgs_	asio/src/examples/cpp11/chat/chat_client.cpp	/^  chat_message_queue write_msgs_;$/;"	m	class:chat_client	typeref:typename:chat_message_queue	file:
write_msgs_	asio/src/examples/cpp11/chat/chat_server.cpp	/^  chat_message_queue write_msgs_;$/;"	m	class:chat_session	typeref:typename:chat_message_queue	file:
write_msgs_	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  std::deque<std::string> write_msgs_;$/;"	m	class:chat_session	typeref:typename:std::deque<std::string>	file:
write_op	asio/include/asio/detail/dev_poll_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1,$/;"	e	enum:asio::detail::dev_poll_reactor::op_types
write_op	asio/include/asio/detail/epoll_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1,$/;"	e	enum:asio::detail::epoll_reactor::op_types
write_op	asio/include/asio/detail/kqueue_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1,$/;"	e	enum:asio::detail::kqueue_reactor::op_types
write_op	asio/include/asio/detail/select_reactor.hpp	/^  enum op_types { read_op = 0, write_op = 1, except_op = 2,$/;"	e	enum:asio::detail::select_reactor::op_types
write_op	asio/include/asio/impl/write.hpp	/^    write_op(AsyncWriteStream& stream, const ConstBufferSequence& buffers,$/;"	f	class:asio::detail::write_op
write_op	asio/include/asio/impl/write.hpp	/^    write_op(const write_op& other)$/;"	f	class:asio::detail::write_op
write_op	asio/include/asio/impl/write.hpp	/^    write_op(write_op&& other)$/;"	f	class:asio::detail::write_op
write_op	asio/include/asio/impl/write.hpp	/^  class write_op$/;"	c	namespace:asio::detail
write_op	asio/include/asio/ssl/detail/write_op.hpp	/^  write_op(const ConstBufferSequence& buffers)$/;"	f	class:asio::ssl::detail::write_op
write_op	asio/include/asio/ssl/detail/write_op.hpp	/^class write_op$/;"	c	namespace:asio::ssl::detail
write_some	asio/include/asio/basic_serial_port.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers)$/;"	f	class:asio::basic_serial_port	typeref:typename:std::size_t
write_some	asio/include/asio/basic_serial_port.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers,$/;"	f	class:asio::basic_serial_port	typeref:typename:std::size_t
write_some	asio/include/asio/basic_stream_socket.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers)$/;"	f	class:asio::basic_stream_socket	typeref:typename:std::size_t
write_some	asio/include/asio/basic_stream_socket.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers,$/;"	f	class:asio::basic_stream_socket	typeref:typename:std::size_t
write_some	asio/include/asio/buffered_read_stream.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers)$/;"	f	class:asio::buffered_read_stream	typeref:typename:std::size_t
write_some	asio/include/asio/buffered_read_stream.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers,$/;"	f	class:asio::buffered_read_stream	typeref:typename:std::size_t
write_some	asio/include/asio/buffered_stream.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers)$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
write_some	asio/include/asio/buffered_stream.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers,$/;"	f	class:asio::buffered_stream	typeref:typename:std::size_t
write_some	asio/include/asio/detail/reactive_descriptor_service.hpp	/^  size_t write_some(implementation_type& impl,$/;"	f	class:asio::detail::reactive_descriptor_service	typeref:typename:size_t
write_some	asio/include/asio/detail/reactive_serial_port_service.hpp	/^  size_t write_some(implementation_type& impl,$/;"	f	class:asio::detail::reactive_serial_port_service	typeref:typename:size_t
write_some	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  size_t write_some(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_handle_service	typeref:typename:size_t
write_some	asio/include/asio/detail/win_iocp_serial_port_service.hpp	/^  size_t write_some(implementation_type& impl,$/;"	f	class:asio::detail::win_iocp_serial_port_service	typeref:typename:size_t
write_some	asio/include/asio/impl/buffered_write_stream.hpp	/^std::size_t buffered_write_stream<Stream>::write_some($/;"	f	class:asio::buffered_write_stream	typeref:typename:std::size_t
write_some	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers)$/;"	f	class:asio::posix::basic_stream_descriptor	typeref:typename:std::size_t
write_some	asio/include/asio/posix/basic_stream_descriptor.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers,$/;"	f	class:asio::posix::basic_stream_descriptor	typeref:typename:std::size_t
write_some	asio/include/asio/ssl/stream.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers)$/;"	f	class:asio::ssl::stream	typeref:typename:std::size_t
write_some	asio/include/asio/ssl/stream.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers,$/;"	f	class:asio::ssl::stream	typeref:typename:std::size_t
write_some	asio/include/asio/windows/basic_stream_handle.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers)$/;"	f	class:asio::windows::basic_stream_handle	typeref:typename:std::size_t
write_some	asio/include/asio/windows/basic_stream_handle.hpp	/^  std::size_t write_some(const ConstBufferSequence& buffers,$/;"	f	class:asio::windows::basic_stream_handle	typeref:typename:std::size_t
write_some	asio/src/tests/unit/write.cpp	/^  size_t write_some(const Const_Buffers& buffers)$/;"	f	class:test_stream	typeref:typename:size_t	file:
write_some	asio/src/tests/unit/write.cpp	/^  size_t write_some(const Const_Buffers& buffers, asio::error_code& ec)$/;"	f	class:test_stream	typeref:typename:size_t	file:
write_some_at	asio/include/asio/detail/win_iocp_handle_service.hpp	/^  size_t write_some_at(implementation_type& impl, uint64_t offset,$/;"	f	class:asio::detail::win_iocp_handle_service	typeref:typename:size_t
write_some_at	asio/include/asio/windows/basic_random_access_handle.hpp	/^  std::size_t write_some_at(uint64_t offset,$/;"	f	class:asio::windows::basic_random_access_handle	typeref:typename:std::size_t
write_some_at	asio/src/tests/unit/write_at.cpp	/^  size_t write_some_at(asio::uint64_t offset,$/;"	f	class:test_random_access_device	typeref:typename:size_t	file:
write_some_handler	asio/src/tests/unit/buffered_read_stream.cpp	/^void write_some_handler(const asio::error_code&, std::size_t)$/;"	f	typeref:typename:void
write_some_handler	asio/src/tests/unit/buffered_stream.cpp	/^void write_some_handler(const asio::error_code&, std::size_t)$/;"	f	typeref:typename:void
write_some_handler	asio/src/tests/unit/buffered_write_stream.cpp	/^void write_some_handler(const asio::error_code&, std::size_t)$/;"	f	typeref:typename:void
write_some_handler	asio/src/tests/unit/generic/stream_protocol.cpp	/^void write_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:generic_stream_protocol_socket_compile	typeref:typename:void
write_some_handler	asio/src/tests/unit/ip/tcp.cpp	/^  write_some_handler() {}$/;"	f	struct:ip_tcp_socket_compile::write_some_handler	file:
write_some_handler	asio/src/tests/unit/ip/tcp.cpp	/^  write_some_handler(write_some_handler&&) {}$/;"	f	struct:ip_tcp_socket_compile::write_some_handler	file:
write_some_handler	asio/src/tests/unit/ip/tcp.cpp	/^struct write_some_handler$/;"	s	namespace:ip_tcp_socket_compile	file:
write_some_handler	asio/src/tests/unit/local/stream_protocol.cpp	/^void write_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:local_stream_protocol_socket_compile	typeref:typename:void
write_some_handler	asio/src/tests/unit/posix/stream_descriptor.cpp	/^void write_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:posix_stream_descriptor_compile	typeref:typename:void
write_some_handler	asio/src/tests/unit/serial_port.cpp	/^  write_some_handler() {}$/;"	f	struct:serial_port_compile::write_some_handler	file:
write_some_handler	asio/src/tests/unit/serial_port.cpp	/^  write_some_handler(write_some_handler&&) {}$/;"	f	struct:serial_port_compile::write_some_handler	file:
write_some_handler	asio/src/tests/unit/serial_port.cpp	/^struct write_some_handler$/;"	s	namespace:serial_port_compile	file:
write_some_handler	asio/src/tests/unit/ssl/stream.cpp	/^void write_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:ssl_stream_compile	typeref:typename:void
write_some_handler	asio/src/tests/unit/windows/random_access_handle.cpp	/^void write_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:windows_random_access_handle_compile	typeref:typename:void
write_some_handler	asio/src/tests/unit/windows/stream_handle.cpp	/^void write_some_handler(const asio::error_code&, std::size_t)$/;"	f	namespace:windows_stream_handle_compile	typeref:typename:void
write_stream_type	asio/include/asio/buffered_stream.hpp	/^  typedef buffered_write_stream<Stream> write_stream_type;$/;"	t	class:asio::buffered_stream	typeref:typename:buffered_write_stream<Stream>
writer	asio/src/examples/cpp11/executors/pipeline.cpp	/^void writer(queue_back<std::string> in)$/;"	f	typeref:typename:void
writer	asio/src/examples/cpp14/executors/pipeline.cpp	/^void writer(queue_back<std::string> in)$/;"	f	typeref:typename:void
writer	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  awaitable<void> writer()$/;"	f	class:chat_session	typeref:typename:awaitable<void>	file:
writing	asio/src/examples/cpp03/nonblocking/third_party_lib.cpp	/^  enum { reading, writing } state_;$/;"	e	enum:third_party_lib::session::__anon5335a9ae0103	file:
writing	asio/src/examples/cpp11/nonblocking/third_party_lib.cpp	/^  enum { reading, writing } state_ = reading;$/;"	e	enum:third_party_lib::session::__anon68f665cd0103	file:
writing	asio/src/examples/cpp11/operations/composed_6.cpp	/^      enum { starting, waiting, writing } state_;$/;"	e	enum:async_write_message_initiation::operator ()::intermediate_completion_handler::__anonf893724c0103	file:
writing	asio/src/examples/cpp11/operations/composed_7.cpp	/^  enum { starting, waiting, writing } state_;$/;"	e	enum:async_write_messages_implementation::__anonf8a58acd0103	file:
writing	asio/src/examples/cpp14/operations/composed_6.cpp	/^      enum { starting, waiting, writing } state_;$/;"	e	enum:async_write_messages::__anon32feb80f0102::intermediate_completion_handler::__anon32feb80f0203	file:
writing	asio/src/examples/cpp14/operations/composed_7.cpp	/^  enum { starting, waiting, writing };$/;"	e	enum:async_write_messages::__anon3310d0900103	file:
xsl	asio/src/doc/asioref.xsl	/^<xsl:stylesheet xmlns:xsl="http:\/\/www.w3.org\/1999\/XSL\/Transform" version="1.0">$/;"	n	uri:http://www.w3.org/1999/XSL/Transform
xsl	asio/src/doc/reference.xsl	/^<xsl:stylesheet xmlns:xsl="http:\/\/www.w3.org\/1999\/XSL\/Transform" version="1.0">$/;"	n	uri:http://www.w3.org/1999/XSL/Transform
xsl	asio/src/doc/tutorial.xsl	/^<xsl:stylesheet xmlns:xsl="http:\/\/www.w3.org\/1999\/XSL\/Transform" version="1.0">$/;"	n	uri:http://www.w3.org/1999/XSL/Transform
yield	asio/include/asio/yield.hpp	/^# define yield /;"	d
yield_break_coro	asio/src/tests/unit/coroutine.cpp	/^void yield_break_coro(asio::coroutine& coro)$/;"	f	typeref:typename:void
yield_break_test	asio/src/tests/unit/coroutine.cpp	/^void yield_break_test()$/;"	f	typeref:typename:void
yield_context	asio/include/asio/spawn.hpp	/^  executor_binder<void(*)(), executor> > yield_context;$/;"	t	namespace:asio
yield_context	asio/include/asio/spawn.hpp	/^typedef basic_yield_context<unspecified> yield_context;$/;"	t	namespace:asio	typeref:typename:basic_yield_context<unspecified>
~actor	asio/src/examples/cpp11/executors/actor.cpp	/^  virtual ~actor()$/;"	f	class:actor	file:
~actor	asio/src/examples/cpp14/executors/actor.cpp	/^  virtual ~actor()$/;"	f	class:actor	file:
~auto_addrinfo	asio/include/asio/detail/resolver_service_base.hpp	/^    ~auto_addrinfo()$/;"	f	class:asio::detail::resolver_service_base::auto_addrinfo
~auto_func_base_ptr	asio/include/asio/detail/posix_thread.hpp	/^    ~auto_func_base_ptr() { delete ptr; }$/;"	f	struct:asio::detail::posix_thread::auto_func_base_ptr
~auto_func_base_ptr	asio/include/asio/detail/win_thread.hpp	/^    ~auto_func_base_ptr() { delete ptr; }$/;"	f	struct:asio::detail::win_thread::auto_func_base_ptr
~auto_handle	asio/include/asio/detail/win_iocp_io_context.hpp	/^    ~auto_handle() { if (handle) ::CloseHandle(handle); }$/;"	f	struct:asio::detail::win_iocp_io_context::auto_handle
~auto_service_ptr	asio/include/asio/detail/service_registry.hpp	/^    ~auto_service_ptr() { destroy(ptr_); }$/;"	f	struct:asio::detail::service_registry::auto_service_ptr
~awaitable	asio/include/asio/awaitable.hpp	/^  ~awaitable()$/;"	f	class:asio::awaitable
~awaitable_frame	asio/include/asio/impl/awaitable.hpp	/^  ~awaitable_frame()$/;"	f	class:asio::detail::awaitable_frame
~awaitable_thread	asio/include/asio/impl/awaitable.hpp	/^  ~awaitable_thread()$/;"	f	class:asio::detail::awaitable_thread
~bad_address_cast	asio/include/asio/ip/bad_address_cast.hpp	/^  virtual ~bad_address_cast() ASIO_NOEXCEPT_OR_NOTHROW {}$/;"	f	class:asio::ip::bad_address_cast
~bank_account	asio/src/examples/cpp11/executors/bank_account_1.cpp	/^  ~bank_account()$/;"	f	class:bank_account	file:
~bank_account	asio/src/examples/cpp14/executors/bank_account_1.cpp	/^  ~bank_account()$/;"	f	class:bank_account	file:
~basic_datagram_socket	asio/include/asio/basic_datagram_socket.hpp	/^  ~basic_datagram_socket()$/;"	f	class:asio::basic_datagram_socket
~basic_deadline_timer	asio/include/asio/basic_deadline_timer.hpp	/^  ~basic_deadline_timer()$/;"	f	class:asio::basic_deadline_timer
~basic_descriptor	asio/include/asio/posix/basic_descriptor.hpp	/^  ~basic_descriptor()$/;"	f	class:asio::posix::basic_descriptor
~basic_io_object	asio/include/asio/basic_io_object.hpp	/^  ~basic_io_object()$/;"	f	class:asio::basic_io_object
~basic_logger	asio/src/examples/cpp03/services/basic_logger.hpp	/^  ~basic_logger()$/;"	f	class:services::basic_logger
~basic_overlapped_handle	asio/include/asio/windows/basic_overlapped_handle.hpp	/^  ~basic_overlapped_handle()$/;"	f	class:asio::windows::basic_overlapped_handle
~basic_raw_socket	asio/include/asio/basic_raw_socket.hpp	/^  ~basic_raw_socket()$/;"	f	class:asio::basic_raw_socket
~basic_resolver	asio/include/asio/ip/basic_resolver.hpp	/^  ~basic_resolver()$/;"	f	class:asio::ip::basic_resolver
~basic_seq_packet_socket	asio/include/asio/basic_seq_packet_socket.hpp	/^  ~basic_seq_packet_socket()$/;"	f	class:asio::basic_seq_packet_socket
~basic_serial_port	asio/include/asio/basic_serial_port.hpp	/^  ~basic_serial_port()$/;"	f	class:asio::basic_serial_port
~basic_signal_set	asio/include/asio/basic_signal_set.hpp	/^  ~basic_signal_set()$/;"	f	class:asio::basic_signal_set
~basic_socket	asio/include/asio/basic_socket.hpp	/^  ~basic_socket()$/;"	f	class:asio::basic_socket
~basic_socket_acceptor	asio/include/asio/basic_socket_acceptor.hpp	/^  ~basic_socket_acceptor()$/;"	f	class:asio::basic_socket_acceptor
~basic_socket_streambuf	asio/include/asio/basic_socket_streambuf.hpp	/^  virtual ~basic_socket_streambuf()$/;"	f	class:asio::basic_socket_streambuf
~basic_stream_socket	asio/include/asio/basic_stream_socket.hpp	/^  ~basic_stream_socket()$/;"	f	class:asio::basic_stream_socket
~basic_waitable_timer	asio/include/asio/basic_waitable_timer.hpp	/^  ~basic_waitable_timer()$/;"	f	class:asio::basic_waitable_timer
~buffer_debug_check	asio/include/asio/buffer.hpp	/^  ~buffer_debug_check()$/;"	f	class:asio::detail::buffer_debug_check
~buffer_resize_guard	asio/include/asio/detail/buffer_resize_guard.hpp	/^  ~buffer_resize_guard()$/;"	f	class:asio::detail::buffer_resize_guard
~chat_participant	asio/src/examples/cpp03/chat/chat_server.cpp	/^  virtual ~chat_participant() {}$/;"	f	class:chat_participant	file:
~chat_participant	asio/src/examples/cpp11/chat/chat_server.cpp	/^  virtual ~chat_participant() {}$/;"	f	class:chat_participant	file:
~chat_participant	asio/src/examples/cpp17/coroutines_ts/chat_server.cpp	/^  virtual ~chat_participant() {}$/;"	f	class:chat_participant	file:
~client	asio/src/tests/performance/client.cpp	/^  ~client()$/;"	f	class:client	file:
~completion	asio/src/examples/cpp11/handler_tracking/custom_tracking.hpp	/^    ~completion()$/;"	f	struct:custom_tracking::completion
~conditionally_enabled_event	asio/include/asio/detail/conditionally_enabled_event.hpp	/^  ~conditionally_enabled_event()$/;"	f	class:asio::detail::conditionally_enabled_event
~conditionally_enabled_mutex	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^  ~conditionally_enabled_mutex()$/;"	f	class:asio::detail::conditionally_enabled_mutex
~connection_sink	asio/src/tests/unit/connect.cpp	/^  ~connection_sink()$/;"	f	class:connection_sink	file:
~context	asio/include/asio/detail/call_stack.hpp	/^    ~context()$/;"	f	class:asio::detail::call_stack::context
~context_base	asio/include/asio/ssl/context_base.hpp	/^  ~context_base()$/;"	f	class:asio::ssl::context_base
~coroutine_ref	asio/include/asio/coroutine.hpp	/^  ~coroutine_ref() { if (!modified_) value_ = -1; }$/;"	f	class:asio::detail::coroutine_ref
~deadline_timer_service	asio/include/asio/detail/deadline_timer_service.hpp	/^  ~deadline_timer_service()$/;"	f	class:asio::detail::deadline_timer_service
~descriptor_base	asio/include/asio/posix/descriptor_base.hpp	/^  ~descriptor_base()$/;"	f	class:asio::posix::descriptor_base
~executor	asio/include/asio/executor.hpp	/^  ~executor()$/;"	f	class:asio::executor
~executor_binder	asio/include/asio/bind_executor.hpp	/^  ~executor_binder()$/;"	f	class:asio::executor_binder
~executor_function_base	asio/include/asio/detail/executor_function.hpp	/^  ~executor_function_base()$/;"	f	class:asio::detail::executor_function_base
~executor_work_guard	asio/include/asio/executor_work_guard.hpp	/^  ~executor_work_guard()$/;"	f	class:asio::executor_work_guard
~fork_join_pool	asio/src/examples/cpp11/executors/fork_join.cpp	/^  ~fork_join_pool()$/;"	f	class:fork_join_pool	file:
~fork_join_pool	asio/src/examples/cpp14/executors/fork_join.cpp	/^  ~fork_join_pool()$/;"	f	class:fork_join_pool	file:
~func_base	asio/include/asio/detail/posix_thread.hpp	/^    virtual ~func_base() {}$/;"	f	class:asio::detail::posix_thread::func_base
~func_base	asio/include/asio/detail/win_thread.hpp	/^    virtual ~func_base() {}$/;"	f	class:asio::detail::win_thread::func_base
~func_base	asio/include/asio/detail/winapp_thread.hpp	/^    virtual ~func_base() {}$/;"	f	class:asio::detail::winapp_thread::func_base
~func_base	asio/include/asio/detail/wince_thread.hpp	/^    virtual ~func_base() {}$/;"	f	class:asio::detail::wince_thread::func_base
~function	asio/include/asio/impl/executor.hpp	/^  ~function()$/;"	f	class:asio::executor::function
~gcc_arm_fenced_block	asio/include/asio/detail/gcc_arm_fenced_block.hpp	/^  ~gcc_arm_fenced_block()$/;"	f	class:asio::detail::gcc_arm_fenced_block
~gcc_hppa_fenced_block	asio/include/asio/detail/gcc_hppa_fenced_block.hpp	/^  ~gcc_hppa_fenced_block()$/;"	f	class:asio::detail::gcc_hppa_fenced_block
~gcc_sync_fenced_block	asio/include/asio/detail/gcc_sync_fenced_block.hpp	/^  ~gcc_sync_fenced_block()$/;"	f	class:asio::detail::gcc_sync_fenced_block
~gcc_x86_fenced_block	asio/include/asio/detail/gcc_x86_fenced_block.hpp	/^  ~gcc_x86_fenced_block()$/;"	f	class:asio::detail::gcc_x86_fenced_block
~handler_work	asio/include/asio/detail/handler_work.hpp	/^  ~handler_work() {}$/;"	f	class:asio::detail::handler_work
~handler_work	asio/include/asio/detail/handler_work.hpp	/^  ~handler_work()$/;"	f	class:asio::detail::handler_work
~hash_map	asio/include/asio/detail/hash_map.hpp	/^  ~hash_map()$/;"	f	class:asio::detail::hash_map
~impl_base	asio/include/asio/executor.hpp	/^    virtual ~impl_base() {}$/;"	f	class:asio::executor::impl_base
~io_object_impl	asio/include/asio/detail/io_object_impl.hpp	/^  ~io_object_impl()$/;"	f	class:asio::detail::io_object_impl
~join_guard	asio/src/examples/cpp11/executors/fork_join.cpp	/^  ~join_guard() { ex_.join(); }$/;"	f	class:join_guard	file:
~join_guard	asio/src/examples/cpp14/executors/fork_join.cpp	/^  ~join_guard() { ex_.join(); }$/;"	f	class:join_guard	file:
~keyword_tss_ptr	asio/include/asio/detail/keyword_tss_ptr.hpp	/^  ~keyword_tss_ptr()$/;"	f	class:asio::detail::keyword_tss_ptr
~local_free_on_block_exit	asio/include/asio/detail/local_free_on_block_exit.hpp	/^  ~local_free_on_block_exit()$/;"	f	class:asio::detail::local_free_on_block_exit
~logger_service	asio/src/examples/cpp03/services/logger_service.hpp	/^  ~logger_service()$/;"	f	class:services::logger_service
~macos_fenced_block	asio/include/asio/detail/macos_fenced_block.hpp	/^  ~macos_fenced_block()$/;"	f	class:asio::detail::macos_fenced_block
~manual	asio/include/asio/detail/winsock_init.hpp	/^    ~manual()$/;"	f	class:asio::detail::winsock_init::manual
~message_handler_base	asio/src/examples/cpp11/executors/actor.cpp	/^  virtual ~message_handler_base() {}$/;"	f	class:message_handler_base	file:
~message_handler_base	asio/src/examples/cpp14/executors/actor.cpp	/^  virtual ~message_handler_base() {}$/;"	f	class:message_handler_base	file:
~noncopyable	asio/include/asio/detail/noncopyable.hpp	/^  ~noncopyable() {}$/;"	f	class:asio::detail::noncopyable
~null_event	asio/include/asio/detail/null_event.hpp	/^  ~null_event()$/;"	f	class:asio::detail::null_event
~null_fenced_block	asio/include/asio/detail/null_fenced_block.hpp	/^  ~null_fenced_block()$/;"	f	class:asio::detail::null_fenced_block
~null_global_impl	asio/include/asio/detail/null_global.hpp	/^  ~null_global_impl()$/;"	f	struct:asio::detail::null_global_impl
~null_mutex	asio/include/asio/detail/null_mutex.hpp	/^  ~null_mutex()$/;"	f	class:asio::detail::null_mutex
~null_reactor	asio/include/asio/detail/null_reactor.hpp	/^  ~null_reactor()$/;"	f	class:asio::detail::null_reactor
~null_signal_blocker	asio/include/asio/detail/null_signal_blocker.hpp	/^  ~null_signal_blocker()$/;"	f	class:asio::detail::null_signal_blocker
~null_thread	asio/include/asio/detail/null_thread.hpp	/^  ~null_thread()$/;"	f	class:asio::detail::null_thread
~null_tss_ptr	asio/include/asio/detail/null_tss_ptr.hpp	/^  ~null_tss_ptr()$/;"	f	class:asio::detail::null_tss_ptr
~object_pool	asio/include/asio/detail/object_pool.hpp	/^  ~object_pool()$/;"	f	class:asio::detail::object_pool
~on_dispatch_exit	asio/include/asio/detail/impl/strand_service.hpp	/^  ~on_dispatch_exit()$/;"	f	struct:asio::detail::strand_service::on_dispatch_exit
~on_invoker_exit	asio/include/asio/detail/impl/strand_executor_service.hpp	/^    ~on_invoker_exit()$/;"	f	struct:asio::detail::strand_executor_service::invoker::on_invoker_exit
~op_queue	asio/include/asio/detail/op_queue.hpp	/^  ~op_queue()$/;"	f	class:asio::detail::op_queue
~openssl_init	asio/include/asio/ssl/detail/openssl_init.hpp	/^  ~openssl_init()$/;"	f	class:asio::ssl::detail::openssl_init
~overlapped_ptr	asio/include/asio/windows/overlapped_ptr.hpp	/^  ~overlapped_ptr()$/;"	f	class:asio::windows::overlapped_ptr
~password_callback_base	asio/include/asio/ssl/detail/password_callback.hpp	/^  virtual ~password_callback_base()$/;"	f	class:asio::ssl::detail::password_callback_base
~posix_event	asio/include/asio/detail/posix_event.hpp	/^  ~posix_event()$/;"	f	class:asio::detail::posix_event
~posix_global_impl	asio/include/asio/detail/posix_global.hpp	/^  ~posix_global_impl()$/;"	f	struct:asio::detail::posix_global_impl
~posix_mutex	asio/include/asio/detail/posix_mutex.hpp	/^  ~posix_mutex()$/;"	f	class:asio::detail::posix_mutex
~posix_signal_blocker	asio/include/asio/detail/posix_signal_blocker.hpp	/^  ~posix_signal_blocker()$/;"	f	class:asio::detail::posix_signal_blocker
~posix_tss_ptr	asio/include/asio/detail/posix_tss_ptr.hpp	/^  ~posix_tss_ptr()$/;"	f	class:asio::detail::posix_tss_ptr
~printer	asio/src/examples/cpp03/tutorial/timer4/timer.cpp	/^  ~printer()$/;"	f	class:printer	file:
~printer	asio/src/examples/cpp03/tutorial/timer5/timer.cpp	/^  ~printer()$/;"	f	class:printer	file:
~queued_handler_base	asio/src/examples/cpp11/invocation/prioritised_handlers.cpp	/^    virtual ~queued_handler_base()$/;"	f	class:handler_priority_queue::queued_handler_base	file:
~raw_mem	asio/include/asio/impl/executor.hpp	/^    ~raw_mem()$/;"	f	struct:asio::executor::impl::raw_mem
~resolve_query_op	asio/include/asio/detail/resolve_query_op.hpp	/^  ~resolve_query_op()$/;"	f	class:asio::detail::resolve_query_op
~resolver_base	asio/include/asio/ip/resolver_base.hpp	/^  ~resolver_base()$/;"	f	class:asio::ip::resolver_base
~resolver_query_base	asio/include/asio/ip/resolver_query_base.hpp	/^  ~resolver_query_base()$/;"	f	class:asio::ip::resolver_query_base
~scheduler_operation	asio/include/asio/detail/scheduler_operation.hpp	/^  ~scheduler_operation()$/;"	f	class:asio::detail::ASIO_INHERIT_TRACKED_HANDLER
~scoped_lock	asio/include/asio/detail/conditionally_enabled_mutex.hpp	/^    ~scoped_lock()$/;"	f	class:asio::detail::conditionally_enabled_mutex::scoped_lock
~scoped_lock	asio/include/asio/detail/scoped_lock.hpp	/^  ~scoped_lock()$/;"	f	class:asio::detail::scoped_lock
~scoped_ptr	asio/include/asio/detail/scoped_ptr.hpp	/^  ~scoped_ptr()$/;"	f	class:asio::detail::scoped_ptr
~serial_port_base	asio/include/asio/serial_port_base.hpp	/^  ~serial_port_base()$/;"	f	class:asio::serial_port_base
~session	asio/src/tests/performance/client.cpp	/^  ~session()$/;"	f	class:session	file:
~session	asio/src/tests/performance/server.cpp	/^  ~session()$/;"	f	class:session	file:
~socket_base	asio/include/asio/socket_base.hpp	/^  ~socket_base()$/;"	f	class:asio::socket_base
~socket_holder	asio/include/asio/detail/socket_holder.hpp	/^  ~socket_holder()$/;"	f	class:asio::detail::socket_holder
~solaris_fenced_block	asio/include/asio/detail/solaris_fenced_block.hpp	/^  ~solaris_fenced_block()$/;"	f	class:asio::detail::solaris_fenced_block
~std_event	asio/include/asio/detail/std_event.hpp	/^  ~std_event()$/;"	f	class:asio::detail::std_event
~std_fenced_block	asio/include/asio/detail/std_fenced_block.hpp	/^  ~std_fenced_block()$/;"	f	class:asio::detail::std_fenced_block
~std_global_impl	asio/include/asio/detail/std_global.hpp	/^  ~std_global_impl()$/;"	f	struct:asio::detail::std_global_impl
~std_mutex	asio/include/asio/detail/std_mutex.hpp	/^  ~std_mutex()$/;"	f	class:asio::detail::std_mutex
~std_static_mutex	asio/include/asio/detail/std_static_mutex.hpp	/^  ~std_static_mutex()$/;"	f	class:asio::detail::std_static_mutex
~std_thread	asio/include/asio/detail/std_thread.hpp	/^  ~std_thread()$/;"	f	class:asio::detail::std_thread
~strand	asio/include/asio/io_context_strand.hpp	/^  ~strand()$/;"	f	class:asio::io_context::strand
~strand	asio/include/asio/strand.hpp	/^  ~strand()$/;"	f	class:asio::strand
~stream	asio/include/asio/ssl/stream.hpp	/^  ~stream()$/;"	f	class:asio::ssl::stream
~stream_base	asio/include/asio/ssl/stream_base.hpp	/^  ~stream_base()$/;"	f	class:asio::ssl::stream_base
~stream_core	asio/include/asio/ssl/detail/stream_core.hpp	/^  ~stream_core()$/;"	f	struct:asio::ssl::detail::stream_core
~subscriber	asio/src/examples/cpp03/timeouts/server.cpp	/^  virtual ~subscriber() {}$/;"	f	class:subscriber	file:
~thread	asio/include/asio/thread.hpp	/^  ~thread()$/;"	f	class:asio::thread
~thread_group	asio/include/asio/detail/thread_group.hpp	/^  ~thread_group()$/;"	f	class:asio::detail::thread_group
~thread_info_base	asio/include/asio/detail/thread_info_base.hpp	/^  ~thread_info_base()$/;"	f	class:asio::detail::thread_info_base
~timer_queue_base	asio/include/asio/detail/timer_queue_base.hpp	/^  virtual ~timer_queue_base() {}$/;"	f	class:asio::detail::timer_queue_base
~unique_lock_adapter	asio/include/asio/detail/std_event.hpp	/^    ~unique_lock_adapter()$/;"	f	struct:asio::detail::std_event::unique_lock_adapter
~verify_callback_base	asio/include/asio/ssl/detail/verify_callback.hpp	/^  virtual ~verify_callback_base()$/;"	f	class:asio::ssl::detail::verify_callback_base
~waiter	asio/include/asio/detail/std_event.hpp	/^    ~waiter()$/;"	f	class:asio::detail::std_event::waiter
~win_fd_set_adapter	asio/include/asio/detail/win_fd_set_adapter.hpp	/^  ~win_fd_set_adapter()$/;"	f	class:asio::detail::win_fd_set_adapter
~win_fenced_block	asio/include/asio/detail/win_fenced_block.hpp	/^  ~win_fenced_block()$/;"	f	class:asio::detail::win_fenced_block
~win_global_impl	asio/include/asio/detail/win_global.hpp	/^  ~win_global_impl()$/;"	f	struct:asio::detail::win_global_impl
~win_iocp_operation	asio/include/asio/detail/win_iocp_operation.hpp	/^  ~win_iocp_operation()$/;"	f	class:asio::detail::win_iocp_operation
~win_iocp_overlapped_ptr	asio/include/asio/detail/win_iocp_overlapped_ptr.hpp	/^  ~win_iocp_overlapped_ptr()$/;"	f	class:asio::detail::win_iocp_overlapped_ptr
~win_mutex	asio/include/asio/detail/win_mutex.hpp	/^  ~win_mutex()$/;"	f	class:asio::detail::win_mutex
~win_tss_ptr	asio/include/asio/detail/win_tss_ptr.hpp	/^  ~win_tss_ptr()$/;"	f	class:asio::detail::win_tss_ptr
~winapp_thread	asio/include/asio/detail/winapp_thread.hpp	/^  ~winapp_thread()$/;"	f	class:asio::detail::winapp_thread
~wince_thread	asio/include/asio/detail/wince_thread.hpp	/^  ~wince_thread()$/;"	f	class:asio::detail::wince_thread
~winrt_async_manager	asio/include/asio/detail/winrt_async_manager.hpp	/^  ~winrt_async_manager()$/;"	f	class:asio::detail::winrt_async_manager
~winrt_resolver_service	asio/include/asio/detail/winrt_resolver_service.hpp	/^  ~winrt_resolver_service()$/;"	f	class:asio::detail::winrt_resolver_service
~winsock_init	asio/include/asio/detail/winsock_init.hpp	/^  ~winsock_init()$/;"	f	class:asio::detail::winsock_init
~work	asio/include/asio/impl/io_context.hpp	/^inline io_context::work::~work()$/;"	f	class:asio::io_context::work
