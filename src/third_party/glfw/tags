!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
#glfwhome	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	i
#glfwhome:hover	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	i
#main-menu	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	i
#main-menu a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
#main-menu a:hover	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
#main-menu a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
#main-menu li	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
#main-menu li ul.sm-nowrap li a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
#main-menu li ul.sm-nowrap li a:hover	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
#main-nav	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	i
#nav-path	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	i
#titlearea	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	i
#top	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	i
.ah	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.attention a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.attention a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.attention code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.bug a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.bug a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.bug code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.contents	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.contents a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.deprecated a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.deprecated a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.deprecated code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.directory .levels	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.directory .levels span	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.directory tr.even	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.doxtable code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.doxtable tr:nth-child(even)	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.el	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.footer	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.glfwheader	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.glfwnavbar	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.glfwnavbar a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.glfwnavbar a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.glfwnavbar li	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.invariant a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.invariant a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.invariant code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.levels span	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.line	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.lineno a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.lineno a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.markdownTable code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.markdownTableRowEven	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.mdescLeft	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.mdescRight	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.memItemLeft	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.memItemRight	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.memSeparator	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.memdoc	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.memname	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.memproto	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.memtitle	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.note a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.note a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.note code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.paramname	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.post a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.post a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.post code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.pre a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.pre a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.pre code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.reflist dt a.el	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.sm-dox a span.sub-arrow	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox a span.sub-arrow:active	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox a span.sub-arrow:focus	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox a span.sub-arrow:hover	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox a.highlighted	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox a:active	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.sm-dox a:focus	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.sm-dox a:hover	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.sm-dox a:hover span.sub-arrow	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox ul a span.sub-arrow:active	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox ul a span.sub-arrow:focus	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox ul a span.sub-arrow:hover	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox ul a:hover	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.sm-dox ul a:hover span.sub-arrow	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
.sm-dox ul.sm-nowrap a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.test a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.test a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.test code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.todo a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.todo a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.todo code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.warning a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.warning a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
.warning code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
ACCUMALPHABITS	tests/glfwinfo.c	/^           ACCUMREDBITS, ACCUMGREENBITS, ACCUMBLUEBITS, ACCUMALPHABITS,$/;"	e	enum:main::__anon6b8c80140103	file:
ACCUMBLUEBITS	tests/glfwinfo.c	/^           ACCUMREDBITS, ACCUMGREENBITS, ACCUMBLUEBITS, ACCUMALPHABITS,$/;"	e	enum:main::__anon6b8c80140103	file:
ACCUMGREENBITS	tests/glfwinfo.c	/^           ACCUMREDBITS, ACCUMGREENBITS, ACCUMBLUEBITS, ACCUMALPHABITS,$/;"	e	enum:main::__anon6b8c80140103	file:
ACCUMREDBITS	tests/glfwinfo.c	/^           ACCUMREDBITS, ACCUMGREENBITS, ACCUMBLUEBITS, ACCUMALPHABITS,$/;"	e	enum:main::__anon6b8c80140103	file:
ALPHABITS	tests/glfwinfo.c	/^           REDBITS, GREENBITS, BLUEBITS, ALPHABITS, DEPTHBITS, STENCILBITS,$/;"	e	enum:main::__anon6b8c80140103	file:
ANIMATION_SPEED	examples/boing.c	/^#define ANIMATION_SPEED /;"	d	file:
ANIMATION_SPEED	examples/wave.c	/^#define ANIMATION_SPEED /;"	d	file:
APIENTRY	include/GLFW/glfw3.h	/^  #define APIENTRY /;"	d
API_NAME_EGL	tests/glfwinfo.c	/^#define API_NAME_EGL /;"	d	file:
API_NAME_NATIVE	tests/glfwinfo.c	/^#define API_NAME_NATIVE /;"	d	file:
API_NAME_OPENGL	tests/glfwinfo.c	/^#define API_NAME_OPENGL /;"	d	file:
API_NAME_OPENGL_ES	tests/glfwinfo.c	/^#define API_NAME_OPENGL_ES /;"	d	file:
API_NAME_OSMESA	tests/glfwinfo.c	/^#define API_NAME_OSMESA /;"	d	file:
APP_LONG_NAME	tests/triangle-vulkan.c	/^#define APP_LONG_NAME /;"	d	file:
APP_SHORT_NAME	tests/triangle-vulkan.c	/^#define APP_SHORT_NAME /;"	d	file:
ARB_context_flush_control	src/glx_context.h	/^    GLFWbool        ARB_context_flush_control;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
ARB_context_flush_control	src/wgl_context.h	/^    GLFWbool                            ARB_context_flush_control;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
ARB_create_context	src/glx_context.h	/^    GLFWbool        ARB_create_context;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
ARB_create_context	src/wgl_context.h	/^    GLFWbool                            ARB_create_context;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
ARB_create_context_no_error	src/glx_context.h	/^    GLFWbool        ARB_create_context_no_error;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
ARB_create_context_no_error	src/wgl_context.h	/^    GLFWbool                            ARB_create_context_no_error;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
ARB_create_context_profile	src/glx_context.h	/^    GLFWbool        ARB_create_context_profile;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
ARB_create_context_profile	src/wgl_context.h	/^    GLFWbool                            ARB_create_context_profile;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
ARB_create_context_robustness	src/glx_context.h	/^    GLFWbool        ARB_create_context_robustness;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
ARB_create_context_robustness	src/wgl_context.h	/^    GLFWbool                            ARB_create_context_robustness;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
ARB_framebuffer_sRGB	src/glx_context.h	/^    GLFWbool        ARB_framebuffer_sRGB;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
ARB_framebuffer_sRGB	src/wgl_context.h	/^    GLFWbool                            ARB_framebuffer_sRGB;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
ARB_multisample	src/glx_context.h	/^    GLFWbool        ARB_multisample;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
ARB_multisample	src/wgl_context.h	/^    GLFWbool                            ARB_multisample;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
ARB_pixel_format	src/wgl_context.h	/^    GLFWbool                            ARB_pixel_format;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
ARRAY_SIZE	tests/triangle-vulkan.c	/^#define ARRAY_SIZE(/;"	d	file:
ATOM_PAIR	src/x11_platform.h	/^    Atom            ATOM_PAIR;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
AUXBUFFERS	tests/glfwinfo.c	/^           AUXBUFFERS, SAMPLES, STEREO, SRGB, SINGLEBUFFER, NOERROR_SRSLY,$/;"	e	enum:main::__anon6b8c80140103	file:
Acknowledgements	README.md	/^## Acknowledgements$/;"	s
AdjustWindowRectExForDpi	src/win32_platform.h	/^#define AdjustWindowRectExForDpi /;"	d
AdjustWindowRectExForDpi_	src/win32_platform.h	/^        PFN_AdjustWindowRectExForDpi    AdjustWindowRectExForDpi_;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890808	typeref:typename:PFN_AdjustWindowRectExForDpi
AllocGamma	src/x11_platform.h	/^        PFN_XRRAllocGamma AllocGamma;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRAllocGamma
Arrow2Lend	docs/spaces.svg	/^       style="overflow:visible;">$/;"	d
Arrow2Lend	docs/spaces.svg	/^       style="overflow:visible;">$/;"	i
Asking a question	docs/CONTRIBUTING.md	/^## Asking a question$/;"	s
BATCH_PARTICLES	examples/particles.c	/^#define BATCH_PARTICLES /;"	d	file:
BATTERY_DEVTYPE_GAMEPAD	deps/mingw/xinput.h	/^#define BATTERY_DEVTYPE_GAMEPAD /;"	d
BATTERY_DEVTYPE_HEADSET	deps/mingw/xinput.h	/^#define BATTERY_DEVTYPE_HEADSET /;"	d
BATTERY_LEVEL_EMPTY	deps/mingw/xinput.h	/^#define BATTERY_LEVEL_EMPTY /;"	d
BATTERY_LEVEL_FULL	deps/mingw/xinput.h	/^#define BATTERY_LEVEL_FULL /;"	d
BATTERY_LEVEL_LOW	deps/mingw/xinput.h	/^#define BATTERY_LEVEL_LOW /;"	d
BATTERY_LEVEL_MEDIUM	deps/mingw/xinput.h	/^#define BATTERY_LEVEL_MEDIUM /;"	d
BATTERY_TYPE_ALKALINE	deps/mingw/xinput.h	/^#define BATTERY_TYPE_ALKALINE /;"	d
BATTERY_TYPE_DISCONNECTED	deps/mingw/xinput.h	/^#define BATTERY_TYPE_DISCONNECTED /;"	d
BATTERY_TYPE_NIMH	deps/mingw/xinput.h	/^#define BATTERY_TYPE_NIMH /;"	d
BATTERY_TYPE_UNKNOWN	deps/mingw/xinput.h	/^#define BATTERY_TYPE_UNKNOWN /;"	d
BATTERY_TYPE_WIRED	deps/mingw/xinput.h	/^#define BATTERY_TYPE_WIRED /;"	d
BEHAVIOR	tests/glfwinfo.c	/^    enum { CLIENT, CONTEXT, BEHAVIOR, DEBUG_CONTEXT, FORWARD, HELP,$/;"	e	enum:main::__anon6b8c80140103	file:
BEHAVIOR_NAME_FLUSH	tests/glfwinfo.c	/^#define BEHAVIOR_NAME_FLUSH /;"	d	file:
BEHAVIOR_NAME_NONE	tests/glfwinfo.c	/^#define BEHAVIOR_NAME_NONE /;"	d	file:
BIRTH_INTERVAL	examples/particles.c	/^#define BIRTH_INTERVAL /;"	d	file:
BLUEBITS	tests/glfwinfo.c	/^           REDBITS, GREENBITS, BLUEBITS, ALPHABITS, DEPTHBITS, STENCILBITS,$/;"	e	enum:main::__anon6b8c80140103	file:
BOING_DEBUG	examples/boing.c	/^#define BOING_DEBUG /;"	d	file:
BOUNCE_HEIGHT	examples/boing.c	/^#define BOUNCE_HEIGHT /;"	d	file:
BOUNCE_WIDTH	examples/boing.c	/^#define BOUNCE_WIDTH /;"	d	file:
BUILD_SHARED_LIBS	CMakeLists.txt	/^option(BUILD_SHARED_LIBS "Build shared libraries" OFF)$/;"	D
BatteryLevel	deps/mingw/xinput.h	/^    BYTE BatteryLevel;$/;"	m	struct:_XINPUT_BATTERY_INFORMATION	typeref:typename:BYTE
BatteryType	deps/mingw/xinput.h	/^    BYTE BatteryType;$/;"	m	struct:_XINPUT_BATTERY_INFORMATION	typeref:typename:BYTE
Big	deps/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s	struct:nk_alignof
BindAPI	src/egl_context.h	/^    PFN_eglBindAPI              BindAPI;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglBindAPI
BounceBall	examples/boing.c	/^void BounceBall( double delta_t )$/;"	f	typeref:typename:void
BreakCallback	tests/triangle-vulkan.c	/^BreakCallback(VkFlags msgFlags, VkDebugReportObjectTypeEXT objType,$/;"	f	typeref:typename:VKAPI_ATTR VkBool32 VKAPI_CALL
Button6	src/x11_window.c	/^#define Button6 /;"	d	file:
Button7	src/x11_window.c	/^#define Button7 /;"	d	file:
CALLBACK	include/GLFW/glfw3.h	/^ #define CALLBACK /;"	d
CFBundleDevelopmentRegion	CMake/Info.plist.in	/^	<key>CFBundleDevelopmentRegion<\/key>$/;"	k
CFBundleExecutable	CMake/Info.plist.in	/^	<key>CFBundleExecutable<\/key>$/;"	k
CFBundleGetInfoString	CMake/Info.plist.in	/^	<key>CFBundleGetInfoString<\/key>$/;"	k
CFBundleIconFile	CMake/Info.plist.in	/^	<key>CFBundleIconFile<\/key>$/;"	k
CFBundleIdentifier	CMake/Info.plist.in	/^	<key>CFBundleIdentifier<\/key>$/;"	k
CFBundleInfoDictionaryVersion	CMake/Info.plist.in	/^	<key>CFBundleInfoDictionaryVersion<\/key>$/;"	k
CFBundleLongVersionString	CMake/Info.plist.in	/^	<key>CFBundleLongVersionString<\/key>$/;"	k
CFBundleName	CMake/Info.plist.in	/^	<key>CFBundleName<\/key>$/;"	k
CFBundlePackageType	CMake/Info.plist.in	/^	<key>CFBundlePackageType<\/key>$/;"	k
CFBundleShortVersionString	CMake/Info.plist.in	/^	<key>CFBundleShortVersionString<\/key>$/;"	k
CFBundleSignature	CMake/Info.plist.in	/^	<key>CFBundleSignature<\/key>$/;"	k
CFBundleVersion	CMake/Info.plist.in	/^	<key>CFBundleVersion<\/key>$/;"	k
CFStringRef	src/cocoa_platform.h	/^typedef void* (*PFN_TISGetInputSourceProperty)(TISInputSourceRef,CFStringRef);$/;"	t
CHANGEFILTERSTRUCT	src/win32_platform.h	/^} CHANGEFILTERSTRUCT;$/;"	t	typeref:struct:__anon622bd5890108
CLIENT	tests/glfwinfo.c	/^    enum { CLIENT, CONTEXT, BEHAVIOR, DEBUG_CONTEXT, FORWARD, HELP,$/;"	e	enum:main::__anon6b8c80140103	file:
CLIPBOARD	src/x11_platform.h	/^    Atom            CLIPBOARD;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
CLIPBOARD_MANAGER	src/x11_platform.h	/^    Atom            CLIPBOARD_MANAGER;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
CLOCK_REALTIME	deps/tinycthread.h	/^  #define CLOCK_REALTIME /;"	d
CMAKE_CXX_COMPILER	CMake/i686-w64-mingw32-clang.cmake	/^SET(CMAKE_CXX_COMPILER   "i686-w64-mingw32-clang++")$/;"	v
CMAKE_CXX_COMPILER	CMake/i686-w64-mingw32.cmake	/^SET(CMAKE_CXX_COMPILER   "i686-w64-mingw32-g++")$/;"	v
CMAKE_CXX_COMPILER	CMake/x86_64-w64-mingw32-clang.cmake	/^SET(CMAKE_CXX_COMPILER   "x86_64-w64-mingw32-clang++")$/;"	v
CMAKE_CXX_COMPILER	CMake/x86_64-w64-mingw32.cmake	/^SET(CMAKE_CXX_COMPILER   "x86_64-w64-mingw32-g++")$/;"	v
CMAKE_C_COMPILER	CMake/i686-w64-mingw32-clang.cmake	/^SET(CMAKE_C_COMPILER     "i686-w64-mingw32-clang")$/;"	v
CMAKE_C_COMPILER	CMake/i686-w64-mingw32.cmake	/^SET(CMAKE_C_COMPILER     "i686-w64-mingw32-gcc")$/;"	v
CMAKE_C_COMPILER	CMake/x86_64-w64-mingw32-clang.cmake	/^SET(CMAKE_C_COMPILER     "x86_64-w64-mingw32-clang")$/;"	v
CMAKE_C_COMPILER	CMake/x86_64-w64-mingw32.cmake	/^SET(CMAKE_C_COMPILER     "x86_64-w64-mingw32-gcc")$/;"	v
CMAKE_FIND_ROOT_PATH	CMake/i686-w64-mingw32-clang.cmake	/^SET(CMAKE_FIND_ROOT_PATH "\/usr\/i686-w64-mingw32")$/;"	v
CMAKE_FIND_ROOT_PATH	CMake/i686-w64-mingw32.cmake	/^SET(CMAKE_FIND_ROOT_PATH "\/usr\/i686-w64-mingw32")$/;"	v
CMAKE_FIND_ROOT_PATH	CMake/x86_64-w64-mingw32-clang.cmake	/^SET(CMAKE_FIND_ROOT_PATH "\/usr\/x86_64-w64-mingw32")$/;"	v
CMAKE_FIND_ROOT_PATH	CMake/x86_64-w64-mingw32.cmake	/^SET(CMAKE_FIND_ROOT_PATH "\/usr\/x86_64-w64-mingw32")$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_INCLUDE	CMake/i686-w64-mingw32-clang.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_INCLUDE	CMake/i686-w64-mingw32.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_INCLUDE	CMake/x86_64-w64-mingw32-clang.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_INCLUDE	CMake/x86_64-w64-mingw32.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_LIBRARY	CMake/i686-w64-mingw32-clang.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_LIBRARY	CMake/i686-w64-mingw32.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_LIBRARY	CMake/x86_64-w64-mingw32-clang.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_LIBRARY	CMake/x86_64-w64-mingw32.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_PROGRAM	CMake/i686-w64-mingw32-clang.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_PROGRAM	CMake/i686-w64-mingw32.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_PROGRAM	CMake/x86_64-w64-mingw32-clang.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)$/;"	v
CMAKE_FIND_ROOT_PATH_MODE_PROGRAM	CMake/x86_64-w64-mingw32.cmake	/^SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)$/;"	v
CMAKE_LEGACY_CYGWIN_WIN32	CMakeLists.txt	/^set(CMAKE_LEGACY_CYGWIN_WIN32 OFF)$/;"	v
CMAKE_RANLIB	CMake/i686-w64-mingw32-clang.cmake	/^SET(CMAKE_RANLIB         "i686-w64-mingw32-ranlib")$/;"	v
CMAKE_RANLIB	CMake/i686-w64-mingw32.cmake	/^SET(CMAKE_RANLIB         "i686-w64-mingw32-ranlib")$/;"	v
CMAKE_RANLIB	CMake/x86_64-w64-mingw32-clang.cmake	/^SET(CMAKE_RANLIB         "x86_64-w64-mingw32-ranlib")$/;"	v
CMAKE_RANLIB	CMake/x86_64-w64-mingw32.cmake	/^SET(CMAKE_RANLIB         "x86_64-w64-mingw32-ranlib")$/;"	v
CMAKE_RC_COMPILER	CMake/i686-w64-mingw32-clang.cmake	/^SET(CMAKE_RC_COMPILER    "i686-w64-mingw32-windres")$/;"	v
CMAKE_RC_COMPILER	CMake/i686-w64-mingw32.cmake	/^SET(CMAKE_RC_COMPILER    "i686-w64-mingw32-windres")$/;"	v
CMAKE_RC_COMPILER	CMake/x86_64-w64-mingw32-clang.cmake	/^SET(CMAKE_RC_COMPILER    "x86_64-w64-mingw32-windres")$/;"	v
CMAKE_RC_COMPILER	CMake/x86_64-w64-mingw32.cmake	/^SET(CMAKE_RC_COMPILER    "x86_64-w64-mingw32-windres")$/;"	v
CMAKE_REQUIRED_FLAGS	CMakeLists.txt	/^    set(CMAKE_REQUIRED_FLAGS "-Wl,--dynamicbase")$/;"	v
CMAKE_REQUIRED_FLAGS	CMakeLists.txt	/^    set(CMAKE_REQUIRED_FLAGS "-Wl,--high-entropy-va")$/;"	v
CMAKE_REQUIRED_FLAGS	CMakeLists.txt	/^    set(CMAKE_REQUIRED_FLAGS "-Wl,--nxcompat")$/;"	v
CMAKE_SHARED_LINKER_FLAGS	CMakeLists.txt	/^        set(CMAKE_SHARED_LINKER_FLAGS "-Wl,--dynamicbase ${CMAKE_SHARED_LINKER_FLAGS}")$/;"	v
CMAKE_SHARED_LINKER_FLAGS	CMakeLists.txt	/^        set(CMAKE_SHARED_LINKER_FLAGS "-Wl,--high-entropy-va ${CMAKE_SHARED_LINKER_FLAGS}")$/;"	v
CMAKE_SHARED_LINKER_FLAGS	CMakeLists.txt	/^        set(CMAKE_SHARED_LINKER_FLAGS "-Wl,--nxcompat ${CMAKE_SHARED_LINKER_FLAGS}")$/;"	v
CMAKE_SYSTEM_NAME	CMake/i686-w64-mingw32-clang.cmake	/^SET(CMAKE_SYSTEM_NAME    Windows) # Target system name$/;"	v
CMAKE_SYSTEM_NAME	CMake/i686-w64-mingw32.cmake	/^SET(CMAKE_SYSTEM_NAME    Windows) # Target system name$/;"	v
CMAKE_SYSTEM_NAME	CMake/x86_64-w64-mingw32-clang.cmake	/^SET(CMAKE_SYSTEM_NAME    Windows) # Target system name$/;"	v
CMAKE_SYSTEM_NAME	CMake/x86_64-w64-mingw32.cmake	/^SET(CMAKE_SYSTEM_NAME    Windows) # Target system name$/;"	v
CMAKE_SYSTEM_VERSION	CMake/i686-w64-mingw32-clang.cmake	/^SET(CMAKE_SYSTEM_VERSION 1)$/;"	v
CMAKE_SYSTEM_VERSION	CMake/i686-w64-mingw32.cmake	/^SET(CMAKE_SYSTEM_VERSION 1)$/;"	v
CMAKE_SYSTEM_VERSION	CMake/x86_64-w64-mingw32-clang.cmake	/^SET(CMAKE_SYSTEM_VERSION 1)$/;"	v
CMAKE_SYSTEM_VERSION	CMake/x86_64-w64-mingw32.cmake	/^SET(CMAKE_SYSTEM_VERSION 1)$/;"	v
COMPOUND_STRING	src/x11_platform.h	/^    Atom            COMPOUND_STRING;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
COM_NO_WINDOWS_H	deps/mingw/dinput.h	/^#define COM_NO_WINDOWS_H$/;"	d
CONSOLE_BINARIES	examples/CMakeLists.txt	/^set(CONSOLE_BINARIES offscreen)$/;"	v
CONSOLE_BINARIES	tests/CMakeLists.txt	/^set(CONSOLE_BINARIES clipboard events msaa glfwinfo iconify monitors reopen$/;"	v
CONTEXT	tests/glfwinfo.c	/^    enum { CLIENT, CONTEXT, BEHAVIOR, DEBUG_CONTEXT, FORWARD, HELP,$/;"	e	enum:main::__anon6b8c80140103	file:
CPOINT	deps/mingw/dinput.h	/^} CPOINT, *PCPOINT;$/;"	t	typeref:struct:_CPOINT
CSResourcesFileMapped	CMake/Info.plist.in	/^	<key>CSResourcesFileMapped<\/key>$/;"	k
CURSOR_FRAME_COUNT	tests/cursor.c	/^#define CURSOR_FRAME_COUNT /;"	d	file:
ChangeWindowMessageFilterEx	src/win32_platform.h	/^#define ChangeWindowMessageFilterEx /;"	d
ChangeWindowMessageFilterEx_	src/win32_platform.h	/^        PFN_ChangeWindowMessageFilterEx ChangeWindowMessageFilterEx_;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890808	typeref:typename:PFN_ChangeWindowMessageFilterEx
Changelog	README.md	/^## Changelog$/;"	s
Compiling GLFW	README.md	/^## Compiling GLFW$/;"	s
Contact	README.md	/^## Contact$/;"	s
Contents	docs/CONTRIBUTING.md	/^## Contents$/;"	s
Contributing a bug fix	docs/CONTRIBUTING.md	/^## Contributing a bug fix$/;"	s
Contributing a feature	docs/CONTRIBUTING.md	/^## Contributing a feature$/;"	s
Contributing to GLFW	README.md	/^## Contributing to GLFW$/;"	s
Contribution Guide	docs/CONTRIBUTING.md	/^# Contribution Guide$/;"	c
CopyCurrentKeyboardLayoutInputSource	src/cocoa_platform.h	/^        PFN_TISCopyCurrentKeyboardLayoutInputSource CopyCurrentKeyboardLayoutInputSource;$/;"	E
Create	src/win32_platform.h	/^        PFN_DirectInput8Create          Create;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890608	typeref:typename:PFN_DirectInput8Create
CreateContext	src/egl_context.h	/^    PFN_eglCreateContext        CreateContext;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglCreateContext
CreateContext	src/wgl_context.h	/^    PFN_wglCreateContext                CreateContext;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFN_wglCreateContext
CreateContextAttribs	src/osmesa_context.h	/^    PFN_OSMesaCreateContextAttribs  CreateContextAttribs;$/;"	m	struct:_GLFWlibraryOSMesa	typeref:typename:PFN_OSMesaCreateContextAttribs
CreateContextAttribsARB	src/glx_context.h	/^    PFNGLXCREATECONTEXTATTRIBSARBPROC   CreateContextAttribsARB;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXCREATECONTEXTATTRIBSARBPROC
CreateContextAttribsARB	src/wgl_context.h	/^    PFNWGLCREATECONTEXTATTRIBSARBPROC   CreateContextAttribsARB;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFNWGLCREATECONTEXTATTRIBSARBPROC
CreateContextExt	src/osmesa_context.h	/^    PFN_OSMesaCreateContextExt      CreateContextExt;$/;"	m	struct:_GLFWlibraryOSMesa	typeref:typename:PFN_OSMesaCreateContextExt
CreateNewContext	src/glx_context.h	/^    PFNGLXCREATENEWCONTEXTPROC          CreateNewContext;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXCREATENEWCONTEXTPROC
CreateWindow	src/glx_context.h	/^    PFNGLXCREATEWINDOWPROC              CreateWindow;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXCREATEWINDOWPROC
CreateWindowSurface	src/egl_context.h	/^    PFN_eglCreateWindowSurface  CreateWindowSurface;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglCreateWindowSurface
CrossProduct	examples/boing.c	/^void CrossProduct( vertex_t a, vertex_t b, vertex_t c, vertex_t *n )$/;"	f	typeref:typename:void
D3DCOLOR	deps/mingw/dinput.h	/^typedef DWORD D3DCOLOR;$/;"	t	typeref:typename:DWORD
D3DCOLOR_DEFINED	deps/mingw/dinput.h	/^#define D3DCOLOR_DEFINED$/;"	d
DEBUG_CONTEXT	tests/glfwinfo.c	/^    enum { CLIENT, CONTEXT, BEHAVIOR, DEBUG_CONTEXT, FORWARD, HELP,$/;"	e	enum:main::__anon6b8c80140103	file:
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput2A,IDirectInputA)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput2W,IDirectInputW)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput7A,IDirectInput2A)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput7W,IDirectInput2W)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput8A,IUnknown)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput8W,IUnknown)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputA,IUnknown)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice2A,IDirectInputDeviceA)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice2W,IDirectInputDeviceW)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice7A,IDirectInputDevice2A)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice7W,IDirectInputDevice2W)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice8A,IDirectInputDevice7A)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice8W,IDirectInputDevice7W)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDeviceA,IUnknown)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDeviceW,IUnknown)$/;"	f
DECLARE_INTERFACE_	deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputW,IUnknown)$/;"	f
DECL_WINELIB_TYPE_AW	deps/mingw/_mingw_dxhelper.h	/^#  define DECL_WINELIB_TYPE_AW /;"	d
DECL_WINELIB_TYPE_AW	deps/mingw/_mingw_dxhelper.h	/^#  define DECL_WINELIB_TYPE_AW(/;"	d
DECL_WINELIB_TYPE_AW	deps/mingw/dinput.h	/^DECL_WINELIB_TYPE_AW(LPDIDEVICEIMAGEINFOHEADER)$/;"	f	typeref:typename:DIDEVICEIMAGEINFOHEADER
DEMO_TEXTURE_COUNT	tests/triangle-vulkan.c	/^#define DEMO_TEXTURE_COUNT /;"	d	file:
DEPTHBITS	tests/glfwinfo.c	/^           REDBITS, GREENBITS, BLUEBITS, ALPHABITS, DEPTHBITS, STENCILBITS,$/;"	e	enum:main::__anon6b8c80140103	file:
DI8DEVCLASS_ALL	deps/mingw/dinput.h	/^#define DI8DEVCLASS_ALL /;"	d
DI8DEVCLASS_DEVICE	deps/mingw/dinput.h	/^#define DI8DEVCLASS_DEVICE /;"	d
DI8DEVCLASS_GAMECTRL	deps/mingw/dinput.h	/^#define DI8DEVCLASS_GAMECTRL /;"	d
DI8DEVCLASS_KEYBOARD	deps/mingw/dinput.h	/^#define DI8DEVCLASS_KEYBOARD /;"	d
DI8DEVCLASS_POINTER	deps/mingw/dinput.h	/^#define DI8DEVCLASS_POINTER /;"	d
DI8DEVTYPE1STPERSON_LIMITED	deps/mingw/dinput.h	/^#define DI8DEVTYPE1STPERSON_LIMITED /;"	d
DI8DEVTYPE1STPERSON_SHOOTER	deps/mingw/dinput.h	/^#define DI8DEVTYPE1STPERSON_SHOOTER /;"	d
DI8DEVTYPE1STPERSON_SIXDOF	deps/mingw/dinput.h	/^#define DI8DEVTYPE1STPERSON_SIXDOF /;"	d
DI8DEVTYPE1STPERSON_UNKNOWN	deps/mingw/dinput.h	/^#define DI8DEVTYPE1STPERSON_UNKNOWN /;"	d
DI8DEVTYPEDEVICECTRL_COMMSSELECTION	deps/mingw/dinput.h	/^#define DI8DEVTYPEDEVICECTRL_COMMSSELECTION /;"	d
DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED	deps/mingw/dinput.h	/^#define DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED /;"	d
DI8DEVTYPEDEVICECTRL_UNKNOWN	deps/mingw/dinput.h	/^#define DI8DEVTYPEDEVICECTRL_UNKNOWN /;"	d
DI8DEVTYPEDRIVING_COMBINEDPEDALS	deps/mingw/dinput.h	/^#define DI8DEVTYPEDRIVING_COMBINEDPEDALS /;"	d
DI8DEVTYPEDRIVING_DUALPEDALS	deps/mingw/dinput.h	/^#define DI8DEVTYPEDRIVING_DUALPEDALS /;"	d
DI8DEVTYPEDRIVING_HANDHELD	deps/mingw/dinput.h	/^#define DI8DEVTYPEDRIVING_HANDHELD /;"	d
DI8DEVTYPEDRIVING_LIMITED	deps/mingw/dinput.h	/^#define DI8DEVTYPEDRIVING_LIMITED /;"	d
DI8DEVTYPEDRIVING_THREEPEDALS	deps/mingw/dinput.h	/^#define DI8DEVTYPEDRIVING_THREEPEDALS /;"	d
DI8DEVTYPEFLIGHT_LIMITED	deps/mingw/dinput.h	/^#define DI8DEVTYPEFLIGHT_LIMITED /;"	d
DI8DEVTYPEFLIGHT_RC	deps/mingw/dinput.h	/^#define DI8DEVTYPEFLIGHT_RC /;"	d
DI8DEVTYPEFLIGHT_STICK	deps/mingw/dinput.h	/^#define DI8DEVTYPEFLIGHT_STICK /;"	d
DI8DEVTYPEFLIGHT_YOKE	deps/mingw/dinput.h	/^#define DI8DEVTYPEFLIGHT_YOKE /;"	d
DI8DEVTYPEGAMEPAD_LIMITED	deps/mingw/dinput.h	/^#define DI8DEVTYPEGAMEPAD_LIMITED /;"	d
DI8DEVTYPEGAMEPAD_STANDARD	deps/mingw/dinput.h	/^#define DI8DEVTYPEGAMEPAD_STANDARD /;"	d
DI8DEVTYPEGAMEPAD_TILT	deps/mingw/dinput.h	/^#define DI8DEVTYPEGAMEPAD_TILT /;"	d
DI8DEVTYPEJOYSTICK_LIMITED	deps/mingw/dinput.h	/^#define DI8DEVTYPEJOYSTICK_LIMITED /;"	d
DI8DEVTYPEJOYSTICK_STANDARD	deps/mingw/dinput.h	/^#define DI8DEVTYPEJOYSTICK_STANDARD /;"	d
DI8DEVTYPEKEYBOARD_J3100	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_J3100 /;"	d
DI8DEVTYPEKEYBOARD_JAPAN106	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_JAPAN106 /;"	d
DI8DEVTYPEKEYBOARD_JAPANAX	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_JAPANAX /;"	d
DI8DEVTYPEKEYBOARD_NEC98	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_NEC98 /;"	d
DI8DEVTYPEKEYBOARD_NEC98106	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_NEC98106 /;"	d
DI8DEVTYPEKEYBOARD_NEC98LAPTOP	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_NEC98LAPTOP /;"	d
DI8DEVTYPEKEYBOARD_NOKIA1050	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_NOKIA1050 /;"	d
DI8DEVTYPEKEYBOARD_NOKIA9140	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_NOKIA9140 /;"	d
DI8DEVTYPEKEYBOARD_OLIVETTI	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_OLIVETTI /;"	d
DI8DEVTYPEKEYBOARD_PCAT	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_PCAT /;"	d
DI8DEVTYPEKEYBOARD_PCENH	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_PCENH /;"	d
DI8DEVTYPEKEYBOARD_PCXT	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_PCXT /;"	d
DI8DEVTYPEKEYBOARD_UNKNOWN	deps/mingw/dinput.h	/^#define DI8DEVTYPEKEYBOARD_UNKNOWN /;"	d
DI8DEVTYPEMOUSE_ABSOLUTE	deps/mingw/dinput.h	/^#define DI8DEVTYPEMOUSE_ABSOLUTE /;"	d
DI8DEVTYPEMOUSE_FINGERSTICK	deps/mingw/dinput.h	/^#define DI8DEVTYPEMOUSE_FINGERSTICK /;"	d
DI8DEVTYPEMOUSE_TOUCHPAD	deps/mingw/dinput.h	/^#define DI8DEVTYPEMOUSE_TOUCHPAD /;"	d
DI8DEVTYPEMOUSE_TRACKBALL	deps/mingw/dinput.h	/^#define DI8DEVTYPEMOUSE_TRACKBALL /;"	d
DI8DEVTYPEMOUSE_TRADITIONAL	deps/mingw/dinput.h	/^#define DI8DEVTYPEMOUSE_TRADITIONAL /;"	d
DI8DEVTYPEMOUSE_UNKNOWN	deps/mingw/dinput.h	/^#define DI8DEVTYPEMOUSE_UNKNOWN /;"	d
DI8DEVTYPEREMOTE_UNKNOWN	deps/mingw/dinput.h	/^#define DI8DEVTYPEREMOTE_UNKNOWN /;"	d
DI8DEVTYPESCREENPTR_LIGHTGUN	deps/mingw/dinput.h	/^#define DI8DEVTYPESCREENPTR_LIGHTGUN /;"	d
DI8DEVTYPESCREENPTR_LIGHTPEN	deps/mingw/dinput.h	/^#define DI8DEVTYPESCREENPTR_LIGHTPEN /;"	d
DI8DEVTYPESCREENPTR_TOUCH	deps/mingw/dinput.h	/^#define DI8DEVTYPESCREENPTR_TOUCH /;"	d
DI8DEVTYPESCREENPTR_UNKNOWN	deps/mingw/dinput.h	/^#define DI8DEVTYPESCREENPTR_UNKNOWN /;"	d
DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER /;"	d
DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS /;"	d
DI8DEVTYPESUPPLEMENTAL_DUALPEDALS	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_DUALPEDALS /;"	d
DI8DEVTYPESUPPLEMENTAL_HANDTRACKER	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_HANDTRACKER /;"	d
DI8DEVTYPESUPPLEMENTAL_HEADTRACKER	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_HEADTRACKER /;"	d
DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS /;"	d
DI8DEVTYPESUPPLEMENTAL_SHIFTER	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_SHIFTER /;"	d
DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE /;"	d
DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE /;"	d
DI8DEVTYPESUPPLEMENTAL_THREEPEDALS	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_THREEPEDALS /;"	d
DI8DEVTYPESUPPLEMENTAL_THROTTLE	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_THROTTLE /;"	d
DI8DEVTYPESUPPLEMENTAL_UNKNOWN	deps/mingw/dinput.h	/^#define DI8DEVTYPESUPPLEMENTAL_UNKNOWN /;"	d
DI8DEVTYPE_1STPERSON	deps/mingw/dinput.h	/^#define DI8DEVTYPE_1STPERSON /;"	d
DI8DEVTYPE_DEVICE	deps/mingw/dinput.h	/^#define DI8DEVTYPE_DEVICE /;"	d
DI8DEVTYPE_DEVICECTRL	deps/mingw/dinput.h	/^#define DI8DEVTYPE_DEVICECTRL /;"	d
DI8DEVTYPE_DRIVING	deps/mingw/dinput.h	/^#define DI8DEVTYPE_DRIVING /;"	d
DI8DEVTYPE_FLIGHT	deps/mingw/dinput.h	/^#define DI8DEVTYPE_FLIGHT /;"	d
DI8DEVTYPE_GAMEPAD	deps/mingw/dinput.h	/^#define DI8DEVTYPE_GAMEPAD /;"	d
DI8DEVTYPE_JOYSTICK	deps/mingw/dinput.h	/^#define DI8DEVTYPE_JOYSTICK /;"	d
DI8DEVTYPE_KEYBOARD	deps/mingw/dinput.h	/^#define DI8DEVTYPE_KEYBOARD /;"	d
DI8DEVTYPE_LIMITEDGAMESUBTYPE	deps/mingw/dinput.h	/^#define DI8DEVTYPE_LIMITEDGAMESUBTYPE /;"	d
DI8DEVTYPE_MOUSE	deps/mingw/dinput.h	/^#define DI8DEVTYPE_MOUSE /;"	d
DI8DEVTYPE_REMOTE	deps/mingw/dinput.h	/^#define DI8DEVTYPE_REMOTE /;"	d
DI8DEVTYPE_SCREENPOINTER	deps/mingw/dinput.h	/^#define DI8DEVTYPE_SCREENPOINTER /;"	d
DI8DEVTYPE_SUPPLEMENTAL	deps/mingw/dinput.h	/^#define DI8DEVTYPE_SUPPLEMENTAL /;"	d
DIACTIONA	deps/mingw/dinput.h	/^} DIACTIONA, *LPDIACTIONA;$/;"	t	typeref:struct:_DIACTIONA
DIACTIONFORMATA	deps/mingw/dinput.h	/^} DIACTIONFORMATA, *LPDIACTIONFORMATA;$/;"	t	typeref:struct:_DIACTIONFORMATA
DIACTIONFORMATW	deps/mingw/dinput.h	/^} DIACTIONFORMATW, *LPDIACTIONFORMATW;$/;"	t	typeref:struct:_DIACTIONFORMATW
DIACTIONW	deps/mingw/dinput.h	/^} DIACTIONW, *LPDIACTIONW;$/;"	t	typeref:struct:_DIACTIONW
DIAFTS_NEWDEVICEHIGH	deps/mingw/dinput.h	/^#define DIAFTS_NEWDEVICEHIGH	/;"	d
DIAFTS_NEWDEVICELOW	deps/mingw/dinput.h	/^#define DIAFTS_NEWDEVICELOW	/;"	d
DIAFTS_UNUSEDDEVICEHIGH	deps/mingw/dinput.h	/^#define DIAFTS_UNUSEDDEVICEHIGH	/;"	d
DIAFTS_UNUSEDDEVICELOW	deps/mingw/dinput.h	/^#define DIAFTS_UNUSEDDEVICELOW	/;"	d
DIAH_APPREQUESTED	deps/mingw/dinput.h	/^#define DIAH_APPREQUESTED	/;"	d
DIAH_DEFAULT	deps/mingw/dinput.h	/^#define DIAH_DEFAULT	/;"	d
DIAH_ERROR	deps/mingw/dinput.h	/^#define DIAH_ERROR	/;"	d
DIAH_HWAPP	deps/mingw/dinput.h	/^#define DIAH_HWAPP	/;"	d
DIAH_HWDEFAULT	deps/mingw/dinput.h	/^#define DIAH_HWDEFAULT	/;"	d
DIAH_UNMAPPED	deps/mingw/dinput.h	/^#define DIAH_UNMAPPED	/;"	d
DIAH_USERCONFIG	deps/mingw/dinput.h	/^#define DIAH_USERCONFIG	/;"	d
DIA_APPFIXED	deps/mingw/dinput.h	/^#define DIA_APPFIXED	/;"	d
DIA_APPMAPPED	deps/mingw/dinput.h	/^#define DIA_APPMAPPED	/;"	d
DIA_APPNOMAP	deps/mingw/dinput.h	/^#define DIA_APPNOMAP	/;"	d
DIA_FORCEFEEDBACK	deps/mingw/dinput.h	/^#define DIA_FORCEFEEDBACK	/;"	d
DIA_NORANGE	deps/mingw/dinput.h	/^#define DIA_NORANGE	/;"	d
DICD_DEFAULT	deps/mingw/dinput.h	/^#define DICD_DEFAULT	/;"	d
DICD_EDIT	deps/mingw/dinput.h	/^#define DICD_EDIT	/;"	d
DICOLORSET	deps/mingw/dinput.h	/^} DICOLORSET, *LPDICOLORSET;$/;"	t	typeref:struct:_DICOLORSET
DICONDITION	deps/mingw/dinput.h	/^typedef struct DICONDITION {$/;"	s
DICONDITION	deps/mingw/dinput.h	/^} DICONDITION, *LPDICONDITION;$/;"	t	typeref:struct:DICONDITION
DICONFIGUREDEVICESPARAMSA	deps/mingw/dinput.h	/^} DICONFIGUREDEVICESPARAMSA, *LPDICONFIGUREDEVICESPARAMSA;$/;"	t	typeref:struct:_DICONFIGUREDEVICESPARAMSA
DICONFIGUREDEVICESPARAMSW	deps/mingw/dinput.h	/^} DICONFIGUREDEVICESPARAMSW, *LPDICONFIGUREDEVICESPARAMSW;$/;"	t	typeref:struct:_DICONFIGUREDEVICESPARAMSW
DICONSTANTFORCE	deps/mingw/dinput.h	/^typedef struct DICONSTANTFORCE {$/;"	s
DICONSTANTFORCE	deps/mingw/dinput.h	/^} DICONSTANTFORCE, *LPDICONSTANTFORCE;$/;"	t	typeref:struct:DICONSTANTFORCE
DICUSTOMFORCE	deps/mingw/dinput.h	/^typedef struct DICUSTOMFORCE {$/;"	s
DICUSTOMFORCE	deps/mingw/dinput.h	/^} DICUSTOMFORCE, *LPDICUSTOMFORCE;$/;"	t	typeref:struct:DICUSTOMFORCE
DIDAL_BOTTOMALIGNED	deps/mingw/dinput.h	/^#define DIDAL_BOTTOMALIGNED	/;"	d
DIDAL_CENTERED	deps/mingw/dinput.h	/^#define DIDAL_CENTERED	/;"	d
DIDAL_LEFTALIGNED	deps/mingw/dinput.h	/^#define DIDAL_LEFTALIGNED	/;"	d
DIDAL_MIDDLE	deps/mingw/dinput.h	/^#define DIDAL_MIDDLE	/;"	d
DIDAL_RIGHTALIGNED	deps/mingw/dinput.h	/^#define DIDAL_RIGHTALIGNED	/;"	d
DIDAL_TOPALIGNED	deps/mingw/dinput.h	/^#define DIDAL_TOPALIGNED	/;"	d
DIDATAFORMAT	deps/mingw/dinput.h	/^} DIDATAFORMAT, *LPDIDATAFORMAT;$/;"	t	typeref:struct:_DIDATAFORMAT
DIDBAM_DEFAULT	deps/mingw/dinput.h	/^#define DIDBAM_DEFAULT	/;"	d
DIDBAM_HWDEFAULTS	deps/mingw/dinput.h	/^#define DIDBAM_HWDEFAULTS	/;"	d
DIDBAM_INITIALIZE	deps/mingw/dinput.h	/^#define DIDBAM_INITIALIZE	/;"	d
DIDBAM_PRESERVE	deps/mingw/dinput.h	/^#define DIDBAM_PRESERVE	/;"	d
DIDC_ALIAS	deps/mingw/dinput.h	/^#define DIDC_ALIAS	/;"	d
DIDC_ATTACHED	deps/mingw/dinput.h	/^#define DIDC_ATTACHED	/;"	d
DIDC_DEADBAND	deps/mingw/dinput.h	/^#define DIDC_DEADBAND	/;"	d
DIDC_EMULATED	deps/mingw/dinput.h	/^#define DIDC_EMULATED	/;"	d
DIDC_FFATTACK	deps/mingw/dinput.h	/^#define DIDC_FFATTACK	/;"	d
DIDC_FFFADE	deps/mingw/dinput.h	/^#define DIDC_FFFADE	/;"	d
DIDC_FORCEFEEDBACK	deps/mingw/dinput.h	/^#define DIDC_FORCEFEEDBACK	/;"	d
DIDC_HIDDEN	deps/mingw/dinput.h	/^#define DIDC_HIDDEN	/;"	d
DIDC_PHANTOM	deps/mingw/dinput.h	/^#define DIDC_PHANTOM	/;"	d
DIDC_POLLEDDATAFORMAT	deps/mingw/dinput.h	/^#define DIDC_POLLEDDATAFORMAT	/;"	d
DIDC_POLLEDDEVICE	deps/mingw/dinput.h	/^#define DIDC_POLLEDDEVICE	/;"	d
DIDC_POSNEGCOEFFICIENTS	deps/mingw/dinput.h	/^#define DIDC_POSNEGCOEFFICIENTS	/;"	d
DIDC_POSNEGSATURATION	deps/mingw/dinput.h	/^#define DIDC_POSNEGSATURATION	/;"	d
DIDC_SATURATION	deps/mingw/dinput.h	/^#define DIDC_SATURATION	/;"	d
DIDC_STARTDELAY	deps/mingw/dinput.h	/^#define DIDC_STARTDELAY	/;"	d
DIDEVCAPS	deps/mingw/dinput.h	/^typedef struct DIDEVCAPS {$/;"	s
DIDEVCAPS	deps/mingw/dinput.h	/^} DIDEVCAPS,*LPDIDEVCAPS;$/;"	t	typeref:struct:DIDEVCAPS
DIDEVCAPS_DX3	deps/mingw/dinput.h	/^typedef struct DIDEVCAPS_DX3 {$/;"	s
DIDEVCAPS_DX3	deps/mingw/dinput.h	/^} DIDEVCAPS_DX3, *LPDIDEVCAPS_DX3;$/;"	t	typeref:struct:DIDEVCAPS_DX3
DIDEVICEIMAGEINFOA	deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOA, *LPDIDEVICEIMAGEINFOA;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOA
DIDEVICEIMAGEINFOHEADERA	deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOHEADERA, *LPDIDEVICEIMAGEINFOHEADERA;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOHEADERA
DIDEVICEIMAGEINFOHEADERW	deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOHEADERW, *LPDIDEVICEIMAGEINFOHEADERW;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOHEADERW
DIDEVICEIMAGEINFOW	deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOW, *LPDIDEVICEIMAGEINFOW;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOW
DIDEVICEINSTANCEA	deps/mingw/dinput.h	/^typedef struct DIDEVICEINSTANCEA {$/;"	s
DIDEVICEINSTANCEA	deps/mingw/dinput.h	/^} DIDEVICEINSTANCEA, *LPDIDEVICEINSTANCEA;$/;"	t	typeref:struct:DIDEVICEINSTANCEA
DIDEVICEINSTANCEW	deps/mingw/dinput.h	/^typedef struct DIDEVICEINSTANCEW {$/;"	s
DIDEVICEINSTANCEW	deps/mingw/dinput.h	/^} DIDEVICEINSTANCEW, *LPDIDEVICEINSTANCEW;$/;"	t	typeref:struct:DIDEVICEINSTANCEW
DIDEVICEINSTANCE_DX3A	deps/mingw/dinput.h	/^typedef struct DIDEVICEINSTANCE_DX3A {$/;"	s
DIDEVICEINSTANCE_DX3A	deps/mingw/dinput.h	/^} DIDEVICEINSTANCE_DX3A, *LPDIDEVICEINSTANCE_DX3A;$/;"	t	typeref:struct:DIDEVICEINSTANCE_DX3A
DIDEVICEINSTANCE_DX3W	deps/mingw/dinput.h	/^typedef struct DIDEVICEINSTANCE_DX3W {$/;"	s
DIDEVICEINSTANCE_DX3W	deps/mingw/dinput.h	/^} DIDEVICEINSTANCE_DX3W, *LPDIDEVICEINSTANCE_DX3W;$/;"	t	typeref:struct:DIDEVICEINSTANCE_DX3W
DIDEVICEOBJECTDATA	deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTDATA {$/;"	s
DIDEVICEOBJECTDATA	deps/mingw/dinput.h	/^} DIDEVICEOBJECTDATA, *LPDIDEVICEOBJECTDATA;$/;"	t	typeref:struct:DIDEVICEOBJECTDATA
DIDEVICEOBJECTDATA_DX3	deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTDATA_DX3 {$/;"	s
DIDEVICEOBJECTDATA_DX3	deps/mingw/dinput.h	/^} DIDEVICEOBJECTDATA_DX3,*LPDIDEVICEOBJECTDATA_DX3;$/;"	t	typeref:struct:DIDEVICEOBJECTDATA_DX3
DIDEVICEOBJECTINSTANCEA	deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTINSTANCEA {$/;"	s
DIDEVICEOBJECTINSTANCEA	deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCEA, *LPDIDEVICEOBJECTINSTANCEA;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCEA
DIDEVICEOBJECTINSTANCEW	deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTINSTANCEW {$/;"	s
DIDEVICEOBJECTINSTANCEW	deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCEW, *LPDIDEVICEOBJECTINSTANCEW;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCEW
DIDEVICEOBJECTINSTANCE_DX3A	deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTINSTANCE_DX3A {$/;"	s
DIDEVICEOBJECTINSTANCE_DX3A	deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCE_DX3A, *LPDIDEVICEOBJECTINSTANCE_DX3A;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCE_DX3A
DIDEVICEOBJECTINSTANCE_DX3W	deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTINSTANCE_DX3W {$/;"	s
DIDEVICEOBJECTINSTANCE_DX3W	deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCE_DX3W, *LPDIDEVICEOBJECTINSTANCE_DX3W;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCE_DX3W
DIDEVTYPEJOYSTICK_FLIGHTSTICK	deps/mingw/dinput.h	/^#define DIDEVTYPEJOYSTICK_FLIGHTSTICK /;"	d
DIDEVTYPEJOYSTICK_GAMEPAD	deps/mingw/dinput.h	/^#define DIDEVTYPEJOYSTICK_GAMEPAD /;"	d
DIDEVTYPEJOYSTICK_HEADTRACKER	deps/mingw/dinput.h	/^#define DIDEVTYPEJOYSTICK_HEADTRACKER /;"	d
DIDEVTYPEJOYSTICK_RUDDER	deps/mingw/dinput.h	/^#define DIDEVTYPEJOYSTICK_RUDDER /;"	d
DIDEVTYPEJOYSTICK_TRADITIONAL	deps/mingw/dinput.h	/^#define DIDEVTYPEJOYSTICK_TRADITIONAL /;"	d
DIDEVTYPEJOYSTICK_UNKNOWN	deps/mingw/dinput.h	/^#define DIDEVTYPEJOYSTICK_UNKNOWN /;"	d
DIDEVTYPEJOYSTICK_WHEEL	deps/mingw/dinput.h	/^#define DIDEVTYPEJOYSTICK_WHEEL /;"	d
DIDEVTYPEKEYBOARD_J3100	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_J3100 /;"	d
DIDEVTYPEKEYBOARD_JAPAN106	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_JAPAN106 /;"	d
DIDEVTYPEKEYBOARD_JAPANAX	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_JAPANAX /;"	d
DIDEVTYPEKEYBOARD_NEC98	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_NEC98 /;"	d
DIDEVTYPEKEYBOARD_NEC98106	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_NEC98106 /;"	d
DIDEVTYPEKEYBOARD_NEC98LAPTOP	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_NEC98LAPTOP /;"	d
DIDEVTYPEKEYBOARD_NOKIA1050	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_NOKIA1050 /;"	d
DIDEVTYPEKEYBOARD_NOKIA9140	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_NOKIA9140 /;"	d
DIDEVTYPEKEYBOARD_OLIVETTI	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_OLIVETTI /;"	d
DIDEVTYPEKEYBOARD_PCAT	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_PCAT /;"	d
DIDEVTYPEKEYBOARD_PCENH	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_PCENH /;"	d
DIDEVTYPEKEYBOARD_PCXT	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_PCXT /;"	d
DIDEVTYPEKEYBOARD_UNKNOWN	deps/mingw/dinput.h	/^#define DIDEVTYPEKEYBOARD_UNKNOWN /;"	d
DIDEVTYPEMOUSE_FINGERSTICK	deps/mingw/dinput.h	/^#define DIDEVTYPEMOUSE_FINGERSTICK /;"	d
DIDEVTYPEMOUSE_TOUCHPAD	deps/mingw/dinput.h	/^#define DIDEVTYPEMOUSE_TOUCHPAD /;"	d
DIDEVTYPEMOUSE_TRACKBALL	deps/mingw/dinput.h	/^#define DIDEVTYPEMOUSE_TRACKBALL /;"	d
DIDEVTYPEMOUSE_TRADITIONAL	deps/mingw/dinput.h	/^#define DIDEVTYPEMOUSE_TRADITIONAL /;"	d
DIDEVTYPEMOUSE_UNKNOWN	deps/mingw/dinput.h	/^#define DIDEVTYPEMOUSE_UNKNOWN /;"	d
DIDEVTYPE_DEVICE	deps/mingw/dinput.h	/^#define DIDEVTYPE_DEVICE /;"	d
DIDEVTYPE_HID	deps/mingw/dinput.h	/^#define DIDEVTYPE_HID /;"	d
DIDEVTYPE_JOYSTICK	deps/mingw/dinput.h	/^#define DIDEVTYPE_JOYSTICK /;"	d
DIDEVTYPE_KEYBOARD	deps/mingw/dinput.h	/^#define DIDEVTYPE_KEYBOARD /;"	d
DIDEVTYPE_MOUSE	deps/mingw/dinput.h	/^#define DIDEVTYPE_MOUSE /;"	d
DIDFT_ABSAXIS	deps/mingw/dinput.h	/^#define DIDFT_ABSAXIS	/;"	d
DIDFT_ALIAS	deps/mingw/dinput.h	/^#define DIDFT_ALIAS	/;"	d
DIDFT_ALL	deps/mingw/dinput.h	/^#define DIDFT_ALL	/;"	d
DIDFT_ANYINSTANCE	deps/mingw/dinput.h	/^#define DIDFT_ANYINSTANCE	/;"	d
DIDFT_AXIS	deps/mingw/dinput.h	/^#define DIDFT_AXIS	/;"	d
DIDFT_BUTTON	deps/mingw/dinput.h	/^#define DIDFT_BUTTON	/;"	d
DIDFT_COLLECTION	deps/mingw/dinput.h	/^#define DIDFT_COLLECTION	/;"	d
DIDFT_ENUMCOLLECTION	deps/mingw/dinput.h	/^#define DIDFT_ENUMCOLLECTION(/;"	d
DIDFT_FFACTUATOR	deps/mingw/dinput.h	/^#define DIDFT_FFACTUATOR	/;"	d
DIDFT_FFEFFECTTRIGGER	deps/mingw/dinput.h	/^#define DIDFT_FFEFFECTTRIGGER	/;"	d
DIDFT_GETINSTANCE	deps/mingw/dinput.h	/^#define DIDFT_GETINSTANCE(/;"	d
DIDFT_GETTYPE	deps/mingw/dinput.h	/^#define DIDFT_GETTYPE(/;"	d
DIDFT_INSTANCEMASK	deps/mingw/dinput.h	/^#define DIDFT_INSTANCEMASK	/;"	d
DIDFT_MAKEINSTANCE	deps/mingw/dinput.h	/^#define DIDFT_MAKEINSTANCE(/;"	d
DIDFT_NOCOLLECTION	deps/mingw/dinput.h	/^#define DIDFT_NOCOLLECTION	/;"	d
DIDFT_NODATA	deps/mingw/dinput.h	/^#define DIDFT_NODATA	/;"	d
DIDFT_OPTIONAL	deps/mingw/dinput.h	/^#define DIDFT_OPTIONAL	/;"	d
DIDFT_OPTIONAL	src/win32_platform.h	/^ #define DIDFT_OPTIONAL /;"	d
DIDFT_OUTPUT	deps/mingw/dinput.h	/^#define DIDFT_OUTPUT	/;"	d
DIDFT_POV	deps/mingw/dinput.h	/^#define DIDFT_POV	/;"	d
DIDFT_PSHBUTTON	deps/mingw/dinput.h	/^#define DIDFT_PSHBUTTON	/;"	d
DIDFT_RELAXIS	deps/mingw/dinput.h	/^#define DIDFT_RELAXIS	/;"	d
DIDFT_TGLBUTTON	deps/mingw/dinput.h	/^#define DIDFT_TGLBUTTON	/;"	d
DIDFT_VENDORDEFINED	deps/mingw/dinput.h	/^#define DIDFT_VENDORDEFINED	/;"	d
DIDF_ABSAXIS	deps/mingw/dinput.h	/^#define DIDF_ABSAXIS	/;"	d
DIDF_RELAXIS	deps/mingw/dinput.h	/^#define DIDF_RELAXIS	/;"	d
DIDIFT_CONFIGURATION	deps/mingw/dinput.h	/^#define DIDIFT_CONFIGURATION	/;"	d
DIDIFT_OVERLAY	deps/mingw/dinput.h	/^#define DIDIFT_OVERLAY	/;"	d
DIDOI_ASPECTACCEL	deps/mingw/dinput.h	/^#define DIDOI_ASPECTACCEL	/;"	d
DIDOI_ASPECTFORCE	deps/mingw/dinput.h	/^#define DIDOI_ASPECTFORCE	/;"	d
DIDOI_ASPECTMASK	deps/mingw/dinput.h	/^#define DIDOI_ASPECTMASK	/;"	d
DIDOI_ASPECTPOSITION	deps/mingw/dinput.h	/^#define DIDOI_ASPECTPOSITION	/;"	d
DIDOI_ASPECTVELOCITY	deps/mingw/dinput.h	/^#define DIDOI_ASPECTVELOCITY	/;"	d
DIDOI_FFACTUATOR	deps/mingw/dinput.h	/^#define DIDOI_FFACTUATOR	/;"	d
DIDOI_FFEFFECTTRIGGER	deps/mingw/dinput.h	/^#define DIDOI_FFEFFECTTRIGGER	/;"	d
DIDOI_GUIDISUSAGE	deps/mingw/dinput.h	/^#define DIDOI_GUIDISUSAGE	/;"	d
DIDOI_POLLED	deps/mingw/dinput.h	/^#define DIDOI_POLLED	/;"	d
DIDSAM_DEFAULT	deps/mingw/dinput.h	/^#define DIDSAM_DEFAULT	/;"	d
DIDSAM_FORCESAVE	deps/mingw/dinput.h	/^#define DIDSAM_FORCESAVE	/;"	d
DIDSAM_NOUSER	deps/mingw/dinput.h	/^#define DIDSAM_NOUSER	/;"	d
DIEB_NOTRIGGER	deps/mingw/dinput.h	/^#define DIEB_NOTRIGGER /;"	d
DIEDBSFL_ATTACHEDONLY	deps/mingw/dinput.h	/^#define DIEDBSFL_ATTACHEDONLY	/;"	d
DIEDBSFL_AVAILABLEDEVICES	deps/mingw/dinput.h	/^#define DIEDBSFL_AVAILABLEDEVICES	/;"	d
DIEDBSFL_FORCEFEEDBACK	deps/mingw/dinput.h	/^#define DIEDBSFL_FORCEFEEDBACK	/;"	d
DIEDBSFL_MULTIMICEKEYBOARDS	deps/mingw/dinput.h	/^#define DIEDBSFL_MULTIMICEKEYBOARDS	/;"	d
DIEDBSFL_NONGAMINGDEVICES	deps/mingw/dinput.h	/^#define DIEDBSFL_NONGAMINGDEVICES	/;"	d
DIEDBSFL_THISUSER	deps/mingw/dinput.h	/^#define DIEDBSFL_THISUSER	/;"	d
DIEDBSFL_VALID	deps/mingw/dinput.h	/^#define DIEDBSFL_VALID	/;"	d
DIEDBS_MAPPEDPRI1	deps/mingw/dinput.h	/^#define DIEDBS_MAPPEDPRI1	/;"	d
DIEDBS_MAPPEDPRI2	deps/mingw/dinput.h	/^#define DIEDBS_MAPPEDPRI2	/;"	d
DIEDBS_NEWDEVICE	deps/mingw/dinput.h	/^#define DIEDBS_NEWDEVICE	/;"	d
DIEDBS_RECENTDEVICE	deps/mingw/dinput.h	/^#define DIEDBS_RECENTDEVICE	/;"	d
DIEDFL_ALLDEVICES	deps/mingw/dinput.h	/^#define DIEDFL_ALLDEVICES /;"	d
DIEDFL_ATTACHEDONLY	deps/mingw/dinput.h	/^#define DIEDFL_ATTACHEDONLY /;"	d
DIEDFL_FORCEFEEDBACK	deps/mingw/dinput.h	/^#define DIEDFL_FORCEFEEDBACK /;"	d
DIEDFL_INCLUDEALIASES	deps/mingw/dinput.h	/^#define DIEDFL_INCLUDEALIASES /;"	d
DIEDFL_INCLUDEHIDDEN	deps/mingw/dinput.h	/^#define DIEDFL_INCLUDEHIDDEN	/;"	d
DIEDFL_INCLUDEPHANTOMS	deps/mingw/dinput.h	/^#define DIEDFL_INCLUDEPHANTOMS /;"	d
DIEFFECT	deps/mingw/dinput.h	/^typedef struct DIEFFECT {$/;"	s
DIEFFECT	deps/mingw/dinput.h	/^} DIEFFECT, *LPDIEFFECT;$/;"	t	typeref:struct:DIEFFECT
DIEFFECTINFOA	deps/mingw/dinput.h	/^typedef struct DIEFFECTINFOA {$/;"	s
DIEFFECTINFOA	deps/mingw/dinput.h	/^} DIEFFECTINFOA, *LPDIEFFECTINFOA;$/;"	t	typeref:struct:DIEFFECTINFOA
DIEFFECTINFOW	deps/mingw/dinput.h	/^typedef struct DIEFFECTINFOW {$/;"	s
DIEFFECTINFOW	deps/mingw/dinput.h	/^} DIEFFECTINFOW, *LPDIEFFECTINFOW;$/;"	t	typeref:struct:DIEFFECTINFOW
DIEFFECT_DX5	deps/mingw/dinput.h	/^typedef struct DIEFFECT_DX5 {$/;"	s
DIEFFECT_DX5	deps/mingw/dinput.h	/^} DIEFFECT_DX5, *LPDIEFFECT_DX5;$/;"	t	typeref:struct:DIEFFECT_DX5
DIEFFECT_DX6	deps/mingw/dinput.h	/^typedef DIEFFECT DIEFFECT_DX6;$/;"	t	typeref:typename:DIEFFECT
DIEFFESCAPE	deps/mingw/dinput.h	/^typedef struct DIEFFESCAPE {$/;"	s
DIEFFESCAPE	deps/mingw/dinput.h	/^} DIEFFESCAPE, *LPDIEFFESCAPE;$/;"	t	typeref:struct:DIEFFESCAPE
DIEFF_CARTESIAN	deps/mingw/dinput.h	/^#define DIEFF_CARTESIAN /;"	d
DIEFF_OBJECTIDS	deps/mingw/dinput.h	/^#define DIEFF_OBJECTIDS /;"	d
DIEFF_OBJECTOFFSETS	deps/mingw/dinput.h	/^#define DIEFF_OBJECTOFFSETS /;"	d
DIEFF_POLAR	deps/mingw/dinput.h	/^#define DIEFF_POLAR /;"	d
DIEFF_SPHERICAL	deps/mingw/dinput.h	/^#define DIEFF_SPHERICAL /;"	d
DIEFT_ALL	deps/mingw/dinput.h	/^#define DIEFT_ALL	/;"	d
DIEFT_CONDITION	deps/mingw/dinput.h	/^#define DIEFT_CONDITION	/;"	d
DIEFT_CONSTANTFORCE	deps/mingw/dinput.h	/^#define DIEFT_CONSTANTFORCE	/;"	d
DIEFT_CUSTOMFORCE	deps/mingw/dinput.h	/^#define DIEFT_CUSTOMFORCE	/;"	d
DIEFT_DEADBAND	deps/mingw/dinput.h	/^#define DIEFT_DEADBAND	/;"	d
DIEFT_FFATTACK	deps/mingw/dinput.h	/^#define DIEFT_FFATTACK	/;"	d
DIEFT_FFFADE	deps/mingw/dinput.h	/^#define DIEFT_FFFADE	/;"	d
DIEFT_GETTYPE	deps/mingw/dinput.h	/^#define DIEFT_GETTYPE(/;"	d
DIEFT_HARDWARE	deps/mingw/dinput.h	/^#define DIEFT_HARDWARE	/;"	d
DIEFT_PERIODIC	deps/mingw/dinput.h	/^#define DIEFT_PERIODIC	/;"	d
DIEFT_POSNEGCOEFFICIENTS	deps/mingw/dinput.h	/^#define DIEFT_POSNEGCOEFFICIENTS /;"	d
DIEFT_POSNEGSATURATION	deps/mingw/dinput.h	/^#define DIEFT_POSNEGSATURATION	/;"	d
DIEFT_RAMPFORCE	deps/mingw/dinput.h	/^#define DIEFT_RAMPFORCE	/;"	d
DIEFT_SATURATION	deps/mingw/dinput.h	/^#define DIEFT_SATURATION	/;"	d
DIEFT_STARTDELAY	deps/mingw/dinput.h	/^#define DIEFT_STARTDELAY	/;"	d
DIEGES_EMULATED	deps/mingw/dinput.h	/^#define DIEGES_EMULATED /;"	d
DIEGES_PLAYING	deps/mingw/dinput.h	/^#define DIEGES_PLAYING /;"	d
DIENUM_CONTINUE	deps/mingw/dinput.h	/^#define DIENUM_CONTINUE /;"	d
DIENUM_STOP	deps/mingw/dinput.h	/^#define DIENUM_STOP /;"	d
DIENVELOPE	deps/mingw/dinput.h	/^typedef struct DIENVELOPE {$/;"	s
DIENVELOPE	deps/mingw/dinput.h	/^} DIENVELOPE, *LPDIENVELOPE;$/;"	t	typeref:struct:DIENVELOPE
DIEP_ALLPARAMS	deps/mingw/dinput.h	/^#define DIEP_ALLPARAMS /;"	d
DIEP_ALLPARAMS_DX5	deps/mingw/dinput.h	/^#define DIEP_ALLPARAMS_DX5 /;"	d
DIEP_AXES	deps/mingw/dinput.h	/^#define DIEP_AXES /;"	d
DIEP_DIRECTION	deps/mingw/dinput.h	/^#define DIEP_DIRECTION /;"	d
DIEP_DURATION	deps/mingw/dinput.h	/^#define DIEP_DURATION /;"	d
DIEP_ENVELOPE	deps/mingw/dinput.h	/^#define DIEP_ENVELOPE /;"	d
DIEP_GAIN	deps/mingw/dinput.h	/^#define DIEP_GAIN /;"	d
DIEP_NODOWNLOAD	deps/mingw/dinput.h	/^#define DIEP_NODOWNLOAD /;"	d
DIEP_NORESTART	deps/mingw/dinput.h	/^#define DIEP_NORESTART /;"	d
DIEP_SAMPLEPERIOD	deps/mingw/dinput.h	/^#define DIEP_SAMPLEPERIOD /;"	d
DIEP_START	deps/mingw/dinput.h	/^#define DIEP_START /;"	d
DIEP_STARTDELAY	deps/mingw/dinput.h	/^#define DIEP_STARTDELAY /;"	d
DIEP_TRIGGERBUTTON	deps/mingw/dinput.h	/^#define DIEP_TRIGGERBUTTON /;"	d
DIEP_TRIGGERREPEATINTERVAL	deps/mingw/dinput.h	/^#define DIEP_TRIGGERREPEATINTERVAL /;"	d
DIEP_TYPESPECIFICPARAMS	deps/mingw/dinput.h	/^#define DIEP_TYPESPECIFICPARAMS /;"	d
DIERR_ACQUIRED	deps/mingw/dinput.h	/^#define DIERR_ACQUIRED /;"	d
DIERR_ALREADYINITIALIZED	deps/mingw/dinput.h	/^#define DIERR_ALREADYINITIALIZED /;"	d
DIERR_BADDRIVERVER	deps/mingw/dinput.h	/^#define DIERR_BADDRIVERVER /;"	d
DIERR_BETADIRECTINPUTVERSION	deps/mingw/dinput.h	/^#define DIERR_BETADIRECTINPUTVERSION /;"	d
DIERR_DEVICEFULL	deps/mingw/dinput.h	/^#define DIERR_DEVICEFULL /;"	d
DIERR_DEVICENOTREG	deps/mingw/dinput.h	/^#define DIERR_DEVICENOTREG /;"	d
DIERR_EFFECTPLAYING	deps/mingw/dinput.h	/^#define DIERR_EFFECTPLAYING /;"	d
DIERR_GENERIC	deps/mingw/dinput.h	/^#define DIERR_GENERIC /;"	d
DIERR_HANDLEEXISTS	deps/mingw/dinput.h	/^#define DIERR_HANDLEEXISTS /;"	d
DIERR_HASEFFECTS	deps/mingw/dinput.h	/^#define DIERR_HASEFFECTS /;"	d
DIERR_INCOMPLETEEFFECT	deps/mingw/dinput.h	/^#define DIERR_INCOMPLETEEFFECT /;"	d
DIERR_INPUTLOST	deps/mingw/dinput.h	/^#define DIERR_INPUTLOST /;"	d
DIERR_INSUFFICIENTPRIVS	deps/mingw/dinput.h	/^#define DIERR_INSUFFICIENTPRIVS /;"	d
DIERR_INVALIDPARAM	deps/mingw/dinput.h	/^#define DIERR_INVALIDPARAM /;"	d
DIERR_MAPFILEFAIL	deps/mingw/dinput.h	/^#define DIERR_MAPFILEFAIL /;"	d
DIERR_MOREDATA	deps/mingw/dinput.h	/^#define DIERR_MOREDATA /;"	d
DIERR_NOAGGREGATION	deps/mingw/dinput.h	/^#define DIERR_NOAGGREGATION /;"	d
DIERR_NOINTERFACE	deps/mingw/dinput.h	/^#define DIERR_NOINTERFACE /;"	d
DIERR_NOTACQUIRED	deps/mingw/dinput.h	/^#define DIERR_NOTACQUIRED /;"	d
DIERR_NOTBUFFERED	deps/mingw/dinput.h	/^#define DIERR_NOTBUFFERED /;"	d
DIERR_NOTDOWNLOADED	deps/mingw/dinput.h	/^#define DIERR_NOTDOWNLOADED /;"	d
DIERR_NOTEXCLUSIVEACQUIRED	deps/mingw/dinput.h	/^#define DIERR_NOTEXCLUSIVEACQUIRED /;"	d
DIERR_NOTFOUND	deps/mingw/dinput.h	/^#define DIERR_NOTFOUND /;"	d
DIERR_NOTINITIALIZED	deps/mingw/dinput.h	/^#define DIERR_NOTINITIALIZED /;"	d
DIERR_OBJECTNOTFOUND	deps/mingw/dinput.h	/^#define DIERR_OBJECTNOTFOUND /;"	d
DIERR_OLDDIRECTINPUTVERSION	deps/mingw/dinput.h	/^#define DIERR_OLDDIRECTINPUTVERSION /;"	d
DIERR_OTHERAPPHASPRIO	deps/mingw/dinput.h	/^#define DIERR_OTHERAPPHASPRIO /;"	d
DIERR_OUTOFMEMORY	deps/mingw/dinput.h	/^#define DIERR_OUTOFMEMORY /;"	d
DIERR_READONLY	deps/mingw/dinput.h	/^#define DIERR_READONLY /;"	d
DIERR_REPORTFULL	deps/mingw/dinput.h	/^#define DIERR_REPORTFULL /;"	d
DIERR_UNPLUGGED	deps/mingw/dinput.h	/^#define DIERR_UNPLUGGED /;"	d
DIERR_UNSUPPORTED	deps/mingw/dinput.h	/^#define DIERR_UNSUPPORTED /;"	d
DIES_NODOWNLOAD	deps/mingw/dinput.h	/^#define DIES_NODOWNLOAD /;"	d
DIES_SOLO	deps/mingw/dinput.h	/^#define DIES_SOLO /;"	d
DIFILEEFFECT	deps/mingw/dinput.h	/^typedef struct DIFILEEFFECT {$/;"	s
DIFILEEFFECT	deps/mingw/dinput.h	/^} DIFILEEFFECT, *LPDIFILEEFFECT;$/;"	t	typeref:struct:DIFILEEFFECT
DIGDD_PEEK	deps/mingw/dinput.h	/^#define DIGDD_PEEK	/;"	d
DIGFFS_ACTUATORSOFF	deps/mingw/dinput.h	/^#define DIGFFS_ACTUATORSOFF /;"	d
DIGFFS_ACTUATORSON	deps/mingw/dinput.h	/^#define DIGFFS_ACTUATORSON /;"	d
DIGFFS_DEVICELOST	deps/mingw/dinput.h	/^#define DIGFFS_DEVICELOST /;"	d
DIGFFS_EMPTY	deps/mingw/dinput.h	/^#define DIGFFS_EMPTY /;"	d
DIGFFS_PAUSED	deps/mingw/dinput.h	/^#define DIGFFS_PAUSED /;"	d
DIGFFS_POWEROFF	deps/mingw/dinput.h	/^#define DIGFFS_POWEROFF /;"	d
DIGFFS_POWERON	deps/mingw/dinput.h	/^#define DIGFFS_POWERON /;"	d
DIGFFS_SAFETYSWITCHOFF	deps/mingw/dinput.h	/^#define DIGFFS_SAFETYSWITCHOFF /;"	d
DIGFFS_SAFETYSWITCHON	deps/mingw/dinput.h	/^#define DIGFFS_SAFETYSWITCHON /;"	d
DIGFFS_STOPPED	deps/mingw/dinput.h	/^#define DIGFFS_STOPPED /;"	d
DIGFFS_USERFFSWITCHOFF	deps/mingw/dinput.h	/^#define DIGFFS_USERFFSWITCHOFF /;"	d
DIGFFS_USERFFSWITCHON	deps/mingw/dinput.h	/^#define DIGFFS_USERFFSWITCHON /;"	d
DIJOFS_BUTTON	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON(/;"	d
DIJOFS_BUTTON0	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON0	/;"	d
DIJOFS_BUTTON1	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON1	/;"	d
DIJOFS_BUTTON10	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON10	/;"	d
DIJOFS_BUTTON11	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON11	/;"	d
DIJOFS_BUTTON12	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON12	/;"	d
DIJOFS_BUTTON13	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON13	/;"	d
DIJOFS_BUTTON14	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON14	/;"	d
DIJOFS_BUTTON15	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON15	/;"	d
DIJOFS_BUTTON16	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON16	/;"	d
DIJOFS_BUTTON17	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON17	/;"	d
DIJOFS_BUTTON18	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON18	/;"	d
DIJOFS_BUTTON19	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON19	/;"	d
DIJOFS_BUTTON2	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON2	/;"	d
DIJOFS_BUTTON20	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON20	/;"	d
DIJOFS_BUTTON21	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON21	/;"	d
DIJOFS_BUTTON22	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON22	/;"	d
DIJOFS_BUTTON23	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON23	/;"	d
DIJOFS_BUTTON24	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON24	/;"	d
DIJOFS_BUTTON25	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON25	/;"	d
DIJOFS_BUTTON26	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON26	/;"	d
DIJOFS_BUTTON27	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON27	/;"	d
DIJOFS_BUTTON28	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON28	/;"	d
DIJOFS_BUTTON29	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON29	/;"	d
DIJOFS_BUTTON3	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON3	/;"	d
DIJOFS_BUTTON30	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON30	/;"	d
DIJOFS_BUTTON31	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON31	/;"	d
DIJOFS_BUTTON4	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON4	/;"	d
DIJOFS_BUTTON5	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON5	/;"	d
DIJOFS_BUTTON6	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON6	/;"	d
DIJOFS_BUTTON7	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON7	/;"	d
DIJOFS_BUTTON8	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON8	/;"	d
DIJOFS_BUTTON9	deps/mingw/dinput.h	/^#define DIJOFS_BUTTON9	/;"	d
DIJOFS_POV	deps/mingw/dinput.h	/^#define DIJOFS_POV(/;"	d
DIJOFS_RX	deps/mingw/dinput.h	/^#define DIJOFS_RX	/;"	d
DIJOFS_RY	deps/mingw/dinput.h	/^#define DIJOFS_RY	/;"	d
DIJOFS_RZ	deps/mingw/dinput.h	/^#define DIJOFS_RZ	/;"	d
DIJOFS_SLIDER	deps/mingw/dinput.h	/^#define DIJOFS_SLIDER(/;"	d
DIJOFS_X	deps/mingw/dinput.h	/^#define DIJOFS_X	/;"	d
DIJOFS_Y	deps/mingw/dinput.h	/^#define DIJOFS_Y	/;"	d
DIJOFS_Z	deps/mingw/dinput.h	/^#define DIJOFS_Z	/;"	d
DIJOYSTATE	deps/mingw/dinput.h	/^typedef struct DIJOYSTATE {$/;"	s
DIJOYSTATE	deps/mingw/dinput.h	/^} DIJOYSTATE, *LPDIJOYSTATE;$/;"	t	typeref:struct:DIJOYSTATE
DIJOYSTATE2	deps/mingw/dinput.h	/^typedef struct DIJOYSTATE2 {$/;"	s
DIJOYSTATE2	deps/mingw/dinput.h	/^} DIJOYSTATE2, *LPDIJOYSTATE2;$/;"	t	typeref:struct:DIJOYSTATE2
DIK_0	deps/mingw/dinput.h	/^#define DIK_0 /;"	d
DIK_1	deps/mingw/dinput.h	/^#define DIK_1 /;"	d
DIK_2	deps/mingw/dinput.h	/^#define DIK_2 /;"	d
DIK_3	deps/mingw/dinput.h	/^#define DIK_3 /;"	d
DIK_4	deps/mingw/dinput.h	/^#define DIK_4 /;"	d
DIK_5	deps/mingw/dinput.h	/^#define DIK_5 /;"	d
DIK_6	deps/mingw/dinput.h	/^#define DIK_6 /;"	d
DIK_7	deps/mingw/dinput.h	/^#define DIK_7 /;"	d
DIK_8	deps/mingw/dinput.h	/^#define DIK_8 /;"	d
DIK_9	deps/mingw/dinput.h	/^#define DIK_9 /;"	d
DIK_A	deps/mingw/dinput.h	/^#define DIK_A /;"	d
DIK_ABNT_C1	deps/mingw/dinput.h	/^#define DIK_ABNT_C1 /;"	d
DIK_ABNT_C2	deps/mingw/dinput.h	/^#define DIK_ABNT_C2 /;"	d
DIK_ADD	deps/mingw/dinput.h	/^#define DIK_ADD /;"	d
DIK_APOSTROPHE	deps/mingw/dinput.h	/^#define DIK_APOSTROPHE /;"	d
DIK_APPS	deps/mingw/dinput.h	/^#define DIK_APPS /;"	d
DIK_AT	deps/mingw/dinput.h	/^#define DIK_AT /;"	d
DIK_AX	deps/mingw/dinput.h	/^#define DIK_AX /;"	d
DIK_B	deps/mingw/dinput.h	/^#define DIK_B /;"	d
DIK_BACK	deps/mingw/dinput.h	/^#define DIK_BACK /;"	d
DIK_BACKSLASH	deps/mingw/dinput.h	/^#define DIK_BACKSLASH /;"	d
DIK_BACKSPACE	deps/mingw/dinput.h	/^#define DIK_BACKSPACE /;"	d
DIK_C	deps/mingw/dinput.h	/^#define DIK_C /;"	d
DIK_CALCULATOR	deps/mingw/dinput.h	/^#define DIK_CALCULATOR /;"	d
DIK_CAPITAL	deps/mingw/dinput.h	/^#define DIK_CAPITAL /;"	d
DIK_CAPSLOCK	deps/mingw/dinput.h	/^#define DIK_CAPSLOCK /;"	d
DIK_CIRCUMFLEX	deps/mingw/dinput.h	/^#define DIK_CIRCUMFLEX /;"	d
DIK_COLON	deps/mingw/dinput.h	/^#define DIK_COLON /;"	d
DIK_COMMA	deps/mingw/dinput.h	/^#define DIK_COMMA /;"	d
DIK_CONVERT	deps/mingw/dinput.h	/^#define DIK_CONVERT /;"	d
DIK_D	deps/mingw/dinput.h	/^#define DIK_D /;"	d
DIK_DECIMAL	deps/mingw/dinput.h	/^#define DIK_DECIMAL /;"	d
DIK_DELETE	deps/mingw/dinput.h	/^#define DIK_DELETE /;"	d
DIK_DIVIDE	deps/mingw/dinput.h	/^#define DIK_DIVIDE /;"	d
DIK_DOWN	deps/mingw/dinput.h	/^#define DIK_DOWN /;"	d
DIK_DOWNARROW	deps/mingw/dinput.h	/^#define DIK_DOWNARROW /;"	d
DIK_E	deps/mingw/dinput.h	/^#define DIK_E /;"	d
DIK_END	deps/mingw/dinput.h	/^#define DIK_END /;"	d
DIK_EQUALS	deps/mingw/dinput.h	/^#define DIK_EQUALS /;"	d
DIK_ESCAPE	deps/mingw/dinput.h	/^#define DIK_ESCAPE /;"	d
DIK_F	deps/mingw/dinput.h	/^#define DIK_F /;"	d
DIK_F1	deps/mingw/dinput.h	/^#define DIK_F1 /;"	d
DIK_F10	deps/mingw/dinput.h	/^#define DIK_F10 /;"	d
DIK_F11	deps/mingw/dinput.h	/^#define DIK_F11 /;"	d
DIK_F12	deps/mingw/dinput.h	/^#define DIK_F12 /;"	d
DIK_F13	deps/mingw/dinput.h	/^#define DIK_F13 /;"	d
DIK_F14	deps/mingw/dinput.h	/^#define DIK_F14 /;"	d
DIK_F15	deps/mingw/dinput.h	/^#define DIK_F15 /;"	d
DIK_F2	deps/mingw/dinput.h	/^#define DIK_F2 /;"	d
DIK_F3	deps/mingw/dinput.h	/^#define DIK_F3 /;"	d
DIK_F4	deps/mingw/dinput.h	/^#define DIK_F4 /;"	d
DIK_F5	deps/mingw/dinput.h	/^#define DIK_F5 /;"	d
DIK_F6	deps/mingw/dinput.h	/^#define DIK_F6 /;"	d
DIK_F7	deps/mingw/dinput.h	/^#define DIK_F7 /;"	d
DIK_F8	deps/mingw/dinput.h	/^#define DIK_F8 /;"	d
DIK_F9	deps/mingw/dinput.h	/^#define DIK_F9 /;"	d
DIK_G	deps/mingw/dinput.h	/^#define DIK_G /;"	d
DIK_GRAVE	deps/mingw/dinput.h	/^#define DIK_GRAVE /;"	d
DIK_H	deps/mingw/dinput.h	/^#define DIK_H /;"	d
DIK_HOME	deps/mingw/dinput.h	/^#define DIK_HOME /;"	d
DIK_I	deps/mingw/dinput.h	/^#define DIK_I /;"	d
DIK_INSERT	deps/mingw/dinput.h	/^#define DIK_INSERT /;"	d
DIK_J	deps/mingw/dinput.h	/^#define DIK_J /;"	d
DIK_K	deps/mingw/dinput.h	/^#define DIK_K /;"	d
DIK_KANA	deps/mingw/dinput.h	/^#define DIK_KANA /;"	d
DIK_KANJI	deps/mingw/dinput.h	/^#define DIK_KANJI /;"	d
DIK_L	deps/mingw/dinput.h	/^#define DIK_L /;"	d
DIK_LALT	deps/mingw/dinput.h	/^#define DIK_LALT /;"	d
DIK_LBRACKET	deps/mingw/dinput.h	/^#define DIK_LBRACKET /;"	d
DIK_LCONTROL	deps/mingw/dinput.h	/^#define DIK_LCONTROL /;"	d
DIK_LEFT	deps/mingw/dinput.h	/^#define DIK_LEFT /;"	d
DIK_LEFTARROW	deps/mingw/dinput.h	/^#define DIK_LEFTARROW /;"	d
DIK_LMENU	deps/mingw/dinput.h	/^#define DIK_LMENU /;"	d
DIK_LSHIFT	deps/mingw/dinput.h	/^#define DIK_LSHIFT /;"	d
DIK_LWIN	deps/mingw/dinput.h	/^#define DIK_LWIN /;"	d
DIK_M	deps/mingw/dinput.h	/^#define DIK_M /;"	d
DIK_MAIL	deps/mingw/dinput.h	/^#define DIK_MAIL /;"	d
DIK_MEDIASELECT	deps/mingw/dinput.h	/^#define DIK_MEDIASELECT /;"	d
DIK_MEDIASTOP	deps/mingw/dinput.h	/^#define DIK_MEDIASTOP /;"	d
DIK_MINUS	deps/mingw/dinput.h	/^#define DIK_MINUS /;"	d
DIK_MULTIPLY	deps/mingw/dinput.h	/^#define DIK_MULTIPLY /;"	d
DIK_MUTE	deps/mingw/dinput.h	/^#define DIK_MUTE	/;"	d
DIK_MYCOMPUTER	deps/mingw/dinput.h	/^#define DIK_MYCOMPUTER /;"	d
DIK_N	deps/mingw/dinput.h	/^#define DIK_N /;"	d
DIK_NEXT	deps/mingw/dinput.h	/^#define DIK_NEXT /;"	d
DIK_NEXTTRACK	deps/mingw/dinput.h	/^#define DIK_NEXTTRACK /;"	d
DIK_NOCONVERT	deps/mingw/dinput.h	/^#define DIK_NOCONVERT /;"	d
DIK_NUMLOCK	deps/mingw/dinput.h	/^#define DIK_NUMLOCK /;"	d
DIK_NUMPAD0	deps/mingw/dinput.h	/^#define DIK_NUMPAD0 /;"	d
DIK_NUMPAD1	deps/mingw/dinput.h	/^#define DIK_NUMPAD1 /;"	d
DIK_NUMPAD2	deps/mingw/dinput.h	/^#define DIK_NUMPAD2 /;"	d
DIK_NUMPAD3	deps/mingw/dinput.h	/^#define DIK_NUMPAD3 /;"	d
DIK_NUMPAD4	deps/mingw/dinput.h	/^#define DIK_NUMPAD4 /;"	d
DIK_NUMPAD5	deps/mingw/dinput.h	/^#define DIK_NUMPAD5 /;"	d
DIK_NUMPAD6	deps/mingw/dinput.h	/^#define DIK_NUMPAD6 /;"	d
DIK_NUMPAD7	deps/mingw/dinput.h	/^#define DIK_NUMPAD7 /;"	d
DIK_NUMPAD8	deps/mingw/dinput.h	/^#define DIK_NUMPAD8 /;"	d
DIK_NUMPAD9	deps/mingw/dinput.h	/^#define DIK_NUMPAD9 /;"	d
DIK_NUMPADCOMMA	deps/mingw/dinput.h	/^#define DIK_NUMPADCOMMA /;"	d
DIK_NUMPADENTER	deps/mingw/dinput.h	/^#define DIK_NUMPADENTER /;"	d
DIK_NUMPADEQUALS	deps/mingw/dinput.h	/^#define DIK_NUMPADEQUALS /;"	d
DIK_NUMPADMINUS	deps/mingw/dinput.h	/^#define DIK_NUMPADMINUS /;"	d
DIK_NUMPADPERIOD	deps/mingw/dinput.h	/^#define DIK_NUMPADPERIOD /;"	d
DIK_NUMPADPLUS	deps/mingw/dinput.h	/^#define DIK_NUMPADPLUS /;"	d
DIK_NUMPADSLASH	deps/mingw/dinput.h	/^#define DIK_NUMPADSLASH /;"	d
DIK_NUMPADSTAR	deps/mingw/dinput.h	/^#define DIK_NUMPADSTAR /;"	d
DIK_O	deps/mingw/dinput.h	/^#define DIK_O /;"	d
DIK_OEM_102	deps/mingw/dinput.h	/^#define DIK_OEM_102 /;"	d
DIK_P	deps/mingw/dinput.h	/^#define DIK_P /;"	d
DIK_PAUSE	deps/mingw/dinput.h	/^#define DIK_PAUSE /;"	d
DIK_PERIOD	deps/mingw/dinput.h	/^#define DIK_PERIOD /;"	d
DIK_PGDN	deps/mingw/dinput.h	/^#define DIK_PGDN /;"	d
DIK_PGUP	deps/mingw/dinput.h	/^#define DIK_PGUP /;"	d
DIK_PLAYPAUSE	deps/mingw/dinput.h	/^#define DIK_PLAYPAUSE /;"	d
DIK_POWER	deps/mingw/dinput.h	/^#define DIK_POWER /;"	d
DIK_PRIOR	deps/mingw/dinput.h	/^#define DIK_PRIOR /;"	d
DIK_Q	deps/mingw/dinput.h	/^#define DIK_Q /;"	d
DIK_R	deps/mingw/dinput.h	/^#define DIK_R /;"	d
DIK_RALT	deps/mingw/dinput.h	/^#define DIK_RALT /;"	d
DIK_RBRACKET	deps/mingw/dinput.h	/^#define DIK_RBRACKET /;"	d
DIK_RCONTROL	deps/mingw/dinput.h	/^#define DIK_RCONTROL /;"	d
DIK_RETURN	deps/mingw/dinput.h	/^#define DIK_RETURN /;"	d
DIK_RIGHT	deps/mingw/dinput.h	/^#define DIK_RIGHT /;"	d
DIK_RIGHTARROW	deps/mingw/dinput.h	/^#define DIK_RIGHTARROW /;"	d
DIK_RMENU	deps/mingw/dinput.h	/^#define DIK_RMENU /;"	d
DIK_RSHIFT	deps/mingw/dinput.h	/^#define DIK_RSHIFT /;"	d
DIK_RWIN	deps/mingw/dinput.h	/^#define DIK_RWIN /;"	d
DIK_S	deps/mingw/dinput.h	/^#define DIK_S /;"	d
DIK_SCROLL	deps/mingw/dinput.h	/^#define DIK_SCROLL /;"	d
DIK_SEMICOLON	deps/mingw/dinput.h	/^#define DIK_SEMICOLON /;"	d
DIK_SLASH	deps/mingw/dinput.h	/^#define DIK_SLASH /;"	d
DIK_SLEEP	deps/mingw/dinput.h	/^#define DIK_SLEEP /;"	d
DIK_SPACE	deps/mingw/dinput.h	/^#define DIK_SPACE /;"	d
DIK_STOP	deps/mingw/dinput.h	/^#define DIK_STOP /;"	d
DIK_SUBTRACT	deps/mingw/dinput.h	/^#define DIK_SUBTRACT /;"	d
DIK_SYSRQ	deps/mingw/dinput.h	/^#define DIK_SYSRQ /;"	d
DIK_T	deps/mingw/dinput.h	/^#define DIK_T /;"	d
DIK_TAB	deps/mingw/dinput.h	/^#define DIK_TAB /;"	d
DIK_U	deps/mingw/dinput.h	/^#define DIK_U /;"	d
DIK_UNDERLINE	deps/mingw/dinput.h	/^#define DIK_UNDERLINE /;"	d
DIK_UNLABELED	deps/mingw/dinput.h	/^#define DIK_UNLABELED /;"	d
DIK_UP	deps/mingw/dinput.h	/^#define DIK_UP /;"	d
DIK_UPARROW	deps/mingw/dinput.h	/^#define DIK_UPARROW /;"	d
DIK_V	deps/mingw/dinput.h	/^#define DIK_V /;"	d
DIK_VOLUMEDOWN	deps/mingw/dinput.h	/^#define DIK_VOLUMEDOWN /;"	d
DIK_VOLUMEUP	deps/mingw/dinput.h	/^#define DIK_VOLUMEUP /;"	d
DIK_W	deps/mingw/dinput.h	/^#define DIK_W /;"	d
DIK_WAKE	deps/mingw/dinput.h	/^#define DIK_WAKE /;"	d
DIK_WEBBACK	deps/mingw/dinput.h	/^#define DIK_WEBBACK /;"	d
DIK_WEBFAVORITES	deps/mingw/dinput.h	/^#define DIK_WEBFAVORITES /;"	d
DIK_WEBFORWARD	deps/mingw/dinput.h	/^#define DIK_WEBFORWARD /;"	d
DIK_WEBHOME	deps/mingw/dinput.h	/^#define DIK_WEBHOME /;"	d
DIK_WEBREFRESH	deps/mingw/dinput.h	/^#define DIK_WEBREFRESH /;"	d
DIK_WEBSEARCH	deps/mingw/dinput.h	/^#define DIK_WEBSEARCH /;"	d
DIK_WEBSTOP	deps/mingw/dinput.h	/^#define DIK_WEBSTOP /;"	d
DIK_X	deps/mingw/dinput.h	/^#define DIK_X /;"	d
DIK_Y	deps/mingw/dinput.h	/^#define DIK_Y /;"	d
DIK_YEN	deps/mingw/dinput.h	/^#define DIK_YEN /;"	d
DIK_Z	deps/mingw/dinput.h	/^#define DIK_Z /;"	d
DIMAKEUSAGEDWORD	deps/mingw/dinput.h	/^#define DIMAKEUSAGEDWORD(/;"	d
DIMOFS_BUTTON0	deps/mingw/dinput.h	/^#define DIMOFS_BUTTON0 /;"	d
DIMOFS_BUTTON1	deps/mingw/dinput.h	/^#define DIMOFS_BUTTON1 /;"	d
DIMOFS_BUTTON2	deps/mingw/dinput.h	/^#define DIMOFS_BUTTON2 /;"	d
DIMOFS_BUTTON3	deps/mingw/dinput.h	/^#define DIMOFS_BUTTON3 /;"	d
DIMOFS_BUTTON4	deps/mingw/dinput.h	/^#define DIMOFS_BUTTON4 /;"	d
DIMOFS_BUTTON5	deps/mingw/dinput.h	/^#define DIMOFS_BUTTON5 /;"	d
DIMOFS_BUTTON6	deps/mingw/dinput.h	/^#define DIMOFS_BUTTON6 /;"	d
DIMOFS_BUTTON7	deps/mingw/dinput.h	/^#define DIMOFS_BUTTON7 /;"	d
DIMOFS_X	deps/mingw/dinput.h	/^#define DIMOFS_X /;"	d
DIMOFS_Y	deps/mingw/dinput.h	/^#define DIMOFS_Y /;"	d
DIMOFS_Z	deps/mingw/dinput.h	/^#define DIMOFS_Z /;"	d
DIMOUSESTATE	deps/mingw/dinput.h	/^typedef struct DIMOUSESTATE {$/;"	s
DIMOUSESTATE	deps/mingw/dinput.h	/^} DIMOUSESTATE;$/;"	t	typeref:struct:DIMOUSESTATE
DIMOUSESTATE2	deps/mingw/dinput.h	/^typedef struct DIMOUSESTATE2 {$/;"	s
DIMOUSESTATE2	deps/mingw/dinput.h	/^} DIMOUSESTATE2;$/;"	t	typeref:struct:DIMOUSESTATE2
DIOBJECTDATAFORMAT	deps/mingw/dinput.h	/^} DIOBJECTDATAFORMAT, *LPDIOBJECTDATAFORMAT;$/;"	t	typeref:struct:_DIOBJECTDATAFORMAT
DIPERIODIC	deps/mingw/dinput.h	/^typedef struct DIPERIODIC {$/;"	s
DIPERIODIC	deps/mingw/dinput.h	/^} DIPERIODIC, *LPDIPERIODIC;$/;"	t	typeref:struct:DIPERIODIC
DIPH_BYID	deps/mingw/dinput.h	/^#define DIPH_BYID	/;"	d
DIPH_BYOFFSET	deps/mingw/dinput.h	/^#define DIPH_BYOFFSET	/;"	d
DIPH_BYUSAGE	deps/mingw/dinput.h	/^#define DIPH_BYUSAGE	/;"	d
DIPH_DEVICE	deps/mingw/dinput.h	/^#define DIPH_DEVICE	/;"	d
DIPROPAUTOCENTER_OFF	deps/mingw/dinput.h	/^#define DIPROPAUTOCENTER_OFF	/;"	d
DIPROPAUTOCENTER_ON	deps/mingw/dinput.h	/^#define DIPROPAUTOCENTER_ON	/;"	d
DIPROPAXISMODE_ABS	deps/mingw/dinput.h	/^#define DIPROPAXISMODE_ABS	/;"	d
DIPROPAXISMODE_REL	deps/mingw/dinput.h	/^#define DIPROPAXISMODE_REL	/;"	d
DIPROPCAL	deps/mingw/dinput.h	/^typedef struct DIPROPCAL {$/;"	s
DIPROPCAL	deps/mingw/dinput.h	/^} DIPROPCAL, *LPDIPROPCAL;$/;"	t	typeref:struct:DIPROPCAL
DIPROPCALIBRATIONMODE_COOKED	deps/mingw/dinput.h	/^#define DIPROPCALIBRATIONMODE_COOKED	/;"	d
DIPROPCALIBRATIONMODE_RAW	deps/mingw/dinput.h	/^#define DIPROPCALIBRATIONMODE_RAW	/;"	d
DIPROPCALPOV	deps/mingw/dinput.h	/^typedef struct DIPROPCALPOV {$/;"	s
DIPROPCALPOV	deps/mingw/dinput.h	/^} DIPROPCALPOV, *LPDIPROPCALPOV;$/;"	t	typeref:struct:DIPROPCALPOV
DIPROPCPOINTS	deps/mingw/dinput.h	/^typedef struct DIPROPCPOINTS {$/;"	s
DIPROPCPOINTS	deps/mingw/dinput.h	/^} DIPROPCPOINTS, *LPDIPROPCPOINTS;$/;"	t	typeref:struct:DIPROPCPOINTS
DIPROPDWORD	deps/mingw/dinput.h	/^typedef struct DIPROPDWORD {$/;"	s
DIPROPDWORD	deps/mingw/dinput.h	/^} DIPROPDWORD, *LPDIPROPDWORD;$/;"	t	typeref:struct:DIPROPDWORD
DIPROPGUIDANDPATH	deps/mingw/dinput.h	/^typedef struct DIPROPGUIDANDPATH {$/;"	s
DIPROPGUIDANDPATH	deps/mingw/dinput.h	/^} DIPROPGUIDANDPATH, *LPDIPROPGUIDANDPATH;$/;"	t	typeref:struct:DIPROPGUIDANDPATH
DIPROPHEADER	deps/mingw/dinput.h	/^typedef struct DIPROPHEADER {$/;"	s
DIPROPHEADER	deps/mingw/dinput.h	/^} DIPROPHEADER,*LPDIPROPHEADER;$/;"	t	typeref:struct:DIPROPHEADER
DIPROPPOINTER	deps/mingw/dinput.h	/^typedef struct DIPROPPOINTER {$/;"	s
DIPROPPOINTER	deps/mingw/dinput.h	/^} DIPROPPOINTER, *LPDIPROPPOINTER;$/;"	t	typeref:struct:DIPROPPOINTER
DIPROPRANGE	deps/mingw/dinput.h	/^typedef struct DIPROPRANGE {$/;"	s
DIPROPRANGE	deps/mingw/dinput.h	/^} DIPROPRANGE, *LPDIPROPRANGE;$/;"	t	typeref:struct:DIPROPRANGE
DIPROPRANGE_NOMAX	deps/mingw/dinput.h	/^#define DIPROPRANGE_NOMAX	/;"	d
DIPROPRANGE_NOMIN	deps/mingw/dinput.h	/^#define DIPROPRANGE_NOMIN	/;"	d
DIPROPSTRING	deps/mingw/dinput.h	/^typedef struct DIPROPSTRING {$/;"	s
DIPROPSTRING	deps/mingw/dinput.h	/^} DIPROPSTRING, *LPDIPROPSTRING;$/;"	t	typeref:struct:DIPROPSTRING
DIPROP_APPDATA	deps/mingw/dinput.h	/^#define DIPROP_APPDATA	/;"	d
DIPROP_AUTOCENTER	deps/mingw/dinput.h	/^#define DIPROP_AUTOCENTER	/;"	d
DIPROP_AXISMODE	deps/mingw/dinput.h	/^#define DIPROP_AXISMODE	/;"	d
DIPROP_BUFFERSIZE	deps/mingw/dinput.h	/^#define DIPROP_BUFFERSIZE	/;"	d
DIPROP_CALIBRATION	deps/mingw/dinput.h	/^#define DIPROP_CALIBRATION	/;"	d
DIPROP_CALIBRATIONMODE	deps/mingw/dinput.h	/^#define DIPROP_CALIBRATIONMODE	/;"	d
DIPROP_CPOINTS	deps/mingw/dinput.h	/^#define DIPROP_CPOINTS	/;"	d
DIPROP_DEADZONE	deps/mingw/dinput.h	/^#define DIPROP_DEADZONE	/;"	d
DIPROP_FFGAIN	deps/mingw/dinput.h	/^#define DIPROP_FFGAIN	/;"	d
DIPROP_FFLOAD	deps/mingw/dinput.h	/^#define DIPROP_FFLOAD	/;"	d
DIPROP_GETPORTDISPLAYNAME	deps/mingw/dinput.h	/^#define DIPROP_GETPORTDISPLAYNAME	/;"	d
DIPROP_GRANULARITY	deps/mingw/dinput.h	/^#define DIPROP_GRANULARITY	/;"	d
DIPROP_GUIDANDPATH	deps/mingw/dinput.h	/^#define DIPROP_GUIDANDPATH	/;"	d
DIPROP_INSTANCENAME	deps/mingw/dinput.h	/^#define DIPROP_INSTANCENAME	/;"	d
DIPROP_JOYSTICKID	deps/mingw/dinput.h	/^#define DIPROP_JOYSTICKID	/;"	d
DIPROP_KEYNAME	deps/mingw/dinput.h	/^#define DIPROP_KEYNAME	/;"	d
DIPROP_LOGICALRANGE	deps/mingw/dinput.h	/^#define DIPROP_LOGICALRANGE	/;"	d
DIPROP_PHYSICALRANGE	deps/mingw/dinput.h	/^#define DIPROP_PHYSICALRANGE	/;"	d
DIPROP_PRODUCTNAME	deps/mingw/dinput.h	/^#define DIPROP_PRODUCTNAME	/;"	d
DIPROP_RANGE	deps/mingw/dinput.h	/^#define DIPROP_RANGE	/;"	d
DIPROP_SATURATION	deps/mingw/dinput.h	/^#define DIPROP_SATURATION	/;"	d
DIPROP_SCANCODE	deps/mingw/dinput.h	/^#define DIPROP_SCANCODE	/;"	d
DIPROP_TYPENAME	deps/mingw/dinput.h	/^#define DIPROP_TYPENAME	/;"	d
DIPROP_USERNAME	deps/mingw/dinput.h	/^#define DIPROP_USERNAME	/;"	d
DIPROP_VIDPID	deps/mingw/dinput.h	/^#define DIPROP_VIDPID	/;"	d
DIRAMPFORCE	deps/mingw/dinput.h	/^typedef struct DIRAMPFORCE {$/;"	s
DIRAMPFORCE	deps/mingw/dinput.h	/^} DIRAMPFORCE, *LPDIRAMPFORCE;$/;"	t	typeref:struct:DIRAMPFORCE
DIRECTINPUT_VERSION	deps/mingw/dinput.h	/^#define DIRECTINPUT_VERSION	/;"	d
DIRECTINPUT_VERSION	src/win32_platform.h	/^#define DIRECTINPUT_VERSION /;"	d
DISCL_BACKGROUND	deps/mingw/dinput.h	/^#define DISCL_BACKGROUND	/;"	d
DISCL_EXCLUSIVE	deps/mingw/dinput.h	/^#define DISCL_EXCLUSIVE	/;"	d
DISCL_FOREGROUND	deps/mingw/dinput.h	/^#define DISCL_FOREGROUND	/;"	d
DISCL_NONEXCLUSIVE	deps/mingw/dinput.h	/^#define DISCL_NONEXCLUSIVE	/;"	d
DISCL_NOWINKEY	deps/mingw/dinput.h	/^#define DISCL_NOWINKEY /;"	d
DISEQUENCE_COMPARE	deps/mingw/dinput.h	/^#define DISEQUENCE_COMPARE(/;"	d
DISFFC_CONTINUE	deps/mingw/dinput.h	/^#define DISFFC_CONTINUE /;"	d
DISFFC_PAUSE	deps/mingw/dinput.h	/^#define DISFFC_PAUSE /;"	d
DISFFC_RESET	deps/mingw/dinput.h	/^#define DISFFC_RESET /;"	d
DISFFC_SETACTUATORSOFF	deps/mingw/dinput.h	/^#define DISFFC_SETACTUATORSOFF /;"	d
DISFFC_SETACTUATORSON	deps/mingw/dinput.h	/^#define DISFFC_SETACTUATORSON /;"	d
DISFFC_STOPALL	deps/mingw/dinput.h	/^#define DISFFC_STOPALL /;"	d
DISPLACEMENT_SIGN_LIMIT	examples/heightmap.c	/^#define DISPLACEMENT_SIGN_LIMIT /;"	d	file:
DISPLAY_DEVICE_ACTIVE	src/win32_platform.h	/^ #define DISPLAY_DEVICE_ACTIVE /;"	d
DIST_BALL	examples/boing.c	/^#define DIST_BALL /;"	d	file:
DI_BUFFEROVERFLOW	deps/mingw/dinput.h	/^#define DI_BUFFEROVERFLOW /;"	d
DI_DEGREES	deps/mingw/dinput.h	/^#define DI_DEGREES	/;"	d
DI_DOWNLOADSKIPPED	deps/mingw/dinput.h	/^#define DI_DOWNLOADSKIPPED /;"	d
DI_EFFECTRESTARTED	deps/mingw/dinput.h	/^#define DI_EFFECTRESTARTED /;"	d
DI_FFNOMINALMAX	deps/mingw/dinput.h	/^#define DI_FFNOMINALMAX	/;"	d
DI_NOEFFECT	deps/mingw/dinput.h	/^#define DI_NOEFFECT /;"	d
DI_NOTATTACHED	deps/mingw/dinput.h	/^#define DI_NOTATTACHED /;"	d
DI_OK	deps/mingw/dinput.h	/^#define DI_OK /;"	d
DI_POLLEDDEVICE	deps/mingw/dinput.h	/^#define DI_POLLEDDEVICE /;"	d
DI_PROPNOEFFECT	deps/mingw/dinput.h	/^#define DI_PROPNOEFFECT /;"	d
DI_SECONDS	deps/mingw/dinput.h	/^#define DI_SECONDS	/;"	d
DI_SETTINGSNOTSAVED	deps/mingw/dinput.h	/^#define DI_SETTINGSNOTSAVED /;"	d
DI_TRUNCATED	deps/mingw/dinput.h	/^#define DI_TRUNCATED /;"	d
DI_TRUNCATEDANDRESTARTED	deps/mingw/dinput.h	/^#define DI_TRUNCATEDANDRESTARTED /;"	d
DI_WRITEPROTECT	deps/mingw/dinput.h	/^#define DI_WRITEPROTECT /;"	d
DOXYGEN_SKIP_DOT	CMakeLists.txt	/^    set(DOXYGEN_SKIP_DOT TRUE)$/;"	v
DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2	src/win32_platform.h	/^#define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 /;"	d
DRAW_BALL	examples/boing.c	/^typedef enum { DRAW_BALL, DRAW_BALL_SHADOW } DRAW_BALL_ENUM;$/;"	e	enum:__anond32b2c930103	file:
DRAW_BALL_ENUM	examples/boing.c	/^typedef enum { DRAW_BALL, DRAW_BALL_SHADOW } DRAW_BALL_ENUM;$/;"	t	typeref:enum:__anond32b2c930103	file:
DRAW_BALL_SHADOW	examples/boing.c	/^typedef enum { DRAW_BALL, DRAW_BALL_SHADOW } DRAW_BALL_ENUM;$/;"	e	enum:__anond32b2c930103	file:
DUMMYSTRUCTNAME	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME /;"	d
DUMMYSTRUCTNAME	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME$/;"	d
DUMMYSTRUCTNAME1	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME1	/;"	d
DUMMYSTRUCTNAME1	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME1 /;"	d
DUMMYSTRUCTNAME2	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME2 /;"	d
DUMMYSTRUCTNAME2	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME2$/;"	d
DUMMYSTRUCTNAME3	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME3 /;"	d
DUMMYSTRUCTNAME3	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME3$/;"	d
DUMMYSTRUCTNAME4	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME4 /;"	d
DUMMYSTRUCTNAME4	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME4$/;"	d
DUMMYSTRUCTNAME5	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME5 /;"	d
DUMMYSTRUCTNAME5	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYSTRUCTNAME5$/;"	d
DUMMYUNIONNAME	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME /;"	d
DUMMYUNIONNAME	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME$/;"	d
DUMMYUNIONNAME	deps/mingw/dinput.h	/^	} DUMMYUNIONNAME;$/;"	m	struct:_DIACTIONA	typeref:union:_DIACTIONA::__anon8f005edb010a
DUMMYUNIONNAME	deps/mingw/dinput.h	/^	} DUMMYUNIONNAME;$/;"	m	struct:_DIACTIONW	typeref:union:_DIACTIONW::__anon8f005edb020a
DUMMYUNIONNAME1	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME1	/;"	d
DUMMYUNIONNAME1	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME1 /;"	d
DUMMYUNIONNAME2	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME2 /;"	d
DUMMYUNIONNAME2	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME2$/;"	d
DUMMYUNIONNAME3	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME3 /;"	d
DUMMYUNIONNAME3	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME3$/;"	d
DUMMYUNIONNAME4	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME4 /;"	d
DUMMYUNIONNAME4	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME4$/;"	d
DUMMYUNIONNAME5	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME5 /;"	d
DUMMYUNIONNAME5	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME5$/;"	d
DUMMYUNIONNAME6	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME6 /;"	d
DUMMYUNIONNAME6	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME6$/;"	d
DUMMYUNIONNAME7	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME7 /;"	d
DUMMYUNIONNAME7	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME7$/;"	d
DUMMYUNIONNAME8	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME8 /;"	d
DUMMYUNIONNAME8	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME8$/;"	d
DUMMYUNIONNAME9	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME9 /;"	d
DUMMYUNIONNAME9	deps/mingw/_mingw_dxhelper.h	/^#  define DUMMYUNIONNAME9$/;"	d
DWM_BB_BLURREGION	src/win32_platform.h	/^#define DWM_BB_BLURREGION /;"	d
DWM_BB_ENABLE	src/win32_platform.h	/^#define DWM_BB_ENABLE /;"	d
DWM_BLURBEHIND	src/win32_platform.h	/^} DWM_BLURBEHIND;$/;"	t	typeref:struct:__anon622bd5890208
DeleteContext	src/wgl_context.h	/^    PFN_wglDeleteContext                DeleteContext;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFN_wglDeleteContext
Dependencies	README.md	/^## Dependencies$/;"	s
DestroyContext	src/egl_context.h	/^    PFN_eglDestroyContext       DestroyContext;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglDestroyContext
DestroyContext	src/glx_context.h	/^    PFNGLXDESTROYCONTEXTPROC            DestroyContext;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXDESTROYCONTEXTPROC
DestroyContext	src/osmesa_context.h	/^    PFN_OSMesaDestroyContext        DestroyContext;$/;"	m	struct:_GLFWlibraryOSMesa	typeref:typename:PFN_OSMesaDestroyContext
DestroySurface	src/egl_context.h	/^    PFN_eglDestroySurface       DestroySurface;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglDestroySurface
DestroyWindow	src/glx_context.h	/^    PFNGLXDESTROYWINDOWPROC             DestroyWindow;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXDESTROYWINDOWPROC
DirectInput8Create	src/win32_platform.h	/^#define DirectInput8Create /;"	d
DllMain	src/win32_init.c	/^BOOL WINAPI DllMain(HINSTANCE instance, DWORD reason, LPVOID reserved)$/;"	f	typeref:typename:BOOL WINAPI
DrawBoingBall	examples/boing.c	/^void DrawBoingBall( void )$/;"	f	typeref:typename:void
DrawBoingBallBand	examples/boing.c	/^void DrawBoingBallBand( GLfloat long_lo,$/;"	f	typeref:typename:void
DrawGrid	examples/boing.c	/^void DrawGrid( void )$/;"	f	typeref:typename:void
DwmEnableBlurBehindWindow	src/win32_platform.h	/^#define DwmEnableBlurBehindWindow /;"	d
DwmFlush	src/win32_platform.h	/^#define DwmFlush /;"	d
DwmIsCompositionEnabled	src/win32_platform.h	/^#define DwmIsCompositionEnabled /;"	d
EDS_ROTATEDMODE	src/win32_platform.h	/^ #define EDS_ROTATEDMODE /;"	d
EGLAPIENTRY	src/egl_context.h	/^ #define EGLAPIENTRY /;"	d
EGLAPIENTRY	src/egl_context.h	/^ #define EGLAPIENTRY$/;"	d
EGLBoolean	src/egl_context.h	/^typedef unsigned int EGLBoolean;$/;"	t	typeref:typename:unsigned int
EGLConfig	src/egl_context.h	/^typedef void* EGLConfig;$/;"	t	typeref:typename:void *
EGLContext	src/egl_context.h	/^typedef void* EGLContext;$/;"	t	typeref:typename:void *
EGLDisplay	src/egl_context.h	/^typedef void* EGLDisplay;$/;"	t	typeref:typename:void *
EGLNativeDisplayType	src/egl_context.h	/^typedef Display* EGLNativeDisplayType;$/;"	t	typeref:typename:Display *
EGLNativeDisplayType	src/egl_context.h	/^typedef HDC EGLNativeDisplayType;$/;"	t	typeref:typename:HDC
EGLNativeDisplayType	src/egl_context.h	/^typedef struct wl_display* EGLNativeDisplayType;$/;"	t	typeref:struct:wl_display *
EGLNativeDisplayType	src/egl_context.h	/^typedef void* EGLNativeDisplayType;$/;"	t	typeref:typename:void *
EGLNativeWindowType	src/egl_context.h	/^typedef HWND EGLNativeWindowType;$/;"	t	typeref:typename:HWND
EGLNativeWindowType	src/egl_context.h	/^typedef Window EGLNativeWindowType;$/;"	t	typeref:typename:Window
EGLNativeWindowType	src/egl_context.h	/^typedef id EGLNativeWindowType;$/;"	t	typeref:typename:id
EGLNativeWindowType	src/egl_context.h	/^typedef struct wl_egl_window* EGLNativeWindowType;$/;"	t	typeref:struct:wl_egl_window *
EGLSurface	src/egl_context.h	/^typedef void* EGLSurface;$/;"	t	typeref:typename:void *
EGL_ALPHA_SIZE	src/egl_context.h	/^#define EGL_ALPHA_SIZE /;"	d
EGL_BAD_ACCESS	src/egl_context.h	/^#define EGL_BAD_ACCESS /;"	d
EGL_BAD_ALLOC	src/egl_context.h	/^#define EGL_BAD_ALLOC /;"	d
EGL_BAD_ATTRIBUTE	src/egl_context.h	/^#define EGL_BAD_ATTRIBUTE /;"	d
EGL_BAD_CONFIG	src/egl_context.h	/^#define EGL_BAD_CONFIG /;"	d
EGL_BAD_CONTEXT	src/egl_context.h	/^#define EGL_BAD_CONTEXT /;"	d
EGL_BAD_CURRENT_SURFACE	src/egl_context.h	/^#define EGL_BAD_CURRENT_SURFACE /;"	d
EGL_BAD_DISPLAY	src/egl_context.h	/^#define EGL_BAD_DISPLAY /;"	d
EGL_BAD_MATCH	src/egl_context.h	/^#define EGL_BAD_MATCH /;"	d
EGL_BAD_NATIVE_PIXMAP	src/egl_context.h	/^#define EGL_BAD_NATIVE_PIXMAP /;"	d
EGL_BAD_NATIVE_WINDOW	src/egl_context.h	/^#define EGL_BAD_NATIVE_WINDOW /;"	d
EGL_BAD_PARAMETER	src/egl_context.h	/^#define EGL_BAD_PARAMETER /;"	d
EGL_BAD_SURFACE	src/egl_context.h	/^#define EGL_BAD_SURFACE /;"	d
EGL_BLUE_SIZE	src/egl_context.h	/^#define EGL_BLUE_SIZE /;"	d
EGL_COLOR_BUFFER_TYPE	src/egl_context.h	/^#define EGL_COLOR_BUFFER_TYPE /;"	d
EGL_CONTEXT_CLIENT_VERSION	src/egl_context.h	/^#define EGL_CONTEXT_CLIENT_VERSION /;"	d
EGL_CONTEXT_FLAGS_KHR	src/egl_context.h	/^#define EGL_CONTEXT_FLAGS_KHR /;"	d
EGL_CONTEXT_LOST	src/egl_context.h	/^#define EGL_CONTEXT_LOST /;"	d
EGL_CONTEXT_MAJOR_VERSION_KHR	src/egl_context.h	/^#define EGL_CONTEXT_MAJOR_VERSION_KHR /;"	d
EGL_CONTEXT_MINOR_VERSION_KHR	src/egl_context.h	/^#define EGL_CONTEXT_MINOR_VERSION_KHR /;"	d
EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR	src/egl_context.h	/^#define EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR	src/egl_context.h	/^#define EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR	src/egl_context.h	/^#define EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR	src/egl_context.h	/^#define EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_NO_ERROR_KHR	src/egl_context.h	/^#define EGL_CONTEXT_OPENGL_NO_ERROR_KHR /;"	d
EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR	src/egl_context.h	/^#define EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR /;"	d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR	src/egl_context.h	/^#define EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR /;"	d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR	src/egl_context.h	/^#define EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR /;"	d
EGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR	src/egl_context.h	/^#define EGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR /;"	d
EGL_CONTEXT_RELEASE_BEHAVIOR_KHR	src/egl_context.h	/^#define EGL_CONTEXT_RELEASE_BEHAVIOR_KHR /;"	d
EGL_CONTEXT_RELEASE_BEHAVIOR_NONE_KHR	src/egl_context.h	/^#define EGL_CONTEXT_RELEASE_BEHAVIOR_NONE_KHR /;"	d
EGL_DEFAULT_DISPLAY	src/egl_context.h	/^#define EGL_DEFAULT_DISPLAY /;"	d
EGL_DEPTH_SIZE	src/egl_context.h	/^#define EGL_DEPTH_SIZE /;"	d
EGL_EXTENSIONS	src/egl_context.h	/^#define EGL_EXTENSIONS /;"	d
EGL_GL_COLORSPACE_KHR	src/egl_context.h	/^#define EGL_GL_COLORSPACE_KHR /;"	d
EGL_GL_COLORSPACE_SRGB_KHR	src/egl_context.h	/^#define EGL_GL_COLORSPACE_SRGB_KHR /;"	d
EGL_GREEN_SIZE	src/egl_context.h	/^#define EGL_GREEN_SIZE /;"	d
EGL_LOSE_CONTEXT_ON_RESET_KHR	src/egl_context.h	/^#define EGL_LOSE_CONTEXT_ON_RESET_KHR /;"	d
EGL_NATIVE_VISUAL_ID	src/egl_context.h	/^#define EGL_NATIVE_VISUAL_ID /;"	d
EGL_NONE	src/egl_context.h	/^#define EGL_NONE /;"	d
EGL_NOT_INITIALIZED	src/egl_context.h	/^#define EGL_NOT_INITIALIZED /;"	d
EGL_NO_CONTEXT	src/egl_context.h	/^#define EGL_NO_CONTEXT /;"	d
EGL_NO_DISPLAY	src/egl_context.h	/^#define EGL_NO_DISPLAY /;"	d
EGL_NO_RESET_NOTIFICATION_KHR	src/egl_context.h	/^#define EGL_NO_RESET_NOTIFICATION_KHR /;"	d
EGL_NO_SURFACE	src/egl_context.h	/^#define EGL_NO_SURFACE /;"	d
EGL_OPENGL_API	src/egl_context.h	/^#define EGL_OPENGL_API /;"	d
EGL_OPENGL_BIT	src/egl_context.h	/^#define EGL_OPENGL_BIT /;"	d
EGL_OPENGL_ES2_BIT	src/egl_context.h	/^#define EGL_OPENGL_ES2_BIT /;"	d
EGL_OPENGL_ES_API	src/egl_context.h	/^#define EGL_OPENGL_ES_API /;"	d
EGL_OPENGL_ES_BIT	src/egl_context.h	/^#define EGL_OPENGL_ES_BIT /;"	d
EGL_RED_SIZE	src/egl_context.h	/^#define EGL_RED_SIZE /;"	d
EGL_RENDERABLE_TYPE	src/egl_context.h	/^#define EGL_RENDERABLE_TYPE /;"	d
EGL_RGB_BUFFER	src/egl_context.h	/^#define EGL_RGB_BUFFER /;"	d
EGL_SAMPLES	src/egl_context.h	/^#define EGL_SAMPLES /;"	d
EGL_STENCIL_SIZE	src/egl_context.h	/^#define EGL_STENCIL_SIZE /;"	d
EGL_SUCCESS	src/egl_context.h	/^#define EGL_SUCCESS /;"	d
EGL_SURFACE_TYPE	src/egl_context.h	/^#define EGL_SURFACE_TYPE /;"	d
EGL_WINDOW_BIT	src/egl_context.h	/^#define EGL_WINDOW_BIT /;"	d
EGLenum	src/egl_context.h	/^typedef unsigned int EGLenum;$/;"	t	typeref:typename:unsigned int
EGLint	src/egl_context.h	/^typedef int EGLint;$/;"	t	typeref:typename:int
EPOLLSHIM_FOUND	CMake/modules/FindEpollShim.cmake	/^	set(EPOLLSHIM_FOUND TRUE)$/;"	v
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	src/wgl_context.h	/^#define ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB /;"	d
ERROR_INVALID_PROFILE_ARB	src/wgl_context.h	/^#define ERROR_INVALID_PROFILE_ARB /;"	d
ERROR_INVALID_VERSION_ARB	src/wgl_context.h	/^#define ERROR_INVALID_VERSION_ARB /;"	d
ERR_EXIT	tests/triangle-vulkan.c	/^#define ERR_EXIT(/;"	d	file:
EXTENSIONS	tests/glfwinfo.c	/^           EXTENSIONS, LAYERS,$/;"	e	enum:main::__anon6b8c80140103	file:
EXT_colorspace	src/wgl_context.h	/^    GLFWbool                            EXT_colorspace;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
EXT_create_context_es2_profile	src/glx_context.h	/^    GLFWbool        EXT_create_context_es2_profile;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
EXT_create_context_es2_profile	src/wgl_context.h	/^    GLFWbool                            EXT_create_context_es2_profile;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
EXT_framebuffer_sRGB	src/glx_context.h	/^    GLFWbool        EXT_framebuffer_sRGB;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
EXT_framebuffer_sRGB	src/wgl_context.h	/^    GLFWbool                            EXT_framebuffer_sRGB;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
EXT_metal_surface	src/internal.h	/^        GLFWbool        EXT_metal_surface;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:GLFWbool
EXT_swap_control	src/glx_context.h	/^    GLFWbool        EXT_swap_control;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
EXT_swap_control	src/wgl_context.h	/^    GLFWbool                            EXT_swap_control;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:GLFWbool
E_PENDING	deps/mingw/dinput.h	/^#define E_PENDING /;"	d
EnableBlurBehindWindow	src/win32_platform.h	/^        PFN_DwmEnableBlurBehindWindow   EnableBlurBehindWindow;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890908	typeref:typename:PFN_DwmEnableBlurBehindWindow
EnableNonClientDpiScaling	src/win32_platform.h	/^#define EnableNonClientDpiScaling /;"	d
EnableNonClientDpiScaling_	src/win32_platform.h	/^        PFN_EnableNonClientDpiScaling   EnableNonClientDpiScaling_;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890808	typeref:typename:PFN_EnableNonClientDpiScaling
EnumerateInstanceExtensionProperties	src/internal.h	/^        PFN_vkEnumerateInstanceExtensionProperties EnumerateInstanceExtensionProperties;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:PFN_vkEnumerateInstanceExtensionProperties
ExtStatus	src/win32_platform.h	/^    DWORD ExtStatus;$/;"	m	struct:__anon622bd5890108	typeref:typename:DWORD
FALSE	deps/tinycthread.c	/^  #define FALSE /;"	d	file:
FORWARD	tests/glfwinfo.c	/^    enum { CLIENT, CONTEXT, BEHAVIOR, DEBUG_CONTEXT, FORWARD, HELP,$/;"	e	enum:main::__anon6b8c80140103	file:
FOUNTAIN_HEIGHT	examples/particles.c	/^#define FOUNTAIN_HEIGHT /;"	d	file:
FOUNTAIN_R2	examples/particles.c	/^#define FOUNTAIN_R2 /;"	d	file:
FOUNTAIN_RADIUS	examples/particles.c	/^#define FOUNTAIN_RADIUS /;"	d	file:
FOUNTAIN_SIDE_POINTS	examples/particles.c	/^#define FOUNTAIN_SIDE_POINTS /;"	d	file:
FOUNTAIN_SWEEP_STEPS	examples/particles.c	/^#define FOUNTAIN_SWEEP_STEPS /;"	d	file:
FRICTION	examples/particles.c	/^#define FRICTION /;"	d	file:
F_TEX_HEIGHT	examples/particles.c	/^#define F_TEX_HEIGHT /;"	d	file:
F_TEX_WIDTH	examples/particles.c	/^#define F_TEX_WIDTH /;"	d	file:
FindVisualFormat	src/x11_platform.h	/^        PFN_XRenderFindVisualFormat FindVisualFormat;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00a08	typeref:typename:PFN_XRenderFindVisualFormat
Flags	deps/mingw/xinput.h	/^    WORD Flags;$/;"	m	struct:_XINPUT_CAPABILITIES	typeref:typename:WORD
Flags	deps/mingw/xinput.h	/^    WORD Flags;$/;"	m	struct:_XINPUT_KEYSTROKE	typeref:typename:WORD
Flush	src/win32_platform.h	/^        PFN_DwmFlush                    Flush;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890908	typeref:typename:PFN_DwmFlush
FreeCrtcInfo	src/x11_platform.h	/^        PFN_XRRFreeCrtcInfo FreeCrtcInfo;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRFreeCrtcInfo
FreeGamma	src/x11_platform.h	/^        PFN_XRRFreeGamma FreeGamma;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRFreeGamma
FreeOutputInfo	src/x11_platform.h	/^        PFN_XRRFreeOutputInfo FreeOutputInfo;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRFreeOutputInfo
FreeScreenResources	src/x11_platform.h	/^        PFN_XRRFreeScreenResources FreeScreenResources;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRFreeScreenResources
GETOPT	examples/CMakeLists.txt	/^set(GETOPT "${GLFW_SOURCE_DIR}\/deps\/getopt.h"$/;"	v
GETOPT	tests/CMakeLists.txt	/^set(GETOPT "${GLFW_SOURCE_DIR}\/deps\/getopt.h"$/;"	v
GET_DIDEVICE_SUBTYPE	deps/mingw/dinput.h	/^#define GET_DIDEVICE_SUBTYPE(/;"	d
GET_DIDEVICE_TYPE	deps/mingw/dinput.h	/^#define GET_DIDEVICE_TYPE(/;"	d
GET_XBUTTON_WPARAM	src/win32_platform.h	/^ #define GET_XBUTTON_WPARAM(/;"	d
GLAD_API_CALL	deps/glad/gl.h	/^          #define GLAD_API_CALL /;"	d
GLAD_API_CALL	deps/glad/vulkan.h	/^          #define GLAD_API_CALL /;"	d
GLAD_API_PTR	deps/glad/gl.h	/^  #define GLAD_API_PTR /;"	d
GLAD_API_PTR	deps/glad/vulkan.h	/^  #define GLAD_API_PTR /;"	d
GLAD_GL	deps/glad/gl.h	/^#define GLAD_GL$/;"	d
GLAD_GL	examples/CMakeLists.txt	/^set(GLAD_GL "${GLFW_SOURCE_DIR}\/deps\/glad\/gl.h"$/;"	v
GLAD_GL	tests/CMakeLists.txt	/^set(GLAD_GL "${GLFW_SOURCE_DIR}\/deps\/glad\/gl.h"$/;"	v
GLAD_GL_ARB_multisample	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_ARB_multisample;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_ARB_multisample	deps/glad_gl.c	/^int GLAD_GL_ARB_multisample = 0;$/;"	v	typeref:typename:int
GLAD_GL_ARB_robustness	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_ARB_robustness;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_ARB_robustness	deps/glad_gl.c	/^int GLAD_GL_ARB_robustness = 0;$/;"	v	typeref:typename:int
GLAD_GL_H_	deps/glad/gl.h	/^#define GLAD_GL_H_$/;"	d
GLAD_GL_IS_SOME_NEW_VERSION	deps/glad_gl.c	/^#define GLAD_GL_IS_SOME_NEW_VERSION /;"	d	file:
GLAD_GL_KHR_debug	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_KHR_debug;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_KHR_debug	deps/glad_gl.c	/^int GLAD_GL_KHR_debug = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_1_0	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_1_0;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_1_0	deps/glad_gl.c	/^int GLAD_GL_VERSION_1_0 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_1_1	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_1_1;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_1_1	deps/glad_gl.c	/^int GLAD_GL_VERSION_1_1 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_1_2	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_1_2;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_1_2	deps/glad_gl.c	/^int GLAD_GL_VERSION_1_2 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_1_3	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_1_3;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_1_3	deps/glad_gl.c	/^int GLAD_GL_VERSION_1_3 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_1_4	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_1_4;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_1_4	deps/glad_gl.c	/^int GLAD_GL_VERSION_1_4 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_1_5	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_1_5;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_1_5	deps/glad_gl.c	/^int GLAD_GL_VERSION_1_5 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_2_0	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_2_0;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_2_0	deps/glad_gl.c	/^int GLAD_GL_VERSION_2_0 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_2_1	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_2_1;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_2_1	deps/glad_gl.c	/^int GLAD_GL_VERSION_2_1 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_3_0	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_3_0;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_3_0	deps/glad_gl.c	/^int GLAD_GL_VERSION_3_0 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_3_1	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_3_1;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_3_1	deps/glad_gl.c	/^int GLAD_GL_VERSION_3_1 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_3_2	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_3_2;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_3_2	deps/glad_gl.c	/^int GLAD_GL_VERSION_3_2 = 0;$/;"	v	typeref:typename:int
GLAD_GL_VERSION_3_3	deps/glad/gl.h	/^GLAD_API_CALL int GLAD_GL_VERSION_3_3;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_GL_VERSION_3_3	deps/glad_gl.c	/^int GLAD_GL_VERSION_3_3 = 0;$/;"	v	typeref:typename:int
GLAD_GNUC_EXTENSION	deps/glad/gl.h	/^  #define GLAD_GNUC_EXTENSION /;"	d
GLAD_GNUC_EXTENSION	deps/glad/vulkan.h	/^  #define GLAD_GNUC_EXTENSION /;"	d
GLAD_IMPL_UTIL_C_	deps/glad_gl.c	/^#define GLAD_IMPL_UTIL_C_$/;"	d	file:
GLAD_IMPL_UTIL_C_	deps/glad_vulkan.c	/^#define GLAD_IMPL_UTIL_C_$/;"	d	file:
GLAD_IMPL_UTIL_SSCANF	deps/glad_gl.c	/^#define GLAD_IMPL_UTIL_SSCANF /;"	d	file:
GLAD_IMPL_UTIL_SSCANF	deps/glad_vulkan.c	/^#define GLAD_IMPL_UTIL_SSCANF /;"	d	file:
GLAD_INTERNAL_HAVE_WINAPIFAMILY	deps/glad/gl.h	/^        #define GLAD_INTERNAL_HAVE_WINAPIFAMILY /;"	d
GLAD_INTERNAL_HAVE_WINAPIFAMILY	deps/glad/vulkan.h	/^        #define GLAD_INTERNAL_HAVE_WINAPIFAMILY /;"	d
GLAD_MAKE_VERSION	deps/glad/gl.h	/^#define GLAD_MAKE_VERSION(/;"	d
GLAD_MAKE_VERSION	deps/glad/vulkan.h	/^#define GLAD_MAKE_VERSION(/;"	d
GLAD_PLATFORM_APPLE	deps/glad/gl.h	/^    #define GLAD_PLATFORM_APPLE /;"	d
GLAD_PLATFORM_APPLE	deps/glad/vulkan.h	/^    #define GLAD_PLATFORM_APPLE /;"	d
GLAD_PLATFORM_EMSCRIPTEN	deps/glad/gl.h	/^    #define GLAD_PLATFORM_EMSCRIPTEN /;"	d
GLAD_PLATFORM_EMSCRIPTEN	deps/glad/vulkan.h	/^    #define GLAD_PLATFORM_EMSCRIPTEN /;"	d
GLAD_PLATFORM_H_	deps/glad/gl.h	/^#define GLAD_PLATFORM_H_$/;"	d
GLAD_PLATFORM_H_	deps/glad/vulkan.h	/^#define GLAD_PLATFORM_H_$/;"	d
GLAD_PLATFORM_UWP	deps/glad/gl.h	/^      #define GLAD_PLATFORM_UWP /;"	d
GLAD_PLATFORM_UWP	deps/glad/gl.h	/^    #define GLAD_PLATFORM_UWP /;"	d
GLAD_PLATFORM_UWP	deps/glad/vulkan.h	/^      #define GLAD_PLATFORM_UWP /;"	d
GLAD_PLATFORM_UWP	deps/glad/vulkan.h	/^    #define GLAD_PLATFORM_UWP /;"	d
GLAD_PLATFORM_WIN32	deps/glad/gl.h	/^    #define GLAD_PLATFORM_WIN32 /;"	d
GLAD_PLATFORM_WIN32	deps/glad/vulkan.h	/^    #define GLAD_PLATFORM_WIN32 /;"	d
GLAD_VERSION_MAJOR	deps/glad/gl.h	/^#define GLAD_VERSION_MAJOR(/;"	d
GLAD_VERSION_MAJOR	deps/glad/vulkan.h	/^#define GLAD_VERSION_MAJOR(/;"	d
GLAD_VERSION_MINOR	deps/glad/gl.h	/^#define GLAD_VERSION_MINOR(/;"	d
GLAD_VERSION_MINOR	deps/glad/vulkan.h	/^#define GLAD_VERSION_MINOR(/;"	d
GLAD_VK_EXT_debug_report	deps/glad/vulkan.h	/^GLAD_API_CALL int GLAD_VK_EXT_debug_report;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_VK_EXT_debug_report	deps/glad_vulkan.c	/^int GLAD_VK_EXT_debug_report = 0;$/;"	v	typeref:typename:int
GLAD_VK_KHR_surface	deps/glad/vulkan.h	/^GLAD_API_CALL int GLAD_VK_KHR_surface;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_VK_KHR_surface	deps/glad_vulkan.c	/^int GLAD_VK_KHR_surface = 0;$/;"	v	typeref:typename:int
GLAD_VK_KHR_swapchain	deps/glad/vulkan.h	/^GLAD_API_CALL int GLAD_VK_KHR_swapchain;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_VK_KHR_swapchain	deps/glad_vulkan.c	/^int GLAD_VK_KHR_swapchain = 0;$/;"	v	typeref:typename:int
GLAD_VK_VERSION_1_0	deps/glad/vulkan.h	/^GLAD_API_CALL int GLAD_VK_VERSION_1_0;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_VK_VERSION_1_0	deps/glad_vulkan.c	/^int GLAD_VK_VERSION_1_0 = 0;$/;"	v	typeref:typename:int
GLAD_VK_VERSION_1_1	deps/glad/vulkan.h	/^GLAD_API_CALL int GLAD_VK_VERSION_1_1;$/;"	v	typeref:typename:GLAD_API_CALL int
GLAD_VK_VERSION_1_1	deps/glad_vulkan.c	/^int GLAD_VK_VERSION_1_1 = 0;$/;"	v	typeref:typename:int
GLAD_VULKAN	deps/glad/vulkan.h	/^#define GLAD_VULKAN$/;"	d
GLAD_VULKAN	tests/CMakeLists.txt	/^set(GLAD_VULKAN "${GLFW_SOURCE_DIR}\/deps\/glad\/vulkan.h"$/;"	v
GLAD_VULKAN_H_	deps/glad/vulkan.h	/^#define GLAD_VULKAN_H_$/;"	d
GLADapiproc	deps/glad/gl.h	/^typedef void (*GLADapiproc)(void);$/;"	t	typeref:typename:void (*)(void)
GLADapiproc	deps/glad/vulkan.h	/^typedef void (*GLADapiproc)(void);$/;"	t	typeref:typename:void (*)(void)
GLADloadfunc	deps/glad/gl.h	/^typedef GLADapiproc (*GLADloadfunc)(const char *name);$/;"	t	typeref:typename:GLADapiproc (*)(const char * name)
GLADloadfunc	deps/glad/vulkan.h	/^typedef GLADapiproc (*GLADloadfunc)(const char *name);$/;"	t	typeref:typename:GLADapiproc (*)(const char * name)
GLADpostcallback	deps/glad/gl.h	/^typedef void (*GLADpostcallback)(void *ret, const char *name, GLADapiproc apiproc, int len_args,/;"	t	typeref:typename:void (*)(void * ret,const char * name,GLADapiproc apiproc,int len_args,...)
GLADpostcallback	deps/glad/vulkan.h	/^typedef void (*GLADpostcallback)(void *ret, const char *name, GLADapiproc apiproc, int len_args,/;"	t	typeref:typename:void (*)(void * ret,const char * name,GLADapiproc apiproc,int len_args,...)
GLADprecallback	deps/glad/gl.h	/^typedef void (*GLADprecallback)(const char *name, GLADapiproc apiproc, int len_args, ...);$/;"	t	typeref:typename:void (*)(const char * name,GLADapiproc apiproc,int len_args,...)
GLADprecallback	deps/glad/vulkan.h	/^typedef void (*GLADprecallback)(const char *name, GLADapiproc apiproc, int len_args, ...);$/;"	t	typeref:typename:void (*)(const char * name,GLADapiproc apiproc,int len_args,...)
GLADuserptrloadfunc	deps/glad/gl.h	/^typedef GLADapiproc (*GLADuserptrloadfunc)(const char *name, void *userptr);$/;"	t	typeref:typename:GLADapiproc (*)(const char * name,void * userptr)
GLADuserptrloadfunc	deps/glad/vulkan.h	/^typedef GLADapiproc (*GLADuserptrloadfunc)(const char *name, void *userptr);$/;"	t	typeref:typename:GLADapiproc (*)(const char * name,void * userptr)
GLAPI	deps/glad/gl.h	/^#define GLAPI /;"	d
GLAPI	deps/glad/vulkan.h	/^#define GLAPI /;"	d
GLAPIENTRY	deps/glad/gl.h	/^#define GLAPIENTRY /;"	d
GLAPIENTRY	deps/glad/vulkan.h	/^#define GLAPIENTRY /;"	d
GLAPIENTRY	include/GLFW/glfw3.h	/^ #define GLAPIENTRY /;"	d
GLDEBUGPROC	deps/glad/gl.h	/^typedef void ( *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,/;"	t	typeref:typename:void (*)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCAMD	deps/glad/gl.h	/^typedef void ( *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const G/;"	t	typeref:typename:void (*)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,void * userParam)
GLDEBUGPROCARB	deps/glad/gl.h	/^typedef void ( *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei leng/;"	t	typeref:typename:void (*)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCKHR	deps/glad/gl.h	/^typedef void ( *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei leng/;"	t	typeref:typename:void (*)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLFW	CMakeLists.txt	/^project(GLFW VERSION 3.4.0 LANGUAGES C)$/;"	p
GLFW	README.md	/^# GLFW$/;"	c
GLFWAPI	include/GLFW/glfw3.h	/^ #define GLFWAPI /;"	d
GLFWApplicationDelegate	src/cocoa_init.m	/^@implementation GLFWApplicationDelegate$/;"	I
GLFWApplicationDelegate	src/cocoa_init.m	/^@interface GLFWApplicationDelegate : NSObject <NSApplicationDelegate>$/;"	i	protocols:NSApplicationDelegate
GLFWContentView	src/cocoa_window.m	/^@implementation GLFWContentView$/;"	I
GLFWContentView	src/cocoa_window.m	/^@interface GLFWContentView : NSView <NSTextInputClient>$/;"	i	protocols:NSTextInputClient
GLFWHelper	src/cocoa_init.m	/^@implementation GLFWHelper$/;"	I
GLFWHelper	src/cocoa_init.m	/^@interface GLFWHelper : NSObject$/;"	i
GLFWWindow	src/cocoa_window.m	/^@implementation GLFWWindow$/;"	I
GLFWWindow	src/cocoa_window.m	/^@interface GLFWWindow : NSWindow {}$/;"	i
GLFWWindowDelegate	src/cocoa_window.m	/^@implementation GLFWWindowDelegate$/;"	I
GLFWWindowDelegate	src/cocoa_window.m	/^@interface GLFWWindowDelegate : NSObject$/;"	i
GLFW_ACCUM_ALPHA_BITS	include/GLFW/glfw3.h	/^#define GLFW_ACCUM_ALPHA_BITS /;"	d
GLFW_ACCUM_BLUE_BITS	include/GLFW/glfw3.h	/^#define GLFW_ACCUM_BLUE_BITS /;"	d
GLFW_ACCUM_GREEN_BITS	include/GLFW/glfw3.h	/^#define GLFW_ACCUM_GREEN_BITS /;"	d
GLFW_ACCUM_RED_BITS	include/GLFW/glfw3.h	/^#define GLFW_ACCUM_RED_BITS /;"	d
GLFW_ALPHA_BITS	include/GLFW/glfw3.h	/^#define GLFW_ALPHA_BITS /;"	d
GLFW_ANY_RELEASE_BEHAVIOR	include/GLFW/glfw3.h	/^#define GLFW_ANY_RELEASE_BEHAVIOR /;"	d
GLFW_APIENTRY_DEFINED	include/GLFW/glfw3.h	/^ #define GLFW_APIENTRY_DEFINED$/;"	d
GLFW_API_UNAVAILABLE	include/GLFW/glfw3.h	/^#define GLFW_API_UNAVAILABLE /;"	d
GLFW_ARROW_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_ARROW_CURSOR /;"	d
GLFW_AUTO_ICONIFY	include/GLFW/glfw3.h	/^#define GLFW_AUTO_ICONIFY /;"	d
GLFW_AUX_BUFFERS	include/GLFW/glfw3.h	/^#define GLFW_AUX_BUFFERS /;"	d
GLFW_BLUE_BITS	include/GLFW/glfw3.h	/^#define GLFW_BLUE_BITS /;"	d
GLFW_BUILD_DOCS	CMakeLists.txt	/^option(GLFW_BUILD_DOCS "Build the GLFW documentation" ON)$/;"	D
GLFW_BUILD_EXAMPLES	CMakeLists.txt	/^option(GLFW_BUILD_EXAMPLES "Build the GLFW example programs" ${GLFW_STANDALONE})$/;"	D
GLFW_BUILD_TESTS	CMakeLists.txt	/^option(GLFW_BUILD_TESTS "Build the GLFW test programs" ${GLFW_STANDALONE})$/;"	D
GLFW_CALLBACK_DEFINED	include/GLFW/glfw3.h	/^ #define GLFW_CALLBACK_DEFINED$/;"	d
GLFW_CENTER_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_CENTER_CURSOR /;"	d
GLFW_CLIENT_API	include/GLFW/glfw3.h	/^#define GLFW_CLIENT_API /;"	d
GLFW_COCOA_CHDIR_RESOURCES	include/GLFW/glfw3.h	/^#define GLFW_COCOA_CHDIR_RESOURCES /;"	d
GLFW_COCOA_FRAME_NAME	include/GLFW/glfw3.h	/^#define GLFW_COCOA_FRAME_NAME /;"	d
GLFW_COCOA_GRAPHICS_SWITCHING	include/GLFW/glfw3.h	/^#define GLFW_COCOA_GRAPHICS_SWITCHING /;"	d
GLFW_COCOA_MENUBAR	include/GLFW/glfw3.h	/^#define GLFW_COCOA_MENUBAR /;"	d
GLFW_COCOA_RETINA_FRAMEBUFFER	include/GLFW/glfw3.h	/^#define GLFW_COCOA_RETINA_FRAMEBUFFER /;"	d
GLFW_CONFIG_PATH	CMakeLists.txt	/^set(GLFW_CONFIG_PATH "${CMAKE_INSTALL_LIBDIR}\/cmake\/glfw3")$/;"	v
GLFW_CONNECTED	include/GLFW/glfw3.h	/^#define GLFW_CONNECTED /;"	d
GLFW_CONTEXT_CREATION_API	include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_CREATION_API /;"	d
GLFW_CONTEXT_NO_ERROR	include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_NO_ERROR /;"	d
GLFW_CONTEXT_RELEASE_BEHAVIOR	include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_RELEASE_BEHAVIOR /;"	d
GLFW_CONTEXT_REVISION	include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_REVISION /;"	d
GLFW_CONTEXT_ROBUSTNESS	include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_ROBUSTNESS /;"	d
GLFW_CONTEXT_VERSION_MAJOR	include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_VERSION_MAJOR /;"	d
GLFW_CONTEXT_VERSION_MINOR	include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_VERSION_MINOR /;"	d
GLFW_CROSSHAIR_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_CROSSHAIR_CURSOR /;"	d
GLFW_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_CURSOR /;"	d
GLFW_CURSOR_DISABLED	include/GLFW/glfw3.h	/^#define GLFW_CURSOR_DISABLED /;"	d
GLFW_CURSOR_HIDDEN	include/GLFW/glfw3.h	/^#define GLFW_CURSOR_HIDDEN /;"	d
GLFW_CURSOR_NORMAL	include/GLFW/glfw3.h	/^#define GLFW_CURSOR_NORMAL /;"	d
GLFW_CURSOR_UNAVAILABLE	include/GLFW/glfw3.h	/^#define GLFW_CURSOR_UNAVAILABLE /;"	d
GLFW_DECORATED	include/GLFW/glfw3.h	/^#define GLFW_DECORATED /;"	d
GLFW_DEPTH_BITS	include/GLFW/glfw3.h	/^#define GLFW_DEPTH_BITS /;"	d
GLFW_DISCONNECTED	include/GLFW/glfw3.h	/^#define GLFW_DISCONNECTED /;"	d
GLFW_DONT_CARE	include/GLFW/glfw3.h	/^#define GLFW_DONT_CARE /;"	d
GLFW_DOUBLEBUFFER	include/GLFW/glfw3.h	/^#define GLFW_DOUBLEBUFFER /;"	d
GLFW_DOXYGEN_INPUT	docs/CMakeLists.txt	/^    set(GLFW_DOXYGEN_INPUT "${GLFW_DOXYGEN_INPUT} \\\\\\n\\"${GLFW_SOURCE_DIR}\/${path}\\"")$/;"	v
GLFW_DOXYGEN_SOURCES	docs/CMakeLists.txt	/^set(GLFW_DOXYGEN_SOURCES$/;"	v
GLFW_EGL_CONTEXT_API	include/GLFW/glfw3.h	/^#define GLFW_EGL_CONTEXT_API /;"	d
GLFW_EXPOSE_NATIVE_OSMESA	examples/offscreen.c	/^ #define GLFW_EXPOSE_NATIVE_OSMESA$/;"	d	file:
GLFW_FALSE	include/GLFW/glfw3.h	/^#define GLFW_FALSE /;"	d
GLFW_FLOATING	include/GLFW/glfw3.h	/^#define GLFW_FLOATING /;"	d
GLFW_FOCUSED	include/GLFW/glfw3.h	/^#define GLFW_FOCUSED /;"	d
GLFW_FOCUS_ON_SHOW	include/GLFW/glfw3.h	/^#define GLFW_FOCUS_ON_SHOW /;"	d
GLFW_FORMAT_UNAVAILABLE	include/GLFW/glfw3.h	/^#define GLFW_FORMAT_UNAVAILABLE /;"	d
GLFW_GAMEPAD_AXIS_LAST	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_AXIS_LAST /;"	d
GLFW_GAMEPAD_AXIS_LEFT_TRIGGER	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_AXIS_LEFT_TRIGGER /;"	d
GLFW_GAMEPAD_AXIS_LEFT_X	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_AXIS_LEFT_X /;"	d
GLFW_GAMEPAD_AXIS_LEFT_Y	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_AXIS_LEFT_Y /;"	d
GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER /;"	d
GLFW_GAMEPAD_AXIS_RIGHT_X	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_AXIS_RIGHT_X /;"	d
GLFW_GAMEPAD_AXIS_RIGHT_Y	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_AXIS_RIGHT_Y /;"	d
GLFW_GAMEPAD_BUTTON_A	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_A /;"	d
GLFW_GAMEPAD_BUTTON_B	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_B /;"	d
GLFW_GAMEPAD_BUTTON_BACK	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_BACK /;"	d
GLFW_GAMEPAD_BUTTON_CIRCLE	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_CIRCLE /;"	d
GLFW_GAMEPAD_BUTTON_CROSS	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_CROSS /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_DOWN	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_DPAD_DOWN /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_LEFT	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_DPAD_LEFT /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_RIGHT	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_DPAD_RIGHT /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_UP	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_DPAD_UP /;"	d
GLFW_GAMEPAD_BUTTON_GUIDE	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_GUIDE /;"	d
GLFW_GAMEPAD_BUTTON_LAST	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_LAST /;"	d
GLFW_GAMEPAD_BUTTON_LEFT_BUMPER	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_LEFT_BUMPER /;"	d
GLFW_GAMEPAD_BUTTON_LEFT_THUMB	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_LEFT_THUMB /;"	d
GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER /;"	d
GLFW_GAMEPAD_BUTTON_RIGHT_THUMB	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_RIGHT_THUMB /;"	d
GLFW_GAMEPAD_BUTTON_SQUARE	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_SQUARE /;"	d
GLFW_GAMEPAD_BUTTON_START	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_START /;"	d
GLFW_GAMEPAD_BUTTON_TRIANGLE	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_TRIANGLE /;"	d
GLFW_GAMEPAD_BUTTON_X	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_X /;"	d
GLFW_GAMEPAD_BUTTON_Y	include/GLFW/glfw3.h	/^#define GLFW_GAMEPAD_BUTTON_Y /;"	d
GLFW_GAMEPAD_MAPPINGS	CMake/GenerateMappings.cmake	/^        set(GLFW_GAMEPAD_MAPPINGS "${GLFW_GAMEPAD_MAPPINGS}\\"${line}\\",\\n")$/;"	v
GLFW_GREEN_BITS	include/GLFW/glfw3.h	/^#define GLFW_GREEN_BITS /;"	d
GLFW_HAND_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_HAND_CURSOR /;"	d
GLFW_HAT_CENTERED	include/GLFW/glfw3.h	/^#define GLFW_HAT_CENTERED /;"	d
GLFW_HAT_DOWN	include/GLFW/glfw3.h	/^#define GLFW_HAT_DOWN /;"	d
GLFW_HAT_LEFT	include/GLFW/glfw3.h	/^#define GLFW_HAT_LEFT /;"	d
GLFW_HAT_LEFT_DOWN	include/GLFW/glfw3.h	/^#define GLFW_HAT_LEFT_DOWN /;"	d
GLFW_HAT_LEFT_UP	include/GLFW/glfw3.h	/^#define GLFW_HAT_LEFT_UP /;"	d
GLFW_HAT_RIGHT	include/GLFW/glfw3.h	/^#define GLFW_HAT_RIGHT /;"	d
GLFW_HAT_RIGHT_DOWN	include/GLFW/glfw3.h	/^#define GLFW_HAT_RIGHT_DOWN /;"	d
GLFW_HAT_RIGHT_UP	include/GLFW/glfw3.h	/^#define GLFW_HAT_RIGHT_UP /;"	d
GLFW_HAT_UP	include/GLFW/glfw3.h	/^#define GLFW_HAT_UP /;"	d
GLFW_HOVERED	include/GLFW/glfw3.h	/^#define GLFW_HOVERED /;"	d
GLFW_HRESIZE_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_HRESIZE_CURSOR /;"	d
GLFW_IBEAM_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_IBEAM_CURSOR /;"	d
GLFW_ICON	examples/glfw.rc	/^GLFW_ICON               ICON            "glfw.ico"$/;"	i
GLFW_ICONIFIED	include/GLFW/glfw3.h	/^#define GLFW_ICONIFIED /;"	d
GLFW_INCLUDE_NONE	examples/boing.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	examples/gears.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	examples/heightmap.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	examples/offscreen.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	examples/particles.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	examples/sharing.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	examples/splitview.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	examples/triangle-opengl.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	examples/wave.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	src/internal.h	/^#define GLFW_INCLUDE_NONE$/;"	d
GLFW_INCLUDE_NONE	tests/clipboard.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/cursor.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/empty.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/events.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/gamma.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/glfwinfo.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/icon.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/iconify.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/inputlag.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/joysticks.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/monitors.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/msaa.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/opacity.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/reopen.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/tearing.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/threads.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/timeout.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/title.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/triangle-vulkan.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	tests/windows.c	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INSTALL	CMakeLists.txt	/^option(GLFW_INSTALL "Generate installation target" ON)$/;"	D
GLFW_INVALID_ENUM	include/GLFW/glfw3.h	/^#define GLFW_INVALID_ENUM /;"	d
GLFW_INVALID_VALUE	include/GLFW/glfw3.h	/^#define GLFW_INVALID_VALUE /;"	d
GLFW_JOYSTICK_1	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_1 /;"	d
GLFW_JOYSTICK_10	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_10 /;"	d
GLFW_JOYSTICK_11	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_11 /;"	d
GLFW_JOYSTICK_12	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_12 /;"	d
GLFW_JOYSTICK_13	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_13 /;"	d
GLFW_JOYSTICK_14	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_14 /;"	d
GLFW_JOYSTICK_15	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_15 /;"	d
GLFW_JOYSTICK_16	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_16 /;"	d
GLFW_JOYSTICK_2	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_2 /;"	d
GLFW_JOYSTICK_3	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_3 /;"	d
GLFW_JOYSTICK_4	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_4 /;"	d
GLFW_JOYSTICK_5	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_5 /;"	d
GLFW_JOYSTICK_6	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_6 /;"	d
GLFW_JOYSTICK_7	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_7 /;"	d
GLFW_JOYSTICK_8	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_8 /;"	d
GLFW_JOYSTICK_9	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_9 /;"	d
GLFW_JOYSTICK_HAT_BUTTONS	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_HAT_BUTTONS /;"	d
GLFW_JOYSTICK_LAST	include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_LAST /;"	d
GLFW_KEY_0	include/GLFW/glfw3.h	/^#define GLFW_KEY_0 /;"	d
GLFW_KEY_1	include/GLFW/glfw3.h	/^#define GLFW_KEY_1 /;"	d
GLFW_KEY_2	include/GLFW/glfw3.h	/^#define GLFW_KEY_2 /;"	d
GLFW_KEY_3	include/GLFW/glfw3.h	/^#define GLFW_KEY_3 /;"	d
GLFW_KEY_4	include/GLFW/glfw3.h	/^#define GLFW_KEY_4 /;"	d
GLFW_KEY_5	include/GLFW/glfw3.h	/^#define GLFW_KEY_5 /;"	d
GLFW_KEY_6	include/GLFW/glfw3.h	/^#define GLFW_KEY_6 /;"	d
GLFW_KEY_7	include/GLFW/glfw3.h	/^#define GLFW_KEY_7 /;"	d
GLFW_KEY_8	include/GLFW/glfw3.h	/^#define GLFW_KEY_8 /;"	d
GLFW_KEY_9	include/GLFW/glfw3.h	/^#define GLFW_KEY_9 /;"	d
GLFW_KEY_A	include/GLFW/glfw3.h	/^#define GLFW_KEY_A /;"	d
GLFW_KEY_APOSTROPHE	include/GLFW/glfw3.h	/^#define GLFW_KEY_APOSTROPHE /;"	d
GLFW_KEY_B	include/GLFW/glfw3.h	/^#define GLFW_KEY_B /;"	d
GLFW_KEY_BACKSLASH	include/GLFW/glfw3.h	/^#define GLFW_KEY_BACKSLASH /;"	d
GLFW_KEY_BACKSPACE	include/GLFW/glfw3.h	/^#define GLFW_KEY_BACKSPACE /;"	d
GLFW_KEY_C	include/GLFW/glfw3.h	/^#define GLFW_KEY_C /;"	d
GLFW_KEY_CAPS_LOCK	include/GLFW/glfw3.h	/^#define GLFW_KEY_CAPS_LOCK /;"	d
GLFW_KEY_COMMA	include/GLFW/glfw3.h	/^#define GLFW_KEY_COMMA /;"	d
GLFW_KEY_D	include/GLFW/glfw3.h	/^#define GLFW_KEY_D /;"	d
GLFW_KEY_DELETE	include/GLFW/glfw3.h	/^#define GLFW_KEY_DELETE /;"	d
GLFW_KEY_DOWN	include/GLFW/glfw3.h	/^#define GLFW_KEY_DOWN /;"	d
GLFW_KEY_E	include/GLFW/glfw3.h	/^#define GLFW_KEY_E /;"	d
GLFW_KEY_END	include/GLFW/glfw3.h	/^#define GLFW_KEY_END /;"	d
GLFW_KEY_ENTER	include/GLFW/glfw3.h	/^#define GLFW_KEY_ENTER /;"	d
GLFW_KEY_EQUAL	include/GLFW/glfw3.h	/^#define GLFW_KEY_EQUAL /;"	d
GLFW_KEY_ESCAPE	include/GLFW/glfw3.h	/^#define GLFW_KEY_ESCAPE /;"	d
GLFW_KEY_F	include/GLFW/glfw3.h	/^#define GLFW_KEY_F /;"	d
GLFW_KEY_F1	include/GLFW/glfw3.h	/^#define GLFW_KEY_F1 /;"	d
GLFW_KEY_F10	include/GLFW/glfw3.h	/^#define GLFW_KEY_F10 /;"	d
GLFW_KEY_F11	include/GLFW/glfw3.h	/^#define GLFW_KEY_F11 /;"	d
GLFW_KEY_F12	include/GLFW/glfw3.h	/^#define GLFW_KEY_F12 /;"	d
GLFW_KEY_F13	include/GLFW/glfw3.h	/^#define GLFW_KEY_F13 /;"	d
GLFW_KEY_F14	include/GLFW/glfw3.h	/^#define GLFW_KEY_F14 /;"	d
GLFW_KEY_F15	include/GLFW/glfw3.h	/^#define GLFW_KEY_F15 /;"	d
GLFW_KEY_F16	include/GLFW/glfw3.h	/^#define GLFW_KEY_F16 /;"	d
GLFW_KEY_F17	include/GLFW/glfw3.h	/^#define GLFW_KEY_F17 /;"	d
GLFW_KEY_F18	include/GLFW/glfw3.h	/^#define GLFW_KEY_F18 /;"	d
GLFW_KEY_F19	include/GLFW/glfw3.h	/^#define GLFW_KEY_F19 /;"	d
GLFW_KEY_F2	include/GLFW/glfw3.h	/^#define GLFW_KEY_F2 /;"	d
GLFW_KEY_F20	include/GLFW/glfw3.h	/^#define GLFW_KEY_F20 /;"	d
GLFW_KEY_F21	include/GLFW/glfw3.h	/^#define GLFW_KEY_F21 /;"	d
GLFW_KEY_F22	include/GLFW/glfw3.h	/^#define GLFW_KEY_F22 /;"	d
GLFW_KEY_F23	include/GLFW/glfw3.h	/^#define GLFW_KEY_F23 /;"	d
GLFW_KEY_F24	include/GLFW/glfw3.h	/^#define GLFW_KEY_F24 /;"	d
GLFW_KEY_F25	include/GLFW/glfw3.h	/^#define GLFW_KEY_F25 /;"	d
GLFW_KEY_F3	include/GLFW/glfw3.h	/^#define GLFW_KEY_F3 /;"	d
GLFW_KEY_F4	include/GLFW/glfw3.h	/^#define GLFW_KEY_F4 /;"	d
GLFW_KEY_F5	include/GLFW/glfw3.h	/^#define GLFW_KEY_F5 /;"	d
GLFW_KEY_F6	include/GLFW/glfw3.h	/^#define GLFW_KEY_F6 /;"	d
GLFW_KEY_F7	include/GLFW/glfw3.h	/^#define GLFW_KEY_F7 /;"	d
GLFW_KEY_F8	include/GLFW/glfw3.h	/^#define GLFW_KEY_F8 /;"	d
GLFW_KEY_F9	include/GLFW/glfw3.h	/^#define GLFW_KEY_F9 /;"	d
GLFW_KEY_G	include/GLFW/glfw3.h	/^#define GLFW_KEY_G /;"	d
GLFW_KEY_GRAVE_ACCENT	include/GLFW/glfw3.h	/^#define GLFW_KEY_GRAVE_ACCENT /;"	d
GLFW_KEY_H	include/GLFW/glfw3.h	/^#define GLFW_KEY_H /;"	d
GLFW_KEY_HOME	include/GLFW/glfw3.h	/^#define GLFW_KEY_HOME /;"	d
GLFW_KEY_I	include/GLFW/glfw3.h	/^#define GLFW_KEY_I /;"	d
GLFW_KEY_INSERT	include/GLFW/glfw3.h	/^#define GLFW_KEY_INSERT /;"	d
GLFW_KEY_J	include/GLFW/glfw3.h	/^#define GLFW_KEY_J /;"	d
GLFW_KEY_K	include/GLFW/glfw3.h	/^#define GLFW_KEY_K /;"	d
GLFW_KEY_KP_0	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_0 /;"	d
GLFW_KEY_KP_1	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_1 /;"	d
GLFW_KEY_KP_2	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_2 /;"	d
GLFW_KEY_KP_3	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_3 /;"	d
GLFW_KEY_KP_4	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_4 /;"	d
GLFW_KEY_KP_5	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_5 /;"	d
GLFW_KEY_KP_6	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_6 /;"	d
GLFW_KEY_KP_7	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_7 /;"	d
GLFW_KEY_KP_8	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_8 /;"	d
GLFW_KEY_KP_9	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_9 /;"	d
GLFW_KEY_KP_ADD	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_ADD /;"	d
GLFW_KEY_KP_DECIMAL	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_DECIMAL /;"	d
GLFW_KEY_KP_DIVIDE	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_DIVIDE /;"	d
GLFW_KEY_KP_ENTER	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_ENTER /;"	d
GLFW_KEY_KP_EQUAL	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_EQUAL /;"	d
GLFW_KEY_KP_MULTIPLY	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_MULTIPLY /;"	d
GLFW_KEY_KP_SUBTRACT	include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_SUBTRACT /;"	d
GLFW_KEY_L	include/GLFW/glfw3.h	/^#define GLFW_KEY_L /;"	d
GLFW_KEY_LAST	include/GLFW/glfw3.h	/^#define GLFW_KEY_LAST /;"	d
GLFW_KEY_LEFT	include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT /;"	d
GLFW_KEY_LEFT_ALT	include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT_ALT /;"	d
GLFW_KEY_LEFT_BRACKET	include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT_BRACKET /;"	d
GLFW_KEY_LEFT_CONTROL	include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT_CONTROL /;"	d
GLFW_KEY_LEFT_SHIFT	include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT_SHIFT /;"	d
GLFW_KEY_LEFT_SUPER	include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT_SUPER /;"	d
GLFW_KEY_M	include/GLFW/glfw3.h	/^#define GLFW_KEY_M /;"	d
GLFW_KEY_MENU	include/GLFW/glfw3.h	/^#define GLFW_KEY_MENU /;"	d
GLFW_KEY_MINUS	include/GLFW/glfw3.h	/^#define GLFW_KEY_MINUS /;"	d
GLFW_KEY_N	include/GLFW/glfw3.h	/^#define GLFW_KEY_N /;"	d
GLFW_KEY_NUM_LOCK	include/GLFW/glfw3.h	/^#define GLFW_KEY_NUM_LOCK /;"	d
GLFW_KEY_O	include/GLFW/glfw3.h	/^#define GLFW_KEY_O /;"	d
GLFW_KEY_P	include/GLFW/glfw3.h	/^#define GLFW_KEY_P /;"	d
GLFW_KEY_PAGE_DOWN	include/GLFW/glfw3.h	/^#define GLFW_KEY_PAGE_DOWN /;"	d
GLFW_KEY_PAGE_UP	include/GLFW/glfw3.h	/^#define GLFW_KEY_PAGE_UP /;"	d
GLFW_KEY_PAUSE	include/GLFW/glfw3.h	/^#define GLFW_KEY_PAUSE /;"	d
GLFW_KEY_PERIOD	include/GLFW/glfw3.h	/^#define GLFW_KEY_PERIOD /;"	d
GLFW_KEY_PRINT_SCREEN	include/GLFW/glfw3.h	/^#define GLFW_KEY_PRINT_SCREEN /;"	d
GLFW_KEY_Q	include/GLFW/glfw3.h	/^#define GLFW_KEY_Q /;"	d
GLFW_KEY_R	include/GLFW/glfw3.h	/^#define GLFW_KEY_R /;"	d
GLFW_KEY_RIGHT	include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT /;"	d
GLFW_KEY_RIGHT_ALT	include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT_ALT /;"	d
GLFW_KEY_RIGHT_BRACKET	include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT_BRACKET /;"	d
GLFW_KEY_RIGHT_CONTROL	include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT_CONTROL /;"	d
GLFW_KEY_RIGHT_SHIFT	include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT_SHIFT /;"	d
GLFW_KEY_RIGHT_SUPER	include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT_SUPER /;"	d
GLFW_KEY_S	include/GLFW/glfw3.h	/^#define GLFW_KEY_S /;"	d
GLFW_KEY_SCROLL_LOCK	include/GLFW/glfw3.h	/^#define GLFW_KEY_SCROLL_LOCK /;"	d
GLFW_KEY_SEMICOLON	include/GLFW/glfw3.h	/^#define GLFW_KEY_SEMICOLON /;"	d
GLFW_KEY_SLASH	include/GLFW/glfw3.h	/^#define GLFW_KEY_SLASH /;"	d
GLFW_KEY_SPACE	include/GLFW/glfw3.h	/^#define GLFW_KEY_SPACE /;"	d
GLFW_KEY_T	include/GLFW/glfw3.h	/^#define GLFW_KEY_T /;"	d
GLFW_KEY_TAB	include/GLFW/glfw3.h	/^#define GLFW_KEY_TAB /;"	d
GLFW_KEY_U	include/GLFW/glfw3.h	/^#define GLFW_KEY_U /;"	d
GLFW_KEY_UNKNOWN	include/GLFW/glfw3.h	/^#define GLFW_KEY_UNKNOWN /;"	d
GLFW_KEY_UP	include/GLFW/glfw3.h	/^#define GLFW_KEY_UP /;"	d
GLFW_KEY_V	include/GLFW/glfw3.h	/^#define GLFW_KEY_V /;"	d
GLFW_KEY_W	include/GLFW/glfw3.h	/^#define GLFW_KEY_W /;"	d
GLFW_KEY_WORLD_1	include/GLFW/glfw3.h	/^#define GLFW_KEY_WORLD_1 /;"	d
GLFW_KEY_WORLD_2	include/GLFW/glfw3.h	/^#define GLFW_KEY_WORLD_2 /;"	d
GLFW_KEY_X	include/GLFW/glfw3.h	/^#define GLFW_KEY_X /;"	d
GLFW_KEY_Y	include/GLFW/glfw3.h	/^#define GLFW_KEY_Y /;"	d
GLFW_KEY_Z	include/GLFW/glfw3.h	/^#define GLFW_KEY_Z /;"	d
GLFW_LIB_NAME	CMakeLists.txt	/^    set(GLFW_LIB_NAME glfw)$/;"	v
GLFW_LIB_NAME	CMakeLists.txt	/^    set(GLFW_LIB_NAME glfw3)$/;"	v
GLFW_LOCK_KEY_MODS	include/GLFW/glfw3.h	/^#define GLFW_LOCK_KEY_MODS /;"	d
GLFW_LOSE_CONTEXT_ON_RESET	include/GLFW/glfw3.h	/^#define GLFW_LOSE_CONTEXT_ON_RESET /;"	d
GLFW_MAXIMIZED	include/GLFW/glfw3.h	/^#define GLFW_MAXIMIZED /;"	d
GLFW_MOD_ALT	include/GLFW/glfw3.h	/^#define GLFW_MOD_ALT /;"	d
GLFW_MOD_CAPS_LOCK	include/GLFW/glfw3.h	/^#define GLFW_MOD_CAPS_LOCK /;"	d
GLFW_MOD_CONTROL	include/GLFW/glfw3.h	/^#define GLFW_MOD_CONTROL /;"	d
GLFW_MOD_NUM_LOCK	include/GLFW/glfw3.h	/^#define GLFW_MOD_NUM_LOCK /;"	d
GLFW_MOD_SHIFT	include/GLFW/glfw3.h	/^#define GLFW_MOD_SHIFT /;"	d
GLFW_MOD_SUPER	include/GLFW/glfw3.h	/^#define GLFW_MOD_SUPER /;"	d
GLFW_MOUSE_BUTTON_1	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_1 /;"	d
GLFW_MOUSE_BUTTON_2	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_2 /;"	d
GLFW_MOUSE_BUTTON_3	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_3 /;"	d
GLFW_MOUSE_BUTTON_4	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_4 /;"	d
GLFW_MOUSE_BUTTON_5	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_5 /;"	d
GLFW_MOUSE_BUTTON_6	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_6 /;"	d
GLFW_MOUSE_BUTTON_7	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_7 /;"	d
GLFW_MOUSE_BUTTON_8	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_8 /;"	d
GLFW_MOUSE_BUTTON_LAST	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_LAST /;"	d
GLFW_MOUSE_BUTTON_LEFT	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_LEFT /;"	d
GLFW_MOUSE_BUTTON_MIDDLE	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_MIDDLE /;"	d
GLFW_MOUSE_BUTTON_RIGHT	include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_RIGHT /;"	d
GLFW_NATIVE_CONTEXT_API	include/GLFW/glfw3.h	/^#define GLFW_NATIVE_CONTEXT_API /;"	d
GLFW_NOT_ALLOWED_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_NOT_ALLOWED_CURSOR /;"	d
GLFW_NOT_INITIALIZED	include/GLFW/glfw3.h	/^#define GLFW_NOT_INITIALIZED /;"	d
GLFW_NO_API	include/GLFW/glfw3.h	/^#define GLFW_NO_API /;"	d
GLFW_NO_CURRENT_CONTEXT	include/GLFW/glfw3.h	/^#define GLFW_NO_CURRENT_CONTEXT /;"	d
GLFW_NO_ERROR	include/GLFW/glfw3.h	/^#define GLFW_NO_ERROR /;"	d
GLFW_NO_RESET_NOTIFICATION	include/GLFW/glfw3.h	/^#define GLFW_NO_RESET_NOTIFICATION /;"	d
GLFW_NO_ROBUSTNESS	include/GLFW/glfw3.h	/^#define GLFW_NO_ROBUSTNESS /;"	d
GLFW_NO_WINDOW_CONTEXT	include/GLFW/glfw3.h	/^#define GLFW_NO_WINDOW_CONTEXT /;"	d
GLFW_OPENGL_ANY_PROFILE	include/GLFW/glfw3.h	/^#define GLFW_OPENGL_ANY_PROFILE /;"	d
GLFW_OPENGL_API	include/GLFW/glfw3.h	/^#define GLFW_OPENGL_API /;"	d
GLFW_OPENGL_COMPAT_PROFILE	include/GLFW/glfw3.h	/^#define GLFW_OPENGL_COMPAT_PROFILE /;"	d
GLFW_OPENGL_CORE_PROFILE	include/GLFW/glfw3.h	/^#define GLFW_OPENGL_CORE_PROFILE /;"	d
GLFW_OPENGL_DEBUG_CONTEXT	include/GLFW/glfw3.h	/^#define GLFW_OPENGL_DEBUG_CONTEXT /;"	d
GLFW_OPENGL_ES_API	include/GLFW/glfw3.h	/^#define GLFW_OPENGL_ES_API /;"	d
GLFW_OPENGL_FORWARD_COMPAT	include/GLFW/glfw3.h	/^#define GLFW_OPENGL_FORWARD_COMPAT /;"	d
GLFW_OPENGL_PROFILE	include/GLFW/glfw3.h	/^#define GLFW_OPENGL_PROFILE /;"	d
GLFW_OSMESA_CONTEXT_API	include/GLFW/glfw3.h	/^#define GLFW_OSMESA_CONTEXT_API /;"	d
GLFW_OUT_OF_MEMORY	include/GLFW/glfw3.h	/^#define GLFW_OUT_OF_MEMORY /;"	d
GLFW_PKG_DEPS	CMakeLists.txt	/^    set(GLFW_PKG_DEPS "${GLFW_PKG_DEPS} ${arg}")$/;"	v
GLFW_PKG_LIBS	CMakeLists.txt	/^    set(GLFW_PKG_LIBS "${GLFW_PKG_LIBS} ${arg}")$/;"	v
GLFW_PLATFORM_ERROR	include/GLFW/glfw3.h	/^#define GLFW_PLATFORM_ERROR /;"	d
GLFW_POINTING_HAND_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_POINTING_HAND_CURSOR /;"	d
GLFW_PRESS	include/GLFW/glfw3.h	/^#define GLFW_PRESS /;"	d
GLFW_RAW_MOUSE_MOTION	include/GLFW/glfw3.h	/^#define GLFW_RAW_MOUSE_MOTION /;"	d
GLFW_RED_BITS	include/GLFW/glfw3.h	/^#define GLFW_RED_BITS /;"	d
GLFW_REFRESH_RATE	include/GLFW/glfw3.h	/^#define GLFW_REFRESH_RATE /;"	d
GLFW_RELEASE	include/GLFW/glfw3.h	/^#define GLFW_RELEASE /;"	d
GLFW_RELEASE_BEHAVIOR_FLUSH	include/GLFW/glfw3.h	/^#define GLFW_RELEASE_BEHAVIOR_FLUSH /;"	d
GLFW_RELEASE_BEHAVIOR_NONE	include/GLFW/glfw3.h	/^#define GLFW_RELEASE_BEHAVIOR_NONE /;"	d
GLFW_REPEAT	include/GLFW/glfw3.h	/^#define GLFW_REPEAT /;"	d
GLFW_RESIZABLE	include/GLFW/glfw3.h	/^#define GLFW_RESIZABLE /;"	d
GLFW_RESIZE_ALL_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_RESIZE_ALL_CURSOR /;"	d
GLFW_RESIZE_EW_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_RESIZE_EW_CURSOR /;"	d
GLFW_RESIZE_NESW_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_RESIZE_NESW_CURSOR /;"	d
GLFW_RESIZE_NS_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_RESIZE_NS_CURSOR /;"	d
GLFW_RESIZE_NWSE_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_RESIZE_NWSE_CURSOR /;"	d
GLFW_SAMPLES	include/GLFW/glfw3.h	/^#define GLFW_SAMPLES /;"	d
GLFW_SCALE_TO_MONITOR	include/GLFW/glfw3.h	/^#define GLFW_SCALE_TO_MONITOR /;"	d
GLFW_SELECTION	src/x11_platform.h	/^    Atom            GLFW_SELECTION;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
GLFW_SRGB_CAPABLE	include/GLFW/glfw3.h	/^#define GLFW_SRGB_CAPABLE /;"	d
GLFW_STANDALONE	CMakeLists.txt	/^    set(GLFW_STANDALONE TRUE)$/;"	v
GLFW_STENCIL_BITS	include/GLFW/glfw3.h	/^#define GLFW_STENCIL_BITS /;"	d
GLFW_STEREO	include/GLFW/glfw3.h	/^#define GLFW_STEREO /;"	d
GLFW_STICKY_KEYS	include/GLFW/glfw3.h	/^#define GLFW_STICKY_KEYS /;"	d
GLFW_STICKY_MOUSE_BUTTONS	include/GLFW/glfw3.h	/^#define GLFW_STICKY_MOUSE_BUTTONS /;"	d
GLFW_TRANSPARENT_FRAMEBUFFER	include/GLFW/glfw3.h	/^#define GLFW_TRANSPARENT_FRAMEBUFFER /;"	d
GLFW_TRUE	include/GLFW/glfw3.h	/^#define GLFW_TRUE /;"	d
GLFW_VERSION_MAJOR	include/GLFW/glfw3.h	/^#define GLFW_VERSION_MAJOR /;"	d
GLFW_VERSION_MINOR	include/GLFW/glfw3.h	/^#define GLFW_VERSION_MINOR /;"	d
GLFW_VERSION_REVISION	include/GLFW/glfw3.h	/^#define GLFW_VERSION_REVISION /;"	d
GLFW_VERSION_UNAVAILABLE	include/GLFW/glfw3.h	/^#define GLFW_VERSION_UNAVAILABLE /;"	d
GLFW_VISIBLE	include/GLFW/glfw3.h	/^#define GLFW_VISIBLE /;"	d
GLFW_VRESIZE_CURSOR	include/GLFW/glfw3.h	/^#define GLFW_VRESIZE_CURSOR /;"	d
GLFW_VULKAN_STATIC	CMakeLists.txt	/^option(GLFW_VULKAN_STATIC "Assume the Vulkan loader is linked with the application" OFF)$/;"	D
GLFW_WIN32_KEYBOARD_MENU	include/GLFW/glfw3.h	/^#define GLFW_WIN32_KEYBOARD_MENU /;"	d
GLFW_WINGDIAPI_DEFINED	include/GLFW/glfw3.h	/^ #define GLFW_WINGDIAPI_DEFINED$/;"	d
GLFW_X11_CLASS_NAME	include/GLFW/glfw3.h	/^#define GLFW_X11_CLASS_NAME /;"	d
GLFW_X11_INSTANCE_NAME	include/GLFW/glfw3.h	/^#define GLFW_X11_INSTANCE_NAME /;"	d
GLFWbool	src/internal.h	/^typedef int GLFWbool;$/;"	t	typeref:typename:int
GLFWcharfun	include/GLFW/glfw3.h	/^typedef void (* GLFWcharfun)(GLFWwindow*,unsigned int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,unsigned int)
GLFWcharmodsfun	include/GLFW/glfw3.h	/^typedef void (* GLFWcharmodsfun)(GLFWwindow*,unsigned int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,unsigned int,int)
GLFWcursor	include/GLFW/glfw3.h	/^typedef struct GLFWcursor GLFWcursor;$/;"	t	typeref:struct:GLFWcursor
GLFWcursorenterfun	include/GLFW/glfw3.h	/^typedef void (* GLFWcursorenterfun)(GLFWwindow*,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int)
GLFWcursorposfun	include/GLFW/glfw3.h	/^typedef void (* GLFWcursorposfun)(GLFWwindow*,double,double);$/;"	t	typeref:typename:void (*)(GLFWwindow *,double,double)
GLFWdropfun	include/GLFW/glfw3.h	/^typedef void (* GLFWdropfun)(GLFWwindow*,int,const char*[]);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,const char * [])
GLFWerrorfun	include/GLFW/glfw3.h	/^typedef void (* GLFWerrorfun)(int,const char*);$/;"	t	typeref:typename:void (*)(int,const char *)
GLFWframebuffersizefun	include/GLFW/glfw3.h	/^typedef void (* GLFWframebuffersizefun)(GLFWwindow*,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int)
GLFWgamepadstate	include/GLFW/glfw3.h	/^typedef struct GLFWgamepadstate$/;"	s
GLFWgamepadstate	include/GLFW/glfw3.h	/^} GLFWgamepadstate;$/;"	t	typeref:struct:GLFWgamepadstate
GLFWgammaramp	include/GLFW/glfw3.h	/^typedef struct GLFWgammaramp$/;"	s
GLFWgammaramp	include/GLFW/glfw3.h	/^} GLFWgammaramp;$/;"	t	typeref:struct:GLFWgammaramp
GLFWglproc	include/GLFW/glfw3.h	/^typedef void (*GLFWglproc)(void);$/;"	t	typeref:typename:void (*)(void)
GLFWimage	include/GLFW/glfw3.h	/^typedef struct GLFWimage$/;"	s
GLFWimage	include/GLFW/glfw3.h	/^} GLFWimage;$/;"	t	typeref:struct:GLFWimage
GLFWjoystickfun	include/GLFW/glfw3.h	/^typedef void (* GLFWjoystickfun)(int,int);$/;"	t	typeref:typename:void (*)(int,int)
GLFWkeyfun	include/GLFW/glfw3.h	/^typedef void (* GLFWkeyfun)(GLFWwindow*,int,int,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int,int,int)
GLFWmonitor	include/GLFW/glfw3.h	/^typedef struct GLFWmonitor GLFWmonitor;$/;"	t	typeref:struct:GLFWmonitor
GLFWmonitorfun	include/GLFW/glfw3.h	/^typedef void (* GLFWmonitorfun)(GLFWmonitor*,int);$/;"	t	typeref:typename:void (*)(GLFWmonitor *,int)
GLFWmousebuttonfun	include/GLFW/glfw3.h	/^typedef void (* GLFWmousebuttonfun)(GLFWwindow*,int,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int,int)
GLFWscrollfun	include/GLFW/glfw3.h	/^typedef void (* GLFWscrollfun)(GLFWwindow*,double,double);$/;"	t	typeref:typename:void (*)(GLFWwindow *,double,double)
GLFWvidmode	include/GLFW/glfw3.h	/^typedef struct GLFWvidmode$/;"	s
GLFWvidmode	include/GLFW/glfw3.h	/^} GLFWvidmode;$/;"	t	typeref:struct:GLFWvidmode
GLFWvkproc	include/GLFW/glfw3.h	/^typedef void (*GLFWvkproc)(void);$/;"	t	typeref:typename:void (*)(void)
GLFWwindow	include/GLFW/glfw3.h	/^typedef struct GLFWwindow GLFWwindow;$/;"	t	typeref:struct:GLFWwindow
GLFWwindowclosefun	include/GLFW/glfw3.h	/^typedef void (* GLFWwindowclosefun)(GLFWwindow*);$/;"	t	typeref:typename:void (*)(GLFWwindow *)
GLFWwindowcontentscalefun	include/GLFW/glfw3.h	/^typedef void (* GLFWwindowcontentscalefun)(GLFWwindow*,float,float);$/;"	t	typeref:typename:void (*)(GLFWwindow *,float,float)
GLFWwindowfocusfun	include/GLFW/glfw3.h	/^typedef void (* GLFWwindowfocusfun)(GLFWwindow*,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int)
GLFWwindowiconifyfun	include/GLFW/glfw3.h	/^typedef void (* GLFWwindowiconifyfun)(GLFWwindow*,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int)
GLFWwindowmaximizefun	include/GLFW/glfw3.h	/^typedef void (* GLFWwindowmaximizefun)(GLFWwindow*,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int)
GLFWwindowposfun	include/GLFW/glfw3.h	/^typedef void (* GLFWwindowposfun)(GLFWwindow*,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int)
GLFWwindowrefreshfun	include/GLFW/glfw3.h	/^typedef void (* GLFWwindowrefreshfun)(GLFWwindow*);$/;"	t	typeref:typename:void (*)(GLFWwindow *)
GLFWwindowsizefun	include/GLFW/glfw3.h	/^typedef void (* GLFWwindowsizefun)(GLFWwindow*,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int)
GLVULKANPROCNV	deps/glad/gl.h	/^typedef void ( *GLVULKANPROCNV)(void);$/;"	t	typeref:typename:void (*)(void)
GLXBadProfileARB	src/glx_context.c	/^ #define GLXBadProfileARB /;"	d	file:
GLXContext	src/glx_context.h	/^typedef struct __GLXcontext* GLXContext;$/;"	t	typeref:struct:__GLXcontext *
GLXDrawable	src/glx_context.h	/^typedef XID GLXDrawable;$/;"	t	typeref:typename:XID
GLXFBConfig	src/glx_context.h	/^typedef struct __GLXFBConfig* GLXFBConfig;$/;"	t	typeref:struct:__GLXFBConfig *
GLXWindow	src/glx_context.h	/^typedef XID GLXWindow;$/;"	t	typeref:typename:XID
GLX_ACCUM_ALPHA_SIZE	src/glx_context.h	/^#define GLX_ACCUM_ALPHA_SIZE /;"	d
GLX_ACCUM_BLUE_SIZE	src/glx_context.h	/^#define GLX_ACCUM_BLUE_SIZE /;"	d
GLX_ACCUM_GREEN_SIZE	src/glx_context.h	/^#define GLX_ACCUM_GREEN_SIZE /;"	d
GLX_ACCUM_RED_SIZE	src/glx_context.h	/^#define GLX_ACCUM_RED_SIZE /;"	d
GLX_ALPHA_SIZE	src/glx_context.h	/^#define GLX_ALPHA_SIZE /;"	d
GLX_AUX_BUFFERS	src/glx_context.h	/^#define GLX_AUX_BUFFERS /;"	d
GLX_BLUE_SIZE	src/glx_context.h	/^#define GLX_BLUE_SIZE /;"	d
GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	src/glx_context.h	/^#define GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB /;"	d
GLX_CONTEXT_CORE_PROFILE_BIT_ARB	src/glx_context.h	/^#define GLX_CONTEXT_CORE_PROFILE_BIT_ARB /;"	d
GLX_CONTEXT_DEBUG_BIT_ARB	src/glx_context.h	/^#define GLX_CONTEXT_DEBUG_BIT_ARB /;"	d
GLX_CONTEXT_ES2_PROFILE_BIT_EXT	src/glx_context.h	/^#define GLX_CONTEXT_ES2_PROFILE_BIT_EXT /;"	d
GLX_CONTEXT_FLAGS_ARB	src/glx_context.h	/^#define GLX_CONTEXT_FLAGS_ARB /;"	d
GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	src/glx_context.h	/^#define GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d
GLX_CONTEXT_MAJOR_VERSION_ARB	src/glx_context.h	/^#define GLX_CONTEXT_MAJOR_VERSION_ARB /;"	d
GLX_CONTEXT_MINOR_VERSION_ARB	src/glx_context.h	/^#define GLX_CONTEXT_MINOR_VERSION_ARB /;"	d
GLX_CONTEXT_OPENGL_NO_ERROR_ARB	src/glx_context.h	/^#define GLX_CONTEXT_OPENGL_NO_ERROR_ARB /;"	d
GLX_CONTEXT_PROFILE_MASK_ARB	src/glx_context.h	/^#define GLX_CONTEXT_PROFILE_MASK_ARB /;"	d
GLX_CONTEXT_RELEASE_BEHAVIOR_ARB	src/glx_context.h	/^#define GLX_CONTEXT_RELEASE_BEHAVIOR_ARB /;"	d
GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB	src/glx_context.h	/^#define GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB /;"	d
GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB	src/glx_context.h	/^#define GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB /;"	d
GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	src/glx_context.h	/^#define GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB	src/glx_context.h	/^#define GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB /;"	d
GLX_DEPTH_SIZE	src/glx_context.h	/^#define GLX_DEPTH_SIZE /;"	d
GLX_DOUBLEBUFFER	src/glx_context.h	/^#define GLX_DOUBLEBUFFER /;"	d
GLX_DRAWABLE_TYPE	src/glx_context.h	/^#define GLX_DRAWABLE_TYPE /;"	d
GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB	src/glx_context.h	/^#define GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d
GLX_GREEN_SIZE	src/glx_context.h	/^#define GLX_GREEN_SIZE /;"	d
GLX_LOSE_CONTEXT_ON_RESET_ARB	src/glx_context.h	/^#define GLX_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GLX_NO_RESET_NOTIFICATION_ARB	src/glx_context.h	/^#define GLX_NO_RESET_NOTIFICATION_ARB /;"	d
GLX_RED_SIZE	src/glx_context.h	/^#define GLX_RED_SIZE /;"	d
GLX_RENDER_TYPE	src/glx_context.h	/^#define GLX_RENDER_TYPE /;"	d
GLX_RGBA_BIT	src/glx_context.h	/^#define GLX_RGBA_BIT /;"	d
GLX_RGBA_TYPE	src/glx_context.h	/^#define GLX_RGBA_TYPE /;"	d
GLX_SAMPLES	src/glx_context.h	/^#define GLX_SAMPLES /;"	d
GLX_STENCIL_SIZE	src/glx_context.h	/^#define GLX_STENCIL_SIZE /;"	d
GLX_STEREO	src/glx_context.h	/^#define GLX_STEREO /;"	d
GLX_VENDOR	src/glx_context.h	/^#define GLX_VENDOR /;"	d
GLX_VISUAL_ID	src/glx_context.h	/^#define GLX_VISUAL_ID /;"	d
GLX_WINDOW_BIT	src/glx_context.h	/^#define GLX_WINDOW_BIT /;"	d
GL_2D	deps/glad/gl.h	/^#define GL_2D /;"	d
GL_2_BYTES	deps/glad/gl.h	/^#define GL_2_BYTES /;"	d
GL_3D	deps/glad/gl.h	/^#define GL_3D /;"	d
GL_3D_COLOR	deps/glad/gl.h	/^#define GL_3D_COLOR /;"	d
GL_3D_COLOR_TEXTURE	deps/glad/gl.h	/^#define GL_3D_COLOR_TEXTURE /;"	d
GL_3_BYTES	deps/glad/gl.h	/^#define GL_3_BYTES /;"	d
GL_4D_COLOR_TEXTURE	deps/glad/gl.h	/^#define GL_4D_COLOR_TEXTURE /;"	d
GL_4_BYTES	deps/glad/gl.h	/^#define GL_4_BYTES /;"	d
GL_ACCUM	deps/glad/gl.h	/^#define GL_ACCUM /;"	d
GL_ACCUM_ALPHA_BITS	deps/glad/gl.h	/^#define GL_ACCUM_ALPHA_BITS /;"	d
GL_ACCUM_BLUE_BITS	deps/glad/gl.h	/^#define GL_ACCUM_BLUE_BITS /;"	d
GL_ACCUM_BUFFER_BIT	deps/glad/gl.h	/^#define GL_ACCUM_BUFFER_BIT /;"	d
GL_ACCUM_CLEAR_VALUE	deps/glad/gl.h	/^#define GL_ACCUM_CLEAR_VALUE /;"	d
GL_ACCUM_GREEN_BITS	deps/glad/gl.h	/^#define GL_ACCUM_GREEN_BITS /;"	d
GL_ACCUM_RED_BITS	deps/glad/gl.h	/^#define GL_ACCUM_RED_BITS /;"	d
GL_ACTIVE_ATTRIBUTES	deps/glad/gl.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	deps/glad/gl.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	deps/glad/gl.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_UNIFORMS	deps/glad/gl.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	deps/glad/gl.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	deps/glad/gl.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	deps/glad/gl.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ADD	deps/glad/gl.h	/^#define GL_ADD /;"	d
GL_ADD_SIGNED	deps/glad/gl.h	/^#define GL_ADD_SIGNED /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	deps/glad/gl.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALIASED_POINT_SIZE_RANGE	deps/glad/gl.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	d
GL_ALL_ATTRIB_BITS	deps/glad/gl.h	/^#define GL_ALL_ATTRIB_BITS /;"	d
GL_ALPHA	deps/glad/gl.h	/^#define GL_ALPHA /;"	d
GL_ALPHA12	deps/glad/gl.h	/^#define GL_ALPHA12 /;"	d
GL_ALPHA16	deps/glad/gl.h	/^#define GL_ALPHA16 /;"	d
GL_ALPHA4	deps/glad/gl.h	/^#define GL_ALPHA4 /;"	d
GL_ALPHA8	deps/glad/gl.h	/^#define GL_ALPHA8 /;"	d
GL_ALPHA_BIAS	deps/glad/gl.h	/^#define GL_ALPHA_BIAS /;"	d
GL_ALPHA_BITS	deps/glad/gl.h	/^#define GL_ALPHA_BITS /;"	d
GL_ALPHA_INTEGER	deps/glad/gl.h	/^#define GL_ALPHA_INTEGER /;"	d
GL_ALPHA_SCALE	deps/glad/gl.h	/^#define GL_ALPHA_SCALE /;"	d
GL_ALPHA_TEST	deps/glad/gl.h	/^#define GL_ALPHA_TEST /;"	d
GL_ALPHA_TEST_FUNC	deps/glad/gl.h	/^#define GL_ALPHA_TEST_FUNC /;"	d
GL_ALPHA_TEST_REF	deps/glad/gl.h	/^#define GL_ALPHA_TEST_REF /;"	d
GL_ALREADY_SIGNALED	deps/glad/gl.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALWAYS	deps/glad/gl.h	/^#define GL_ALWAYS /;"	d
GL_AMBIENT	deps/glad/gl.h	/^#define GL_AMBIENT /;"	d
GL_AMBIENT_AND_DIFFUSE	deps/glad/gl.h	/^#define GL_AMBIENT_AND_DIFFUSE /;"	d
GL_AND	deps/glad/gl.h	/^#define GL_AND /;"	d
GL_AND_INVERTED	deps/glad/gl.h	/^#define GL_AND_INVERTED /;"	d
GL_AND_REVERSE	deps/glad/gl.h	/^#define GL_AND_REVERSE /;"	d
GL_ANY_SAMPLES_PASSED	deps/glad/gl.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ARB_multisample	deps/glad/gl.h	/^#define GL_ARB_multisample /;"	d
GL_ARB_robustness	deps/glad/gl.h	/^#define GL_ARB_robustness /;"	d
GL_ARRAY_BUFFER	deps/glad/gl.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ATTACHED_SHADERS	deps/glad/gl.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTRIB_STACK_DEPTH	deps/glad/gl.h	/^#define GL_ATTRIB_STACK_DEPTH /;"	d
GL_AUTO_NORMAL	deps/glad/gl.h	/^#define GL_AUTO_NORMAL /;"	d
GL_AUX0	deps/glad/gl.h	/^#define GL_AUX0 /;"	d
GL_AUX1	deps/glad/gl.h	/^#define GL_AUX1 /;"	d
GL_AUX2	deps/glad/gl.h	/^#define GL_AUX2 /;"	d
GL_AUX3	deps/glad/gl.h	/^#define GL_AUX3 /;"	d
GL_AUX_BUFFERS	deps/glad/gl.h	/^#define GL_AUX_BUFFERS /;"	d
GL_BACK	deps/glad/gl.h	/^#define GL_BACK /;"	d
GL_BACK_LEFT	deps/glad/gl.h	/^#define GL_BACK_LEFT /;"	d
GL_BACK_RIGHT	deps/glad/gl.h	/^#define GL_BACK_RIGHT /;"	d
GL_BGR	deps/glad/gl.h	/^#define GL_BGR /;"	d
GL_BGRA	deps/glad/gl.h	/^#define GL_BGRA /;"	d
GL_BGRA_INTEGER	deps/glad/gl.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGR_INTEGER	deps/glad/gl.h	/^#define GL_BGR_INTEGER /;"	d
GL_BITMAP	deps/glad/gl.h	/^#define GL_BITMAP /;"	d
GL_BITMAP_TOKEN	deps/glad/gl.h	/^#define GL_BITMAP_TOKEN /;"	d
GL_BLEND	deps/glad/gl.h	/^#define GL_BLEND /;"	d
GL_BLEND_COLOR	deps/glad/gl.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_DST	deps/glad/gl.h	/^#define GL_BLEND_DST /;"	d
GL_BLEND_DST_ALPHA	deps/glad/gl.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_RGB	deps/glad/gl.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_EQUATION	deps/glad/gl.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	deps/glad/gl.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_RGB	deps/glad/gl.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_SRC	deps/glad/gl.h	/^#define GL_BLEND_SRC /;"	d
GL_BLEND_SRC_ALPHA	deps/glad/gl.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_RGB	deps/glad/gl.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLUE	deps/glad/gl.h	/^#define GL_BLUE /;"	d
GL_BLUE_BIAS	deps/glad/gl.h	/^#define GL_BLUE_BIAS /;"	d
GL_BLUE_BITS	deps/glad/gl.h	/^#define GL_BLUE_BITS /;"	d
GL_BLUE_INTEGER	deps/glad/gl.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BLUE_SCALE	deps/glad/gl.h	/^#define GL_BLUE_SCALE /;"	d
GL_BOOL	deps/glad/gl.h	/^#define GL_BOOL /;"	d
GL_BOOL_VEC2	deps/glad/gl.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC3	deps/glad/gl.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC4	deps/glad/gl.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BUFFER	deps/glad/gl.h	/^#define GL_BUFFER /;"	d
GL_BUFFER_ACCESS	deps/glad/gl.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_FLAGS	deps/glad/gl.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_MAPPED	deps/glad/gl.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAP_LENGTH	deps/glad/gl.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	deps/glad/gl.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	deps/glad/gl.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_SIZE	deps/glad/gl.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_USAGE	deps/glad/gl.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BYTE	deps/glad/gl.h	/^#define GL_BYTE /;"	d
GL_C3F_V3F	deps/glad/gl.h	/^#define GL_C3F_V3F /;"	d
GL_C4F_N3F_V3F	deps/glad/gl.h	/^#define GL_C4F_N3F_V3F /;"	d
GL_C4UB_V2F	deps/glad/gl.h	/^#define GL_C4UB_V2F /;"	d
GL_C4UB_V3F	deps/glad/gl.h	/^#define GL_C4UB_V3F /;"	d
GL_CCW	deps/glad/gl.h	/^#define GL_CCW /;"	d
GL_CLAMP	deps/glad/gl.h	/^#define GL_CLAMP /;"	d
GL_CLAMP_FRAGMENT_COLOR	deps/glad/gl.h	/^#define GL_CLAMP_FRAGMENT_COLOR /;"	d
GL_CLAMP_READ_COLOR	deps/glad/gl.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_TO_BORDER	deps/glad/gl.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_EDGE	deps/glad/gl.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLAMP_VERTEX_COLOR	deps/glad/gl.h	/^#define GL_CLAMP_VERTEX_COLOR /;"	d
GL_CLEAR	deps/glad/gl.h	/^#define GL_CLEAR /;"	d
GL_CLIENT_ACTIVE_TEXTURE	deps/glad/gl.h	/^#define GL_CLIENT_ACTIVE_TEXTURE /;"	d
GL_CLIENT_ALL_ATTRIB_BITS	deps/glad/gl.h	/^#define GL_CLIENT_ALL_ATTRIB_BITS /;"	d
GL_CLIENT_ATTRIB_STACK_DEPTH	deps/glad/gl.h	/^#define GL_CLIENT_ATTRIB_STACK_DEPTH /;"	d
GL_CLIENT_PIXEL_STORE_BIT	deps/glad/gl.h	/^#define GL_CLIENT_PIXEL_STORE_BIT /;"	d
GL_CLIENT_VERTEX_ARRAY_BIT	deps/glad/gl.h	/^#define GL_CLIENT_VERTEX_ARRAY_BIT /;"	d
GL_CLIP_DISTANCE0	deps/glad/gl.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE1	deps/glad/gl.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE2	deps/glad/gl.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE3	deps/glad/gl.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE4	deps/glad/gl.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE5	deps/glad/gl.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE6	deps/glad/gl.h	/^#define GL_CLIP_DISTANCE6 /;"	d
GL_CLIP_DISTANCE7	deps/glad/gl.h	/^#define GL_CLIP_DISTANCE7 /;"	d
GL_CLIP_PLANE0	deps/glad/gl.h	/^#define GL_CLIP_PLANE0 /;"	d
GL_CLIP_PLANE1	deps/glad/gl.h	/^#define GL_CLIP_PLANE1 /;"	d
GL_CLIP_PLANE2	deps/glad/gl.h	/^#define GL_CLIP_PLANE2 /;"	d
GL_CLIP_PLANE3	deps/glad/gl.h	/^#define GL_CLIP_PLANE3 /;"	d
GL_CLIP_PLANE4	deps/glad/gl.h	/^#define GL_CLIP_PLANE4 /;"	d
GL_CLIP_PLANE5	deps/glad/gl.h	/^#define GL_CLIP_PLANE5 /;"	d
GL_COEFF	deps/glad/gl.h	/^#define GL_COEFF /;"	d
GL_COLOR	deps/glad/gl.h	/^#define GL_COLOR /;"	d
GL_COLOR_ARRAY	deps/glad/gl.h	/^#define GL_COLOR_ARRAY /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_COLOR_ARRAY_POINTER	deps/glad/gl.h	/^#define GL_COLOR_ARRAY_POINTER /;"	d
GL_COLOR_ARRAY_SIZE	deps/glad/gl.h	/^#define GL_COLOR_ARRAY_SIZE /;"	d
GL_COLOR_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_COLOR_ARRAY_STRIDE /;"	d
GL_COLOR_ARRAY_TYPE	deps/glad/gl.h	/^#define GL_COLOR_ARRAY_TYPE /;"	d
GL_COLOR_ATTACHMENT0	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT1	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT11	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT12	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT13	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT14	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT15	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT16	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT16 /;"	d
GL_COLOR_ATTACHMENT17	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT17 /;"	d
GL_COLOR_ATTACHMENT18	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT18 /;"	d
GL_COLOR_ATTACHMENT19	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT19 /;"	d
GL_COLOR_ATTACHMENT2	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT20	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT20 /;"	d
GL_COLOR_ATTACHMENT21	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT21 /;"	d
GL_COLOR_ATTACHMENT22	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT22 /;"	d
GL_COLOR_ATTACHMENT23	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT23 /;"	d
GL_COLOR_ATTACHMENT24	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT24 /;"	d
GL_COLOR_ATTACHMENT25	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT25 /;"	d
GL_COLOR_ATTACHMENT26	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT26 /;"	d
GL_COLOR_ATTACHMENT27	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT27 /;"	d
GL_COLOR_ATTACHMENT28	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT28 /;"	d
GL_COLOR_ATTACHMENT29	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT29 /;"	d
GL_COLOR_ATTACHMENT3	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT30	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT30 /;"	d
GL_COLOR_ATTACHMENT31	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT31 /;"	d
GL_COLOR_ATTACHMENT4	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT5	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT6	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT7	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT8	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT9	deps/glad/gl.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_BUFFER_BIT	deps/glad/gl.h	/^#define GL_COLOR_BUFFER_BIT /;"	d
GL_COLOR_BUFFER_BIT	src/internal.h	/^#define GL_COLOR_BUFFER_BIT /;"	d
GL_COLOR_CLEAR_VALUE	deps/glad/gl.h	/^#define GL_COLOR_CLEAR_VALUE /;"	d
GL_COLOR_INDEX	deps/glad/gl.h	/^#define GL_COLOR_INDEX /;"	d
GL_COLOR_INDEXES	deps/glad/gl.h	/^#define GL_COLOR_INDEXES /;"	d
GL_COLOR_LOGIC_OP	deps/glad/gl.h	/^#define GL_COLOR_LOGIC_OP /;"	d
GL_COLOR_MATERIAL	deps/glad/gl.h	/^#define GL_COLOR_MATERIAL /;"	d
GL_COLOR_MATERIAL_FACE	deps/glad/gl.h	/^#define GL_COLOR_MATERIAL_FACE /;"	d
GL_COLOR_MATERIAL_PARAMETER	deps/glad/gl.h	/^#define GL_COLOR_MATERIAL_PARAMETER /;"	d
GL_COLOR_SUM	deps/glad/gl.h	/^#define GL_COLOR_SUM /;"	d
GL_COLOR_WRITEMASK	deps/glad/gl.h	/^#define GL_COLOR_WRITEMASK /;"	d
GL_COMBINE	deps/glad/gl.h	/^#define GL_COMBINE /;"	d
GL_COMBINE_ALPHA	deps/glad/gl.h	/^#define GL_COMBINE_ALPHA /;"	d
GL_COMBINE_RGB	deps/glad/gl.h	/^#define GL_COMBINE_RGB /;"	d
GL_COMPARE_REF_TO_TEXTURE	deps/glad/gl.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE	deps/glad/gl.h	/^#define GL_COMPARE_R_TO_TEXTURE /;"	d
GL_COMPILE	deps/glad/gl.h	/^#define GL_COMPILE /;"	d
GL_COMPILE_AND_EXECUTE	deps/glad/gl.h	/^#define GL_COMPILE_AND_EXECUTE /;"	d
GL_COMPILE_STATUS	deps/glad/gl.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPRESSED_ALPHA	deps/glad/gl.h	/^#define GL_COMPRESSED_ALPHA /;"	d
GL_COMPRESSED_INTENSITY	deps/glad/gl.h	/^#define GL_COMPRESSED_INTENSITY /;"	d
GL_COMPRESSED_LUMINANCE	deps/glad/gl.h	/^#define GL_COMPRESSED_LUMINANCE /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	deps/glad/gl.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA /;"	d
GL_COMPRESSED_RED	deps/glad/gl.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_RGTC1	deps/glad/gl.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RG	deps/glad/gl.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RGB	deps/glad/gl.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGBA	deps/glad/gl.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RG_RGTC2	deps/glad/gl.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	deps/glad/gl.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	deps/glad/gl.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SLUMINANCE	deps/glad/gl.h	/^#define GL_COMPRESSED_SLUMINANCE /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	deps/glad/gl.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA /;"	d
GL_COMPRESSED_SRGB	deps/glad/gl.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB_ALPHA	deps/glad/gl.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	deps/glad/gl.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_CONDITION_SATISFIED	deps/glad/gl.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONSTANT	deps/glad/gl.h	/^#define GL_CONSTANT /;"	d
GL_CONSTANT_ALPHA	deps/glad/gl.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_ATTENUATION	deps/glad/gl.h	/^#define GL_CONSTANT_ATTENUATION /;"	d
GL_CONSTANT_COLOR	deps/glad/gl.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	deps/glad/gl.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	src/internal.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	deps/glad/gl.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	src/internal.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	deps/glad/gl.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAGS	src/internal.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	deps/glad/gl.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	src/internal.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	deps/glad/gl.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	src/internal.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR	src/internal.h	/^#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	deps/glad/gl.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_PROFILE_MASK	deps/glad/gl.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTEXT_PROFILE_MASK	src/internal.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	src/internal.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	src/internal.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH /;"	d
GL_COORD_REPLACE	deps/glad/gl.h	/^#define GL_COORD_REPLACE /;"	d
GL_COPY	deps/glad/gl.h	/^#define GL_COPY /;"	d
GL_COPY_INVERTED	deps/glad/gl.h	/^#define GL_COPY_INVERTED /;"	d
GL_COPY_PIXEL_TOKEN	deps/glad/gl.h	/^#define GL_COPY_PIXEL_TOKEN /;"	d
GL_COPY_READ_BUFFER	deps/glad/gl.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_WRITE_BUFFER	deps/glad/gl.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_CULL_FACE	deps/glad/gl.h	/^#define GL_CULL_FACE /;"	d
GL_CULL_FACE_MODE	deps/glad/gl.h	/^#define GL_CULL_FACE_MODE /;"	d
GL_CURRENT_BIT	deps/glad/gl.h	/^#define GL_CURRENT_BIT /;"	d
GL_CURRENT_COLOR	deps/glad/gl.h	/^#define GL_CURRENT_COLOR /;"	d
GL_CURRENT_FOG_COORD	deps/glad/gl.h	/^#define GL_CURRENT_FOG_COORD /;"	d
GL_CURRENT_FOG_COORDINATE	deps/glad/gl.h	/^#define GL_CURRENT_FOG_COORDINATE /;"	d
GL_CURRENT_INDEX	deps/glad/gl.h	/^#define GL_CURRENT_INDEX /;"	d
GL_CURRENT_NORMAL	deps/glad/gl.h	/^#define GL_CURRENT_NORMAL /;"	d
GL_CURRENT_PROGRAM	deps/glad/gl.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	deps/glad/gl.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_RASTER_COLOR	deps/glad/gl.h	/^#define GL_CURRENT_RASTER_COLOR /;"	d
GL_CURRENT_RASTER_DISTANCE	deps/glad/gl.h	/^#define GL_CURRENT_RASTER_DISTANCE /;"	d
GL_CURRENT_RASTER_INDEX	deps/glad/gl.h	/^#define GL_CURRENT_RASTER_INDEX /;"	d
GL_CURRENT_RASTER_POSITION	deps/glad/gl.h	/^#define GL_CURRENT_RASTER_POSITION /;"	d
GL_CURRENT_RASTER_POSITION_VALID	deps/glad/gl.h	/^#define GL_CURRENT_RASTER_POSITION_VALID /;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	deps/glad/gl.h	/^#define GL_CURRENT_RASTER_SECONDARY_COLOR /;"	d
GL_CURRENT_RASTER_TEXTURE_COORDS	deps/glad/gl.h	/^#define GL_CURRENT_RASTER_TEXTURE_COORDS /;"	d
GL_CURRENT_SECONDARY_COLOR	deps/glad/gl.h	/^#define GL_CURRENT_SECONDARY_COLOR /;"	d
GL_CURRENT_TEXTURE_COORDS	deps/glad/gl.h	/^#define GL_CURRENT_TEXTURE_COORDS /;"	d
GL_CURRENT_VERTEX_ATTRIB	deps/glad/gl.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CW	deps/glad/gl.h	/^#define GL_CW /;"	d
GL_DEBUG_CALLBACK_FUNCTION	deps/glad/gl.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	deps/glad/gl.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	deps/glad/gl.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_LOGGED_MESSAGES	deps/glad/gl.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	deps/glad/gl.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_OUTPUT	deps/glad/gl.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	deps/glad/gl.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_SEVERITY_HIGH	deps/glad/gl.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_LOW	deps/glad/gl.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_MEDIUM	deps/glad/gl.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	deps/glad/gl.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SOURCE_API	deps/glad/gl.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_APPLICATION	deps/glad/gl.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_OTHER	deps/glad/gl.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	deps/glad/gl.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	deps/glad/gl.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	deps/glad/gl.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	deps/glad/gl.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_ERROR	deps/glad/gl.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_MARKER	deps/glad/gl.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_OTHER	deps/glad/gl.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_PERFORMANCE	deps/glad/gl.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_POP_GROUP	deps/glad/gl.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_PORTABILITY	deps/glad/gl.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	deps/glad/gl.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	deps/glad/gl.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DECAL	deps/glad/gl.h	/^#define GL_DECAL /;"	d
GL_DECR	deps/glad/gl.h	/^#define GL_DECR /;"	d
GL_DECR_WRAP	deps/glad/gl.h	/^#define GL_DECR_WRAP /;"	d
GL_DELETE_STATUS	deps/glad/gl.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPTH	deps/glad/gl.h	/^#define GL_DEPTH /;"	d
GL_DEPTH24_STENCIL8	deps/glad/gl.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8	deps/glad/gl.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH_ATTACHMENT	deps/glad/gl.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_BIAS	deps/glad/gl.h	/^#define GL_DEPTH_BIAS /;"	d
GL_DEPTH_BITS	deps/glad/gl.h	/^#define GL_DEPTH_BITS /;"	d
GL_DEPTH_BUFFER_BIT	deps/glad/gl.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d
GL_DEPTH_CLAMP	deps/glad/gl.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLEAR_VALUE	deps/glad/gl.h	/^#define GL_DEPTH_CLEAR_VALUE /;"	d
GL_DEPTH_COMPONENT	deps/glad/gl.h	/^#define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT16	deps/glad/gl.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT24	deps/glad/gl.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT32	deps/glad/gl.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	deps/glad/gl.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_FUNC	deps/glad/gl.h	/^#define GL_DEPTH_FUNC /;"	d
GL_DEPTH_RANGE	deps/glad/gl.h	/^#define GL_DEPTH_RANGE /;"	d
GL_DEPTH_SCALE	deps/glad/gl.h	/^#define GL_DEPTH_SCALE /;"	d
GL_DEPTH_STENCIL	deps/glad/gl.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	deps/glad/gl.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_TEST	deps/glad/gl.h	/^#define GL_DEPTH_TEST /;"	d
GL_DEPTH_TEXTURE_MODE	deps/glad/gl.h	/^#define GL_DEPTH_TEXTURE_MODE /;"	d
GL_DEPTH_WRITEMASK	deps/glad/gl.h	/^#define GL_DEPTH_WRITEMASK /;"	d
GL_DIFFUSE	deps/glad/gl.h	/^#define GL_DIFFUSE /;"	d
GL_DISPLAY_LIST	deps/glad/gl.h	/^#define GL_DISPLAY_LIST /;"	d
GL_DITHER	deps/glad/gl.h	/^#define GL_DITHER /;"	d
GL_DOMAIN	deps/glad/gl.h	/^#define GL_DOMAIN /;"	d
GL_DONT_CARE	deps/glad/gl.h	/^#define GL_DONT_CARE /;"	d
GL_DOT3_RGB	deps/glad/gl.h	/^#define GL_DOT3_RGB /;"	d
GL_DOT3_RGBA	deps/glad/gl.h	/^#define GL_DOT3_RGBA /;"	d
GL_DOUBLE	deps/glad/gl.h	/^#define GL_DOUBLE /;"	d
GL_DOUBLEBUFFER	deps/glad/gl.h	/^#define GL_DOUBLEBUFFER /;"	d
GL_DRAW_BUFFER	deps/glad/gl.h	/^#define GL_DRAW_BUFFER /;"	d
GL_DRAW_BUFFER0	deps/glad/gl.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER1	deps/glad/gl.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	deps/glad/gl.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER11	deps/glad/gl.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER12	deps/glad/gl.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER13	deps/glad/gl.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER14	deps/glad/gl.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER15	deps/glad/gl.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER2	deps/glad/gl.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER3	deps/glad/gl.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER4	deps/glad/gl.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER5	deps/glad/gl.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER6	deps/glad/gl.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER7	deps/glad/gl.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER8	deps/glad/gl.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER9	deps/glad/gl.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_FRAMEBUFFER	deps/glad/gl.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	deps/glad/gl.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_PIXEL_TOKEN	deps/glad/gl.h	/^#define GL_DRAW_PIXEL_TOKEN /;"	d
GL_DST_ALPHA	deps/glad/gl.h	/^#define GL_DST_ALPHA /;"	d
GL_DST_COLOR	deps/glad/gl.h	/^#define GL_DST_COLOR /;"	d
GL_DYNAMIC_COPY	deps/glad/gl.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_DRAW	deps/glad/gl.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_READ	deps/glad/gl.h	/^#define GL_DYNAMIC_READ /;"	d
GL_EDGE_FLAG	deps/glad/gl.h	/^#define GL_EDGE_FLAG /;"	d
GL_EDGE_FLAG_ARRAY	deps/glad/gl.h	/^#define GL_EDGE_FLAG_ARRAY /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING /;"	d
GL_EDGE_FLAG_ARRAY_POINTER	deps/glad/gl.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER /;"	d
GL_EDGE_FLAG_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE /;"	d
GL_ELEMENT_ARRAY_BUFFER	deps/glad/gl.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_EMISSION	deps/glad/gl.h	/^#define GL_EMISSION /;"	d
GL_ENABLE_BIT	deps/glad/gl.h	/^#define GL_ENABLE_BIT /;"	d
GL_EQUAL	deps/glad/gl.h	/^#define GL_EQUAL /;"	d
GL_EQUIV	deps/glad/gl.h	/^#define GL_EQUIV /;"	d
GL_EVAL_BIT	deps/glad/gl.h	/^#define GL_EVAL_BIT /;"	d
GL_EXP	deps/glad/gl.h	/^#define GL_EXP /;"	d
GL_EXP2	deps/glad/gl.h	/^#define GL_EXP2 /;"	d
GL_EXTENSIONS	deps/glad/gl.h	/^#define GL_EXTENSIONS /;"	d
GL_EXTENSIONS	src/internal.h	/^#define GL_EXTENSIONS /;"	d
GL_EYE_LINEAR	deps/glad/gl.h	/^#define GL_EYE_LINEAR /;"	d
GL_EYE_PLANE	deps/glad/gl.h	/^#define GL_EYE_PLANE /;"	d
GL_FALSE	deps/glad/gl.h	/^#define GL_FALSE /;"	d
GL_FASTEST	deps/glad/gl.h	/^#define GL_FASTEST /;"	d
GL_FEEDBACK	deps/glad/gl.h	/^#define GL_FEEDBACK /;"	d
GL_FEEDBACK_BUFFER_POINTER	deps/glad/gl.h	/^#define GL_FEEDBACK_BUFFER_POINTER /;"	d
GL_FEEDBACK_BUFFER_SIZE	deps/glad/gl.h	/^#define GL_FEEDBACK_BUFFER_SIZE /;"	d
GL_FEEDBACK_BUFFER_TYPE	deps/glad/gl.h	/^#define GL_FEEDBACK_BUFFER_TYPE /;"	d
GL_FILL	deps/glad/gl.h	/^#define GL_FILL /;"	d
GL_FIRST_VERTEX_CONVENTION	deps/glad/gl.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIXED_ONLY	deps/glad/gl.h	/^#define GL_FIXED_ONLY /;"	d
GL_FLAT	deps/glad/gl.h	/^#define GL_FLAT /;"	d
GL_FLOAT	deps/glad/gl.h	/^#define GL_FLOAT /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	deps/glad/gl.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_MAT2	deps/glad/gl.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2x3	deps/glad/gl.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x4	deps/glad/gl.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT3	deps/glad/gl.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3x2	deps/glad/gl.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x4	deps/glad/gl.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT4	deps/glad/gl.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4x2	deps/glad/gl.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x3	deps/glad/gl.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_VEC2	deps/glad/gl.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC3	deps/glad/gl.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC4	deps/glad/gl.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FOG	deps/glad/gl.h	/^#define GL_FOG /;"	d
GL_FOG_BIT	deps/glad/gl.h	/^#define GL_FOG_BIT /;"	d
GL_FOG_COLOR	deps/glad/gl.h	/^#define GL_FOG_COLOR /;"	d
GL_FOG_COORD	deps/glad/gl.h	/^#define GL_FOG_COORD /;"	d
GL_FOG_COORDINATE	deps/glad/gl.h	/^#define GL_FOG_COORDINATE /;"	d
GL_FOG_COORDINATE_ARRAY	deps/glad/gl.h	/^#define GL_FOG_COORDINATE_ARRAY /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	deps/glad/gl.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	deps/glad/gl.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE /;"	d
GL_FOG_COORDINATE_SOURCE	deps/glad/gl.h	/^#define GL_FOG_COORDINATE_SOURCE /;"	d
GL_FOG_COORD_ARRAY	deps/glad/gl.h	/^#define GL_FOG_COORD_ARRAY /;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_FOG_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORD_ARRAY_POINTER	deps/glad/gl.h	/^#define GL_FOG_COORD_ARRAY_POINTER /;"	d
GL_FOG_COORD_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_FOG_COORD_ARRAY_STRIDE /;"	d
GL_FOG_COORD_ARRAY_TYPE	deps/glad/gl.h	/^#define GL_FOG_COORD_ARRAY_TYPE /;"	d
GL_FOG_COORD_SRC	deps/glad/gl.h	/^#define GL_FOG_COORD_SRC /;"	d
GL_FOG_DENSITY	deps/glad/gl.h	/^#define GL_FOG_DENSITY /;"	d
GL_FOG_END	deps/glad/gl.h	/^#define GL_FOG_END /;"	d
GL_FOG_HINT	deps/glad/gl.h	/^#define GL_FOG_HINT /;"	d
GL_FOG_INDEX	deps/glad/gl.h	/^#define GL_FOG_INDEX /;"	d
GL_FOG_MODE	deps/glad/gl.h	/^#define GL_FOG_MODE /;"	d
GL_FOG_START	deps/glad/gl.h	/^#define GL_FOG_START /;"	d
GL_FRAGMENT_DEPTH	deps/glad/gl.h	/^#define GL_FRAGMENT_DEPTH /;"	d
GL_FRAGMENT_SHADER	deps/glad/gl.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	deps/glad/gl.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAMEBUFFER	deps/glad/gl.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_BINDING	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_COMPLETE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_DEFAULT	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_SRGB	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_UNDEFINED	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	deps/glad/gl.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRONT	deps/glad/gl.h	/^#define GL_FRONT /;"	d
GL_FRONT_AND_BACK	deps/glad/gl.h	/^#define GL_FRONT_AND_BACK /;"	d
GL_FRONT_FACE	deps/glad/gl.h	/^#define GL_FRONT_FACE /;"	d
GL_FRONT_LEFT	deps/glad/gl.h	/^#define GL_FRONT_LEFT /;"	d
GL_FRONT_RIGHT	deps/glad/gl.h	/^#define GL_FRONT_RIGHT /;"	d
GL_FUNC_ADD	deps/glad/gl.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_REVERSE_SUBTRACT	deps/glad/gl.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_SUBTRACT	deps/glad/gl.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_GENERATE_MIPMAP	deps/glad/gl.h	/^#define GL_GENERATE_MIPMAP /;"	d
GL_GENERATE_MIPMAP_HINT	deps/glad/gl.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	d
GL_GEOMETRY_INPUT_TYPE	deps/glad/gl.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE	deps/glad/gl.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_SHADER	deps/glad/gl.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_VERTICES_OUT	deps/glad/gl.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEQUAL	deps/glad/gl.h	/^#define GL_GEQUAL /;"	d
GL_GREATER	deps/glad/gl.h	/^#define GL_GREATER /;"	d
GL_GREEN	deps/glad/gl.h	/^#define GL_GREEN /;"	d
GL_GREEN_BIAS	deps/glad/gl.h	/^#define GL_GREEN_BIAS /;"	d
GL_GREEN_BITS	deps/glad/gl.h	/^#define GL_GREEN_BITS /;"	d
GL_GREEN_INTEGER	deps/glad/gl.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GREEN_SCALE	deps/glad/gl.h	/^#define GL_GREEN_SCALE /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	deps/glad/gl.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_HALF_FLOAT	deps/glad/gl.h	/^#define GL_HALF_FLOAT /;"	d
GL_HINT_BIT	deps/glad/gl.h	/^#define GL_HINT_BIT /;"	d
GL_INCR	deps/glad/gl.h	/^#define GL_INCR /;"	d
GL_INCR_WRAP	deps/glad/gl.h	/^#define GL_INCR_WRAP /;"	d
GL_INDEX	deps/glad/gl.h	/^#define GL_INDEX /;"	d
GL_INDEX_ARRAY	deps/glad/gl.h	/^#define GL_INDEX_ARRAY /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING /;"	d
GL_INDEX_ARRAY_POINTER	deps/glad/gl.h	/^#define GL_INDEX_ARRAY_POINTER /;"	d
GL_INDEX_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_INDEX_ARRAY_STRIDE /;"	d
GL_INDEX_ARRAY_TYPE	deps/glad/gl.h	/^#define GL_INDEX_ARRAY_TYPE /;"	d
GL_INDEX_BITS	deps/glad/gl.h	/^#define GL_INDEX_BITS /;"	d
GL_INDEX_CLEAR_VALUE	deps/glad/gl.h	/^#define GL_INDEX_CLEAR_VALUE /;"	d
GL_INDEX_LOGIC_OP	deps/glad/gl.h	/^#define GL_INDEX_LOGIC_OP /;"	d
GL_INDEX_MODE	deps/glad/gl.h	/^#define GL_INDEX_MODE /;"	d
GL_INDEX_OFFSET	deps/glad/gl.h	/^#define GL_INDEX_OFFSET /;"	d
GL_INDEX_SHIFT	deps/glad/gl.h	/^#define GL_INDEX_SHIFT /;"	d
GL_INDEX_WRITEMASK	deps/glad/gl.h	/^#define GL_INDEX_WRITEMASK /;"	d
GL_INFO_LOG_LENGTH	deps/glad/gl.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	deps/glad/gl.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INT	deps/glad/gl.h	/^#define GL_INT /;"	d
GL_INTENSITY	deps/glad/gl.h	/^#define GL_INTENSITY /;"	d
GL_INTENSITY12	deps/glad/gl.h	/^#define GL_INTENSITY12 /;"	d
GL_INTENSITY16	deps/glad/gl.h	/^#define GL_INTENSITY16 /;"	d
GL_INTENSITY4	deps/glad/gl.h	/^#define GL_INTENSITY4 /;"	d
GL_INTENSITY8	deps/glad/gl.h	/^#define GL_INTENSITY8 /;"	d
GL_INTERLEAVED_ATTRIBS	deps/glad/gl.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERPOLATE	deps/glad/gl.h	/^#define GL_INTERPOLATE /;"	d
GL_INT_2_10_10_10_REV	deps/glad/gl.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_SAMPLER_1D	deps/glad/gl.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	deps/glad/gl.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_2D	deps/glad/gl.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	deps/glad/gl.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	deps/glad/gl.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	deps/glad/gl.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_RECT	deps/glad/gl.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_3D	deps/glad/gl.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_BUFFER	deps/glad/gl.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_CUBE	deps/glad/gl.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_VEC2	deps/glad/gl.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC3	deps/glad/gl.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC4	deps/glad/gl.h	/^#define GL_INT_VEC4 /;"	d
GL_INVALID_ENUM	deps/glad/gl.h	/^#define GL_INVALID_ENUM /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	deps/glad/gl.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_INDEX	deps/glad/gl.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVALID_OPERATION	deps/glad/gl.h	/^#define GL_INVALID_OPERATION /;"	d
GL_INVALID_VALUE	deps/glad/gl.h	/^#define GL_INVALID_VALUE /;"	d
GL_INVERT	deps/glad/gl.h	/^#define GL_INVERT /;"	d
GL_KEEP	deps/glad/gl.h	/^#define GL_KEEP /;"	d
GL_KHR_debug	deps/glad/gl.h	/^#define GL_KHR_debug /;"	d
GL_LAST_VERTEX_CONVENTION	deps/glad/gl.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LEFT	deps/glad/gl.h	/^#define GL_LEFT /;"	d
GL_LEQUAL	deps/glad/gl.h	/^#define GL_LEQUAL /;"	d
GL_LESS	deps/glad/gl.h	/^#define GL_LESS /;"	d
GL_LIGHT0	deps/glad/gl.h	/^#define GL_LIGHT0 /;"	d
GL_LIGHT1	deps/glad/gl.h	/^#define GL_LIGHT1 /;"	d
GL_LIGHT2	deps/glad/gl.h	/^#define GL_LIGHT2 /;"	d
GL_LIGHT3	deps/glad/gl.h	/^#define GL_LIGHT3 /;"	d
GL_LIGHT4	deps/glad/gl.h	/^#define GL_LIGHT4 /;"	d
GL_LIGHT5	deps/glad/gl.h	/^#define GL_LIGHT5 /;"	d
GL_LIGHT6	deps/glad/gl.h	/^#define GL_LIGHT6 /;"	d
GL_LIGHT7	deps/glad/gl.h	/^#define GL_LIGHT7 /;"	d
GL_LIGHTING	deps/glad/gl.h	/^#define GL_LIGHTING /;"	d
GL_LIGHTING_BIT	deps/glad/gl.h	/^#define GL_LIGHTING_BIT /;"	d
GL_LIGHT_MODEL_AMBIENT	deps/glad/gl.h	/^#define GL_LIGHT_MODEL_AMBIENT /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	deps/glad/gl.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	examples/particles.c	/^#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT /;"	d	file:
GL_LIGHT_MODEL_LOCAL_VIEWER	deps/glad/gl.h	/^#define GL_LIGHT_MODEL_LOCAL_VIEWER /;"	d
GL_LIGHT_MODEL_TWO_SIDE	deps/glad/gl.h	/^#define GL_LIGHT_MODEL_TWO_SIDE /;"	d
GL_LINE	deps/glad/gl.h	/^#define GL_LINE /;"	d
GL_LINEAR	deps/glad/gl.h	/^#define GL_LINEAR /;"	d
GL_LINEAR_ATTENUATION	deps/glad/gl.h	/^#define GL_LINEAR_ATTENUATION /;"	d
GL_LINEAR_MIPMAP_LINEAR	deps/glad/gl.h	/^#define GL_LINEAR_MIPMAP_LINEAR /;"	d
GL_LINEAR_MIPMAP_NEAREST	deps/glad/gl.h	/^#define GL_LINEAR_MIPMAP_NEAREST /;"	d
GL_LINES	deps/glad/gl.h	/^#define GL_LINES /;"	d
GL_LINES_ADJACENCY	deps/glad/gl.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINE_BIT	deps/glad/gl.h	/^#define GL_LINE_BIT /;"	d
GL_LINE_LOOP	deps/glad/gl.h	/^#define GL_LINE_LOOP /;"	d
GL_LINE_RESET_TOKEN	deps/glad/gl.h	/^#define GL_LINE_RESET_TOKEN /;"	d
GL_LINE_SMOOTH	deps/glad/gl.h	/^#define GL_LINE_SMOOTH /;"	d
GL_LINE_SMOOTH_HINT	deps/glad/gl.h	/^#define GL_LINE_SMOOTH_HINT /;"	d
GL_LINE_STIPPLE	deps/glad/gl.h	/^#define GL_LINE_STIPPLE /;"	d
GL_LINE_STIPPLE_PATTERN	deps/glad/gl.h	/^#define GL_LINE_STIPPLE_PATTERN /;"	d
GL_LINE_STIPPLE_REPEAT	deps/glad/gl.h	/^#define GL_LINE_STIPPLE_REPEAT /;"	d
GL_LINE_STRIP	deps/glad/gl.h	/^#define GL_LINE_STRIP /;"	d
GL_LINE_STRIP_ADJACENCY	deps/glad/gl.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_TOKEN	deps/glad/gl.h	/^#define GL_LINE_TOKEN /;"	d
GL_LINE_WIDTH	deps/glad/gl.h	/^#define GL_LINE_WIDTH /;"	d
GL_LINE_WIDTH_GRANULARITY	deps/glad/gl.h	/^#define GL_LINE_WIDTH_GRANULARITY /;"	d
GL_LINE_WIDTH_RANGE	deps/glad/gl.h	/^#define GL_LINE_WIDTH_RANGE /;"	d
GL_LINK_STATUS	deps/glad/gl.h	/^#define GL_LINK_STATUS /;"	d
GL_LIST_BASE	deps/glad/gl.h	/^#define GL_LIST_BASE /;"	d
GL_LIST_BIT	deps/glad/gl.h	/^#define GL_LIST_BIT /;"	d
GL_LIST_INDEX	deps/glad/gl.h	/^#define GL_LIST_INDEX /;"	d
GL_LIST_MODE	deps/glad/gl.h	/^#define GL_LIST_MODE /;"	d
GL_LOAD	deps/glad/gl.h	/^#define GL_LOAD /;"	d
GL_LOGIC_OP	deps/glad/gl.h	/^#define GL_LOGIC_OP /;"	d
GL_LOGIC_OP_MODE	deps/glad/gl.h	/^#define GL_LOGIC_OP_MODE /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	deps/glad/gl.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	src/internal.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOWER_LEFT	deps/glad/gl.h	/^#define GL_LOWER_LEFT /;"	d
GL_LUMINANCE	deps/glad/gl.h	/^#define GL_LUMINANCE /;"	d
GL_LUMINANCE12	deps/glad/gl.h	/^#define GL_LUMINANCE12 /;"	d
GL_LUMINANCE12_ALPHA12	deps/glad/gl.h	/^#define GL_LUMINANCE12_ALPHA12 /;"	d
GL_LUMINANCE12_ALPHA4	deps/glad/gl.h	/^#define GL_LUMINANCE12_ALPHA4 /;"	d
GL_LUMINANCE16	deps/glad/gl.h	/^#define GL_LUMINANCE16 /;"	d
GL_LUMINANCE16_ALPHA16	deps/glad/gl.h	/^#define GL_LUMINANCE16_ALPHA16 /;"	d
GL_LUMINANCE4	deps/glad/gl.h	/^#define GL_LUMINANCE4 /;"	d
GL_LUMINANCE4_ALPHA4	deps/glad/gl.h	/^#define GL_LUMINANCE4_ALPHA4 /;"	d
GL_LUMINANCE6_ALPHA2	deps/glad/gl.h	/^#define GL_LUMINANCE6_ALPHA2 /;"	d
GL_LUMINANCE8	deps/glad/gl.h	/^#define GL_LUMINANCE8 /;"	d
GL_LUMINANCE8_ALPHA8	deps/glad/gl.h	/^#define GL_LUMINANCE8_ALPHA8 /;"	d
GL_LUMINANCE_ALPHA	deps/glad/gl.h	/^#define GL_LUMINANCE_ALPHA /;"	d
GL_MAJOR_VERSION	deps/glad/gl.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MAP1_COLOR_4	deps/glad/gl.h	/^#define GL_MAP1_COLOR_4 /;"	d
GL_MAP1_GRID_DOMAIN	deps/glad/gl.h	/^#define GL_MAP1_GRID_DOMAIN /;"	d
GL_MAP1_GRID_SEGMENTS	deps/glad/gl.h	/^#define GL_MAP1_GRID_SEGMENTS /;"	d
GL_MAP1_INDEX	deps/glad/gl.h	/^#define GL_MAP1_INDEX /;"	d
GL_MAP1_NORMAL	deps/glad/gl.h	/^#define GL_MAP1_NORMAL /;"	d
GL_MAP1_TEXTURE_COORD_1	deps/glad/gl.h	/^#define GL_MAP1_TEXTURE_COORD_1 /;"	d
GL_MAP1_TEXTURE_COORD_2	deps/glad/gl.h	/^#define GL_MAP1_TEXTURE_COORD_2 /;"	d
GL_MAP1_TEXTURE_COORD_3	deps/glad/gl.h	/^#define GL_MAP1_TEXTURE_COORD_3 /;"	d
GL_MAP1_TEXTURE_COORD_4	deps/glad/gl.h	/^#define GL_MAP1_TEXTURE_COORD_4 /;"	d
GL_MAP1_VERTEX_3	deps/glad/gl.h	/^#define GL_MAP1_VERTEX_3 /;"	d
GL_MAP1_VERTEX_4	deps/glad/gl.h	/^#define GL_MAP1_VERTEX_4 /;"	d
GL_MAP2_COLOR_4	deps/glad/gl.h	/^#define GL_MAP2_COLOR_4 /;"	d
GL_MAP2_GRID_DOMAIN	deps/glad/gl.h	/^#define GL_MAP2_GRID_DOMAIN /;"	d
GL_MAP2_GRID_SEGMENTS	deps/glad/gl.h	/^#define GL_MAP2_GRID_SEGMENTS /;"	d
GL_MAP2_INDEX	deps/glad/gl.h	/^#define GL_MAP2_INDEX /;"	d
GL_MAP2_NORMAL	deps/glad/gl.h	/^#define GL_MAP2_NORMAL /;"	d
GL_MAP2_TEXTURE_COORD_1	deps/glad/gl.h	/^#define GL_MAP2_TEXTURE_COORD_1 /;"	d
GL_MAP2_TEXTURE_COORD_2	deps/glad/gl.h	/^#define GL_MAP2_TEXTURE_COORD_2 /;"	d
GL_MAP2_TEXTURE_COORD_3	deps/glad/gl.h	/^#define GL_MAP2_TEXTURE_COORD_3 /;"	d
GL_MAP2_TEXTURE_COORD_4	deps/glad/gl.h	/^#define GL_MAP2_TEXTURE_COORD_4 /;"	d
GL_MAP2_VERTEX_3	deps/glad/gl.h	/^#define GL_MAP2_VERTEX_3 /;"	d
GL_MAP2_VERTEX_4	deps/glad/gl.h	/^#define GL_MAP2_VERTEX_4 /;"	d
GL_MAP_COLOR	deps/glad/gl.h	/^#define GL_MAP_COLOR /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	deps/glad/gl.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	deps/glad/gl.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	deps/glad/gl.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_READ_BIT	deps/glad/gl.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_STENCIL	deps/glad/gl.h	/^#define GL_MAP_STENCIL /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	deps/glad/gl.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_WRITE_BIT	deps/glad/gl.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MATRIX_MODE	deps/glad/gl.h	/^#define GL_MATRIX_MODE /;"	d
GL_MAX	deps/glad/gl.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	deps/glad/gl.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	deps/glad/gl.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ATTRIB_STACK_DEPTH	deps/glad/gl.h	/^#define GL_MAX_ATTRIB_STACK_DEPTH /;"	d
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	deps/glad/gl.h	/^#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH /;"	d
GL_MAX_CLIP_DISTANCES	deps/glad/gl.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_CLIP_PLANES	deps/glad/gl.h	/^#define GL_MAX_CLIP_PLANES /;"	d
GL_MAX_COLOR_ATTACHMENTS	deps/glad/gl.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	deps/glad/gl.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	deps/glad/gl.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	deps/glad/gl.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	deps/glad/gl.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	deps/glad/gl.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	deps/glad/gl.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	deps/glad/gl.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	deps/glad/gl.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DRAW_BUFFERS	deps/glad/gl.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	deps/glad/gl.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_ELEMENTS_INDICES	deps/glad/gl.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_VERTICES	deps/glad/gl.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_EVAL_ORDER	deps/glad/gl.h	/^#define GL_MAX_EVAL_ORDER /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	deps/glad/gl.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	deps/glad/gl.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	deps/glad/gl.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	deps/glad/gl.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_INTEGER_SAMPLES	deps/glad/gl.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_LABEL_LENGTH	deps/glad/gl.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LIGHTS	deps/glad/gl.h	/^#define GL_MAX_LIGHTS /;"	d
GL_MAX_LIST_NESTING	deps/glad/gl.h	/^#define GL_MAX_LIST_NESTING /;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	deps/glad/gl.h	/^#define GL_MAX_MODELVIEW_STACK_DEPTH /;"	d
GL_MAX_NAME_STACK_DEPTH	deps/glad/gl.h	/^#define GL_MAX_NAME_STACK_DEPTH /;"	d
GL_MAX_PIXEL_MAP_TABLE	deps/glad/gl.h	/^#define GL_MAX_PIXEL_MAP_TABLE /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	deps/glad/gl.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROJECTION_STACK_DEPTH	deps/glad/gl.h	/^#define GL_MAX_PROJECTION_STACK_DEPTH /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	deps/glad/gl.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE	deps/glad/gl.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_SAMPLES	deps/glad/gl.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLE_MASK_WORDS	deps/glad/gl.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	deps/glad/gl.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	deps/glad/gl.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_COORDS	deps/glad/gl.h	/^#define GL_MAX_TEXTURE_COORDS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	deps/glad/gl.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_LOD_BIAS	deps/glad/gl.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_SIZE	deps/glad/gl.h	/^#define GL_MAX_TEXTURE_SIZE /;"	d
GL_MAX_TEXTURE_STACK_DEPTH	deps/glad/gl.h	/^#define GL_MAX_TEXTURE_STACK_DEPTH /;"	d
GL_MAX_TEXTURE_UNITS	deps/glad/gl.h	/^#define GL_MAX_TEXTURE_UNITS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	deps/glad/gl.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	deps/glad/gl.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	deps/glad/gl.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_VARYING_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_FLOATS	deps/glad/gl.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VERTEX_ATTRIBS	deps/glad/gl.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	deps/glad/gl.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	deps/glad/gl.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	deps/glad/gl.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VIEWPORT_DIMS	deps/glad/gl.h	/^#define GL_MAX_VIEWPORT_DIMS /;"	d
GL_MIN	deps/glad/gl.h	/^#define GL_MIN /;"	d
GL_MINOR_VERSION	deps/glad/gl.h	/^#define GL_MINOR_VERSION /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	deps/glad/gl.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIRRORED_REPEAT	deps/glad/gl.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MODELVIEW	deps/glad/gl.h	/^#define GL_MODELVIEW /;"	d
GL_MODELVIEW_MATRIX	deps/glad/gl.h	/^#define GL_MODELVIEW_MATRIX /;"	d
GL_MODELVIEW_STACK_DEPTH	deps/glad/gl.h	/^#define GL_MODELVIEW_STACK_DEPTH /;"	d
GL_MODULATE	deps/glad/gl.h	/^#define GL_MODULATE /;"	d
GL_MULT	deps/glad/gl.h	/^#define GL_MULT /;"	d
GL_MULTISAMPLE	deps/glad/gl.h	/^#define GL_MULTISAMPLE /;"	d
GL_MULTISAMPLE_ARB	deps/glad/gl.h	/^#define GL_MULTISAMPLE_ARB /;"	d
GL_MULTISAMPLE_BIT	deps/glad/gl.h	/^#define GL_MULTISAMPLE_BIT /;"	d
GL_MULTISAMPLE_BIT_ARB	deps/glad/gl.h	/^#define GL_MULTISAMPLE_BIT_ARB /;"	d
GL_N3F_V3F	deps/glad/gl.h	/^#define GL_N3F_V3F /;"	d
GL_NAME_STACK_DEPTH	deps/glad/gl.h	/^#define GL_NAME_STACK_DEPTH /;"	d
GL_NAND	deps/glad/gl.h	/^#define GL_NAND /;"	d
GL_NEAREST	deps/glad/gl.h	/^#define GL_NEAREST /;"	d
GL_NEAREST_MIPMAP_LINEAR	deps/glad/gl.h	/^#define GL_NEAREST_MIPMAP_LINEAR /;"	d
GL_NEAREST_MIPMAP_NEAREST	deps/glad/gl.h	/^#define GL_NEAREST_MIPMAP_NEAREST /;"	d
GL_NEVER	deps/glad/gl.h	/^#define GL_NEVER /;"	d
GL_NICEST	deps/glad/gl.h	/^#define GL_NICEST /;"	d
GL_NONE	deps/glad/gl.h	/^#define GL_NONE /;"	d
GL_NONE	src/internal.h	/^#define GL_NONE /;"	d
GL_NOOP	deps/glad/gl.h	/^#define GL_NOOP /;"	d
GL_NOR	deps/glad/gl.h	/^#define GL_NOR /;"	d
GL_NORMALIZE	deps/glad/gl.h	/^#define GL_NORMALIZE /;"	d
GL_NORMAL_ARRAY	deps/glad/gl.h	/^#define GL_NORMAL_ARRAY /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING /;"	d
GL_NORMAL_ARRAY_POINTER	deps/glad/gl.h	/^#define GL_NORMAL_ARRAY_POINTER /;"	d
GL_NORMAL_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_NORMAL_ARRAY_STRIDE /;"	d
GL_NORMAL_ARRAY_TYPE	deps/glad/gl.h	/^#define GL_NORMAL_ARRAY_TYPE /;"	d
GL_NORMAL_MAP	deps/glad/gl.h	/^#define GL_NORMAL_MAP /;"	d
GL_NOTEQUAL	deps/glad/gl.h	/^#define GL_NOTEQUAL /;"	d
GL_NO_ERROR	deps/glad/gl.h	/^#define GL_NO_ERROR /;"	d
GL_NO_RESET_NOTIFICATION_ARB	deps/glad/gl.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NO_RESET_NOTIFICATION_ARB	src/internal.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	deps/glad/gl.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_EXTENSIONS	deps/glad/gl.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_EXTENSIONS	src/internal.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_OBJECT_LINEAR	deps/glad/gl.h	/^#define GL_OBJECT_LINEAR /;"	d
GL_OBJECT_PLANE	deps/glad/gl.h	/^#define GL_OBJECT_PLANE /;"	d
GL_OBJECT_TYPE	deps/glad/gl.h	/^#define GL_OBJECT_TYPE /;"	d
GL_ONE	deps/glad/gl.h	/^#define GL_ONE /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	deps/glad/gl.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	deps/glad/gl.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_DST_ALPHA	deps/glad/gl.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d
GL_ONE_MINUS_DST_COLOR	deps/glad/gl.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d
GL_ONE_MINUS_SRC1_ALPHA	deps/glad/gl.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_COLOR	deps/glad/gl.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_ONE_MINUS_SRC_ALPHA	deps/glad/gl.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d
GL_ONE_MINUS_SRC_COLOR	deps/glad/gl.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d
GL_OPERAND0_ALPHA	deps/glad/gl.h	/^#define GL_OPERAND0_ALPHA /;"	d
GL_OPERAND0_RGB	deps/glad/gl.h	/^#define GL_OPERAND0_RGB /;"	d
GL_OPERAND1_ALPHA	deps/glad/gl.h	/^#define GL_OPERAND1_ALPHA /;"	d
GL_OPERAND1_RGB	deps/glad/gl.h	/^#define GL_OPERAND1_RGB /;"	d
GL_OPERAND2_ALPHA	deps/glad/gl.h	/^#define GL_OPERAND2_ALPHA /;"	d
GL_OPERAND2_RGB	deps/glad/gl.h	/^#define GL_OPERAND2_RGB /;"	d
GL_OR	deps/glad/gl.h	/^#define GL_OR /;"	d
GL_ORDER	deps/glad/gl.h	/^#define GL_ORDER /;"	d
GL_OR_INVERTED	deps/glad/gl.h	/^#define GL_OR_INVERTED /;"	d
GL_OR_REVERSE	deps/glad/gl.h	/^#define GL_OR_REVERSE /;"	d
GL_OUT_OF_MEMORY	deps/glad/gl.h	/^#define GL_OUT_OF_MEMORY /;"	d
GL_PACK_ALIGNMENT	deps/glad/gl.h	/^#define GL_PACK_ALIGNMENT /;"	d
GL_PACK_IMAGE_HEIGHT	deps/glad/gl.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_LSB_FIRST	deps/glad/gl.h	/^#define GL_PACK_LSB_FIRST /;"	d
GL_PACK_ROW_LENGTH	deps/glad/gl.h	/^#define GL_PACK_ROW_LENGTH /;"	d
GL_PACK_SKIP_IMAGES	deps/glad/gl.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_PIXELS	deps/glad/gl.h	/^#define GL_PACK_SKIP_PIXELS /;"	d
GL_PACK_SKIP_ROWS	deps/glad/gl.h	/^#define GL_PACK_SKIP_ROWS /;"	d
GL_PACK_SWAP_BYTES	deps/glad/gl.h	/^#define GL_PACK_SWAP_BYTES /;"	d
GL_PASS_THROUGH_TOKEN	deps/glad/gl.h	/^#define GL_PASS_THROUGH_TOKEN /;"	d
GL_PERSPECTIVE_CORRECTION_HINT	deps/glad/gl.h	/^#define GL_PERSPECTIVE_CORRECTION_HINT /;"	d
GL_PIXEL_MAP_A_TO_A	deps/glad/gl.h	/^#define GL_PIXEL_MAP_A_TO_A /;"	d
GL_PIXEL_MAP_A_TO_A_SIZE	deps/glad/gl.h	/^#define GL_PIXEL_MAP_A_TO_A_SIZE /;"	d
GL_PIXEL_MAP_B_TO_B	deps/glad/gl.h	/^#define GL_PIXEL_MAP_B_TO_B /;"	d
GL_PIXEL_MAP_B_TO_B_SIZE	deps/glad/gl.h	/^#define GL_PIXEL_MAP_B_TO_B_SIZE /;"	d
GL_PIXEL_MAP_G_TO_G	deps/glad/gl.h	/^#define GL_PIXEL_MAP_G_TO_G /;"	d
GL_PIXEL_MAP_G_TO_G_SIZE	deps/glad/gl.h	/^#define GL_PIXEL_MAP_G_TO_G_SIZE /;"	d
GL_PIXEL_MAP_I_TO_A	deps/glad/gl.h	/^#define GL_PIXEL_MAP_I_TO_A /;"	d
GL_PIXEL_MAP_I_TO_A_SIZE	deps/glad/gl.h	/^#define GL_PIXEL_MAP_I_TO_A_SIZE /;"	d
GL_PIXEL_MAP_I_TO_B	deps/glad/gl.h	/^#define GL_PIXEL_MAP_I_TO_B /;"	d
GL_PIXEL_MAP_I_TO_B_SIZE	deps/glad/gl.h	/^#define GL_PIXEL_MAP_I_TO_B_SIZE /;"	d
GL_PIXEL_MAP_I_TO_G	deps/glad/gl.h	/^#define GL_PIXEL_MAP_I_TO_G /;"	d
GL_PIXEL_MAP_I_TO_G_SIZE	deps/glad/gl.h	/^#define GL_PIXEL_MAP_I_TO_G_SIZE /;"	d
GL_PIXEL_MAP_I_TO_I	deps/glad/gl.h	/^#define GL_PIXEL_MAP_I_TO_I /;"	d
GL_PIXEL_MAP_I_TO_I_SIZE	deps/glad/gl.h	/^#define GL_PIXEL_MAP_I_TO_I_SIZE /;"	d
GL_PIXEL_MAP_I_TO_R	deps/glad/gl.h	/^#define GL_PIXEL_MAP_I_TO_R /;"	d
GL_PIXEL_MAP_I_TO_R_SIZE	deps/glad/gl.h	/^#define GL_PIXEL_MAP_I_TO_R_SIZE /;"	d
GL_PIXEL_MAP_R_TO_R	deps/glad/gl.h	/^#define GL_PIXEL_MAP_R_TO_R /;"	d
GL_PIXEL_MAP_R_TO_R_SIZE	deps/glad/gl.h	/^#define GL_PIXEL_MAP_R_TO_R_SIZE /;"	d
GL_PIXEL_MAP_S_TO_S	deps/glad/gl.h	/^#define GL_PIXEL_MAP_S_TO_S /;"	d
GL_PIXEL_MAP_S_TO_S_SIZE	deps/glad/gl.h	/^#define GL_PIXEL_MAP_S_TO_S_SIZE /;"	d
GL_PIXEL_MODE_BIT	deps/glad/gl.h	/^#define GL_PIXEL_MODE_BIT /;"	d
GL_PIXEL_PACK_BUFFER	deps/glad/gl.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER	deps/glad/gl.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_POINT	deps/glad/gl.h	/^#define GL_POINT /;"	d
GL_POINTS	deps/glad/gl.h	/^#define GL_POINTS /;"	d
GL_POINT_BIT	deps/glad/gl.h	/^#define GL_POINT_BIT /;"	d
GL_POINT_DISTANCE_ATTENUATION	deps/glad/gl.h	/^#define GL_POINT_DISTANCE_ATTENUATION /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	deps/glad/gl.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_SIZE	deps/glad/gl.h	/^#define GL_POINT_SIZE /;"	d
GL_POINT_SIZE_GRANULARITY	deps/glad/gl.h	/^#define GL_POINT_SIZE_GRANULARITY /;"	d
GL_POINT_SIZE_MAX	deps/glad/gl.h	/^#define GL_POINT_SIZE_MAX /;"	d
GL_POINT_SIZE_MIN	deps/glad/gl.h	/^#define GL_POINT_SIZE_MIN /;"	d
GL_POINT_SIZE_RANGE	deps/glad/gl.h	/^#define GL_POINT_SIZE_RANGE /;"	d
GL_POINT_SMOOTH	deps/glad/gl.h	/^#define GL_POINT_SMOOTH /;"	d
GL_POINT_SMOOTH_HINT	deps/glad/gl.h	/^#define GL_POINT_SMOOTH_HINT /;"	d
GL_POINT_SPRITE	deps/glad/gl.h	/^#define GL_POINT_SPRITE /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	deps/glad/gl.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POINT_TOKEN	deps/glad/gl.h	/^#define GL_POINT_TOKEN /;"	d
GL_POLYGON	deps/glad/gl.h	/^#define GL_POLYGON /;"	d
GL_POLYGON_BIT	deps/glad/gl.h	/^#define GL_POLYGON_BIT /;"	d
GL_POLYGON_MODE	deps/glad/gl.h	/^#define GL_POLYGON_MODE /;"	d
GL_POLYGON_OFFSET_FACTOR	deps/glad/gl.h	/^#define GL_POLYGON_OFFSET_FACTOR /;"	d
GL_POLYGON_OFFSET_FILL	deps/glad/gl.h	/^#define GL_POLYGON_OFFSET_FILL /;"	d
GL_POLYGON_OFFSET_LINE	deps/glad/gl.h	/^#define GL_POLYGON_OFFSET_LINE /;"	d
GL_POLYGON_OFFSET_POINT	deps/glad/gl.h	/^#define GL_POLYGON_OFFSET_POINT /;"	d
GL_POLYGON_OFFSET_UNITS	deps/glad/gl.h	/^#define GL_POLYGON_OFFSET_UNITS /;"	d
GL_POLYGON_SMOOTH	deps/glad/gl.h	/^#define GL_POLYGON_SMOOTH /;"	d
GL_POLYGON_SMOOTH_HINT	deps/glad/gl.h	/^#define GL_POLYGON_SMOOTH_HINT /;"	d
GL_POLYGON_STIPPLE	deps/glad/gl.h	/^#define GL_POLYGON_STIPPLE /;"	d
GL_POLYGON_STIPPLE_BIT	deps/glad/gl.h	/^#define GL_POLYGON_STIPPLE_BIT /;"	d
GL_POLYGON_TOKEN	deps/glad/gl.h	/^#define GL_POLYGON_TOKEN /;"	d
GL_POSITION	deps/glad/gl.h	/^#define GL_POSITION /;"	d
GL_PREVIOUS	deps/glad/gl.h	/^#define GL_PREVIOUS /;"	d
GL_PRIMARY_COLOR	deps/glad/gl.h	/^#define GL_PRIMARY_COLOR /;"	d
GL_PRIMITIVES_GENERATED	deps/glad/gl.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVE_RESTART	deps/glad/gl.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_INDEX	deps/glad/gl.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PROGRAM	deps/glad/gl.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAM_PIPELINE	deps/glad/gl.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_POINT_SIZE	deps/glad/gl.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROJECTION	deps/glad/gl.h	/^#define GL_PROJECTION /;"	d
GL_PROJECTION_MATRIX	deps/glad/gl.h	/^#define GL_PROJECTION_MATRIX /;"	d
GL_PROJECTION_STACK_DEPTH	deps/glad/gl.h	/^#define GL_PROJECTION_STACK_DEPTH /;"	d
GL_PROVOKING_VERTEX	deps/glad/gl.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROXY_TEXTURE_1D	deps/glad/gl.h	/^#define GL_PROXY_TEXTURE_1D /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	deps/glad/gl.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D	deps/glad/gl.h	/^#define GL_PROXY_TEXTURE_2D /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	deps/glad/gl.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	deps/glad/gl.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	deps/glad/gl.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_3D	deps/glad/gl.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	deps/glad/gl.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_RECTANGLE	deps/glad/gl.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_Q	deps/glad/gl.h	/^#define GL_Q /;"	d
GL_QUADRATIC_ATTENUATION	deps/glad/gl.h	/^#define GL_QUADRATIC_ATTENUATION /;"	d
GL_QUADS	deps/glad/gl.h	/^#define GL_QUADS /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	deps/glad/gl.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUAD_STRIP	deps/glad/gl.h	/^#define GL_QUAD_STRIP /;"	d
GL_QUERY	deps/glad/gl.h	/^#define GL_QUERY /;"	d
GL_QUERY_BY_REGION_NO_WAIT	deps/glad/gl.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT	deps/glad/gl.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_COUNTER_BITS	deps/glad/gl.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_NO_WAIT	deps/glad/gl.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_RESULT	deps/glad/gl.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_AVAILABLE	deps/glad/gl.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_WAIT	deps/glad/gl.h	/^#define GL_QUERY_WAIT /;"	d
GL_R	deps/glad/gl.h	/^#define GL_R /;"	d
GL_R11F_G11F_B10F	deps/glad/gl.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R16	deps/glad/gl.h	/^#define GL_R16 /;"	d
GL_R16F	deps/glad/gl.h	/^#define GL_R16F /;"	d
GL_R16I	deps/glad/gl.h	/^#define GL_R16I /;"	d
GL_R16UI	deps/glad/gl.h	/^#define GL_R16UI /;"	d
GL_R16_SNORM	deps/glad/gl.h	/^#define GL_R16_SNORM /;"	d
GL_R32F	deps/glad/gl.h	/^#define GL_R32F /;"	d
GL_R32I	deps/glad/gl.h	/^#define GL_R32I /;"	d
GL_R32UI	deps/glad/gl.h	/^#define GL_R32UI /;"	d
GL_R3_G3_B2	deps/glad/gl.h	/^#define GL_R3_G3_B2 /;"	d
GL_R8	deps/glad/gl.h	/^#define GL_R8 /;"	d
GL_R8I	deps/glad/gl.h	/^#define GL_R8I /;"	d
GL_R8UI	deps/glad/gl.h	/^#define GL_R8UI /;"	d
GL_R8_SNORM	deps/glad/gl.h	/^#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	deps/glad/gl.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_READ_BUFFER	deps/glad/gl.h	/^#define GL_READ_BUFFER /;"	d
GL_READ_FRAMEBUFFER	deps/glad/gl.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_BINDING	deps/glad/gl.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_ONLY	deps/glad/gl.h	/^#define GL_READ_ONLY /;"	d
GL_READ_WRITE	deps/glad/gl.h	/^#define GL_READ_WRITE /;"	d
GL_RED	deps/glad/gl.h	/^#define GL_RED /;"	d
GL_RED_BIAS	deps/glad/gl.h	/^#define GL_RED_BIAS /;"	d
GL_RED_BITS	deps/glad/gl.h	/^#define GL_RED_BITS /;"	d
GL_RED_INTEGER	deps/glad/gl.h	/^#define GL_RED_INTEGER /;"	d
GL_RED_SCALE	deps/glad/gl.h	/^#define GL_RED_SCALE /;"	d
GL_REFLECTION_MAP	deps/glad/gl.h	/^#define GL_REFLECTION_MAP /;"	d
GL_RENDER	deps/glad/gl.h	/^#define GL_RENDER /;"	d
GL_RENDERBUFFER	deps/glad/gl.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	deps/glad/gl.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_BINDING	deps/glad/gl.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BLUE_SIZE	deps/glad/gl.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	deps/glad/gl.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE	deps/glad/gl.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_HEIGHT	deps/glad/gl.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	deps/glad/gl.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_RED_SIZE	deps/glad/gl.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_SAMPLES	deps/glad/gl.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	deps/glad/gl.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_WIDTH	deps/glad/gl.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERER	deps/glad/gl.h	/^#define GL_RENDERER /;"	d
GL_RENDER_MODE	deps/glad/gl.h	/^#define GL_RENDER_MODE /;"	d
GL_REPEAT	deps/glad/gl.h	/^#define GL_REPEAT /;"	d
GL_REPLACE	deps/glad/gl.h	/^#define GL_REPLACE /;"	d
GL_RESCALE_NORMAL	deps/glad/gl.h	/^#define GL_RESCALE_NORMAL /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	deps/glad/gl.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	src/internal.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RETURN	deps/glad/gl.h	/^#define GL_RETURN /;"	d
GL_RG	deps/glad/gl.h	/^#define GL_RG /;"	d
GL_RG16	deps/glad/gl.h	/^#define GL_RG16 /;"	d
GL_RG16F	deps/glad/gl.h	/^#define GL_RG16F /;"	d
GL_RG16I	deps/glad/gl.h	/^#define GL_RG16I /;"	d
GL_RG16UI	deps/glad/gl.h	/^#define GL_RG16UI /;"	d
GL_RG16_SNORM	deps/glad/gl.h	/^#define GL_RG16_SNORM /;"	d
GL_RG32F	deps/glad/gl.h	/^#define GL_RG32F /;"	d
GL_RG32I	deps/glad/gl.h	/^#define GL_RG32I /;"	d
GL_RG32UI	deps/glad/gl.h	/^#define GL_RG32UI /;"	d
GL_RG8	deps/glad/gl.h	/^#define GL_RG8 /;"	d
GL_RG8I	deps/glad/gl.h	/^#define GL_RG8I /;"	d
GL_RG8UI	deps/glad/gl.h	/^#define GL_RG8UI /;"	d
GL_RG8_SNORM	deps/glad/gl.h	/^#define GL_RG8_SNORM /;"	d
GL_RGB	deps/glad/gl.h	/^#define GL_RGB /;"	d
GL_RGB10	deps/glad/gl.h	/^#define GL_RGB10 /;"	d
GL_RGB10_A2	deps/glad/gl.h	/^#define GL_RGB10_A2 /;"	d
GL_RGB10_A2UI	deps/glad/gl.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB12	deps/glad/gl.h	/^#define GL_RGB12 /;"	d
GL_RGB16	deps/glad/gl.h	/^#define GL_RGB16 /;"	d
GL_RGB16F	deps/glad/gl.h	/^#define GL_RGB16F /;"	d
GL_RGB16I	deps/glad/gl.h	/^#define GL_RGB16I /;"	d
GL_RGB16UI	deps/glad/gl.h	/^#define GL_RGB16UI /;"	d
GL_RGB16_SNORM	deps/glad/gl.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB32F	deps/glad/gl.h	/^#define GL_RGB32F /;"	d
GL_RGB32I	deps/glad/gl.h	/^#define GL_RGB32I /;"	d
GL_RGB32UI	deps/glad/gl.h	/^#define GL_RGB32UI /;"	d
GL_RGB4	deps/glad/gl.h	/^#define GL_RGB4 /;"	d
GL_RGB5	deps/glad/gl.h	/^#define GL_RGB5 /;"	d
GL_RGB5_A1	deps/glad/gl.h	/^#define GL_RGB5_A1 /;"	d
GL_RGB8	deps/glad/gl.h	/^#define GL_RGB8 /;"	d
GL_RGB8I	deps/glad/gl.h	/^#define GL_RGB8I /;"	d
GL_RGB8UI	deps/glad/gl.h	/^#define GL_RGB8UI /;"	d
GL_RGB8_SNORM	deps/glad/gl.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	deps/glad/gl.h	/^#define GL_RGB9_E5 /;"	d
GL_RGBA	deps/glad/gl.h	/^#define GL_RGBA /;"	d
GL_RGBA12	deps/glad/gl.h	/^#define GL_RGBA12 /;"	d
GL_RGBA16	deps/glad/gl.h	/^#define GL_RGBA16 /;"	d
GL_RGBA16F	deps/glad/gl.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16I	deps/glad/gl.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16UI	deps/glad/gl.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16_SNORM	deps/glad/gl.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA2	deps/glad/gl.h	/^#define GL_RGBA2 /;"	d
GL_RGBA32F	deps/glad/gl.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32I	deps/glad/gl.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32UI	deps/glad/gl.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA4	deps/glad/gl.h	/^#define GL_RGBA4 /;"	d
GL_RGBA8	deps/glad/gl.h	/^#define GL_RGBA8 /;"	d
GL_RGBA8I	deps/glad/gl.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8UI	deps/glad/gl.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8_SNORM	deps/glad/gl.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA_INTEGER	deps/glad/gl.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGBA_MODE	deps/glad/gl.h	/^#define GL_RGBA_MODE /;"	d
GL_RGB_INTEGER	deps/glad/gl.h	/^#define GL_RGB_INTEGER /;"	d
GL_RGB_SCALE	deps/glad/gl.h	/^#define GL_RGB_SCALE /;"	d
GL_RG_INTEGER	deps/glad/gl.h	/^#define GL_RG_INTEGER /;"	d
GL_RIGHT	deps/glad/gl.h	/^#define GL_RIGHT /;"	d
GL_S	deps/glad/gl.h	/^#define GL_S /;"	d
GL_SAMPLER	deps/glad/gl.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER_1D	deps/glad/gl.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARRAY	deps/glad/gl.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	deps/glad/gl.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW	deps/glad/gl.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_2D	deps/glad/gl.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARRAY	deps/glad/gl.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	deps/glad/gl.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_MULTISAMPLE	deps/glad/gl.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	deps/glad/gl.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_RECT	deps/glad/gl.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_SHADOW	deps/glad/gl.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW	deps/glad/gl.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_3D	deps/glad/gl.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_BINDING	deps/glad/gl.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	deps/glad/gl.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_CUBE	deps/glad/gl.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_SHADOW	deps/glad/gl.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLES	deps/glad/gl.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_ARB	deps/glad/gl.h	/^#define GL_SAMPLES_ARB /;"	d
GL_SAMPLES_PASSED	deps/glad/gl.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	deps/glad/gl.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	deps/glad/gl.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_ONE	deps/glad/gl.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	deps/glad/gl.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_ARB /;"	d
GL_SAMPLE_BUFFERS	deps/glad/gl.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_BUFFERS_ARB	deps/glad/gl.h	/^#define GL_SAMPLE_BUFFERS_ARB /;"	d
GL_SAMPLE_COVERAGE	deps/glad/gl.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_ARB	deps/glad/gl.h	/^#define GL_SAMPLE_COVERAGE_ARB /;"	d
GL_SAMPLE_COVERAGE_INVERT	deps/glad/gl.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	deps/glad/gl.h	/^#define GL_SAMPLE_COVERAGE_INVERT_ARB /;"	d
GL_SAMPLE_COVERAGE_VALUE	deps/glad/gl.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	deps/glad/gl.h	/^#define GL_SAMPLE_COVERAGE_VALUE_ARB /;"	d
GL_SAMPLE_MASK	deps/glad/gl.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_VALUE	deps/glad/gl.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_POSITION	deps/glad/gl.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SCISSOR_BIT	deps/glad/gl.h	/^#define GL_SCISSOR_BIT /;"	d
GL_SCISSOR_BOX	deps/glad/gl.h	/^#define GL_SCISSOR_BOX /;"	d
GL_SCISSOR_TEST	deps/glad/gl.h	/^#define GL_SCISSOR_TEST /;"	d
GL_SECONDARY_COLOR_ARRAY	deps/glad/gl.h	/^#define GL_SECONDARY_COLOR_ARRAY /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	deps/glad/gl.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	deps/glad/gl.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	deps/glad/gl.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE /;"	d
GL_SELECT	deps/glad/gl.h	/^#define GL_SELECT /;"	d
GL_SELECTION_BUFFER_POINTER	deps/glad/gl.h	/^#define GL_SELECTION_BUFFER_POINTER /;"	d
GL_SELECTION_BUFFER_SIZE	deps/glad/gl.h	/^#define GL_SELECTION_BUFFER_SIZE /;"	d
GL_SEPARATE_ATTRIBS	deps/glad/gl.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SEPARATE_SPECULAR_COLOR	deps/glad/gl.h	/^#define GL_SEPARATE_SPECULAR_COLOR /;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	examples/particles.c	/^#define GL_SEPARATE_SPECULAR_COLOR_EXT /;"	d	file:
GL_SET	deps/glad/gl.h	/^#define GL_SET /;"	d
GL_SHADER	deps/glad/gl.h	/^#define GL_SHADER /;"	d
GL_SHADER_SOURCE_LENGTH	deps/glad/gl.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_TYPE	deps/glad/gl.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADE_MODEL	deps/glad/gl.h	/^#define GL_SHADE_MODEL /;"	d
GL_SHADING_LANGUAGE_VERSION	deps/glad/gl.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHININESS	deps/glad/gl.h	/^#define GL_SHININESS /;"	d
GL_SHORT	deps/glad/gl.h	/^#define GL_SHORT /;"	d
GL_SIGNALED	deps/glad/gl.h	/^#define GL_SIGNALED /;"	d
GL_SIGNED_NORMALIZED	deps/glad/gl.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SILENCE_DEPRECATION	src/cocoa_platform.h	/^#define GL_SILENCE_DEPRECATION$/;"	M
GL_SINGLE_COLOR	deps/glad/gl.h	/^#define GL_SINGLE_COLOR /;"	d
GL_SINGLE_COLOR_EXT	examples/particles.c	/^#define GL_SINGLE_COLOR_EXT /;"	d	file:
GL_SLUMINANCE	deps/glad/gl.h	/^#define GL_SLUMINANCE /;"	d
GL_SLUMINANCE8	deps/glad/gl.h	/^#define GL_SLUMINANCE8 /;"	d
GL_SLUMINANCE8_ALPHA8	deps/glad/gl.h	/^#define GL_SLUMINANCE8_ALPHA8 /;"	d
GL_SLUMINANCE_ALPHA	deps/glad/gl.h	/^#define GL_SLUMINANCE_ALPHA /;"	d
GL_SMOOTH	deps/glad/gl.h	/^#define GL_SMOOTH /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	deps/glad/gl.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	deps/glad/gl.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	deps/glad/gl.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	deps/glad/gl.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SOURCE0_ALPHA	deps/glad/gl.h	/^#define GL_SOURCE0_ALPHA /;"	d
GL_SOURCE0_RGB	deps/glad/gl.h	/^#define GL_SOURCE0_RGB /;"	d
GL_SOURCE1_ALPHA	deps/glad/gl.h	/^#define GL_SOURCE1_ALPHA /;"	d
GL_SOURCE1_RGB	deps/glad/gl.h	/^#define GL_SOURCE1_RGB /;"	d
GL_SOURCE2_ALPHA	deps/glad/gl.h	/^#define GL_SOURCE2_ALPHA /;"	d
GL_SOURCE2_RGB	deps/glad/gl.h	/^#define GL_SOURCE2_RGB /;"	d
GL_SPECULAR	deps/glad/gl.h	/^#define GL_SPECULAR /;"	d
GL_SPHERE_MAP	deps/glad/gl.h	/^#define GL_SPHERE_MAP /;"	d
GL_SPOT_CUTOFF	deps/glad/gl.h	/^#define GL_SPOT_CUTOFF /;"	d
GL_SPOT_DIRECTION	deps/glad/gl.h	/^#define GL_SPOT_DIRECTION /;"	d
GL_SPOT_EXPONENT	deps/glad/gl.h	/^#define GL_SPOT_EXPONENT /;"	d
GL_SRC0_ALPHA	deps/glad/gl.h	/^#define GL_SRC0_ALPHA /;"	d
GL_SRC0_RGB	deps/glad/gl.h	/^#define GL_SRC0_RGB /;"	d
GL_SRC1_ALPHA	deps/glad/gl.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_COLOR	deps/glad/gl.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC1_RGB	deps/glad/gl.h	/^#define GL_SRC1_RGB /;"	d
GL_SRC2_ALPHA	deps/glad/gl.h	/^#define GL_SRC2_ALPHA /;"	d
GL_SRC2_RGB	deps/glad/gl.h	/^#define GL_SRC2_RGB /;"	d
GL_SRC_ALPHA	deps/glad/gl.h	/^#define GL_SRC_ALPHA /;"	d
GL_SRC_ALPHA_SATURATE	deps/glad/gl.h	/^#define GL_SRC_ALPHA_SATURATE /;"	d
GL_SRC_COLOR	deps/glad/gl.h	/^#define GL_SRC_COLOR /;"	d
GL_SRGB	deps/glad/gl.h	/^#define GL_SRGB /;"	d
GL_SRGB8	deps/glad/gl.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	deps/glad/gl.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB_ALPHA	deps/glad/gl.h	/^#define GL_SRGB_ALPHA /;"	d
GL_STACK_OVERFLOW	deps/glad/gl.h	/^#define GL_STACK_OVERFLOW /;"	d
GL_STACK_UNDERFLOW	deps/glad/gl.h	/^#define GL_STACK_UNDERFLOW /;"	d
GL_STATIC_COPY	deps/glad/gl.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_DRAW	deps/glad/gl.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_READ	deps/glad/gl.h	/^#define GL_STATIC_READ /;"	d
GL_STENCIL	deps/glad/gl.h	/^#define GL_STENCIL /;"	d
GL_STENCIL_ATTACHMENT	deps/glad/gl.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_BACK_FAIL	deps/glad/gl.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FUNC	deps/glad/gl.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	deps/glad/gl.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	deps/glad/gl.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_REF	deps/glad/gl.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	deps/glad/gl.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	deps/glad/gl.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_BITS	deps/glad/gl.h	/^#define GL_STENCIL_BITS /;"	d
GL_STENCIL_BUFFER_BIT	deps/glad/gl.h	/^#define GL_STENCIL_BUFFER_BIT /;"	d
GL_STENCIL_CLEAR_VALUE	deps/glad/gl.h	/^#define GL_STENCIL_CLEAR_VALUE /;"	d
GL_STENCIL_FAIL	deps/glad/gl.h	/^#define GL_STENCIL_FAIL /;"	d
GL_STENCIL_FUNC	deps/glad/gl.h	/^#define GL_STENCIL_FUNC /;"	d
GL_STENCIL_INDEX	deps/glad/gl.h	/^#define GL_STENCIL_INDEX /;"	d
GL_STENCIL_INDEX1	deps/glad/gl.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	deps/glad/gl.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX4	deps/glad/gl.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX8	deps/glad/gl.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_PASS_DEPTH_FAIL	deps/glad/gl.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_PASS_DEPTH_PASS	deps/glad/gl.h	/^#define GL_STENCIL_PASS_DEPTH_PASS /;"	d
GL_STENCIL_REF	deps/glad/gl.h	/^#define GL_STENCIL_REF /;"	d
GL_STENCIL_TEST	deps/glad/gl.h	/^#define GL_STENCIL_TEST /;"	d
GL_STENCIL_VALUE_MASK	deps/glad/gl.h	/^#define GL_STENCIL_VALUE_MASK /;"	d
GL_STENCIL_WRITEMASK	deps/glad/gl.h	/^#define GL_STENCIL_WRITEMASK /;"	d
GL_STEREO	deps/glad/gl.h	/^#define GL_STEREO /;"	d
GL_STREAM_COPY	deps/glad/gl.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_DRAW	deps/glad/gl.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_READ	deps/glad/gl.h	/^#define GL_STREAM_READ /;"	d
GL_SUBPIXEL_BITS	deps/glad/gl.h	/^#define GL_SUBPIXEL_BITS /;"	d
GL_SUBTRACT	deps/glad/gl.h	/^#define GL_SUBTRACT /;"	d
GL_SYNC_CONDITION	deps/glad/gl.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_FENCE	deps/glad/gl.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FLAGS	deps/glad/gl.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	deps/glad/gl.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	deps/glad/gl.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_STATUS	deps/glad/gl.h	/^#define GL_SYNC_STATUS /;"	d
GL_T	deps/glad/gl.h	/^#define GL_T /;"	d
GL_T2F_C3F_V3F	deps/glad/gl.h	/^#define GL_T2F_C3F_V3F /;"	d
GL_T2F_C4F_N3F_V3F	deps/glad/gl.h	/^#define GL_T2F_C4F_N3F_V3F /;"	d
GL_T2F_C4UB_V3F	deps/glad/gl.h	/^#define GL_T2F_C4UB_V3F /;"	d
GL_T2F_N3F_V3F	deps/glad/gl.h	/^#define GL_T2F_N3F_V3F /;"	d
GL_T2F_V3F	deps/glad/gl.h	/^#define GL_T2F_V3F /;"	d
GL_T4F_C4F_N3F_V4F	deps/glad/gl.h	/^#define GL_T4F_C4F_N3F_V4F /;"	d
GL_T4F_V4F	deps/glad/gl.h	/^#define GL_T4F_V4F /;"	d
GL_TEXTURE	deps/glad/gl.h	/^#define GL_TEXTURE /;"	d
GL_TEXTURE0	deps/glad/gl.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE1	deps/glad/gl.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	deps/glad/gl.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE11	deps/glad/gl.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE12	deps/glad/gl.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE13	deps/glad/gl.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE14	deps/glad/gl.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE15	deps/glad/gl.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE16	deps/glad/gl.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE17	deps/glad/gl.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE18	deps/glad/gl.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE19	deps/glad/gl.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE2	deps/glad/gl.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	deps/glad/gl.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE21	deps/glad/gl.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE22	deps/glad/gl.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE23	deps/glad/gl.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE24	deps/glad/gl.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE25	deps/glad/gl.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE26	deps/glad/gl.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE27	deps/glad/gl.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE28	deps/glad/gl.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE29	deps/glad/gl.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE3	deps/glad/gl.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	deps/glad/gl.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE31	deps/glad/gl.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE4	deps/glad/gl.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE5	deps/glad/gl.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE6	deps/glad/gl.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE7	deps/glad/gl.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE8	deps/glad/gl.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE9	deps/glad/gl.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE_1D	deps/glad/gl.h	/^#define GL_TEXTURE_1D /;"	d
GL_TEXTURE_1D_ARRAY	deps/glad/gl.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_2D	deps/glad/gl.h	/^#define GL_TEXTURE_2D /;"	d
GL_TEXTURE_2D_ARRAY	deps/glad/gl.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_MULTISAMPLE	deps/glad/gl.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	deps/glad/gl.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_3D	deps/glad/gl.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_ALPHA_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_ALPHA_SIZE /;"	d
GL_TEXTURE_ALPHA_TYPE	deps/glad/gl.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_BASE_LEVEL	deps/glad/gl.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BINDING_1D	deps/glad/gl.h	/^#define GL_TEXTURE_BINDING_1D /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	deps/glad/gl.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D	deps/glad/gl.h	/^#define GL_TEXTURE_BINDING_2D /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	deps/glad/gl.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	deps/glad/gl.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	deps/glad/gl.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_3D	deps/glad/gl.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_BUFFER	deps/glad/gl.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	deps/glad/gl.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_RECTANGLE	deps/glad/gl.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BIT	deps/glad/gl.h	/^#define GL_TEXTURE_BIT /;"	d
GL_TEXTURE_BLUE_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_BLUE_SIZE /;"	d
GL_TEXTURE_BLUE_TYPE	deps/glad/gl.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BORDER	deps/glad/gl.h	/^#define GL_TEXTURE_BORDER /;"	d
GL_TEXTURE_BORDER_COLOR	deps/glad/gl.h	/^#define GL_TEXTURE_BORDER_COLOR /;"	d
GL_TEXTURE_BUFFER	deps/glad/gl.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	deps/glad/gl.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_COMPARE_FUNC	deps/glad/gl.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_MODE	deps/glad/gl.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPONENTS	deps/glad/gl.h	/^#define GL_TEXTURE_COMPONENTS /;"	d
GL_TEXTURE_COMPRESSED	deps/glad/gl.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSION_HINT	deps/glad/gl.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_COORD_ARRAY	deps/glad/gl.h	/^#define GL_TEXTURE_COORD_ARRAY /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	deps/glad/gl.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER /;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE /;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE /;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	deps/glad/gl.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE /;"	d
GL_TEXTURE_CUBE_MAP	deps/glad/gl.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	deps/glad/gl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	deps/glad/gl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	deps/glad/gl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	deps/glad/gl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	deps/glad/gl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	deps/glad/gl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	deps/glad/gl.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_DEPTH	deps/glad/gl.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_TYPE	deps/glad/gl.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_ENV	deps/glad/gl.h	/^#define GL_TEXTURE_ENV /;"	d
GL_TEXTURE_ENV_COLOR	deps/glad/gl.h	/^#define GL_TEXTURE_ENV_COLOR /;"	d
GL_TEXTURE_ENV_MODE	deps/glad/gl.h	/^#define GL_TEXTURE_ENV_MODE /;"	d
GL_TEXTURE_FILTER_CONTROL	deps/glad/gl.h	/^#define GL_TEXTURE_FILTER_CONTROL /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	deps/glad/gl.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_GEN_MODE	deps/glad/gl.h	/^#define GL_TEXTURE_GEN_MODE /;"	d
GL_TEXTURE_GEN_Q	deps/glad/gl.h	/^#define GL_TEXTURE_GEN_Q /;"	d
GL_TEXTURE_GEN_R	deps/glad/gl.h	/^#define GL_TEXTURE_GEN_R /;"	d
GL_TEXTURE_GEN_S	deps/glad/gl.h	/^#define GL_TEXTURE_GEN_S /;"	d
GL_TEXTURE_GEN_T	deps/glad/gl.h	/^#define GL_TEXTURE_GEN_T /;"	d
GL_TEXTURE_GREEN_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_GREEN_SIZE /;"	d
GL_TEXTURE_GREEN_TYPE	deps/glad/gl.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_HEIGHT	deps/glad/gl.h	/^#define GL_TEXTURE_HEIGHT /;"	d
GL_TEXTURE_INTENSITY_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_INTENSITY_SIZE /;"	d
GL_TEXTURE_INTENSITY_TYPE	deps/glad/gl.h	/^#define GL_TEXTURE_INTENSITY_TYPE /;"	d
GL_TEXTURE_INTERNAL_FORMAT	deps/glad/gl.h	/^#define GL_TEXTURE_INTERNAL_FORMAT /;"	d
GL_TEXTURE_LOD_BIAS	deps/glad/gl.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_LUMINANCE_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_LUMINANCE_SIZE /;"	d
GL_TEXTURE_LUMINANCE_TYPE	deps/glad/gl.h	/^#define GL_TEXTURE_LUMINANCE_TYPE /;"	d
GL_TEXTURE_MAG_FILTER	deps/glad/gl.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d
GL_TEXTURE_MATRIX	deps/glad/gl.h	/^#define GL_TEXTURE_MATRIX /;"	d
GL_TEXTURE_MAX_LEVEL	deps/glad/gl.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LOD	deps/glad/gl.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MIN_FILTER	deps/glad/gl.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d
GL_TEXTURE_MIN_LOD	deps/glad/gl.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_PRIORITY	deps/glad/gl.h	/^#define GL_TEXTURE_PRIORITY /;"	d
GL_TEXTURE_RECTANGLE	deps/glad/gl.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RED_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_RED_SIZE /;"	d
GL_TEXTURE_RED_TYPE	deps/glad/gl.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_RESIDENT	deps/glad/gl.h	/^#define GL_TEXTURE_RESIDENT /;"	d
GL_TEXTURE_SAMPLES	deps/glad/gl.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SHARED_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_STACK_DEPTH	deps/glad/gl.h	/^#define GL_TEXTURE_STACK_DEPTH /;"	d
GL_TEXTURE_STENCIL_SIZE	deps/glad/gl.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_SWIZZLE_A	deps/glad/gl.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_B	deps/glad/gl.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_G	deps/glad/gl.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_R	deps/glad/gl.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	deps/glad/gl.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_WIDTH	deps/glad/gl.h	/^#define GL_TEXTURE_WIDTH /;"	d
GL_TEXTURE_WRAP_R	deps/glad/gl.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_S	deps/glad/gl.h	/^#define GL_TEXTURE_WRAP_S /;"	d
GL_TEXTURE_WRAP_T	deps/glad/gl.h	/^#define GL_TEXTURE_WRAP_T /;"	d
GL_TIMEOUT_EXPIRED	deps/glad/gl.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_IGNORED	deps/glad/gl.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMESTAMP	deps/glad/gl.h	/^#define GL_TIMESTAMP /;"	d
GL_TIME_ELAPSED	deps/glad/gl.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TRANSFORM_BIT	deps/glad/gl.h	/^#define GL_TRANSFORM_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	deps/glad/gl.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	deps/glad/gl.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	deps/glad/gl.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	deps/glad/gl.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	deps/glad/gl.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	deps/glad/gl.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	deps/glad/gl.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRANSPOSE_COLOR_MATRIX	deps/glad/gl.h	/^#define GL_TRANSPOSE_COLOR_MATRIX /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	deps/glad/gl.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	deps/glad/gl.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	deps/glad/gl.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX /;"	d
GL_TRIANGLES	deps/glad/gl.h	/^#define GL_TRIANGLES /;"	d
GL_TRIANGLES_ADJACENCY	deps/glad/gl.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLE_FAN	deps/glad/gl.h	/^#define GL_TRIANGLE_FAN /;"	d
GL_TRIANGLE_STRIP	deps/glad/gl.h	/^#define GL_TRIANGLE_STRIP /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	deps/glad/gl.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRUE	deps/glad/gl.h	/^#define GL_TRUE /;"	d
GL_UNIFORM_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	deps/glad/gl.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	deps/glad/gl.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	deps/glad/gl.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	deps/glad/gl.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	deps/glad/gl.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	deps/glad/gl.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	deps/glad/gl.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	deps/glad/gl.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	deps/glad/gl.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	deps/glad/gl.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	deps/glad/gl.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	deps/glad/gl.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	deps/glad/gl.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_IS_ROW_MAJOR	deps/glad/gl.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	deps/glad/gl.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	deps/glad/gl.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	deps/glad/gl.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SIZE	deps/glad/gl.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	deps/glad/gl.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	deps/glad/gl.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNPACK_ALIGNMENT	deps/glad/gl.h	/^#define GL_UNPACK_ALIGNMENT /;"	d
GL_UNPACK_IMAGE_HEIGHT	deps/glad/gl.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_LSB_FIRST	deps/glad/gl.h	/^#define GL_UNPACK_LSB_FIRST /;"	d
GL_UNPACK_ROW_LENGTH	deps/glad/gl.h	/^#define GL_UNPACK_ROW_LENGTH /;"	d
GL_UNPACK_SKIP_IMAGES	deps/glad/gl.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_PIXELS	deps/glad/gl.h	/^#define GL_UNPACK_SKIP_PIXELS /;"	d
GL_UNPACK_SKIP_ROWS	deps/glad/gl.h	/^#define GL_UNPACK_SKIP_ROWS /;"	d
GL_UNPACK_SWAP_BYTES	deps/glad/gl.h	/^#define GL_UNPACK_SWAP_BYTES /;"	d
GL_UNSIGNALED	deps/glad/gl.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNED_BYTE	deps/glad/gl.h	/^#define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_BYTE	src/internal.h	/^#define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	deps/glad/gl.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	deps/glad/gl.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_INT	deps/glad/gl.h	/^#define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10_10_10_2	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_24_8	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_8_8_8_8	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_VEC2	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC3	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC4	deps/glad/gl.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_NORMALIZED	deps/glad/gl.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_SHORT	deps/glad/gl.h	/^#define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	deps/glad/gl.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	deps/glad/gl.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	deps/glad/gl.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	deps/glad/gl.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_6_5	deps/glad/gl.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	deps/glad/gl.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UPPER_LEFT	deps/glad/gl.h	/^#define GL_UPPER_LEFT /;"	d
GL_V2F	deps/glad/gl.h	/^#define GL_V2F /;"	d
GL_V3F	deps/glad/gl.h	/^#define GL_V3F /;"	d
GL_VALIDATE_STATUS	deps/glad/gl.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VENDOR	deps/glad/gl.h	/^#define GL_VENDOR /;"	d
GL_VERSION	deps/glad/gl.h	/^#define GL_VERSION /;"	d
GL_VERSION	src/internal.h	/^#define GL_VERSION /;"	d
GL_VERSION_1_0	deps/glad/gl.h	/^#define GL_VERSION_1_0 /;"	d
GL_VERSION_1_1	deps/glad/gl.h	/^#define GL_VERSION_1_1 /;"	d
GL_VERSION_1_2	deps/glad/gl.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_3	deps/glad/gl.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	deps/glad/gl.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	deps/glad/gl.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	deps/glad/gl.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_1	deps/glad/gl.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_3_0	deps/glad/gl.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_1	deps/glad/gl.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_2	deps/glad/gl.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_3	deps/glad/gl.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERTEX_ARRAY	deps/glad/gl.h	/^#define GL_VERTEX_ARRAY /;"	d
GL_VERTEX_ARRAY_BINDING	deps/glad/gl.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ARRAY_POINTER	deps/glad/gl.h	/^#define GL_VERTEX_ARRAY_POINTER /;"	d
GL_VERTEX_ARRAY_SIZE	deps/glad/gl.h	/^#define GL_VERTEX_ARRAY_SIZE /;"	d
GL_VERTEX_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_VERTEX_ARRAY_STRIDE /;"	d
GL_VERTEX_ARRAY_TYPE	deps/glad/gl.h	/^#define GL_VERTEX_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	deps/glad/gl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	deps/glad/gl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	deps/glad/gl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	deps/glad/gl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	deps/glad/gl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	deps/glad/gl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	deps/glad/gl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	deps/glad/gl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	deps/glad/gl.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	deps/glad/gl.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE /;"	d
GL_VERTEX_SHADER	deps/glad/gl.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VIEWPORT	deps/glad/gl.h	/^#define GL_VIEWPORT /;"	d
GL_VIEWPORT_BIT	deps/glad/gl.h	/^#define GL_VIEWPORT_BIT /;"	d
GL_WAIT_FAILED	deps/glad/gl.h	/^#define GL_WAIT_FAILED /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	deps/glad/gl.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING /;"	d
GL_WRITE_ONLY	deps/glad/gl.h	/^#define GL_WRITE_ONLY /;"	d
GL_XOR	deps/glad/gl.h	/^#define GL_XOR /;"	d
GL_ZERO	deps/glad/gl.h	/^#define GL_ZERO /;"	d
GL_ZOOM_X	deps/glad/gl.h	/^#define GL_ZOOM_X /;"	d
GL_ZOOM_Y	deps/glad/gl.h	/^#define GL_ZOOM_Y /;"	d
GLbitfield	deps/glad/gl.h	/^typedef unsigned int GLbitfield;$/;"	t	typeref:typename:unsigned int
GLbitfield	src/internal.h	/^typedef unsigned int GLbitfield;$/;"	t	typeref:typename:unsigned int
GLboolean	deps/glad/gl.h	/^typedef unsigned char GLboolean;$/;"	t	typeref:typename:unsigned char
GLbyte	deps/glad/gl.h	/^typedef khronos_int8_t GLbyte;$/;"	t	typeref:typename:khronos_int8_t
GLchar	deps/glad/gl.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLcharARB	deps/glad/gl.h	/^typedef char GLcharARB;$/;"	t	typeref:typename:char
GLclampd	deps/glad/gl.h	/^typedef double GLclampd;$/;"	t	typeref:typename:double
GLclampf	deps/glad/gl.h	/^typedef khronos_float_t GLclampf;$/;"	t	typeref:typename:khronos_float_t
GLclampx	deps/glad/gl.h	/^typedef khronos_int32_t GLclampx;$/;"	t	typeref:typename:khronos_int32_t
GLdouble	deps/glad/gl.h	/^typedef double GLdouble;$/;"	t	typeref:typename:double
GLeglClientBufferEXT	deps/glad/gl.h	/^typedef void *GLeglClientBufferEXT;$/;"	t	typeref:typename:void *
GLeglImageOES	deps/glad/gl.h	/^typedef void *GLeglImageOES;$/;"	t	typeref:typename:void *
GLenum	deps/glad/gl.h	/^typedef unsigned int GLenum;$/;"	t	typeref:typename:unsigned int
GLenum	src/internal.h	/^typedef unsigned int GLenum;$/;"	t	typeref:typename:unsigned int
GLfixed	deps/glad/gl.h	/^typedef khronos_int32_t GLfixed;$/;"	t	typeref:typename:khronos_int32_t
GLfloat	deps/glad/gl.h	/^typedef khronos_float_t GLfloat;$/;"	t	typeref:typename:khronos_float_t
GLhalf	deps/glad/gl.h	/^typedef khronos_uint16_t GLhalf;$/;"	t	typeref:typename:khronos_uint16_t
GLhalfARB	deps/glad/gl.h	/^typedef khronos_uint16_t GLhalfARB;$/;"	t	typeref:typename:khronos_uint16_t
GLhalfNV	deps/glad/gl.h	/^typedef unsigned short GLhalfNV;$/;"	t	typeref:typename:unsigned short
GLhandleARB	deps/glad/gl.h	/^typedef unsigned int GLhandleARB;$/;"	t	typeref:typename:unsigned int
GLhandleARB	deps/glad/gl.h	/^typedef void *GLhandleARB;$/;"	t	typeref:typename:void *
GLint	deps/glad/gl.h	/^typedef int GLint;$/;"	t	typeref:typename:int
GLint	src/internal.h	/^typedef int GLint;$/;"	t	typeref:typename:int
GLint64	deps/glad/gl.h	/^typedef khronos_int64_t GLint64;$/;"	t	typeref:typename:khronos_int64_t
GLint64EXT	deps/glad/gl.h	/^typedef khronos_int64_t GLint64EXT;$/;"	t	typeref:typename:khronos_int64_t
GLintptr	deps/glad/gl.h	/^typedef khronos_intptr_t GLintptr;$/;"	t	typeref:typename:khronos_intptr_t
GLintptrARB	deps/glad/gl.h	/^typedef khronos_intptr_t GLintptrARB;$/;"	t	typeref:typename:khronos_intptr_t
GLshort	deps/glad/gl.h	/^typedef khronos_int16_t GLshort;$/;"	t	typeref:typename:khronos_int16_t
GLsizei	deps/glad/gl.h	/^typedef int GLsizei;$/;"	t	typeref:typename:int
GLsizeiptr	deps/glad/gl.h	/^typedef khronos_ssize_t GLsizeiptr;$/;"	t	typeref:typename:khronos_ssize_t
GLsizeiptrARB	deps/glad/gl.h	/^typedef khronos_ssize_t GLsizeiptrARB;$/;"	t	typeref:typename:khronos_ssize_t
GLsync	deps/glad/gl.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLubyte	deps/glad/gl.h	/^typedef khronos_uint8_t GLubyte;$/;"	t	typeref:typename:khronos_uint8_t
GLubyte	src/internal.h	/^typedef unsigned char GLubyte;$/;"	t	typeref:typename:unsigned char
GLuint	deps/glad/gl.h	/^typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int
GLuint	src/internal.h	/^typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int
GLuint64	deps/glad/gl.h	/^typedef khronos_uint64_t GLuint64;$/;"	t	typeref:typename:khronos_uint64_t
GLuint64EXT	deps/glad/gl.h	/^typedef khronos_uint64_t GLuint64EXT;$/;"	t	typeref:typename:khronos_uint64_t
GLushort	deps/glad/gl.h	/^typedef khronos_uint16_t GLushort;$/;"	t	typeref:typename:khronos_uint16_t
GLvdpauSurfaceNV	deps/glad/gl.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t	typeref:typename:GLintptr
GLvoid	deps/glad/gl.h	/^typedef void GLvoid;$/;"	t	typeref:typename:void
GRAPHICS_SWITCHING	tests/glfwinfo.c	/^           GRAPHICS_SWITCHING };$/;"	e	enum:main::__anon6b8c80140103	file:
GRAVITY	examples/particles.c	/^#define GRAVITY /;"	d	file:
GREENBITS	tests/glfwinfo.c	/^           REDBITS, GREENBITS, BLUEBITS, ALPHABITS, DEPTHBITS, STENCILBITS,$/;"	e	enum:main::__anon6b8c80140103	file:
GRIDH	examples/wave.c	/^#define GRIDH /;"	d	file:
GRIDW	examples/wave.c	/^#define GRIDW /;"	d	file:
GRID_SIZE	examples/boing.c	/^#define GRID_SIZE /;"	d	file:
GUID_DEVINTERFACE_HID	src/win32_init.c	/^#define GUID_DEVINTERFACE_HID /;"	d	file:
GUID_POV	src/win32_joystick.c	/^#define GUID_POV /;"	d	file:
GUID_RxAxis	src/win32_joystick.c	/^#define GUID_RxAxis /;"	d	file:
GUID_RyAxis	src/win32_joystick.c	/^#define GUID_RyAxis /;"	d	file:
GUID_RzAxis	src/win32_joystick.c	/^#define GUID_RzAxis /;"	d	file:
GUID_Slider	src/win32_joystick.c	/^#define GUID_Slider /;"	d	file:
GUID_XAxis	src/win32_joystick.c	/^#define GUID_XAxis /;"	d	file:
GUID_YAxis	src/win32_joystick.c	/^#define GUID_YAxis /;"	d	file:
GUID_ZAxis	src/win32_joystick.c	/^#define GUID_ZAxis /;"	d	file:
GUI_ONLY_BINARIES	examples/CMakeLists.txt	/^set(GUI_ONLY_BINARIES boing gears heightmap particles sharing splitview$/;"	v
GUI_ONLY_BINARIES	tests/CMakeLists.txt	/^set(GUI_ONLY_BINARIES empty gamma icon inputlag joysticks opacity tearing$/;"	v
Gamepad	deps/mingw/xinput.h	/^    XINPUT_GAMEPAD Gamepad;$/;"	m	struct:_XINPUT_CAPABILITIES	typeref:typename:XINPUT_GAMEPAD
Gamepad	deps/mingw/xinput.h	/^    XINPUT_GAMEPAD Gamepad;$/;"	m	struct:_XINPUT_STATE	typeref:typename:XINPUT_GAMEPAD
GetCapabilities	src/win32_platform.h	/^        PFN_XInputGetCapabilities       GetCapabilities;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890708	typeref:typename:PFN_XInputGetCapabilities
GetClientString	src/glx_context.h	/^    PFNGLXGETCLIENTSTRINGPROC           GetClientString;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXGETCLIENTSTRINGPROC
GetColorBuffer	src/osmesa_context.h	/^    PFN_OSMesaGetColorBuffer        GetColorBuffer;$/;"	m	struct:_GLFWlibraryOSMesa	typeref:typename:PFN_OSMesaGetColorBuffer
GetConfigAttrib	src/egl_context.h	/^    PFN_eglGetConfigAttrib      GetConfigAttrib;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglGetConfigAttrib
GetConfigs	src/egl_context.h	/^    PFN_eglGetConfigs           GetConfigs;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglGetConfigs
GetCrtcGamma	src/x11_platform.h	/^        PFN_XRRGetCrtcGamma GetCrtcGamma;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRGetCrtcGamma
GetCrtcGammaSize	src/x11_platform.h	/^        PFN_XRRGetCrtcGammaSize GetCrtcGammaSize;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRGetCrtcGammaSize
GetCrtcInfo	src/x11_platform.h	/^        PFN_XRRGetCrtcInfo GetCrtcInfo;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRGetCrtcInfo
GetCurrentContext	src/wgl_context.h	/^    PFN_wglGetCurrentContext            GetCurrentContext;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFN_wglGetCurrentContext
GetCurrentDC	src/wgl_context.h	/^    PFN_wglGetCurrentDC                 GetCurrentDC;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFN_wglGetCurrentDC
GetDefaultSize	src/x11_platform.h	/^        PFN_XcursorGetDefaultSize GetDefaultSize;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00508	typeref:typename:PFN_XcursorGetDefaultSize
GetDepthBuffer	src/osmesa_context.h	/^    PFN_OSMesaGetDepthBuffer        GetDepthBuffer;$/;"	m	struct:_GLFWlibraryOSMesa	typeref:typename:PFN_OSMesaGetDepthBuffer
GetDisplay	src/egl_context.h	/^    PFN_eglGetDisplay           GetDisplay;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglGetDisplay
GetDpiForMonitor	src/win32_platform.h	/^#define GetDpiForMonitor /;"	d
GetDpiForMonitor_	src/win32_platform.h	/^        PFN_GetDpiForMonitor            GetDpiForMonitor_;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890a08	typeref:typename:PFN_GetDpiForMonitor
GetDpiForWindow	src/win32_platform.h	/^#define GetDpiForWindow /;"	d
GetDpiForWindow_	src/win32_platform.h	/^        PFN_GetDpiForWindow             GetDpiForWindow_;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890808	typeref:typename:PFN_GetDpiForWindow
GetError	src/egl_context.h	/^    PFN_eglGetError             GetError;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglGetError
GetExtensionsStringARB	src/wgl_context.h	/^    PFNWGLGETEXTENSIONSSTRINGARBPROC    GetExtensionsStringARB;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFNWGLGETEXTENSIONSSTRINGARBPROC
GetExtensionsStringEXT	src/wgl_context.h	/^    PFNWGLGETEXTENSIONSSTRINGEXTPROC    GetExtensionsStringEXT;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFNWGLGETEXTENSIONSSTRINGEXTPROC
GetFBConfigAttrib	src/glx_context.h	/^    PFNGLXGETFBCONFIGATTRIBPROC         GetFBConfigAttrib;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXGETFBCONFIGATTRIBPROC
GetFBConfigs	src/glx_context.h	/^    PFNGLXGETFBCONFIGSPROC              GetFBConfigs;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXGETFBCONFIGSPROC
GetGammaRamp	src/x11_platform.h	/^        PFN_XF86VidModeGetGammaRamp GetGammaRamp;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00808	typeref:typename:PFN_XF86VidModeGetGammaRamp
GetGammaRampSize	src/x11_platform.h	/^        PFN_XF86VidModeGetGammaRampSize GetGammaRampSize;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00808	typeref:typename:PFN_XF86VidModeGetGammaRampSize
GetInputSourceProperty	src/cocoa_platform.h	/^        PFN_TISGetInputSourceProperty GetInputSourceProperty;$/;"	E
GetInstanceProcAddr	src/internal.h	/^        PFN_vkGetInstanceProcAddr GetInstanceProcAddr;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:PFN_vkGetInstanceProcAddr
GetIntegerv	src/internal.h	/^    PFNGLGETINTEGERVPROC GetIntegerv;$/;"	m	struct:_GLFWcontext	typeref:typename:PFNGLGETINTEGERVPROC
GetKbdType	src/cocoa_platform.h	/^        PFN_LMGetKbdType GetKbdType;$/;"	E
GetOutputInfo	src/x11_platform.h	/^        PFN_XRRGetOutputInfo GetOutputInfo;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRGetOutputInfo
GetOutputPrimary	src/x11_platform.h	/^        PFN_XRRGetOutputPrimary GetOutputPrimary;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRGetOutputPrimary
GetPixelFormatAttribivARB	src/wgl_context.h	/^    PFNWGLGETPIXELFORMATATTRIBIVARBPROC GetPixelFormatAttribivARB;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFNWGLGETPIXELFORMATATTRIBIVARBPROC
GetProcAddress	src/egl_context.h	/^    PFN_eglGetProcAddress       GetProcAddress;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglGetProcAddress
GetProcAddress	src/glx_context.h	/^    PFNGLXGETPROCADDRESSPROC            GetProcAddress;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXGETPROCADDRESSPROC
GetProcAddress	src/osmesa_context.h	/^    PFN_OSMesaGetProcAddress        GetProcAddress;$/;"	m	struct:_GLFWlibraryOSMesa	typeref:typename:PFN_OSMesaGetProcAddress
GetProcAddress	src/wgl_context.h	/^    PFN_wglGetProcAddress               GetProcAddress;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFN_wglGetProcAddress
GetProcAddressARB	src/glx_context.h	/^    PFNGLXGETPROCADDRESSPROC            GetProcAddressARB;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXGETPROCADDRESSPROC
GetScreenResourcesCurrent	src/x11_platform.h	/^        PFN_XRRGetScreenResourcesCurrent GetScreenResourcesCurrent;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRGetScreenResourcesCurrent
GetState	src/win32_platform.h	/^        PFN_XInputGetState              GetState;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890708	typeref:typename:PFN_XInputGetState
GetString	src/internal.h	/^    PFNGLGETSTRINGPROC  GetString;$/;"	m	struct:_GLFWcontext	typeref:typename:PFNGLGETSTRINGPROC
GetStringi	src/internal.h	/^    PFNGLGETSTRINGIPROC GetStringi;$/;"	m	struct:_GLFWcontext	typeref:typename:PFNGLGETSTRINGIPROC
GetTheme	src/x11_platform.h	/^        PFN_XcursorGetTheme GetTheme;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00508	typeref:typename:PFN_XcursorGetTheme
GetTime	src/win32_platform.h	/^        PFN_timeGetTime                 GetTime;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890508	typeref:typename:PFN_timeGetTime
GetVisualFromFBConfig	src/glx_context.h	/^    PFNGLXGETVISUALFROMFBCONFIGPROC     GetVisualFromFBConfig;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXGETVISUALFROMFBCONFIGPROC
GetXCBConnection	src/x11_platform.h	/^        PFN_XGetXCBConnection GetXCBConnection;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00708	typeref:typename:PFN_XGetXCBConnection
GuidEffect	deps/mingw/dinput.h	/^  GUID        GuidEffect;$/;"	m	struct:DIFILEEFFECT	typeref:typename:GUID
HELP	tests/glfwinfo.c	/^    enum { CLIENT, CONTEXT, BEHAVIOR, DEBUG_CONTEXT, FORWARD, HELP,$/;"	e	enum:main::__anon6b8c80140103	file:
HidCode	deps/mingw/xinput.h	/^    BYTE HidCode;$/;"	m	struct:_XINPUT_KEYSTROKE	typeref:typename:BYTE
ICON	examples/CMakeLists.txt	/^    set(ICON glfw.icns)$/;"	v
ICON	examples/CMakeLists.txt	/^    set(ICON glfw.rc)$/;"	v
IDirectInput	deps/mingw/dinput.h	/^#define IDirectInput /;"	d
IDirectInput2	deps/mingw/dinput.h	/^#define IDirectInput2 /;"	d
IDirectInput2_AddRef	deps/mingw/dinput.h	/^#define IDirectInput2_AddRef(/;"	d
IDirectInput2_CreateDevice	deps/mingw/dinput.h	/^#define IDirectInput2_CreateDevice(/;"	d
IDirectInput2_EnumDevices	deps/mingw/dinput.h	/^#define IDirectInput2_EnumDevices(/;"	d
IDirectInput2_FindDevice	deps/mingw/dinput.h	/^#define IDirectInput2_FindDevice(/;"	d
IDirectInput2_GetDeviceStatus	deps/mingw/dinput.h	/^#define IDirectInput2_GetDeviceStatus(/;"	d
IDirectInput2_Initialize	deps/mingw/dinput.h	/^#define IDirectInput2_Initialize(/;"	d
IDirectInput2_QueryInterface	deps/mingw/dinput.h	/^#define IDirectInput2_QueryInterface(/;"	d
IDirectInput2_Release	deps/mingw/dinput.h	/^#define IDirectInput2_Release(/;"	d
IDirectInput2_RunControlPanel	deps/mingw/dinput.h	/^#define IDirectInput2_RunControlPanel(/;"	d
IDirectInput7	deps/mingw/dinput.h	/^#define IDirectInput7 /;"	d
IDirectInput7_AddRef	deps/mingw/dinput.h	/^#define IDirectInput7_AddRef(/;"	d
IDirectInput7_CreateDevice	deps/mingw/dinput.h	/^#define IDirectInput7_CreateDevice(/;"	d
IDirectInput7_CreateDeviceEx	deps/mingw/dinput.h	/^#define IDirectInput7_CreateDeviceEx(/;"	d
IDirectInput7_EnumDevices	deps/mingw/dinput.h	/^#define IDirectInput7_EnumDevices(/;"	d
IDirectInput7_FindDevice	deps/mingw/dinput.h	/^#define IDirectInput7_FindDevice(/;"	d
IDirectInput7_GetDeviceStatus	deps/mingw/dinput.h	/^#define IDirectInput7_GetDeviceStatus(/;"	d
IDirectInput7_Initialize	deps/mingw/dinput.h	/^#define IDirectInput7_Initialize(/;"	d
IDirectInput7_QueryInterface	deps/mingw/dinput.h	/^#define IDirectInput7_QueryInterface(/;"	d
IDirectInput7_Release	deps/mingw/dinput.h	/^#define IDirectInput7_Release(/;"	d
IDirectInput7_RunControlPanel	deps/mingw/dinput.h	/^#define IDirectInput7_RunControlPanel(/;"	d
IDirectInput8	deps/mingw/dinput.h	/^#define IDirectInput8 /;"	d
IDirectInput8_AddRef	deps/mingw/dinput.h	/^#define IDirectInput8_AddRef(/;"	d
IDirectInput8_ConfigureDevices	deps/mingw/dinput.h	/^#define IDirectInput8_ConfigureDevices(/;"	d
IDirectInput8_CreateDevice	deps/mingw/dinput.h	/^#define IDirectInput8_CreateDevice(/;"	d
IDirectInput8_EnumDevices	deps/mingw/dinput.h	/^#define IDirectInput8_EnumDevices(/;"	d
IDirectInput8_EnumDevicesBySemantics	deps/mingw/dinput.h	/^#define IDirectInput8_EnumDevicesBySemantics(/;"	d
IDirectInput8_FindDevice	deps/mingw/dinput.h	/^#define IDirectInput8_FindDevice(/;"	d
IDirectInput8_GetDeviceStatus	deps/mingw/dinput.h	/^#define IDirectInput8_GetDeviceStatus(/;"	d
IDirectInput8_Initialize	deps/mingw/dinput.h	/^#define IDirectInput8_Initialize(/;"	d
IDirectInput8_QueryInterface	deps/mingw/dinput.h	/^#define IDirectInput8_QueryInterface(/;"	d
IDirectInput8_Release	deps/mingw/dinput.h	/^#define IDirectInput8_Release(/;"	d
IDirectInput8_RunControlPanel	deps/mingw/dinput.h	/^#define IDirectInput8_RunControlPanel(/;"	d
IDirectInputDevice	deps/mingw/dinput.h	/^#define IDirectInputDevice /;"	d
IDirectInputDevice2	deps/mingw/dinput.h	/^#define IDirectInputDevice2 /;"	d
IDirectInputDevice2_Acquire	deps/mingw/dinput.h	/^#define IDirectInputDevice2_Acquire(/;"	d
IDirectInputDevice2_AddRef	deps/mingw/dinput.h	/^#define IDirectInputDevice2_AddRef(/;"	d
IDirectInputDevice2_CreateEffect	deps/mingw/dinput.h	/^#define IDirectInputDevice2_CreateEffect(/;"	d
IDirectInputDevice2_EnumCreatedEffectObjects	deps/mingw/dinput.h	/^#define IDirectInputDevice2_EnumCreatedEffectObjects(/;"	d
IDirectInputDevice2_EnumEffects	deps/mingw/dinput.h	/^#define IDirectInputDevice2_EnumEffects(/;"	d
IDirectInputDevice2_EnumObjects	deps/mingw/dinput.h	/^#define IDirectInputDevice2_EnumObjects(/;"	d
IDirectInputDevice2_Escape	deps/mingw/dinput.h	/^#define IDirectInputDevice2_Escape(/;"	d
IDirectInputDevice2_GetCapabilities	deps/mingw/dinput.h	/^#define IDirectInputDevice2_GetCapabilities(/;"	d
IDirectInputDevice2_GetDeviceData	deps/mingw/dinput.h	/^#define IDirectInputDevice2_GetDeviceData(/;"	d
IDirectInputDevice2_GetDeviceInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice2_GetDeviceInfo(/;"	d
IDirectInputDevice2_GetDeviceState	deps/mingw/dinput.h	/^#define IDirectInputDevice2_GetDeviceState(/;"	d
IDirectInputDevice2_GetEffectInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice2_GetEffectInfo(/;"	d
IDirectInputDevice2_GetForceFeedbackState	deps/mingw/dinput.h	/^#define IDirectInputDevice2_GetForceFeedbackState(/;"	d
IDirectInputDevice2_GetObjectInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice2_GetObjectInfo(/;"	d
IDirectInputDevice2_GetProperty	deps/mingw/dinput.h	/^#define IDirectInputDevice2_GetProperty(/;"	d
IDirectInputDevice2_Initialize	deps/mingw/dinput.h	/^#define IDirectInputDevice2_Initialize(/;"	d
IDirectInputDevice2_Poll	deps/mingw/dinput.h	/^#define IDirectInputDevice2_Poll(/;"	d
IDirectInputDevice2_QueryInterface	deps/mingw/dinput.h	/^#define IDirectInputDevice2_QueryInterface(/;"	d
IDirectInputDevice2_Release	deps/mingw/dinput.h	/^#define IDirectInputDevice2_Release(/;"	d
IDirectInputDevice2_RunControlPanel	deps/mingw/dinput.h	/^#define IDirectInputDevice2_RunControlPanel(/;"	d
IDirectInputDevice2_SendDeviceData	deps/mingw/dinput.h	/^#define IDirectInputDevice2_SendDeviceData(/;"	d
IDirectInputDevice2_SendForceFeedbackCommand	deps/mingw/dinput.h	/^#define IDirectInputDevice2_SendForceFeedbackCommand(/;"	d
IDirectInputDevice2_SetCooperativeLevel	deps/mingw/dinput.h	/^#define IDirectInputDevice2_SetCooperativeLevel(/;"	d
IDirectInputDevice2_SetDataFormat	deps/mingw/dinput.h	/^#define IDirectInputDevice2_SetDataFormat(/;"	d
IDirectInputDevice2_SetEventNotification	deps/mingw/dinput.h	/^#define IDirectInputDevice2_SetEventNotification(/;"	d
IDirectInputDevice2_SetProperty	deps/mingw/dinput.h	/^#define IDirectInputDevice2_SetProperty(/;"	d
IDirectInputDevice2_Unacquire	deps/mingw/dinput.h	/^#define IDirectInputDevice2_Unacquire(/;"	d
IDirectInputDevice7	deps/mingw/dinput.h	/^#define IDirectInputDevice7 /;"	d
IDirectInputDevice7_Acquire	deps/mingw/dinput.h	/^#define IDirectInputDevice7_Acquire(/;"	d
IDirectInputDevice7_AddRef	deps/mingw/dinput.h	/^#define IDirectInputDevice7_AddRef(/;"	d
IDirectInputDevice7_CreateEffect	deps/mingw/dinput.h	/^#define IDirectInputDevice7_CreateEffect(/;"	d
IDirectInputDevice7_EnumCreatedEffectObjects	deps/mingw/dinput.h	/^#define IDirectInputDevice7_EnumCreatedEffectObjects(/;"	d
IDirectInputDevice7_EnumEffects	deps/mingw/dinput.h	/^#define IDirectInputDevice7_EnumEffects(/;"	d
IDirectInputDevice7_EnumEffectsInFile	deps/mingw/dinput.h	/^#define IDirectInputDevice7_EnumEffectsInFile(/;"	d
IDirectInputDevice7_EnumObjects	deps/mingw/dinput.h	/^#define IDirectInputDevice7_EnumObjects(/;"	d
IDirectInputDevice7_Escape	deps/mingw/dinput.h	/^#define IDirectInputDevice7_Escape(/;"	d
IDirectInputDevice7_GetCapabilities	deps/mingw/dinput.h	/^#define IDirectInputDevice7_GetCapabilities(/;"	d
IDirectInputDevice7_GetDeviceData	deps/mingw/dinput.h	/^#define IDirectInputDevice7_GetDeviceData(/;"	d
IDirectInputDevice7_GetDeviceInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice7_GetDeviceInfo(/;"	d
IDirectInputDevice7_GetDeviceState	deps/mingw/dinput.h	/^#define IDirectInputDevice7_GetDeviceState(/;"	d
IDirectInputDevice7_GetEffectInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice7_GetEffectInfo(/;"	d
IDirectInputDevice7_GetForceFeedbackState	deps/mingw/dinput.h	/^#define IDirectInputDevice7_GetForceFeedbackState(/;"	d
IDirectInputDevice7_GetObjectInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice7_GetObjectInfo(/;"	d
IDirectInputDevice7_GetProperty	deps/mingw/dinput.h	/^#define IDirectInputDevice7_GetProperty(/;"	d
IDirectInputDevice7_Initialize	deps/mingw/dinput.h	/^#define IDirectInputDevice7_Initialize(/;"	d
IDirectInputDevice7_Poll	deps/mingw/dinput.h	/^#define IDirectInputDevice7_Poll(/;"	d
IDirectInputDevice7_QueryInterface	deps/mingw/dinput.h	/^#define IDirectInputDevice7_QueryInterface(/;"	d
IDirectInputDevice7_Release	deps/mingw/dinput.h	/^#define IDirectInputDevice7_Release(/;"	d
IDirectInputDevice7_RunControlPanel	deps/mingw/dinput.h	/^#define IDirectInputDevice7_RunControlPanel(/;"	d
IDirectInputDevice7_SendDeviceData	deps/mingw/dinput.h	/^#define IDirectInputDevice7_SendDeviceData(/;"	d
IDirectInputDevice7_SendForceFeedbackCommand	deps/mingw/dinput.h	/^#define IDirectInputDevice7_SendForceFeedbackCommand(/;"	d
IDirectInputDevice7_SetCooperativeLevel	deps/mingw/dinput.h	/^#define IDirectInputDevice7_SetCooperativeLevel(/;"	d
IDirectInputDevice7_SetDataFormat	deps/mingw/dinput.h	/^#define IDirectInputDevice7_SetDataFormat(/;"	d
IDirectInputDevice7_SetEventNotification	deps/mingw/dinput.h	/^#define IDirectInputDevice7_SetEventNotification(/;"	d
IDirectInputDevice7_SetProperty	deps/mingw/dinput.h	/^#define IDirectInputDevice7_SetProperty(/;"	d
IDirectInputDevice7_Unacquire	deps/mingw/dinput.h	/^#define IDirectInputDevice7_Unacquire(/;"	d
IDirectInputDevice7_WriteEffectToFile	deps/mingw/dinput.h	/^#define IDirectInputDevice7_WriteEffectToFile(/;"	d
IDirectInputDevice8	deps/mingw/dinput.h	/^#define IDirectInputDevice8 /;"	d
IDirectInputDevice8_Acquire	deps/mingw/dinput.h	/^#define IDirectInputDevice8_Acquire(/;"	d
IDirectInputDevice8_AddRef	deps/mingw/dinput.h	/^#define IDirectInputDevice8_AddRef(/;"	d
IDirectInputDevice8_BuildActionMap	deps/mingw/dinput.h	/^#define IDirectInputDevice8_BuildActionMap(/;"	d
IDirectInputDevice8_CreateEffect	deps/mingw/dinput.h	/^#define IDirectInputDevice8_CreateEffect(/;"	d
IDirectInputDevice8_EnumCreatedEffectObjects	deps/mingw/dinput.h	/^#define IDirectInputDevice8_EnumCreatedEffectObjects(/;"	d
IDirectInputDevice8_EnumEffects	deps/mingw/dinput.h	/^#define IDirectInputDevice8_EnumEffects(/;"	d
IDirectInputDevice8_EnumEffectsInFile	deps/mingw/dinput.h	/^#define IDirectInputDevice8_EnumEffectsInFile(/;"	d
IDirectInputDevice8_EnumObjects	deps/mingw/dinput.h	/^#define IDirectInputDevice8_EnumObjects(/;"	d
IDirectInputDevice8_Escape	deps/mingw/dinput.h	/^#define IDirectInputDevice8_Escape(/;"	d
IDirectInputDevice8_GetCapabilities	deps/mingw/dinput.h	/^#define IDirectInputDevice8_GetCapabilities(/;"	d
IDirectInputDevice8_GetDeviceData	deps/mingw/dinput.h	/^#define IDirectInputDevice8_GetDeviceData(/;"	d
IDirectInputDevice8_GetDeviceInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice8_GetDeviceInfo(/;"	d
IDirectInputDevice8_GetDeviceState	deps/mingw/dinput.h	/^#define IDirectInputDevice8_GetDeviceState(/;"	d
IDirectInputDevice8_GetEffectInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice8_GetEffectInfo(/;"	d
IDirectInputDevice8_GetForceFeedbackState	deps/mingw/dinput.h	/^#define IDirectInputDevice8_GetForceFeedbackState(/;"	d
IDirectInputDevice8_GetImageInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice8_GetImageInfo(/;"	d
IDirectInputDevice8_GetObjectInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice8_GetObjectInfo(/;"	d
IDirectInputDevice8_GetProperty	deps/mingw/dinput.h	/^#define IDirectInputDevice8_GetProperty(/;"	d
IDirectInputDevice8_Initialize	deps/mingw/dinput.h	/^#define IDirectInputDevice8_Initialize(/;"	d
IDirectInputDevice8_Poll	deps/mingw/dinput.h	/^#define IDirectInputDevice8_Poll(/;"	d
IDirectInputDevice8_QueryInterface	deps/mingw/dinput.h	/^#define IDirectInputDevice8_QueryInterface(/;"	d
IDirectInputDevice8_Release	deps/mingw/dinput.h	/^#define IDirectInputDevice8_Release(/;"	d
IDirectInputDevice8_RunControlPanel	deps/mingw/dinput.h	/^#define IDirectInputDevice8_RunControlPanel(/;"	d
IDirectInputDevice8_SendDeviceData	deps/mingw/dinput.h	/^#define IDirectInputDevice8_SendDeviceData(/;"	d
IDirectInputDevice8_SendForceFeedbackCommand	deps/mingw/dinput.h	/^#define IDirectInputDevice8_SendForceFeedbackCommand(/;"	d
IDirectInputDevice8_SetActionMap	deps/mingw/dinput.h	/^#define IDirectInputDevice8_SetActionMap(/;"	d
IDirectInputDevice8_SetCooperativeLevel	deps/mingw/dinput.h	/^#define IDirectInputDevice8_SetCooperativeLevel(/;"	d
IDirectInputDevice8_SetDataFormat	deps/mingw/dinput.h	/^#define IDirectInputDevice8_SetDataFormat(/;"	d
IDirectInputDevice8_SetEventNotification	deps/mingw/dinput.h	/^#define IDirectInputDevice8_SetEventNotification(/;"	d
IDirectInputDevice8_SetProperty	deps/mingw/dinput.h	/^#define IDirectInputDevice8_SetProperty(/;"	d
IDirectInputDevice8_Unacquire	deps/mingw/dinput.h	/^#define IDirectInputDevice8_Unacquire(/;"	d
IDirectInputDevice8_WriteEffectToFile	deps/mingw/dinput.h	/^#define IDirectInputDevice8_WriteEffectToFile(/;"	d
IDirectInputDevice_Acquire	deps/mingw/dinput.h	/^#define IDirectInputDevice_Acquire(/;"	d
IDirectInputDevice_AddRef	deps/mingw/dinput.h	/^#define IDirectInputDevice_AddRef(/;"	d
IDirectInputDevice_EnumObjects	deps/mingw/dinput.h	/^#define IDirectInputDevice_EnumObjects(/;"	d
IDirectInputDevice_GetCapabilities	deps/mingw/dinput.h	/^#define IDirectInputDevice_GetCapabilities(/;"	d
IDirectInputDevice_GetDeviceData	deps/mingw/dinput.h	/^#define IDirectInputDevice_GetDeviceData(/;"	d
IDirectInputDevice_GetDeviceInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice_GetDeviceInfo(/;"	d
IDirectInputDevice_GetDeviceState	deps/mingw/dinput.h	/^#define IDirectInputDevice_GetDeviceState(/;"	d
IDirectInputDevice_GetObjectInfo	deps/mingw/dinput.h	/^#define IDirectInputDevice_GetObjectInfo(/;"	d
IDirectInputDevice_GetProperty	deps/mingw/dinput.h	/^#define IDirectInputDevice_GetProperty(/;"	d
IDirectInputDevice_Initialize	deps/mingw/dinput.h	/^#define IDirectInputDevice_Initialize(/;"	d
IDirectInputDevice_QueryInterface	deps/mingw/dinput.h	/^#define IDirectInputDevice_QueryInterface(/;"	d
IDirectInputDevice_Release	deps/mingw/dinput.h	/^#define IDirectInputDevice_Release(/;"	d
IDirectInputDevice_RunControlPanel	deps/mingw/dinput.h	/^#define IDirectInputDevice_RunControlPanel(/;"	d
IDirectInputDevice_SetCooperativeLevel	deps/mingw/dinput.h	/^#define IDirectInputDevice_SetCooperativeLevel(/;"	d
IDirectInputDevice_SetDataFormat	deps/mingw/dinput.h	/^#define IDirectInputDevice_SetDataFormat(/;"	d
IDirectInputDevice_SetEventNotification	deps/mingw/dinput.h	/^#define IDirectInputDevice_SetEventNotification(/;"	d
IDirectInputDevice_SetProperty	deps/mingw/dinput.h	/^#define IDirectInputDevice_SetProperty(/;"	d
IDirectInputDevice_Unacquire	deps/mingw/dinput.h	/^#define IDirectInputDevice_Unacquire(/;"	d
IDirectInputEffect_AddRef	deps/mingw/dinput.h	/^#define IDirectInputEffect_AddRef(/;"	d
IDirectInputEffect_Download	deps/mingw/dinput.h	/^#define IDirectInputEffect_Download(/;"	d
IDirectInputEffect_Escape	deps/mingw/dinput.h	/^#define IDirectInputEffect_Escape(/;"	d
IDirectInputEffect_GetEffectGuid	deps/mingw/dinput.h	/^#define IDirectInputEffect_GetEffectGuid(/;"	d
IDirectInputEffect_GetEffectStatus	deps/mingw/dinput.h	/^#define IDirectInputEffect_GetEffectStatus(/;"	d
IDirectInputEffect_GetParameters	deps/mingw/dinput.h	/^#define IDirectInputEffect_GetParameters(/;"	d
IDirectInputEffect_Initialize	deps/mingw/dinput.h	/^#define IDirectInputEffect_Initialize(/;"	d
IDirectInputEffect_QueryInterface	deps/mingw/dinput.h	/^#define IDirectInputEffect_QueryInterface(/;"	d
IDirectInputEffect_Release	deps/mingw/dinput.h	/^#define IDirectInputEffect_Release(/;"	d
IDirectInputEffect_SetParameters	deps/mingw/dinput.h	/^#define IDirectInputEffect_SetParameters(/;"	d
IDirectInputEffect_Start	deps/mingw/dinput.h	/^#define IDirectInputEffect_Start(/;"	d
IDirectInputEffect_Stop	deps/mingw/dinput.h	/^#define IDirectInputEffect_Stop(/;"	d
IDirectInputEffect_Unload	deps/mingw/dinput.h	/^#define IDirectInputEffect_Unload(/;"	d
IDirectInput_AddRef	deps/mingw/dinput.h	/^#define IDirectInput_AddRef(/;"	d
IDirectInput_CreateDevice	deps/mingw/dinput.h	/^#define IDirectInput_CreateDevice(/;"	d
IDirectInput_EnumDevices	deps/mingw/dinput.h	/^#define IDirectInput_EnumDevices(/;"	d
IDirectInput_GetDeviceStatus	deps/mingw/dinput.h	/^#define IDirectInput_GetDeviceStatus(/;"	d
IDirectInput_Initialize	deps/mingw/dinput.h	/^#define IDirectInput_Initialize(/;"	d
IDirectInput_QueryInterface	deps/mingw/dinput.h	/^#define IDirectInput_QueryInterface(/;"	d
IDirectInput_Release	deps/mingw/dinput.h	/^#define IDirectInput_Release(/;"	d
IDirectInput_RunControlPanel	deps/mingw/dinput.h	/^#define IDirectInput_RunControlPanel(/;"	d
IID_IDirectInput	deps/mingw/dinput.h	/^#define IID_IDirectInput /;"	d
IID_IDirectInput2	deps/mingw/dinput.h	/^#define IID_IDirectInput2 /;"	d
IID_IDirectInput7	deps/mingw/dinput.h	/^#define IID_IDirectInput7 /;"	d
IID_IDirectInput8	deps/mingw/dinput.h	/^#define IID_IDirectInput8 /;"	d
IID_IDirectInput8W	src/win32_joystick.c	/^#define IID_IDirectInput8W /;"	d	file:
IID_IDirectInputDevice	deps/mingw/dinput.h	/^#define IID_IDirectInputDevice /;"	d
IID_IDirectInputDevice2	deps/mingw/dinput.h	/^#define IID_IDirectInputDevice2 /;"	d
IID_IDirectInputDevice7	deps/mingw/dinput.h	/^#define IID_IDirectInputDevice7 /;"	d
IID_IDirectInputDevice8	deps/mingw/dinput.h	/^#define IID_IDirectInputDevice8 /;"	d
INCLUDED_GETOPT_PORT_H	deps/getopt.h	/^#define INCLUDED_GETOPT_PORT_H$/;"	d
INCLUDE_STB_IMAGE_WRITE_H	deps/stb_image_write.h	/^#define INCLUDE_STB_IMAGE_WRITE_H$/;"	d
INCR	src/x11_platform.h	/^    Atom            INCR;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
INT16_C	deps/vs2008/stdint.h	/^#define INT16_C(/;"	d
INT16_MAX	deps/vs2008/stdint.h	/^#define INT16_MAX /;"	d
INT16_MIN	deps/vs2008/stdint.h	/^#define INT16_MIN /;"	d
INT32_C	deps/vs2008/stdint.h	/^#define INT32_C(/;"	d
INT32_MAX	deps/vs2008/stdint.h	/^#define INT32_MAX /;"	d
INT32_MIN	deps/vs2008/stdint.h	/^#define INT32_MIN /;"	d
INT64_C	deps/vs2008/stdint.h	/^#define INT64_C(/;"	d
INT64_MAX	deps/vs2008/stdint.h	/^#define INT64_MAX /;"	d
INT64_MIN	deps/vs2008/stdint.h	/^#define INT64_MIN /;"	d
INT8_C	deps/vs2008/stdint.h	/^#define INT8_C(/;"	d
INT8_MAX	deps/vs2008/stdint.h	/^#define INT8_MAX /;"	d
INT8_MIN	deps/vs2008/stdint.h	/^#define INT8_MIN /;"	d
INTERFACE	deps/mingw/dinput.h	/^#define INTERFACE /;"	d
INTMAX_C	deps/vs2008/stdint.h	/^#define INTMAX_C /;"	d
INTMAX_MAX	deps/vs2008/stdint.h	/^#define INTMAX_MAX /;"	d
INTMAX_MIN	deps/vs2008/stdint.h	/^#define INTMAX_MIN /;"	d
INTPTR_MAX	deps/vs2008/stdint.h	/^#  define INTPTR_MAX /;"	d
INTPTR_MIN	deps/vs2008/stdint.h	/^#  define INTPTR_MIN /;"	d
INT_FAST16_MAX	deps/vs2008/stdint.h	/^#define INT_FAST16_MAX /;"	d
INT_FAST16_MIN	deps/vs2008/stdint.h	/^#define INT_FAST16_MIN /;"	d
INT_FAST32_MAX	deps/vs2008/stdint.h	/^#define INT_FAST32_MAX /;"	d
INT_FAST32_MIN	deps/vs2008/stdint.h	/^#define INT_FAST32_MIN /;"	d
INT_FAST64_MAX	deps/vs2008/stdint.h	/^#define INT_FAST64_MAX /;"	d
INT_FAST64_MIN	deps/vs2008/stdint.h	/^#define INT_FAST64_MIN /;"	d
INT_FAST8_MAX	deps/vs2008/stdint.h	/^#define INT_FAST8_MAX /;"	d
INT_FAST8_MIN	deps/vs2008/stdint.h	/^#define INT_FAST8_MIN /;"	d
INT_LEAST16_MAX	deps/vs2008/stdint.h	/^#define INT_LEAST16_MAX /;"	d
INT_LEAST16_MIN	deps/vs2008/stdint.h	/^#define INT_LEAST16_MIN /;"	d
INT_LEAST32_MAX	deps/vs2008/stdint.h	/^#define INT_LEAST32_MAX /;"	d
INT_LEAST32_MIN	deps/vs2008/stdint.h	/^#define INT_LEAST32_MIN /;"	d
INT_LEAST64_MAX	deps/vs2008/stdint.h	/^#define INT_LEAST64_MAX /;"	d
INT_LEAST64_MIN	deps/vs2008/stdint.h	/^#define INT_LEAST64_MIN /;"	d
INT_LEAST8_MAX	deps/vs2008/stdint.h	/^#define INT_LEAST8_MAX /;"	d
INT_LEAST8_MIN	deps/vs2008/stdint.h	/^#define INT_LEAST8_MIN /;"	d
ImageCreate	src/x11_platform.h	/^        PFN_XcursorImageCreate ImageCreate;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00508	typeref:typename:PFN_XcursorImageCreate
ImageDestroy	src/x11_platform.h	/^        PFN_XcursorImageDestroy ImageDestroy;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00508	typeref:typename:PFN_XcursorImageDestroy
ImageLoadCursor	src/x11_platform.h	/^        PFN_XcursorImageLoadCursor ImageLoadCursor;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00508	typeref:typename:PFN_XcursorImageLoadCursor
Initialize	src/egl_context.h	/^    PFN_eglInitialize           Initialize;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglInitialize
Introduction	README.md	/^## Introduction$/;"	s
IsActive	src/x11_platform.h	/^        PFN_XineramaIsActive IsActive;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00608	typeref:typename:PFN_XineramaIsActive
IsCompositionEnabled	src/win32_platform.h	/^        PFN_DwmIsCompositionEnabled     IsCompositionEnabled;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890908	typeref:typename:PFN_DwmIsCompositionEnabled
IsWindows7OrGreater	src/win32_platform.h	/^#define IsWindows7OrGreater(/;"	d
IsWindows8OrGreater	src/win32_platform.h	/^#define IsWindows8OrGreater(/;"	d
IsWindows8Point1OrGreater	src/win32_platform.h	/^#define IsWindows8Point1OrGreater(/;"	d
IsWindowsVistaOrGreater	src/win32_platform.h	/^#define IsWindowsVistaOrGreater(/;"	d
IsWindowsXPOrGreater	src/win32_platform.h	/^#define IsWindowsXPOrGreater(/;"	d
KHRONOS_APIATTRIBUTES	deps/glad/khrplatform.h	/^#define KHRONOS_APIATTRIBUTES /;"	d
KHRONOS_APIATTRIBUTES	deps/glad/khrplatform.h	/^#define KHRONOS_APIATTRIBUTES$/;"	d
KHRONOS_APICALL	deps/glad/khrplatform.h	/^#   define KHRONOS_APICALL /;"	d
KHRONOS_APICALL	deps/glad/khrplatform.h	/^#   define KHRONOS_APICALL$/;"	d
KHRONOS_APIENTRY	deps/glad/khrplatform.h	/^#   define KHRONOS_APIENTRY /;"	d
KHRONOS_APIENTRY	deps/glad/khrplatform.h	/^#   define KHRONOS_APIENTRY$/;"	d
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	deps/glad/khrplatform.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	e	enum:__anon079e76470103
KHRONOS_FALSE	deps/glad/khrplatform.h	/^    KHRONOS_FALSE = 0,$/;"	e	enum:__anon079e76470103
KHRONOS_MAX_ENUM	deps/glad/khrplatform.h	/^#define KHRONOS_MAX_ENUM /;"	d
KHRONOS_SUPPORT_FLOAT	deps/glad/khrplatform.h	/^#define KHRONOS_SUPPORT_FLOAT /;"	d
KHRONOS_SUPPORT_INT64	deps/glad/khrplatform.h	/^#define KHRONOS_SUPPORT_INT64 /;"	d
KHRONOS_TRUE	deps/glad/khrplatform.h	/^    KHRONOS_TRUE  = 1,$/;"	e	enum:__anon079e76470103
KHR_context_flush_control	src/egl_context.h	/^    GLFWbool        KHR_context_flush_control;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:GLFWbool
KHR_create_context	src/egl_context.h	/^    GLFWbool        KHR_create_context;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:GLFWbool
KHR_create_context_no_error	src/egl_context.h	/^    GLFWbool        KHR_create_context_no_error;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:GLFWbool
KHR_get_all_proc_addresses	src/egl_context.h	/^    GLFWbool        KHR_get_all_proc_addresses;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:GLFWbool
KHR_gl_colorspace	src/egl_context.h	/^    GLFWbool        KHR_gl_colorspace;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:GLFWbool
KHR_surface	src/internal.h	/^        GLFWbool        KHR_surface;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:GLFWbool
KHR_wayland_surface	src/internal.h	/^        GLFWbool        KHR_wayland_surface;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:GLFWbool
KHR_win32_surface	src/internal.h	/^        GLFWbool        KHR_win32_surface;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:GLFWbool
KHR_xcb_surface	src/internal.h	/^        GLFWbool        KHR_xcb_surface;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:GLFWbool
KHR_xlib_surface	src/internal.h	/^        GLFWbool        KHR_xlib_surface;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:GLFWbool
LAYERS	tests/glfwinfo.c	/^           EXTENSIONS, LAYERS,$/;"	e	enum:main::__anon6b8c80140103	file:
LIFE_SPAN	examples/particles.c	/^#define LIFE_SPAN /;"	d	file:
LINMATH_H	deps/linmath.h	/^#define LINMATH_H$/;"	d
LINMATH_H_DEFINE_VEC	deps/linmath.h	/^#define LINMATH_H_DEFINE_VEC(/;"	d
LIST_MODE	tests/monitors.c	/^    LIST_MODE,$/;"	e	enum:Mode	file:
LMGetKbdType	src/cocoa_platform.h	/^#define LMGetKbdType _glfw.ns.tis.GetKbdType$/;"	M
LPCDIACTIONA	deps/mingw/dinput.h	/^typedef const DIACTIONA *LPCDIACTIONA;$/;"	t	typeref:typename:const DIACTIONA *
LPCDIACTIONFORMATA	deps/mingw/dinput.h	/^typedef const DIACTIONFORMATA *LPCDIACTIONFORMATA;$/;"	t	typeref:typename:const DIACTIONFORMATA *
LPCDIACTIONFORMATW	deps/mingw/dinput.h	/^typedef const DIACTIONFORMATW *LPCDIACTIONFORMATW;$/;"	t	typeref:typename:const DIACTIONFORMATW *
LPCDIACTIONW	deps/mingw/dinput.h	/^typedef const DIACTIONW *LPCDIACTIONW;$/;"	t	typeref:typename:const DIACTIONW *
LPCDICOLORSET	deps/mingw/dinput.h	/^typedef const DICOLORSET *LPCDICOLORSET;$/;"	t	typeref:typename:const DICOLORSET *
LPCDICONDITION	deps/mingw/dinput.h	/^typedef const DICONDITION *LPCDICONDITION;$/;"	t	typeref:typename:const DICONDITION *
LPCDICONFIGUREDEVICESPARAMSA	deps/mingw/dinput.h	/^typedef const DICONFIGUREDEVICESPARAMSA *LPCDICONFIGUREDEVICESPARAMSA;$/;"	t	typeref:typename:const DICONFIGUREDEVICESPARAMSA *
LPCDICONFIGUREDEVICESPARAMSW	deps/mingw/dinput.h	/^typedef const DICONFIGUREDEVICESPARAMSW *LPCDICONFIGUREDEVICESPARAMSW;$/;"	t	typeref:typename:const DICONFIGUREDEVICESPARAMSW *
LPCDICONSTANTFORCE	deps/mingw/dinput.h	/^typedef const DICONSTANTFORCE *LPCDICONSTANTFORCE;$/;"	t	typeref:typename:const DICONSTANTFORCE *
LPCDICUSTOMFORCE	deps/mingw/dinput.h	/^typedef const DICUSTOMFORCE *LPCDICUSTOMFORCE;$/;"	t	typeref:typename:const DICUSTOMFORCE *
LPCDIDATAFORMAT	deps/mingw/dinput.h	/^typedef const DIDATAFORMAT *LPCDIDATAFORMAT;$/;"	t	typeref:typename:const DIDATAFORMAT *
LPCDIDEVICEIMAGEINFOA	deps/mingw/dinput.h	/^typedef const DIDEVICEIMAGEINFOA *LPCDIDEVICEIMAGEINFOA;$/;"	t	typeref:typename:const DIDEVICEIMAGEINFOA *
LPCDIDEVICEIMAGEINFOHEADERA	deps/mingw/dinput.h	/^typedef const DIDEVICEIMAGEINFOHEADERA *LPCDIDEVICEIMAGEINFOHEADERA;$/;"	t	typeref:typename:const DIDEVICEIMAGEINFOHEADERA *
LPCDIDEVICEIMAGEINFOHEADERW	deps/mingw/dinput.h	/^typedef const DIDEVICEIMAGEINFOHEADERW *LPCDIDEVICEIMAGEINFOHEADERW;$/;"	t	typeref:typename:const DIDEVICEIMAGEINFOHEADERW *
LPCDIDEVICEIMAGEINFOW	deps/mingw/dinput.h	/^typedef const DIDEVICEIMAGEINFOW *LPCDIDEVICEIMAGEINFOW;$/;"	t	typeref:typename:const DIDEVICEIMAGEINFOW *
LPCDIDEVICEINSTANCEA	deps/mingw/dinput.h	/^typedef const DIDEVICEINSTANCEA *LPCDIDEVICEINSTANCEA;$/;"	t	typeref:typename:const DIDEVICEINSTANCEA *
LPCDIDEVICEINSTANCEW	deps/mingw/dinput.h	/^typedef const DIDEVICEINSTANCEW *LPCDIDEVICEINSTANCEW;$/;"	t	typeref:typename:const DIDEVICEINSTANCEW *
LPCDIDEVICEINSTANCE_DX3A	deps/mingw/dinput.h	/^typedef const DIDEVICEINSTANCE_DX3A *LPCDIDEVICEINSTANCE_DX3A;$/;"	t	typeref:typename:const DIDEVICEINSTANCE_DX3A *
LPCDIDEVICEINSTANCE_DX3W	deps/mingw/dinput.h	/^typedef const DIDEVICEINSTANCE_DX3W *LPCDIDEVICEINSTANCE_DX3W;$/;"	t	typeref:typename:const DIDEVICEINSTANCE_DX3W *
LPCDIDEVICEOBJECTDATA	deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTDATA *LPCDIDEVICEOBJECTDATA;$/;"	t	typeref:typename:const DIDEVICEOBJECTDATA *
LPCDIDEVICEOBJECTDATA_DX3	deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTDATA_DX3 *LPCDIDEVICEOBJECTDATA_DX3;$/;"	t	typeref:typename:const DIDEVICEOBJECTDATA_DX3 *
LPCDIDEVICEOBJECTINSTANCEA	deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTINSTANCEA *LPCDIDEVICEOBJECTINSTANCEA;$/;"	t	typeref:typename:const DIDEVICEOBJECTINSTANCEA *
LPCDIDEVICEOBJECTINSTANCEW	deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTINSTANCEW *LPCDIDEVICEOBJECTINSTANCEW;$/;"	t	typeref:typename:const DIDEVICEOBJECTINSTANCEW *
LPCDIDEVICEOBJECTINSTANCE_DX3A	deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTINSTANCE_DX3A *LPCDIDEVICEOBJECTINSTANCE_DX3A;$/;"	t	typeref:typename:const DIDEVICEOBJECTINSTANCE_DX3A *
LPCDIDEVICEOBJECTINSTANCE_DX3W	deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTINSTANCE_DX3W *LPCDIDEVICEOBJECTINSTANCE_DX3W;$/;"	t	typeref:typename:const DIDEVICEOBJECTINSTANCE_DX3W *
LPCDIEFFECT	deps/mingw/dinput.h	/^typedef const DIEFFECT *LPCDIEFFECT;$/;"	t	typeref:typename:const DIEFFECT *
LPCDIEFFECTINFOA	deps/mingw/dinput.h	/^typedef const DIEFFECTINFOA *LPCDIEFFECTINFOA;$/;"	t	typeref:typename:const DIEFFECTINFOA *
LPCDIEFFECTINFOW	deps/mingw/dinput.h	/^typedef const DIEFFECTINFOW *LPCDIEFFECTINFOW;$/;"	t	typeref:typename:const DIEFFECTINFOW *
LPCDIEFFECT_DX5	deps/mingw/dinput.h	/^typedef const DIEFFECT_DX5 *LPCDIEFFECT_DX5;$/;"	t	typeref:typename:const DIEFFECT_DX5 *
LPCDIENVELOPE	deps/mingw/dinput.h	/^typedef const DIENVELOPE *LPCDIENVELOPE;$/;"	t	typeref:typename:const DIENVELOPE *
LPCDIFILEEFFECT	deps/mingw/dinput.h	/^typedef const DIFILEEFFECT *LPCDIFILEEFFECT;$/;"	t	typeref:typename:const DIFILEEFFECT *
LPCDIOBJECTDATAFORMAT	deps/mingw/dinput.h	/^typedef const DIOBJECTDATAFORMAT *LPCDIOBJECTDATAFORMAT;$/;"	t	typeref:typename:const DIOBJECTDATAFORMAT *
LPCDIPERIODIC	deps/mingw/dinput.h	/^typedef const DIPERIODIC *LPCDIPERIODIC;$/;"	t	typeref:typename:const DIPERIODIC *
LPCDIPROPCAL	deps/mingw/dinput.h	/^typedef const DIPROPCAL *LPCDIPROPCAL;$/;"	t	typeref:typename:const DIPROPCAL *
LPCDIPROPCALPOV	deps/mingw/dinput.h	/^typedef const DIPROPCALPOV *LPCDIPROPCALPOV;$/;"	t	typeref:typename:const DIPROPCALPOV *
LPCDIPROPCPOINTS	deps/mingw/dinput.h	/^typedef const DIPROPCPOINTS *LPCDIPROPCPOINTS;$/;"	t	typeref:typename:const DIPROPCPOINTS *
LPCDIPROPDWORD	deps/mingw/dinput.h	/^typedef const DIPROPDWORD *LPCDIPROPDWORD;$/;"	t	typeref:typename:const DIPROPDWORD *
LPCDIPROPGUIDANDPATH	deps/mingw/dinput.h	/^typedef const DIPROPGUIDANDPATH *LPCDIPROPGUIDANDPATH;$/;"	t	typeref:typename:const DIPROPGUIDANDPATH *
LPCDIPROPHEADER	deps/mingw/dinput.h	/^typedef const DIPROPHEADER *LPCDIPROPHEADER;$/;"	t	typeref:typename:const DIPROPHEADER *
LPCDIPROPPOINTER	deps/mingw/dinput.h	/^typedef const DIPROPPOINTER *LPCDIPROPPOINTER;$/;"	t	typeref:typename:const DIPROPPOINTER *
LPCDIPROPRANGE	deps/mingw/dinput.h	/^typedef const DIPROPRANGE *LPCDIPROPRANGE;$/;"	t	typeref:typename:const DIPROPRANGE *
LPCDIPROPSTRING	deps/mingw/dinput.h	/^typedef const DIPROPSTRING *LPCDIPROPSTRING;$/;"	t	typeref:typename:const DIPROPSTRING *
LPCDIRAMPFORCE	deps/mingw/dinput.h	/^typedef const DIRAMPFORCE *LPCDIRAMPFORCE;$/;"	t	typeref:typename:const DIRAMPFORCE *
LPDIACTIONA	deps/mingw/dinput.h	/^} DIACTIONA, *LPDIACTIONA;$/;"	t	typeref:struct:_DIACTIONA *
LPDIACTIONFORMATA	deps/mingw/dinput.h	/^} DIACTIONFORMATA, *LPDIACTIONFORMATA;$/;"	t	typeref:struct:_DIACTIONFORMATA *
LPDIACTIONFORMATW	deps/mingw/dinput.h	/^} DIACTIONFORMATW, *LPDIACTIONFORMATW;$/;"	t	typeref:struct:_DIACTIONFORMATW *
LPDIACTIONW	deps/mingw/dinput.h	/^} DIACTIONW, *LPDIACTIONW;$/;"	t	typeref:struct:_DIACTIONW *
LPDICOLORSET	deps/mingw/dinput.h	/^} DICOLORSET, *LPDICOLORSET;$/;"	t	typeref:struct:_DICOLORSET *
LPDICONDITION	deps/mingw/dinput.h	/^} DICONDITION, *LPDICONDITION;$/;"	t	typeref:struct:DICONDITION *
LPDICONFIGUREDEVICESCALLBACK	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDICONFIGUREDEVICESCALLBACK)(LPUNKNOWN,LPVOID);$/;"	t	typeref:typename:BOOL (CALLBACK *)(LPUNKNOWN,LPVOID)
LPDICONFIGUREDEVICESPARAMSA	deps/mingw/dinput.h	/^} DICONFIGUREDEVICESPARAMSA, *LPDICONFIGUREDEVICESPARAMSA;$/;"	t	typeref:struct:_DICONFIGUREDEVICESPARAMSA *
LPDICONFIGUREDEVICESPARAMSW	deps/mingw/dinput.h	/^} DICONFIGUREDEVICESPARAMSW, *LPDICONFIGUREDEVICESPARAMSW;$/;"	t	typeref:struct:_DICONFIGUREDEVICESPARAMSW *
LPDICONSTANTFORCE	deps/mingw/dinput.h	/^} DICONSTANTFORCE, *LPDICONSTANTFORCE;$/;"	t	typeref:struct:DICONSTANTFORCE *
LPDICUSTOMFORCE	deps/mingw/dinput.h	/^} DICUSTOMFORCE, *LPDICUSTOMFORCE;$/;"	t	typeref:struct:DICUSTOMFORCE *
LPDIDATAFORMAT	deps/mingw/dinput.h	/^} DIDATAFORMAT, *LPDIDATAFORMAT;$/;"	t	typeref:struct:_DIDATAFORMAT *
LPDIDEVCAPS	deps/mingw/dinput.h	/^} DIDEVCAPS,*LPDIDEVCAPS;$/;"	t	typeref:struct:DIDEVCAPS *
LPDIDEVCAPS_DX3	deps/mingw/dinput.h	/^} DIDEVCAPS_DX3, *LPDIDEVCAPS_DX3;$/;"	t	typeref:struct:DIDEVCAPS_DX3 *
LPDIDEVICEIMAGEINFOA	deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOA, *LPDIDEVICEIMAGEINFOA;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOA *
LPDIDEVICEIMAGEINFOHEADERA	deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOHEADERA, *LPDIDEVICEIMAGEINFOHEADERA;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOHEADERA *
LPDIDEVICEIMAGEINFOHEADERW	deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOHEADERW, *LPDIDEVICEIMAGEINFOHEADERW;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOHEADERW *
LPDIDEVICEIMAGEINFOW	deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOW, *LPDIDEVICEIMAGEINFOW;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOW *
LPDIDEVICEINSTANCEA	deps/mingw/dinput.h	/^} DIDEVICEINSTANCEA, *LPDIDEVICEINSTANCEA;$/;"	t	typeref:struct:DIDEVICEINSTANCEA *
LPDIDEVICEINSTANCEW	deps/mingw/dinput.h	/^} DIDEVICEINSTANCEW, *LPDIDEVICEINSTANCEW;$/;"	t	typeref:struct:DIDEVICEINSTANCEW *
LPDIDEVICEINSTANCE_DX3A	deps/mingw/dinput.h	/^} DIDEVICEINSTANCE_DX3A, *LPDIDEVICEINSTANCE_DX3A;$/;"	t	typeref:struct:DIDEVICEINSTANCE_DX3A *
LPDIDEVICEINSTANCE_DX3W	deps/mingw/dinput.h	/^} DIDEVICEINSTANCE_DX3W, *LPDIDEVICEINSTANCE_DX3W;$/;"	t	typeref:struct:DIDEVICEINSTANCE_DX3W *
LPDIDEVICEOBJECTDATA	deps/mingw/dinput.h	/^} DIDEVICEOBJECTDATA, *LPDIDEVICEOBJECTDATA;$/;"	t	typeref:struct:DIDEVICEOBJECTDATA *
LPDIDEVICEOBJECTDATA_DX3	deps/mingw/dinput.h	/^} DIDEVICEOBJECTDATA_DX3,*LPDIDEVICEOBJECTDATA_DX3;$/;"	t	typeref:struct:DIDEVICEOBJECTDATA_DX3 *
LPDIDEVICEOBJECTINSTANCEA	deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCEA, *LPDIDEVICEOBJECTINSTANCEA;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCEA *
LPDIDEVICEOBJECTINSTANCEW	deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCEW, *LPDIDEVICEOBJECTINSTANCEW;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCEW *
LPDIDEVICEOBJECTINSTANCE_DX3A	deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCE_DX3A, *LPDIDEVICEOBJECTINSTANCE_DX3A;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCE_DX3A *
LPDIDEVICEOBJECTINSTANCE_DX3W	deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCE_DX3W, *LPDIDEVICEOBJECTINSTANCE_DX3W;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCE_DX3W *
LPDIEFFECT	deps/mingw/dinput.h	/^} DIEFFECT, *LPDIEFFECT;$/;"	t	typeref:struct:DIEFFECT *
LPDIEFFECTINFOA	deps/mingw/dinput.h	/^} DIEFFECTINFOA, *LPDIEFFECTINFOA;$/;"	t	typeref:struct:DIEFFECTINFOA *
LPDIEFFECTINFOW	deps/mingw/dinput.h	/^} DIEFFECTINFOW, *LPDIEFFECTINFOW;$/;"	t	typeref:struct:DIEFFECTINFOW *
LPDIEFFECT_DX5	deps/mingw/dinput.h	/^} DIEFFECT_DX5, *LPDIEFFECT_DX5;$/;"	t	typeref:struct:DIEFFECT_DX5 *
LPDIEFFECT_DX6	deps/mingw/dinput.h	/^typedef LPDIEFFECT LPDIEFFECT_DX6;$/;"	t	typeref:typename:LPDIEFFECT
LPDIEFFESCAPE	deps/mingw/dinput.h	/^} DIEFFESCAPE, *LPDIEFFESCAPE;$/;"	t	typeref:struct:DIEFFESCAPE *
LPDIENUMCREATEDEFFECTOBJECTSCALLBACK	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMCREATEDEFFECTOBJECTSCALLBACK)(LPDIRECTINPUTEFFECT, LPVOID);$/;"	t	typeref:typename:BOOL (CALLBACK *)(LPDIRECTINPUTEFFECT,LPVOID)
LPDIENUMDEVICEOBJECTSCALLBACKA	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICEOBJECTSCALLBACKA)(LPCDIDEVICEOBJECTINSTANCEA,LPVOID);$/;"	t	typeref:typename:BOOL (CALLBACK *)(LPCDIDEVICEOBJECTINSTANCEA,LPVOID)
LPDIENUMDEVICEOBJECTSCALLBACKW	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICEOBJECTSCALLBACKW)(LPCDIDEVICEOBJECTINSTANCEW,LPVOID);$/;"	t	typeref:typename:BOOL (CALLBACK *)(LPCDIDEVICEOBJECTINSTANCEW,LPVOID)
LPDIENUMDEVICESBYSEMANTICSCBA	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICESBYSEMANTICSCBA)(LPCDIDEVICEINSTANCEA,LPDIRECTINPUTDEVICE8/;"	t	typeref:typename:BOOL (CALLBACK *)(LPCDIDEVICEINSTANCEA,LPDIRECTINPUTDEVICE8A,DWORD,DWORD,LPVOID)
LPDIENUMDEVICESBYSEMANTICSCBW	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICESBYSEMANTICSCBW)(LPCDIDEVICEINSTANCEW,LPDIRECTINPUTDEVICE8/;"	t	typeref:typename:BOOL (CALLBACK *)(LPCDIDEVICEINSTANCEW,LPDIRECTINPUTDEVICE8W,DWORD,DWORD,LPVOID)
LPDIENUMDEVICESCALLBACKA	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICESCALLBACKA)(LPCDIDEVICEINSTANCEA,LPVOID);$/;"	t	typeref:typename:BOOL (CALLBACK *)(LPCDIDEVICEINSTANCEA,LPVOID)
LPDIENUMDEVICESCALLBACKW	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICESCALLBACKW)(LPCDIDEVICEINSTANCEW,LPVOID);$/;"	t	typeref:typename:BOOL (CALLBACK *)(LPCDIDEVICEINSTANCEW,LPVOID)
LPDIENUMEFFECTSCALLBACKA	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMEFFECTSCALLBACKA)(LPCDIEFFECTINFOA, LPVOID);$/;"	t	typeref:typename:BOOL (CALLBACK *)(LPCDIEFFECTINFOA,LPVOID)
LPDIENUMEFFECTSCALLBACKW	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMEFFECTSCALLBACKW)(LPCDIEFFECTINFOW, LPVOID);$/;"	t	typeref:typename:BOOL (CALLBACK *)(LPCDIEFFECTINFOW,LPVOID)
LPDIENUMEFFECTSINFILECALLBACK	deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMEFFECTSINFILECALLBACK)(LPCDIFILEEFFECT , LPVOID);$/;"	t	typeref:typename:BOOL (CALLBACK *)(LPCDIFILEEFFECT,LPVOID)
LPDIENVELOPE	deps/mingw/dinput.h	/^} DIENVELOPE, *LPDIENVELOPE;$/;"	t	typeref:struct:DIENVELOPE *
LPDIFILEEFFECT	deps/mingw/dinput.h	/^} DIFILEEFFECT, *LPDIFILEEFFECT;$/;"	t	typeref:struct:DIFILEEFFECT *
LPDIJOYSTATE	deps/mingw/dinput.h	/^} DIJOYSTATE, *LPDIJOYSTATE;$/;"	t	typeref:struct:DIJOYSTATE *
LPDIJOYSTATE2	deps/mingw/dinput.h	/^} DIJOYSTATE2, *LPDIJOYSTATE2;$/;"	t	typeref:struct:DIJOYSTATE2 *
LPDIOBJECTDATAFORMAT	deps/mingw/dinput.h	/^} DIOBJECTDATAFORMAT, *LPDIOBJECTDATAFORMAT;$/;"	t	typeref:struct:_DIOBJECTDATAFORMAT *
LPDIPERIODIC	deps/mingw/dinput.h	/^} DIPERIODIC, *LPDIPERIODIC;$/;"	t	typeref:struct:DIPERIODIC *
LPDIPROPCAL	deps/mingw/dinput.h	/^} DIPROPCAL, *LPDIPROPCAL;$/;"	t	typeref:struct:DIPROPCAL *
LPDIPROPCALPOV	deps/mingw/dinput.h	/^} DIPROPCALPOV, *LPDIPROPCALPOV;$/;"	t	typeref:struct:DIPROPCALPOV *
LPDIPROPCPOINTS	deps/mingw/dinput.h	/^} DIPROPCPOINTS, *LPDIPROPCPOINTS;$/;"	t	typeref:struct:DIPROPCPOINTS *
LPDIPROPDWORD	deps/mingw/dinput.h	/^} DIPROPDWORD, *LPDIPROPDWORD;$/;"	t	typeref:struct:DIPROPDWORD *
LPDIPROPGUIDANDPATH	deps/mingw/dinput.h	/^} DIPROPGUIDANDPATH, *LPDIPROPGUIDANDPATH;$/;"	t	typeref:struct:DIPROPGUIDANDPATH *
LPDIPROPHEADER	deps/mingw/dinput.h	/^} DIPROPHEADER,*LPDIPROPHEADER;$/;"	t	typeref:struct:DIPROPHEADER *
LPDIPROPPOINTER	deps/mingw/dinput.h	/^} DIPROPPOINTER, *LPDIPROPPOINTER;$/;"	t	typeref:struct:DIPROPPOINTER *
LPDIPROPRANGE	deps/mingw/dinput.h	/^} DIPROPRANGE, *LPDIPROPRANGE;$/;"	t	typeref:struct:DIPROPRANGE *
LPDIPROPSTRING	deps/mingw/dinput.h	/^} DIPROPSTRING, *LPDIPROPSTRING;$/;"	t	typeref:struct:DIPROPSTRING *
LPDIRAMPFORCE	deps/mingw/dinput.h	/^} DIRAMPFORCE, *LPDIRAMPFORCE;$/;"	t	typeref:struct:DIRAMPFORCE *
LPDIRECTINPUT2A	deps/mingw/dinput.h	/^typedef struct IDirectInput2A *LPDIRECTINPUT2A;$/;"	t	typeref:struct:IDirectInput2A *
LPDIRECTINPUT2W	deps/mingw/dinput.h	/^typedef struct IDirectInput2W *LPDIRECTINPUT2W;$/;"	t	typeref:struct:IDirectInput2W *
LPDIRECTINPUT7A	deps/mingw/dinput.h	/^typedef struct IDirectInput7A *LPDIRECTINPUT7A;$/;"	t	typeref:struct:IDirectInput7A *
LPDIRECTINPUT7W	deps/mingw/dinput.h	/^typedef struct IDirectInput7W *LPDIRECTINPUT7W;$/;"	t	typeref:struct:IDirectInput7W *
LPDIRECTINPUT8A	deps/mingw/dinput.h	/^typedef struct IDirectInput8A *LPDIRECTINPUT8A;$/;"	t	typeref:struct:IDirectInput8A *
LPDIRECTINPUT8W	deps/mingw/dinput.h	/^typedef struct IDirectInput8W *LPDIRECTINPUT8W;$/;"	t	typeref:struct:IDirectInput8W *
LPDIRECTINPUTA	deps/mingw/dinput.h	/^typedef struct IDirectInputA *LPDIRECTINPUTA;$/;"	t	typeref:struct:IDirectInputA *
LPDIRECTINPUTDEVICE2A	deps/mingw/dinput.h	/^typedef struct IDirectInputDevice2A *LPDIRECTINPUTDEVICE2A;$/;"	t	typeref:struct:IDirectInputDevice2A *
LPDIRECTINPUTDEVICE2W	deps/mingw/dinput.h	/^typedef struct IDirectInputDevice2W *LPDIRECTINPUTDEVICE2W;$/;"	t	typeref:struct:IDirectInputDevice2W *
LPDIRECTINPUTDEVICE7A	deps/mingw/dinput.h	/^typedef struct IDirectInputDevice7A *LPDIRECTINPUTDEVICE7A;$/;"	t	typeref:struct:IDirectInputDevice7A *
LPDIRECTINPUTDEVICE7W	deps/mingw/dinput.h	/^typedef struct IDirectInputDevice7W *LPDIRECTINPUTDEVICE7W;$/;"	t	typeref:struct:IDirectInputDevice7W *
LPDIRECTINPUTDEVICE8A	deps/mingw/dinput.h	/^typedef struct IDirectInputDevice8A *LPDIRECTINPUTDEVICE8A;$/;"	t	typeref:struct:IDirectInputDevice8A *
LPDIRECTINPUTDEVICE8W	deps/mingw/dinput.h	/^typedef struct IDirectInputDevice8W *LPDIRECTINPUTDEVICE8W;$/;"	t	typeref:struct:IDirectInputDevice8W *
LPDIRECTINPUTDEVICEA	deps/mingw/dinput.h	/^typedef struct IDirectInputDeviceA *LPDIRECTINPUTDEVICEA;$/;"	t	typeref:struct:IDirectInputDeviceA *
LPDIRECTINPUTDEVICEW	deps/mingw/dinput.h	/^typedef struct IDirectInputDeviceW *LPDIRECTINPUTDEVICEW;$/;"	t	typeref:struct:IDirectInputDeviceW *
LPDIRECTINPUTEFFECT	deps/mingw/dinput.h	/^typedef struct IDirectInputEffect *LPDIRECTINPUTEFFECT;$/;"	t	typeref:struct:IDirectInputEffect *
LPDIRECTINPUTW	deps/mingw/dinput.h	/^typedef struct IDirectInputW *LPDIRECTINPUTW;$/;"	t	typeref:struct:IDirectInputW *
LPSYSKEYBOARDA	deps/mingw/dinput.h	/^typedef struct SysKeyboardA *LPSYSKEYBOARDA;$/;"	t	typeref:struct:SysKeyboardA *
LPSYSMOUSEA	deps/mingw/dinput.h	/^typedef struct SysMouseA *LPSYSMOUSEA;$/;"	t	typeref:struct:SysMouseA *
LSRequiresCarbon	CMake/Info.plist.in	/^	<key>LSRequiresCarbon<\/key>$/;"	k
LibraryLoadImage	src/x11_platform.h	/^        PFN_XcursorLibraryLoadImage LibraryLoadImage;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00508	typeref:typename:PFN_XcursorLibraryLoadImage
MAJOR	tests/glfwinfo.c	/^           MAJOR, MINOR, PROFILE, ROBUSTNESS, VERSION,$/;"	e	enum:main::__anon6b8c80140103	file:
MAKEDIPROP	deps/mingw/dinput.h	/^#define MAKEDIPROP(/;"	d
MAP_NUM_LINES	examples/heightmap.c	/^#define MAP_NUM_LINES /;"	d	file:
MAP_NUM_TOTAL_VERTICES	examples/heightmap.c	/^#define MAP_NUM_TOTAL_VERTICES /;"	d	file:
MAP_NUM_VERTICES	examples/heightmap.c	/^#define MAP_NUM_VERTICES /;"	d	file:
MAP_SIZE	examples/heightmap.c	/^#define MAP_SIZE /;"	d	file:
MAXCPOINTSNUM	deps/mingw/dinput.h	/^#define MAXCPOINTSNUM	/;"	d
MAX_CIRCLE_SIZE	examples/heightmap.c	/^#define MAX_CIRCLE_SIZE /;"	d	file:
MAX_DELTA_T	examples/boing.c	/^#define MAX_DELTA_T /;"	d	file:
MAX_DELTA_T	examples/wave.c	/^#define MAX_DELTA_T /;"	d	file:
MAX_DISPLACEMENT	examples/heightmap.c	/^#define MAX_DISPLACEMENT /;"	d	file:
MAX_ITER	examples/heightmap.c	/^#define MAX_ITER /;"	d	file:
MAX_PARTICLES	examples/particles.c	/^#define MAX_PARTICLES /;"	d	file:
MDT_ANGULAR_DPI	src/win32_platform.h	/^    MDT_ANGULAR_DPI = 1,$/;"	e	enum:__anon622bd5890403
MDT_DEFAULT	src/win32_platform.h	/^    MDT_DEFAULT = MDT_EFFECTIVE_DPI$/;"	e	enum:__anon622bd5890403
MDT_EFFECTIVE_DPI	src/win32_platform.h	/^    MDT_EFFECTIVE_DPI = 0,$/;"	e	enum:__anon622bd5890403
MDT_RAW_DPI	src/win32_platform.h	/^    MDT_RAW_DPI = 2,$/;"	e	enum:__anon622bd5890403
MESA_swap_control	src/glx_context.h	/^    GLFWbool        MESA_swap_control;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
MINOR	tests/glfwinfo.c	/^           MAJOR, MINOR, PROFILE, ROBUSTNESS, VERSION,$/;"	e	enum:main::__anon6b8c80140103	file:
MIN_DELTA_T	examples/particles.c	/^#define MIN_DELTA_T /;"	d	file:
MODIFIER	tests/clipboard.c	/^ #define MODIFIER /;"	d	file:
MONITOR_DPI_TYPE	src/win32_platform.h	/^} MONITOR_DPI_TYPE;$/;"	t	typeref:enum:__anon622bd5890403
MOTIF_WM_HINTS	src/x11_platform.h	/^    Atom            MOTIF_WM_HINTS;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
MSGFLT_ALLOW	src/win32_platform.h	/^ #define MSGFLT_ALLOW /;"	d
MULTIPLE	src/x11_platform.h	/^    Atom            MULTIPLE;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
MVK_macos_surface	src/internal.h	/^        GLFWbool        MVK_macos_surface;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:GLFWbool
MWM_DECOR_ALL	src/x11_window.c	/^#define MWM_DECOR_ALL /;"	d	file:
MWM_HINTS_DECORATIONS	src/x11_window.c	/^#define MWM_HINTS_DECORATIONS /;"	d	file:
MakeCurrent	src/egl_context.h	/^    PFN_eglMakeCurrent          MakeCurrent;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglMakeCurrent
MakeCurrent	src/glx_context.h	/^    PFNGLXMAKECURRENTPROC               MakeCurrent;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXMAKECURRENTPROC
MakeCurrent	src/osmesa_context.h	/^    PFN_OSMesaMakeCurrent           MakeCurrent;$/;"	m	struct:_GLFWlibraryOSMesa	typeref:typename:PFN_OSMesaMakeCurrent
MakeCurrent	src/wgl_context.h	/^    PFN_wglMakeCurrent                  MakeCurrent;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFN_wglMakeCurrent
Mode	tests/monitors.c	/^enum Mode$/;"	g	file:
NET_ACTIVE_WINDOW	src/x11_platform.h	/^    Atom            NET_ACTIVE_WINDOW;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_CURRENT_DESKTOP	src/x11_platform.h	/^    Atom            NET_CURRENT_DESKTOP;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_FRAME_EXTENTS	src/x11_platform.h	/^    Atom            NET_FRAME_EXTENTS;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_REQUEST_FRAME_EXTENTS	src/x11_platform.h	/^    Atom            NET_REQUEST_FRAME_EXTENTS;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_SUPPORTED	src/x11_platform.h	/^    Atom            NET_SUPPORTED;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_SUPPORTING_WM_CHECK	src/x11_platform.h	/^    Atom            NET_SUPPORTING_WM_CHECK;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_BYPASS_COMPOSITOR	src/x11_platform.h	/^    Atom            NET_WM_BYPASS_COMPOSITOR;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_CM_Sx	src/x11_platform.h	/^    Atom            NET_WM_CM_Sx;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_FULLSCREEN_MONITORS	src/x11_platform.h	/^    Atom            NET_WM_FULLSCREEN_MONITORS;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_ICON	src/x11_platform.h	/^    Atom            NET_WM_ICON;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_ICON_NAME	src/x11_platform.h	/^    Atom            NET_WM_ICON_NAME;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_NAME	src/x11_platform.h	/^    Atom            NET_WM_NAME;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_PID	src/x11_platform.h	/^    Atom            NET_WM_PID;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_PING	src/x11_platform.h	/^    Atom            NET_WM_PING;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_STATE	src/x11_platform.h	/^    Atom            NET_WM_STATE;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_STATE_ABOVE	src/x11_platform.h	/^    Atom            NET_WM_STATE_ABOVE;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_STATE_DEMANDS_ATTENTION	src/x11_platform.h	/^    Atom            NET_WM_STATE_DEMANDS_ATTENTION;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_STATE_FULLSCREEN	src/x11_platform.h	/^    Atom            NET_WM_STATE_FULLSCREEN;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_STATE_MAXIMIZED_HORZ	src/x11_platform.h	/^    Atom            NET_WM_STATE_MAXIMIZED_HORZ;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_STATE_MAXIMIZED_VERT	src/x11_platform.h	/^    Atom            NET_WM_STATE_MAXIMIZED_VERT;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_WINDOW_OPACITY	src/x11_platform.h	/^    Atom            NET_WM_WINDOW_OPACITY;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_WINDOW_TYPE	src/x11_platform.h	/^    Atom            NET_WM_WINDOW_TYPE;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WM_WINDOW_TYPE_NORMAL	src/x11_platform.h	/^    Atom            NET_WM_WINDOW_TYPE_NORMAL;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NET_WORKAREA	src/x11_platform.h	/^    Atom            NET_WORKAREA;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NK_ABS	deps/nuklear.h	/^#define NK_ABS(/;"	d
NK_ADJACENCY_BONUS	deps/nuklear.h	/^    #define NK_ADJACENCY_BONUS /;"	d
NK_ALIGNOF	deps/nuklear.h	/^#define NK_ALIGNOF(/;"	d
NK_ALIGN_PTR	deps/nuklear.h	/^#define NK_ALIGN_PTR(/;"	d
NK_ALIGN_PTR_BACK	deps/nuklear.h	/^#define NK_ALIGN_PTR_BACK(/;"	d
NK_ANTI_ALIASING_OFF	deps/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_ANTI_ALIASING_ON	deps/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_API	deps/nuklear.h	/^      #define NK_API /;"	d
NK_ARG_FLAG_LEFT	deps/nuklear.h	/^        NK_ARG_FLAG_LEFT = 0x01,$/;"	e	enum:nk_vsnprintf::nk_arg_flags
NK_ARG_FLAG_NUM	deps/nuklear.h	/^        NK_ARG_FLAG_NUM = 0x10,$/;"	e	enum:nk_vsnprintf::nk_arg_flags
NK_ARG_FLAG_PLUS	deps/nuklear.h	/^        NK_ARG_FLAG_PLUS = 0x02,$/;"	e	enum:nk_vsnprintf::nk_arg_flags
NK_ARG_FLAG_SPACE	deps/nuklear.h	/^        NK_ARG_FLAG_SPACE = 0x04,$/;"	e	enum:nk_vsnprintf::nk_arg_flags
NK_ARG_FLAG_ZERO	deps/nuklear.h	/^        NK_ARG_FLAG_ZERO = 0x20$/;"	e	enum:nk_vsnprintf::nk_arg_flags
NK_ARG_TYPE_CHAR	deps/nuklear.h	/^        NK_ARG_TYPE_CHAR,$/;"	e	enum:nk_vsnprintf::nk_arg_type
NK_ARG_TYPE_DEFAULT	deps/nuklear.h	/^        NK_ARG_TYPE_DEFAULT,$/;"	e	enum:nk_vsnprintf::nk_arg_type
NK_ARG_TYPE_LONG	deps/nuklear.h	/^        NK_ARG_TYPE_LONG$/;"	e	enum:nk_vsnprintf::nk_arg_type
NK_ARG_TYPE_SHORT	deps/nuklear.h	/^        NK_ARG_TYPE_SHORT,$/;"	e	enum:nk_vsnprintf::nk_arg_type
NK_ASSERT	deps/nuklear.h	/^#define NK_ASSERT(/;"	d
NK_BETWEEN	deps/nuklear.h	/^#define NK_BETWEEN(/;"	d
NK_BUFFER_BACK	deps/nuklear.h	/^    NK_BUFFER_BACK,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_DEFAULT_INITIAL_SIZE	deps/nuklear.h	/^#define NK_BUFFER_DEFAULT_INITIAL_SIZE /;"	d
NK_BUFFER_DYNAMIC	deps/nuklear.h	/^    NK_BUFFER_DYNAMIC$/;"	e	enum:nk_allocation_type
NK_BUFFER_FIXED	deps/nuklear.h	/^    NK_BUFFER_FIXED,$/;"	e	enum:nk_allocation_type
NK_BUFFER_FRONT	deps/nuklear.h	/^    NK_BUFFER_FRONT,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_MAX	deps/nuklear.h	/^    NK_BUFFER_MAX$/;"	e	enum:nk_buffer_allocation_type
NK_BUTTON_BEHAVIOR_STACK_SIZE	deps/nuklear.h	/^#define NK_BUTTON_BEHAVIOR_STACK_SIZE /;"	d
NK_BUTTON_DEFAULT	deps/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_DOUBLE	deps/nuklear.h	/^    NK_BUTTON_DOUBLE,$/;"	e	enum:nk_buttons
NK_BUTTON_LEFT	deps/nuklear.h	/^    NK_BUTTON_LEFT,$/;"	e	enum:nk_buttons
NK_BUTTON_MAX	deps/nuklear.h	/^    NK_BUTTON_MAX$/;"	e	enum:nk_buttons
NK_BUTTON_MIDDLE	deps/nuklear.h	/^    NK_BUTTON_MIDDLE,$/;"	e	enum:nk_buttons
NK_BUTTON_REPEATER	deps/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_RIGHT	deps/nuklear.h	/^    NK_BUTTON_RIGHT,$/;"	e	enum:nk_buttons
NK_BUTTON_TRIGGER_ON_RELEASE	tests/gamma.c	/^#define NK_BUTTON_TRIGGER_ON_RELEASE$/;"	d	file:
NK_BUTTON_TRIGGER_ON_RELEASE	tests/joysticks.c	/^#define NK_BUTTON_TRIGGER_ON_RELEASE$/;"	d	file:
NK_CAMEL_BONUS	deps/nuklear.h	/^    #define NK_CAMEL_BONUS /;"	d
NK_CHART_CLICKED	deps/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_COLUMN	deps/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_HOVERING	deps/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_LINES	deps/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_MAX	deps/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_MAX_SLOT	deps/nuklear.h	/^#define NK_CHART_MAX_SLOT /;"	d
NK_CLAMP	deps/nuklear.h	/^#define NK_CLAMP(/;"	d
NK_CLIPPING_OFF	deps/nuklear.h	/^    NK_CLIPPING_OFF = nk_false,$/;"	e	enum:nk_command_clipping
NK_CLIPPING_ON	deps/nuklear.h	/^    NK_CLIPPING_ON = nk_true$/;"	e	enum:nk_command_clipping
NK_COLOR	deps/nuklear.h	/^#define NK_COLOR(/;"	d
NK_COLOR_BORDER	deps/nuklear.h	/^    NK_COLOR_BORDER,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON	deps/nuklear.h	/^    NK_COLOR_BUTTON,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_ACTIVE	deps/nuklear.h	/^    NK_COLOR_BUTTON_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_HOVER	deps/nuklear.h	/^    NK_COLOR_BUTTON_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART	deps/nuklear.h	/^    NK_COLOR_CHART,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR	deps/nuklear.h	/^    NK_COLOR_CHART_COLOR,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR_HIGHLIGHT	deps/nuklear.h	/^    NK_COLOR_CHART_COLOR_HIGHLIGHT,$/;"	e	enum:nk_style_colors
NK_COLOR_COMBO	deps/nuklear.h	/^    NK_COLOR_COMBO,$/;"	e	enum:nk_style_colors
NK_COLOR_COUNT	deps/nuklear.h	/^    NK_COLOR_COUNT$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT	deps/nuklear.h	/^    NK_COLOR_EDIT,$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT_CURSOR	deps/nuklear.h	/^    NK_COLOR_EDIT_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_HEADER	deps/nuklear.h	/^    NK_COLOR_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_MAP	deps/nuklear.h	/^#define NK_COLOR_MAP(/;"	d
NK_COLOR_PROPERTY	deps/nuklear.h	/^    NK_COLOR_PROPERTY,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR	deps/nuklear.h	/^    NK_COLOR_SCROLLBAR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR	deps/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_ACTIVE	deps/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_HOVER	deps/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT	deps/nuklear.h	/^    NK_COLOR_SELECT,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT_ACTIVE	deps/nuklear.h	/^    NK_COLOR_SELECT_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER	deps/nuklear.h	/^    NK_COLOR_SLIDER,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR	deps/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_ACTIVE	deps/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_HOVER	deps/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_STACK_SIZE	deps/nuklear.h	/^#define NK_COLOR_STACK_SIZE /;"	d
NK_COLOR_TAB_HEADER	deps/nuklear.h	/^    NK_COLOR_TAB_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_TEXT	deps/nuklear.h	/^    NK_COLOR_TEXT,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE	deps/nuklear.h	/^    NK_COLOR_TOGGLE,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_CURSOR	deps/nuklear.h	/^    NK_COLOR_TOGGLE_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_HOVER	deps/nuklear.h	/^    NK_COLOR_TOGGLE_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_WINDOW	deps/nuklear.h	/^    NK_COLOR_WINDOW,$/;"	e	enum:nk_style_colors
NK_COMMAND_ARC	deps/nuklear.h	/^    NK_COMMAND_ARC,$/;"	e	enum:nk_command_type
NK_COMMAND_ARC_FILLED	deps/nuklear.h	/^    NK_COMMAND_ARC_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE	deps/nuklear.h	/^    NK_COMMAND_CIRCLE,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE_FILLED	deps/nuklear.h	/^    NK_COMMAND_CIRCLE_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_CURVE	deps/nuklear.h	/^    NK_COMMAND_CURVE,$/;"	e	enum:nk_command_type
NK_COMMAND_CUSTOM	deps/nuklear.h	/^    NK_COMMAND_CUSTOM$/;"	e	enum:nk_command_type
NK_COMMAND_IMAGE	deps/nuklear.h	/^    NK_COMMAND_IMAGE,$/;"	e	enum:nk_command_type
NK_COMMAND_LINE	deps/nuklear.h	/^    NK_COMMAND_LINE,$/;"	e	enum:nk_command_type
NK_COMMAND_NOP	deps/nuklear.h	/^    NK_COMMAND_NOP,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON	deps/nuklear.h	/^    NK_COMMAND_POLYGON,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON_FILLED	deps/nuklear.h	/^    NK_COMMAND_POLYGON_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYLINE	deps/nuklear.h	/^    NK_COMMAND_POLYLINE,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT	deps/nuklear.h	/^    NK_COMMAND_RECT,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_FILLED	deps/nuklear.h	/^    NK_COMMAND_RECT_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_MULTI_COLOR	deps/nuklear.h	/^    NK_COMMAND_RECT_MULTI_COLOR,$/;"	e	enum:nk_command_type
NK_COMMAND_SCISSOR	deps/nuklear.h	/^    NK_COMMAND_SCISSOR,$/;"	e	enum:nk_command_type
NK_COMMAND_TEXT	deps/nuklear.h	/^    NK_COMMAND_TEXT,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE	deps/nuklear.h	/^    NK_COMMAND_TRIANGLE,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE_FILLED	deps/nuklear.h	/^    NK_COMMAND_TRIANGLE_FILLED,$/;"	e	enum:nk_command_type
NK_CONFIGURATION_STACK_TYPE	deps/nuklear.h	/^#define NK_CONFIGURATION_STACK_TYPE(/;"	d
NK_CONFIG_STACK	deps/nuklear.h	/^#define NK_CONFIG_STACK(/;"	d
NK_CONTAINER_OF	deps/nuklear.h	/^#define NK_CONTAINER_OF(/;"	d
NK_CONTAINS	deps/nuklear.h	/^#define NK_CONTAINS(/;"	d
NK_CONVERT_COMMAND_BUFFER_FULL	deps/nuklear.h	/^    NK_CONVERT_COMMAND_BUFFER_FULL = NK_FLAG(1),$/;"	e	enum:nk_convert_result
NK_CONVERT_ELEMENT_BUFFER_FULL	deps/nuklear.h	/^    NK_CONVERT_ELEMENT_BUFFER_FULL = NK_FLAG(3)$/;"	e	enum:nk_convert_result
NK_CONVERT_INVALID_PARAM	deps/nuklear.h	/^    NK_CONVERT_INVALID_PARAM = 1,$/;"	e	enum:nk_convert_result
NK_CONVERT_SUCCESS	deps/nuklear.h	/^    NK_CONVERT_SUCCESS = 0,$/;"	e	enum:nk_convert_result
NK_CONVERT_VERTEX_BUFFER_FULL	deps/nuklear.h	/^    NK_CONVERT_VERTEX_BUFFER_FULL = NK_FLAG(2),$/;"	e	enum:nk_convert_result
NK_COORD_PIXEL	deps/nuklear.h	/^    NK_COORD_PIXEL \/* texture coordinates inside font glyphs are in absolute pixel *\/$/;"	e	enum:nk_font_coord_type
NK_COORD_UV	deps/nuklear.h	/^    NK_COORD_UV, \/* texture coordinates inside font glyphs are clamped between 0-1 *\/$/;"	e	enum:nk_font_coord_type
NK_COS	deps/nuklear.h	/^#define NK_COS /;"	d
NK_CURSOR_ARROW	deps/nuklear.h	/^    NK_CURSOR_ARROW,$/;"	e	enum:nk_style_cursor
NK_CURSOR_COUNT	deps/nuklear.h	/^    NK_CURSOR_COUNT$/;"	e	enum:nk_style_cursor
NK_CURSOR_DATA_H	deps/nuklear.h	/^#define NK_CURSOR_DATA_H /;"	d
NK_CURSOR_DATA_W	deps/nuklear.h	/^#define NK_CURSOR_DATA_W /;"	d
NK_CURSOR_MOVE	deps/nuklear.h	/^    NK_CURSOR_MOVE,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_HORIZONTAL	deps/nuklear.h	/^    NK_CURSOR_RESIZE_HORIZONTAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT	deps/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT	deps/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_VERTICAL	deps/nuklear.h	/^    NK_CURSOR_RESIZE_VERTICAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_TEXT	deps/nuklear.h	/^    NK_CURSOR_TEXT,$/;"	e	enum:nk_style_cursor
NK_DEFAULT	deps/nuklear.h	/^#define NK_DEFAULT /;"	d
NK_DEFAULT_COMMAND_BUFFER_SIZE	deps/nuklear.h	/^#define NK_DEFAULT_COMMAND_BUFFER_SIZE /;"	d
NK_DOWN	deps/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_DO_NOT_STOP_ON_NEW_LINE	deps/nuklear.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anonca7851080603
NK_DTOA	deps/nuklear.h	/^#define NK_DTOA /;"	d
NK_DYNAMIC	deps/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_EDIT_ACTIVATED	deps/nuklear.h	/^    NK_EDIT_ACTIVATED   = NK_FLAG(2), \/* edit widget went from state inactive to state active */;"	e	enum:nk_edit_events
NK_EDIT_ACTIVE	deps/nuklear.h	/^    NK_EDIT_ACTIVE      = NK_FLAG(0), \/* edit widget is currently being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_ALLOW_TAB	deps/nuklear.h	/^    NK_EDIT_ALLOW_TAB               = NK_FLAG(3),$/;"	e	enum:nk_edit_flags
NK_EDIT_ALWAYS_INSERT_MODE	deps/nuklear.h	/^    NK_EDIT_ALWAYS_INSERT_MODE      = NK_FLAG(9),$/;"	e	enum:nk_edit_flags
NK_EDIT_AUTO_SELECT	deps/nuklear.h	/^    NK_EDIT_AUTO_SELECT             = NK_FLAG(1),$/;"	e	enum:nk_edit_flags
NK_EDIT_BOX	deps/nuklear.h	/^    NK_EDIT_BOX     = NK_EDIT_ALWAYS_INSERT_MODE| NK_EDIT_SELECTABLE| NK_EDIT_MULTILINE|NK_EDIT_/;"	e	enum:nk_edit_types
NK_EDIT_CLIPBOARD	deps/nuklear.h	/^    NK_EDIT_CLIPBOARD               = NK_FLAG(6),$/;"	e	enum:nk_edit_flags
NK_EDIT_COMMITED	deps/nuklear.h	/^    NK_EDIT_COMMITED    = NK_FLAG(4) \/* edit widget has received an enter and lost focus *\/$/;"	e	enum:nk_edit_events
NK_EDIT_CTRL_ENTER_NEWLINE	deps/nuklear.h	/^    NK_EDIT_CTRL_ENTER_NEWLINE      = NK_FLAG(7),$/;"	e	enum:nk_edit_flags
NK_EDIT_DEACTIVATED	deps/nuklear.h	/^    NK_EDIT_DEACTIVATED = NK_FLAG(3), \/* edit widget went from state active to state inactive */;"	e	enum:nk_edit_events
NK_EDIT_DEFAULT	deps/nuklear.h	/^    NK_EDIT_DEFAULT                 = 0,$/;"	e	enum:nk_edit_flags
NK_EDIT_EDITOR	deps/nuklear.h	/^    NK_EDIT_EDITOR  = NK_EDIT_SELECTABLE|NK_EDIT_MULTILINE|NK_EDIT_ALLOW_TAB| NK_EDIT_CLIPBOARD$/;"	e	enum:nk_edit_types
NK_EDIT_FIELD	deps/nuklear.h	/^    NK_EDIT_FIELD   = NK_EDIT_SIMPLE|NK_EDIT_SELECTABLE|NK_EDIT_CLIPBOARD,$/;"	e	enum:nk_edit_types
NK_EDIT_GOTO_END_ON_ACTIVATE	deps/nuklear.h	/^    NK_EDIT_GOTO_END_ON_ACTIVATE    = NK_FLAG(11)$/;"	e	enum:nk_edit_flags
NK_EDIT_INACTIVE	deps/nuklear.h	/^    NK_EDIT_INACTIVE    = NK_FLAG(1), \/* edit widget is not active and is not being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_MULTILINE	deps/nuklear.h	/^    NK_EDIT_MULTILINE               = NK_FLAG(10),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_CURSOR	deps/nuklear.h	/^    NK_EDIT_NO_CURSOR               = NK_FLAG(4),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_HORIZONTAL_SCROLL	deps/nuklear.h	/^    NK_EDIT_NO_HORIZONTAL_SCROLL    = NK_FLAG(8),$/;"	e	enum:nk_edit_flags
NK_EDIT_READ_ONLY	deps/nuklear.h	/^    NK_EDIT_READ_ONLY               = NK_FLAG(0),$/;"	e	enum:nk_edit_flags
NK_EDIT_SELECTABLE	deps/nuklear.h	/^    NK_EDIT_SELECTABLE              = NK_FLAG(5),$/;"	e	enum:nk_edit_flags
NK_EDIT_SIG_ENTER	deps/nuklear.h	/^    NK_EDIT_SIG_ENTER               = NK_FLAG(2),$/;"	e	enum:nk_edit_flags
NK_EDIT_SIMPLE	deps/nuklear.h	/^    NK_EDIT_SIMPLE  = NK_EDIT_ALWAYS_INSERT_MODE,$/;"	e	enum:nk_edit_types
NK_FILE_LINE	deps/nuklear.h	/^  #define NK_FILE_LINE /;"	d
NK_FILTER_FLOAT	deps/nuklear.h	/^    NK_FILTER_FLOAT$/;"	e	enum:nk_property_filter
NK_FILTER_INT	deps/nuklear.h	/^    NK_FILTER_INT,$/;"	e	enum:nk_property_filter
NK_FIXED	deps/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_FLAG	deps/nuklear.h	/^#define NK_FLAG(/;"	d
NK_FLAGS_STACK_SIZE	deps/nuklear.h	/^#define NK_FLAGS_STACK_SIZE /;"	d
NK_FLOAT_PRECISION	deps/nuklear.h	/^#define NK_FLOAT_PRECISION /;"	d
NK_FLOAT_STACK_SIZE	deps/nuklear.h	/^#define NK_FLOAT_STACK_SIZE /;"	d
NK_FONT_ATLAS_ALPHA8	deps/nuklear.h	/^    NK_FONT_ATLAS_ALPHA8,$/;"	e	enum:nk_font_atlas_format
NK_FONT_ATLAS_RGBA32	deps/nuklear.h	/^    NK_FONT_ATLAS_RGBA32$/;"	e	enum:nk_font_atlas_format
NK_FONT_STACK_SIZE	deps/nuklear.h	/^#define NK_FONT_STACK_SIZE /;"	d
NK_FORMAT_B8G8R8A8	deps/nuklear.h	/^    NK_FORMAT_B8G8R8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_BEGIN	deps/nuklear.h	/^NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_END	deps/nuklear.h	/^NK_FORMAT_COLOR_END = NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COUNT	deps/nuklear.h	/^    NK_FORMAT_COUNT$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_DOUBLE	deps/nuklear.h	/^    NK_FORMAT_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_FLOAT	deps/nuklear.h	/^    NK_FORMAT_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16	deps/nuklear.h	/^    NK_FORMAT_R16G15B16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16A16	deps/nuklear.h	/^    NK_FORMAT_R16G15B16A16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32	deps/nuklear.h	/^    NK_FORMAT_R32G32B32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32	deps/nuklear.h	/^    NK_FORMAT_R32G32B32A32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_DOUBLE	deps/nuklear.h	/^    NK_FORMAT_R32G32B32A32_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_FLOAT	deps/nuklear.h	/^    NK_FORMAT_R32G32B32A32_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8	deps/nuklear.h	/^    NK_FORMAT_R8G8B8 = NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8A8	deps/nuklear.h	/^    NK_FORMAT_R8G8B8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGB32	deps/nuklear.h	/^    NK_FORMAT_RGB32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGBA32	deps/nuklear.h	/^    NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SCHAR	deps/nuklear.h	/^    NK_FORMAT_SCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SINT	deps/nuklear.h	/^    NK_FORMAT_SINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SSHORT	deps/nuklear.h	/^    NK_FORMAT_SSHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UCHAR	deps/nuklear.h	/^    NK_FORMAT_UCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UINT	deps/nuklear.h	/^    NK_FORMAT_UINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_USHORT	deps/nuklear.h	/^    NK_FORMAT_USHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_GLFW3_DEFAULT	deps/nuklear_glfw_gl2.h	/^    NK_GLFW3_DEFAULT = 0,$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_INSTALL_CALLBACKS	deps/nuklear_glfw_gl2.h	/^    NK_GLFW3_INSTALL_CALLBACKS$/;"	e	enum:nk_glfw_init_state
NK_GLFW_DOUBLE_CLICK_HI	deps/nuklear_glfw_gl2.h	/^#define NK_GLFW_DOUBLE_CLICK_HI /;"	d
NK_GLFW_DOUBLE_CLICK_LO	deps/nuklear_glfw_gl2.h	/^#define NK_GLFW_DOUBLE_CLICK_LO /;"	d
NK_GLFW_GL2_H_	deps/nuklear_glfw_gl2.h	/^#define NK_GLFW_GL2_H_$/;"	d
NK_GLFW_GL2_IMPLEMENTATION	tests/gamma.c	/^#define NK_GLFW_GL2_IMPLEMENTATION$/;"	d	file:
NK_GLFW_GL2_IMPLEMENTATION	tests/inputlag.c	/^#define NK_GLFW_GL2_IMPLEMENTATION$/;"	d	file:
NK_GLFW_GL2_IMPLEMENTATION	tests/joysticks.c	/^#define NK_GLFW_GL2_IMPLEMENTATION$/;"	d	file:
NK_GLFW_GL2_IMPLEMENTATION	tests/opacity.c	/^#define NK_GLFW_GL2_IMPLEMENTATION$/;"	d	file:
NK_GLFW_TEXT_MAX	deps/nuklear_glfw_gl2.h	/^#define NK_GLFW_TEXT_MAX /;"	d
NK_GLOBAL	deps/nuklear.h	/^#define NK_GLOBAL /;"	d
NK_HEADER_LEFT	deps/nuklear.h	/^    NK_HEADER_LEFT,$/;"	e	enum:nk_style_header_align
NK_HEADER_RIGHT	deps/nuklear.h	/^    NK_HEADER_RIGHT$/;"	e	enum:nk_style_header_align
NK_HIDDEN	deps/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_HORIZONTAL	deps/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_IMPLEMENTATION	tests/gamma.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	tests/inputlag.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	tests/joysticks.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	tests/opacity.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_INBOX	deps/nuklear.h	/^#define NK_INBOX(/;"	d
NK_INCLUDE_DEFAULT_ALLOCATOR	tests/gamma.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	tests/inputlag.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	tests/joysticks.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	tests/opacity.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	tests/gamma.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	tests/inputlag.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	tests/joysticks.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	tests/opacity.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	tests/gamma.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	tests/inputlag.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	tests/joysticks.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	tests/opacity.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FONT_BAKING	tests/gamma.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	tests/inputlag.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	tests/joysticks.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	tests/opacity.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	tests/gamma.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	tests/inputlag.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	tests/joysticks.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	tests/opacity.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	tests/gamma.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	tests/inputlag.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	tests/joysticks.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	tests/opacity.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INPUT_MAX	deps/nuklear.h	/^  #define NK_INPUT_MAX /;"	d
NK_INSERT_BACK	deps/nuklear.h	/^    NK_INSERT_BACK, \/* inserts window into the back of list (front of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INSERT_FRONT	deps/nuklear.h	/^    NK_INSERT_FRONT \/* inserts window into the front of list (back of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INT16	deps/nuklear.h	/^ #define NK_INT16 /;"	d
NK_INT32	deps/nuklear.h	/^ #define NK_INT32 /;"	d
NK_INT8	deps/nuklear.h	/^ #define NK_INT8 /;"	d
NK_INTERN	deps/nuklear.h	/^#define NK_INTERN /;"	d
NK_INTERNAL_H	deps/nuklear.h	/^#define NK_INTERNAL_H$/;"	d
NK_INTERSECT	deps/nuklear.h	/^#define NK_INTERSECT(/;"	d
NK_KEY_BACKSPACE	deps/nuklear.h	/^    NK_KEY_BACKSPACE,$/;"	e	enum:nk_keys
NK_KEY_COPY	deps/nuklear.h	/^    NK_KEY_COPY,$/;"	e	enum:nk_keys
NK_KEY_CTRL	deps/nuklear.h	/^    NK_KEY_CTRL,$/;"	e	enum:nk_keys
NK_KEY_CUT	deps/nuklear.h	/^    NK_KEY_CUT,$/;"	e	enum:nk_keys
NK_KEY_DEL	deps/nuklear.h	/^    NK_KEY_DEL,$/;"	e	enum:nk_keys
NK_KEY_DOWN	deps/nuklear.h	/^    NK_KEY_DOWN,$/;"	e	enum:nk_keys
NK_KEY_ENTER	deps/nuklear.h	/^    NK_KEY_ENTER,$/;"	e	enum:nk_keys
NK_KEY_LEFT	deps/nuklear.h	/^    NK_KEY_LEFT,$/;"	e	enum:nk_keys
NK_KEY_MAX	deps/nuklear.h	/^    NK_KEY_MAX$/;"	e	enum:nk_keys
NK_KEY_NONE	deps/nuklear.h	/^    NK_KEY_NONE,$/;"	e	enum:nk_keys
NK_KEY_PASTE	deps/nuklear.h	/^    NK_KEY_PASTE,$/;"	e	enum:nk_keys
NK_KEY_RIGHT	deps/nuklear.h	/^    NK_KEY_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_DOWN	deps/nuklear.h	/^    NK_KEY_SCROLL_DOWN,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_END	deps/nuklear.h	/^    NK_KEY_SCROLL_END,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_START	deps/nuklear.h	/^    NK_KEY_SCROLL_START,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_UP	deps/nuklear.h	/^    NK_KEY_SCROLL_UP,$/;"	e	enum:nk_keys
NK_KEY_SHIFT	deps/nuklear.h	/^    NK_KEY_SHIFT,$/;"	e	enum:nk_keys
NK_KEY_TAB	deps/nuklear.h	/^    NK_KEY_TAB,$/;"	e	enum:nk_keys
NK_KEY_TEXT_END	deps/nuklear.h	/^    NK_KEY_TEXT_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_INSERT_MODE	deps/nuklear.h	/^    NK_KEY_TEXT_INSERT_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_END	deps/nuklear.h	/^    NK_KEY_TEXT_LINE_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_START	deps/nuklear.h	/^    NK_KEY_TEXT_LINE_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REDO	deps/nuklear.h	/^    NK_KEY_TEXT_REDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REPLACE_MODE	deps/nuklear.h	/^    NK_KEY_TEXT_REPLACE_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_RESET_MODE	deps/nuklear.h	/^    NK_KEY_TEXT_RESET_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_SELECT_ALL	deps/nuklear.h	/^    NK_KEY_TEXT_SELECT_ALL,$/;"	e	enum:nk_keys
NK_KEY_TEXT_START	deps/nuklear.h	/^    NK_KEY_TEXT_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_UNDO	deps/nuklear.h	/^    NK_KEY_TEXT_UNDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_LEFT	deps/nuklear.h	/^    NK_KEY_TEXT_WORD_LEFT,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_RIGHT	deps/nuklear.h	/^    NK_KEY_TEXT_WORD_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_UP	deps/nuklear.h	/^    NK_KEY_UP,$/;"	e	enum:nk_keys
NK_LAYOUT_COUNT	deps/nuklear.h	/^    NK_LAYOUT_COUNT$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC	deps/nuklear.h	/^    NK_LAYOUT_DYNAMIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FIXED	deps/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FIXED = 0,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FREE	deps/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_ROW	deps/nuklear.h	/^    NK_LAYOUT_DYNAMIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC	deps/nuklear.h	/^    NK_LAYOUT_STATIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FIXED	deps/nuklear.h	/^    NK_LAYOUT_STATIC_FIXED,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FREE	deps/nuklear.h	/^    NK_LAYOUT_STATIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_ROW	deps/nuklear.h	/^    NK_LAYOUT_STATIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_TEMPLATE	deps/nuklear.h	/^    NK_LAYOUT_TEMPLATE,$/;"	e	enum:nk_panel_row_layout_type
NK_LEADING_LETTER_PENALTY	deps/nuklear.h	/^    #define NK_LEADING_LETTER_PENALTY /;"	d
NK_LEFT	deps/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_LEN	deps/nuklear.h	/^#define NK_LEN(/;"	d
NK_LIB	deps/nuklear.h	/^    #define NK_LIB /;"	d
NK_MACRO_STRINGIFY	deps/nuklear.h	/^#define NK_MACRO_STRINGIFY(/;"	d
NK_MAX	deps/nuklear.h	/^#define NK_MAX(/;"	d
NK_MAXIMIZED	deps/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MAX_FLOAT_PRECISION	deps/nuklear.h	/^#define NK_MAX_FLOAT_PRECISION /;"	d
NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS	deps/nuklear.h	/^#define NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS /;"	d
NK_MAX_LEADING_LETTER_PENALTY	deps/nuklear.h	/^    #define NK_MAX_LEADING_LETTER_PENALTY /;"	d
NK_MAX_NUMBER_BUFFER	deps/nuklear.h	/^  #define NK_MAX_NUMBER_BUFFER /;"	d
NK_MAX_SORT_STACK	deps/nuklear.h	/^    #define NK_MAX_SORT_STACK /;"	d
NK_MEMCPY	deps/nuklear.h	/^#define NK_MEMCPY /;"	d
NK_MEMSET	deps/nuklear.h	/^#define NK_MEMSET /;"	d
NK_MIN	deps/nuklear.h	/^#define NK_MIN(/;"	d
NK_MINIMIZED	deps/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MODIFIABLE	deps/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_NUKLEAR_H_	deps/nuklear.h	/^#define NK_NUKLEAR_H_$/;"	d
NK_OFFSETOF	deps/nuklear.h	/^#define NK_OFFSETOF(/;"	d
NK_PANEL_COMBO	deps/nuklear.h	/^    NK_PANEL_COMBO      = NK_FLAG(5),$/;"	e	enum:nk_panel_type
NK_PANEL_CONTEXTUAL	deps/nuklear.h	/^    NK_PANEL_CONTEXTUAL = NK_FLAG(4),$/;"	e	enum:nk_panel_type
NK_PANEL_GROUP	deps/nuklear.h	/^    NK_PANEL_GROUP      = NK_FLAG(1),$/;"	e	enum:nk_panel_type
NK_PANEL_MENU	deps/nuklear.h	/^    NK_PANEL_MENU       = NK_FLAG(6),$/;"	e	enum:nk_panel_type
NK_PANEL_NONE	deps/nuklear.h	/^    NK_PANEL_NONE       = 0,$/;"	e	enum:nk_panel_type
NK_PANEL_POPUP	deps/nuklear.h	/^    NK_PANEL_POPUP      = NK_FLAG(2),$/;"	e	enum:nk_panel_type
NK_PANEL_SET_NONBLOCK	deps/nuklear.h	/^    NK_PANEL_SET_NONBLOCK = NK_PANEL_CONTEXTUAL|NK_PANEL_COMBO|NK_PANEL_MENU|NK_PANEL_TOOLTIP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_POPUP	deps/nuklear.h	/^    NK_PANEL_SET_POPUP = NK_PANEL_SET_NONBLOCK|NK_PANEL_POPUP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_SUB	deps/nuklear.h	/^    NK_PANEL_SET_SUB = NK_PANEL_SET_POPUP|NK_PANEL_GROUP$/;"	e	enum:nk_panel_set
NK_PANEL_TOOLTIP	deps/nuklear.h	/^    NK_PANEL_TOOLTIP    = NK_FLAG(7)$/;"	e	enum:nk_panel_type
NK_PANEL_WINDOW	deps/nuklear.h	/^    NK_PANEL_WINDOW     = NK_FLAG(0),$/;"	e	enum:nk_panel_type
NK_PI	deps/nuklear.h	/^#define NK_PI /;"	d
NK_POINTER_TYPE	deps/nuklear.h	/^ #define NK_POINTER_TYPE /;"	d
NK_POOL_DEFAULT_CAPACITY	deps/nuklear.h	/^#define NK_POOL_DEFAULT_CAPACITY /;"	d
NK_POPUP_DYNAMIC	deps/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_POPUP_STATIC	deps/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_PRINTF_FORMAT_STRING	deps/nuklear.h	/^    #define NK_PRINTF_FORMAT_STRING /;"	d
NK_PRINTF_VALIST_FUNC	deps/nuklear.h	/^    #define NK_PRINTF_VALIST_FUNC(/;"	d
NK_PRINTF_VARARG_FUNC	deps/nuklear.h	/^    #define NK_PRINTF_VARARG_FUNC(/;"	d
NK_PROPERTY_DEFAULT	deps/nuklear.h	/^    NK_PROPERTY_DEFAULT,$/;"	e	enum:nk_property_status
NK_PROPERTY_DOUBLE	deps/nuklear.h	/^    NK_PROPERTY_DOUBLE$/;"	e	enum:nk_property_kind
NK_PROPERTY_DRAG	deps/nuklear.h	/^    NK_PROPERTY_DRAG$/;"	e	enum:nk_property_status
NK_PROPERTY_EDIT	deps/nuklear.h	/^    NK_PROPERTY_EDIT,$/;"	e	enum:nk_property_status
NK_PROPERTY_FLOAT	deps/nuklear.h	/^    NK_PROPERTY_FLOAT,$/;"	e	enum:nk_property_kind
NK_PROPERTY_INT	deps/nuklear.h	/^    NK_PROPERTY_INT,$/;"	e	enum:nk_property_kind
NK_PTR_TO_UINT	deps/nuklear.h	/^# define NK_PTR_TO_UINT(/;"	d
NK_RGB	deps/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RGBA	deps/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RIGHT	deps/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_ROTL	deps/nuklear.h	/^    #define NK_ROTL(/;"	d
NK_RP_HEURISTIC	deps/nuklear.h	/^enum NK_RP_HEURISTIC {$/;"	g
NK_RP_HEURISTIC_Skyline_BF_sortHeight	deps/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_BF_sortHeight$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_HEURISTIC_Skyline_BL_sortHeight	deps/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_BL_sortHeight = NK_RP_HEURISTIC_Skyline_default,$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_HEURISTIC_Skyline_default	deps/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_default=0,$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_INIT_STATE	deps/nuklear.h	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	g
NK_RP__INIT_skyline	deps/nuklear.h	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	e	enum:NK_RP_INIT_STATE
NK_RP__MAXVAL	deps/nuklear.h	/^#define NK_RP__MAXVAL /;"	d
NK_SATURATE	deps/nuklear.h	/^#define NK_SATURATE(/;"	d
NK_SCHAR_MAX	deps/nuklear.h	/^#define NK_SCHAR_MAX /;"	d
NK_SCHAR_MIN	deps/nuklear.h	/^#define NK_SCHAR_MIN /;"	d
NK_SCROLLBAR_HIDING_TIMEOUT	deps/nuklear.h	/^  #define NK_SCROLLBAR_HIDING_TIMEOUT /;"	d
NK_SEPARATOR_BONUS	deps/nuklear.h	/^    #define NK_SEPARATOR_BONUS /;"	d
NK_SHOWN	deps/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_SIN	deps/nuklear.h	/^#define NK_SIN /;"	d
NK_SINGLE_FILE	deps/nuklear.h	/^  #define NK_SINGLE_FILE$/;"	d
NK_SINT_MAX	deps/nuklear.h	/^#define NK_SINT_MAX /;"	d
NK_SINT_MIN	deps/nuklear.h	/^#define NK_SINT_MIN /;"	d
NK_SIZE_TYPE	deps/nuklear.h	/^ #define NK_SIZE_TYPE /;"	d
NK_SQRT	deps/nuklear.h	/^#define NK_SQRT /;"	d
NK_SSHORT_MAX	deps/nuklear.h	/^#define NK_SSHORT_MAX /;"	d
NK_SSHORT_MIN	deps/nuklear.h	/^#define NK_SSHORT_MIN /;"	d
NK_STATIC	deps/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_STATIC_ASSERT	deps/nuklear.h	/^  #define NK_STATIC_ASSERT(/;"	d
NK_STOP_ON_NEW_LINE	deps/nuklear.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anonca7851080603
NK_STORAGE	deps/nuklear.h	/^#define NK_STORAGE /;"	d
NK_STRINGIFY	deps/nuklear.h	/^#define NK_STRINGIFY(/;"	d
NK_STRING_JOIN	deps/nuklear.h	/^#define NK_STRING_JOIN(/;"	d
NK_STRING_JOIN_DELAY	deps/nuklear.h	/^#define NK_STRING_JOIN_DELAY(/;"	d
NK_STRING_JOIN_IMMEDIATE	deps/nuklear.h	/^#define NK_STRING_JOIN_IMMEDIATE(/;"	d
NK_STROKE_CLOSED	deps/nuklear.h	/^    NK_STROKE_CLOSED = nk_true$/;"	e	enum:nk_draw_list_stroke
NK_STROKE_OPEN	deps/nuklear.h	/^    NK_STROKE_OPEN = nk_false,$/;"	e	enum:nk_draw_list_stroke
NK_STRTOD	deps/nuklear.h	/^#define NK_STRTOD /;"	d
NK_STYLE_ITEM_COLOR	deps/nuklear.h	/^    NK_STYLE_ITEM_COLOR,$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_IMAGE	deps/nuklear.h	/^    NK_STYLE_ITEM_IMAGE$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_STACK_SIZE	deps/nuklear.h	/^#define NK_STYLE_ITEM_STACK_SIZE /;"	d
NK_STYLE_POP_IMPLEMENATION	deps/nuklear.h	/^#define NK_STYLE_POP_IMPLEMENATION(/;"	d
NK_STYLE_PUSH_IMPLEMENATION	deps/nuklear.h	/^#define NK_STYLE_PUSH_IMPLEMENATION(/;"	d
NK_STYLE_PUSH_IMPLEMENATION	deps/nuklear.h	/^NK_API int NK_STYLE_PUSH_IMPLEMENATION(struct nk, style_item, style_items)$/;"	f	typeref:typename:NK_API int
NK_SYMBOL_CIRCLE_OUTLINE	deps/nuklear.h	/^    NK_SYMBOL_CIRCLE_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_CIRCLE_SOLID	deps/nuklear.h	/^    NK_SYMBOL_CIRCLE_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MAX	deps/nuklear.h	/^    NK_SYMBOL_MAX$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MINUS	deps/nuklear.h	/^    NK_SYMBOL_MINUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_NONE	deps/nuklear.h	/^    NK_SYMBOL_NONE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_PLUS	deps/nuklear.h	/^    NK_SYMBOL_PLUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_OUTLINE	deps/nuklear.h	/^    NK_SYMBOL_RECT_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_SOLID	deps/nuklear.h	/^    NK_SYMBOL_RECT_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_DOWN	deps/nuklear.h	/^    NK_SYMBOL_TRIANGLE_DOWN,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_LEFT	deps/nuklear.h	/^    NK_SYMBOL_TRIANGLE_LEFT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_RIGHT	deps/nuklear.h	/^    NK_SYMBOL_TRIANGLE_RIGHT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_UP	deps/nuklear.h	/^    NK_SYMBOL_TRIANGLE_UP,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_UNDERSCORE	deps/nuklear.h	/^    NK_SYMBOL_UNDERSCORE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_X	deps/nuklear.h	/^    NK_SYMBOL_X,$/;"	e	enum:nk_symbol_type
NK_TEXTEDIT_UNDOCHARCOUNT	deps/nuklear.h	/^#define NK_TEXTEDIT_UNDOCHARCOUNT /;"	d
NK_TEXTEDIT_UNDOSTATECOUNT	deps/nuklear.h	/^#define NK_TEXTEDIT_UNDOSTATECOUNT /;"	d
NK_TEXT_ALIGN_BOTTOM	deps/nuklear.h	/^    NK_TEXT_ALIGN_BOTTOM      = 0x20$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_CENTERED	deps/nuklear.h	/^    NK_TEXT_ALIGN_CENTERED    = 0x02,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_LEFT	deps/nuklear.h	/^    NK_TEXT_ALIGN_LEFT        = 0x01,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_MIDDLE	deps/nuklear.h	/^    NK_TEXT_ALIGN_MIDDLE      = 0x10,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_RIGHT	deps/nuklear.h	/^    NK_TEXT_ALIGN_RIGHT       = 0x04,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_TOP	deps/nuklear.h	/^    NK_TEXT_ALIGN_TOP         = 0x08,$/;"	e	enum:nk_text_align
NK_TEXT_CENTERED	deps/nuklear.h	/^    NK_TEXT_CENTERED    = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_CENTERED,$/;"	e	enum:nk_text_alignment
NK_TEXT_EDIT_MODE_INSERT	deps/nuklear.h	/^    NK_TEXT_EDIT_MODE_INSERT,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_REPLACE	deps/nuklear.h	/^    NK_TEXT_EDIT_MODE_REPLACE$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_VIEW	deps/nuklear.h	/^    NK_TEXT_EDIT_MODE_VIEW,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MULTI_LINE	deps/nuklear.h	/^    NK_TEXT_EDIT_MULTI_LINE$/;"	e	enum:nk_text_edit_type
NK_TEXT_EDIT_SINGLE_LINE	deps/nuklear.h	/^    NK_TEXT_EDIT_SINGLE_LINE,$/;"	e	enum:nk_text_edit_type
NK_TEXT_HAS_SELECTION	deps/nuklear.h	/^#define NK_TEXT_HAS_SELECTION(/;"	d
NK_TEXT_LEFT	deps/nuklear.h	/^    NK_TEXT_LEFT        = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_LEFT,$/;"	e	enum:nk_text_alignment
NK_TEXT_RIGHT	deps/nuklear.h	/^    NK_TEXT_RIGHT       = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_RIGHT$/;"	e	enum:nk_text_alignment
NK_TLOOP	deps/nuklear.h	/^    #define NK_TLOOP(/;"	d
NK_TLOOP1	deps/nuklear.h	/^    #define NK_TLOOP1(/;"	d
NK_TOGGLE_CHECK	deps/nuklear.h	/^    NK_TOGGLE_CHECK,$/;"	e	enum:nk_toggle_type
NK_TOGGLE_OPTION	deps/nuklear.h	/^    NK_TOGGLE_OPTION$/;"	e	enum:nk_toggle_type
NK_TO_HEX	deps/nuklear.h	/^    #define NK_TO_HEX(/;"	d
NK_TREE_NODE	deps/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TREE_TAB	deps/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TT_MACSTYLE_BOLD	deps/nuklear.h	/^#define NK_TT_MACSTYLE_BOLD /;"	d
NK_TT_MACSTYLE_DONTCARE	deps/nuklear.h	/^#define NK_TT_MACSTYLE_DONTCARE /;"	d
NK_TT_MACSTYLE_ITALIC	deps/nuklear.h	/^#define NK_TT_MACSTYLE_ITALIC /;"	d
NK_TT_MACSTYLE_NONE	deps/nuklear.h	/^#define NK_TT_MACSTYLE_NONE /;"	d
NK_TT_MACSTYLE_UNDERSCORE	deps/nuklear.h	/^#define NK_TT_MACSTYLE_UNDERSCORE /;"	d
NK_TT_MAC_EID_ARABIC	deps/nuklear.h	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anonca7851080d03
NK_TT_MAC_EID_CHINESE_TRAD	deps/nuklear.h	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anonca7851080d03
NK_TT_MAC_EID_GREEK	deps/nuklear.h	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anonca7851080d03
NK_TT_MAC_EID_HEBREW	deps/nuklear.h	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anonca7851080d03
NK_TT_MAC_EID_JAPANESE	deps/nuklear.h	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anonca7851080d03
NK_TT_MAC_EID_KOREAN	deps/nuklear.h	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anonca7851080d03
NK_TT_MAC_EID_ROMAN	deps/nuklear.h	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anonca7851080d03
NK_TT_MAC_EID_RUSSIAN	deps/nuklear.h	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anonca7851080d03
NK_TT_MAC_LANG_ARABIC	deps/nuklear.h	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_CHINESE_SIMPLIFIED	deps/nuklear.h	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_CHINESE_TRAD	deps/nuklear.h	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_DUTCH	deps/nuklear.h	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_ENGLISH	deps/nuklear.h	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_FRENCH	deps/nuklear.h	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_GERMAN	deps/nuklear.h	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_HEBREW	deps/nuklear.h	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_ITALIAN	deps/nuklear.h	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_JAPANESE	deps/nuklear.h	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_KOREAN	deps/nuklear.h	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_RUSSIAN	deps/nuklear.h	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_SPANISH	deps/nuklear.h	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anonca7851080f03
NK_TT_MAC_LANG_SWEDISH	deps/nuklear.h	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anonca7851080f03
NK_TT_MAX_OVERSAMPLE	deps/nuklear.h	/^#define NK_TT_MAX_OVERSAMPLE /;"	d
NK_TT_MS_EID_SHIFTJIS	deps/nuklear.h	/^   NK_TT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anonca7851080c03
NK_TT_MS_EID_SYMBOL	deps/nuklear.h	/^   NK_TT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anonca7851080c03
NK_TT_MS_EID_UNICODE_BMP	deps/nuklear.h	/^   NK_TT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anonca7851080c03
NK_TT_MS_EID_UNICODE_FULL	deps/nuklear.h	/^   NK_TT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anonca7851080c03
NK_TT_MS_LANG_CHINESE	deps/nuklear.h	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_DUTCH	deps/nuklear.h	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_ENGLISH	deps/nuklear.h	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_FRENCH	deps/nuklear.h	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_GERMAN	deps/nuklear.h	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_HEBREW	deps/nuklear.h	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_ITALIAN	deps/nuklear.h	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_JAPANESE	deps/nuklear.h	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_KOREAN	deps/nuklear.h	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_RUSSIAN	deps/nuklear.h	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_SPANISH	deps/nuklear.h	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anonca7851080e03
NK_TT_MS_LANG_SWEDISH	deps/nuklear.h	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anonca7851080e03
NK_TT_PLATFORM_ID_ISO	deps/nuklear.h	/^   NK_TT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anonca7851080a03
NK_TT_PLATFORM_ID_MAC	deps/nuklear.h	/^   NK_TT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anonca7851080a03
NK_TT_PLATFORM_ID_MICROSOFT	deps/nuklear.h	/^   NK_TT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anonca7851080a03
NK_TT_PLATFORM_ID_UNICODE	deps/nuklear.h	/^   NK_TT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anonca7851080a03
NK_TT_UNICODE_EID_ISO_10646	deps/nuklear.h	/^   NK_TT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anonca7851080b03
NK_TT_UNICODE_EID_UNICODE_1_0	deps/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anonca7851080b03
NK_TT_UNICODE_EID_UNICODE_1_1	deps/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anonca7851080b03
NK_TT_UNICODE_EID_UNICODE_2_0_BMP	deps/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anonca7851080b03
NK_TT_UNICODE_EID_UNICODE_2_0_FULL	deps/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anonca7851080b03
NK_TT__COMPARE	deps/nuklear.h	/^    #define NK_TT__COMPARE(/;"	d
NK_TT__OVER_MASK	deps/nuklear.h	/^#define NK_TT__OVER_MASK /;"	d
NK_TT_vcurve	deps/nuklear.h	/^  NK_TT_vcurve$/;"	e	enum:__anonca7851080903
NK_TT_vline	deps/nuklear.h	/^  NK_TT_vline,$/;"	e	enum:__anonca7851080903
NK_TT_vmove	deps/nuklear.h	/^  NK_TT_vmove=1,$/;"	e	enum:__anonca7851080903
NK_UCHAR_MAX	deps/nuklear.h	/^#define NK_UCHAR_MAX /;"	d
NK_UCHAR_MIN	deps/nuklear.h	/^#define NK_UCHAR_MIN /;"	d
NK_UINT16	deps/nuklear.h	/^ #define NK_UINT16 /;"	d
NK_UINT32	deps/nuklear.h	/^ #define NK_UINT32 /;"	d
NK_UINT8	deps/nuklear.h	/^ #define NK_UINT8 /;"	d
NK_UINT_MAX	deps/nuklear.h	/^#define NK_UINT_MAX /;"	d
NK_UINT_MIN	deps/nuklear.h	/^#define NK_UINT_MIN /;"	d
NK_UINT_TO_PTR	deps/nuklear.h	/^# define NK_UINT_TO_PTR(/;"	d
NK_UNDEFINED	deps/nuklear.h	/^#define NK_UNDEFINED /;"	d
NK_UNIQUE_NAME	deps/nuklear.h	/^  #define NK_UNIQUE_NAME(/;"	d
NK_UNMATCHED_LETTER_PENALTY	deps/nuklear.h	/^    #define NK_UNMATCHED_LETTER_PENALTY /;"	d
NK_UNUSED	deps/nuklear.h	/^#define NK_UNUSED(/;"	d
NK_UP	deps/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_USHORT_MAX	deps/nuklear.h	/^#define NK_USHORT_MAX /;"	d
NK_USHORT_MIN	deps/nuklear.h	/^#define NK_USHORT_MIN /;"	d
NK_UTF_INVALID	deps/nuklear.h	/^#define NK_UTF_INVALID /;"	d
NK_UTF_SIZE	deps/nuklear.h	/^#define NK_UTF_SIZE /;"	d
NK_VALUE_PAGE_CAPACITY	deps/nuklear.h	/^#define NK_VALUE_PAGE_CAPACITY /;"	d
NK_VECTOR_STACK_SIZE	deps/nuklear.h	/^#define NK_VECTOR_STACK_SIZE /;"	d
NK_VERTEX_ATTRIBUTE_COUNT	deps/nuklear.h	/^    NK_VERTEX_ATTRIBUTE_COUNT$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_COLOR	deps/nuklear.h	/^    NK_VERTEX_COLOR,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_LAYOUT_END	deps/nuklear.h	/^#define NK_VERTEX_LAYOUT_END /;"	d
NK_VERTEX_POSITION	deps/nuklear.h	/^    NK_VERTEX_POSITION,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_TEXCOORD	deps/nuklear.h	/^    NK_VERTEX_TEXCOORD,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTICAL	deps/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_VSNPRINTF	deps/nuklear.h	/^      #define NK_VSNPRINTF(/;"	d
NK_VSNPRINTF	deps/nuklear.h	/^    #define NK_VSNPRINTF(/;"	d
NK_WIDGET_INVALID	deps/nuklear.h	/^    NK_WIDGET_INVALID, \/* The widget cannot be seen and is completely out of view *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_ROM	deps/nuklear.h	/^    NK_WIDGET_ROM \/* The widget is partially visible and cannot be updated *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_STATE_ACTIVE	deps/nuklear.h	/^    NK_WIDGET_STATE_ACTIVE      = NK_WIDGET_STATE_ACTIVED|NK_WIDGET_STATE_MODIFIED \/* widget is/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ACTIVED	deps/nuklear.h	/^    NK_WIDGET_STATE_ACTIVED     = NK_FLAG(5),\/* widget is currently activated *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ENTERED	deps/nuklear.h	/^    NK_WIDGET_STATE_ENTERED     = NK_FLAG(3), \/* widget has been hovered on the current frame */;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVER	deps/nuklear.h	/^    NK_WIDGET_STATE_HOVER       = NK_FLAG(4), \/* widget is being hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVERED	deps/nuklear.h	/^    NK_WIDGET_STATE_HOVERED     = NK_WIDGET_STATE_HOVER|NK_WIDGET_STATE_MODIFIED, \/* widget is /;"	e	enum:nk_widget_states
NK_WIDGET_STATE_INACTIVE	deps/nuklear.h	/^    NK_WIDGET_STATE_INACTIVE    = NK_FLAG(2), \/* widget is neither active nor hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_LEFT	deps/nuklear.h	/^    NK_WIDGET_STATE_LEFT        = NK_FLAG(6), \/* widget is from this frame on not hovered anymo/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_MODIFIED	deps/nuklear.h	/^    NK_WIDGET_STATE_MODIFIED    = NK_FLAG(1),$/;"	e	enum:nk_widget_states
NK_WIDGET_VALID	deps/nuklear.h	/^    NK_WIDGET_VALID, \/* The widget is completely inside the window and can be updated and drawn/;"	e	enum:nk_widget_layout_states
NK_WINDOW_BACKGROUND	deps/nuklear.h	/^    NK_WINDOW_BACKGROUND        = NK_FLAG(8),$/;"	e	enum:nk_panel_flags
NK_WINDOW_BORDER	deps/nuklear.h	/^    NK_WINDOW_BORDER            = NK_FLAG(0),$/;"	e	enum:nk_panel_flags
NK_WINDOW_CLOSABLE	deps/nuklear.h	/^    NK_WINDOW_CLOSABLE          = NK_FLAG(3),$/;"	e	enum:nk_panel_flags
NK_WINDOW_CLOSED	deps/nuklear.h	/^    NK_WINDOW_CLOSED        = NK_FLAG(14),$/;"	e	enum:nk_window_flags
NK_WINDOW_DYNAMIC	deps/nuklear.h	/^    NK_WINDOW_DYNAMIC       = NK_WINDOW_PRIVATE,$/;"	e	enum:nk_window_flags
NK_WINDOW_HIDDEN	deps/nuklear.h	/^    NK_WINDOW_HIDDEN        = NK_FLAG(13),$/;"	e	enum:nk_window_flags
NK_WINDOW_MAX_NAME	deps/nuklear.h	/^#define NK_WINDOW_MAX_NAME /;"	d
NK_WINDOW_MINIMIZABLE	deps/nuklear.h	/^    NK_WINDOW_MINIMIZABLE       = NK_FLAG(4),$/;"	e	enum:nk_panel_flags
NK_WINDOW_MINIMIZED	deps/nuklear.h	/^    NK_WINDOW_MINIMIZED     = NK_FLAG(15),$/;"	e	enum:nk_window_flags
NK_WINDOW_MOVABLE	deps/nuklear.h	/^    NK_WINDOW_MOVABLE           = NK_FLAG(1),$/;"	e	enum:nk_panel_flags
NK_WINDOW_NOT_INTERACTIVE	deps/nuklear.h	/^    NK_WINDOW_NOT_INTERACTIVE = NK_WINDOW_ROM|NK_WINDOW_NO_INPUT,$/;"	e	enum:nk_window_flags
NK_WINDOW_NO_INPUT	deps/nuklear.h	/^    NK_WINDOW_NO_INPUT          = NK_FLAG(10)$/;"	e	enum:nk_panel_flags
NK_WINDOW_NO_SCROLLBAR	deps/nuklear.h	/^    NK_WINDOW_NO_SCROLLBAR      = NK_FLAG(5),$/;"	e	enum:nk_panel_flags
NK_WINDOW_PRIVATE	deps/nuklear.h	/^    NK_WINDOW_PRIVATE       = NK_FLAG(11),$/;"	e	enum:nk_window_flags
NK_WINDOW_REMOVE_ROM	deps/nuklear.h	/^    NK_WINDOW_REMOVE_ROM    = NK_FLAG(16)$/;"	e	enum:nk_window_flags
NK_WINDOW_ROM	deps/nuklear.h	/^    NK_WINDOW_ROM           = NK_FLAG(12),$/;"	e	enum:nk_window_flags
NK_WINDOW_SCALABLE	deps/nuklear.h	/^    NK_WINDOW_SCALABLE          = NK_FLAG(2),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCALE_LEFT	deps/nuklear.h	/^    NK_WINDOW_SCALE_LEFT        = NK_FLAG(9),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCROLL_AUTO_HIDE	deps/nuklear.h	/^    NK_WINDOW_SCROLL_AUTO_HIDE  = NK_FLAG(7),$/;"	e	enum:nk_panel_flags
NK_WINDOW_TITLE	deps/nuklear.h	/^    NK_WINDOW_TITLE             = NK_FLAG(6),$/;"	e	enum:nk_panel_flags
NOERROR_SRSLY	tests/glfwinfo.c	/^           AUXBUFFERS, SAMPLES, STEREO, SRGB, SINGLEBUFFER, NOERROR_SRSLY,$/;"	e	enum:main::__anon6b8c80140103	file:
NOMINMAX	src/win32_platform.h	/^ #define NOMINMAX$/;"	d
NONAMELESSSTRUCT	deps/mingw/_mingw_dxhelper.h	/^#define NONAMELESSSTRUCT	/;"	d
NONAMELESSUNION	deps/mingw/_mingw_dxhelper.h	/^#define NONAMELESSUNION	/;"	d
NSBitmapFormatAlphaNonpremultiplied	src/cocoa_platform.h	/^ #define NSBitmapFormatAlphaNonpremultiplied NSAlphaNonpremultipliedBitmapFormat$/;"	M
NSEventMaskAny	src/cocoa_platform.h	/^ #define NSEventMaskAny NSAnyEventMask$/;"	M
NSEventMaskKeyUp	src/cocoa_platform.h	/^ #define NSEventMaskKeyUp NSKeyUpMask$/;"	M
NSEventModifierFlagCapsLock	src/cocoa_platform.h	/^ #define NSEventModifierFlagCapsLock NSAlphaShiftKeyMask$/;"	M
NSEventModifierFlagCommand	src/cocoa_platform.h	/^ #define NSEventModifierFlagCommand NSCommandKeyMask$/;"	M
NSEventModifierFlagControl	src/cocoa_platform.h	/^ #define NSEventModifierFlagControl NSControlKeyMask$/;"	M
NSEventModifierFlagDeviceIndependentFlagsMask	src/cocoa_platform.h	/^ #define NSEventModifierFlagDeviceIndependentFlagsMask NSDeviceIndependentModifierFlagsMask$/;"	M
NSEventModifierFlagOption	src/cocoa_platform.h	/^ #define NSEventModifierFlagOption NSAlternateKeyMask$/;"	M
NSEventModifierFlagShift	src/cocoa_platform.h	/^ #define NSEventModifierFlagShift NSShiftKeyMask$/;"	M
NSEventTypeApplicationDefined	src/cocoa_platform.h	/^ #define NSEventTypeApplicationDefined NSApplicationDefined$/;"	M
NSHighResolutionCapable	CMake/Info.plist.in	/^	<key>NSHighResolutionCapable<\/key>$/;"	k
NSHumanReadableCopyright	CMake/Info.plist.in	/^	<key>NSHumanReadableCopyright<\/key>$/;"	k
NSOpenGLContextParameterSurfaceOpacity	src/nsgl_context.h	/^ #define NSOpenGLContextParameterSurfaceOpacity /;"	d
NSOpenGLContextParameterSwapInterval	src/nsgl_context.h	/^ #define NSOpenGLContextParameterSwapInterval /;"	d
NSWindowStyleMaskBorderless	src/cocoa_platform.h	/^ #define NSWindowStyleMaskBorderless NSBorderlessWindowMask$/;"	M
NSWindowStyleMaskClosable	src/cocoa_platform.h	/^ #define NSWindowStyleMaskClosable NSClosableWindowMask$/;"	M
NSWindowStyleMaskMiniaturizable	src/cocoa_platform.h	/^ #define NSWindowStyleMaskMiniaturizable NSMiniaturizableWindowMask$/;"	M
NSWindowStyleMaskResizable	src/cocoa_platform.h	/^ #define NSWindowStyleMaskResizable NSResizableWindowMask$/;"	M
NSWindowStyleMaskTitled	src/cocoa_platform.h	/^ #define NSWindowStyleMaskTitled NSTitledWindowMask$/;"	M
NULL	deps/tinycthread.c	/^  #define NULL /;"	d	file:
NULL_	src/x11_platform.h	/^    Atom            NULL_;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
NUM_ITER_AT_A_TIME	examples/heightmap.c	/^#define NUM_ITER_AT_A_TIME /;"	d	file:
OCR_HAND	src/win32_platform.h	/^ #define OCR_HAND /;"	d
OEMRESOURCE	src/win32_platform.h	/^#define OEMRESOURCE$/;"	d
OSMESA_ACCUM_BITS	src/osmesa_context.h	/^#define OSMESA_ACCUM_BITS /;"	d
OSMESA_COMPAT_PROFILE	src/osmesa_context.h	/^#define OSMESA_COMPAT_PROFILE /;"	d
OSMESA_CONTEXT_MAJOR_VERSION	src/osmesa_context.h	/^#define OSMESA_CONTEXT_MAJOR_VERSION /;"	d
OSMESA_CONTEXT_MINOR_VERSION	src/osmesa_context.h	/^#define OSMESA_CONTEXT_MINOR_VERSION /;"	d
OSMESA_CORE_PROFILE	src/osmesa_context.h	/^#define OSMESA_CORE_PROFILE /;"	d
OSMESA_DEPTH_BITS	src/osmesa_context.h	/^#define OSMESA_DEPTH_BITS /;"	d
OSMESA_FORMAT	src/osmesa_context.h	/^#define OSMESA_FORMAT /;"	d
OSMESA_INCLUDE_DIR	CMake/modules/FindOSMesa.cmake	/^  set (OSMESA_INCLUDE_DIR ${PKG_OSMESA_INCLUDE_DIRS})$/;"	v
OSMESA_LIBRARIES	CMake/modules/FindOSMesa.cmake	/^  set (OSMESA_LIBRARIES   ${PKG_OSMESA_LIBRARIES})$/;"	v
OSMESA_PROFILE	src/osmesa_context.h	/^#define OSMESA_PROFILE /;"	d
OSMESA_RGBA	src/osmesa_context.h	/^#define OSMESA_RGBA /;"	d
OSMESA_STENCIL_BITS	src/osmesa_context.h	/^#define OSMESA_STENCIL_BITS /;"	d
OSMESAproc	src/osmesa_context.h	/^typedef void (*OSMESAproc)(void);$/;"	t	typeref:typename:void (*)(void)
OSMesaContext	src/osmesa_context.h	/^typedef void* OSMesaContext;$/;"	t	typeref:typename:void *
OSMesaCreateContextAttribs	src/osmesa_context.h	/^#define OSMesaCreateContextAttribs /;"	d
OSMesaCreateContextExt	src/osmesa_context.h	/^#define OSMesaCreateContextExt /;"	d
OSMesaDestroyContext	src/osmesa_context.h	/^#define OSMesaDestroyContext /;"	d
OSMesaGetColorBuffer	src/osmesa_context.h	/^#define OSMesaGetColorBuffer /;"	d
OSMesaGetDepthBuffer	src/osmesa_context.h	/^#define OSMesaGetDepthBuffer /;"	d
OSMesaGetProcAddress	src/osmesa_context.h	/^#define OSMesaGetProcAddress /;"	d
OSMesaMakeCurrent	src/osmesa_context.h	/^#define OSMesaMakeCurrent /;"	d
PARTICLE	examples/particles.c	/^} PARTICLE;$/;"	t	typeref:struct:__anon62203f4b0408	file:
PARTICLE_SIZE	examples/particles.c	/^#define PARTICLE_SIZE /;"	d	file:
PARTICLE_VERTS	examples/particles.c	/^#define PARTICLE_VERTS /;"	d	file:
PCPOINT	deps/mingw/dinput.h	/^} CPOINT, *PCPOINT;$/;"	t	typeref:struct:_CPOINT *
PFNGLACCUMPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLACCUMPROC)(GLenum   op, GLfloat   value);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum op,GLfloat value)
PFNGLACTIVETEXTUREPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLACTIVETEXTUREPROC)(GLenum   texture);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum texture)
PFNGLALPHAFUNCPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLALPHAFUNCPROC)(GLenum   func, GLfloat   ref);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum func,GLfloat ref)
PFNGLARETEXTURESRESIDENTPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLARETEXTURESRESIDENTPROC)(GLsizei   n, const  GLuint  * tex/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLsizei n,const GLuint * textures,GLboolean * residences)
PFNGLARRAYELEMENTPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLARRAYELEMENTPROC)(GLint   i);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint i)
PFNGLATTACHSHADERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLATTACHSHADERPROC)(GLuint   program, GLuint   shader);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint shader)
PFNGLBEGINCONDITIONALRENDERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERPROC)(GLuint   id, GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint id,GLenum mode)
PFNGLBEGINPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBEGINPROC)(GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode)
PFNGLBEGINQUERYPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBEGINQUERYPROC)(GLenum   target, GLuint   id);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint id)
PFNGLBEGINTRANSFORMFEEDBACKPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum   primitiveMode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum primitiveMode)
PFNGLBINDATTRIBLOCATIONPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONPROC)(GLuint   program, GLuint   index, const/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERBASEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDBUFFERBASEPROC)(GLenum   target, GLuint   index, GLuint   b/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDBUFFERPROC)(GLenum   target, GLuint   buffer);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERRANGEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDBUFFERRANGEPROC)(GLenum   target, GLuint   index, GLuint   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint   program, GLuint   col/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONPROC)(GLuint   program, GLuint   color, con/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAMEBUFFERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDFRAMEBUFFERPROC)(GLenum   target, GLuint   framebuffer);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint framebuffer)
PFNGLBINDRENDERBUFFERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDRENDERBUFFERPROC)(GLenum   target, GLuint   renderbuffer);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint renderbuffer)
PFNGLBINDSAMPLERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDSAMPLERPROC)(GLuint   unit, GLuint   sampler);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint unit,GLuint sampler)
PFNGLBINDTEXTUREPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDTEXTUREPROC)(GLenum   target, GLuint   texture);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint texture)
PFNGLBINDVERTEXARRAYPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBINDVERTEXARRAYPROC)(GLuint   array);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint array)
PFNGLBITMAPPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBITMAPPROC)(GLsizei   width, GLsizei   height, GLfloat   xorig,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte * bitmap)
PFNGLBLENDCOLORPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBLENDCOLORPROC)(GLfloat   red, GLfloat   green, GLfloat   blue,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDEQUATIONPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONPROC)(GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum   modeRGB, GLenum   modeAlpha/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBLENDFUNCPROC)(GLenum   sfactor, GLenum   dfactor);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum sfactor,GLenum dfactor)
PFNGLBLENDFUNCSEPARATEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEPROC)(GLenum   sfactorRGB, GLenum   dfactorRGB/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLITFRAMEBUFFERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERPROC)(GLint   srcX0, GLint   srcY0, GLint   srcX/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBUFFERDATAPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBUFFERDATAPROC)(GLenum   target, GLsizeiptr   size, const void /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
PFNGLBUFFERSUBDATAPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLBUFFERSUBDATAPROC)(GLenum   target, GLintptr   offset, GLsizeip/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLCALLLISTPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCALLLISTPROC)(GLuint   list);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint list)
PFNGLCALLLISTSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCALLLISTSPROC)(GLsizei   n, GLenum   type, const void * lists);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,GLenum type,const void * lists)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	deps/glad/gl.h	/^typedef GLenum (GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum   target);$/;"	t	typeref:typename:GLenum (GLAD_API_PTR *)(GLenum target)
PFNGLCLAMPCOLORPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLAMPCOLORPROC)(GLenum   target, GLenum   clamp);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum clamp)
PFNGLCLEARACCUMPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLEARACCUMPROC)(GLfloat   red, GLfloat   green, GLfloat   blue,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLCLEARBUFFERFIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFIPROC)(GLenum   buffer, GLint   drawbuffer, GLfloat/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFVPROC)(GLenum   buffer, GLint   drawbuffer, const  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARBUFFERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERIVPROC)(GLenum   buffer, GLint   drawbuffer, const  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARBUFFERUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERUIVPROC)(GLenum   buffer, GLint   drawbuffer, const /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARCOLORPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLEARCOLORPROC)(GLfloat   red, GLfloat   green, GLfloat   blue,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLCLEARDEPTHPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHPROC)(GLdouble   depth);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble depth)
PFNGLCLEARINDEXPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLEARINDEXPROC)(GLfloat   c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat c)
PFNGLCLEARPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLEARPROC)(GLbitfield   mask);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLbitfield mask)
PFNGLCLEARPROC	src/internal.h	/^typedef void (APIENTRY * PFNGLCLEARPROC)(GLbitfield);$/;"	t	typeref:typename:void (APIENTRY *)(GLbitfield)
PFNGLCLEARSTENCILPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLEARSTENCILPROC)(GLint   s);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint s)
PFNGLCLIENTACTIVETEXTUREPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLIENTACTIVETEXTUREPROC)(GLenum   texture);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum texture)
PFNGLCLIENTWAITSYNCPROC	deps/glad/gl.h	/^typedef GLenum (GLAD_API_PTR *PFNGLCLIENTWAITSYNCPROC)(GLsync   sync, GLbitfield   flags, GLuint/;"	t	typeref:typename:GLenum (GLAD_API_PTR *)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIPPLANEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCLIPPLANEPROC)(GLenum   plane, const  GLdouble  * equation);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum plane,const GLdouble * equation)
PFNGLCOLOR3BPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3BPROC)(GLbyte   red, GLbyte   green, GLbyte   blue);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLCOLOR3BVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3BVPROC)(const  GLbyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLbyte * v)
PFNGLCOLOR3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3DPROC)(GLdouble   red, GLdouble   green, GLdouble   blue)/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLCOLOR3DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLCOLOR3FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3FPROC)(GLfloat   red, GLfloat   green, GLfloat   blue);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLCOLOR3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLCOLOR3IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3IPROC)(GLint   red, GLint   green, GLint   blue);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint red,GLint green,GLint blue)
PFNGLCOLOR3IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLCOLOR3SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3SPROC)(GLshort   red, GLshort   green, GLshort   blue);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort red,GLshort green,GLshort blue)
PFNGLCOLOR3SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLCOLOR3UBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3UBPROC)(GLubyte   red, GLubyte   green, GLubyte   blue);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLCOLOR3UBVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3UBVPROC)(const  GLubyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLubyte * v)
PFNGLCOLOR3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3UIPROC)(GLuint   red, GLuint   green, GLuint   blue);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint red,GLuint green,GLuint blue)
PFNGLCOLOR3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3UIVPROC)(const  GLuint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLuint * v)
PFNGLCOLOR3USPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3USPROC)(GLushort   red, GLushort   green, GLushort   blue/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLushort red,GLushort green,GLushort blue)
PFNGLCOLOR3USVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR3USVPROC)(const  GLushort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLushort * v)
PFNGLCOLOR4BPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4BPROC)(GLbyte   red, GLbyte   green, GLbyte   blue, GLbyt/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha)
PFNGLCOLOR4BVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4BVPROC)(const  GLbyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLbyte * v)
PFNGLCOLOR4DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4DPROC)(GLdouble   red, GLdouble   green, GLdouble   blue,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha)
PFNGLCOLOR4DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLCOLOR4FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4FPROC)(GLfloat   red, GLfloat   green, GLfloat   blue, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLCOLOR4FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLCOLOR4IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4IPROC)(GLint   red, GLint   green, GLint   blue, GLint   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint red,GLint green,GLint blue,GLint alpha)
PFNGLCOLOR4IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLCOLOR4SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4SPROC)(GLshort   red, GLshort   green, GLshort   blue, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort red,GLshort green,GLshort blue,GLshort alpha)
PFNGLCOLOR4SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLCOLOR4UBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4UBPROC)(GLubyte   red, GLubyte   green, GLubyte   blue, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha)
PFNGLCOLOR4UBVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4UBVPROC)(const  GLubyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLubyte * v)
PFNGLCOLOR4UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4UIPROC)(GLuint   red, GLuint   green, GLuint   blue, GLui/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint red,GLuint green,GLuint blue,GLuint alpha)
PFNGLCOLOR4UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4UIVPROC)(const  GLuint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLuint * v)
PFNGLCOLOR4USPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4USPROC)(GLushort   red, GLushort   green, GLushort   blue/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLushort red,GLushort green,GLushort blue,GLushort alpha)
PFNGLCOLOR4USVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLOR4USVPROC)(const  GLushort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLushort * v)
PFNGLCOLORMASKIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLORMASKIPROC)(GLuint   index, GLboolean   r, GLboolean   g, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLORMASKPROC)(GLboolean   red, GLboolean   green, GLboolean   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLCOLORMATERIALPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLORMATERIALPROC)(GLenum   face, GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLenum mode)
PFNGLCOLORP3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLORP3UIPROC)(GLenum   type, GLuint   color);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint color)
PFNGLCOLORP3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLORP3UIVPROC)(GLenum   type, const  GLuint  * color);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * color)
PFNGLCOLORP4UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLORP4UIPROC)(GLenum   type, GLuint   color);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint color)
PFNGLCOLORP4UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLORP4UIVPROC)(GLenum   type, const  GLuint  * color);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * color)
PFNGLCOLORPOINTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOLORPOINTERPROC)(GLint   size, GLenum   type, GLsizei   stride/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLCOMPILESHADERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOMPILESHADERPROC)(GLuint   shader);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint shader)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum   target, GLint   level, GLenu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum   target, GLint   level, GLenu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum   target, GLint   level, GLenu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum   target, GLint   level, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum   target, GLint   level, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum   target, GLint   level, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOPYBUFFERSUBDATAPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOPYBUFFERSUBDATAPROC)(GLenum   readTarget, GLenum   writeTarge/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYPIXELSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOPYPIXELSPROC)(GLint   x, GLint   y, GLsizei   width, GLsizei /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum type)
PFNGLCOPYTEXIMAGE1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DPROC)(GLenum   target, GLint   level, GLenum   in/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DPROC)(GLenum   target, GLint   level, GLenum   in/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum   target, GLint   level, GLint   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum   target, GLint   level, GLint   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum   target, GLint   level, GLint   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCREATEPROGRAMPROC	deps/glad/gl.h	/^typedef GLuint (GLAD_API_PTR *PFNGLCREATEPROGRAMPROC)(void);$/;"	t	typeref:typename:GLuint (GLAD_API_PTR *)(void)
PFNGLCREATESHADERPROC	deps/glad/gl.h	/^typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROC)(GLenum   type);$/;"	t	typeref:typename:GLuint (GLAD_API_PTR *)(GLenum type)
PFNGLCULLFACEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLCULLFACEPROC)(GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode)
PFNGLDEBUGMESSAGECALLBACKPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC   callback, const void * /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECONTROLPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLPROC)(GLenum   source, GLenum   type, GLenum/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEINSERTPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTPROC)(GLenum   source, GLenum   type, GLuint /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDELETEBUFFERSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETEBUFFERSPROC)(GLsizei   n, const  GLuint  * buffers);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,const GLuint * buffers)
PFNGLDELETEFRAMEBUFFERSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei   n, const  GLuint  * framebuff/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETELISTSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETELISTSPROC)(GLuint   list, GLsizei   range);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint list,GLsizei range)
PFNGLDELETEPROGRAMPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPROC)(GLuint   program);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program)
PFNGLDELETEQUERIESPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETEQUERIESPROC)(GLsizei   n, const  GLuint  * ids);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,const GLuint * ids)
PFNGLDELETERENDERBUFFERSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETERENDERBUFFERSPROC)(GLsizei   n, const  GLuint  * renderbu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESAMPLERSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETESAMPLERSPROC)(GLsizei   count, const  GLuint  * samplers)/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei count,const GLuint * samplers)
PFNGLDELETESHADERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETESHADERPROC)(GLuint   shader);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint shader)
PFNGLDELETESYNCPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETESYNCPROC)(GLsync   sync);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsync sync)
PFNGLDELETETEXTURESPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETETEXTURESPROC)(GLsizei   n, const  GLuint  * textures);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,const GLuint * textures)
PFNGLDELETEVERTEXARRAYSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSPROC)(GLsizei   n, const  GLuint  * arrays);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,const GLuint * arrays)
PFNGLDEPTHFUNCPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDEPTHFUNCPROC)(GLenum   func);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum func)
PFNGLDEPTHMASKPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDEPTHMASKPROC)(GLboolean   flag);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLboolean flag)
PFNGLDEPTHRANGEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEPROC)(GLdouble   n, GLdouble   f);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble n,GLdouble f)
PFNGLDETACHSHADERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDETACHSHADERPROC)(GLuint   program, GLuint   shader);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint shader)
PFNGLDISABLECLIENTSTATEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDISABLECLIENTSTATEPROC)(GLenum   array);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum array)
PFNGLDISABLEIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDISABLEIPROC)(GLenum   target, GLuint   index);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint index)
PFNGLDISABLEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDISABLEPROC)(GLenum   cap);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum cap)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint   index);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index)
PFNGLDRAWARRAYSINSTANCEDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum   mode, GLint   first, GLsizei /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
PFNGLDRAWARRAYSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSPROC)(GLenum   mode, GLint   first, GLsizei   count);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWBUFFERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERPROC)(GLenum   buf);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum buf)
PFNGLDRAWBUFFERSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSPROC)(GLsizei   n, const  GLenum  * bufs);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,const GLenum * bufs)
PFNGLDRAWELEMENTSBASEVERTEXPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum   mode, GLsizei   count, GLe/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum   mode, GLsizei   c/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum   mode, GLsizei   count, GLen/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount)
PFNGLDRAWELEMENTSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSPROC)(GLenum   mode, GLsizei   count, GLenum   type/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWPIXELSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWPIXELSPROC)(GLsizei   width, GLsizei   height, GLenum   for/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum   mode, GLuint   start,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSPROC)(GLenum   mode, GLuint   start, GLuint   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLEDGEFLAGPOINTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPOINTERPROC)(GLsizei   stride, const void * pointer);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei stride,const void * pointer)
PFNGLEDGEFLAGPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPROC)(GLboolean   flag);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLboolean flag)
PFNGLEDGEFLAGVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEDGEFLAGVPROC)(const  GLboolean  * flag);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLboolean * flag)
PFNGLENABLECLIENTSTATEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLENABLECLIENTSTATEPROC)(GLenum   array);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum array)
PFNGLENABLEIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLENABLEIPROC)(GLenum   target, GLuint   index);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint index)
PFNGLENABLEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLENABLEPROC)(GLenum   cap);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum cap)
PFNGLENABLEVERTEXATTRIBARRAYPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint   index);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index)
PFNGLENDCONDITIONALRENDERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLENDCONDITIONALRENDERPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLENDLISTPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLENDLISTPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLENDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLENDPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLENDQUERYPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLENDQUERYPROC)(GLenum   target);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target)
PFNGLENDTRANSFORMFEEDBACKPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLEVALCOORD1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALCOORD1DPROC)(GLdouble   u);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble u)
PFNGLEVALCOORD1DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALCOORD1DVPROC)(const  GLdouble  * u);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * u)
PFNGLEVALCOORD1FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALCOORD1FPROC)(GLfloat   u);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat u)
PFNGLEVALCOORD1FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALCOORD1FVPROC)(const  GLfloat  * u);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * u)
PFNGLEVALCOORD2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALCOORD2DPROC)(GLdouble   u, GLdouble   v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble u,GLdouble v)
PFNGLEVALCOORD2DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALCOORD2DVPROC)(const  GLdouble  * u);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * u)
PFNGLEVALCOORD2FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALCOORD2FPROC)(GLfloat   u, GLfloat   v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat u,GLfloat v)
PFNGLEVALCOORD2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALCOORD2FVPROC)(const  GLfloat  * u);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * u)
PFNGLEVALMESH1PROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALMESH1PROC)(GLenum   mode, GLint   i1, GLint   i2);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,GLint i1,GLint i2)
PFNGLEVALMESH2PROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALMESH2PROC)(GLenum   mode, GLint   i1, GLint   i2, GLint   j/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,GLint i1,GLint i2,GLint j1,GLint j2)
PFNGLEVALPOINT1PROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALPOINT1PROC)(GLint   i);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint i)
PFNGLEVALPOINT2PROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLEVALPOINT2PROC)(GLint   i, GLint   j);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint i,GLint j)
PFNGLFEEDBACKBUFFERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFEEDBACKBUFFERPROC)(GLsizei   size, GLenum   type, GLfloat  * b/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei size,GLenum type,GLfloat * buffer)
PFNGLFENCESYNCPROC	deps/glad/gl.h	/^typedef GLsync (GLAD_API_PTR *PFNGLFENCESYNCPROC)(GLenum   condition, GLbitfield   flags);$/;"	t	typeref:typename:GLsync (GLAD_API_PTR *)(GLenum condition,GLbitfield flags)
PFNGLFINISHPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFINISHPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum   target, GLintptr   offset,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFLUSHPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLFOGCOORDDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFOGCOORDDPROC)(GLdouble   coord);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble coord)
PFNGLFOGCOORDDVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFOGCOORDDVPROC)(const  GLdouble  * coord);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * coord)
PFNGLFOGCOORDFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFOGCOORDFPROC)(GLfloat   coord);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat coord)
PFNGLFOGCOORDFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFOGCOORDFVPROC)(const  GLfloat  * coord);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * coord)
PFNGLFOGCOORDPOINTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFOGCOORDPOINTERPROC)(GLenum   type, GLsizei   stride, const voi/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFOGFPROC)(GLenum   pname, GLfloat   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLfloat param)
PFNGLFOGFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFOGFVPROC)(GLenum   pname, const  GLfloat  * params);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,const GLfloat * params)
PFNGLFOGIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFOGIPROC)(GLenum   pname, GLint   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLint param)
PFNGLFOGIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFOGIVPROC)(GLenum   pname, const  GLint  * params);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,const GLint * params)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum   target, GLenum   attachme/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERTEXTURE1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum   target, GLenum   attachment,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum   target, GLenum   attachment,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum   target, GLenum   attachment,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum   target, GLenum   attachme/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum   target, GLenum   attachment, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRONTFACEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFRONTFACEPROC)(GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode)
PFNGLFRUSTUMPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLFRUSTUMPROC)(GLdouble   left, GLdouble   right, GLdouble   bott/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLGENBUFFERSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGENBUFFERSPROC)(GLsizei   n, GLuint  * buffers);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGENERATEMIPMAPPROC)(GLenum   target);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target)
PFNGLGENFRAMEBUFFERSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGENFRAMEBUFFERSPROC)(GLsizei   n, GLuint  * framebuffers);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,GLuint * framebuffers)
PFNGLGENLISTSPROC	deps/glad/gl.h	/^typedef GLuint (GLAD_API_PTR *PFNGLGENLISTSPROC)(GLsizei   range);$/;"	t	typeref:typename:GLuint (GLAD_API_PTR *)(GLsizei range)
PFNGLGENQUERIESPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGENQUERIESPROC)(GLsizei   n, GLuint  * ids);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,GLuint * ids)
PFNGLGENRENDERBUFFERSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGENRENDERBUFFERSPROC)(GLsizei   n, GLuint  * renderbuffers);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSAMPLERSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGENSAMPLERSPROC)(GLsizei   count, GLuint  * samplers);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei count,GLuint * samplers)
PFNGLGENTEXTURESPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGENTEXTURESPROC)(GLsizei   n, GLuint  * textures);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,GLuint * textures)
PFNGLGENVERTEXARRAYSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGENVERTEXARRAYSPROC)(GLsizei   n, GLuint  * arrays);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,GLuint * arrays)
PFNGLGETACTIVEATTRIBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETACTIVEATTRIBPROC)(GLuint   program, GLuint   index, GLsizei /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint   program, GLuint   uniform/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint   program, GLuint   unifo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMNAMEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint   program, GLuint   uniformInd/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMPROC)(GLuint   program, GLuint   index, GLsizei/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMSIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint   program, GLsizei   uniformCou/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETATTACHEDSHADERSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETATTACHEDSHADERSPROC)(GLuint   program, GLsizei   maxCount, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
PFNGLGETATTRIBLOCATIONPROC	deps/glad/gl.h	/^typedef GLint (GLAD_API_PTR *PFNGLGETATTRIBLOCATIONPROC)(GLuint   program, const  GLchar  * name/;"	t	typeref:typename:GLint (GLAD_API_PTR *)(GLuint program,const GLchar * name)
PFNGLGETBOOLEANI_VPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETBOOLEANI_VPROC)(GLenum   target, GLuint   index, GLboolean  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBOOLEANVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETBOOLEANVPROC)(GLenum   pname, GLboolean  * data);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLboolean * data)
PFNGLGETBUFFERPARAMETERI64VPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum   target, GLenum   pname, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLint64 * params)
PFNGLGETBUFFERPARAMETERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVPROC)(GLenum   target, GLenum   pname, GLin/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPOINTERVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVPROC)(GLenum   target, GLenum   pname, void **/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERSUBDATAPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETBUFFERSUBDATAPROC)(GLenum   target, GLintptr   offset, GLsiz/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETCLIPPLANEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETCLIPPLANEPROC)(GLenum   plane, GLdouble  * equation);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum plane,GLdouble * equation)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum   target, GLint   level, void/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,void * img)
PFNGLGETDEBUGMESSAGELOGPROC	deps/glad/gl.h	/^typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGPROC)(GLuint   count, GLsizei   bufSize, GL/;"	t	typeref:typename:GLuint (GLAD_API_PTR *)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDOUBLEVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETDOUBLEVPROC)(GLenum   pname, GLdouble  * data);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLdouble * data)
PFNGLGETERRORPROC	deps/glad/gl.h	/^typedef GLenum (GLAD_API_PTR *PFNGLGETERRORPROC)(void);$/;"	t	typeref:typename:GLenum (GLAD_API_PTR *)(void)
PFNGLGETFLOATVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETFLOATVPROC)(GLenum   pname, GLfloat  * data);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLfloat * data)
PFNGLGETFRAGDATAINDEXPROC	deps/glad/gl.h	/^typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATAINDEXPROC)(GLuint   program, const  GLchar  * name)/;"	t	typeref:typename:GLint (GLAD_API_PTR *)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	deps/glad/gl.h	/^typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATALOCATIONPROC)(GLuint   program, const  GLchar  * na/;"	t	typeref:typename:GLint (GLAD_API_PTR *)(GLuint program,const GLchar * name)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum   target, GLenu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	deps/glad/gl.h	/^typedef GLenum (GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSARBPROC)(void);$/;"	t	typeref:typename:GLenum (GLAD_API_PTR *)(void)
PFNGLGETINTEGER64I_VPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETINTEGER64I_VPROC)(GLenum   target, GLuint   index, GLint64  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint index,GLint64 * data)
PFNGLGETINTEGER64VPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VPROC)(GLenum   pname, GLint64  * data);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLint64 * data)
PFNGLGETINTEGERI_VPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETINTEGERI_VPROC)(GLenum   target, GLuint   index, GLint  * da/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETINTEGERVPROC)(GLenum   pname, GLint  * data);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLint * data)
PFNGLGETINTEGERVPROC	src/internal.h	/^typedef void (APIENTRY * PFNGLGETINTEGERVPROC)(GLenum,GLint*);$/;"	t	typeref:typename:void (APIENTRY *)(GLenum,GLint *)
PFNGLGETLIGHTFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETLIGHTFVPROC)(GLenum   light, GLenum   pname, GLfloat  * para/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum light,GLenum pname,GLfloat * params)
PFNGLGETLIGHTIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETLIGHTIVPROC)(GLenum   light, GLenum   pname, GLint  * params/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum light,GLenum pname,GLint * params)
PFNGLGETMAPDVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETMAPDVPROC)(GLenum   target, GLenum   query, GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum query,GLdouble * v)
PFNGLGETMAPFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETMAPFVPROC)(GLenum   target, GLenum   query, GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum query,GLfloat * v)
PFNGLGETMAPIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETMAPIVPROC)(GLenum   target, GLenum   query, GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum query,GLint * v)
PFNGLGETMATERIALFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETMATERIALFVPROC)(GLenum   face, GLenum   pname, GLfloat  * pa/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLenum pname,GLfloat * params)
PFNGLGETMATERIALIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETMATERIALIVPROC)(GLenum   face, GLenum   pname, GLint  * para/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLenum pname,GLint * params)
PFNGLGETMULTISAMPLEFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETMULTISAMPLEFVPROC)(GLenum   pname, GLuint   index, GLfloat  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETNCOLORTABLEARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNCOLORTABLEARBPROC)(GLenum   target, GLenum   format, GLenum/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)(GLenum   target, GLint   lod, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint lod,GLsizei bufSize,void * img)
PFNGLGETNCONVOLUTIONFILTERARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNCONVOLUTIONFILTERARBPROC)(GLenum   target, GLenum   format,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
PFNGLGETNHISTOGRAMARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNHISTOGRAMARBPROC)(GLenum   target, GLboolean   reset, GLenu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNMAPDVARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNMAPDVARBPROC)(GLenum   target, GLenum   query, GLsizei   bu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
PFNGLGETNMAPFVARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNMAPFVARBPROC)(GLenum   target, GLenum   query, GLsizei   bu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
PFNGLGETNMAPIVARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNMAPIVARBPROC)(GLenum   target, GLenum   query, GLsizei   bu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
PFNGLGETNMINMAXARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNMINMAXARBPROC)(GLenum   target, GLboolean   reset, GLenum  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNPIXELMAPFVARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNPIXELMAPFVARBPROC)(GLenum   map, GLsizei   bufSize, GLfloat/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum map,GLsizei bufSize,GLfloat * values)
PFNGLGETNPIXELMAPUIVARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNPIXELMAPUIVARBPROC)(GLenum   map, GLsizei   bufSize, GLuint/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum map,GLsizei bufSize,GLuint * values)
PFNGLGETNPIXELMAPUSVARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNPIXELMAPUSVARBPROC)(GLenum   map, GLsizei   bufSize, GLusho/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum map,GLsizei bufSize,GLushort * values)
PFNGLGETNPOLYGONSTIPPLEARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNPOLYGONSTIPPLEARBPROC)(GLsizei   bufSize, GLubyte  * patter/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei bufSize,GLubyte * pattern)
PFNGLGETNSEPARABLEFILTERARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNSEPARABLEFILTERARBPROC)(GLenum   target, GLenum   format, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
PFNGLGETNTEXIMAGEARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNTEXIMAGEARBPROC)(GLenum   target, GLint   level, GLenum   f/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
PFNGLGETNUNIFORMDVARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMDVARBPROC)(GLuint   program, GLint   location, GLsiz/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMFVARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMFVARBPROC)(GLuint   program, GLint   location, GLsiz/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMIVARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMIVARBPROC)(GLuint   program, GLint   location, GLsiz/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMUIVARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMUIVARBPROC)(GLuint   program, GLint   location, GLsi/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETOBJECTLABELPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETOBJECTLABELPROC)(GLenum   identifier, GLuint   name, GLsizei/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPTRLABELPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETOBJECTPTRLABELPROC)(const void * ptr, GLsizei   bufSize, GLs/;"	t	typeref:typename:void (GLAD_API_PTR *)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETPIXELMAPFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPFVPROC)(GLenum   map, GLfloat  * values);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum map,GLfloat * values)
PFNGLGETPIXELMAPUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPUIVPROC)(GLenum   map, GLuint  * values);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum map,GLuint * values)
PFNGLGETPIXELMAPUSVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPUSVPROC)(GLenum   map, GLushort  * values);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum map,GLushort * values)
PFNGLGETPOINTERVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETPOINTERVPROC)(GLenum   pname, void ** params);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,void ** params)
PFNGLGETPOLYGONSTIPPLEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte  * mask);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLubyte * mask)
PFNGLGETPROGRAMINFOLOGPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINFOLOGPROC)(GLuint   program, GLsizei   bufSize, GLs/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETPROGRAMIVPROC)(GLuint   program, GLenum   pname, GLint  * pa/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETQUERYIVPROC)(GLenum   target, GLenum   pname, GLint  * param/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTI64VPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VPROC)(GLuint   id, GLenum   pname, GLint64  */;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTIVPROC)(GLuint   id, GLenum   pname, GLint  * par/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUI64VPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VPROC)(GLuint   id, GLenum   pname, GLuint64 /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVPROC)(GLuint   id, GLenum   pname, GLuint  * p/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum   target, GLenum   pname/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint   sampler, GLenum   pname, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint   sampler, GLenum   pname, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint   sampler, GLenum   pname, /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint   sampler, GLenum   pname, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSHADERINFOLOGPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETSHADERINFOLOGPROC)(GLuint   shader, GLsizei   bufSize, GLsiz/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETSHADERIVPROC)(GLuint   shader, GLenum   pname, GLint  * para/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint shader,GLenum pname,GLint * params)
PFNGLGETSHADERSOURCEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETSHADERSOURCEPROC)(GLuint   shader, GLsizei   bufSize, GLsize/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
PFNGLGETSTRINGIPROC	deps/glad/gl.h	/^typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGIPROC)(GLenum   name, GLuint   index);$/;"	t	typeref:typename:const GLubyte * (GLAD_API_PTR *)(GLenum name,GLuint index)
PFNGLGETSTRINGIPROC	src/internal.h	/^typedef const GLubyte* (APIENTRY * PFNGLGETSTRINGIPROC)(GLenum,GLuint);$/;"	t	typeref:typename:const GLubyte * (APIENTRY *)(GLenum,GLuint)
PFNGLGETSTRINGPROC	deps/glad/gl.h	/^typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGPROC)(GLenum   name);$/;"	t	typeref:typename:const GLubyte * (GLAD_API_PTR *)(GLenum name)
PFNGLGETSTRINGPROC	src/internal.h	/^typedef const GLubyte* (APIENTRY * PFNGLGETSTRINGPROC)(GLenum);$/;"	t	typeref:typename:const GLubyte * (APIENTRY *)(GLenum)
PFNGLGETSYNCIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETSYNCIVPROC)(GLsync   sync, GLenum   pname, GLsizei   bufSize/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETTEXENVFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXENVFVPROC)(GLenum   target, GLenum   pname, GLfloat  * pa/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXENVIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXENVIVPROC)(GLenum   target, GLenum   pname, GLint  * para/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXGENDVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXGENDVPROC)(GLenum   coord, GLenum   pname, GLdouble  * pa/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum coord,GLenum pname,GLdouble * params)
PFNGLGETTEXGENFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXGENFVPROC)(GLenum   coord, GLenum   pname, GLfloat  * par/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum coord,GLenum pname,GLfloat * params)
PFNGLGETTEXGENIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXGENIVPROC)(GLenum   coord, GLenum   pname, GLint  * param/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum coord,GLenum pname,GLint * params)
PFNGLGETTEXIMAGEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXIMAGEPROC)(GLenum   target, GLint   level, GLenum   forma/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETTEXLEVELPARAMETERFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum   target, GLint   level, GLe/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXLEVELPARAMETERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum   target, GLint   level, GLe/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERFVPROC)(GLenum   target, GLenum   pname, GLfloat/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXPARAMETERIIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVPROC)(GLenum   target, GLenum   pname, GLint /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVPROC)(GLenum   target, GLenum   pname, GLuin/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIVPROC)(GLenum   target, GLenum   pname, GLint  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint   program, GLuint   ind/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETUNIFORMBLOCKINDEXPROC	deps/glad/gl.h	/^typedef GLuint (GLAD_API_PTR *PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint   program, const  GLchar  * /;"	t	typeref:typename:GLuint (GLAD_API_PTR *)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETUNIFORMFVPROC)(GLuint   program, GLint   location, GLfloat  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMINDICESPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETUNIFORMINDICESPROC)(GLuint   program, GLsizei   uniformCount/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETUNIFORMIVPROC)(GLuint   program, GLint   location, GLint  * /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONPROC	deps/glad/gl.h	/^typedef GLint (GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONPROC)(GLuint   program, const  GLchar  * nam/;"	t	typeref:typename:GLint (GLAD_API_PTR *)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUIVPROC)(GLuint   program, GLint   location, GLuint  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLint location,GLuint * params)
PFNGLGETVERTEXATTRIBDVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVPROC)(GLuint   index, GLenum   pname, GLdouble/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVPROC)(GLuint   index, GLenum   pname, GLfloat /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVPROC)(GLuint   index, GLenum   pname, GLint  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint   index, GLenum   pname, GLuint/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVPROC)(GLuint   index, GLenum   pname, GLint  */;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBPOINTERVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint   index, GLenum   pname, vo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum pname,void ** pointer)
PFNGLHINTPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLHINTPROC)(GLenum   target, GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum mode)
PFNGLINDEXDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXDPROC)(GLdouble   c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble c)
PFNGLINDEXDVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXDVPROC)(const  GLdouble  * c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * c)
PFNGLINDEXFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXFPROC)(GLfloat   c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat c)
PFNGLINDEXFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXFVPROC)(const  GLfloat  * c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * c)
PFNGLINDEXIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXIPROC)(GLint   c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint c)
PFNGLINDEXIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXIVPROC)(const  GLint  * c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * c)
PFNGLINDEXMASKPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXMASKPROC)(GLuint   mask);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint mask)
PFNGLINDEXPOINTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXPOINTERPROC)(GLenum   type, GLsizei   stride, const void */;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLINDEXSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXSPROC)(GLshort   c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort c)
PFNGLINDEXSVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXSVPROC)(const  GLshort  * c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * c)
PFNGLINDEXUBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXUBPROC)(GLubyte   c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLubyte c)
PFNGLINDEXUBVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINDEXUBVPROC)(const  GLubyte  * c);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLubyte * c)
PFNGLINITNAMESPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINITNAMESPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLINTERLEAVEDARRAYSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLINTERLEAVEDARRAYSPROC)(GLenum   format, GLsizei   stride, const/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum format,GLsizei stride,const void * pointer)
PFNGLISBUFFERPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISBUFFERPROC)(GLuint   buffer);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLuint buffer)
PFNGLISENABLEDIPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDIPROC)(GLenum   target, GLuint   index);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLenum target,GLuint index)
PFNGLISENABLEDPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDPROC)(GLenum   cap);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLenum cap)
PFNGLISFRAMEBUFFERPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISFRAMEBUFFERPROC)(GLuint   framebuffer);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLuint framebuffer)
PFNGLISLISTPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISLISTPROC)(GLuint   list);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLuint list)
PFNGLISPROGRAMPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPROC)(GLuint   program);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLuint program)
PFNGLISQUERYPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISQUERYPROC)(GLuint   id);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLuint id)
PFNGLISRENDERBUFFERPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISRENDERBUFFERPROC)(GLuint   renderbuffer);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLuint renderbuffer)
PFNGLISSAMPLERPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISSAMPLERPROC)(GLuint   sampler);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLuint sampler)
PFNGLISSHADERPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISSHADERPROC)(GLuint   shader);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLuint shader)
PFNGLISSYNCPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISSYNCPROC)(GLsync   sync);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLsync sync)
PFNGLISTEXTUREPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISTEXTUREPROC)(GLuint   texture);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLuint texture)
PFNGLISVERTEXARRAYPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLISVERTEXARRAYPROC)(GLuint   array);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLuint array)
PFNGLLIGHTFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLIGHTFPROC)(GLenum   light, GLenum   pname, GLfloat   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum light,GLenum pname,GLfloat param)
PFNGLLIGHTFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLIGHTFVPROC)(GLenum   light, GLenum   pname, const  GLfloat  * /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum light,GLenum pname,const GLfloat * params)
PFNGLLIGHTIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLIGHTIPROC)(GLenum   light, GLenum   pname, GLint   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum light,GLenum pname,GLint param)
PFNGLLIGHTIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLIGHTIVPROC)(GLenum   light, GLenum   pname, const  GLint  * pa/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum light,GLenum pname,const GLint * params)
PFNGLLIGHTMODELFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLIGHTMODELFPROC)(GLenum   pname, GLfloat   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLfloat param)
PFNGLLIGHTMODELFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLIGHTMODELFVPROC)(GLenum   pname, const  GLfloat  * params);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,const GLfloat * params)
PFNGLLIGHTMODELIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLIGHTMODELIPROC)(GLenum   pname, GLint   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLint param)
PFNGLLIGHTMODELIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLIGHTMODELIVPROC)(GLenum   pname, const  GLint  * params);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,const GLint * params)
PFNGLLINESTIPPLEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLINESTIPPLEPROC)(GLint   factor, GLushort   pattern);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint factor,GLushort pattern)
PFNGLLINEWIDTHPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLINEWIDTHPROC)(GLfloat   width);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat width)
PFNGLLINKPROGRAMPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLINKPROGRAMPROC)(GLuint   program);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program)
PFNGLLISTBASEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLISTBASEPROC)(GLuint   base);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint base)
PFNGLLOADIDENTITYPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLOADIDENTITYPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLLOADMATRIXDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLOADMATRIXDPROC)(const  GLdouble  * m);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * m)
PFNGLLOADMATRIXFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLOADMATRIXFPROC)(const  GLfloat  * m);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * m)
PFNGLLOADNAMEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLOADNAMEPROC)(GLuint   name);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint name)
PFNGLLOADTRANSPOSEMATRIXDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXDPROC)(const  GLdouble  * m);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXFPROC)(const  GLfloat  * m);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * m)
PFNGLLOGICOPPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLLOGICOPPROC)(GLenum   opcode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum opcode)
PFNGLMAP1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMAP1DPROC)(GLenum   target, GLdouble   u1, GLdouble   u2, GLint/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
PFNGLMAP1FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMAP1FPROC)(GLenum   target, GLfloat   u1, GLfloat   u2, GLint  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
PFNGLMAP2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMAP2DPROC)(GLenum   target, GLdouble   u1, GLdouble   u2, GLint/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
PFNGLMAP2FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMAP2FPROC)(GLenum   target, GLfloat   u1, GLfloat   u2, GLint  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
PFNGLMAPBUFFERPROC	deps/glad/gl.h	/^typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERPROC)(GLenum   target, GLenum   access);$/;"	t	typeref:typename:void * (GLAD_API_PTR *)(GLenum target,GLenum access)
PFNGLMAPBUFFERRANGEPROC	deps/glad/gl.h	/^typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERRANGEPROC)(GLenum   target, GLintptr   offset, GLsiz/;"	t	typeref:typename:void * (GLAD_API_PTR *)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPGRID1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMAPGRID1DPROC)(GLint   un, GLdouble   u1, GLdouble   u2);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint un,GLdouble u1,GLdouble u2)
PFNGLMAPGRID1FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMAPGRID1FPROC)(GLint   un, GLfloat   u1, GLfloat   u2);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint un,GLfloat u1,GLfloat u2)
PFNGLMAPGRID2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMAPGRID2DPROC)(GLint   un, GLdouble   u1, GLdouble   u2, GLint /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint un,GLdouble u1,GLdouble u2,GLint vn,GLdouble v1,GLdouble v2)
PFNGLMAPGRID2FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMAPGRID2FPROC)(GLint   un, GLfloat   u1, GLfloat   u2, GLint   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint un,GLfloat u1,GLfloat u2,GLint vn,GLfloat v1,GLfloat v2)
PFNGLMATERIALFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMATERIALFPROC)(GLenum   face, GLenum   pname, GLfloat   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLenum pname,GLfloat param)
PFNGLMATERIALFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMATERIALFVPROC)(GLenum   face, GLenum   pname, const  GLfloat  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLMATERIALIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMATERIALIPROC)(GLenum   face, GLenum   pname, GLint   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLenum pname,GLint param)
PFNGLMATERIALIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMATERIALIVPROC)(GLenum   face, GLenum   pname, const  GLint  * /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLenum pname,const GLint * params)
PFNGLMATRIXMODEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMATRIXMODEPROC)(GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode)
PFNGLMULTIDRAWARRAYSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSPROC)(GLenum   mode, const  GLint  * first, cons/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum   mode, const  GLsizei /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSPROC)(GLenum   mode, const  GLsizei  * count, /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
PFNGLMULTITEXCOORD1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1DPROC)(GLenum   target, GLdouble   s);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1DVPROC)(GLenum   target, const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1FPROC)(GLenum   target, GLfloat   s);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1FVPROC)(GLenum   target, const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1IPROC)(GLenum   target, GLint   s);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1IVPROC)(GLenum   target, const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1SPROC)(GLenum   target, GLshort   s);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1SVPROC)(GLenum   target, const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2DPROC)(GLenum   target, GLdouble   s, GLdouble   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2DVPROC)(GLenum   target, const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2FPROC)(GLenum   target, GLfloat   s, GLfloat   t)/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2FVPROC)(GLenum   target, const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2IPROC)(GLenum   target, GLint   s, GLint   t);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2IVPROC)(GLenum   target, const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2SPROC)(GLenum   target, GLshort   s, GLshort   t)/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2SVPROC)(GLenum   target, const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3DPROC)(GLenum   target, GLdouble   s, GLdouble   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3DVPROC)(GLenum   target, const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3FPROC)(GLenum   target, GLfloat   s, GLfloat   t,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3FVPROC)(GLenum   target, const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3IPROC)(GLenum   target, GLint   s, GLint   t, GLi/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3IVPROC)(GLenum   target, const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3SPROC)(GLenum   target, GLshort   s, GLshort   t,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3SVPROC)(GLenum   target, const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4DPROC)(GLenum   target, GLdouble   s, GLdouble   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4DVPROC)(GLenum   target, const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4FPROC)(GLenum   target, GLfloat   s, GLfloat   t,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4FVPROC)(GLenum   target, const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4IPROC)(GLenum   target, GLint   s, GLint   t, GLi/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4IVPROC)(GLenum   target, const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4SPROC)(GLenum   target, GLshort   s, GLshort   t,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4SVPROC)(GLenum   target, const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORDP1UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP1UIPROC)(GLenum   texture, GLenum   type, GLuint /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP1UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP1UIVPROC)(GLenum   texture, GLenum   type, const /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP2UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP2UIPROC)(GLenum   texture, GLenum   type, GLuint /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP2UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP2UIVPROC)(GLenum   texture, GLenum   type, const /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP3UIPROC)(GLenum   texture, GLenum   type, GLuint /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP3UIVPROC)(GLenum   texture, GLenum   type, const /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP4UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP4UIPROC)(GLenum   texture, GLenum   type, GLuint /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP4UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP4UIVPROC)(GLenum   texture, GLenum   type, const /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTMATRIXDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTMATRIXDPROC)(const  GLdouble  * m);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * m)
PFNGLMULTMATRIXFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTMATRIXFPROC)(const  GLfloat  * m);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXDPROC)(const  GLdouble  * m);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXFPROC)(const  GLfloat  * m);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * m)
PFNGLNEWLISTPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNEWLISTPROC)(GLuint   list, GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint list,GLenum mode)
PFNGLNORMAL3BPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMAL3BPROC)(GLbyte   nx, GLbyte   ny, GLbyte   nz);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLbyte nx,GLbyte ny,GLbyte nz)
PFNGLNORMAL3BVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMAL3BVPROC)(const  GLbyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLbyte * v)
PFNGLNORMAL3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMAL3DPROC)(GLdouble   nx, GLdouble   ny, GLdouble   nz);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble nx,GLdouble ny,GLdouble nz)
PFNGLNORMAL3DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMAL3DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLNORMAL3FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMAL3FPROC)(GLfloat   nx, GLfloat   ny, GLfloat   nz);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat nx,GLfloat ny,GLfloat nz)
PFNGLNORMAL3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMAL3FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLNORMAL3IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMAL3IPROC)(GLint   nx, GLint   ny, GLint   nz);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint nx,GLint ny,GLint nz)
PFNGLNORMAL3IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMAL3IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLNORMAL3SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMAL3SPROC)(GLshort   nx, GLshort   ny, GLshort   nz);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort nx,GLshort ny,GLshort nz)
PFNGLNORMAL3SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMAL3SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLNORMALP3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMALP3UIPROC)(GLenum   type, GLuint   coords);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint coords)
PFNGLNORMALP3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMALP3UIVPROC)(GLenum   type, const  GLuint  * coords);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * coords)
PFNGLNORMALPOINTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLNORMALPOINTERPROC)(GLenum   type, GLsizei   stride, const void /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLOBJECTLABELPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLOBJECTLABELPROC)(GLenum   identifier, GLuint   name, GLsizei   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLOBJECTPTRLABELPROC)(const void * ptr, GLsizei   length, const  /;"	t	typeref:typename:void (GLAD_API_PTR *)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLORTHOPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLORTHOPROC)(GLdouble   left, GLdouble   right, GLdouble   bottom/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLPASSTHROUGHPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPASSTHROUGHPROC)(GLfloat   token);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat token)
PFNGLPIXELMAPFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPIXELMAPFVPROC)(GLenum   map, GLsizei   mapsize, const  GLfloat/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum map,GLsizei mapsize,const GLfloat * values)
PFNGLPIXELMAPUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPIXELMAPUIVPROC)(GLenum   map, GLsizei   mapsize, const  GLuint/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum map,GLsizei mapsize,const GLuint * values)
PFNGLPIXELMAPUSVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPIXELMAPUSVPROC)(GLenum   map, GLsizei   mapsize, const  GLusho/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum map,GLsizei mapsize,const GLushort * values)
PFNGLPIXELSTOREFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPIXELSTOREFPROC)(GLenum   pname, GLfloat   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLfloat param)
PFNGLPIXELSTOREIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPIXELSTOREIPROC)(GLenum   pname, GLint   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLint param)
PFNGLPIXELTRANSFERFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFERFPROC)(GLenum   pname, GLfloat   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLfloat param)
PFNGLPIXELTRANSFERIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFERIPROC)(GLenum   pname, GLint   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLint param)
PFNGLPIXELZOOMPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPIXELZOOMPROC)(GLfloat   xfactor, GLfloat   yfactor);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat xfactor,GLfloat yfactor)
PFNGLPOINTPARAMETERFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFPROC)(GLenum   pname, GLfloat   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFVPROC)(GLenum   pname, const  GLfloat  * params)/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIPROC)(GLenum   pname, GLint   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIVPROC)(GLenum   pname, const  GLint  * params);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum pname,const GLint * params)
PFNGLPOINTSIZEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOINTSIZEPROC)(GLfloat   size);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat size)
PFNGLPOLYGONMODEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOLYGONMODEPROC)(GLenum   face, GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLenum mode)
PFNGLPOLYGONOFFSETPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETPROC)(GLfloat   factor, GLfloat   units);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat factor,GLfloat units)
PFNGLPOLYGONSTIPPLEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOLYGONSTIPPLEPROC)(const  GLubyte  * mask);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLubyte * mask)
PFNGLPOPATTRIBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOPATTRIBPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLPOPCLIENTATTRIBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOPCLIENTATTRIBPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLPOPDEBUGGROUPPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOPDEBUGGROUPPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLPOPMATRIXPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOPMATRIXPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLPOPNAMEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPOPNAMEPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLPRIMITIVERESTARTINDEXPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint   index);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index)
PFNGLPRIORITIZETEXTURESPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPRIORITIZETEXTURESPROC)(GLsizei   n, const  GLuint  * textures,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei n,const GLuint * textures,const GLfloat * priorities)
PFNGLPROVOKINGVERTEXPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPROVOKINGVERTEXPROC)(GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode)
PFNGLPUSHATTRIBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPUSHATTRIBPROC)(GLbitfield   mask);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLbitfield mask)
PFNGLPUSHCLIENTATTRIBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPUSHCLIENTATTRIBPROC)(GLbitfield   mask);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLbitfield mask)
PFNGLPUSHDEBUGGROUPPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPUSHDEBUGGROUPPROC)(GLenum   source, GLuint   id, GLsizei   len/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHMATRIXPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPUSHMATRIXPROC)(void);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(void)
PFNGLPUSHNAMEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLPUSHNAMEPROC)(GLuint   name);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint name)
PFNGLQUERYCOUNTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLQUERYCOUNTERPROC)(GLuint   id, GLenum   target);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint id,GLenum target)
PFNGLRASTERPOS2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS2DPROC)(GLdouble   x, GLdouble   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x,GLdouble y)
PFNGLRASTERPOS2DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS2DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLRASTERPOS2FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS2FPROC)(GLfloat   x, GLfloat   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x,GLfloat y)
PFNGLRASTERPOS2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS2FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLRASTERPOS2IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS2IPROC)(GLint   x, GLint   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y)
PFNGLRASTERPOS2IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS2IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLRASTERPOS2SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS2SPROC)(GLshort   x, GLshort   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort x,GLshort y)
PFNGLRASTERPOS2SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS2SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLRASTERPOS3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS3DPROC)(GLdouble   x, GLdouble   y, GLdouble   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLRASTERPOS3DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS3DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLRASTERPOS3FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS3FPROC)(GLfloat   x, GLfloat   y, GLfloat   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLRASTERPOS3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS3FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLRASTERPOS3IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS3IPROC)(GLint   x, GLint   y, GLint   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLint z)
PFNGLRASTERPOS3IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS3IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLRASTERPOS3SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS3SPROC)(GLshort   x, GLshort   y, GLshort   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort x,GLshort y,GLshort z)
PFNGLRASTERPOS3SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS3SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLRASTERPOS4DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS4DPROC)(GLdouble   x, GLdouble   y, GLdouble   z, GLdo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLRASTERPOS4DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS4DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLRASTERPOS4FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS4FPROC)(GLfloat   x, GLfloat   y, GLfloat   z, GLfloat/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLRASTERPOS4FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS4FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLRASTERPOS4IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS4IPROC)(GLint   x, GLint   y, GLint   z, GLint   w);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLint z,GLint w)
PFNGLRASTERPOS4IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS4IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLRASTERPOS4SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS4SPROC)(GLshort   x, GLshort   y, GLshort   z, GLshort/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLRASTERPOS4SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRASTERPOS4SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLREADBUFFERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLREADBUFFERPROC)(GLenum   src);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum src)
PFNGLREADNPIXELSARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLREADNPIXELSARBPROC)(GLint   x, GLint   y, GLsizei   width, GLsi/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADNPIXELSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLREADNPIXELSPROC)(GLint   x, GLint   y, GLsizei   width, GLsizei/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADPIXELSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLREADPIXELSPROC)(GLint   x, GLint   y, GLsizei   width, GLsizei /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,void * pixels)
PFNGLRECTDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRECTDPROC)(GLdouble   x1, GLdouble   y1, GLdouble   x2, GLdoubl/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x1,GLdouble y1,GLdouble x2,GLdouble y2)
PFNGLRECTDVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRECTDVPROC)(const  GLdouble  * v1, const  GLdouble  * v2);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v1,const GLdouble * v2)
PFNGLRECTFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRECTFPROC)(GLfloat   x1, GLfloat   y1, GLfloat   x2, GLfloat   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x1,GLfloat y1,GLfloat x2,GLfloat y2)
PFNGLRECTFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRECTFVPROC)(const  GLfloat  * v1, const  GLfloat  * v2);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v1,const GLfloat * v2)
PFNGLRECTIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRECTIPROC)(GLint   x1, GLint   y1, GLint   x2, GLint   y2);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x1,GLint y1,GLint x2,GLint y2)
PFNGLRECTIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRECTIVPROC)(const  GLint  * v1, const  GLint  * v2);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v1,const GLint * v2)
PFNGLRECTSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRECTSPROC)(GLshort   x1, GLshort   y1, GLshort   x2, GLshort   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort x1,GLshort y1,GLshort x2,GLshort y2)
PFNGLRECTSVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRECTSVPROC)(const  GLshort  * v1, const  GLshort  * v2);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v1,const GLshort * v2)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum   target, GLsizei   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEPROC)(GLenum   target, GLenum   internalform/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERMODEPROC	deps/glad/gl.h	/^typedef GLint (GLAD_API_PTR *PFNGLRENDERMODEPROC)(GLenum   mode);$/;"	t	typeref:typename:GLint (GLAD_API_PTR *)(GLenum mode)
PFNGLROTATEDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLROTATEDPROC)(GLdouble   angle, GLdouble   x, GLdouble   y, GLdo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
PFNGLROTATEFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLROTATEFPROC)(GLfloat   angle, GLfloat   x, GLfloat   y, GLfloat/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
PFNGLSAMPLECOVERAGEARBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSAMPLECOVERAGEARBPROC)(GLfloat   value, GLboolean   invert);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSAMPLECOVERAGEPROC)(GLfloat   value, GLboolean   invert);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat value,GLboolean invert)
PFNGLSAMPLEMASKIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSAMPLEMASKIPROC)(GLuint   maskNumber, GLbitfield   mask);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint maskNumber,GLbitfield mask)
PFNGLSAMPLERPARAMETERFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFPROC)(GLuint   sampler, GLenum   pname, GLfloa/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFVPROC)(GLuint   sampler, GLenum   pname, const/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint sampler,GLenum pname,const GLfloat * param)
PFNGLSAMPLERPARAMETERIIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVPROC)(GLuint   sampler, GLenum   pname, cons/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSAMPLERPARAMETERIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIPROC)(GLuint   sampler, GLenum   pname, GLint /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint   sampler, GLenum   pname, con/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint sampler,GLenum pname,const GLuint * param)
PFNGLSAMPLERPARAMETERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIVPROC)(GLuint   sampler, GLenum   pname, const/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSCALEDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSCALEDPROC)(GLdouble   x, GLdouble   y, GLdouble   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLSCALEFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSCALEFPROC)(GLfloat   x, GLfloat   y, GLfloat   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLSCISSORPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSCISSORPROC)(GLint   x, GLint   y, GLsizei   width, GLsizei   h/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLSECONDARYCOLOR3BPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3BPROC)(GLbyte   red, GLbyte   green, GLbyte   bl/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3BVPROC)(const  GLbyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLbyte * v)
PFNGLSECONDARYCOLOR3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3DPROC)(GLdouble   red, GLdouble   green, GLdoubl/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLSECONDARYCOLOR3FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3FPROC)(GLfloat   red, GLfloat   green, GLfloat  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLSECONDARYCOLOR3IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3IPROC)(GLint   red, GLint   green, GLint   blue)/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLSECONDARYCOLOR3SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3SPROC)(GLshort   red, GLshort   green, GLshort  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLSECONDARYCOLOR3UBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBPROC)(GLubyte   red, GLubyte   green, GLubyte /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBVPROC)(const  GLubyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIPROC)(GLuint   red, GLuint   green, GLuint   b/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIVPROC)(const  GLuint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLuint * v)
PFNGLSECONDARYCOLOR3USPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3USPROC)(GLushort   red, GLushort   green, GLusho/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3USVPROC)(const  GLushort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLushort * v)
PFNGLSECONDARYCOLORP3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORP3UIPROC)(GLenum   type, GLuint   color);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint color)
PFNGLSECONDARYCOLORP3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORP3UIVPROC)(GLenum   type, const  GLuint  * color)/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * color)
PFNGLSECONDARYCOLORPOINTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORPOINTERPROC)(GLint   size, GLenum   type, GLsizei/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSELECTBUFFERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSELECTBUFFERPROC)(GLsizei   size, GLuint  * buffer);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsizei size,GLuint * buffer)
PFNGLSHADEMODELPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSHADEMODELPROC)(GLenum   mode);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum mode)
PFNGLSHADERSOURCEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSHADERSOURCEPROC)(GLuint   shader, GLsizei   count, const  GLch/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSTENCILFUNCPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCPROC)(GLenum   func, GLint   ref, GLuint   mask);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCSEPARATEPROC)(GLenum   face, GLenum   func, GLint   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILMASKPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSTENCILMASKPROC)(GLuint   mask);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSTENCILMASKSEPARATEPROC)(GLenum   face, GLuint   mask);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLuint mask)
PFNGLSTENCILOPPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSTENCILOPPROC)(GLenum   fail, GLenum   zfail, GLenum   zpass);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum fail,GLenum zfail,GLenum zpass)
PFNGLSTENCILOPSEPARATEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLSTENCILOPSEPARATEPROC)(GLenum   face, GLenum   sfail, GLenum   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLTEXBUFFERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXBUFFERPROC)(GLenum   target, GLenum   internalformat, GLuint/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXCOORD1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD1DPROC)(GLdouble   s);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble s)
PFNGLTEXCOORD1DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD1DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLTEXCOORD1FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD1FPROC)(GLfloat   s);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat s)
PFNGLTEXCOORD1FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD1FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLTEXCOORD1IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD1IPROC)(GLint   s);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint s)
PFNGLTEXCOORD1IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD1IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLTEXCOORD1SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD1SPROC)(GLshort   s);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort s)
PFNGLTEXCOORD1SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD1SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLTEXCOORD2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD2DPROC)(GLdouble   s, GLdouble   t);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble s,GLdouble t)
PFNGLTEXCOORD2DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD2DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLTEXCOORD2FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FPROC)(GLfloat   s, GLfloat   t);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat s,GLfloat t)
PFNGLTEXCOORD2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLTEXCOORD2IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD2IPROC)(GLint   s, GLint   t);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint s,GLint t)
PFNGLTEXCOORD2IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD2IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLTEXCOORD2SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD2SPROC)(GLshort   s, GLshort   t);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort s,GLshort t)
PFNGLTEXCOORD2SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD2SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLTEXCOORD3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD3DPROC)(GLdouble   s, GLdouble   t, GLdouble   r);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble s,GLdouble t,GLdouble r)
PFNGLTEXCOORD3DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD3DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLTEXCOORD3FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD3FPROC)(GLfloat   s, GLfloat   t, GLfloat   r);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat s,GLfloat t,GLfloat r)
PFNGLTEXCOORD3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD3FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLTEXCOORD3IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD3IPROC)(GLint   s, GLint   t, GLint   r);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint s,GLint t,GLint r)
PFNGLTEXCOORD3IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD3IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLTEXCOORD3SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD3SPROC)(GLshort   s, GLshort   t, GLshort   r);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort s,GLshort t,GLshort r)
PFNGLTEXCOORD3SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD3SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLTEXCOORD4DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD4DPROC)(GLdouble   s, GLdouble   t, GLdouble   r, GLdou/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLTEXCOORD4DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD4DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLTEXCOORD4FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FPROC)(GLfloat   s, GLfloat   t, GLfloat   r, GLfloat /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLTEXCOORD4FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLTEXCOORD4IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD4IPROC)(GLint   s, GLint   t, GLint   r, GLint   q);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint s,GLint t,GLint r,GLint q)
PFNGLTEXCOORD4IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD4IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLTEXCOORD4SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD4SPROC)(GLshort   s, GLshort   t, GLshort   r, GLshort /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLTEXCOORD4SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORD4SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLTEXCOORDP1UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORDP1UIPROC)(GLenum   type, GLuint   coords);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP1UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORDP1UIVPROC)(GLenum   type, const  GLuint  * coords);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP2UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORDP2UIPROC)(GLenum   type, GLuint   coords);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP2UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORDP2UIVPROC)(GLenum   type, const  GLuint  * coords);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORDP3UIPROC)(GLenum   type, GLuint   coords);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORDP3UIVPROC)(GLenum   type, const  GLuint  * coords);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP4UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORDP4UIPROC)(GLenum   type, GLuint   coords);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP4UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORDP4UIVPROC)(GLenum   type, const  GLuint  * coords);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDPOINTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXCOORDPOINTERPROC)(GLint   size, GLenum   type, GLsizei   str/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLTEXENVFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXENVFPROC)(GLenum   target, GLenum   pname, GLfloat   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLfloat param)
PFNGLTEXENVFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXENVFVPROC)(GLenum   target, GLenum   pname, const  GLfloat  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXENVIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXENVIPROC)(GLenum   target, GLenum   pname, GLint   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLint param)
PFNGLTEXENVIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXENVIVPROC)(GLenum   target, GLenum   pname, const  GLint  * /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXGENDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXGENDPROC)(GLenum   coord, GLenum   pname, GLdouble   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum coord,GLenum pname,GLdouble param)
PFNGLTEXGENDVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXGENDVPROC)(GLenum   coord, GLenum   pname, const  GLdouble  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum coord,GLenum pname,const GLdouble * params)
PFNGLTEXGENFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXGENFPROC)(GLenum   coord, GLenum   pname, GLfloat   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum coord,GLenum pname,GLfloat param)
PFNGLTEXGENFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXGENFVPROC)(GLenum   coord, GLenum   pname, const  GLfloat  */;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum coord,GLenum pname,const GLfloat * params)
PFNGLTEXGENIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXGENIPROC)(GLenum   coord, GLenum   pname, GLint   param);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum coord,GLenum pname,GLint param)
PFNGLTEXGENIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXGENIVPROC)(GLenum   coord, GLenum   pname, const  GLint  * p/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum coord,GLenum pname,const GLint * params)
PFNGLTEXIMAGE1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXIMAGE1DPROC)(GLenum   target, GLint   level, GLint   interna/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum   target, GLsizei   samples, /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DPROC)(GLenum   target, GLint   level, GLint   interna/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum   target, GLsizei   samples, /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DPROC)(GLenum   target, GLint   level, GLint   interna/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXPARAMETERFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFPROC)(GLenum   target, GLenum   pname, GLfloat   p/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLfloat param)
PFNGLTEXPARAMETERFVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFVPROC)(GLenum   target, GLenum   pname, const  GLf/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXPARAMETERIIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVPROC)(GLenum   target, GLenum   pname, const  GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIPROC)(GLenum   target, GLenum   pname, GLint   par/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,GLint param)
PFNGLTEXPARAMETERIUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVPROC)(GLenum   target, GLenum   pname, const  G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIVPROC)(GLenum   target, GLenum   pname, const  GLi/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXSUBIMAGE1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE1DPROC)(GLenum   target, GLint   level, GLint   xoff/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE2DPROC)(GLenum   target, GLint   level, GLint   xoff/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE3DPROC)(GLenum   target, GLint   level, GLint   xoff/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint   program, GLsizei   coun/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSLATEDPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTRANSLATEDPROC)(GLdouble   x, GLdouble   y, GLdouble   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLTRANSLATEFPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLTRANSLATEFPROC)(GLfloat   x, GLfloat   y, GLfloat   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLUNIFORM1FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM1FPROC)(GLint   location, GLfloat   v0);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM1FVPROC)(GLint   location, GLsizei   count, const  GLflo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM1IPROC)(GLint   location, GLint   v0);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLint v0)
PFNGLUNIFORM1IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM1IVPROC)(GLint   location, GLsizei   count, const  GLint/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIPROC)(GLint   location, GLuint   v0);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLuint v0)
PFNGLUNIFORM1UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIVPROC)(GLint   location, GLsizei   count, const  GLui/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM2FPROC)(GLint   location, GLfloat   v0, GLfloat   v1);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM2FVPROC)(GLint   location, GLsizei   count, const  GLflo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM2IPROC)(GLint   location, GLint   v0, GLint   v1);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM2IVPROC)(GLint   location, GLsizei   count, const  GLint/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIPROC)(GLint   location, GLuint   v0, GLuint   v1);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIVPROC)(GLint   location, GLsizei   count, const  GLui/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM3FPROC)(GLint   location, GLfloat   v0, GLfloat   v1, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM3FVPROC)(GLint   location, GLsizei   count, const  GLflo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM3IPROC)(GLint   location, GLint   v0, GLint   v1, GLint /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM3IVPROC)(GLint   location, GLsizei   count, const  GLint/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIPROC)(GLint   location, GLuint   v0, GLuint   v1, GLu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIVPROC)(GLint   location, GLsizei   count, const  GLui/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM4FPROC)(GLint   location, GLfloat   v0, GLfloat   v1, GL/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM4FVPROC)(GLint   location, GLsizei   count, const  GLflo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM4IPROC)(GLint   location, GLint   v0, GLint   v1, GLint /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM4IVPROC)(GLint   location, GLsizei   count, const  GLint/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIPROC)(GLint   location, GLuint   v0, GLuint   v1, GLu/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIVPROC)(GLint   location, GLsizei   count, const  GLui/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORMBLOCKBINDINGPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint   program, GLuint   uniformBloc/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMMATRIX2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVPROC)(GLint   location, GLsizei   count, GLbool/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3FVPROC)(GLint   location, GLsizei   count, GLbo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4FVPROC)(GLint   location, GLsizei   count, GLbo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVPROC)(GLint   location, GLsizei   count, GLbool/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2FVPROC)(GLint   location, GLsizei   count, GLbo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4FVPROC)(GLint   location, GLsizei   count, GLbo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVPROC)(GLint   location, GLsizei   count, GLbool/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2FVPROC)(GLint   location, GLsizei   count, GLbo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3FVPROC)(GLint   location, GLsizei   count, GLbo/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNMAPBUFFERPROC	deps/glad/gl.h	/^typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFERPROC)(GLenum   target);$/;"	t	typeref:typename:GLboolean (GLAD_API_PTR *)(GLenum target)
PFNGLUSEPROGRAMPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMPROC)(GLuint   program);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program)
PFNGLVALIDATEPROGRAMPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPROC)(GLuint   program);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint program)
PFNGLVERTEX2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX2DPROC)(GLdouble   x, GLdouble   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x,GLdouble y)
PFNGLVERTEX2DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX2DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLVERTEX2FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX2FPROC)(GLfloat   x, GLfloat   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x,GLfloat y)
PFNGLVERTEX2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX2FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLVERTEX2IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX2IPROC)(GLint   x, GLint   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y)
PFNGLVERTEX2IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX2IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLVERTEX2SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX2SPROC)(GLshort   x, GLshort   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort x,GLshort y)
PFNGLVERTEX2SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX2SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLVERTEX3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX3DPROC)(GLdouble   x, GLdouble   y, GLdouble   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEX3DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX3DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLVERTEX3FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX3FPROC)(GLfloat   x, GLfloat   y, GLfloat   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEX3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX3FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLVERTEX3IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX3IPROC)(GLint   x, GLint   y, GLint   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLint z)
PFNGLVERTEX3IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX3IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLVERTEX3SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX3SPROC)(GLshort   x, GLshort   y, GLshort   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort x,GLshort y,GLshort z)
PFNGLVERTEX3SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX3SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLVERTEX4DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX4DPROC)(GLdouble   x, GLdouble   y, GLdouble   z, GLdoubl/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEX4DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX4DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLVERTEX4FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX4FPROC)(GLfloat   x, GLfloat   y, GLfloat   z, GLfloat   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEX4FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX4FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLVERTEX4IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX4IPROC)(GLint   x, GLint   y, GLint   z, GLint   w);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEX4IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX4IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLVERTEX4SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX4SPROC)(GLshort   x, GLshort   y, GLshort   z, GLshort   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEX4SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEX4SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLVERTEXATTRIB1DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DPROC)(GLuint   index, GLdouble   x);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DVPROC)(GLuint   index, const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FPROC)(GLuint   index, GLfloat   x);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FVPROC)(GLuint   index, const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SPROC)(GLuint   index, GLshort   x);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SVPROC)(GLuint   index, const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DPROC)(GLuint   index, GLdouble   x, GLdouble   y)/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DVPROC)(GLuint   index, const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FPROC)(GLuint   index, GLfloat   x, GLfloat   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FVPROC)(GLuint   index, const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SPROC)(GLuint   index, GLshort   x, GLshort   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SVPROC)(GLuint   index, const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DPROC)(GLuint   index, GLdouble   x, GLdouble   y,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DVPROC)(GLuint   index, const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FPROC)(GLuint   index, GLfloat   x, GLfloat   y, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FVPROC)(GLuint   index, const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SPROC)(GLuint   index, GLshort   x, GLshort   y, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SVPROC)(GLuint   index, const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4BVPROC)(GLuint   index, const  GLbyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DPROC)(GLuint   index, GLdouble   x, GLdouble   y,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DVPROC)(GLuint   index, const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FPROC)(GLuint   index, GLfloat   x, GLfloat   y, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FVPROC)(GLuint   index, const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4IVPROC)(GLuint   index, const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NBVPROC)(GLuint   index, const  GLbyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NIVPROC)(GLuint   index, const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NSVPROC)(GLuint   index, const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBPROC)(GLuint   index, GLubyte   x, GLubyte   y,/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBVPROC)(GLuint   index, const  GLubyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUIVPROC)(GLuint   index, const  GLuint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUSVPROC)(GLuint   index, const  GLushort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SPROC)(GLuint   index, GLshort   x, GLshort   y, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SVPROC)(GLuint   index, const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVPROC)(GLuint   index, const  GLubyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UIVPROC)(GLuint   index, const  GLuint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4USVPROC)(GLuint   index, const  GLushort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBDIVISORPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORPROC)(GLuint   index, GLuint   divisor);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBI1IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IPROC)(GLuint   index, GLint   x);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IVPROC)(GLuint   index, const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIPROC)(GLuint   index, GLuint   x);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIVPROC)(GLuint   index, const  GLuint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IPROC)(GLuint   index, GLint   x, GLint   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IVPROC)(GLuint   index, const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIPROC)(GLuint   index, GLuint   x, GLuint   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIVPROC)(GLuint   index, const  GLuint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IPROC)(GLuint   index, GLint   x, GLint   y, GLin/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IVPROC)(GLuint   index, const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIPROC)(GLuint   index, GLuint   x, GLuint   y, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIVPROC)(GLuint   index, const  GLuint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4BVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4BVPROC)(GLuint   index, const  GLbyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IPROC)(GLuint   index, GLint   x, GLint   y, GLin/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IVPROC)(GLuint   index, const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4SVPROC)(GLuint   index, const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4UBVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UBVPROC)(GLuint   index, const  GLubyte  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIPROC)(GLuint   index, GLuint   x, GLuint   y, G/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIVPROC)(GLuint   index, const  GLuint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4USVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4USVPROC)(GLuint   index, const  GLushort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBIPOINTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint   index, GLint   size, GLenum /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBP1UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIPROC)(GLuint   index, GLenum   type, GLboolean /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIVPROC)(GLuint   index, GLenum   type, GLboolean/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIPROC)(GLuint   index, GLenum   type, GLboolean /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIVPROC)(GLuint   index, GLenum   type, GLboolean/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIPROC)(GLuint   index, GLenum   type, GLboolean /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIVPROC)(GLuint   index, GLenum   type, GLboolean/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIPROC)(GLuint   index, GLenum   type, GLboolean /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIVPROC)(GLuint   index, GLenum   type, GLboolean/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBPOINTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERPROC)(GLuint   index, GLint   size, GLenum  /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXP2UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXP2UIPROC)(GLenum   type, GLuint   value);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint value)
PFNGLVERTEXP2UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXP2UIVPROC)(GLenum   type, const  GLuint  * value);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * value)
PFNGLVERTEXP3UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXP3UIPROC)(GLenum   type, GLuint   value);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint value)
PFNGLVERTEXP3UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXP3UIVPROC)(GLenum   type, const  GLuint  * value);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * value)
PFNGLVERTEXP4UIPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXP4UIPROC)(GLenum   type, GLuint   value);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,GLuint value)
PFNGLVERTEXP4UIVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXP4UIVPROC)(GLenum   type, const  GLuint  * value);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLenum type,const GLuint * value)
PFNGLVERTEXPOINTERPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVERTEXPOINTERPROC)(GLint   size, GLenum   type, GLsizei   strid/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVIEWPORTPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLVIEWPORTPROC)(GLint   x, GLint   y, GLsizei   width, GLsizei   /;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLWAITSYNCPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWAITSYNCPROC)(GLsync   sync, GLbitfield   flags, GLuint64   tim/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLWINDOWPOS2DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2DPROC)(GLdouble   x, GLdouble   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLWINDOWPOS2FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2FPROC)(GLfloat   x, GLfloat   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLWINDOWPOS2IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2IPROC)(GLint   x, GLint   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y)
PFNGLWINDOWPOS2IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLWINDOWPOS2SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2SPROC)(GLshort   x, GLshort   y);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLWINDOWPOS3DPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3DPROC)(GLdouble   x, GLdouble   y, GLdouble   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3DVPROC)(const  GLdouble  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLdouble * v)
PFNGLWINDOWPOS3FPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3FPROC)(GLfloat   x, GLfloat   y, GLfloat   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3FVPROC)(const  GLfloat  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLfloat * v)
PFNGLWINDOWPOS3IPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3IPROC)(GLint   x, GLint   y, GLint   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3IVPROC)(const  GLint  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLint * v)
PFNGLWINDOWPOS3SPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3SPROC)(GLshort   x, GLshort   y, GLshort   z);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SVPROC	deps/glad/gl.h	/^typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3SVPROC)(const  GLshort  * v);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(const GLshort * v)
PFNGLXCREATECONTEXTATTRIBSARBPROC	src/glx_context.h	/^typedef GLXContext (*PFNGLXCREATECONTEXTATTRIBSARBPROC)(Display*,GLXFBConfig,GLXContext,Bool,con/;"	t	typeref:typename:GLXContext (*)(Display *,GLXFBConfig,GLXContext,Bool,const int *)
PFNGLXCREATENEWCONTEXTPROC	src/glx_context.h	/^typedef GLXContext (*PFNGLXCREATENEWCONTEXTPROC)(Display*,GLXFBConfig,int,GLXContext,Bool);$/;"	t	typeref:typename:GLXContext (*)(Display *,GLXFBConfig,int,GLXContext,Bool)
PFNGLXCREATEWINDOWPROC	src/glx_context.h	/^typedef GLXWindow (*PFNGLXCREATEWINDOWPROC)(Display*,GLXFBConfig,Window,const int*);$/;"	t	typeref:typename:GLXWindow (*)(Display *,GLXFBConfig,Window,const int *)
PFNGLXDESTROYCONTEXTPROC	src/glx_context.h	/^typedef void (*PFNGLXDESTROYCONTEXTPROC)(Display*,GLXContext);$/;"	t	typeref:typename:void (*)(Display *,GLXContext)
PFNGLXDESTROYWINDOWPROC	src/glx_context.h	/^typedef void (*PFNGLXDESTROYWINDOWPROC)(Display*,GLXWindow);$/;"	t	typeref:typename:void (*)(Display *,GLXWindow)
PFNGLXGETCLIENTSTRINGPROC	src/glx_context.h	/^typedef const char* (*PFNGLXGETCLIENTSTRINGPROC)(Display*,int);$/;"	t	typeref:typename:const char * (*)(Display *,int)
PFNGLXGETFBCONFIGATTRIBPROC	src/glx_context.h	/^typedef int (*PFNGLXGETFBCONFIGATTRIBPROC)(Display*,GLXFBConfig,int,int*);$/;"	t	typeref:typename:int (*)(Display *,GLXFBConfig,int,int *)
PFNGLXGETFBCONFIGSPROC	src/glx_context.h	/^typedef GLXFBConfig* (*PFNGLXGETFBCONFIGSPROC)(Display*,int,int*);$/;"	t	typeref:typename:GLXFBConfig * (*)(Display *,int,int *)
PFNGLXGETPROCADDRESSPROC	src/glx_context.h	/^typedef __GLXextproc (* PFNGLXGETPROCADDRESSPROC)(const GLubyte *procName);$/;"	t	typeref:typename:__GLXextproc (*)(const GLubyte * procName)
PFNGLXGETVISUALFROMFBCONFIGPROC	src/glx_context.h	/^typedef XVisualInfo* (*PFNGLXGETVISUALFROMFBCONFIGPROC)(Display*,GLXFBConfig);$/;"	t	typeref:typename:XVisualInfo * (*)(Display *,GLXFBConfig)
PFNGLXMAKECURRENTPROC	src/glx_context.h	/^typedef Bool (*PFNGLXMAKECURRENTPROC)(Display*,GLXDrawable,GLXContext);$/;"	t	typeref:typename:Bool (*)(Display *,GLXDrawable,GLXContext)
PFNGLXQUERYEXTENSIONPROC	src/glx_context.h	/^typedef Bool (*PFNGLXQUERYEXTENSIONPROC)(Display*,int*,int*);$/;"	t	typeref:typename:Bool (*)(Display *,int *,int *)
PFNGLXQUERYEXTENSIONSSTRINGPROC	src/glx_context.h	/^typedef const char* (*PFNGLXQUERYEXTENSIONSSTRINGPROC)(Display*,int);$/;"	t	typeref:typename:const char * (*)(Display *,int)
PFNGLXQUERYVERSIONPROC	src/glx_context.h	/^typedef Bool (*PFNGLXQUERYVERSIONPROC)(Display*,int*,int*);$/;"	t	typeref:typename:Bool (*)(Display *,int *,int *)
PFNGLXSWAPBUFFERSPROC	src/glx_context.h	/^typedef void (*PFNGLXSWAPBUFFERSPROC)(Display*,GLXDrawable);$/;"	t	typeref:typename:void (*)(Display *,GLXDrawable)
PFNGLXSWAPINTERVALEXTPROC	src/glx_context.h	/^typedef void (*PFNGLXSWAPINTERVALEXTPROC)(Display*,GLXDrawable,int);$/;"	t	typeref:typename:void (*)(Display *,GLXDrawable,int)
PFNGLXSWAPINTERVALMESAPROC	src/glx_context.h	/^typedef int (*PFNGLXSWAPINTERVALMESAPROC)(int);$/;"	t	typeref:typename:int (*)(int)
PFNGLXSWAPINTERVALSGIPROC	src/glx_context.h	/^typedef int (*PFNGLXSWAPINTERVALSGIPROC)(int);$/;"	t	typeref:typename:int (*)(int)
PFNWGLCREATECONTEXTATTRIBSARBPROC	src/wgl_context.h	/^typedef HGLRC (WINAPI * PFNWGLCREATECONTEXTATTRIBSARBPROC)(HDC,HGLRC,const int*);$/;"	t	typeref:typename:HGLRC (WINAPI *)(HDC,HGLRC,const int *)
PFNWGLGETEXTENSIONSSTRINGARBPROC	src/wgl_context.h	/^typedef const char* (WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC)(HDC);$/;"	t	typeref:typename:const char * (WINAPI *)(HDC)
PFNWGLGETEXTENSIONSSTRINGEXTPROC	src/wgl_context.h	/^typedef const char* (WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC)(void);$/;"	t	typeref:typename:const char * (WINAPI *)(void)
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	src/wgl_context.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC)(HDC,int,int,UINT,const int*,int*);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC,int,int,UINT,const int *,int *)
PFNWGLSWAPINTERVALEXTPROC	src/wgl_context.h	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC)(int);$/;"	t	typeref:typename:BOOL (WINAPI *)(int)
PFN_AdjustWindowRectExForDpi	src/win32_platform.h	/^typedef BOOL (WINAPI * PFN_AdjustWindowRectExForDpi)(LPRECT,DWORD,BOOL,DWORD,UINT);$/;"	t	typeref:typename:BOOL (WINAPI *)(LPRECT,DWORD,BOOL,DWORD,UINT)
PFN_ChangeWindowMessageFilterEx	src/win32_platform.h	/^typedef BOOL (WINAPI * PFN_ChangeWindowMessageFilterEx)(HWND,UINT,DWORD,CHANGEFILTERSTRUCT*);$/;"	t	typeref:typename:BOOL (WINAPI *)(HWND,UINT,DWORD,CHANGEFILTERSTRUCT *)
PFN_DirectInput8Create	src/win32_platform.h	/^typedef HRESULT (WINAPI * PFN_DirectInput8Create)(HINSTANCE,DWORD,REFIID,LPVOID*,LPUNKNOWN);$/;"	t	typeref:typename:HRESULT (WINAPI *)(HINSTANCE,DWORD,REFIID,LPVOID *,LPUNKNOWN)
PFN_DwmEnableBlurBehindWindow	src/win32_platform.h	/^typedef HRESULT(WINAPI * PFN_DwmEnableBlurBehindWindow)(HWND,const DWM_BLURBEHIND*);$/;"	t	typeref:typename:HRESULT (WINAPI *)(HWND,const DWM_BLURBEHIND *)
PFN_DwmFlush	src/win32_platform.h	/^typedef HRESULT (WINAPI * PFN_DwmFlush)(VOID);$/;"	t	typeref:typename:HRESULT (WINAPI *)(VOID)
PFN_DwmIsCompositionEnabled	src/win32_platform.h	/^typedef HRESULT (WINAPI * PFN_DwmIsCompositionEnabled)(BOOL*);$/;"	t	typeref:typename:HRESULT (WINAPI *)(BOOL *)
PFN_EnableNonClientDpiScaling	src/win32_platform.h	/^typedef BOOL (WINAPI * PFN_EnableNonClientDpiScaling)(HWND);$/;"	t	typeref:typename:BOOL (WINAPI *)(HWND)
PFN_GetDpiForMonitor	src/win32_platform.h	/^typedef HRESULT (WINAPI * PFN_GetDpiForMonitor)(HMONITOR,MONITOR_DPI_TYPE,UINT*,UINT*);$/;"	t	typeref:typename:HRESULT (WINAPI *)(HMONITOR,MONITOR_DPI_TYPE,UINT *,UINT *)
PFN_GetDpiForWindow	src/win32_platform.h	/^typedef UINT (WINAPI * PFN_GetDpiForWindow)(HWND);$/;"	t	typeref:typename:UINT (WINAPI *)(HWND)
PFN_OSMesaCreateContextAttribs	src/osmesa_context.h	/^typedef OSMesaContext (GLAPIENTRY * PFN_OSMesaCreateContextAttribs)(const int*,OSMesaContext);$/;"	t	typeref:typename:OSMesaContext (GLAPIENTRY *)(const int *,OSMesaContext)
PFN_OSMesaCreateContextExt	src/osmesa_context.h	/^typedef OSMesaContext (GLAPIENTRY * PFN_OSMesaCreateContextExt)(GLenum,GLint,GLint,GLint,OSMesaC/;"	t	typeref:typename:OSMesaContext (GLAPIENTRY *)(GLenum,GLint,GLint,GLint,OSMesaContext)
PFN_OSMesaDestroyContext	src/osmesa_context.h	/^typedef void (GLAPIENTRY * PFN_OSMesaDestroyContext)(OSMesaContext);$/;"	t	typeref:typename:void (GLAPIENTRY *)(OSMesaContext)
PFN_OSMesaGetColorBuffer	src/osmesa_context.h	/^typedef int (GLAPIENTRY * PFN_OSMesaGetColorBuffer)(OSMesaContext,int*,int*,int*,void**);$/;"	t	typeref:typename:int (GLAPIENTRY *)(OSMesaContext,int *,int *,int *,void **)
PFN_OSMesaGetDepthBuffer	src/osmesa_context.h	/^typedef int (GLAPIENTRY * PFN_OSMesaGetDepthBuffer)(OSMesaContext,int*,int*,int*,void**);$/;"	t	typeref:typename:int (GLAPIENTRY *)(OSMesaContext,int *,int *,int *,void **)
PFN_OSMesaGetProcAddress	src/osmesa_context.h	/^typedef GLFWglproc (GLAPIENTRY * PFN_OSMesaGetProcAddress)(const char*);$/;"	t	typeref:typename:GLFWglproc (GLAPIENTRY *)(const char *)
PFN_OSMesaMakeCurrent	src/osmesa_context.h	/^typedef int (GLAPIENTRY * PFN_OSMesaMakeCurrent)(OSMesaContext,void*,int,int,int);$/;"	t	typeref:typename:int (GLAPIENTRY *)(OSMesaContext,void *,int,int,int)
PFN_RtlVerifyVersionInfo	src/win32_platform.h	/^typedef LONG (WINAPI * PFN_RtlVerifyVersionInfo)(OSVERSIONINFOEXW*,ULONG,ULONGLONG);$/;"	t	typeref:typename:LONG (WINAPI *)(OSVERSIONINFOEXW *,ULONG,ULONGLONG)
PFN_SetProcessDPIAware	src/win32_platform.h	/^typedef BOOL (WINAPI * PFN_SetProcessDPIAware)(void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFN_SetProcessDpiAwareness	src/win32_platform.h	/^typedef HRESULT (WINAPI * PFN_SetProcessDpiAwareness)(PROCESS_DPI_AWARENESS);$/;"	t	typeref:typename:HRESULT (WINAPI *)(PROCESS_DPI_AWARENESS)
PFN_SetProcessDpiAwarenessContext	src/win32_platform.h	/^typedef BOOL (WINAPI * PFN_SetProcessDpiAwarenessContext)(HANDLE);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE)
PFN_XF86VidModeGetGammaRamp	src/x11_platform.h	/^typedef Bool (* PFN_XF86VidModeGetGammaRamp)(Display*,int,int,unsigned short*,unsigned short*,un/;"	t	typeref:typename:Bool (*)(Display *,int,int,unsigned short *,unsigned short *,unsigned short *)
PFN_XF86VidModeGetGammaRampSize	src/x11_platform.h	/^typedef Bool (* PFN_XF86VidModeGetGammaRampSize)(Display*,int,int*);$/;"	t	typeref:typename:Bool (*)(Display *,int,int *)
PFN_XF86VidModeQueryExtension	src/x11_platform.h	/^typedef Bool (* PFN_XF86VidModeQueryExtension)(Display*,int*,int*);$/;"	t	typeref:typename:Bool (*)(Display *,int *,int *)
PFN_XF86VidModeSetGammaRamp	src/x11_platform.h	/^typedef Bool (* PFN_XF86VidModeSetGammaRamp)(Display*,int,int,unsigned short*,unsigned short*,un/;"	t	typeref:typename:Bool (*)(Display *,int,int,unsigned short *,unsigned short *,unsigned short *)
PFN_XGetXCBConnection	src/x11_platform.h	/^typedef xcb_connection_t* (* PFN_XGetXCBConnection)(Display*);$/;"	t	typeref:typename:xcb_connection_t * (*)(Display *)
PFN_XIQueryVersion	src/x11_platform.h	/^typedef Status (* PFN_XIQueryVersion)(Display*,int*,int*);$/;"	t	typeref:typename:Status (*)(Display *,int *,int *)
PFN_XISelectEvents	src/x11_platform.h	/^typedef int (* PFN_XISelectEvents)(Display*,Window,XIEventMask*,int);$/;"	t	typeref:typename:int (*)(Display *,Window,XIEventMask *,int)
PFN_XInputGetCapabilities	src/win32_platform.h	/^typedef DWORD (WINAPI * PFN_XInputGetCapabilities)(DWORD,DWORD,XINPUT_CAPABILITIES*);$/;"	t	typeref:typename:DWORD (WINAPI *)(DWORD,DWORD,XINPUT_CAPABILITIES *)
PFN_XInputGetState	src/win32_platform.h	/^typedef DWORD (WINAPI * PFN_XInputGetState)(DWORD,XINPUT_STATE*);$/;"	t	typeref:typename:DWORD (WINAPI *)(DWORD,XINPUT_STATE *)
PFN_XRRAllocGamma	src/x11_platform.h	/^typedef XRRCrtcGamma* (* PFN_XRRAllocGamma)(int);$/;"	t	typeref:typename:XRRCrtcGamma * (*)(int)
PFN_XRRFreeCrtcInfo	src/x11_platform.h	/^typedef void (* PFN_XRRFreeCrtcInfo)(XRRCrtcInfo*);$/;"	t	typeref:typename:void (*)(XRRCrtcInfo *)
PFN_XRRFreeGamma	src/x11_platform.h	/^typedef void (* PFN_XRRFreeGamma)(XRRCrtcGamma*);$/;"	t	typeref:typename:void (*)(XRRCrtcGamma *)
PFN_XRRFreeOutputInfo	src/x11_platform.h	/^typedef void (* PFN_XRRFreeOutputInfo)(XRROutputInfo*);$/;"	t	typeref:typename:void (*)(XRROutputInfo *)
PFN_XRRFreeScreenResources	src/x11_platform.h	/^typedef void (* PFN_XRRFreeScreenResources)(XRRScreenResources*);$/;"	t	typeref:typename:void (*)(XRRScreenResources *)
PFN_XRRGetCrtcGamma	src/x11_platform.h	/^typedef XRRCrtcGamma* (* PFN_XRRGetCrtcGamma)(Display*,RRCrtc);$/;"	t	typeref:typename:XRRCrtcGamma * (*)(Display *,RRCrtc)
PFN_XRRGetCrtcGammaSize	src/x11_platform.h	/^typedef int (* PFN_XRRGetCrtcGammaSize)(Display*,RRCrtc);$/;"	t	typeref:typename:int (*)(Display *,RRCrtc)
PFN_XRRGetCrtcInfo	src/x11_platform.h	/^typedef XRRCrtcInfo* (* PFN_XRRGetCrtcInfo) (Display*,XRRScreenResources*,RRCrtc);$/;"	t	typeref:typename:XRRCrtcInfo * (*)(Display *,XRRScreenResources *,RRCrtc)
PFN_XRRGetOutputInfo	src/x11_platform.h	/^typedef XRROutputInfo* (* PFN_XRRGetOutputInfo)(Display*,XRRScreenResources*,RROutput);$/;"	t	typeref:typename:XRROutputInfo * (*)(Display *,XRRScreenResources *,RROutput)
PFN_XRRGetOutputPrimary	src/x11_platform.h	/^typedef RROutput (* PFN_XRRGetOutputPrimary)(Display*,Window);$/;"	t	typeref:typename:RROutput (*)(Display *,Window)
PFN_XRRGetScreenResourcesCurrent	src/x11_platform.h	/^typedef XRRScreenResources* (* PFN_XRRGetScreenResourcesCurrent)(Display*,Window);$/;"	t	typeref:typename:XRRScreenResources * (*)(Display *,Window)
PFN_XRRQueryExtension	src/x11_platform.h	/^typedef Bool (* PFN_XRRQueryExtension)(Display*,int*,int*);$/;"	t	typeref:typename:Bool (*)(Display *,int *,int *)
PFN_XRRQueryVersion	src/x11_platform.h	/^typedef Status (* PFN_XRRQueryVersion)(Display*,int*,int*);$/;"	t	typeref:typename:Status (*)(Display *,int *,int *)
PFN_XRRSelectInput	src/x11_platform.h	/^typedef void (* PFN_XRRSelectInput)(Display*,Window,int);$/;"	t	typeref:typename:void (*)(Display *,Window,int)
PFN_XRRSetCrtcConfig	src/x11_platform.h	/^typedef Status (* PFN_XRRSetCrtcConfig)(Display*,XRRScreenResources*,RRCrtc,Time,int,int,RRMode,/;"	t	typeref:typename:Status (*)(Display *,XRRScreenResources *,RRCrtc,Time,int,int,RRMode,Rotation,RROutput *,int)
PFN_XRRSetCrtcGamma	src/x11_platform.h	/^typedef void (* PFN_XRRSetCrtcGamma)(Display*,RRCrtc,XRRCrtcGamma*);$/;"	t	typeref:typename:void (*)(Display *,RRCrtc,XRRCrtcGamma *)
PFN_XRRUpdateConfiguration	src/x11_platform.h	/^typedef int (* PFN_XRRUpdateConfiguration)(XEvent*);$/;"	t	typeref:typename:int (*)(XEvent *)
PFN_XRenderFindVisualFormat	src/x11_platform.h	/^typedef XRenderPictFormat* (* PFN_XRenderFindVisualFormat)(Display*,Visual const*);$/;"	t	typeref:typename:XRenderPictFormat * (*)(Display *,Visual const *)
PFN_XRenderQueryExtension	src/x11_platform.h	/^typedef Bool (* PFN_XRenderQueryExtension)(Display*,int*,int*);$/;"	t	typeref:typename:Bool (*)(Display *,int *,int *)
PFN_XRenderQueryVersion	src/x11_platform.h	/^typedef Status (* PFN_XRenderQueryVersion)(Display*dpy,int*,int*);$/;"	t	typeref:typename:Status (*)(Display * dpy,int *,int *)
PFN_XcursorGetDefaultSize	src/x11_platform.h	/^typedef int (* PFN_XcursorGetDefaultSize)(Display*);$/;"	t	typeref:typename:int (*)(Display *)
PFN_XcursorGetTheme	src/x11_platform.h	/^typedef char* (* PFN_XcursorGetTheme)(Display*);$/;"	t	typeref:typename:char * (*)(Display *)
PFN_XcursorImageCreate	src/x11_platform.h	/^typedef XcursorImage* (* PFN_XcursorImageCreate)(int,int);$/;"	t	typeref:typename:XcursorImage * (*)(int,int)
PFN_XcursorImageDestroy	src/x11_platform.h	/^typedef void (* PFN_XcursorImageDestroy)(XcursorImage*);$/;"	t	typeref:typename:void (*)(XcursorImage *)
PFN_XcursorImageLoadCursor	src/x11_platform.h	/^typedef Cursor (* PFN_XcursorImageLoadCursor)(Display*,const XcursorImage*);$/;"	t	typeref:typename:Cursor (*)(Display *,const XcursorImage *)
PFN_XcursorLibraryLoadImage	src/x11_platform.h	/^typedef XcursorImage* (* PFN_XcursorLibraryLoadImage)(const char*,const char*,int);$/;"	t	typeref:typename:XcursorImage * (*)(const char *,const char *,int)
PFN_XineramaIsActive	src/x11_platform.h	/^typedef Bool (* PFN_XineramaIsActive)(Display*);$/;"	t	typeref:typename:Bool (*)(Display *)
PFN_XineramaQueryExtension	src/x11_platform.h	/^typedef Bool (* PFN_XineramaQueryExtension)(Display*,int*,int*);$/;"	t	typeref:typename:Bool (*)(Display *,int *,int *)
PFN_XineramaQueryScreens	src/x11_platform.h	/^typedef XineramaScreenInfo* (* PFN_XineramaQueryScreens)(Display*,int*);$/;"	t	typeref:typename:XineramaScreenInfo * (*)(Display *,int *)
PFN_eglBindAPI	src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglBindAPI)(EGLenum);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRY *)(EGLenum)
PFN_eglCreateContext	src/egl_context.h	/^typedef EGLContext (EGLAPIENTRY * PFN_eglCreateContext)(EGLDisplay,EGLConfig,EGLContext,const EG/;"	t	typeref:typename:EGLContext (EGLAPIENTRY *)(EGLDisplay,EGLConfig,EGLContext,const EGLint *)
PFN_eglCreateWindowSurface	src/egl_context.h	/^typedef EGLSurface (EGLAPIENTRY * PFN_eglCreateWindowSurface)(EGLDisplay,EGLConfig,EGLNativeWind/;"	t	typeref:typename:EGLSurface (EGLAPIENTRY *)(EGLDisplay,EGLConfig,EGLNativeWindowType,const EGLint *)
PFN_eglDestroyContext	src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglDestroyContext)(EGLDisplay,EGLContext);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRY *)(EGLDisplay,EGLContext)
PFN_eglDestroySurface	src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglDestroySurface)(EGLDisplay,EGLSurface);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRY *)(EGLDisplay,EGLSurface)
PFN_eglGetConfigAttrib	src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglGetConfigAttrib)(EGLDisplay,EGLConfig,EGLint,EGLint*);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRY *)(EGLDisplay,EGLConfig,EGLint,EGLint *)
PFN_eglGetConfigs	src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglGetConfigs)(EGLDisplay,EGLConfig*,EGLint,EGLint*);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRY *)(EGLDisplay,EGLConfig *,EGLint,EGLint *)
PFN_eglGetDisplay	src/egl_context.h	/^typedef EGLDisplay (EGLAPIENTRY * PFN_eglGetDisplay)(EGLNativeDisplayType);$/;"	t	typeref:typename:EGLDisplay (EGLAPIENTRY *)(EGLNativeDisplayType)
PFN_eglGetError	src/egl_context.h	/^typedef EGLint (EGLAPIENTRY * PFN_eglGetError)(void);$/;"	t	typeref:typename:EGLint (EGLAPIENTRY *)(void)
PFN_eglGetProcAddress	src/egl_context.h	/^typedef GLFWglproc (EGLAPIENTRY * PFN_eglGetProcAddress)(const char*);$/;"	t	typeref:typename:GLFWglproc (EGLAPIENTRY *)(const char *)
PFN_eglInitialize	src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglInitialize)(EGLDisplay,EGLint*,EGLint*);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRY *)(EGLDisplay,EGLint *,EGLint *)
PFN_eglMakeCurrent	src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglMakeCurrent)(EGLDisplay,EGLSurface,EGLSurface,EGLContex/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRY *)(EGLDisplay,EGLSurface,EGLSurface,EGLContext)
PFN_eglQueryString	src/egl_context.h	/^typedef const char* (EGLAPIENTRY * PFN_eglQueryString)(EGLDisplay,EGLint);$/;"	t	typeref:typename:const char * (EGLAPIENTRY *)(EGLDisplay,EGLint)
PFN_eglSwapBuffers	src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglSwapBuffers)(EGLDisplay,EGLSurface);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRY *)(EGLDisplay,EGLSurface)
PFN_eglSwapInterval	src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglSwapInterval)(EGLDisplay,EGLint);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRY *)(EGLDisplay,EGLint)
PFN_eglTerminate	src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglTerminate)(EGLDisplay);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRY *)(EGLDisplay)
PFN_timeGetTime	src/win32_platform.h	/^typedef DWORD (WINAPI * PFN_timeGetTime)(void);$/;"	t	typeref:typename:DWORD (WINAPI *)(void)
PFN_vkAcquireNextImage2KHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkAcquireNextImage2KHR)(VkDevice   device, const  VkAcquireN/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkAcquireNextImageInfoKHR * pAcquireInfo,uint32_t * pImageIndex)
PFN_vkAcquireNextImageKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkAcquireNextImageKHR)(VkDevice   device, VkSwapchainKHR   s/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkSwapchainKHR swapchain,uint64_t timeout,VkSemaphore semaphore,VkFence fence,uint32_t * pImageIndex)
PFN_vkAllocateCommandBuffers	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkAllocateCommandBuffers)(VkDevice   device, const  VkComman/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkCommandBufferAllocateInfo * pAllocateInfo,VkCommandBuffer * pCommandBuffers)
PFN_vkAllocateDescriptorSets	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkAllocateDescriptorSets)(VkDevice   device, const  VkDescri/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkDescriptorSetAllocateInfo * pAllocateInfo,VkDescriptorSet * pDescriptorSets)
PFN_vkAllocateMemory	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkAllocateMemory)(VkDevice   device, const  VkMemoryAllocate/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkMemoryAllocateInfo * pAllocateInfo,const VkAllocationCallbacks * pAllocator,VkDeviceMemory * pMemory)
PFN_vkAllocationFunction	deps/glad/vulkan.h	/^typedef void* (VKAPI_PTR *PFN_vkAllocationFunction)($/;"	t	typeref:typename:void * (VKAPI_PTR *)(void * pUserData,size_t size,size_t alignment,VkSystemAllocationScope allocationScope)
PFN_vkBeginCommandBuffer	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkBeginCommandBuffer)(VkCommandBuffer   commandBuffer, const/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,const VkCommandBufferBeginInfo * pBeginInfo)
PFN_vkBindBufferMemory	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkBindBufferMemory)(VkDevice   device, VkBuffer   buffer, Vk/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkBuffer buffer,VkDeviceMemory memory,VkDeviceSize memoryOffset)
PFN_vkBindBufferMemory2	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkBindBufferMemory2)(VkDevice   device, uint32_t   bindInfoC/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,uint32_t bindInfoCount,const VkBindBufferMemoryInfo * pBindInfos)
PFN_vkBindImageMemory	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkBindImageMemory)(VkDevice   device, VkImage   image, VkDev/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkImage image,VkDeviceMemory memory,VkDeviceSize memoryOffset)
PFN_vkBindImageMemory2	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkBindImageMemory2)(VkDevice   device, uint32_t   bindInfoCo/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,uint32_t bindInfoCount,const VkBindImageMemoryInfo * pBindInfos)
PFN_vkCmdBeginQuery	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdBeginQuery)(VkCommandBuffer   commandBuffer, VkQueryPool   /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkQueryPool queryPool,uint32_t query,VkQueryControlFlags flags)
PFN_vkCmdBeginRenderPass	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdBeginRenderPass)(VkCommandBuffer   commandBuffer, const  Vk/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,const VkRenderPassBeginInfo * pRenderPassBegin,VkSubpassContents contents)
PFN_vkCmdBindDescriptorSets	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdBindDescriptorSets)(VkCommandBuffer   commandBuffer, VkPipe/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkPipelineBindPoint pipelineBindPoint,VkPipelineLayout layout,uint32_t firstSet,uint32_t descriptorSetCount,const VkDescriptorSet * pDescriptorSets,uint32_t dynamicOffsetCount,const uint32_t * pDynamicOffsets)
PFN_vkCmdBindIndexBuffer	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdBindIndexBuffer)(VkCommandBuffer   commandBuffer, VkBuffer /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkBuffer buffer,VkDeviceSize offset,VkIndexType indexType)
PFN_vkCmdBindPipeline	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdBindPipeline)(VkCommandBuffer   commandBuffer, VkPipelineBi/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkPipelineBindPoint pipelineBindPoint,VkPipeline pipeline)
PFN_vkCmdBindVertexBuffers	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdBindVertexBuffers)(VkCommandBuffer   commandBuffer, uint32_/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t firstBinding,uint32_t bindingCount,const VkBuffer * pBuffers,const VkDeviceSize * pOffsets)
PFN_vkCmdBlitImage	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdBlitImage)(VkCommandBuffer   commandBuffer, VkImage   srcIm/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkImage srcImage,VkImageLayout srcImageLayout,VkImage dstImage,VkImageLayout dstImageLayout,uint32_t regionCount,const VkImageBlit * pRegions,VkFilter filter)
PFN_vkCmdClearAttachments	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdClearAttachments)(VkCommandBuffer   commandBuffer, uint32_t/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t attachmentCount,const VkClearAttachment * pAttachments,uint32_t rectCount,const VkClearRect * pRects)
PFN_vkCmdClearColorImage	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdClearColorImage)(VkCommandBuffer   commandBuffer, VkImage  /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkImage image,VkImageLayout imageLayout,const VkClearColorValue * pColor,uint32_t rangeCount,const VkImageSubresourceRange * pRanges)
PFN_vkCmdClearDepthStencilImage	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdClearDepthStencilImage)(VkCommandBuffer   commandBuffer, Vk/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkImage image,VkImageLayout imageLayout,const VkClearDepthStencilValue * pDepthStencil,uint32_t rangeCount,const VkImageSubresourceRange * pRanges)
PFN_vkCmdCopyBuffer	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdCopyBuffer)(VkCommandBuffer   commandBuffer, VkBuffer   src/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkBuffer srcBuffer,VkBuffer dstBuffer,uint32_t regionCount,const VkBufferCopy * pRegions)
PFN_vkCmdCopyBufferToImage	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdCopyBufferToImage)(VkCommandBuffer   commandBuffer, VkBuffe/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkBuffer srcBuffer,VkImage dstImage,VkImageLayout dstImageLayout,uint32_t regionCount,const VkBufferImageCopy * pRegions)
PFN_vkCmdCopyImage	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdCopyImage)(VkCommandBuffer   commandBuffer, VkImage   srcIm/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkImage srcImage,VkImageLayout srcImageLayout,VkImage dstImage,VkImageLayout dstImageLayout,uint32_t regionCount,const VkImageCopy * pRegions)
PFN_vkCmdCopyImageToBuffer	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdCopyImageToBuffer)(VkCommandBuffer   commandBuffer, VkImage/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkImage srcImage,VkImageLayout srcImageLayout,VkBuffer dstBuffer,uint32_t regionCount,const VkBufferImageCopy * pRegions)
PFN_vkCmdCopyQueryPoolResults	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdCopyQueryPoolResults)(VkCommandBuffer   commandBuffer, VkQu/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkQueryPool queryPool,uint32_t firstQuery,uint32_t queryCount,VkBuffer dstBuffer,VkDeviceSize dstOffset,VkDeviceSize stride,VkQueryResultFlags flags)
PFN_vkCmdDispatch	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdDispatch)(VkCommandBuffer   commandBuffer, uint32_t   group/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t groupCountX,uint32_t groupCountY,uint32_t groupCountZ)
PFN_vkCmdDispatchBase	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdDispatchBase)(VkCommandBuffer   commandBuffer, uint32_t   b/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t baseGroupX,uint32_t baseGroupY,uint32_t baseGroupZ,uint32_t groupCountX,uint32_t groupCountY,uint32_t groupCountZ)
PFN_vkCmdDispatchIndirect	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdDispatchIndirect)(VkCommandBuffer   commandBuffer, VkBuffer/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkBuffer buffer,VkDeviceSize offset)
PFN_vkCmdDraw	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdDraw)(VkCommandBuffer   commandBuffer, uint32_t   vertexCou/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t vertexCount,uint32_t instanceCount,uint32_t firstVertex,uint32_t firstInstance)
PFN_vkCmdDrawIndexed	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdDrawIndexed)(VkCommandBuffer   commandBuffer, uint32_t   in/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t indexCount,uint32_t instanceCount,uint32_t firstIndex,int32_t vertexOffset,uint32_t firstInstance)
PFN_vkCmdDrawIndexedIndirect	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdDrawIndexedIndirect)(VkCommandBuffer   commandBuffer, VkBuf/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkBuffer buffer,VkDeviceSize offset,uint32_t drawCount,uint32_t stride)
PFN_vkCmdDrawIndirect	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdDrawIndirect)(VkCommandBuffer   commandBuffer, VkBuffer   b/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkBuffer buffer,VkDeviceSize offset,uint32_t drawCount,uint32_t stride)
PFN_vkCmdEndQuery	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdEndQuery)(VkCommandBuffer   commandBuffer, VkQueryPool   qu/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkQueryPool queryPool,uint32_t query)
PFN_vkCmdEndRenderPass	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdEndRenderPass)(VkCommandBuffer   commandBuffer);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer)
PFN_vkCmdExecuteCommands	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdExecuteCommands)(VkCommandBuffer   commandBuffer, uint32_t /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t commandBufferCount,const VkCommandBuffer * pCommandBuffers)
PFN_vkCmdFillBuffer	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdFillBuffer)(VkCommandBuffer   commandBuffer, VkBuffer   dst/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkBuffer dstBuffer,VkDeviceSize dstOffset,VkDeviceSize size,uint32_t data)
PFN_vkCmdNextSubpass	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdNextSubpass)(VkCommandBuffer   commandBuffer, VkSubpassCont/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkSubpassContents contents)
PFN_vkCmdPipelineBarrier	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdPipelineBarrier)(VkCommandBuffer   commandBuffer, VkPipelin/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkPipelineStageFlags srcStageMask,VkPipelineStageFlags dstStageMask,VkDependencyFlags dependencyFlags,uint32_t memoryBarrierCount,const VkMemoryBarrier * pMemoryBarriers,uint32_t bufferMemoryBarrierCount,const VkBufferMemoryBarrier * pBufferMemoryBarriers,uint32_t imageMemoryBarrierCount,const VkImageMemoryBarrier * pImageMemoryBarriers)
PFN_vkCmdPushConstants	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdPushConstants)(VkCommandBuffer   commandBuffer, VkPipelineL/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkPipelineLayout layout,VkShaderStageFlags stageFlags,uint32_t offset,uint32_t size,const void * pValues)
PFN_vkCmdResetEvent	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdResetEvent)(VkCommandBuffer   commandBuffer, VkEvent   even/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkEvent event,VkPipelineStageFlags stageMask)
PFN_vkCmdResetQueryPool	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdResetQueryPool)(VkCommandBuffer   commandBuffer, VkQueryPoo/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkQueryPool queryPool,uint32_t firstQuery,uint32_t queryCount)
PFN_vkCmdResolveImage	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdResolveImage)(VkCommandBuffer   commandBuffer, VkImage   sr/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkImage srcImage,VkImageLayout srcImageLayout,VkImage dstImage,VkImageLayout dstImageLayout,uint32_t regionCount,const VkImageResolve * pRegions)
PFN_vkCmdSetBlendConstants	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetBlendConstants)(VkCommandBuffer   commandBuffer, const  /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,const float blendConstants[4])
PFN_vkCmdSetDepthBias	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetDepthBias)(VkCommandBuffer   commandBuffer, float   dept/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,float depthBiasConstantFactor,float depthBiasClamp,float depthBiasSlopeFactor)
PFN_vkCmdSetDepthBounds	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetDepthBounds)(VkCommandBuffer   commandBuffer, float   mi/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,float minDepthBounds,float maxDepthBounds)
PFN_vkCmdSetDeviceMask	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetDeviceMask)(VkCommandBuffer   commandBuffer, uint32_t   /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t deviceMask)
PFN_vkCmdSetEvent	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetEvent)(VkCommandBuffer   commandBuffer, VkEvent   event,/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkEvent event,VkPipelineStageFlags stageMask)
PFN_vkCmdSetLineWidth	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetLineWidth)(VkCommandBuffer   commandBuffer, float   line/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,float lineWidth)
PFN_vkCmdSetScissor	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetScissor)(VkCommandBuffer   commandBuffer, uint32_t   fir/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t firstScissor,uint32_t scissorCount,const VkRect2D * pScissors)
PFN_vkCmdSetStencilCompareMask	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetStencilCompareMask)(VkCommandBuffer   commandBuffer, VkS/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkStencilFaceFlags faceMask,uint32_t compareMask)
PFN_vkCmdSetStencilReference	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetStencilReference)(VkCommandBuffer   commandBuffer, VkSte/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkStencilFaceFlags faceMask,uint32_t reference)
PFN_vkCmdSetStencilWriteMask	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetStencilWriteMask)(VkCommandBuffer   commandBuffer, VkSte/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkStencilFaceFlags faceMask,uint32_t writeMask)
PFN_vkCmdSetViewport	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdSetViewport)(VkCommandBuffer   commandBuffer, uint32_t   fi/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t firstViewport,uint32_t viewportCount,const VkViewport * pViewports)
PFN_vkCmdUpdateBuffer	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdUpdateBuffer)(VkCommandBuffer   commandBuffer, VkBuffer   d/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkBuffer dstBuffer,VkDeviceSize dstOffset,VkDeviceSize dataSize,const void * pData)
PFN_vkCmdWaitEvents	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdWaitEvents)(VkCommandBuffer   commandBuffer, uint32_t   eve/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,uint32_t eventCount,const VkEvent * pEvents,VkPipelineStageFlags srcStageMask,VkPipelineStageFlags dstStageMask,uint32_t memoryBarrierCount,const VkMemoryBarrier * pMemoryBarriers,uint32_t bufferMemoryBarrierCount,const VkBufferMemoryBarrier * pBufferMemoryBarriers,uint32_t imageMemoryBarrierCount,const VkImageMemoryBarrier * pImageMemoryBarriers)
PFN_vkCmdWriteTimestamp	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkCmdWriteTimestamp)(VkCommandBuffer   commandBuffer, VkPipeline/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkPipelineStageFlagBits pipelineStage,VkQueryPool queryPool,uint32_t query)
PFN_vkCreateBuffer	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateBuffer)(VkDevice   device, const  VkBufferCreateInfo/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkBufferCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkBuffer * pBuffer)
PFN_vkCreateBufferView	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateBufferView)(VkDevice   device, const  VkBufferViewCr/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkBufferViewCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkBufferView * pView)
PFN_vkCreateCommandPool	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateCommandPool)(VkDevice   device, const  VkCommandPool/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkCommandPoolCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkCommandPool * pCommandPool)
PFN_vkCreateComputePipelines	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateComputePipelines)(VkDevice   device, VkPipelineCache/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkPipelineCache pipelineCache,uint32_t createInfoCount,const VkComputePipelineCreateInfo * pCreateInfos,const VkAllocationCallbacks * pAllocator,VkPipeline * pPipelines)
PFN_vkCreateDebugReportCallbackEXT	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateDebugReportCallbackEXT)(VkInstance   instance, const/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkInstance instance,const VkDebugReportCallbackCreateInfoEXT * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkDebugReportCallbackEXT * pCallback)
PFN_vkCreateDescriptorPool	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateDescriptorPool)(VkDevice   device, const  VkDescript/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkDescriptorPoolCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkDescriptorPool * pDescriptorPool)
PFN_vkCreateDescriptorSetLayout	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateDescriptorSetLayout)(VkDevice   device, const  VkDes/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkDescriptorSetLayoutCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkDescriptorSetLayout * pSetLayout)
PFN_vkCreateDescriptorUpdateTemplate	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateDescriptorUpdateTemplate)(VkDevice   device, const  /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkDescriptorUpdateTemplateCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkDescriptorUpdateTemplate * pDescriptorUpdateTemplate)
PFN_vkCreateDevice	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateDevice)(VkPhysicalDevice   physicalDevice, const  Vk/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,const VkDeviceCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkDevice * pDevice)
PFN_vkCreateEvent	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateEvent)(VkDevice   device, const  VkEventCreateInfo */;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkEventCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkEvent * pEvent)
PFN_vkCreateFence	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateFence)(VkDevice   device, const  VkFenceCreateInfo */;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkFenceCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkFence * pFence)
PFN_vkCreateFramebuffer	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateFramebuffer)(VkDevice   device, const  VkFramebuffer/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkFramebufferCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkFramebuffer * pFramebuffer)
PFN_vkCreateGraphicsPipelines	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateGraphicsPipelines)(VkDevice   device, VkPipelineCach/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkPipelineCache pipelineCache,uint32_t createInfoCount,const VkGraphicsPipelineCreateInfo * pCreateInfos,const VkAllocationCallbacks * pAllocator,VkPipeline * pPipelines)
PFN_vkCreateImage	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateImage)(VkDevice   device, const  VkImageCreateInfo */;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkImageCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkImage * pImage)
PFN_vkCreateImageView	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateImageView)(VkDevice   device, const  VkImageViewCrea/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkImageViewCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkImageView * pView)
PFN_vkCreateInstance	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateInstance)(const  VkInstanceCreateInfo *  pCreateInfo/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(const VkInstanceCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkInstance * pInstance)
PFN_vkCreatePipelineCache	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreatePipelineCache)(VkDevice   device, const  VkPipelineC/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkPipelineCacheCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkPipelineCache * pPipelineCache)
PFN_vkCreatePipelineLayout	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreatePipelineLayout)(VkDevice   device, const  VkPipeline/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkPipelineLayoutCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkPipelineLayout * pPipelineLayout)
PFN_vkCreateQueryPool	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateQueryPool)(VkDevice   device, const  VkQueryPoolCrea/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkQueryPoolCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkQueryPool * pQueryPool)
PFN_vkCreateRenderPass	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateRenderPass)(VkDevice   device, const  VkRenderPassCr/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkRenderPassCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkRenderPass * pRenderPass)
PFN_vkCreateSampler	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateSampler)(VkDevice   device, const  VkSamplerCreateIn/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkSamplerCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkSampler * pSampler)
PFN_vkCreateSamplerYcbcrConversion	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateSamplerYcbcrConversion)(VkDevice   device, const  Vk/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkSamplerYcbcrConversionCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkSamplerYcbcrConversion * pYcbcrConversion)
PFN_vkCreateSemaphore	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateSemaphore)(VkDevice   device, const  VkSemaphoreCrea/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkSemaphoreCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkSemaphore * pSemaphore)
PFN_vkCreateShaderModule	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateShaderModule)(VkDevice   device, const  VkShaderModu/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkShaderModuleCreateInfo * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkShaderModule * pShaderModule)
PFN_vkCreateSwapchainKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkCreateSwapchainKHR)(VkDevice   device, const  VkSwapchainC/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,const VkSwapchainCreateInfoKHR * pCreateInfo,const VkAllocationCallbacks * pAllocator,VkSwapchainKHR * pSwapchain)
PFN_vkCreateWaylandSurfaceKHR	src/wl_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateWaylandSurfaceKHR)(VkInstance,const VkWaylandSurfaceCrea/;"	t	typeref:typename:VkResult (APIENTRY *)(VkInstance,const VkWaylandSurfaceCreateInfoKHR *,const VkAllocationCallbacks *,VkSurfaceKHR *)
PFN_vkCreateWin32SurfaceKHR	src/win32_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateWin32SurfaceKHR)(VkInstance,const VkWin32SurfaceCreateIn/;"	t	typeref:typename:VkResult (APIENTRY *)(VkInstance,const VkWin32SurfaceCreateInfoKHR *,const VkAllocationCallbacks *,VkSurfaceKHR *)
PFN_vkCreateXcbSurfaceKHR	src/x11_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateXcbSurfaceKHR)(VkInstance,const VkXcbSurfaceCreateInfoKH/;"	t	typeref:typename:VkResult (APIENTRY *)(VkInstance,const VkXcbSurfaceCreateInfoKHR *,const VkAllocationCallbacks *,VkSurfaceKHR *)
PFN_vkCreateXlibSurfaceKHR	src/x11_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateXlibSurfaceKHR)(VkInstance,const VkXlibSurfaceCreateInfo/;"	t	typeref:typename:VkResult (APIENTRY *)(VkInstance,const VkXlibSurfaceCreateInfoKHR *,const VkAllocationCallbacks *,VkSurfaceKHR *)
PFN_vkDebugReportCallbackEXT	deps/glad/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkDebugReportCallbackEXT)($/;"	t	typeref:typename:VkBool32 (VKAPI_PTR *)(VkDebugReportFlagsEXT flags,VkDebugReportObjectTypeEXT objectType,uint64_t object,size_t location,int32_t messageCode,const char * pLayerPrefix,const char * pMessage,void * pUserData)
PFN_vkDebugReportMessageEXT	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDebugReportMessageEXT)(VkInstance   instance, VkDebugReportFla/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkInstance instance,VkDebugReportFlagsEXT flags,VkDebugReportObjectTypeEXT objectType,uint64_t object,size_t location,int32_t messageCode,const char * pLayerPrefix,const char * pMessage)
PFN_vkDestroyBuffer	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyBuffer)(VkDevice   device, VkBuffer   buffer, const  Vk/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkBuffer buffer,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyBufferView	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyBufferView)(VkDevice   device, VkBufferView   bufferVie/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkBufferView bufferView,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyCommandPool	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyCommandPool)(VkDevice   device, VkCommandPool   command/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkCommandPool commandPool,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyDebugReportCallbackEXT	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyDebugReportCallbackEXT)(VkInstance   instance, VkDebugR/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkInstance instance,VkDebugReportCallbackEXT callback,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyDescriptorPool	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyDescriptorPool)(VkDevice   device, VkDescriptorPool   d/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkDescriptorPool descriptorPool,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyDescriptorSetLayout	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyDescriptorSetLayout)(VkDevice   device, VkDescriptorSet/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkDescriptorSetLayout descriptorSetLayout,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyDescriptorUpdateTemplate	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyDescriptorUpdateTemplate)(VkDevice   device, VkDescript/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkDescriptorUpdateTemplate descriptorUpdateTemplate,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyDevice	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyDevice)(VkDevice   device, const  VkAllocationCallbacks/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyEvent	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyEvent)(VkDevice   device, VkEvent   event, const  VkAll/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkEvent event,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyFence	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyFence)(VkDevice   device, VkFence   fence, const  VkAll/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkFence fence,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyFramebuffer	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyFramebuffer)(VkDevice   device, VkFramebuffer   framebu/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkFramebuffer framebuffer,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyImage	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyImage)(VkDevice   device, VkImage   image, const  VkAll/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkImage image,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyImageView	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyImageView)(VkDevice   device, VkImageView   imageView, /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkImageView imageView,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyInstance	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyInstance)(VkInstance   instance, const  VkAllocationCal/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkInstance instance,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyPipeline	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyPipeline)(VkDevice   device, VkPipeline   pipeline, con/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkPipeline pipeline,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyPipelineCache	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyPipelineCache)(VkDevice   device, VkPipelineCache   pip/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkPipelineCache pipelineCache,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyPipelineLayout	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyPipelineLayout)(VkDevice   device, VkPipelineLayout   p/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkPipelineLayout pipelineLayout,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyQueryPool	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyQueryPool)(VkDevice   device, VkQueryPool   queryPool, /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkQueryPool queryPool,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyRenderPass	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyRenderPass)(VkDevice   device, VkRenderPass   renderPas/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkRenderPass renderPass,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroySampler	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroySampler)(VkDevice   device, VkSampler   sampler, const /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkSampler sampler,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroySamplerYcbcrConversion	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroySamplerYcbcrConversion)(VkDevice   device, VkSamplerYcb/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkSamplerYcbcrConversion ycbcrConversion,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroySemaphore	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroySemaphore)(VkDevice   device, VkSemaphore   semaphore, /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkSemaphore semaphore,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroyShaderModule	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroyShaderModule)(VkDevice   device, VkShaderModule   shade/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkShaderModule shaderModule,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroySurfaceKHR	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroySurfaceKHR)(VkInstance   instance, VkSurfaceKHR   surfa/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkInstance instance,VkSurfaceKHR surface,const VkAllocationCallbacks * pAllocator)
PFN_vkDestroySwapchainKHR	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkDestroySwapchainKHR)(VkDevice   device, VkSwapchainKHR   swapc/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkSwapchainKHR swapchain,const VkAllocationCallbacks * pAllocator)
PFN_vkDeviceWaitIdle	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkDeviceWaitIdle)(VkDevice   device);$/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device)
PFN_vkEndCommandBuffer	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkEndCommandBuffer)(VkCommandBuffer   commandBuffer);$/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkCommandBuffer commandBuffer)
PFN_vkEnumerateDeviceExtensionProperties	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkEnumerateDeviceExtensionProperties)(VkPhysicalDevice   phy/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,const char * pLayerName,uint32_t * pPropertyCount,VkExtensionProperties * pProperties)
PFN_vkEnumerateDeviceLayerProperties	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkEnumerateDeviceLayerProperties)(VkPhysicalDevice   physica/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,uint32_t * pPropertyCount,VkLayerProperties * pProperties)
PFN_vkEnumerateInstanceExtensionProperties	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkEnumerateInstanceExtensionProperties)(const  char *  pLaye/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(const char * pLayerName,uint32_t * pPropertyCount,VkExtensionProperties * pProperties)
PFN_vkEnumerateInstanceExtensionProperties	src/internal.h	/^  typedef VkResult (APIENTRY * PFN_vkEnumerateInstanceExtensionProperties)(const char*,uint32_t*/;"	t	typeref:typename:VkResult (APIENTRY *)(const char *,uint32_t *,VkExtensionProperties *)
PFN_vkEnumerateInstanceLayerProperties	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkEnumerateInstanceLayerProperties)(uint32_t *  pPropertyCou/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(uint32_t * pPropertyCount,VkLayerProperties * pProperties)
PFN_vkEnumerateInstanceVersion	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkEnumerateInstanceVersion)(uint32_t *  pApiVersion);$/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(uint32_t * pApiVersion)
PFN_vkEnumeratePhysicalDeviceGroups	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkEnumeratePhysicalDeviceGroups)(VkInstance   instance, uint/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkInstance instance,uint32_t * pPhysicalDeviceGroupCount,VkPhysicalDeviceGroupProperties * pPhysicalDeviceGroupProperties)
PFN_vkEnumeratePhysicalDevices	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkEnumeratePhysicalDevices)(VkInstance   instance, uint32_t /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkInstance instance,uint32_t * pPhysicalDeviceCount,VkPhysicalDevice * pPhysicalDevices)
PFN_vkFlushMappedMemoryRanges	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkFlushMappedMemoryRanges)(VkDevice   device, uint32_t   mem/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,uint32_t memoryRangeCount,const VkMappedMemoryRange * pMemoryRanges)
PFN_vkFreeCommandBuffers	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkFreeCommandBuffers)(VkDevice   device, VkCommandPool   command/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkCommandPool commandPool,uint32_t commandBufferCount,const VkCommandBuffer * pCommandBuffers)
PFN_vkFreeDescriptorSets	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkFreeDescriptorSets)(VkDevice   device, VkDescriptorPool   /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkDescriptorPool descriptorPool,uint32_t descriptorSetCount,const VkDescriptorSet * pDescriptorSets)
PFN_vkFreeFunction	deps/glad/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkFreeFunction)($/;"	t	typeref:typename:void (VKAPI_PTR *)(void * pUserData,void * pMemory)
PFN_vkFreeMemory	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkFreeMemory)(VkDevice   device, VkDeviceMemory   memory, const /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkDeviceMemory memory,const VkAllocationCallbacks * pAllocator)
PFN_vkGetBufferMemoryRequirements	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetBufferMemoryRequirements)(VkDevice   device, VkBuffer   buf/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkBuffer buffer,VkMemoryRequirements * pMemoryRequirements)
PFN_vkGetBufferMemoryRequirements2	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetBufferMemoryRequirements2)(VkDevice   device, const  VkBuff/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,const VkBufferMemoryRequirementsInfo2 * pInfo,VkMemoryRequirements2 * pMemoryRequirements)
PFN_vkGetDescriptorSetLayoutSupport	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetDescriptorSetLayoutSupport)(VkDevice   device, const  VkDes/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,const VkDescriptorSetLayoutCreateInfo * pCreateInfo,VkDescriptorSetLayoutSupport * pSupport)
PFN_vkGetDeviceGroupPeerMemoryFeatures	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetDeviceGroupPeerMemoryFeatures)(VkDevice   device, uint32_t /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,uint32_t heapIndex,uint32_t localDeviceIndex,uint32_t remoteDeviceIndex,VkPeerMemoryFeatureFlags * pPeerMemoryFeatures)
PFN_vkGetDeviceGroupPresentCapabilitiesKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetDeviceGroupPresentCapabilitiesKHR)(VkDevice   device, V/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkDeviceGroupPresentCapabilitiesKHR * pDeviceGroupPresentCapabilities)
PFN_vkGetDeviceGroupSurfacePresentModesKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetDeviceGroupSurfacePresentModesKHR)(VkDevice   device, V/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkSurfaceKHR surface,VkDeviceGroupPresentModeFlagsKHR * pModes)
PFN_vkGetDeviceMemoryCommitment	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetDeviceMemoryCommitment)(VkDevice   device, VkDeviceMemory  /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkDeviceMemory memory,VkDeviceSize * pCommittedMemoryInBytes)
PFN_vkGetDeviceProcAddr	deps/glad/vulkan.h	/^typedef PFN_vkVoidFunction (GLAD_API_PTR *PFN_vkGetDeviceProcAddr)(VkDevice   device, const  cha/;"	t	typeref:typename:PFN_vkVoidFunction (GLAD_API_PTR *)(VkDevice device,const char * pName)
PFN_vkGetDeviceQueue	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetDeviceQueue)(VkDevice   device, uint32_t   queueFamilyIndex/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,uint32_t queueFamilyIndex,uint32_t queueIndex,VkQueue * pQueue)
PFN_vkGetDeviceQueue2	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetDeviceQueue2)(VkDevice   device, const  VkDeviceQueueInfo2 /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,const VkDeviceQueueInfo2 * pQueueInfo,VkQueue * pQueue)
PFN_vkGetEventStatus	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetEventStatus)(VkDevice   device, VkEvent   event);$/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkEvent event)
PFN_vkGetFenceStatus	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetFenceStatus)(VkDevice   device, VkFence   fence);$/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkFence fence)
PFN_vkGetImageMemoryRequirements	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetImageMemoryRequirements)(VkDevice   device, VkImage   image/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkImage image,VkMemoryRequirements * pMemoryRequirements)
PFN_vkGetImageMemoryRequirements2	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetImageMemoryRequirements2)(VkDevice   device, const  VkImage/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,const VkImageMemoryRequirementsInfo2 * pInfo,VkMemoryRequirements2 * pMemoryRequirements)
PFN_vkGetImageSparseMemoryRequirements	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetImageSparseMemoryRequirements)(VkDevice   device, VkImage  /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkImage image,uint32_t * pSparseMemoryRequirementCount,VkSparseImageMemoryRequirements * pSparseMemoryRequirements)
PFN_vkGetImageSparseMemoryRequirements2	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetImageSparseMemoryRequirements2)(VkDevice   device, const  V/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,const VkImageSparseMemoryRequirementsInfo2 * pInfo,uint32_t * pSparseMemoryRequirementCount,VkSparseImageMemoryRequirements2 * pSparseMemoryRequirements)
PFN_vkGetImageSubresourceLayout	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetImageSubresourceLayout)(VkDevice   device, VkImage   image,/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkImage image,const VkImageSubresource * pSubresource,VkSubresourceLayout * pLayout)
PFN_vkGetInstanceProcAddr	deps/glad/vulkan.h	/^typedef PFN_vkVoidFunction (GLAD_API_PTR *PFN_vkGetInstanceProcAddr)(VkInstance   instance, cons/;"	t	typeref:typename:PFN_vkVoidFunction (GLAD_API_PTR *)(VkInstance instance,const char * pName)
PFN_vkGetInstanceProcAddr	src/internal.h	/^  typedef PFN_vkVoidFunction (APIENTRY * PFN_vkGetInstanceProcAddr)(VkInstance,const char*);$/;"	t	typeref:typename:PFN_vkVoidFunction (APIENTRY *)(VkInstance,const char *)
PFN_vkGetPhysicalDeviceExternalBufferProperties	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceExternalBufferProperties)(VkPhysicalDevice   /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,const VkPhysicalDeviceExternalBufferInfo * pExternalBufferInfo,VkExternalBufferProperties * pExternalBufferProperties)
PFN_vkGetPhysicalDeviceExternalFenceProperties	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceExternalFenceProperties)(VkPhysicalDevice   p/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,const VkPhysicalDeviceExternalFenceInfo * pExternalFenceInfo,VkExternalFenceProperties * pExternalFenceProperties)
PFN_vkGetPhysicalDeviceExternalSemaphoreProperties	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceExternalSemaphoreProperties)(VkPhysicalDevice/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,const VkPhysicalDeviceExternalSemaphoreInfo * pExternalSemaphoreInfo,VkExternalSemaphoreProperties * pExternalSemaphoreProperties)
PFN_vkGetPhysicalDeviceFeatures	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceFeatures)(VkPhysicalDevice   physicalDevice, /;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkPhysicalDeviceFeatures * pFeatures)
PFN_vkGetPhysicalDeviceFeatures2	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceFeatures2)(VkPhysicalDevice   physicalDevice,/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkPhysicalDeviceFeatures2 * pFeatures)
PFN_vkGetPhysicalDeviceFormatProperties	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceFormatProperties)(VkPhysicalDevice   physical/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkFormat format,VkFormatProperties * pFormatProperties)
PFN_vkGetPhysicalDeviceFormatProperties2	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceFormatProperties2)(VkPhysicalDevice   physica/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkFormat format,VkFormatProperties2 * pFormatProperties)
PFN_vkGetPhysicalDeviceImageFormatProperties	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetPhysicalDeviceImageFormatProperties)(VkPhysicalDevice  /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkFormat format,VkImageType type,VkImageTiling tiling,VkImageUsageFlags usage,VkImageCreateFlags flags,VkImageFormatProperties * pImageFormatProperties)
PFN_vkGetPhysicalDeviceImageFormatProperties2	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetPhysicalDeviceImageFormatProperties2)(VkPhysicalDevice /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,const VkPhysicalDeviceImageFormatInfo2 * pImageFormatInfo,VkImageFormatProperties2 * pImageFormatProperties)
PFN_vkGetPhysicalDeviceMemoryProperties	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceMemoryProperties)(VkPhysicalDevice   physical/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkPhysicalDeviceMemoryProperties * pMemoryProperties)
PFN_vkGetPhysicalDeviceMemoryProperties2	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceMemoryProperties2)(VkPhysicalDevice   physica/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkPhysicalDeviceMemoryProperties2 * pMemoryProperties)
PFN_vkGetPhysicalDevicePresentRectanglesKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetPhysicalDevicePresentRectanglesKHR)(VkPhysicalDevice   /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkSurfaceKHR surface,uint32_t * pRectCount,VkRect2D * pRects)
PFN_vkGetPhysicalDeviceProperties	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceProperties)(VkPhysicalDevice   physicalDevice/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkPhysicalDeviceProperties * pProperties)
PFN_vkGetPhysicalDeviceProperties2	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceProperties2)(VkPhysicalDevice   physicalDevic/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkPhysicalDeviceProperties2 * pProperties)
PFN_vkGetPhysicalDeviceQueueFamilyProperties	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceQueueFamilyProperties)(VkPhysicalDevice   phy/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,uint32_t * pQueueFamilyPropertyCount,VkQueueFamilyProperties * pQueueFamilyProperties)
PFN_vkGetPhysicalDeviceQueueFamilyProperties2	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceQueueFamilyProperties2)(VkPhysicalDevice   ph/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,uint32_t * pQueueFamilyPropertyCount,VkQueueFamilyProperties2 * pQueueFamilyProperties)
PFN_vkGetPhysicalDeviceSparseImageFormatProperties	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceSparseImageFormatProperties)(VkPhysicalDevice/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkFormat format,VkImageType type,VkSampleCountFlagBits samples,VkImageUsageFlags usage,VkImageTiling tiling,uint32_t * pPropertyCount,VkSparseImageFormatProperties * pProperties)
PFN_vkGetPhysicalDeviceSparseImageFormatProperties2	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetPhysicalDeviceSparseImageFormatProperties2)(VkPhysicalDevic/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,const VkPhysicalDeviceSparseImageFormatInfo2 * pFormatInfo,uint32_t * pPropertyCount,VkSparseImageFormatProperties2 * pProperties)
PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR)(VkPhysicalDevice /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkSurfaceKHR surface,VkSurfaceCapabilitiesKHR * pSurfaceCapabilities)
PFN_vkGetPhysicalDeviceSurfaceFormatsKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetPhysicalDeviceSurfaceFormatsKHR)(VkPhysicalDevice   phy/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkSurfaceKHR surface,uint32_t * pSurfaceFormatCount,VkSurfaceFormatKHR * pSurfaceFormats)
PFN_vkGetPhysicalDeviceSurfacePresentModesKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetPhysicalDeviceSurfacePresentModesKHR)(VkPhysicalDevice /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,VkSurfaceKHR surface,uint32_t * pPresentModeCount,VkPresentModeKHR * pPresentModes)
PFN_vkGetPhysicalDeviceSurfaceSupportKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetPhysicalDeviceSurfaceSupportKHR)(VkPhysicalDevice   phy/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkPhysicalDevice physicalDevice,uint32_t queueFamilyIndex,VkSurfaceKHR surface,VkBool32 * pSupported)
PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR	src/wl_platform.h	/^typedef VkBool32 (APIENTRY *PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR)(VkPhysicalDevi/;"	t	typeref:typename:VkBool32 (APIENTRY *)(VkPhysicalDevice,uint32_t,struct wl_display *)
PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR	src/win32_platform.h	/^typedef VkBool32 (APIENTRY *PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR)(VkPhysicalDevice/;"	t	typeref:typename:VkBool32 (APIENTRY *)(VkPhysicalDevice,uint32_t)
PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR	src/x11_platform.h	/^typedef VkBool32 (APIENTRY *PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR)(VkPhysicalDevice,u/;"	t	typeref:typename:VkBool32 (APIENTRY *)(VkPhysicalDevice,uint32_t,xcb_connection_t *,xcb_visualid_t)
PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR	src/x11_platform.h	/^typedef VkBool32 (APIENTRY *PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR)(VkPhysicalDevice,/;"	t	typeref:typename:VkBool32 (APIENTRY *)(VkPhysicalDevice,uint32_t,Display *,VisualID)
PFN_vkGetPipelineCacheData	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetPipelineCacheData)(VkDevice   device, VkPipelineCache  /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkPipelineCache pipelineCache,size_t * pDataSize,void * pData)
PFN_vkGetQueryPoolResults	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetQueryPoolResults)(VkDevice   device, VkQueryPool   quer/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkQueryPool queryPool,uint32_t firstQuery,uint32_t queryCount,size_t dataSize,void * pData,VkDeviceSize stride,VkQueryResultFlags flags)
PFN_vkGetRenderAreaGranularity	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkGetRenderAreaGranularity)(VkDevice   device, VkRenderPass   re/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkRenderPass renderPass,VkExtent2D * pGranularity)
PFN_vkGetSwapchainImagesKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkGetSwapchainImagesKHR)(VkDevice   device, VkSwapchainKHR  /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkSwapchainKHR swapchain,uint32_t * pSwapchainImageCount,VkImage * pSwapchainImages)
PFN_vkInternalAllocationNotification	deps/glad/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkInternalAllocationNotification)($/;"	t	typeref:typename:void (VKAPI_PTR *)(void * pUserData,size_t size,VkInternalAllocationType allocationType,VkSystemAllocationScope allocationScope)
PFN_vkInternalFreeNotification	deps/glad/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkInternalFreeNotification)($/;"	t	typeref:typename:void (VKAPI_PTR *)(void * pUserData,size_t size,VkInternalAllocationType allocationType,VkSystemAllocationScope allocationScope)
PFN_vkInvalidateMappedMemoryRanges	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkInvalidateMappedMemoryRanges)(VkDevice   device, uint32_t /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,uint32_t memoryRangeCount,const VkMappedMemoryRange * pMemoryRanges)
PFN_vkMapMemory	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkMapMemory)(VkDevice   device, VkDeviceMemory   memory, VkD/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkDeviceMemory memory,VkDeviceSize offset,VkDeviceSize size,VkMemoryMapFlags flags,void ** ppData)
PFN_vkMergePipelineCaches	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkMergePipelineCaches)(VkDevice   device, VkPipelineCache   /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkPipelineCache dstCache,uint32_t srcCacheCount,const VkPipelineCache * pSrcCaches)
PFN_vkQueueBindSparse	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkQueueBindSparse)(VkQueue   queue, uint32_t   bindInfoCount/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkQueue queue,uint32_t bindInfoCount,const VkBindSparseInfo * pBindInfo,VkFence fence)
PFN_vkQueuePresentKHR	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkQueuePresentKHR)(VkQueue   queue, const  VkPresentInfoKHR /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkQueue queue,const VkPresentInfoKHR * pPresentInfo)
PFN_vkQueueSubmit	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkQueueSubmit)(VkQueue   queue, uint32_t   submitCount, cons/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkQueue queue,uint32_t submitCount,const VkSubmitInfo * pSubmits,VkFence fence)
PFN_vkQueueWaitIdle	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkQueueWaitIdle)(VkQueue   queue);$/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkQueue queue)
PFN_vkReallocationFunction	deps/glad/vulkan.h	/^typedef void* (VKAPI_PTR *PFN_vkReallocationFunction)($/;"	t	typeref:typename:void * (VKAPI_PTR *)(void * pUserData,void * pOriginal,size_t size,size_t alignment,VkSystemAllocationScope allocationScope)
PFN_vkResetCommandBuffer	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkResetCommandBuffer)(VkCommandBuffer   commandBuffer, VkCom/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkCommandBuffer commandBuffer,VkCommandBufferResetFlags flags)
PFN_vkResetCommandPool	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkResetCommandPool)(VkDevice   device, VkCommandPool   comma/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkCommandPool commandPool,VkCommandPoolResetFlags flags)
PFN_vkResetDescriptorPool	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkResetDescriptorPool)(VkDevice   device, VkDescriptorPool  /;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkDescriptorPool descriptorPool,VkDescriptorPoolResetFlags flags)
PFN_vkResetEvent	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkResetEvent)(VkDevice   device, VkEvent   event);$/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkEvent event)
PFN_vkResetFences	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkResetFences)(VkDevice   device, uint32_t   fenceCount, con/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,uint32_t fenceCount,const VkFence * pFences)
PFN_vkSetEvent	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkSetEvent)(VkDevice   device, VkEvent   event);$/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,VkEvent event)
PFN_vkTrimCommandPool	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkTrimCommandPool)(VkDevice   device, VkCommandPool   commandPoo/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkCommandPool commandPool,VkCommandPoolTrimFlags flags)
PFN_vkUnmapMemory	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkUnmapMemory)(VkDevice   device, VkDeviceMemory   memory);$/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkDeviceMemory memory)
PFN_vkUpdateDescriptorSetWithTemplate	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkUpdateDescriptorSetWithTemplate)(VkDevice   device, VkDescript/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,VkDescriptorSet descriptorSet,VkDescriptorUpdateTemplate descriptorUpdateTemplate,const void * pData)
PFN_vkUpdateDescriptorSets	deps/glad/vulkan.h	/^typedef void (GLAD_API_PTR *PFN_vkUpdateDescriptorSets)(VkDevice   device, uint32_t   descriptor/;"	t	typeref:typename:void (GLAD_API_PTR *)(VkDevice device,uint32_t descriptorWriteCount,const VkWriteDescriptorSet * pDescriptorWrites,uint32_t descriptorCopyCount,const VkCopyDescriptorSet * pDescriptorCopies)
PFN_vkVoidFunction	deps/glad/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkVoidFunction)(void);$/;"	t	typeref:typename:void (VKAPI_PTR *)(void)
PFN_vkVoidFunction	src/internal.h	/^typedef void (APIENTRY * PFN_vkVoidFunction)(void);$/;"	t	typeref:typename:void (APIENTRY *)(void)
PFN_vkWaitForFences	deps/glad/vulkan.h	/^typedef VkResult (GLAD_API_PTR *PFN_vkWaitForFences)(VkDevice   device, uint32_t   fenceCount, c/;"	t	typeref:typename:VkResult (GLAD_API_PTR *)(VkDevice device,uint32_t fenceCount,const VkFence * pFences,VkBool32 waitAll,uint64_t timeout)
PFN_wglCreateContext	src/wgl_context.h	/^typedef HGLRC (WINAPI * PFN_wglCreateContext)(HDC);$/;"	t	typeref:typename:HGLRC (WINAPI *)(HDC)
PFN_wglDeleteContext	src/wgl_context.h	/^typedef BOOL (WINAPI * PFN_wglDeleteContext)(HGLRC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC)
PFN_wglGetCurrentContext	src/wgl_context.h	/^typedef HGLRC (WINAPI * PFN_wglGetCurrentContext)(void);$/;"	t	typeref:typename:HGLRC (WINAPI *)(void)
PFN_wglGetCurrentDC	src/wgl_context.h	/^typedef HDC (WINAPI * PFN_wglGetCurrentDC)(void);$/;"	t	typeref:typename:HDC (WINAPI *)(void)
PFN_wglGetProcAddress	src/wgl_context.h	/^typedef PROC (WINAPI * PFN_wglGetProcAddress)(LPCSTR);$/;"	t	typeref:typename:PROC (WINAPI *)(LPCSTR)
PFN_wglMakeCurrent	src/wgl_context.h	/^typedef BOOL (WINAPI * PFN_wglMakeCurrent)(HDC,HGLRC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC,HGLRC)
PFN_wglShareLists	src/wgl_context.h	/^typedef BOOL (WINAPI * PFN_wglShareLists)(HGLRC,HGLRC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC,HGLRC)
PFN_wl_cursor_image_get_buffer	src/wl_platform.h	/^typedef struct wl_buffer* (* PFN_wl_cursor_image_get_buffer)(struct wl_cursor_image*);$/;"	t	typeref:struct:wl_buffer * (*)(struct wl_cursor_image *)
PFN_wl_cursor_theme_destroy	src/wl_platform.h	/^typedef void (* PFN_wl_cursor_theme_destroy)(struct wl_cursor_theme*);$/;"	t	typeref:typename:void (*)(struct wl_cursor_theme *)
PFN_wl_cursor_theme_get_cursor	src/wl_platform.h	/^typedef struct wl_cursor* (* PFN_wl_cursor_theme_get_cursor)(struct wl_cursor_theme*, const char/;"	t	typeref:struct:wl_cursor * (*)(struct wl_cursor_theme *,const char *)
PFN_wl_cursor_theme_load	src/wl_platform.h	/^typedef struct wl_cursor_theme* (* PFN_wl_cursor_theme_load)(const char*, int, struct wl_shm*);$/;"	t	typeref:struct:wl_cursor_theme * (*)(const char *,int,struct wl_shm *)
PFN_wl_egl_window_create	src/wl_platform.h	/^typedef struct wl_egl_window* (* PFN_wl_egl_window_create)(struct wl_surface*, int, int);$/;"	t	typeref:struct:wl_egl_window * (*)(struct wl_surface *,int,int)
PFN_wl_egl_window_destroy	src/wl_platform.h	/^typedef void (* PFN_wl_egl_window_destroy)(struct wl_egl_window*);$/;"	t	typeref:typename:void (*)(struct wl_egl_window *)
PFN_wl_egl_window_resize	src/wl_platform.h	/^typedef void (* PFN_wl_egl_window_resize)(struct wl_egl_window*, int, int, int, int);$/;"	t	typeref:typename:void (*)(struct wl_egl_window *,int,int,int,int)
PFN_xkb_compose_state_feed	src/wl_platform.h	/^typedef enum xkb_compose_feed_result (* PFN_xkb_compose_state_feed)(struct xkb_compose_state*, x/;"	t	typeref:enum:xkb_compose_feed_result (*)(struct xkb_compose_state *,xkb_keysym_t)
PFN_xkb_compose_state_get_one_sym	src/wl_platform.h	/^typedef xkb_keysym_t (* PFN_xkb_compose_state_get_one_sym)(struct xkb_compose_state*);$/;"	t	typeref:typename:xkb_keysym_t (*)(struct xkb_compose_state *)
PFN_xkb_compose_state_get_status	src/wl_platform.h	/^typedef enum xkb_compose_status (* PFN_xkb_compose_state_get_status)(struct xkb_compose_state*);$/;"	t	typeref:enum:xkb_compose_status (*)(struct xkb_compose_state *)
PFN_xkb_compose_state_new	src/wl_platform.h	/^typedef struct xkb_compose_state* (* PFN_xkb_compose_state_new)(struct xkb_compose_table*, enum /;"	t	typeref:struct:xkb_compose_state * (*)(struct xkb_compose_table *,enum xkb_compose_state_flags)
PFN_xkb_compose_state_unref	src/wl_platform.h	/^typedef void (* PFN_xkb_compose_state_unref)(struct xkb_compose_state*);$/;"	t	typeref:typename:void (*)(struct xkb_compose_state *)
PFN_xkb_compose_table_new_from_locale	src/wl_platform.h	/^typedef struct xkb_compose_table* (* PFN_xkb_compose_table_new_from_locale)(struct xkb_context*,/;"	t	typeref:struct:xkb_compose_table * (*)(struct xkb_context *,const char *,enum xkb_compose_compile_flags)
PFN_xkb_compose_table_unref	src/wl_platform.h	/^typedef void (* PFN_xkb_compose_table_unref)(struct xkb_compose_table*);$/;"	t	typeref:typename:void (*)(struct xkb_compose_table *)
PFN_xkb_context_new	src/wl_platform.h	/^typedef struct xkb_context* (* PFN_xkb_context_new)(enum xkb_context_flags);$/;"	t	typeref:struct:xkb_context * (*)(enum xkb_context_flags)
PFN_xkb_context_unref	src/wl_platform.h	/^typedef void (* PFN_xkb_context_unref)(struct xkb_context*);$/;"	t	typeref:typename:void (*)(struct xkb_context *)
PFN_xkb_keymap_key_repeats	src/wl_platform.h	/^typedef int (* PFN_xkb_keymap_key_repeats)(struct xkb_keymap*, xkb_keycode_t);$/;"	t	typeref:typename:int (*)(struct xkb_keymap *,xkb_keycode_t)
PFN_xkb_keymap_mod_get_index	src/wl_platform.h	/^typedef xkb_mod_index_t (* PFN_xkb_keymap_mod_get_index)(struct xkb_keymap*, const char*);$/;"	t	typeref:typename:xkb_mod_index_t (*)(struct xkb_keymap *,const char *)
PFN_xkb_keymap_new_from_string	src/wl_platform.h	/^typedef struct xkb_keymap* (* PFN_xkb_keymap_new_from_string)(struct xkb_context*, const char*, /;"	t	typeref:struct:xkb_keymap * (*)(struct xkb_context *,const char *,enum xkb_keymap_format,enum xkb_keymap_compile_flags)
PFN_xkb_keymap_unref	src/wl_platform.h	/^typedef void (* PFN_xkb_keymap_unref)(struct xkb_keymap*);$/;"	t	typeref:typename:void (*)(struct xkb_keymap *)
PFN_xkb_state_key_get_syms	src/wl_platform.h	/^typedef int (* PFN_xkb_state_key_get_syms)(struct xkb_state*, xkb_keycode_t, const xkb_keysym_t*/;"	t	typeref:typename:int (*)(struct xkb_state *,xkb_keycode_t,const xkb_keysym_t **)
PFN_xkb_state_new	src/wl_platform.h	/^typedef struct xkb_state* (* PFN_xkb_state_new)(struct xkb_keymap*);$/;"	t	typeref:struct:xkb_state * (*)(struct xkb_keymap *)
PFN_xkb_state_serialize_mods	src/wl_platform.h	/^typedef xkb_mod_mask_t (* PFN_xkb_state_serialize_mods)(struct xkb_state*, enum xkb_state_compon/;"	t	typeref:typename:xkb_mod_mask_t (*)(struct xkb_state *,enum xkb_state_component)
PFN_xkb_state_unref	src/wl_platform.h	/^typedef void (* PFN_xkb_state_unref)(struct xkb_state*);$/;"	t	typeref:typename:void (*)(struct xkb_state *)
PFN_xkb_state_update_mask	src/wl_platform.h	/^typedef enum xkb_state_component (* PFN_xkb_state_update_mask)(struct xkb_state*, xkb_mod_mask_t/;"	t	typeref:enum:xkb_state_component (*)(struct xkb_state *,xkb_mod_mask_t,xkb_mod_mask_t,xkb_mod_mask_t,xkb_layout_index_t,xkb_layout_index_t,xkb_layout_index_t)
PRIMARY	src/x11_platform.h	/^    Atom            PRIMARY;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
PROCESS_DPI_AWARENESS	src/win32_platform.h	/^} PROCESS_DPI_AWARENESS;$/;"	t	typeref:enum:__anon622bd5890303
PROCESS_DPI_UNAWARE	src/win32_platform.h	/^    PROCESS_DPI_UNAWARE = 0,$/;"	e	enum:__anon622bd5890303
PROCESS_PER_MONITOR_DPI_AWARE	src/win32_platform.h	/^    PROCESS_PER_MONITOR_DPI_AWARE = 2$/;"	e	enum:__anon622bd5890303
PROCESS_SYSTEM_DPI_AWARE	src/win32_platform.h	/^    PROCESS_SYSTEM_DPI_AWARE = 1,$/;"	e	enum:__anon622bd5890303
PROFILE	tests/glfwinfo.c	/^           MAJOR, MINOR, PROFILE, ROBUSTNESS, VERSION,$/;"	e	enum:main::__anon6b8c80140103	file:
PROFILE_NAME_COMPAT	tests/glfwinfo.c	/^#define PROFILE_NAME_COMPAT /;"	d	file:
PROFILE_NAME_CORE	tests/glfwinfo.c	/^#define PROFILE_NAME_CORE /;"	d	file:
PTRDIFF_MAX	deps/vs2008/stdint.h	/^#  define PTRDIFF_MAX /;"	d
PTRDIFF_MIN	deps/vs2008/stdint.h	/^#  define PTRDIFF_MIN /;"	d
PXINPUT_BATTERY_INFORMATION	deps/mingw/xinput.h	/^} XINPUT_BATTERY_INFORMATION, *PXINPUT_BATTERY_INFORMATION;$/;"	t	typeref:struct:_XINPUT_BATTERY_INFORMATION *
PXINPUT_CAPABILITIES	deps/mingw/xinput.h	/^} XINPUT_CAPABILITIES, *PXINPUT_CAPABILITIES;$/;"	t	typeref:struct:_XINPUT_CAPABILITIES *
PXINPUT_GAMEPAD	deps/mingw/xinput.h	/^} XINPUT_GAMEPAD, *PXINPUT_GAMEPAD;$/;"	t	typeref:struct:_XINPUT_GAMEPAD *
PXINPUT_KEYSTROKE	deps/mingw/xinput.h	/^} XINPUT_KEYSTROKE, *PXINPUT_KEYSTROKE;$/;"	t	typeref:struct:_XINPUT_KEYSTROKE *
PXINPUT_STATE	deps/mingw/xinput.h	/^} XINPUT_STATE, *PXINPUT_STATE;$/;"	t	typeref:struct:_XINPUT_STATE *
PXINPUT_VIBRATION	deps/mingw/xinput.h	/^} XINPUT_VIBRATION, *PXINPUT_VIBRATION;$/;"	t	typeref:struct:_XINPUT_VIBRATION *
P_TEX_HEIGHT	examples/particles.c	/^#define P_TEX_HEIGHT /;"	d	file:
P_TEX_WIDTH	examples/particles.c	/^#define P_TEX_WIDTH /;"	d	file:
QUADH	examples/wave.c	/^#define QUADH /;"	d	file:
QUADNUM	examples/wave.c	/^#define QUADNUM /;"	d	file:
QUADW	examples/wave.c	/^#define QUADW /;"	d	file:
QueryExtension	src/glx_context.h	/^    PFNGLXQUERYEXTENSIONPROC            QueryExtension;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXQUERYEXTENSIONPROC
QueryExtension	src/x11_platform.h	/^        PFN_XF86VidModeQueryExtension QueryExtension;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00808	typeref:typename:PFN_XF86VidModeQueryExtension
QueryExtension	src/x11_platform.h	/^        PFN_XRRQueryExtension QueryExtension;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRQueryExtension
QueryExtension	src/x11_platform.h	/^        PFN_XRenderQueryExtension QueryExtension;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00a08	typeref:typename:PFN_XRenderQueryExtension
QueryExtension	src/x11_platform.h	/^        PFN_XineramaQueryExtension QueryExtension;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00608	typeref:typename:PFN_XineramaQueryExtension
QueryExtensionsString	src/glx_context.h	/^    PFNGLXQUERYEXTENSIONSSTRINGPROC     QueryExtensionsString;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXQUERYEXTENSIONSSTRINGPROC
QueryScreens	src/x11_platform.h	/^        PFN_XineramaQueryScreens QueryScreens;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00608	typeref:typename:PFN_XineramaQueryScreens
QueryString	src/egl_context.h	/^    PFN_eglQueryString          QueryString;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglQueryString
QueryVersion	src/glx_context.h	/^    PFNGLXQUERYVERSIONPROC              QueryVersion;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXQUERYVERSIONPROC
QueryVersion	src/x11_platform.h	/^        PFN_XIQueryVersion QueryVersion;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00908	typeref:typename:PFN_XIQueryVersion
QueryVersion	src/x11_platform.h	/^        PFN_XRRQueryVersion QueryVersion;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRQueryVersion
QueryVersion	src/x11_platform.h	/^        PFN_XRenderQueryVersion QueryVersion;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00a08	typeref:typename:PFN_XRenderQueryVersion
Quick template	docs/CONTRIBUTING.md	/^#### Quick template$/;"	t
RADIUS	examples/boing.c	/^#define RADIUS /;"	d	file:
RAND_MAX	examples/boing.c	/^ #define RAND_MAX /;"	d	file:
REDBITS	tests/glfwinfo.c	/^           REDBITS, GREENBITS, BLUEBITS, ALPHABITS, DEPTHBITS, STENCILBITS,$/;"	e	enum:main::__anon6b8c80140103	file:
ROBUSTNESS	tests/glfwinfo.c	/^           MAJOR, MINOR, PROFILE, ROBUSTNESS, VERSION,$/;"	e	enum:main::__anon6b8c80140103	file:
Reporting a bug	docs/CONTRIBUTING.md	/^## Reporting a bug$/;"	s
Reporting a compile or link bug	docs/CONTRIBUTING.md	/^### Reporting a compile or link bug$/;"	S
Reporting a context creation bug	docs/CONTRIBUTING.md	/^### Reporting a context creation bug$/;"	S
Reporting a documentation bug	docs/CONTRIBUTING.md	/^### Reporting a documentation bug$/;"	S
Reporting a monitor or video mode bug	docs/CONTRIBUTING.md	/^### Reporting a monitor or video mode bug$/;"	S
Reporting a segfault or other crash bug	docs/CONTRIBUTING.md	/^### Reporting a segfault or other crash bug$/;"	S
Reporting a website bug	docs/CONTRIBUTING.md	/^### Reporting a website bug$/;"	S
Reporting a window, input or event bug	docs/CONTRIBUTING.md	/^### Reporting a window, input or event bug$/;"	S
Reporting bugs	README.md	/^## Reporting bugs$/;"	s
Reporting some other library bug	docs/CONTRIBUTING.md	/^### Reporting some other library bug$/;"	S
Requesting a feature	docs/CONTRIBUTING.md	/^## Requesting a feature$/;"	s
RtlVerifyVersionInfo	src/win32_platform.h	/^#define RtlVerifyVersionInfo /;"	d
RtlVerifyVersionInfo_	src/win32_platform.h	/^        PFN_RtlVerifyVersionInfo        RtlVerifyVersionInfo_;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890b08	typeref:typename:PFN_RtlVerifyVersionInfo
SAMPLES	tests/glfwinfo.c	/^           AUXBUFFERS, SAMPLES, STEREO, SRGB, SINGLEBUFFER, NOERROR_SRSLY,$/;"	e	enum:main::__anon6b8c80140103	file:
SAVE_TARGETS	src/x11_platform.h	/^    Atom            SAVE_TARGETS;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
SGI_swap_control	src/glx_context.h	/^    GLFWbool        SGI_swap_control;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:GLFWbool
SHADOW_OFFSET_X	examples/boing.c	/^#define SHADOW_OFFSET_X /;"	d	file:
SHADOW_OFFSET_Y	examples/boing.c	/^#define SHADOW_OFFSET_Y /;"	d	file:
SHADOW_OFFSET_Z	examples/boing.c	/^#define SHADOW_OFFSET_Z /;"	d	file:
SIG_ATOMIC_MAX	deps/vs2008/stdint.h	/^#define SIG_ATOMIC_MAX /;"	d
SIG_ATOMIC_MIN	deps/vs2008/stdint.h	/^#define SIG_ATOMIC_MIN /;"	d
SINGLEBUFFER	tests/glfwinfo.c	/^           AUXBUFFERS, SAMPLES, STEREO, SRGB, SINGLEBUFFER, NOERROR_SRSLY,$/;"	e	enum:main::__anon6b8c80140103	file:
SIZE_MAX	deps/vs2008/stdint.h	/^#     define SIZE_MAX /;"	d
SRGB	tests/glfwinfo.c	/^           AUXBUFFERS, SAMPLES, STEREO, SRGB, SINGLEBUFFER, NOERROR_SRSLY,$/;"	e	enum:main::__anon6b8c80140103	file:
STBIWDEF	deps/stb_image_write.h	/^#define STBIWDEF /;"	d
STBIW_ASSERT	deps/stb_image_write.h	/^#define STBIW_ASSERT(/;"	d
STBIW_FREE	deps/stb_image_write.h	/^#define STBIW_FREE(/;"	d
STBIW_MALLOC	deps/stb_image_write.h	/^#define STBIW_MALLOC(/;"	d
STBIW_MEMMOVE	deps/stb_image_write.h	/^#define STBIW_MEMMOVE(/;"	d
STBIW_REALLOC	deps/stb_image_write.h	/^#define STBIW_REALLOC(/;"	d
STBIW_REALLOC_SIZED	deps/stb_image_write.h	/^#define STBIW_REALLOC_SIZED(/;"	d
STBIW_UCHAR	deps/stb_image_write.h	/^#define STBIW_UCHAR(/;"	d
STB_IMAGE_WRITE_IMPLEMENTATION	examples/offscreen.c	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STENCILBITS	tests/glfwinfo.c	/^           REDBITS, GREENBITS, BLUEBITS, ALPHABITS, DEPTHBITS, STENCILBITS,$/;"	e	enum:main::__anon6b8c80140103	file:
STEP_LATITUDE	examples/boing.c	/^#define STEP_LATITUDE /;"	d	file:
STEP_LONGITUDE	examples/boing.c	/^#define STEP_LONGITUDE /;"	d	file:
STEREO	tests/glfwinfo.c	/^           AUXBUFFERS, SAMPLES, STEREO, SRGB, SINGLEBUFFER, NOERROR_SRSLY,$/;"	e	enum:main::__anon6b8c80140103	file:
STRATEGY_NAME_LOSE	tests/glfwinfo.c	/^#define STRATEGY_NAME_LOSE /;"	d	file:
STRATEGY_NAME_NONE	tests/glfwinfo.c	/^#define STRATEGY_NAME_NONE /;"	d	file:
SYN_DROPPED	src/linux_joystick.c	/^#define SYN_DROPPED /;"	d	file:
SelectEvents	src/x11_platform.h	/^        PFN_XISelectEvents SelectEvents;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00908	typeref:typename:PFN_XISelectEvents
SelectInput	src/x11_platform.h	/^        PFN_XRRSelectInput SelectInput;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRSelectInput
SetCrtcConfig	src/x11_platform.h	/^        PFN_XRRSetCrtcConfig SetCrtcConfig;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRSetCrtcConfig
SetCrtcGamma	src/x11_platform.h	/^        PFN_XRRSetCrtcGamma SetCrtcGamma;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRSetCrtcGamma
SetGammaRamp	src/x11_platform.h	/^        PFN_XF86VidModeSetGammaRamp SetGammaRamp;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00808	typeref:typename:PFN_XF86VidModeSetGammaRamp
SetProcessDPIAware	src/win32_platform.h	/^#define SetProcessDPIAware /;"	d
SetProcessDPIAware_	src/win32_platform.h	/^        PFN_SetProcessDPIAware          SetProcessDPIAware_;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890808	typeref:typename:PFN_SetProcessDPIAware
SetProcessDpiAwareness	src/win32_platform.h	/^#define SetProcessDpiAwareness /;"	d
SetProcessDpiAwarenessContext	src/win32_platform.h	/^#define SetProcessDpiAwarenessContext /;"	d
SetProcessDpiAwarenessContext_	src/win32_platform.h	/^        PFN_SetProcessDpiAwarenessContext SetProcessDpiAwarenessContext_;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890808	typeref:typename:PFN_SetProcessDpiAwarenessContext
SetProcessDpiAwareness_	src/win32_platform.h	/^        PFN_SetProcessDpiAwareness      SetProcessDpiAwareness_;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890a08	typeref:typename:PFN_SetProcessDpiAwareness
ShareLists	src/wgl_context.h	/^    PFN_wglShareLists                   ShareLists;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFN_wglShareLists
Slot	tests/events.c	/^} Slot;$/;"	t	typeref:struct:__anon79ddf3cd0108	file:
SubType	deps/mingw/xinput.h	/^    BYTE SubType;$/;"	m	struct:_XINPUT_CAPABILITIES	typeref:typename:BYTE
Support resources	docs/SUPPORT.md	/^# Support resources$/;"	c
SwapBuffers	src/egl_context.h	/^    PFN_eglSwapBuffers          SwapBuffers;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglSwapBuffers
SwapBuffers	src/glx_context.h	/^    PFNGLXSWAPBUFFERSPROC               SwapBuffers;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXSWAPBUFFERSPROC
SwapInterval	src/egl_context.h	/^    PFN_eglSwapInterval         SwapInterval;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglSwapInterval
SwapIntervalEXT	src/glx_context.h	/^    PFNGLXSWAPINTERVALEXTPROC           SwapIntervalEXT;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXSWAPINTERVALEXTPROC
SwapIntervalEXT	src/wgl_context.h	/^    PFNWGLSWAPINTERVALEXTPROC           SwapIntervalEXT;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:PFNWGLSWAPINTERVALEXTPROC
SwapIntervalMESA	src/glx_context.h	/^    PFNGLXSWAPINTERVALMESAPROC          SwapIntervalMESA;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXSWAPINTERVALMESAPROC
SwapIntervalSGI	src/glx_context.h	/^    PFNGLXSWAPINTERVALSGIPROC           SwapIntervalSGI;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:PFNGLXSWAPINTERVALSGIPROC
SwapchainBuffers	tests/triangle-vulkan.c	/^} SwapchainBuffers;$/;"	t	typeref:struct:__anondab0972c0108	file:
System requirements	README.md	/^## System requirements$/;"	s
TARGETS	src/x11_platform.h	/^    Atom            TARGETS;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
TEST_MODE	tests/monitors.c	/^    TEST_MODE$/;"	e	enum:Mode	file:
TIME_UTC	deps/tinycthread.h	/^    #define TIME_UTC /;"	d
TINYCTHREAD	examples/CMakeLists.txt	/^set(TINYCTHREAD "${GLFW_SOURCE_DIR}\/deps\/tinycthread.h"$/;"	v
TINYCTHREAD	tests/CMakeLists.txt	/^set(TINYCTHREAD "${GLFW_SOURCE_DIR}\/deps\/tinycthread.h"$/;"	v
TINYCTHREAD_VERSION	deps/tinycthread.h	/^#define TINYCTHREAD_VERSION /;"	d
TINYCTHREAD_VERSION_MAJOR	deps/tinycthread.h	/^#define TINYCTHREAD_VERSION_MAJOR /;"	d
TINYCTHREAD_VERSION_MINOR	deps/tinycthread.h	/^#define TINYCTHREAD_VERSION_MINOR /;"	d
TISCopyCurrentKeyboardLayoutInputSource	src/cocoa_platform.h	/^#define TISCopyCurrentKeyboardLayoutInputSource _glfw.ns.tis.CopyCurrentKeyboardLayoutInputSourc/;"	M
TISGetInputSourceProperty	src/cocoa_platform.h	/^#define TISGetInputSourceProperty _glfw.ns.tis.GetInputSourceProperty$/;"	M
TORUS_MAJOR	examples/splitview.c	/^#define TORUS_MAJOR /;"	d	file:
TORUS_MAJOR_RES	examples/splitview.c	/^#define TORUS_MAJOR_RES /;"	d	file:
TORUS_MINOR	examples/splitview.c	/^#define TORUS_MINOR /;"	d	file:
TORUS_MINOR_RES	examples/splitview.c	/^#define TORUS_MINOR_RES /;"	d	file:
TRUE	deps/tinycthread.c	/^  #define TRUE /;"	d	file:
TSS_DTOR_ITERATIONS	deps/tinycthread.h	/^#define TSS_DTOR_ITERATIONS /;"	d
Terminate	src/egl_context.h	/^    PFN_eglTerminate            Terminate;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:PFN_eglTerminate
Thread	tests/threads.c	/^} Thread;$/;"	t	typeref:struct:__anon6fa524230108	file:
TruncateDeg	examples/boing.c	/^GLfloat TruncateDeg( GLfloat deg )$/;"	f	typeref:typename:GLfloat
Type	deps/mingw/xinput.h	/^    BYTE Type;$/;"	m	struct:_XINPUT_CAPABILITIES	typeref:typename:BYTE
UINT16_C	deps/vs2008/stdint.h	/^#define UINT16_C(/;"	d
UINT16_MAX	deps/vs2008/stdint.h	/^#define UINT16_MAX /;"	d
UINT32_C	deps/vs2008/stdint.h	/^#define UINT32_C(/;"	d
UINT32_MAX	deps/vs2008/stdint.h	/^#define UINT32_MAX /;"	d
UINT64_C	deps/vs2008/stdint.h	/^#define UINT64_C(/;"	d
UINT64_MAX	deps/vs2008/stdint.h	/^#define UINT64_MAX /;"	d
UINT8_C	deps/vs2008/stdint.h	/^#define UINT8_C(/;"	d
UINT8_MAX	deps/vs2008/stdint.h	/^#define UINT8_MAX /;"	d
UINTMAX_C	deps/vs2008/stdint.h	/^#define UINTMAX_C /;"	d
UINTMAX_MAX	deps/vs2008/stdint.h	/^#define UINTMAX_MAX /;"	d
UINTPTR_MAX	deps/vs2008/stdint.h	/^#  define UINTPTR_MAX /;"	d
UINT_FAST16_MAX	deps/vs2008/stdint.h	/^#define UINT_FAST16_MAX /;"	d
UINT_FAST32_MAX	deps/vs2008/stdint.h	/^#define UINT_FAST32_MAX /;"	d
UINT_FAST64_MAX	deps/vs2008/stdint.h	/^#define UINT_FAST64_MAX /;"	d
UINT_FAST8_MAX	deps/vs2008/stdint.h	/^#define UINT_FAST8_MAX /;"	d
UINT_LEAST16_MAX	deps/vs2008/stdint.h	/^#define UINT_LEAST16_MAX /;"	d
UINT_LEAST32_MAX	deps/vs2008/stdint.h	/^#define UINT_LEAST32_MAX /;"	d
UINT_LEAST64_MAX	deps/vs2008/stdint.h	/^#define UINT_LEAST64_MAX /;"	d
UINT_LEAST8_MAX	deps/vs2008/stdint.h	/^#define UINT_LEAST8_MAX /;"	d
UNICODE	src/win32_platform.h	/^ #define UNICODE$/;"	d
UNICODE_NOCHAR	src/win32_platform.h	/^ #define UNICODE_NOCHAR /;"	d
USER_DEFAULT_SCREEN_DPI	src/win32_platform.h	/^ #define USER_DEFAULT_SCREEN_DPI /;"	d
UTF8_STRING	src/x11_platform.h	/^    Atom            UTF8_STRING;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
U_ASSERT_ONLY	tests/triangle-vulkan.c	/^#define U_ASSERT_ONLY /;"	d	file:
U_ASSERT_ONLY	tests/triangle-vulkan.c	/^#define U_ASSERT_ONLY$/;"	d	file:
Unicode	deps/mingw/xinput.h	/^    WCHAR Unicode;$/;"	m	struct:_XINPUT_KEYSTROKE	typeref:typename:WCHAR
UpdateConfiguration	src/x11_platform.h	/^        PFN_XRRUpdateConfiguration UpdateConfiguration;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:PFN_XRRUpdateConfiguration
UserIndex	deps/mingw/xinput.h	/^    BYTE UserIndex;$/;"	m	struct:_XINPUT_KEYSTROKE	typeref:typename:BYTE
Using GLFW	README.md	/^## Using GLFW$/;"	s
VC_EXTRALEAN	src/win32_platform.h	/^ #define VC_EXTRALEAN$/;"	d
VELOCITY	examples/particles.c	/^#define VELOCITY /;"	d	file:
VERSION	tests/glfwinfo.c	/^           MAJOR, MINOR, PROFILE, ROBUSTNESS, VERSION,$/;"	e	enum:main::__anon6b8c80140103	file:
VERTEXNUM	examples/wave.c	/^#define VERTEXNUM /;"	d	file:
VERTEX_BUFFER_BIND_ID	tests/triangle-vulkan.c	/^#define VERTEX_BUFFER_BIND_ID /;"	d	file:
VIEW_SCENE_DIST	examples/boing.c	/^#define VIEW_SCENE_DIST /;"	d	file:
VKAPI_ATTR	deps/glad/vk_platform.h	/^    #define VKAPI_ATTR$/;"	d
VKAPI_CALL	deps/glad/vk_platform.h	/^    #define VKAPI_CALL /;"	d
VKAPI_PTR	deps/glad/vk_platform.h	/^    #define VKAPI_PTR /;"	d
VK_ACCESS_COLOR_ATTACHMENT_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_COLOR_ATTACHMENT_READ_BIT = 128,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT = 256,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = 512,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 1024,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_HOST_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_HOST_READ_BIT = 8192,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_HOST_WRITE_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_HOST_WRITE_BIT = 16384,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_INDEX_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_INDEX_READ_BIT = 2,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_INDIRECT_COMMAND_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_INDIRECT_COMMAND_READ_BIT = 1,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_INPUT_ATTACHMENT_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_INPUT_ATTACHMENT_READ_BIT = 16,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_MEMORY_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_MEMORY_READ_BIT = 32768,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_MEMORY_WRITE_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_MEMORY_WRITE_BIT = 65536$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_SHADER_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_SHADER_READ_BIT = 32,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_SHADER_WRITE_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_SHADER_WRITE_BIT = 64,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_TRANSFER_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_TRANSFER_READ_BIT = 2048,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_TRANSFER_WRITE_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_TRANSFER_WRITE_BIT = 4096,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_UNIFORM_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_UNIFORM_READ_BIT = 8,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT	deps/glad/vulkan.h	/^    VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT = 4,$/;"	e	enum:VkAccessFlagBits
VK_API_VERSION_1_0	deps/glad/vulkan.h	/^#define VK_API_VERSION_1_0 /;"	d
VK_API_VERSION_1_1	deps/glad/vulkan.h	/^#define VK_API_VERSION_1_1 /;"	d
VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT	deps/glad/vulkan.h	/^    VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT = 1$/;"	e	enum:VkAttachmentDescriptionFlagBits
VK_ATTACHMENT_LOAD_OP_CLEAR	deps/glad/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_CLEAR = 1,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_DONT_CARE	deps/glad/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_DONT_CARE = 2$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_LOAD	deps/glad/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_LOAD = 0,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_STORE_OP_DONT_CARE	deps/glad/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_DONT_CARE = 1$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_STORE	deps/glad/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_STORE = 0,$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_UNUSED	deps/glad/vulkan.h	/^#define VK_ATTACHMENT_UNUSED /;"	d
VK_BLEND_FACTOR_CONSTANT_ALPHA	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_CONSTANT_ALPHA = 12,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_CONSTANT_COLOR	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_CONSTANT_COLOR = 10,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_DST_ALPHA	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_DST_ALPHA = 8,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_DST_COLOR	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_DST_COLOR = 4,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_ONE = 1,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA = 13,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR = 11,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA = 9,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR = 5,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA = 18$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR = 16,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA = 7,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR = 3,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC1_ALPHA	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_SRC1_ALPHA = 17,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC1_COLOR	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_SRC1_COLOR = 15,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC_ALPHA	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_SRC_ALPHA = 6,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC_ALPHA_SATURATE	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_SRC_ALPHA_SATURATE = 14,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC_COLOR	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_SRC_COLOR = 2,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ZERO	deps/glad/vulkan.h	/^    VK_BLEND_FACTOR_ZERO = 0,$/;"	e	enum:VkBlendFactor
VK_BLEND_OP_ADD	deps/glad/vulkan.h	/^    VK_BLEND_OP_ADD = 0,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_MAX	deps/glad/vulkan.h	/^    VK_BLEND_OP_MAX = 4$/;"	e	enum:VkBlendOp
VK_BLEND_OP_MIN	deps/glad/vulkan.h	/^    VK_BLEND_OP_MIN = 3,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_REVERSE_SUBTRACT	deps/glad/vulkan.h	/^    VK_BLEND_OP_REVERSE_SUBTRACT = 2,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_SUBTRACT	deps/glad/vulkan.h	/^    VK_BLEND_OP_SUBTRACT = 1,$/;"	e	enum:VkBlendOp
VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK	deps/glad/vulkan.h	/^    VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK = 2,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE	deps/glad/vulkan.h	/^    VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE = 4,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK	deps/glad/vulkan.h	/^    VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK = 0,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_INT_OPAQUE_BLACK	deps/glad/vulkan.h	/^    VK_BORDER_COLOR_INT_OPAQUE_BLACK = 3,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_INT_OPAQUE_WHITE	deps/glad/vulkan.h	/^    VK_BORDER_COLOR_INT_OPAQUE_WHITE = 5$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_INT_TRANSPARENT_BLACK	deps/glad/vulkan.h	/^    VK_BORDER_COLOR_INT_TRANSPARENT_BLACK = 1,$/;"	e	enum:VkBorderColor
VK_BUFFER_CREATE_PROTECTED_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_CREATE_PROTECTED_BIT = 8$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_CREATE_SPARSE_ALIASED_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_CREATE_SPARSE_ALIASED_BIT = 4,$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_CREATE_SPARSE_BINDING_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_CREATE_SPARSE_BINDING_BIT = 1,$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT = 2,$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_USAGE_INDEX_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_USAGE_INDEX_BUFFER_BIT = 64,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT = 256$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_STORAGE_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_USAGE_STORAGE_BUFFER_BIT = 32,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT = 8,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_TRANSFER_DST_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_USAGE_TRANSFER_DST_BIT = 2,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_TRANSFER_SRC_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_USAGE_TRANSFER_SRC_BIT = 1,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT = 16,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT = 4,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_VERTEX_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_BUFFER_USAGE_VERTEX_BUFFER_BIT = 128,$/;"	e	enum:VkBufferUsageFlagBits
VK_CHROMA_LOCATION_COSITED_EVEN	deps/glad/vulkan.h	/^    VK_CHROMA_LOCATION_COSITED_EVEN = 0,$/;"	e	enum:VkChromaLocation
VK_CHROMA_LOCATION_MIDPOINT	deps/glad/vulkan.h	/^    VK_CHROMA_LOCATION_MIDPOINT = 1$/;"	e	enum:VkChromaLocation
VK_COLORSPACE_SRGB_NONLINEAR_KHR	deps/glad/vulkan.h	/^    VK_COLORSPACE_SRGB_NONLINEAR_KHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_COMPONENT_A_BIT	deps/glad/vulkan.h	/^    VK_COLOR_COMPONENT_A_BIT = 8$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_B_BIT	deps/glad/vulkan.h	/^    VK_COLOR_COMPONENT_B_BIT = 4,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_G_BIT	deps/glad/vulkan.h	/^    VK_COLOR_COMPONENT_G_BIT = 2,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_R_BIT	deps/glad/vulkan.h	/^    VK_COLOR_COMPONENT_R_BIT = 1,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_SPACE_SRGB_NONLINEAR_KHR	deps/glad/vulkan.h	/^    VK_COLOR_SPACE_SRGB_NONLINEAR_KHR = 0,$/;"	e	enum:VkColorSpaceKHR
VK_COMMAND_BUFFER_LEVEL_PRIMARY	deps/glad/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_PRIMARY = 0,$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_SECONDARY	deps/glad/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_SECONDARY = 1$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT	deps/glad/vulkan.h	/^    VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT = 1$/;"	e	enum:VkCommandBufferResetFlagBits
VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT	deps/glad/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT = 1,$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT	deps/glad/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT = 2,$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT	deps/glad/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT = 4$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_POOL_CREATE_PROTECTED_BIT	deps/glad/vulkan.h	/^    VK_COMMAND_POOL_CREATE_PROTECTED_BIT = 4$/;"	e	enum:VkCommandPoolCreateFlagBits
VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT = 2,$/;"	e	enum:VkCommandPoolCreateFlagBits
VK_COMMAND_POOL_CREATE_TRANSIENT_BIT	deps/glad/vulkan.h	/^    VK_COMMAND_POOL_CREATE_TRANSIENT_BIT = 1,$/;"	e	enum:VkCommandPoolCreateFlagBits
VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT	deps/glad/vulkan.h	/^    VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT = 1$/;"	e	enum:VkCommandPoolResetFlagBits
VK_COMPARE_OP_ALWAYS	deps/glad/vulkan.h	/^    VK_COMPARE_OP_ALWAYS = 7$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_EQUAL	deps/glad/vulkan.h	/^    VK_COMPARE_OP_EQUAL = 2,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_GREATER	deps/glad/vulkan.h	/^    VK_COMPARE_OP_GREATER = 4,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_GREATER_OR_EQUAL	deps/glad/vulkan.h	/^    VK_COMPARE_OP_GREATER_OR_EQUAL = 6,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_LESS	deps/glad/vulkan.h	/^    VK_COMPARE_OP_LESS = 1,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_LESS_OR_EQUAL	deps/glad/vulkan.h	/^    VK_COMPARE_OP_LESS_OR_EQUAL = 3,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_NEVER	deps/glad/vulkan.h	/^    VK_COMPARE_OP_NEVER = 0,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_NOT_EQUAL	deps/glad/vulkan.h	/^    VK_COMPARE_OP_NOT_EQUAL = 5,$/;"	e	enum:VkCompareOp
VK_COMPONENT_SWIZZLE_A	deps/glad/vulkan.h	/^    VK_COMPONENT_SWIZZLE_A = 6$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_B	deps/glad/vulkan.h	/^    VK_COMPONENT_SWIZZLE_B = 5,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_G	deps/glad/vulkan.h	/^    VK_COMPONENT_SWIZZLE_G = 4,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_IDENTITY	deps/glad/vulkan.h	/^    VK_COMPONENT_SWIZZLE_IDENTITY = 0,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_ONE	deps/glad/vulkan.h	/^    VK_COMPONENT_SWIZZLE_ONE = 2,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_R	deps/glad/vulkan.h	/^    VK_COMPONENT_SWIZZLE_R = 3,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_ZERO	deps/glad/vulkan.h	/^    VK_COMPONENT_SWIZZLE_ZERO = 1,$/;"	e	enum:VkComponentSwizzle
VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR	deps/glad/vulkan.h	/^    VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR = 8$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR	deps/glad/vulkan.h	/^    VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR = 1,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR	deps/glad/vulkan.h	/^    VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR = 4,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR	deps/glad/vulkan.h	/^    VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR = 2,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_CULL_MODE_BACK_BIT	deps/glad/vulkan.h	/^    VK_CULL_MODE_BACK_BIT = 2,$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_FRONT_AND_BACK	deps/glad/vulkan.h	/^    VK_CULL_MODE_FRONT_AND_BACK = 0x00000003$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_FRONT_BIT	deps/glad/vulkan.h	/^    VK_CULL_MODE_FRONT_BIT = 1,$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_NONE	deps/glad/vulkan.h	/^    VK_CULL_MODE_NONE = 0,$/;"	e	enum:VkCullModeFlagBits
VK_DEBUG_REPORT_DEBUG_BIT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_DEBUG_BIT_EXT = 16$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_ERROR_BIT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_BIT_EXT = 8,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_INFORMATION_BIT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_INFORMATION_BIT_EXT = 1,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT = 9,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT = 13,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT = 6,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT = 25,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT = 28,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALL/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT = 22,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT = 23,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT = 20,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT = 1000085000$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT = 3,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT = 8,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT = 29,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT = 30,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT = 11,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT = 7,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT = 24,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT = 10,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT = 14,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT = 32,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT = 1,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT = 31,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT = 2,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT = 16,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT = 19,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT = 17,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT = 12,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT = 4,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT = 18,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT = 21,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT = 1000156000,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT = 5,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT = 15,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT = 26,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT = 27,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT = 0,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CA/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT = 33,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT = 4,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_WARNING_BIT_EXT	deps/glad/vulkan.h	/^    VK_DEBUG_REPORT_WARNING_BIT_EXT = 2,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEFINE_HANDLE	deps/glad/vulkan.h	/^#define VK_DEFINE_HANDLE(/;"	d
VK_DEFINE_NON_DISPATCHABLE_HANDLE	deps/glad/vulkan.h	/^        #define VK_DEFINE_NON_DISPATCHABLE_HANDLE(/;"	d
VK_DEPENDENCY_BY_REGION_BIT	deps/glad/vulkan.h	/^    VK_DEPENDENCY_BY_REGION_BIT = 1,$/;"	e	enum:VkDependencyFlagBits
VK_DEPENDENCY_DEVICE_GROUP_BIT	deps/glad/vulkan.h	/^    VK_DEPENDENCY_DEVICE_GROUP_BIT = 4,$/;"	e	enum:VkDependencyFlagBits
VK_DEPENDENCY_VIEW_LOCAL_BIT	deps/glad/vulkan.h	/^    VK_DEPENDENCY_VIEW_LOCAL_BIT = 2$/;"	e	enum:VkDependencyFlagBits
VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT = 1$/;"	e	enum:VkDescriptorPoolCreateFlagBits
VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = 1,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT = 10$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE = 2,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_SAMPLER	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_SAMPLER = 0,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_BUFFER	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER = 7,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = 9,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_IMAGE	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_IMAGE = 3,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = 5,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER = 6,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = 8,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = 4,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET	deps/glad/vulkan.h	/^    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET = 0$/;"	e	enum:VkDescriptorUpdateTemplateType
VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR	deps/glad/vulkan.h	/^    VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR = 1,$/;"	e	enum:VkDeviceGroupPresentModeFlagBitsKHR
VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR	deps/glad/vulkan.h	/^    VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR = 8$/;"	e	enum:VkDeviceGroupPresentModeFlagBitsKHR
VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR	deps/glad/vulkan.h	/^    VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR = 2,$/;"	e	enum:VkDeviceGroupPresentModeFlagBitsKHR
VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR	deps/glad/vulkan.h	/^    VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR = 4,$/;"	e	enum:VkDeviceGroupPresentModeFlagBitsKHR
VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT	deps/glad/vulkan.h	/^    VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT = 1$/;"	e	enum:VkDeviceQueueCreateFlagBits
VK_DYNAMIC_STATE_BLEND_CONSTANTS	deps/glad/vulkan.h	/^    VK_DYNAMIC_STATE_BLEND_CONSTANTS = 4,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_DEPTH_BIAS	deps/glad/vulkan.h	/^    VK_DYNAMIC_STATE_DEPTH_BIAS = 3,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_DEPTH_BOUNDS	deps/glad/vulkan.h	/^    VK_DYNAMIC_STATE_DEPTH_BOUNDS = 5,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_LINE_WIDTH	deps/glad/vulkan.h	/^    VK_DYNAMIC_STATE_LINE_WIDTH = 2,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_RANGE_SIZE	deps/glad/vulkan.h	/^    VK_DYNAMIC_STATE_RANGE_SIZE = (VK_DYNAMIC_STATE_STENCIL_REFERENCE - VK_DYNAMIC_STATE_VIEWPOR/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_SCISSOR	deps/glad/vulkan.h	/^    VK_DYNAMIC_STATE_SCISSOR = 1,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK	deps/glad/vulkan.h	/^    VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK = 6,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_STENCIL_REFERENCE	deps/glad/vulkan.h	/^    VK_DYNAMIC_STATE_STENCIL_REFERENCE = 8,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_STENCIL_WRITE_MASK	deps/glad/vulkan.h	/^    VK_DYNAMIC_STATE_STENCIL_WRITE_MASK = 7,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_VIEWPORT	deps/glad/vulkan.h	/^    VK_DYNAMIC_STATE_VIEWPORT = 0,$/;"	e	enum:VkDynamicState
VK_ERROR_DEVICE_LOST	deps/glad/vulkan.h	/^    VK_ERROR_DEVICE_LOST = -4,$/;"	e	enum:VkResult
VK_ERROR_DEVICE_LOST	src/internal.h	/^    VK_ERROR_DEVICE_LOST = -4,$/;"	e	enum:VkResult
VK_ERROR_EXTENSION_NOT_PRESENT	deps/glad/vulkan.h	/^    VK_ERROR_EXTENSION_NOT_PRESENT = -7,$/;"	e	enum:VkResult
VK_ERROR_EXTENSION_NOT_PRESENT	src/internal.h	/^    VK_ERROR_EXTENSION_NOT_PRESENT = -7,$/;"	e	enum:VkResult
VK_ERROR_FEATURE_NOT_PRESENT	deps/glad/vulkan.h	/^    VK_ERROR_FEATURE_NOT_PRESENT = -8,$/;"	e	enum:VkResult
VK_ERROR_FEATURE_NOT_PRESENT	src/internal.h	/^    VK_ERROR_FEATURE_NOT_PRESENT = -8,$/;"	e	enum:VkResult
VK_ERROR_FORMAT_NOT_SUPPORTED	deps/glad/vulkan.h	/^    VK_ERROR_FORMAT_NOT_SUPPORTED = -11,$/;"	e	enum:VkResult
VK_ERROR_FORMAT_NOT_SUPPORTED	src/internal.h	/^    VK_ERROR_FORMAT_NOT_SUPPORTED = -11,$/;"	e	enum:VkResult
VK_ERROR_FRAGMENTED_POOL	deps/glad/vulkan.h	/^    VK_ERROR_FRAGMENTED_POOL = -12,$/;"	e	enum:VkResult
VK_ERROR_INCOMPATIBLE_DISPLAY_KHR	src/internal.h	/^    VK_ERROR_INCOMPATIBLE_DISPLAY_KHR = -1000003001,$/;"	e	enum:VkResult
VK_ERROR_INCOMPATIBLE_DRIVER	deps/glad/vulkan.h	/^    VK_ERROR_INCOMPATIBLE_DRIVER = -9,$/;"	e	enum:VkResult
VK_ERROR_INCOMPATIBLE_DRIVER	src/internal.h	/^    VK_ERROR_INCOMPATIBLE_DRIVER = -9,$/;"	e	enum:VkResult
VK_ERROR_INITIALIZATION_FAILED	deps/glad/vulkan.h	/^    VK_ERROR_INITIALIZATION_FAILED = -3,$/;"	e	enum:VkResult
VK_ERROR_INITIALIZATION_FAILED	src/internal.h	/^    VK_ERROR_INITIALIZATION_FAILED = -3,$/;"	e	enum:VkResult
VK_ERROR_INVALID_EXTERNAL_HANDLE	deps/glad/vulkan.h	/^    VK_ERROR_INVALID_EXTERNAL_HANDLE = -1000072003,$/;"	e	enum:VkResult
VK_ERROR_LAYER_NOT_PRESENT	deps/glad/vulkan.h	/^    VK_ERROR_LAYER_NOT_PRESENT = -6,$/;"	e	enum:VkResult
VK_ERROR_LAYER_NOT_PRESENT	src/internal.h	/^    VK_ERROR_LAYER_NOT_PRESENT = -6,$/;"	e	enum:VkResult
VK_ERROR_MEMORY_MAP_FAILED	deps/glad/vulkan.h	/^    VK_ERROR_MEMORY_MAP_FAILED = -5,$/;"	e	enum:VkResult
VK_ERROR_MEMORY_MAP_FAILED	src/internal.h	/^    VK_ERROR_MEMORY_MAP_FAILED = -5,$/;"	e	enum:VkResult
VK_ERROR_NATIVE_WINDOW_IN_USE_KHR	deps/glad/vulkan.h	/^    VK_ERROR_NATIVE_WINDOW_IN_USE_KHR = -1000000001,$/;"	e	enum:VkResult
VK_ERROR_NATIVE_WINDOW_IN_USE_KHR	src/internal.h	/^    VK_ERROR_NATIVE_WINDOW_IN_USE_KHR = -1000000001,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_DATE_KHR	deps/glad/vulkan.h	/^    VK_ERROR_OUT_OF_DATE_KHR = -1000001004,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_DATE_KHR	src/internal.h	/^    VK_ERROR_OUT_OF_DATE_KHR = -1000001004,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_DEVICE_MEMORY	deps/glad/vulkan.h	/^    VK_ERROR_OUT_OF_DEVICE_MEMORY = -2,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_DEVICE_MEMORY	src/internal.h	/^    VK_ERROR_OUT_OF_DEVICE_MEMORY = -2,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_HOST_MEMORY	deps/glad/vulkan.h	/^    VK_ERROR_OUT_OF_HOST_MEMORY = -1,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_HOST_MEMORY	src/internal.h	/^    VK_ERROR_OUT_OF_HOST_MEMORY = -1,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_POOL_MEMORY	deps/glad/vulkan.h	/^    VK_ERROR_OUT_OF_POOL_MEMORY = -1000069000,$/;"	e	enum:VkResult
VK_ERROR_SURFACE_LOST_KHR	deps/glad/vulkan.h	/^    VK_ERROR_SURFACE_LOST_KHR = -1000000000,$/;"	e	enum:VkResult
VK_ERROR_SURFACE_LOST_KHR	src/internal.h	/^    VK_ERROR_SURFACE_LOST_KHR = -1000000000,$/;"	e	enum:VkResult
VK_ERROR_TOO_MANY_OBJECTS	deps/glad/vulkan.h	/^    VK_ERROR_TOO_MANY_OBJECTS = -10,$/;"	e	enum:VkResult
VK_ERROR_TOO_MANY_OBJECTS	src/internal.h	/^    VK_ERROR_TOO_MANY_OBJECTS = -10,$/;"	e	enum:VkResult
VK_ERROR_VALIDATION_FAILED_EXT	deps/glad/vulkan.h	/^    VK_ERROR_VALIDATION_FAILED_EXT = -1000011001$/;"	e	enum:VkResult
VK_ERROR_VALIDATION_FAILED_EXT	src/internal.h	/^    VK_ERROR_VALIDATION_FAILED_EXT = -1000011001,$/;"	e	enum:VkResult
VK_EVENT_RESET	deps/glad/vulkan.h	/^    VK_EVENT_RESET = 4,$/;"	e	enum:VkResult
VK_EVENT_RESET	src/internal.h	/^    VK_EVENT_RESET = 4,$/;"	e	enum:VkResult
VK_EVENT_SET	deps/glad/vulkan.h	/^    VK_EVENT_SET = 3,$/;"	e	enum:VkResult
VK_EVENT_SET	src/internal.h	/^    VK_EVENT_SET = 3,$/;"	e	enum:VkResult
VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT = 1,$/;"	e	enum:VkExternalFenceFeatureFlagBits
VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT = 2$/;"	e	enum:VkExternalFenceFeatureFlagBits
VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT = 1,$/;"	e	enum:VkExternalFenceHandleTypeFlagBits
VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT = 2,$/;"	e	enum:VkExternalFenceHandleTypeFlagBits
VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = 4,$/;"	e	enum:VkExternalFenceHandleTypeFlagBits
VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT = 8$/;"	e	enum:VkExternalFenceHandleTypeFlagBits
VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT = 1,$/;"	e	enum:VkExternalMemoryFeatureFlagBits
VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT = 2,$/;"	e	enum:VkExternalMemoryFeatureFlagBits
VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT = 4$/;"	e	enum:VkExternalMemoryFeatureFlagBits
VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT = 8,$/;"	e	enum:VkExternalMemoryHandleTypeFlagBits
VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT = 16,$/;"	e	enum:VkExternalMemoryHandleTypeFlagBits
VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT = 32,$/;"	e	enum:VkExternalMemoryHandleTypeFlagBits
VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT = 64$/;"	e	enum:VkExternalMemoryHandleTypeFlagBits
VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT = 1,$/;"	e	enum:VkExternalMemoryHandleTypeFlagBits
VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT = 2,$/;"	e	enum:VkExternalMemoryHandleTypeFlagBits
VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = 4,$/;"	e	enum:VkExternalMemoryHandleTypeFlagBits
VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT = 1,$/;"	e	enum:VkExternalSemaphoreFeatureFlagBits
VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT = 2$/;"	e	enum:VkExternalSemaphoreFeatureFlagBits
VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT = 8,$/;"	e	enum:VkExternalSemaphoreHandleTypeFlagBits
VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT = 1,$/;"	e	enum:VkExternalSemaphoreHandleTypeFlagBits
VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT = 2,$/;"	e	enum:VkExternalSemaphoreHandleTypeFlagBits
VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = 4,$/;"	e	enum:VkExternalSemaphoreHandleTypeFlagBits
VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT	deps/glad/vulkan.h	/^    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT = 16$/;"	e	enum:VkExternalSemaphoreHandleTypeFlagBits
VK_EXT_DEBUG_REPORT_EXTENSION_NAME	deps/glad/vulkan.h	/^#define VK_EXT_DEBUG_REPORT_EXTENSION_NAME /;"	d
VK_EXT_DEBUG_REPORT_SPEC_VERSION	deps/glad/vulkan.h	/^#define VK_EXT_DEBUG_REPORT_SPEC_VERSION /;"	d
VK_EXT_debug_report	deps/glad/vulkan.h	/^#define VK_EXT_debug_report /;"	d
VK_FALSE	deps/glad/vulkan.h	/^#define VK_FALSE /;"	d
VK_FENCE_CREATE_SIGNALED_BIT	deps/glad/vulkan.h	/^    VK_FENCE_CREATE_SIGNALED_BIT = 1$/;"	e	enum:VkFenceCreateFlagBits
VK_FENCE_IMPORT_TEMPORARY_BIT	deps/glad/vulkan.h	/^    VK_FENCE_IMPORT_TEMPORARY_BIT = 1$/;"	e	enum:VkFenceImportFlagBits
VK_FILTER_LINEAR	deps/glad/vulkan.h	/^    VK_FILTER_LINEAR = 1$/;"	e	enum:VkFilter
VK_FILTER_NEAREST	deps/glad/vulkan.h	/^    VK_FILTER_NEAREST = 0,$/;"	e	enum:VkFilter
VK_FORMAT_A1R5G5B5_UNORM_PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_A1R5G5B5_UNORM_PACK16 = 8,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_SINT_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2B10G10R10_SINT_PACK32 = 69,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_SNORM_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2B10G10R10_SNORM_PACK32 = 65,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_SSCALED_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2B10G10R10_SSCALED_PACK32 = 67,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_UINT_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2B10G10R10_UINT_PACK32 = 68,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_UNORM_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2B10G10R10_UNORM_PACK32 = 64,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_USCALED_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2B10G10R10_USCALED_PACK32 = 66,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_SINT_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2R10G10B10_SINT_PACK32 = 63,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_SNORM_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2R10G10B10_SNORM_PACK32 = 59,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_SSCALED_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2R10G10B10_SSCALED_PACK32 = 61,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_UINT_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2R10G10B10_UINT_PACK32 = 62,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_UNORM_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2R10G10B10_UNORM_PACK32 = 58,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_USCALED_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A2R10G10B10_USCALED_PACK32 = 60,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SINT_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SINT_PACK32 = 56,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SNORM_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SNORM_PACK32 = 52,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SRGB_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SRGB_PACK32 = 57,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SSCALED_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SSCALED_PACK32 = 54,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_UINT_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A8B8G8R8_UINT_PACK32 = 55,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_UNORM_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A8B8G8R8_UNORM_PACK32 = 51,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_USCALED_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_A8B8G8R8_USCALED_PACK32 = 53,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x10_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_10x10_SRGB_BLOCK = 180,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x10_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_10x10_UNORM_BLOCK = 179,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x5_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_10x5_SRGB_BLOCK = 174,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x5_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_10x5_UNORM_BLOCK = 173,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x6_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_10x6_SRGB_BLOCK = 176,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x6_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_10x6_UNORM_BLOCK = 175,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x8_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_10x8_SRGB_BLOCK = 178,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x8_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_10x8_UNORM_BLOCK = 177,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x10_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_12x10_SRGB_BLOCK = 182,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x10_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_12x10_UNORM_BLOCK = 181,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x12_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_12x12_SRGB_BLOCK = 184,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x12_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_12x12_UNORM_BLOCK = 183,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_4x4_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_4x4_SRGB_BLOCK = 158,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_4x4_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_4x4_UNORM_BLOCK = 157,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x4_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_5x4_SRGB_BLOCK = 160,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x4_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_5x4_UNORM_BLOCK = 159,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x5_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_5x5_SRGB_BLOCK = 162,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x5_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_5x5_UNORM_BLOCK = 161,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x5_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_6x5_SRGB_BLOCK = 164,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x5_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_6x5_UNORM_BLOCK = 163,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x6_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_6x6_SRGB_BLOCK = 166,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x6_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_6x6_UNORM_BLOCK = 165,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x5_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_8x5_SRGB_BLOCK = 168,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x5_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_8x5_UNORM_BLOCK = 167,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x6_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_8x6_SRGB_BLOCK = 170,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x6_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_8x6_UNORM_BLOCK = 169,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x8_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_8x8_SRGB_BLOCK = 172,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x8_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ASTC_8x8_UNORM_BLOCK = 171,$/;"	e	enum:VkFormat
VK_FORMAT_B10G11R11_UFLOAT_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_B10G11R11_UFLOAT_PACK32 = 122,$/;"	e	enum:VkFormat
VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = 1000156011,$/;"	e	enum:VkFormat
VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = 1000156021,$/;"	e	enum:VkFormat
VK_FORMAT_B16G16R16G16_422_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_B16G16R16G16_422_UNORM = 1000156028,$/;"	e	enum:VkFormat
VK_FORMAT_B4G4R4A4_UNORM_PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_B4G4R4A4_UNORM_PACK16 = 3,$/;"	e	enum:VkFormat
VK_FORMAT_B5G5R5A1_UNORM_PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_B5G5R5A1_UNORM_PACK16 = 7,$/;"	e	enum:VkFormat
VK_FORMAT_B5G6R5_UNORM_PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_B5G6R5_UNORM_PACK16 = 5,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SINT = 49,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SNORM	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SNORM = 45,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SRGB	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SRGB = 50,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SSCALED	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SSCALED = 47,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8A8_UINT = 48,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8A8_UNORM = 44,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_USCALED	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8A8_USCALED = 46,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8G8_422_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8G8_422_UNORM = 1000156001,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8_SINT = 35,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SNORM	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8_SNORM = 31,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SRGB	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8_SRGB = 36,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SSCALED	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8_SSCALED = 33,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8_UINT = 34,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8_UNORM = 30,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_USCALED	deps/glad/vulkan.h	/^    VK_FORMAT_B8G8R8_USCALED = 32,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGBA_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC1_RGBA_SRGB_BLOCK = 134,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGBA_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC1_RGBA_UNORM_BLOCK = 133,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGB_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC1_RGB_SRGB_BLOCK = 132,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGB_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC1_RGB_UNORM_BLOCK = 131,$/;"	e	enum:VkFormat
VK_FORMAT_BC2_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC2_SRGB_BLOCK = 136,$/;"	e	enum:VkFormat
VK_FORMAT_BC2_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC2_UNORM_BLOCK = 135,$/;"	e	enum:VkFormat
VK_FORMAT_BC3_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC3_SRGB_BLOCK = 138,$/;"	e	enum:VkFormat
VK_FORMAT_BC3_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC3_UNORM_BLOCK = 137,$/;"	e	enum:VkFormat
VK_FORMAT_BC4_SNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC4_SNORM_BLOCK = 140,$/;"	e	enum:VkFormat
VK_FORMAT_BC4_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC4_UNORM_BLOCK = 139,$/;"	e	enum:VkFormat
VK_FORMAT_BC5_SNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC5_SNORM_BLOCK = 142,$/;"	e	enum:VkFormat
VK_FORMAT_BC5_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC5_UNORM_BLOCK = 141,$/;"	e	enum:VkFormat
VK_FORMAT_BC6H_SFLOAT_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC6H_SFLOAT_BLOCK = 144,$/;"	e	enum:VkFormat
VK_FORMAT_BC6H_UFLOAT_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC6H_UFLOAT_BLOCK = 143,$/;"	e	enum:VkFormat
VK_FORMAT_BC7_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC7_SRGB_BLOCK = 146,$/;"	e	enum:VkFormat
VK_FORMAT_BC7_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_BC7_UNORM_BLOCK = 145,$/;"	e	enum:VkFormat
VK_FORMAT_D16_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_D16_UNORM = 124,$/;"	e	enum:VkFormat
VK_FORMAT_D16_UNORM_S8_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_D16_UNORM_S8_UINT = 128,$/;"	e	enum:VkFormat
VK_FORMAT_D24_UNORM_S8_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_D24_UNORM_S8_UINT = 129,$/;"	e	enum:VkFormat
VK_FORMAT_D32_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_D32_SFLOAT = 126,$/;"	e	enum:VkFormat
VK_FORMAT_D32_SFLOAT_S8_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_D32_SFLOAT_S8_UINT = 130,$/;"	e	enum:VkFormat
VK_FORMAT_E5B9G9R9_UFLOAT_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = 123,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11G11_SNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_EAC_R11G11_SNORM_BLOCK = 156,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11G11_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_EAC_R11G11_UNORM_BLOCK = 155,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11_SNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_EAC_R11_SNORM_BLOCK = 154,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_EAC_R11_UNORM_BLOCK = 153,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = 150,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = 149,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = 152,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = 151,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = 148,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK	deps/glad/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = 147,$/;"	e	enum:VkFormat
VK_FORMAT_FEATURE_BLIT_DST_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_BLIT_DST_BIT = 2048,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_BLIT_SRC_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_BLIT_SRC_BIT = 1024,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT = 128,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT = 256,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT = 8388608$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT = 512,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_DISJOINT_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_DISJOINT_BIT = 4194304,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT = 131072,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT = 1,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT = 4096,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT = 104857/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BI/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = 262144,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT = 524288/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT = 4,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT = 2,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = 32,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT = 16,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_TRANSFER_DST_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_TRANSFER_DST_BIT = 32768,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_TRANSFER_SRC_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_TRANSFER_SRC_BIT = 16384,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT = 8,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT	deps/glad/vulkan.h	/^    VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT = 64,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = 1000156010,$/;"	e	enum:VkFormat
VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 = 1000156013,$/;"	e	enum:VkFormat
VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 = 1000156015,$/;"	e	enum:VkFormat
VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 = 1000156012,$/;"	e	enum:VkFormat
VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 = 1000156014,$/;"	e	enum:VkFormat
VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 = 1000156016,$/;"	e	enum:VkFormat
VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = 1000156020,$/;"	e	enum:VkFormat
VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 = 1000156023,$/;"	e	enum:VkFormat
VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 = 1000156025,$/;"	e	enum:VkFormat
VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 = 1000156022,$/;"	e	enum:VkFormat
VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 = 1000156024,$/;"	e	enum:VkFormat
VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 = 1000156026,$/;"	e	enum:VkFormat
VK_FORMAT_G16B16G16R16_422_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G16B16G16R16_422_UNORM = 1000156027,$/;"	e	enum:VkFormat
VK_FORMAT_G16_B16R16_2PLANE_420_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G16_B16R16_2PLANE_420_UNORM = 1000156030,$/;"	e	enum:VkFormat
VK_FORMAT_G16_B16R16_2PLANE_422_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G16_B16R16_2PLANE_422_UNORM = 1000156032,$/;"	e	enum:VkFormat
VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM = 1000156029,$/;"	e	enum:VkFormat
VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM = 1000156031,$/;"	e	enum:VkFormat
VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM = 1000156033$/;"	e	enum:VkFormat
VK_FORMAT_G8B8G8R8_422_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G8B8G8R8_422_UNORM = 1000156000,$/;"	e	enum:VkFormat
VK_FORMAT_G8_B8R8_2PLANE_420_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G8_B8R8_2PLANE_420_UNORM = 1000156003,$/;"	e	enum:VkFormat
VK_FORMAT_G8_B8R8_2PLANE_422_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G8_B8R8_2PLANE_422_UNORM = 1000156005,$/;"	e	enum:VkFormat
VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM = 1000156002,$/;"	e	enum:VkFormat
VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM = 1000156004,$/;"	e	enum:VkFormat
VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM = 1000156006,$/;"	e	enum:VkFormat
VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = 1000156009,$/;"	e	enum:VkFormat
VK_FORMAT_R10X6G10X6_UNORM_2PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_R10X6G10X6_UNORM_2PACK16 = 1000156008,$/;"	e	enum:VkFormat
VK_FORMAT_R10X6_UNORM_PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_R10X6_UNORM_PACK16 = 1000156007,$/;"	e	enum:VkFormat
VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = 1000156019,$/;"	e	enum:VkFormat
VK_FORMAT_R12X4G12X4_UNORM_2PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_R12X4G12X4_UNORM_2PACK16 = 1000156018,$/;"	e	enum:VkFormat
VK_FORMAT_R12X4_UNORM_PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_R12X4_UNORM_PACK16 = 1000156017,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SFLOAT = 97,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SINT = 96,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SNORM = 92,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SSCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SSCALED = 94,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16A16_UINT = 95,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16A16_UNORM = 91,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_USCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16A16_USCALED = 93,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16_SFLOAT = 90,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16_SINT = 89,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16_SNORM = 85,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SSCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16_SSCALED = 87,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16_UINT = 88,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16_UNORM = 84,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_USCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16B16_USCALED = 86,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16_SFLOAT = 83,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16_SINT = 82,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16_SNORM = 78,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SSCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16_SSCALED = 80,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16_UINT = 81,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16_UNORM = 77,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_USCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R16G16_USCALED = 79,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R16_SFLOAT = 76,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R16_SINT = 75,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R16_SNORM = 71,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SSCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R16_SSCALED = 73,$/;"	e	enum:VkFormat
VK_FORMAT_R16_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R16_UINT = 74,$/;"	e	enum:VkFormat
VK_FORMAT_R16_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R16_UNORM = 70,$/;"	e	enum:VkFormat
VK_FORMAT_R16_USCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R16_USCALED = 72,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32A32_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R32G32B32A32_SFLOAT = 109,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32A32_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R32G32B32A32_SINT = 108,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32A32_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R32G32B32A32_UINT = 107,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R32G32B32_SFLOAT = 106,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R32G32B32_SINT = 105,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R32G32B32_UINT = 104,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R32G32_SFLOAT = 103,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R32G32_SINT = 102,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R32G32_UINT = 101,$/;"	e	enum:VkFormat
VK_FORMAT_R32_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R32_SFLOAT = 100,$/;"	e	enum:VkFormat
VK_FORMAT_R32_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R32_SINT = 99,$/;"	e	enum:VkFormat
VK_FORMAT_R32_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R32_UINT = 98,$/;"	e	enum:VkFormat
VK_FORMAT_R4G4B4A4_UNORM_PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_R4G4B4A4_UNORM_PACK16 = 2,$/;"	e	enum:VkFormat
VK_FORMAT_R4G4_UNORM_PACK8	deps/glad/vulkan.h	/^    VK_FORMAT_R4G4_UNORM_PACK8 = 1,$/;"	e	enum:VkFormat
VK_FORMAT_R5G5B5A1_UNORM_PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_R5G5B5A1_UNORM_PACK16 = 6,$/;"	e	enum:VkFormat
VK_FORMAT_R5G6B5_UNORM_PACK16	deps/glad/vulkan.h	/^    VK_FORMAT_R5G6B5_UNORM_PACK16 = 4,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64A64_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R64G64B64A64_SFLOAT = 121,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64A64_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R64G64B64A64_SINT = 120,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64A64_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R64G64B64A64_UINT = 119,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R64G64B64_SFLOAT = 118,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R64G64B64_SINT = 117,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R64G64B64_UINT = 116,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R64G64_SFLOAT = 115,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R64G64_SINT = 114,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R64G64_UINT = 113,$/;"	e	enum:VkFormat
VK_FORMAT_R64_SFLOAT	deps/glad/vulkan.h	/^    VK_FORMAT_R64_SFLOAT = 112,$/;"	e	enum:VkFormat
VK_FORMAT_R64_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R64_SINT = 111,$/;"	e	enum:VkFormat
VK_FORMAT_R64_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R64_UINT = 110,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SINT = 42,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SNORM = 38,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SRGB	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SRGB = 43,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SSCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SSCALED = 40,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8A8_UINT = 41,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8A8_UNORM = 37,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_USCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8A8_USCALED = 39,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8_SINT = 28,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8_SNORM = 24,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SRGB	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8_SRGB = 29,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SSCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8_SSCALED = 26,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8_UINT = 27,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8_UNORM = 23,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_USCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8B8_USCALED = 25,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8_SINT = 21,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8_SNORM = 17,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SRGB	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8_SRGB = 22,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SSCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8_SSCALED = 19,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8_UINT = 20,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8_UNORM = 16,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_USCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R8G8_USCALED = 18,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SINT	deps/glad/vulkan.h	/^    VK_FORMAT_R8_SINT = 14,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R8_SNORM = 10,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SRGB	deps/glad/vulkan.h	/^    VK_FORMAT_R8_SRGB = 15,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SSCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R8_SSCALED = 12,$/;"	e	enum:VkFormat
VK_FORMAT_R8_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_R8_UINT = 13,$/;"	e	enum:VkFormat
VK_FORMAT_R8_UNORM	deps/glad/vulkan.h	/^    VK_FORMAT_R8_UNORM = 9,$/;"	e	enum:VkFormat
VK_FORMAT_R8_USCALED	deps/glad/vulkan.h	/^    VK_FORMAT_R8_USCALED = 11,$/;"	e	enum:VkFormat
VK_FORMAT_S8_UINT	deps/glad/vulkan.h	/^    VK_FORMAT_S8_UINT = 127,$/;"	e	enum:VkFormat
VK_FORMAT_UNDEFINED	deps/glad/vulkan.h	/^    VK_FORMAT_UNDEFINED = 0,$/;"	e	enum:VkFormat
VK_FORMAT_X8_D24_UNORM_PACK32	deps/glad/vulkan.h	/^    VK_FORMAT_X8_D24_UNORM_PACK32 = 125,$/;"	e	enum:VkFormat
VK_FRONT_FACE_CLOCKWISE	deps/glad/vulkan.h	/^    VK_FRONT_FACE_CLOCKWISE = 1$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_COUNTER_CLOCKWISE	deps/glad/vulkan.h	/^    VK_FRONT_FACE_COUNTER_CLOCKWISE = 0,$/;"	e	enum:VkFrontFace
VK_HEADER_VERSION	deps/glad/vulkan.h	/^#define VK_HEADER_VERSION /;"	d
VK_IMAGE_ASPECT_COLOR_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_ASPECT_COLOR_BIT = 1,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_DEPTH_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_ASPECT_DEPTH_BIT = 2,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_METADATA_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_ASPECT_METADATA_BIT = 8,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_PLANE_0_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_ASPECT_PLANE_0_BIT = 16,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_PLANE_1_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_ASPECT_PLANE_1_BIT = 32,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_PLANE_2_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_ASPECT_PLANE_2_BIT = 64$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_STENCIL_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_ASPECT_STENCIL_BIT = 4,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT = 32,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_ALIAS_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_ALIAS_BIT = 1024,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT = 128,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT = 16,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_DISJOINT_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_DISJOINT_BIT = 512$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_EXTENDED_USAGE_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_EXTENDED_USAGE_BIT = 256,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT = 8,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_PROTECTED_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_PROTECTED_BIT = 2048,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_SPARSE_ALIASED_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_SPARSE_ALIASED_BIT = 4,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_SPARSE_BINDING_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_SPARSE_BINDING_BIT = 1,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT = 2,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT = 64,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = 2,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = 1000117001,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = 1000117000,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = 4,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_GENERAL	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_GENERAL = 1,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_PREINITIALIZED	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_PREINITIALIZED = 8,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_PRESENT_SRC_KHR	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_PRESENT_SRC_KHR = 1000001002$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = 5,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = 7,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = 6,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_UNDEFINED	deps/glad/vulkan.h	/^    VK_IMAGE_LAYOUT_UNDEFINED = 0,$/;"	e	enum:VkImageLayout
VK_IMAGE_TILING_LINEAR	deps/glad/vulkan.h	/^    VK_IMAGE_TILING_LINEAR = 1$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_OPTIMAL	deps/glad/vulkan.h	/^    VK_IMAGE_TILING_OPTIMAL = 0,$/;"	e	enum:VkImageTiling
VK_IMAGE_TYPE_1D	deps/glad/vulkan.h	/^    VK_IMAGE_TYPE_1D = 0,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_2D	deps/glad/vulkan.h	/^    VK_IMAGE_TYPE_2D = 1,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_3D	deps/glad/vulkan.h	/^    VK_IMAGE_TYPE_3D = 2$/;"	e	enum:VkImageType
VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT = 16,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT = 32,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT = 128$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_SAMPLED_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_USAGE_SAMPLED_BIT = 4,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_STORAGE_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_USAGE_STORAGE_BIT = 8,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_TRANSFER_DST_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_USAGE_TRANSFER_DST_BIT = 2,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_TRANSFER_SRC_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_USAGE_TRANSFER_SRC_BIT = 1,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT	deps/glad/vulkan.h	/^    VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT = 64,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_VIEW_TYPE_1D	deps/glad/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_1D = 0,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_1D_ARRAY	deps/glad/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_1D_ARRAY = 4,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_2D	deps/glad/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_2D = 1,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_2D_ARRAY	deps/glad/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_2D_ARRAY = 5,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_3D	deps/glad/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_3D = 2,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_CUBE	deps/glad/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_CUBE = 3,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_CUBE_ARRAY	deps/glad/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_CUBE_ARRAY = 6$/;"	e	enum:VkImageViewType
VK_INCOMPLETE	deps/glad/vulkan.h	/^    VK_INCOMPLETE = 5,$/;"	e	enum:VkResult
VK_INCOMPLETE	src/internal.h	/^    VK_INCOMPLETE = 5,$/;"	e	enum:VkResult
VK_INDEX_TYPE_UINT16	deps/glad/vulkan.h	/^    VK_INDEX_TYPE_UINT16 = 0,$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_UINT32	deps/glad/vulkan.h	/^    VK_INDEX_TYPE_UINT32 = 1$/;"	e	enum:VkIndexType
VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE	deps/glad/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE = 0$/;"	e	enum:VkInternalAllocationType
VK_KHR_SURFACE_EXTENSION_NAME	deps/glad/vulkan.h	/^#define VK_KHR_SURFACE_EXTENSION_NAME /;"	d
VK_KHR_SURFACE_SPEC_VERSION	deps/glad/vulkan.h	/^#define VK_KHR_SURFACE_SPEC_VERSION /;"	d
VK_KHR_SWAPCHAIN_EXTENSION_NAME	deps/glad/vulkan.h	/^#define VK_KHR_SWAPCHAIN_EXTENSION_NAME /;"	d
VK_KHR_SWAPCHAIN_SPEC_VERSION	deps/glad/vulkan.h	/^#define VK_KHR_SWAPCHAIN_SPEC_VERSION /;"	d
VK_KHR_surface	deps/glad/vulkan.h	/^#define VK_KHR_surface /;"	d
VK_KHR_swapchain	deps/glad/vulkan.h	/^#define VK_KHR_swapchain /;"	d
VK_LOD_CLAMP_NONE	deps/glad/vulkan.h	/^#define VK_LOD_CLAMP_NONE /;"	d
VK_LOGIC_OP_AND	deps/glad/vulkan.h	/^    VK_LOGIC_OP_AND = 1,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_AND_INVERTED	deps/glad/vulkan.h	/^    VK_LOGIC_OP_AND_INVERTED = 4,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_AND_REVERSE	deps/glad/vulkan.h	/^    VK_LOGIC_OP_AND_REVERSE = 2,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_CLEAR	deps/glad/vulkan.h	/^    VK_LOGIC_OP_CLEAR = 0,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_COPY	deps/glad/vulkan.h	/^    VK_LOGIC_OP_COPY = 3,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_COPY_INVERTED	deps/glad/vulkan.h	/^    VK_LOGIC_OP_COPY_INVERTED = 12,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_EQUIVALENT	deps/glad/vulkan.h	/^    VK_LOGIC_OP_EQUIVALENT = 9,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_INVERT	deps/glad/vulkan.h	/^    VK_LOGIC_OP_INVERT = 10,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_NAND	deps/glad/vulkan.h	/^    VK_LOGIC_OP_NAND = 14,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_NOR	deps/glad/vulkan.h	/^    VK_LOGIC_OP_NOR = 8,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_NO_OP	deps/glad/vulkan.h	/^    VK_LOGIC_OP_NO_OP = 5,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_OR	deps/glad/vulkan.h	/^    VK_LOGIC_OP_OR = 7,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_OR_INVERTED	deps/glad/vulkan.h	/^    VK_LOGIC_OP_OR_INVERTED = 13,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_OR_REVERSE	deps/glad/vulkan.h	/^    VK_LOGIC_OP_OR_REVERSE = 11,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_SET	deps/glad/vulkan.h	/^    VK_LOGIC_OP_SET = 15$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_XOR	deps/glad/vulkan.h	/^    VK_LOGIC_OP_XOR = 6,$/;"	e	enum:VkLogicOp
VK_LUID_SIZE	deps/glad/vulkan.h	/^#define VK_LUID_SIZE /;"	d
VK_MAKE_VERSION	deps/glad/vulkan.h	/^#define VK_MAKE_VERSION(/;"	d
VK_MAX_DESCRIPTION_SIZE	deps/glad/vulkan.h	/^#define VK_MAX_DESCRIPTION_SIZE /;"	d
VK_MAX_DEVICE_GROUP_SIZE	deps/glad/vulkan.h	/^#define VK_MAX_DEVICE_GROUP_SIZE /;"	d
VK_MAX_EXTENSION_NAME_SIZE	deps/glad/vulkan.h	/^#define VK_MAX_EXTENSION_NAME_SIZE /;"	d
VK_MAX_MEMORY_HEAPS	deps/glad/vulkan.h	/^#define VK_MAX_MEMORY_HEAPS /;"	d
VK_MAX_MEMORY_TYPES	deps/glad/vulkan.h	/^#define VK_MAX_MEMORY_TYPES /;"	d
VK_MAX_PHYSICAL_DEVICE_NAME_SIZE	deps/glad/vulkan.h	/^#define VK_MAX_PHYSICAL_DEVICE_NAME_SIZE /;"	d
VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT	deps/glad/vulkan.h	/^    VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT = 1$/;"	e	enum:VkMemoryAllocateFlagBits
VK_MEMORY_HEAP_DEVICE_LOCAL_BIT	deps/glad/vulkan.h	/^    VK_MEMORY_HEAP_DEVICE_LOCAL_BIT = 1,$/;"	e	enum:VkMemoryHeapFlagBits
VK_MEMORY_HEAP_MULTI_INSTANCE_BIT	deps/glad/vulkan.h	/^    VK_MEMORY_HEAP_MULTI_INSTANCE_BIT = 2$/;"	e	enum:VkMemoryHeapFlagBits
VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT	deps/glad/vulkan.h	/^    VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT = 1,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_HOST_CACHED_BIT	deps/glad/vulkan.h	/^    VK_MEMORY_PROPERTY_HOST_CACHED_BIT = 8,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_HOST_COHERENT_BIT	deps/glad/vulkan.h	/^    VK_MEMORY_PROPERTY_HOST_COHERENT_BIT = 4,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT	deps/glad/vulkan.h	/^    VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT = 2,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT	deps/glad/vulkan.h	/^    VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT = 16,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_PROTECTED_BIT	deps/glad/vulkan.h	/^    VK_MEMORY_PROPERTY_PROTECTED_BIT = 32$/;"	e	enum:VkMemoryPropertyFlagBits
VK_NOT_READY	deps/glad/vulkan.h	/^    VK_NOT_READY = 1,$/;"	e	enum:VkResult
VK_NOT_READY	src/internal.h	/^    VK_NOT_READY = 1,$/;"	e	enum:VkResult
VK_NULL_HANDLE	deps/glad/vulkan.h	/^#define VK_NULL_HANDLE /;"	d
VK_NULL_HANDLE	src/internal.h	/^#define VK_NULL_HANDLE /;"	d
VK_OBJECT_TYPE_BUFFER	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_BUFFER = 9,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_BUFFER_VIEW	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_BUFFER_VIEW = 13,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_COMMAND_BUFFER	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_COMMAND_BUFFER = 6,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_COMMAND_POOL	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_COMMAND_POOL = 25,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT = 1000011000$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_DESCRIPTOR_POOL	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_DESCRIPTOR_POOL = 22,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_DESCRIPTOR_SET	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_DESCRIPTOR_SET = 23,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT = 20,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE = 1000085000,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_DEVICE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_DEVICE = 3,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_DEVICE_MEMORY	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_DEVICE_MEMORY = 8,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_EVENT	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_EVENT = 11,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_FENCE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_FENCE = 7,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_FRAMEBUFFER	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_FRAMEBUFFER = 24,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_IMAGE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_IMAGE = 10,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_IMAGE_VIEW	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_IMAGE_VIEW = 14,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_INSTANCE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_INSTANCE = 1,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_PHYSICAL_DEVICE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_PHYSICAL_DEVICE = 2,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_PIPELINE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_PIPELINE = 19,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_PIPELINE_CACHE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_PIPELINE_CACHE = 16,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_PIPELINE_LAYOUT	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_PIPELINE_LAYOUT = 17,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_QUERY_POOL	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_QUERY_POOL = 12,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_QUEUE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_QUEUE = 4,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_RENDER_PASS	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_RENDER_PASS = 18,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_SAMPLER	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_SAMPLER = 21,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION = 1000156000,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_SEMAPHORE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_SEMAPHORE = 5,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_SHADER_MODULE	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_SHADER_MODULE = 15,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_SURFACE_KHR	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_SURFACE_KHR = 1000000000,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_SWAPCHAIN_KHR	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_SWAPCHAIN_KHR = 1000001000,$/;"	e	enum:VkObjectType
VK_OBJECT_TYPE_UNKNOWN	deps/glad/vulkan.h	/^    VK_OBJECT_TYPE_UNKNOWN = 0,$/;"	e	enum:VkObjectType
VK_PAD_A	deps/mingw/xinput.h	/^#define VK_PAD_A /;"	d
VK_PAD_B	deps/mingw/xinput.h	/^#define VK_PAD_B /;"	d
VK_PAD_BACK	deps/mingw/xinput.h	/^#define VK_PAD_BACK /;"	d
VK_PAD_DPAD_DOWN	deps/mingw/xinput.h	/^#define VK_PAD_DPAD_DOWN /;"	d
VK_PAD_DPAD_LEFT	deps/mingw/xinput.h	/^#define VK_PAD_DPAD_LEFT /;"	d
VK_PAD_DPAD_RIGHT	deps/mingw/xinput.h	/^#define VK_PAD_DPAD_RIGHT /;"	d
VK_PAD_DPAD_UP	deps/mingw/xinput.h	/^#define VK_PAD_DPAD_UP /;"	d
VK_PAD_LSHOULDER	deps/mingw/xinput.h	/^#define VK_PAD_LSHOULDER /;"	d
VK_PAD_LTHUMB_DOWN	deps/mingw/xinput.h	/^#define VK_PAD_LTHUMB_DOWN /;"	d
VK_PAD_LTHUMB_DOWNLEFT	deps/mingw/xinput.h	/^#define VK_PAD_LTHUMB_DOWNLEFT /;"	d
VK_PAD_LTHUMB_DOWNRIGHT	deps/mingw/xinput.h	/^#define VK_PAD_LTHUMB_DOWNRIGHT /;"	d
VK_PAD_LTHUMB_LEFT	deps/mingw/xinput.h	/^#define VK_PAD_LTHUMB_LEFT /;"	d
VK_PAD_LTHUMB_PRESS	deps/mingw/xinput.h	/^#define VK_PAD_LTHUMB_PRESS /;"	d
VK_PAD_LTHUMB_RIGHT	deps/mingw/xinput.h	/^#define VK_PAD_LTHUMB_RIGHT /;"	d
VK_PAD_LTHUMB_UP	deps/mingw/xinput.h	/^#define VK_PAD_LTHUMB_UP /;"	d
VK_PAD_LTHUMB_UPLEFT	deps/mingw/xinput.h	/^#define VK_PAD_LTHUMB_UPLEFT /;"	d
VK_PAD_LTHUMB_UPRIGHT	deps/mingw/xinput.h	/^#define VK_PAD_LTHUMB_UPRIGHT /;"	d
VK_PAD_LTRIGGER	deps/mingw/xinput.h	/^#define VK_PAD_LTRIGGER /;"	d
VK_PAD_RSHOULDER	deps/mingw/xinput.h	/^#define VK_PAD_RSHOULDER /;"	d
VK_PAD_RTHUMB_DOWN	deps/mingw/xinput.h	/^#define VK_PAD_RTHUMB_DOWN /;"	d
VK_PAD_RTHUMB_DOWNLEFT	deps/mingw/xinput.h	/^#define VK_PAD_RTHUMB_DOWNLEFT /;"	d
VK_PAD_RTHUMB_DOWNRIGHT	deps/mingw/xinput.h	/^#define VK_PAD_RTHUMB_DOWNRIGHT /;"	d
VK_PAD_RTHUMB_LEFT	deps/mingw/xinput.h	/^#define VK_PAD_RTHUMB_LEFT /;"	d
VK_PAD_RTHUMB_PRESS	deps/mingw/xinput.h	/^#define VK_PAD_RTHUMB_PRESS /;"	d
VK_PAD_RTHUMB_RIGHT	deps/mingw/xinput.h	/^#define VK_PAD_RTHUMB_RIGHT /;"	d
VK_PAD_RTHUMB_UP	deps/mingw/xinput.h	/^#define VK_PAD_RTHUMB_UP /;"	d
VK_PAD_RTHUMB_UPLEFT	deps/mingw/xinput.h	/^#define VK_PAD_RTHUMB_UPLEFT /;"	d
VK_PAD_RTHUMB_UPRIGHT	deps/mingw/xinput.h	/^#define VK_PAD_RTHUMB_UPRIGHT /;"	d
VK_PAD_RTRIGGER	deps/mingw/xinput.h	/^#define VK_PAD_RTRIGGER /;"	d
VK_PAD_START	deps/mingw/xinput.h	/^#define VK_PAD_START /;"	d
VK_PAD_X	deps/mingw/xinput.h	/^#define VK_PAD_X /;"	d
VK_PAD_Y	deps/mingw/xinput.h	/^#define VK_PAD_Y /;"	d
VK_PEER_MEMORY_FEATURE_COPY_DST_BIT	deps/glad/vulkan.h	/^    VK_PEER_MEMORY_FEATURE_COPY_DST_BIT = 2,$/;"	e	enum:VkPeerMemoryFeatureFlagBits
VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT	deps/glad/vulkan.h	/^    VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT = 1,$/;"	e	enum:VkPeerMemoryFeatureFlagBits
VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT	deps/glad/vulkan.h	/^    VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT = 8$/;"	e	enum:VkPeerMemoryFeatureFlagBits
VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT	deps/glad/vulkan.h	/^    VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT = 4,$/;"	e	enum:VkPeerMemoryFeatureFlagBits
VK_PHYSICAL_DEVICE_TYPE_CPU	deps/glad/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_CPU = 4$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU	deps/glad/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU = 2,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU	deps/glad/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU = 1,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_OTHER	deps/glad/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_OTHER = 0,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU	deps/glad/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU = 3,$/;"	e	enum:VkPhysicalDeviceType
VK_PIPELINE_BIND_POINT_COMPUTE	deps/glad/vulkan.h	/^    VK_PIPELINE_BIND_POINT_COMPUTE = 1$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_GRAPHICS	deps/glad/vulkan.h	/^    VK_PIPELINE_BIND_POINT_GRAPHICS = 0,$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_CACHE_HEADER_VERSION_ONE	deps/glad/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_ONE = 1$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT = 2,$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_CREATE_DERIVATIVE_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_CREATE_DERIVATIVE_BIT = 4,$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT = 1,$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_CREATE_DISPATCH_BASE	deps/glad/vulkan.h	/^    VK_PIPELINE_CREATE_DISPATCH_BASE = 16$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT = 8,$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_STAGE_ALL_COMMANDS_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_ALL_COMMANDS_BIT = 65536$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT = 32768,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = 8192,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = 1024,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT = 2048,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT = 2,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = 256,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = 128,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = 64,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_HOST_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_HOST_BIT = 16384,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = 512,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = 16,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = 32,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT = 1,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TRANSFER_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_TRANSFER_BIT = 4096,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_VERTEX_INPUT_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_VERTEX_INPUT_BIT = 4,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_VERTEX_SHADER_BIT	deps/glad/vulkan.h	/^    VK_PIPELINE_STAGE_VERTEX_SHADER_BIT = 8,$/;"	e	enum:VkPipelineStageFlagBits
VK_PLATFORM_H_	deps/glad/vk_platform.h	/^#define VK_PLATFORM_H_$/;"	d
VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES	deps/glad/vulkan.h	/^    VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES = 0,$/;"	e	enum:VkPointClippingBehavior
VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY	deps/glad/vulkan.h	/^    VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY = 1$/;"	e	enum:VkPointClippingBehavior
VK_POLYGON_MODE_FILL	deps/glad/vulkan.h	/^    VK_POLYGON_MODE_FILL = 0,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_LINE	deps/glad/vulkan.h	/^    VK_POLYGON_MODE_LINE = 1,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_POINT	deps/glad/vulkan.h	/^    VK_POLYGON_MODE_POINT = 2$/;"	e	enum:VkPolygonMode
VK_PRESENT_MODE_FIFO_KHR	deps/glad/vulkan.h	/^    VK_PRESENT_MODE_FIFO_KHR = 2,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_FIFO_RELAXED_KHR	deps/glad/vulkan.h	/^    VK_PRESENT_MODE_FIFO_RELAXED_KHR = 3$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_IMMEDIATE_KHR	deps/glad/vulkan.h	/^    VK_PRESENT_MODE_IMMEDIATE_KHR = 0,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_MAILBOX_KHR	deps/glad/vulkan.h	/^    VK_PRESENT_MODE_MAILBOX_KHR = 1,$/;"	e	enum:VkPresentModeKHR
VK_PRIMITIVE_TOPOLOGY_LINE_LIST	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_LIST = 1,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY = 6,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_STRIP	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP = 2,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY = 7,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_PATCH_LIST	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_PATCH_LIST = 10$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_POINT_LIST	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_POINT_LIST = 0,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN = 5,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST = 3,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY = 8,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP = 4,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY	deps/glad/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY = 9,$/;"	e	enum:VkPrimitiveTopology
VK_QUERY_CONTROL_PRECISE_BIT	deps/glad/vulkan.h	/^    VK_QUERY_CONTROL_PRECISE_BIT = 1$/;"	e	enum:VkQueryControlFlagBits
VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT = 32,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT = 64,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT = 1024$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT = 128,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT = 8,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT = 16,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT = 2,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT = 1,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT = 256,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT = 512,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT	deps/glad/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT = 4,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_RESULT_64_BIT	deps/glad/vulkan.h	/^    VK_QUERY_RESULT_64_BIT = 1,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_PARTIAL_BIT	deps/glad/vulkan.h	/^    VK_QUERY_RESULT_PARTIAL_BIT = 8$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_WAIT_BIT	deps/glad/vulkan.h	/^    VK_QUERY_RESULT_WAIT_BIT = 2,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_WITH_AVAILABILITY_BIT	deps/glad/vulkan.h	/^    VK_QUERY_RESULT_WITH_AVAILABILITY_BIT = 4,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_TYPE_OCCLUSION	deps/glad/vulkan.h	/^    VK_QUERY_TYPE_OCCLUSION = 0,$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_PIPELINE_STATISTICS	deps/glad/vulkan.h	/^    VK_QUERY_TYPE_PIPELINE_STATISTICS = 1,$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_TIMESTAMP	deps/glad/vulkan.h	/^    VK_QUERY_TYPE_TIMESTAMP = 2$/;"	e	enum:VkQueryType
VK_QUEUE_COMPUTE_BIT	deps/glad/vulkan.h	/^    VK_QUEUE_COMPUTE_BIT = 2,$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_FAMILY_EXTERNAL	deps/glad/vulkan.h	/^#define VK_QUEUE_FAMILY_EXTERNAL /;"	d
VK_QUEUE_FAMILY_IGNORED	deps/glad/vulkan.h	/^#define VK_QUEUE_FAMILY_IGNORED /;"	d
VK_QUEUE_GRAPHICS_BIT	deps/glad/vulkan.h	/^    VK_QUEUE_GRAPHICS_BIT = 1,$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_PROTECTED_BIT	deps/glad/vulkan.h	/^    VK_QUEUE_PROTECTED_BIT = 16$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_SPARSE_BINDING_BIT	deps/glad/vulkan.h	/^    VK_QUEUE_SPARSE_BINDING_BIT = 8,$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_TRANSFER_BIT	deps/glad/vulkan.h	/^    VK_QUEUE_TRANSFER_BIT = 4,$/;"	e	enum:VkQueueFlagBits
VK_REMAINING_ARRAY_LAYERS	deps/glad/vulkan.h	/^#define VK_REMAINING_ARRAY_LAYERS /;"	d
VK_REMAINING_MIP_LEVELS	deps/glad/vulkan.h	/^#define VK_REMAINING_MIP_LEVELS /;"	d
VK_RESULT_MAX_ENUM	src/internal.h	/^    VK_RESULT_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkResult
VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER	deps/glad/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER = 3$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE	deps/glad/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE = 2,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT	deps/glad/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT = 1,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_REPEAT	deps/glad/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_REPEAT = 0,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_MIPMAP_MODE_LINEAR	deps/glad/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_LINEAR = 1$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_NEAREST	deps/glad/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_NEAREST = 0,$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY	deps/glad/vulkan.h	/^    VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY = 0,$/;"	e	enum:VkSamplerYcbcrModelConversion
VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020	deps/glad/vulkan.h	/^    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020 = 4$/;"	e	enum:VkSamplerYcbcrModelConversion
VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601	deps/glad/vulkan.h	/^    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601 = 3,$/;"	e	enum:VkSamplerYcbcrModelConversion
VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709	deps/glad/vulkan.h	/^    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709 = 2,$/;"	e	enum:VkSamplerYcbcrModelConversion
VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY	deps/glad/vulkan.h	/^    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY = 1,$/;"	e	enum:VkSamplerYcbcrModelConversion
VK_SAMPLER_YCBCR_RANGE_ITU_FULL	deps/glad/vulkan.h	/^    VK_SAMPLER_YCBCR_RANGE_ITU_FULL = 0,$/;"	e	enum:VkSamplerYcbcrRange
VK_SAMPLER_YCBCR_RANGE_ITU_NARROW	deps/glad/vulkan.h	/^    VK_SAMPLER_YCBCR_RANGE_ITU_NARROW = 1$/;"	e	enum:VkSamplerYcbcrRange
VK_SAMPLE_COUNT_16_BIT	deps/glad/vulkan.h	/^    VK_SAMPLE_COUNT_16_BIT = 16,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_1_BIT	deps/glad/vulkan.h	/^    VK_SAMPLE_COUNT_1_BIT = 1,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_2_BIT	deps/glad/vulkan.h	/^    VK_SAMPLE_COUNT_2_BIT = 2,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_32_BIT	deps/glad/vulkan.h	/^    VK_SAMPLE_COUNT_32_BIT = 32,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_4_BIT	deps/glad/vulkan.h	/^    VK_SAMPLE_COUNT_4_BIT = 4,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_64_BIT	deps/glad/vulkan.h	/^    VK_SAMPLE_COUNT_64_BIT = 64$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_8_BIT	deps/glad/vulkan.h	/^    VK_SAMPLE_COUNT_8_BIT = 8,$/;"	e	enum:VkSampleCountFlagBits
VK_SEMAPHORE_IMPORT_TEMPORARY_BIT	deps/glad/vulkan.h	/^    VK_SEMAPHORE_IMPORT_TEMPORARY_BIT = 1$/;"	e	enum:VkSemaphoreImportFlagBits
VK_SHADER_STAGE_ALL	deps/glad/vulkan.h	/^    VK_SHADER_STAGE_ALL = 0x7FFFFFFF$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_ALL_GRAPHICS	deps/glad/vulkan.h	/^    VK_SHADER_STAGE_ALL_GRAPHICS = 0x0000001F,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_COMPUTE_BIT	deps/glad/vulkan.h	/^    VK_SHADER_STAGE_COMPUTE_BIT = 32,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_FRAGMENT_BIT	deps/glad/vulkan.h	/^    VK_SHADER_STAGE_FRAGMENT_BIT = 16,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_GEOMETRY_BIT	deps/glad/vulkan.h	/^    VK_SHADER_STAGE_GEOMETRY_BIT = 8,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT	deps/glad/vulkan.h	/^    VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT = 2,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT	deps/glad/vulkan.h	/^    VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = 4,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_VERTEX_BIT	deps/glad/vulkan.h	/^    VK_SHADER_STAGE_VERTEX_BIT = 1,$/;"	e	enum:VkShaderStageFlagBits
VK_SHARING_MODE_CONCURRENT	deps/glad/vulkan.h	/^    VK_SHARING_MODE_CONCURRENT = 1$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_EXCLUSIVE	deps/glad/vulkan.h	/^    VK_SHARING_MODE_EXCLUSIVE = 0,$/;"	e	enum:VkSharingMode
VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT	deps/glad/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT = 2,$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT	deps/glad/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT = 4$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT	deps/glad/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT = 1,$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_MEMORY_BIND_METADATA_BIT	deps/glad/vulkan.h	/^    VK_SPARSE_MEMORY_BIND_METADATA_BIT = 1$/;"	e	enum:VkSparseMemoryBindFlagBits
VK_STENCIL_FACE_BACK_BIT	deps/glad/vulkan.h	/^    VK_STENCIL_FACE_BACK_BIT = 2,$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_FACE_FRONT_BIT	deps/glad/vulkan.h	/^    VK_STENCIL_FACE_FRONT_BIT = 1,$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_FRONT_AND_BACK	deps/glad/vulkan.h	/^    VK_STENCIL_FRONT_AND_BACK = 0x00000003$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_OP_DECREMENT_AND_CLAMP	deps/glad/vulkan.h	/^    VK_STENCIL_OP_DECREMENT_AND_CLAMP = 4,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_DECREMENT_AND_WRAP	deps/glad/vulkan.h	/^    VK_STENCIL_OP_DECREMENT_AND_WRAP = 7$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_INCREMENT_AND_CLAMP	deps/glad/vulkan.h	/^    VK_STENCIL_OP_INCREMENT_AND_CLAMP = 3,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_INCREMENT_AND_WRAP	deps/glad/vulkan.h	/^    VK_STENCIL_OP_INCREMENT_AND_WRAP = 6,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_INVERT	deps/glad/vulkan.h	/^    VK_STENCIL_OP_INVERT = 5,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_KEEP	deps/glad/vulkan.h	/^    VK_STENCIL_OP_KEEP = 0,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_REPLACE	deps/glad/vulkan.h	/^    VK_STENCIL_OP_REPLACE = 2,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_ZERO	deps/glad/vulkan.h	/^    VK_STENCIL_OP_ZERO = 1,$/;"	e	enum:VkStencilOp
VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR = 1000060010,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_APPLICATION_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_APPLICATION_INFO = 0,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO = 1000060013,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO = 1000157000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO = 1000060014,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO = 1000157001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR = 1000060009,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO = 1000156002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BIND_SPARSE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BIND_SPARSE_INFO = 7,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO = 12,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER = 44,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 = 1000146000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO = 13,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO = 40,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO = 42,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO = 41,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO = 39,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO = 29,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET = 36,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = 1000011000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CRE/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO = 33,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO = 34,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = 32,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT = 1000168001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO = 1000085000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO = 3,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO = 1000060006,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO = 1000060004,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO = 1000070001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR = 1000060007,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR = 1000060011,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO = 1000060003,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO = 1000060005,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR = 1000060012,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO = 2,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 = 1000145003,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EVENT_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_EVENT_CREATE_INFO = 10,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO = 1000113000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO = 1000072002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO = 1000077000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES = 1000071003,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES = 1000112001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES = 1000071001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO = 1000072000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO = 1000072001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES = 1000076001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_FENCE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_FENCE_CREATE_INFO = 8,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 = 1000059002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO = 37,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO = 28,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO = 14,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 = 1000059003,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER = 45,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 = 1000146001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO = 1000156003,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 = 1000146002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR = 1000060008,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO = 15,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO = 1000117002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO = 1,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO = 48,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = 47,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK	src/internal.h	/^    VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK = 1000123000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE = 6,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MAX_ENUM	src/internal.h	/^    VK_STRUCTURE_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO = 1000060000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO = 5,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MEMORY_BARRIER	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_MEMORY_BARRIER = 46,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO = 1000127001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS = 1000127000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 = 1000146003,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT	src/internal.h	/^    VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT = 1000217000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES = 1000083000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO = 1000071002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO = 1000112000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO = 1000071000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO = 1000076000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 = 1000059000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES = 1000070000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES = 1000071004,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 = 1000059004,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES = 1000168000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 = 1000059006,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES = 1000053001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES = 1000053002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES = 1000117000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 = 1000059001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES = 1000145001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES = 1000145002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES = 1000156004,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES = 1000063000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES = VK_STRUCTURE_TYPE_PHYSICA/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 = 1000059008,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES = 1000094000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES = 1000120000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEV/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO = 17,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = 26,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = 25,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO = 27,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = 20,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO = 30,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = 24,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = 23,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO = 18,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO = 1000117003,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO = 21,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = 19,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO = 22,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PRESENT_INFO_KHR	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PRESENT_INFO_KHR = 1000001001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO = 1000145000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO = 11,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 = 1000059005,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO = 43,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO = 38,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO = 1000117001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO = 1000053000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO = 31,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO = 1000156000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES = 1000156005,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO = 1000156001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO = 9,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO = 16,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 = 1000059007,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 = 1000146004,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SUBMIT_INFO	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_SUBMIT_INFO = 4,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR = 1000001000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR	src/internal.h	/^    VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR = 1000006000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR	src/internal.h	/^    VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR = 1000009000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET	deps/glad/vulkan.h	/^    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET = 35,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR	src/internal.h	/^    VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = 1000005000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR	src/internal.h	/^    VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR = 1000004000,$/;"	e	enum:VkStructureType
VK_SUBGROUP_FEATURE_ARITHMETIC_BIT	deps/glad/vulkan.h	/^    VK_SUBGROUP_FEATURE_ARITHMETIC_BIT = 4,$/;"	e	enum:VkSubgroupFeatureFlagBits
VK_SUBGROUP_FEATURE_BALLOT_BIT	deps/glad/vulkan.h	/^    VK_SUBGROUP_FEATURE_BALLOT_BIT = 8,$/;"	e	enum:VkSubgroupFeatureFlagBits
VK_SUBGROUP_FEATURE_BASIC_BIT	deps/glad/vulkan.h	/^    VK_SUBGROUP_FEATURE_BASIC_BIT = 1,$/;"	e	enum:VkSubgroupFeatureFlagBits
VK_SUBGROUP_FEATURE_CLUSTERED_BIT	deps/glad/vulkan.h	/^    VK_SUBGROUP_FEATURE_CLUSTERED_BIT = 64,$/;"	e	enum:VkSubgroupFeatureFlagBits
VK_SUBGROUP_FEATURE_QUAD_BIT	deps/glad/vulkan.h	/^    VK_SUBGROUP_FEATURE_QUAD_BIT = 128$/;"	e	enum:VkSubgroupFeatureFlagBits
VK_SUBGROUP_FEATURE_SHUFFLE_BIT	deps/glad/vulkan.h	/^    VK_SUBGROUP_FEATURE_SHUFFLE_BIT = 16,$/;"	e	enum:VkSubgroupFeatureFlagBits
VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT	deps/glad/vulkan.h	/^    VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT = 32,$/;"	e	enum:VkSubgroupFeatureFlagBits
VK_SUBGROUP_FEATURE_VOTE_BIT	deps/glad/vulkan.h	/^    VK_SUBGROUP_FEATURE_VOTE_BIT = 2,$/;"	e	enum:VkSubgroupFeatureFlagBits
VK_SUBOPTIMAL_KHR	deps/glad/vulkan.h	/^    VK_SUBOPTIMAL_KHR = 1000001003,$/;"	e	enum:VkResult
VK_SUBOPTIMAL_KHR	src/internal.h	/^    VK_SUBOPTIMAL_KHR = 1000001003,$/;"	e	enum:VkResult
VK_SUBPASS_CONTENTS_INLINE	deps/glad/vulkan.h	/^    VK_SUBPASS_CONTENTS_INLINE = 0,$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS	deps/glad/vulkan.h	/^    VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS = 1$/;"	e	enum:VkSubpassContents
VK_SUBPASS_EXTERNAL	deps/glad/vulkan.h	/^#define VK_SUBPASS_EXTERNAL /;"	d
VK_SUCCESS	deps/glad/vulkan.h	/^    VK_SUCCESS = 0,$/;"	e	enum:VkResult
VK_SUCCESS	src/internal.h	/^    VK_SUCCESS = 0,$/;"	e	enum:VkResult
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR	deps/glad/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR = 16,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR	deps/glad/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR = 64,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR	deps/glad/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR = 128,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR	deps/glad/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR = 32,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR	deps/glad/vulkan.h	/^    VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR = 1,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR	deps/glad/vulkan.h	/^    VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR = 256$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR	deps/glad/vulkan.h	/^    VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR = 4,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR	deps/glad/vulkan.h	/^    VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR = 8,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR	deps/glad/vulkan.h	/^    VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR = 2,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR	deps/glad/vulkan.h	/^    VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR = 2$/;"	e	enum:VkSwapchainCreateFlagBitsKHR
VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR	deps/glad/vulkan.h	/^    VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR = 1,$/;"	e	enum:VkSwapchainCreateFlagBitsKHR
VK_SYSTEM_ALLOCATION_SCOPE_CACHE	deps/glad/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_CACHE = 2,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_COMMAND	deps/glad/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_COMMAND = 0,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_DEVICE	deps/glad/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_DEVICE = 3,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE	deps/glad/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE = 4$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_OBJECT	deps/glad/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_OBJECT = 1,$/;"	e	enum:VkSystemAllocationScope
VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT	deps/glad/vulkan.h	/^    VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT = 1$/;"	e	enum:VkTessellationDomainOrigin
VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT	deps/glad/vulkan.h	/^    VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT = 0,$/;"	e	enum:VkTessellationDomainOrigin
VK_TIMEOUT	deps/glad/vulkan.h	/^    VK_TIMEOUT = 2,$/;"	e	enum:VkResult
VK_TIMEOUT	src/internal.h	/^    VK_TIMEOUT = 2,$/;"	e	enum:VkResult
VK_TRUE	deps/glad/vulkan.h	/^#define VK_TRUE /;"	d
VK_UUID_SIZE	deps/glad/vulkan.h	/^#define VK_UUID_SIZE /;"	d
VK_VENDOR_ID_KAZAN	deps/glad/vulkan.h	/^    VK_VENDOR_ID_KAZAN = 0x10003$/;"	e	enum:VkVendorId
VK_VENDOR_ID_VIV	deps/glad/vulkan.h	/^    VK_VENDOR_ID_VIV = 0x10001,$/;"	e	enum:VkVendorId
VK_VENDOR_ID_VSI	deps/glad/vulkan.h	/^    VK_VENDOR_ID_VSI = 0x10002,$/;"	e	enum:VkVendorId
VK_VERSION_1_0	deps/glad/vulkan.h	/^#define VK_VERSION_1_0 /;"	d
VK_VERSION_1_1	deps/glad/vulkan.h	/^#define VK_VERSION_1_1 /;"	d
VK_VERSION_MAJOR	deps/glad/vulkan.h	/^#define VK_VERSION_MAJOR(/;"	d
VK_VERSION_MINOR	deps/glad/vulkan.h	/^#define VK_VERSION_MINOR(/;"	d
VK_VERSION_PATCH	deps/glad/vulkan.h	/^#define VK_VERSION_PATCH(/;"	d
VK_VERTEX_INPUT_RATE_INSTANCE	deps/glad/vulkan.h	/^    VK_VERTEX_INPUT_RATE_INSTANCE = 1$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_VERTEX	deps/glad/vulkan.h	/^    VK_VERTEX_INPUT_RATE_VERTEX = 0,$/;"	e	enum:VkVertexInputRate
VK_WHOLE_SIZE	deps/glad/vulkan.h	/^#define VK_WHOLE_SIZE /;"	d
VS_VERSION_INFO	src/glfw.rc.in	/^VS_VERSION_INFO VERSIONINFO$/;"	v
VULKAN_CORE_H_	deps/glad/vulkan.h	/^#define VULKAN_CORE_H_ /;"	d
VULKAN_H_	deps/glad/vulkan.h	/^#define VULKAN_H_ /;"	d
Vec3	examples/particles.c	/^} Vec3;$/;"	t	typeref:struct:__anon62203f4b0108	file:
Vertex	examples/particles.c	/^} Vertex;$/;"	t	typeref:struct:__anon62203f4b0208	file:
Vertex	examples/triangle-opengl.c	/^typedef struct Vertex$/;"	s	file:
Vertex	examples/triangle-opengl.c	/^} Vertex;$/;"	t	typeref:struct:Vertex	file:
Vertex	examples/wave.c	/^struct Vertex$/;"	s	file:
Vibration	deps/mingw/xinput.h	/^    XINPUT_VIBRATION Vibration;$/;"	m	struct:_XINPUT_CAPABILITIES	typeref:typename:XINPUT_VIBRATION
VirtualKey	deps/mingw/xinput.h	/^    WORD VirtualKey;$/;"	m	struct:_XINPUT_KEYSTROKE	typeref:typename:WORD
VkAccessFlagBits	deps/glad/vulkan.h	/^typedef enum VkAccessFlagBits {$/;"	g
VkAccessFlagBits	deps/glad/vulkan.h	/^} VkAccessFlagBits;$/;"	t	typeref:enum:VkAccessFlagBits
VkAccessFlags	deps/glad/vulkan.h	/^typedef VkFlags VkAccessFlags;$/;"	t	typeref:typename:VkFlags
VkAcquireNextImageInfoKHR	deps/glad/vulkan.h	/^typedef struct VkAcquireNextImageInfoKHR {$/;"	s
VkAcquireNextImageInfoKHR	deps/glad/vulkan.h	/^} VkAcquireNextImageInfoKHR;$/;"	t	typeref:struct:VkAcquireNextImageInfoKHR
VkAllocationCallbacks	deps/glad/vulkan.h	/^typedef struct VkAllocationCallbacks {$/;"	s
VkAllocationCallbacks	deps/glad/vulkan.h	/^} VkAllocationCallbacks;$/;"	t	typeref:struct:VkAllocationCallbacks
VkAllocationCallbacks	src/internal.h	/^typedef struct VkAllocationCallbacks VkAllocationCallbacks;$/;"	t	typeref:struct:VkAllocationCallbacks
VkApplicationInfo	deps/glad/vulkan.h	/^typedef struct VkApplicationInfo {$/;"	s
VkApplicationInfo	deps/glad/vulkan.h	/^} VkApplicationInfo;$/;"	t	typeref:struct:VkApplicationInfo
VkAttachmentDescription	deps/glad/vulkan.h	/^typedef struct VkAttachmentDescription {$/;"	s
VkAttachmentDescription	deps/glad/vulkan.h	/^} VkAttachmentDescription;$/;"	t	typeref:struct:VkAttachmentDescription
VkAttachmentDescriptionFlagBits	deps/glad/vulkan.h	/^typedef enum VkAttachmentDescriptionFlagBits {$/;"	g
VkAttachmentDescriptionFlagBits	deps/glad/vulkan.h	/^} VkAttachmentDescriptionFlagBits;$/;"	t	typeref:enum:VkAttachmentDescriptionFlagBits
VkAttachmentDescriptionFlags	deps/glad/vulkan.h	/^typedef VkFlags VkAttachmentDescriptionFlags;$/;"	t	typeref:typename:VkFlags
VkAttachmentLoadOp	deps/glad/vulkan.h	/^typedef enum VkAttachmentLoadOp {$/;"	g
VkAttachmentLoadOp	deps/glad/vulkan.h	/^} VkAttachmentLoadOp;$/;"	t	typeref:enum:VkAttachmentLoadOp
VkAttachmentReference	deps/glad/vulkan.h	/^typedef struct VkAttachmentReference {$/;"	s
VkAttachmentReference	deps/glad/vulkan.h	/^} VkAttachmentReference;$/;"	t	typeref:struct:VkAttachmentReference
VkAttachmentStoreOp	deps/glad/vulkan.h	/^typedef enum VkAttachmentStoreOp {$/;"	g
VkAttachmentStoreOp	deps/glad/vulkan.h	/^} VkAttachmentStoreOp;$/;"	t	typeref:enum:VkAttachmentStoreOp
VkBaseInStructure	deps/glad/vulkan.h	/^typedef struct VkBaseInStructure {$/;"	s
VkBaseInStructure	deps/glad/vulkan.h	/^} VkBaseInStructure;$/;"	t	typeref:struct:VkBaseInStructure
VkBaseOutStructure	deps/glad/vulkan.h	/^typedef struct VkBaseOutStructure {$/;"	s
VkBaseOutStructure	deps/glad/vulkan.h	/^} VkBaseOutStructure;$/;"	t	typeref:struct:VkBaseOutStructure
VkBindBufferMemoryDeviceGroupInfo	deps/glad/vulkan.h	/^typedef struct VkBindBufferMemoryDeviceGroupInfo {$/;"	s
VkBindBufferMemoryDeviceGroupInfo	deps/glad/vulkan.h	/^} VkBindBufferMemoryDeviceGroupInfo;$/;"	t	typeref:struct:VkBindBufferMemoryDeviceGroupInfo
VkBindBufferMemoryInfo	deps/glad/vulkan.h	/^typedef struct VkBindBufferMemoryInfo {$/;"	s
VkBindBufferMemoryInfo	deps/glad/vulkan.h	/^} VkBindBufferMemoryInfo;$/;"	t	typeref:struct:VkBindBufferMemoryInfo
VkBindImageMemoryDeviceGroupInfo	deps/glad/vulkan.h	/^typedef struct VkBindImageMemoryDeviceGroupInfo {$/;"	s
VkBindImageMemoryDeviceGroupInfo	deps/glad/vulkan.h	/^} VkBindImageMemoryDeviceGroupInfo;$/;"	t	typeref:struct:VkBindImageMemoryDeviceGroupInfo
VkBindImageMemoryInfo	deps/glad/vulkan.h	/^typedef struct VkBindImageMemoryInfo {$/;"	s
VkBindImageMemoryInfo	deps/glad/vulkan.h	/^} VkBindImageMemoryInfo;$/;"	t	typeref:struct:VkBindImageMemoryInfo
VkBindImageMemorySwapchainInfoKHR	deps/glad/vulkan.h	/^typedef struct VkBindImageMemorySwapchainInfoKHR {$/;"	s
VkBindImageMemorySwapchainInfoKHR	deps/glad/vulkan.h	/^} VkBindImageMemorySwapchainInfoKHR;$/;"	t	typeref:struct:VkBindImageMemorySwapchainInfoKHR
VkBindImagePlaneMemoryInfo	deps/glad/vulkan.h	/^typedef struct VkBindImagePlaneMemoryInfo {$/;"	s
VkBindImagePlaneMemoryInfo	deps/glad/vulkan.h	/^} VkBindImagePlaneMemoryInfo;$/;"	t	typeref:struct:VkBindImagePlaneMemoryInfo
VkBindSparseInfo	deps/glad/vulkan.h	/^typedef struct VkBindSparseInfo {$/;"	s
VkBindSparseInfo	deps/glad/vulkan.h	/^} VkBindSparseInfo;$/;"	t	typeref:struct:VkBindSparseInfo
VkBlendFactor	deps/glad/vulkan.h	/^typedef enum VkBlendFactor {$/;"	g
VkBlendFactor	deps/glad/vulkan.h	/^} VkBlendFactor;$/;"	t	typeref:enum:VkBlendFactor
VkBlendOp	deps/glad/vulkan.h	/^typedef enum VkBlendOp {$/;"	g
VkBlendOp	deps/glad/vulkan.h	/^} VkBlendOp;$/;"	t	typeref:enum:VkBlendOp
VkBool32	deps/glad/vulkan.h	/^typedef uint32_t VkBool32;$/;"	t	typeref:typename:uint32_t
VkBool32	src/internal.h	/^typedef uint32_t VkBool32;$/;"	t	typeref:typename:uint32_t
VkBorderColor	deps/glad/vulkan.h	/^typedef enum VkBorderColor {$/;"	g
VkBorderColor	deps/glad/vulkan.h	/^} VkBorderColor;$/;"	t	typeref:enum:VkBorderColor
VkBufferCopy	deps/glad/vulkan.h	/^typedef struct VkBufferCopy {$/;"	s
VkBufferCopy	deps/glad/vulkan.h	/^} VkBufferCopy;$/;"	t	typeref:struct:VkBufferCopy
VkBufferCreateFlagBits	deps/glad/vulkan.h	/^typedef enum VkBufferCreateFlagBits {$/;"	g
VkBufferCreateFlagBits	deps/glad/vulkan.h	/^} VkBufferCreateFlagBits;$/;"	t	typeref:enum:VkBufferCreateFlagBits
VkBufferCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkBufferCreateFlags;$/;"	t	typeref:typename:VkFlags
VkBufferCreateInfo	deps/glad/vulkan.h	/^typedef struct VkBufferCreateInfo {$/;"	s
VkBufferCreateInfo	deps/glad/vulkan.h	/^} VkBufferCreateInfo;$/;"	t	typeref:struct:VkBufferCreateInfo
VkBufferImageCopy	deps/glad/vulkan.h	/^typedef struct VkBufferImageCopy {$/;"	s
VkBufferImageCopy	deps/glad/vulkan.h	/^} VkBufferImageCopy;$/;"	t	typeref:struct:VkBufferImageCopy
VkBufferMemoryBarrier	deps/glad/vulkan.h	/^typedef struct VkBufferMemoryBarrier {$/;"	s
VkBufferMemoryBarrier	deps/glad/vulkan.h	/^} VkBufferMemoryBarrier;$/;"	t	typeref:struct:VkBufferMemoryBarrier
VkBufferMemoryRequirementsInfo2	deps/glad/vulkan.h	/^typedef struct VkBufferMemoryRequirementsInfo2 {$/;"	s
VkBufferMemoryRequirementsInfo2	deps/glad/vulkan.h	/^} VkBufferMemoryRequirementsInfo2;$/;"	t	typeref:struct:VkBufferMemoryRequirementsInfo2
VkBufferUsageFlagBits	deps/glad/vulkan.h	/^typedef enum VkBufferUsageFlagBits {$/;"	g
VkBufferUsageFlagBits	deps/glad/vulkan.h	/^} VkBufferUsageFlagBits;$/;"	t	typeref:enum:VkBufferUsageFlagBits
VkBufferUsageFlags	deps/glad/vulkan.h	/^typedef VkFlags VkBufferUsageFlags;$/;"	t	typeref:typename:VkFlags
VkBufferViewCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkBufferViewCreateFlags;$/;"	t	typeref:typename:VkFlags
VkBufferViewCreateInfo	deps/glad/vulkan.h	/^typedef struct VkBufferViewCreateInfo {$/;"	s
VkBufferViewCreateInfo	deps/glad/vulkan.h	/^} VkBufferViewCreateInfo;$/;"	t	typeref:struct:VkBufferViewCreateInfo
VkChromaLocation	deps/glad/vulkan.h	/^typedef enum VkChromaLocation {$/;"	g
VkChromaLocation	deps/glad/vulkan.h	/^} VkChromaLocation;$/;"	t	typeref:enum:VkChromaLocation
VkClearAttachment	deps/glad/vulkan.h	/^typedef struct VkClearAttachment {$/;"	s
VkClearAttachment	deps/glad/vulkan.h	/^} VkClearAttachment;$/;"	t	typeref:struct:VkClearAttachment
VkClearColorValue	deps/glad/vulkan.h	/^typedef union VkClearColorValue {$/;"	u
VkClearColorValue	deps/glad/vulkan.h	/^} VkClearColorValue;$/;"	t	typeref:union:VkClearColorValue
VkClearDepthStencilValue	deps/glad/vulkan.h	/^typedef struct VkClearDepthStencilValue {$/;"	s
VkClearDepthStencilValue	deps/glad/vulkan.h	/^} VkClearDepthStencilValue;$/;"	t	typeref:struct:VkClearDepthStencilValue
VkClearRect	deps/glad/vulkan.h	/^typedef struct VkClearRect {$/;"	s
VkClearRect	deps/glad/vulkan.h	/^} VkClearRect;$/;"	t	typeref:struct:VkClearRect
VkClearValue	deps/glad/vulkan.h	/^typedef union VkClearValue {$/;"	u
VkClearValue	deps/glad/vulkan.h	/^} VkClearValue;$/;"	t	typeref:union:VkClearValue
VkColorComponentFlagBits	deps/glad/vulkan.h	/^typedef enum VkColorComponentFlagBits {$/;"	g
VkColorComponentFlagBits	deps/glad/vulkan.h	/^} VkColorComponentFlagBits;$/;"	t	typeref:enum:VkColorComponentFlagBits
VkColorComponentFlags	deps/glad/vulkan.h	/^typedef VkFlags VkColorComponentFlags;$/;"	t	typeref:typename:VkFlags
VkColorSpaceKHR	deps/glad/vulkan.h	/^typedef enum VkColorSpaceKHR {$/;"	g
VkColorSpaceKHR	deps/glad/vulkan.h	/^} VkColorSpaceKHR;$/;"	t	typeref:enum:VkColorSpaceKHR
VkCommandBufferAllocateInfo	deps/glad/vulkan.h	/^typedef struct VkCommandBufferAllocateInfo {$/;"	s
VkCommandBufferAllocateInfo	deps/glad/vulkan.h	/^} VkCommandBufferAllocateInfo;$/;"	t	typeref:struct:VkCommandBufferAllocateInfo
VkCommandBufferBeginInfo	deps/glad/vulkan.h	/^typedef struct VkCommandBufferBeginInfo {$/;"	s
VkCommandBufferBeginInfo	deps/glad/vulkan.h	/^} VkCommandBufferBeginInfo;$/;"	t	typeref:struct:VkCommandBufferBeginInfo
VkCommandBufferInheritanceInfo	deps/glad/vulkan.h	/^typedef struct VkCommandBufferInheritanceInfo {$/;"	s
VkCommandBufferInheritanceInfo	deps/glad/vulkan.h	/^} VkCommandBufferInheritanceInfo;$/;"	t	typeref:struct:VkCommandBufferInheritanceInfo
VkCommandBufferLevel	deps/glad/vulkan.h	/^typedef enum VkCommandBufferLevel {$/;"	g
VkCommandBufferLevel	deps/glad/vulkan.h	/^} VkCommandBufferLevel;$/;"	t	typeref:enum:VkCommandBufferLevel
VkCommandBufferResetFlagBits	deps/glad/vulkan.h	/^typedef enum VkCommandBufferResetFlagBits {$/;"	g
VkCommandBufferResetFlagBits	deps/glad/vulkan.h	/^} VkCommandBufferResetFlagBits;$/;"	t	typeref:enum:VkCommandBufferResetFlagBits
VkCommandBufferResetFlags	deps/glad/vulkan.h	/^typedef VkFlags VkCommandBufferResetFlags;$/;"	t	typeref:typename:VkFlags
VkCommandBufferUsageFlagBits	deps/glad/vulkan.h	/^typedef enum VkCommandBufferUsageFlagBits {$/;"	g
VkCommandBufferUsageFlagBits	deps/glad/vulkan.h	/^} VkCommandBufferUsageFlagBits;$/;"	t	typeref:enum:VkCommandBufferUsageFlagBits
VkCommandBufferUsageFlags	deps/glad/vulkan.h	/^typedef VkFlags VkCommandBufferUsageFlags;$/;"	t	typeref:typename:VkFlags
VkCommandPoolCreateFlagBits	deps/glad/vulkan.h	/^typedef enum VkCommandPoolCreateFlagBits {$/;"	g
VkCommandPoolCreateFlagBits	deps/glad/vulkan.h	/^} VkCommandPoolCreateFlagBits;$/;"	t	typeref:enum:VkCommandPoolCreateFlagBits
VkCommandPoolCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkCommandPoolCreateFlags;$/;"	t	typeref:typename:VkFlags
VkCommandPoolCreateInfo	deps/glad/vulkan.h	/^typedef struct VkCommandPoolCreateInfo {$/;"	s
VkCommandPoolCreateInfo	deps/glad/vulkan.h	/^} VkCommandPoolCreateInfo;$/;"	t	typeref:struct:VkCommandPoolCreateInfo
VkCommandPoolResetFlagBits	deps/glad/vulkan.h	/^typedef enum VkCommandPoolResetFlagBits {$/;"	g
VkCommandPoolResetFlagBits	deps/glad/vulkan.h	/^} VkCommandPoolResetFlagBits;$/;"	t	typeref:enum:VkCommandPoolResetFlagBits
VkCommandPoolResetFlags	deps/glad/vulkan.h	/^typedef VkFlags VkCommandPoolResetFlags;$/;"	t	typeref:typename:VkFlags
VkCommandPoolTrimFlags	deps/glad/vulkan.h	/^typedef VkFlags VkCommandPoolTrimFlags;$/;"	t	typeref:typename:VkFlags
VkCompareOp	deps/glad/vulkan.h	/^typedef enum VkCompareOp {$/;"	g
VkCompareOp	deps/glad/vulkan.h	/^} VkCompareOp;$/;"	t	typeref:enum:VkCompareOp
VkComponentMapping	deps/glad/vulkan.h	/^typedef struct VkComponentMapping {$/;"	s
VkComponentMapping	deps/glad/vulkan.h	/^} VkComponentMapping;$/;"	t	typeref:struct:VkComponentMapping
VkComponentSwizzle	deps/glad/vulkan.h	/^typedef enum VkComponentSwizzle {$/;"	g
VkComponentSwizzle	deps/glad/vulkan.h	/^} VkComponentSwizzle;$/;"	t	typeref:enum:VkComponentSwizzle
VkCompositeAlphaFlagBitsKHR	deps/glad/vulkan.h	/^typedef enum VkCompositeAlphaFlagBitsKHR {$/;"	g
VkCompositeAlphaFlagBitsKHR	deps/glad/vulkan.h	/^} VkCompositeAlphaFlagBitsKHR;$/;"	t	typeref:enum:VkCompositeAlphaFlagBitsKHR
VkCompositeAlphaFlagsKHR	deps/glad/vulkan.h	/^typedef VkFlags VkCompositeAlphaFlagsKHR;$/;"	t	typeref:typename:VkFlags
VkComputePipelineCreateInfo	deps/glad/vulkan.h	/^typedef struct VkComputePipelineCreateInfo {$/;"	s
VkComputePipelineCreateInfo	deps/glad/vulkan.h	/^} VkComputePipelineCreateInfo;$/;"	t	typeref:struct:VkComputePipelineCreateInfo
VkCopyDescriptorSet	deps/glad/vulkan.h	/^typedef struct VkCopyDescriptorSet {$/;"	s
VkCopyDescriptorSet	deps/glad/vulkan.h	/^} VkCopyDescriptorSet;$/;"	t	typeref:struct:VkCopyDescriptorSet
VkCullModeFlagBits	deps/glad/vulkan.h	/^typedef enum VkCullModeFlagBits {$/;"	g
VkCullModeFlagBits	deps/glad/vulkan.h	/^} VkCullModeFlagBits;$/;"	t	typeref:enum:VkCullModeFlagBits
VkCullModeFlags	deps/glad/vulkan.h	/^typedef VkFlags VkCullModeFlags;$/;"	t	typeref:typename:VkFlags
VkDebugReportCallbackCreateInfoEXT	deps/glad/vulkan.h	/^typedef struct VkDebugReportCallbackCreateInfoEXT {$/;"	s
VkDebugReportCallbackCreateInfoEXT	deps/glad/vulkan.h	/^} VkDebugReportCallbackCreateInfoEXT;$/;"	t	typeref:struct:VkDebugReportCallbackCreateInfoEXT
VkDebugReportFlagBitsEXT	deps/glad/vulkan.h	/^typedef enum VkDebugReportFlagBitsEXT {$/;"	g
VkDebugReportFlagBitsEXT	deps/glad/vulkan.h	/^} VkDebugReportFlagBitsEXT;$/;"	t	typeref:enum:VkDebugReportFlagBitsEXT
VkDebugReportFlagsEXT	deps/glad/vulkan.h	/^typedef VkFlags VkDebugReportFlagsEXT;$/;"	t	typeref:typename:VkFlags
VkDebugReportObjectTypeEXT	deps/glad/vulkan.h	/^typedef enum VkDebugReportObjectTypeEXT {$/;"	g
VkDebugReportObjectTypeEXT	deps/glad/vulkan.h	/^} VkDebugReportObjectTypeEXT;$/;"	t	typeref:enum:VkDebugReportObjectTypeEXT
VkDependencyFlagBits	deps/glad/vulkan.h	/^typedef enum VkDependencyFlagBits {$/;"	g
VkDependencyFlagBits	deps/glad/vulkan.h	/^} VkDependencyFlagBits;$/;"	t	typeref:enum:VkDependencyFlagBits
VkDependencyFlags	deps/glad/vulkan.h	/^typedef VkFlags VkDependencyFlags;$/;"	t	typeref:typename:VkFlags
VkDescriptorBufferInfo	deps/glad/vulkan.h	/^typedef struct VkDescriptorBufferInfo {$/;"	s
VkDescriptorBufferInfo	deps/glad/vulkan.h	/^} VkDescriptorBufferInfo;$/;"	t	typeref:struct:VkDescriptorBufferInfo
VkDescriptorImageInfo	deps/glad/vulkan.h	/^typedef struct VkDescriptorImageInfo {$/;"	s
VkDescriptorImageInfo	deps/glad/vulkan.h	/^} VkDescriptorImageInfo;$/;"	t	typeref:struct:VkDescriptorImageInfo
VkDescriptorPoolCreateFlagBits	deps/glad/vulkan.h	/^typedef enum VkDescriptorPoolCreateFlagBits {$/;"	g
VkDescriptorPoolCreateFlagBits	deps/glad/vulkan.h	/^} VkDescriptorPoolCreateFlagBits;$/;"	t	typeref:enum:VkDescriptorPoolCreateFlagBits
VkDescriptorPoolCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkDescriptorPoolCreateFlags;$/;"	t	typeref:typename:VkFlags
VkDescriptorPoolCreateInfo	deps/glad/vulkan.h	/^typedef struct VkDescriptorPoolCreateInfo {$/;"	s
VkDescriptorPoolCreateInfo	deps/glad/vulkan.h	/^} VkDescriptorPoolCreateInfo;$/;"	t	typeref:struct:VkDescriptorPoolCreateInfo
VkDescriptorPoolResetFlags	deps/glad/vulkan.h	/^typedef VkFlags VkDescriptorPoolResetFlags;$/;"	t	typeref:typename:VkFlags
VkDescriptorPoolSize	deps/glad/vulkan.h	/^typedef struct VkDescriptorPoolSize {$/;"	s
VkDescriptorPoolSize	deps/glad/vulkan.h	/^} VkDescriptorPoolSize;$/;"	t	typeref:struct:VkDescriptorPoolSize
VkDescriptorSetAllocateInfo	deps/glad/vulkan.h	/^typedef struct VkDescriptorSetAllocateInfo {$/;"	s
VkDescriptorSetAllocateInfo	deps/glad/vulkan.h	/^} VkDescriptorSetAllocateInfo;$/;"	t	typeref:struct:VkDescriptorSetAllocateInfo
VkDescriptorSetLayoutBinding	deps/glad/vulkan.h	/^typedef struct VkDescriptorSetLayoutBinding {$/;"	s
VkDescriptorSetLayoutBinding	deps/glad/vulkan.h	/^} VkDescriptorSetLayoutBinding;$/;"	t	typeref:struct:VkDescriptorSetLayoutBinding
VkDescriptorSetLayoutCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkDescriptorSetLayoutCreateFlags;$/;"	t	typeref:typename:VkFlags
VkDescriptorSetLayoutCreateInfo	deps/glad/vulkan.h	/^typedef struct VkDescriptorSetLayoutCreateInfo {$/;"	s
VkDescriptorSetLayoutCreateInfo	deps/glad/vulkan.h	/^} VkDescriptorSetLayoutCreateInfo;$/;"	t	typeref:struct:VkDescriptorSetLayoutCreateInfo
VkDescriptorSetLayoutSupport	deps/glad/vulkan.h	/^typedef struct VkDescriptorSetLayoutSupport {$/;"	s
VkDescriptorSetLayoutSupport	deps/glad/vulkan.h	/^} VkDescriptorSetLayoutSupport;$/;"	t	typeref:struct:VkDescriptorSetLayoutSupport
VkDescriptorType	deps/glad/vulkan.h	/^typedef enum VkDescriptorType {$/;"	g
VkDescriptorType	deps/glad/vulkan.h	/^} VkDescriptorType;$/;"	t	typeref:enum:VkDescriptorType
VkDescriptorUpdateTemplateCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkDescriptorUpdateTemplateCreateFlags;$/;"	t	typeref:typename:VkFlags
VkDescriptorUpdateTemplateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkDescriptorUpdateTemplateCreateInfo {$/;"	s
VkDescriptorUpdateTemplateCreateInfo	deps/glad/vulkan.h	/^} VkDescriptorUpdateTemplateCreateInfo;$/;"	t	typeref:struct:VkDescriptorUpdateTemplateCreateInfo
VkDescriptorUpdateTemplateEntry	deps/glad/vulkan.h	/^typedef struct VkDescriptorUpdateTemplateEntry {$/;"	s
VkDescriptorUpdateTemplateEntry	deps/glad/vulkan.h	/^} VkDescriptorUpdateTemplateEntry;$/;"	t	typeref:struct:VkDescriptorUpdateTemplateEntry
VkDescriptorUpdateTemplateType	deps/glad/vulkan.h	/^typedef enum VkDescriptorUpdateTemplateType {$/;"	g
VkDescriptorUpdateTemplateType	deps/glad/vulkan.h	/^} VkDescriptorUpdateTemplateType;$/;"	t	typeref:enum:VkDescriptorUpdateTemplateType
VkDeviceCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkDeviceCreateFlags;$/;"	t	typeref:typename:VkFlags
VkDeviceCreateInfo	deps/glad/vulkan.h	/^typedef struct VkDeviceCreateInfo {$/;"	s
VkDeviceCreateInfo	deps/glad/vulkan.h	/^} VkDeviceCreateInfo;$/;"	t	typeref:struct:VkDeviceCreateInfo
VkDeviceGroupBindSparseInfo	deps/glad/vulkan.h	/^typedef struct VkDeviceGroupBindSparseInfo {$/;"	s
VkDeviceGroupBindSparseInfo	deps/glad/vulkan.h	/^} VkDeviceGroupBindSparseInfo;$/;"	t	typeref:struct:VkDeviceGroupBindSparseInfo
VkDeviceGroupCommandBufferBeginInfo	deps/glad/vulkan.h	/^typedef struct VkDeviceGroupCommandBufferBeginInfo {$/;"	s
VkDeviceGroupCommandBufferBeginInfo	deps/glad/vulkan.h	/^} VkDeviceGroupCommandBufferBeginInfo;$/;"	t	typeref:struct:VkDeviceGroupCommandBufferBeginInfo
VkDeviceGroupDeviceCreateInfo	deps/glad/vulkan.h	/^typedef struct VkDeviceGroupDeviceCreateInfo {$/;"	s
VkDeviceGroupDeviceCreateInfo	deps/glad/vulkan.h	/^} VkDeviceGroupDeviceCreateInfo;$/;"	t	typeref:struct:VkDeviceGroupDeviceCreateInfo
VkDeviceGroupPresentCapabilitiesKHR	deps/glad/vulkan.h	/^typedef struct VkDeviceGroupPresentCapabilitiesKHR {$/;"	s
VkDeviceGroupPresentCapabilitiesKHR	deps/glad/vulkan.h	/^} VkDeviceGroupPresentCapabilitiesKHR;$/;"	t	typeref:struct:VkDeviceGroupPresentCapabilitiesKHR
VkDeviceGroupPresentInfoKHR	deps/glad/vulkan.h	/^typedef struct VkDeviceGroupPresentInfoKHR {$/;"	s
VkDeviceGroupPresentInfoKHR	deps/glad/vulkan.h	/^} VkDeviceGroupPresentInfoKHR;$/;"	t	typeref:struct:VkDeviceGroupPresentInfoKHR
VkDeviceGroupPresentModeFlagBitsKHR	deps/glad/vulkan.h	/^typedef enum VkDeviceGroupPresentModeFlagBitsKHR {$/;"	g
VkDeviceGroupPresentModeFlagBitsKHR	deps/glad/vulkan.h	/^} VkDeviceGroupPresentModeFlagBitsKHR;$/;"	t	typeref:enum:VkDeviceGroupPresentModeFlagBitsKHR
VkDeviceGroupPresentModeFlagsKHR	deps/glad/vulkan.h	/^typedef VkFlags VkDeviceGroupPresentModeFlagsKHR;$/;"	t	typeref:typename:VkFlags
VkDeviceGroupRenderPassBeginInfo	deps/glad/vulkan.h	/^typedef struct VkDeviceGroupRenderPassBeginInfo {$/;"	s
VkDeviceGroupRenderPassBeginInfo	deps/glad/vulkan.h	/^} VkDeviceGroupRenderPassBeginInfo;$/;"	t	typeref:struct:VkDeviceGroupRenderPassBeginInfo
VkDeviceGroupSubmitInfo	deps/glad/vulkan.h	/^typedef struct VkDeviceGroupSubmitInfo {$/;"	s
VkDeviceGroupSubmitInfo	deps/glad/vulkan.h	/^} VkDeviceGroupSubmitInfo;$/;"	t	typeref:struct:VkDeviceGroupSubmitInfo
VkDeviceGroupSwapchainCreateInfoKHR	deps/glad/vulkan.h	/^typedef struct VkDeviceGroupSwapchainCreateInfoKHR {$/;"	s
VkDeviceGroupSwapchainCreateInfoKHR	deps/glad/vulkan.h	/^} VkDeviceGroupSwapchainCreateInfoKHR;$/;"	t	typeref:struct:VkDeviceGroupSwapchainCreateInfoKHR
VkDeviceQueueCreateFlagBits	deps/glad/vulkan.h	/^typedef enum VkDeviceQueueCreateFlagBits {$/;"	g
VkDeviceQueueCreateFlagBits	deps/glad/vulkan.h	/^} VkDeviceQueueCreateFlagBits;$/;"	t	typeref:enum:VkDeviceQueueCreateFlagBits
VkDeviceQueueCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkDeviceQueueCreateFlags;$/;"	t	typeref:typename:VkFlags
VkDeviceQueueCreateInfo	deps/glad/vulkan.h	/^typedef struct VkDeviceQueueCreateInfo {$/;"	s
VkDeviceQueueCreateInfo	deps/glad/vulkan.h	/^} VkDeviceQueueCreateInfo;$/;"	t	typeref:struct:VkDeviceQueueCreateInfo
VkDeviceQueueInfo2	deps/glad/vulkan.h	/^typedef struct VkDeviceQueueInfo2 {$/;"	s
VkDeviceQueueInfo2	deps/glad/vulkan.h	/^} VkDeviceQueueInfo2;$/;"	t	typeref:struct:VkDeviceQueueInfo2
VkDeviceSize	deps/glad/vulkan.h	/^typedef uint64_t VkDeviceSize;$/;"	t	typeref:typename:uint64_t
VkDispatchIndirectCommand	deps/glad/vulkan.h	/^typedef struct VkDispatchIndirectCommand {$/;"	s
VkDispatchIndirectCommand	deps/glad/vulkan.h	/^} VkDispatchIndirectCommand;$/;"	t	typeref:struct:VkDispatchIndirectCommand
VkDrawIndexedIndirectCommand	deps/glad/vulkan.h	/^typedef struct VkDrawIndexedIndirectCommand {$/;"	s
VkDrawIndexedIndirectCommand	deps/glad/vulkan.h	/^} VkDrawIndexedIndirectCommand;$/;"	t	typeref:struct:VkDrawIndexedIndirectCommand
VkDrawIndirectCommand	deps/glad/vulkan.h	/^typedef struct VkDrawIndirectCommand {$/;"	s
VkDrawIndirectCommand	deps/glad/vulkan.h	/^} VkDrawIndirectCommand;$/;"	t	typeref:struct:VkDrawIndirectCommand
VkDynamicState	deps/glad/vulkan.h	/^typedef enum VkDynamicState {$/;"	g
VkDynamicState	deps/glad/vulkan.h	/^} VkDynamicState;$/;"	t	typeref:enum:VkDynamicState
VkEventCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkEventCreateFlags;$/;"	t	typeref:typename:VkFlags
VkEventCreateInfo	deps/glad/vulkan.h	/^typedef struct VkEventCreateInfo {$/;"	s
VkEventCreateInfo	deps/glad/vulkan.h	/^} VkEventCreateInfo;$/;"	t	typeref:struct:VkEventCreateInfo
VkExportFenceCreateInfo	deps/glad/vulkan.h	/^typedef struct VkExportFenceCreateInfo {$/;"	s
VkExportFenceCreateInfo	deps/glad/vulkan.h	/^} VkExportFenceCreateInfo;$/;"	t	typeref:struct:VkExportFenceCreateInfo
VkExportMemoryAllocateInfo	deps/glad/vulkan.h	/^typedef struct VkExportMemoryAllocateInfo {$/;"	s
VkExportMemoryAllocateInfo	deps/glad/vulkan.h	/^} VkExportMemoryAllocateInfo;$/;"	t	typeref:struct:VkExportMemoryAllocateInfo
VkExportSemaphoreCreateInfo	deps/glad/vulkan.h	/^typedef struct VkExportSemaphoreCreateInfo {$/;"	s
VkExportSemaphoreCreateInfo	deps/glad/vulkan.h	/^} VkExportSemaphoreCreateInfo;$/;"	t	typeref:struct:VkExportSemaphoreCreateInfo
VkExtensionProperties	deps/glad/vulkan.h	/^typedef struct VkExtensionProperties {$/;"	s
VkExtensionProperties	deps/glad/vulkan.h	/^} VkExtensionProperties;$/;"	t	typeref:struct:VkExtensionProperties
VkExtensionProperties	src/internal.h	/^typedef struct VkExtensionProperties$/;"	s
VkExtensionProperties	src/internal.h	/^} VkExtensionProperties;$/;"	t	typeref:struct:VkExtensionProperties
VkExtent2D	deps/glad/vulkan.h	/^typedef struct VkExtent2D {$/;"	s
VkExtent2D	deps/glad/vulkan.h	/^} VkExtent2D;$/;"	t	typeref:struct:VkExtent2D
VkExtent3D	deps/glad/vulkan.h	/^typedef struct VkExtent3D {$/;"	s
VkExtent3D	deps/glad/vulkan.h	/^} VkExtent3D;$/;"	t	typeref:struct:VkExtent3D
VkExternalBufferProperties	deps/glad/vulkan.h	/^typedef struct VkExternalBufferProperties {$/;"	s
VkExternalBufferProperties	deps/glad/vulkan.h	/^} VkExternalBufferProperties;$/;"	t	typeref:struct:VkExternalBufferProperties
VkExternalFenceFeatureFlagBits	deps/glad/vulkan.h	/^typedef enum VkExternalFenceFeatureFlagBits {$/;"	g
VkExternalFenceFeatureFlagBits	deps/glad/vulkan.h	/^} VkExternalFenceFeatureFlagBits;$/;"	t	typeref:enum:VkExternalFenceFeatureFlagBits
VkExternalFenceFeatureFlags	deps/glad/vulkan.h	/^typedef VkFlags VkExternalFenceFeatureFlags;$/;"	t	typeref:typename:VkFlags
VkExternalFenceHandleTypeFlagBits	deps/glad/vulkan.h	/^typedef enum VkExternalFenceHandleTypeFlagBits {$/;"	g
VkExternalFenceHandleTypeFlagBits	deps/glad/vulkan.h	/^} VkExternalFenceHandleTypeFlagBits;$/;"	t	typeref:enum:VkExternalFenceHandleTypeFlagBits
VkExternalFenceHandleTypeFlags	deps/glad/vulkan.h	/^typedef VkFlags VkExternalFenceHandleTypeFlags;$/;"	t	typeref:typename:VkFlags
VkExternalFenceProperties	deps/glad/vulkan.h	/^typedef struct VkExternalFenceProperties {$/;"	s
VkExternalFenceProperties	deps/glad/vulkan.h	/^} VkExternalFenceProperties;$/;"	t	typeref:struct:VkExternalFenceProperties
VkExternalImageFormatProperties	deps/glad/vulkan.h	/^typedef struct VkExternalImageFormatProperties {$/;"	s
VkExternalImageFormatProperties	deps/glad/vulkan.h	/^} VkExternalImageFormatProperties;$/;"	t	typeref:struct:VkExternalImageFormatProperties
VkExternalMemoryBufferCreateInfo	deps/glad/vulkan.h	/^typedef struct VkExternalMemoryBufferCreateInfo {$/;"	s
VkExternalMemoryBufferCreateInfo	deps/glad/vulkan.h	/^} VkExternalMemoryBufferCreateInfo;$/;"	t	typeref:struct:VkExternalMemoryBufferCreateInfo
VkExternalMemoryFeatureFlagBits	deps/glad/vulkan.h	/^typedef enum VkExternalMemoryFeatureFlagBits {$/;"	g
VkExternalMemoryFeatureFlagBits	deps/glad/vulkan.h	/^} VkExternalMemoryFeatureFlagBits;$/;"	t	typeref:enum:VkExternalMemoryFeatureFlagBits
VkExternalMemoryFeatureFlags	deps/glad/vulkan.h	/^typedef VkFlags VkExternalMemoryFeatureFlags;$/;"	t	typeref:typename:VkFlags
VkExternalMemoryHandleTypeFlagBits	deps/glad/vulkan.h	/^typedef enum VkExternalMemoryHandleTypeFlagBits {$/;"	g
VkExternalMemoryHandleTypeFlagBits	deps/glad/vulkan.h	/^} VkExternalMemoryHandleTypeFlagBits;$/;"	t	typeref:enum:VkExternalMemoryHandleTypeFlagBits
VkExternalMemoryHandleTypeFlags	deps/glad/vulkan.h	/^typedef VkFlags VkExternalMemoryHandleTypeFlags;$/;"	t	typeref:typename:VkFlags
VkExternalMemoryImageCreateInfo	deps/glad/vulkan.h	/^typedef struct VkExternalMemoryImageCreateInfo {$/;"	s
VkExternalMemoryImageCreateInfo	deps/glad/vulkan.h	/^} VkExternalMemoryImageCreateInfo;$/;"	t	typeref:struct:VkExternalMemoryImageCreateInfo
VkExternalMemoryProperties	deps/glad/vulkan.h	/^typedef struct VkExternalMemoryProperties {$/;"	s
VkExternalMemoryProperties	deps/glad/vulkan.h	/^} VkExternalMemoryProperties;$/;"	t	typeref:struct:VkExternalMemoryProperties
VkExternalSemaphoreFeatureFlagBits	deps/glad/vulkan.h	/^typedef enum VkExternalSemaphoreFeatureFlagBits {$/;"	g
VkExternalSemaphoreFeatureFlagBits	deps/glad/vulkan.h	/^} VkExternalSemaphoreFeatureFlagBits;$/;"	t	typeref:enum:VkExternalSemaphoreFeatureFlagBits
VkExternalSemaphoreFeatureFlags	deps/glad/vulkan.h	/^typedef VkFlags VkExternalSemaphoreFeatureFlags;$/;"	t	typeref:typename:VkFlags
VkExternalSemaphoreHandleTypeFlagBits	deps/glad/vulkan.h	/^typedef enum VkExternalSemaphoreHandleTypeFlagBits {$/;"	g
VkExternalSemaphoreHandleTypeFlagBits	deps/glad/vulkan.h	/^} VkExternalSemaphoreHandleTypeFlagBits;$/;"	t	typeref:enum:VkExternalSemaphoreHandleTypeFlagBits
VkExternalSemaphoreHandleTypeFlags	deps/glad/vulkan.h	/^typedef VkFlags VkExternalSemaphoreHandleTypeFlags;$/;"	t	typeref:typename:VkFlags
VkExternalSemaphoreProperties	deps/glad/vulkan.h	/^typedef struct VkExternalSemaphoreProperties {$/;"	s
VkExternalSemaphoreProperties	deps/glad/vulkan.h	/^} VkExternalSemaphoreProperties;$/;"	t	typeref:struct:VkExternalSemaphoreProperties
VkFenceCreateFlagBits	deps/glad/vulkan.h	/^typedef enum VkFenceCreateFlagBits {$/;"	g
VkFenceCreateFlagBits	deps/glad/vulkan.h	/^} VkFenceCreateFlagBits;$/;"	t	typeref:enum:VkFenceCreateFlagBits
VkFenceCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkFenceCreateFlags;$/;"	t	typeref:typename:VkFlags
VkFenceCreateInfo	deps/glad/vulkan.h	/^typedef struct VkFenceCreateInfo {$/;"	s
VkFenceCreateInfo	deps/glad/vulkan.h	/^} VkFenceCreateInfo;$/;"	t	typeref:struct:VkFenceCreateInfo
VkFenceImportFlagBits	deps/glad/vulkan.h	/^typedef enum VkFenceImportFlagBits {$/;"	g
VkFenceImportFlagBits	deps/glad/vulkan.h	/^} VkFenceImportFlagBits;$/;"	t	typeref:enum:VkFenceImportFlagBits
VkFenceImportFlags	deps/glad/vulkan.h	/^typedef VkFlags VkFenceImportFlags;$/;"	t	typeref:typename:VkFlags
VkFilter	deps/glad/vulkan.h	/^typedef enum VkFilter {$/;"	g
VkFilter	deps/glad/vulkan.h	/^} VkFilter;$/;"	t	typeref:enum:VkFilter
VkFlags	deps/glad/vulkan.h	/^typedef uint32_t VkFlags;$/;"	t	typeref:typename:uint32_t
VkFlags	src/internal.h	/^typedef uint32_t VkFlags;$/;"	t	typeref:typename:uint32_t
VkFormat	deps/glad/vulkan.h	/^typedef enum VkFormat {$/;"	g
VkFormat	deps/glad/vulkan.h	/^} VkFormat;$/;"	t	typeref:enum:VkFormat
VkFormatFeatureFlagBits	deps/glad/vulkan.h	/^typedef enum VkFormatFeatureFlagBits {$/;"	g
VkFormatFeatureFlagBits	deps/glad/vulkan.h	/^} VkFormatFeatureFlagBits;$/;"	t	typeref:enum:VkFormatFeatureFlagBits
VkFormatFeatureFlags	deps/glad/vulkan.h	/^typedef VkFlags VkFormatFeatureFlags;$/;"	t	typeref:typename:VkFlags
VkFormatProperties	deps/glad/vulkan.h	/^typedef struct VkFormatProperties {$/;"	s
VkFormatProperties	deps/glad/vulkan.h	/^} VkFormatProperties;$/;"	t	typeref:struct:VkFormatProperties
VkFormatProperties2	deps/glad/vulkan.h	/^typedef struct VkFormatProperties2 {$/;"	s
VkFormatProperties2	deps/glad/vulkan.h	/^} VkFormatProperties2;$/;"	t	typeref:struct:VkFormatProperties2
VkFramebufferCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkFramebufferCreateFlags;$/;"	t	typeref:typename:VkFlags
VkFramebufferCreateInfo	deps/glad/vulkan.h	/^typedef struct VkFramebufferCreateInfo {$/;"	s
VkFramebufferCreateInfo	deps/glad/vulkan.h	/^} VkFramebufferCreateInfo;$/;"	t	typeref:struct:VkFramebufferCreateInfo
VkFrontFace	deps/glad/vulkan.h	/^typedef enum VkFrontFace {$/;"	g
VkFrontFace	deps/glad/vulkan.h	/^} VkFrontFace;$/;"	t	typeref:enum:VkFrontFace
VkGraphicsPipelineCreateInfo	deps/glad/vulkan.h	/^typedef struct VkGraphicsPipelineCreateInfo {$/;"	s
VkGraphicsPipelineCreateInfo	deps/glad/vulkan.h	/^} VkGraphicsPipelineCreateInfo;$/;"	t	typeref:struct:VkGraphicsPipelineCreateInfo
VkImageAspectFlagBits	deps/glad/vulkan.h	/^typedef enum VkImageAspectFlagBits {$/;"	g
VkImageAspectFlagBits	deps/glad/vulkan.h	/^} VkImageAspectFlagBits;$/;"	t	typeref:enum:VkImageAspectFlagBits
VkImageAspectFlags	deps/glad/vulkan.h	/^typedef VkFlags VkImageAspectFlags;$/;"	t	typeref:typename:VkFlags
VkImageBlit	deps/glad/vulkan.h	/^typedef struct VkImageBlit {$/;"	s
VkImageBlit	deps/glad/vulkan.h	/^} VkImageBlit;$/;"	t	typeref:struct:VkImageBlit
VkImageCopy	deps/glad/vulkan.h	/^typedef struct VkImageCopy {$/;"	s
VkImageCopy	deps/glad/vulkan.h	/^} VkImageCopy;$/;"	t	typeref:struct:VkImageCopy
VkImageCreateFlagBits	deps/glad/vulkan.h	/^typedef enum VkImageCreateFlagBits {$/;"	g
VkImageCreateFlagBits	deps/glad/vulkan.h	/^} VkImageCreateFlagBits;$/;"	t	typeref:enum:VkImageCreateFlagBits
VkImageCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkImageCreateFlags;$/;"	t	typeref:typename:VkFlags
VkImageCreateInfo	deps/glad/vulkan.h	/^typedef struct VkImageCreateInfo {$/;"	s
VkImageCreateInfo	deps/glad/vulkan.h	/^} VkImageCreateInfo;$/;"	t	typeref:struct:VkImageCreateInfo
VkImageFormatProperties	deps/glad/vulkan.h	/^typedef struct VkImageFormatProperties {$/;"	s
VkImageFormatProperties	deps/glad/vulkan.h	/^} VkImageFormatProperties;$/;"	t	typeref:struct:VkImageFormatProperties
VkImageFormatProperties2	deps/glad/vulkan.h	/^typedef struct VkImageFormatProperties2 {$/;"	s
VkImageFormatProperties2	deps/glad/vulkan.h	/^} VkImageFormatProperties2;$/;"	t	typeref:struct:VkImageFormatProperties2
VkImageLayout	deps/glad/vulkan.h	/^typedef enum VkImageLayout {$/;"	g
VkImageLayout	deps/glad/vulkan.h	/^} VkImageLayout;$/;"	t	typeref:enum:VkImageLayout
VkImageMemoryBarrier	deps/glad/vulkan.h	/^typedef struct VkImageMemoryBarrier {$/;"	s
VkImageMemoryBarrier	deps/glad/vulkan.h	/^} VkImageMemoryBarrier;$/;"	t	typeref:struct:VkImageMemoryBarrier
VkImageMemoryRequirementsInfo2	deps/glad/vulkan.h	/^typedef struct VkImageMemoryRequirementsInfo2 {$/;"	s
VkImageMemoryRequirementsInfo2	deps/glad/vulkan.h	/^} VkImageMemoryRequirementsInfo2;$/;"	t	typeref:struct:VkImageMemoryRequirementsInfo2
VkImagePlaneMemoryRequirementsInfo	deps/glad/vulkan.h	/^typedef struct VkImagePlaneMemoryRequirementsInfo {$/;"	s
VkImagePlaneMemoryRequirementsInfo	deps/glad/vulkan.h	/^} VkImagePlaneMemoryRequirementsInfo;$/;"	t	typeref:struct:VkImagePlaneMemoryRequirementsInfo
VkImageResolve	deps/glad/vulkan.h	/^typedef struct VkImageResolve {$/;"	s
VkImageResolve	deps/glad/vulkan.h	/^} VkImageResolve;$/;"	t	typeref:struct:VkImageResolve
VkImageSparseMemoryRequirementsInfo2	deps/glad/vulkan.h	/^typedef struct VkImageSparseMemoryRequirementsInfo2 {$/;"	s
VkImageSparseMemoryRequirementsInfo2	deps/glad/vulkan.h	/^} VkImageSparseMemoryRequirementsInfo2;$/;"	t	typeref:struct:VkImageSparseMemoryRequirementsInfo2
VkImageSubresource	deps/glad/vulkan.h	/^typedef struct VkImageSubresource {$/;"	s
VkImageSubresource	deps/glad/vulkan.h	/^} VkImageSubresource;$/;"	t	typeref:struct:VkImageSubresource
VkImageSubresourceLayers	deps/glad/vulkan.h	/^typedef struct VkImageSubresourceLayers {$/;"	s
VkImageSubresourceLayers	deps/glad/vulkan.h	/^} VkImageSubresourceLayers;$/;"	t	typeref:struct:VkImageSubresourceLayers
VkImageSubresourceRange	deps/glad/vulkan.h	/^typedef struct VkImageSubresourceRange {$/;"	s
VkImageSubresourceRange	deps/glad/vulkan.h	/^} VkImageSubresourceRange;$/;"	t	typeref:struct:VkImageSubresourceRange
VkImageSwapchainCreateInfoKHR	deps/glad/vulkan.h	/^typedef struct VkImageSwapchainCreateInfoKHR {$/;"	s
VkImageSwapchainCreateInfoKHR	deps/glad/vulkan.h	/^} VkImageSwapchainCreateInfoKHR;$/;"	t	typeref:struct:VkImageSwapchainCreateInfoKHR
VkImageTiling	deps/glad/vulkan.h	/^typedef enum VkImageTiling {$/;"	g
VkImageTiling	deps/glad/vulkan.h	/^} VkImageTiling;$/;"	t	typeref:enum:VkImageTiling
VkImageType	deps/glad/vulkan.h	/^typedef enum VkImageType {$/;"	g
VkImageType	deps/glad/vulkan.h	/^} VkImageType;$/;"	t	typeref:enum:VkImageType
VkImageUsageFlagBits	deps/glad/vulkan.h	/^typedef enum VkImageUsageFlagBits {$/;"	g
VkImageUsageFlagBits	deps/glad/vulkan.h	/^} VkImageUsageFlagBits;$/;"	t	typeref:enum:VkImageUsageFlagBits
VkImageUsageFlags	deps/glad/vulkan.h	/^typedef VkFlags VkImageUsageFlags;$/;"	t	typeref:typename:VkFlags
VkImageViewCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkImageViewCreateFlags;$/;"	t	typeref:typename:VkFlags
VkImageViewCreateInfo	deps/glad/vulkan.h	/^typedef struct VkImageViewCreateInfo {$/;"	s
VkImageViewCreateInfo	deps/glad/vulkan.h	/^} VkImageViewCreateInfo;$/;"	t	typeref:struct:VkImageViewCreateInfo
VkImageViewType	deps/glad/vulkan.h	/^typedef enum VkImageViewType {$/;"	g
VkImageViewType	deps/glad/vulkan.h	/^} VkImageViewType;$/;"	t	typeref:enum:VkImageViewType
VkImageViewUsageCreateInfo	deps/glad/vulkan.h	/^typedef struct VkImageViewUsageCreateInfo {$/;"	s
VkImageViewUsageCreateInfo	deps/glad/vulkan.h	/^} VkImageViewUsageCreateInfo;$/;"	t	typeref:struct:VkImageViewUsageCreateInfo
VkIndexType	deps/glad/vulkan.h	/^typedef enum VkIndexType {$/;"	g
VkIndexType	deps/glad/vulkan.h	/^} VkIndexType;$/;"	t	typeref:enum:VkIndexType
VkInputAttachmentAspectReference	deps/glad/vulkan.h	/^typedef struct VkInputAttachmentAspectReference {$/;"	s
VkInputAttachmentAspectReference	deps/glad/vulkan.h	/^} VkInputAttachmentAspectReference;$/;"	t	typeref:struct:VkInputAttachmentAspectReference
VkInstance	src/internal.h	/^typedef void* VkInstance;$/;"	t	typeref:typename:void *
VkInstanceCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkInstanceCreateFlags;$/;"	t	typeref:typename:VkFlags
VkInstanceCreateInfo	deps/glad/vulkan.h	/^typedef struct VkInstanceCreateInfo {$/;"	s
VkInstanceCreateInfo	deps/glad/vulkan.h	/^} VkInstanceCreateInfo;$/;"	t	typeref:struct:VkInstanceCreateInfo
VkInternalAllocationType	deps/glad/vulkan.h	/^typedef enum VkInternalAllocationType {$/;"	g
VkInternalAllocationType	deps/glad/vulkan.h	/^} VkInternalAllocationType;$/;"	t	typeref:enum:VkInternalAllocationType
VkLayerProperties	deps/glad/vulkan.h	/^typedef struct VkLayerProperties {$/;"	s
VkLayerProperties	deps/glad/vulkan.h	/^} VkLayerProperties;$/;"	t	typeref:struct:VkLayerProperties
VkLogicOp	deps/glad/vulkan.h	/^typedef enum VkLogicOp {$/;"	g
VkLogicOp	deps/glad/vulkan.h	/^} VkLogicOp;$/;"	t	typeref:enum:VkLogicOp
VkMacOSSurfaceCreateFlagsMVK	src/cocoa_platform.h	/^typedef VkFlags VkMacOSSurfaceCreateFlagsMVK;$/;"	t
VkMacOSSurfaceCreateInfoMVK	src/cocoa_platform.h	/^typedef struct VkMacOSSurfaceCreateInfoMVK$/;"	s
VkMacOSSurfaceCreateInfoMVK	src/cocoa_platform.h	/^} VkMacOSSurfaceCreateInfoMVK;$/;"	t	struct:VkMacOSSurfaceCreateInfoMVK
VkMappedMemoryRange	deps/glad/vulkan.h	/^typedef struct VkMappedMemoryRange {$/;"	s
VkMappedMemoryRange	deps/glad/vulkan.h	/^} VkMappedMemoryRange;$/;"	t	typeref:struct:VkMappedMemoryRange
VkMemoryAllocateFlagBits	deps/glad/vulkan.h	/^typedef enum VkMemoryAllocateFlagBits {$/;"	g
VkMemoryAllocateFlagBits	deps/glad/vulkan.h	/^} VkMemoryAllocateFlagBits;$/;"	t	typeref:enum:VkMemoryAllocateFlagBits
VkMemoryAllocateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkMemoryAllocateFlags;$/;"	t	typeref:typename:VkFlags
VkMemoryAllocateFlagsInfo	deps/glad/vulkan.h	/^typedef struct VkMemoryAllocateFlagsInfo {$/;"	s
VkMemoryAllocateFlagsInfo	deps/glad/vulkan.h	/^} VkMemoryAllocateFlagsInfo;$/;"	t	typeref:struct:VkMemoryAllocateFlagsInfo
VkMemoryAllocateInfo	deps/glad/vulkan.h	/^typedef struct VkMemoryAllocateInfo {$/;"	s
VkMemoryAllocateInfo	deps/glad/vulkan.h	/^} VkMemoryAllocateInfo;$/;"	t	typeref:struct:VkMemoryAllocateInfo
VkMemoryBarrier	deps/glad/vulkan.h	/^typedef struct VkMemoryBarrier {$/;"	s
VkMemoryBarrier	deps/glad/vulkan.h	/^} VkMemoryBarrier;$/;"	t	typeref:struct:VkMemoryBarrier
VkMemoryDedicatedAllocateInfo	deps/glad/vulkan.h	/^typedef struct VkMemoryDedicatedAllocateInfo {$/;"	s
VkMemoryDedicatedAllocateInfo	deps/glad/vulkan.h	/^} VkMemoryDedicatedAllocateInfo;$/;"	t	typeref:struct:VkMemoryDedicatedAllocateInfo
VkMemoryDedicatedRequirements	deps/glad/vulkan.h	/^typedef struct VkMemoryDedicatedRequirements {$/;"	s
VkMemoryDedicatedRequirements	deps/glad/vulkan.h	/^} VkMemoryDedicatedRequirements;$/;"	t	typeref:struct:VkMemoryDedicatedRequirements
VkMemoryHeap	deps/glad/vulkan.h	/^typedef struct VkMemoryHeap {$/;"	s
VkMemoryHeap	deps/glad/vulkan.h	/^} VkMemoryHeap;$/;"	t	typeref:struct:VkMemoryHeap
VkMemoryHeapFlagBits	deps/glad/vulkan.h	/^typedef enum VkMemoryHeapFlagBits {$/;"	g
VkMemoryHeapFlagBits	deps/glad/vulkan.h	/^} VkMemoryHeapFlagBits;$/;"	t	typeref:enum:VkMemoryHeapFlagBits
VkMemoryHeapFlags	deps/glad/vulkan.h	/^typedef VkFlags VkMemoryHeapFlags;$/;"	t	typeref:typename:VkFlags
VkMemoryMapFlags	deps/glad/vulkan.h	/^typedef VkFlags VkMemoryMapFlags;$/;"	t	typeref:typename:VkFlags
VkMemoryPropertyFlagBits	deps/glad/vulkan.h	/^typedef enum VkMemoryPropertyFlagBits {$/;"	g
VkMemoryPropertyFlagBits	deps/glad/vulkan.h	/^} VkMemoryPropertyFlagBits;$/;"	t	typeref:enum:VkMemoryPropertyFlagBits
VkMemoryPropertyFlags	deps/glad/vulkan.h	/^typedef VkFlags VkMemoryPropertyFlags;$/;"	t	typeref:typename:VkFlags
VkMemoryRequirements	deps/glad/vulkan.h	/^typedef struct VkMemoryRequirements {$/;"	s
VkMemoryRequirements	deps/glad/vulkan.h	/^} VkMemoryRequirements;$/;"	t	typeref:struct:VkMemoryRequirements
VkMemoryRequirements2	deps/glad/vulkan.h	/^typedef struct VkMemoryRequirements2 {$/;"	s
VkMemoryRequirements2	deps/glad/vulkan.h	/^} VkMemoryRequirements2;$/;"	t	typeref:struct:VkMemoryRequirements2
VkMemoryRequirements2KHR	deps/glad/vulkan.h	/^typedef struct VkMemoryRequirements2KHR  VkMemoryRequirements2KHR;$/;"	t	typeref:struct:VkMemoryRequirements2KHR
VkMemoryType	deps/glad/vulkan.h	/^typedef struct VkMemoryType {$/;"	s
VkMemoryType	deps/glad/vulkan.h	/^} VkMemoryType;$/;"	t	typeref:struct:VkMemoryType
VkMetalSurfaceCreateFlagsEXT	src/cocoa_platform.h	/^typedef VkFlags VkMetalSurfaceCreateFlagsEXT;$/;"	t
VkObjectType	deps/glad/vulkan.h	/^typedef enum VkObjectType {$/;"	g
VkObjectType	deps/glad/vulkan.h	/^} VkObjectType;$/;"	t	typeref:enum:VkObjectType
VkOffset2D	deps/glad/vulkan.h	/^typedef struct VkOffset2D {$/;"	s
VkOffset2D	deps/glad/vulkan.h	/^} VkOffset2D;$/;"	t	typeref:struct:VkOffset2D
VkOffset3D	deps/glad/vulkan.h	/^typedef struct VkOffset3D {$/;"	s
VkOffset3D	deps/glad/vulkan.h	/^} VkOffset3D;$/;"	t	typeref:struct:VkOffset3D
VkPeerMemoryFeatureFlagBits	deps/glad/vulkan.h	/^typedef enum VkPeerMemoryFeatureFlagBits {$/;"	g
VkPeerMemoryFeatureFlagBits	deps/glad/vulkan.h	/^} VkPeerMemoryFeatureFlagBits;$/;"	t	typeref:enum:VkPeerMemoryFeatureFlagBits
VkPeerMemoryFeatureFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPeerMemoryFeatureFlags;$/;"	t	typeref:typename:VkFlags
VkPhysicalDevice	src/internal.h	/^typedef void* VkPhysicalDevice;$/;"	t	typeref:typename:void *
VkPhysicalDevice16BitStorageFeatures	deps/glad/vulkan.h	/^typedef struct VkPhysicalDevice16BitStorageFeatures {$/;"	s
VkPhysicalDevice16BitStorageFeatures	deps/glad/vulkan.h	/^} VkPhysicalDevice16BitStorageFeatures;$/;"	t	typeref:struct:VkPhysicalDevice16BitStorageFeatures
VkPhysicalDeviceExternalBufferInfo	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceExternalBufferInfo {$/;"	s
VkPhysicalDeviceExternalBufferInfo	deps/glad/vulkan.h	/^} VkPhysicalDeviceExternalBufferInfo;$/;"	t	typeref:struct:VkPhysicalDeviceExternalBufferInfo
VkPhysicalDeviceExternalFenceInfo	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceExternalFenceInfo {$/;"	s
VkPhysicalDeviceExternalFenceInfo	deps/glad/vulkan.h	/^} VkPhysicalDeviceExternalFenceInfo;$/;"	t	typeref:struct:VkPhysicalDeviceExternalFenceInfo
VkPhysicalDeviceExternalImageFormatInfo	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceExternalImageFormatInfo {$/;"	s
VkPhysicalDeviceExternalImageFormatInfo	deps/glad/vulkan.h	/^} VkPhysicalDeviceExternalImageFormatInfo;$/;"	t	typeref:struct:VkPhysicalDeviceExternalImageFormatInfo
VkPhysicalDeviceExternalSemaphoreInfo	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceExternalSemaphoreInfo {$/;"	s
VkPhysicalDeviceExternalSemaphoreInfo	deps/glad/vulkan.h	/^} VkPhysicalDeviceExternalSemaphoreInfo;$/;"	t	typeref:struct:VkPhysicalDeviceExternalSemaphoreInfo
VkPhysicalDeviceFeatures	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceFeatures {$/;"	s
VkPhysicalDeviceFeatures	deps/glad/vulkan.h	/^} VkPhysicalDeviceFeatures;$/;"	t	typeref:struct:VkPhysicalDeviceFeatures
VkPhysicalDeviceFeatures2	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceFeatures2 {$/;"	s
VkPhysicalDeviceFeatures2	deps/glad/vulkan.h	/^} VkPhysicalDeviceFeatures2;$/;"	t	typeref:struct:VkPhysicalDeviceFeatures2
VkPhysicalDeviceGroupProperties	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceGroupProperties {$/;"	s
VkPhysicalDeviceGroupProperties	deps/glad/vulkan.h	/^} VkPhysicalDeviceGroupProperties;$/;"	t	typeref:struct:VkPhysicalDeviceGroupProperties
VkPhysicalDeviceIDProperties	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceIDProperties {$/;"	s
VkPhysicalDeviceIDProperties	deps/glad/vulkan.h	/^} VkPhysicalDeviceIDProperties;$/;"	t	typeref:struct:VkPhysicalDeviceIDProperties
VkPhysicalDeviceImageFormatInfo2	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceImageFormatInfo2 {$/;"	s
VkPhysicalDeviceImageFormatInfo2	deps/glad/vulkan.h	/^} VkPhysicalDeviceImageFormatInfo2;$/;"	t	typeref:struct:VkPhysicalDeviceImageFormatInfo2
VkPhysicalDeviceLimits	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceLimits {$/;"	s
VkPhysicalDeviceLimits	deps/glad/vulkan.h	/^} VkPhysicalDeviceLimits;$/;"	t	typeref:struct:VkPhysicalDeviceLimits
VkPhysicalDeviceMaintenance3Properties	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceMaintenance3Properties {$/;"	s
VkPhysicalDeviceMaintenance3Properties	deps/glad/vulkan.h	/^} VkPhysicalDeviceMaintenance3Properties;$/;"	t	typeref:struct:VkPhysicalDeviceMaintenance3Properties
VkPhysicalDeviceMemoryProperties	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceMemoryProperties {$/;"	s
VkPhysicalDeviceMemoryProperties	deps/glad/vulkan.h	/^} VkPhysicalDeviceMemoryProperties;$/;"	t	typeref:struct:VkPhysicalDeviceMemoryProperties
VkPhysicalDeviceMemoryProperties2	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceMemoryProperties2 {$/;"	s
VkPhysicalDeviceMemoryProperties2	deps/glad/vulkan.h	/^} VkPhysicalDeviceMemoryProperties2;$/;"	t	typeref:struct:VkPhysicalDeviceMemoryProperties2
VkPhysicalDeviceMultiviewFeatures	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceMultiviewFeatures {$/;"	s
VkPhysicalDeviceMultiviewFeatures	deps/glad/vulkan.h	/^} VkPhysicalDeviceMultiviewFeatures;$/;"	t	typeref:struct:VkPhysicalDeviceMultiviewFeatures
VkPhysicalDeviceMultiviewProperties	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceMultiviewProperties {$/;"	s
VkPhysicalDeviceMultiviewProperties	deps/glad/vulkan.h	/^} VkPhysicalDeviceMultiviewProperties;$/;"	t	typeref:struct:VkPhysicalDeviceMultiviewProperties
VkPhysicalDevicePointClippingProperties	deps/glad/vulkan.h	/^typedef struct VkPhysicalDevicePointClippingProperties {$/;"	s
VkPhysicalDevicePointClippingProperties	deps/glad/vulkan.h	/^} VkPhysicalDevicePointClippingProperties;$/;"	t	typeref:struct:VkPhysicalDevicePointClippingProperties
VkPhysicalDeviceProperties	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceProperties {$/;"	s
VkPhysicalDeviceProperties	deps/glad/vulkan.h	/^} VkPhysicalDeviceProperties;$/;"	t	typeref:struct:VkPhysicalDeviceProperties
VkPhysicalDeviceProperties2	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceProperties2 {$/;"	s
VkPhysicalDeviceProperties2	deps/glad/vulkan.h	/^} VkPhysicalDeviceProperties2;$/;"	t	typeref:struct:VkPhysicalDeviceProperties2
VkPhysicalDeviceProtectedMemoryFeatures	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceProtectedMemoryFeatures {$/;"	s
VkPhysicalDeviceProtectedMemoryFeatures	deps/glad/vulkan.h	/^} VkPhysicalDeviceProtectedMemoryFeatures;$/;"	t	typeref:struct:VkPhysicalDeviceProtectedMemoryFeatures
VkPhysicalDeviceProtectedMemoryProperties	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceProtectedMemoryProperties {$/;"	s
VkPhysicalDeviceProtectedMemoryProperties	deps/glad/vulkan.h	/^} VkPhysicalDeviceProtectedMemoryProperties;$/;"	t	typeref:struct:VkPhysicalDeviceProtectedMemoryProperties
VkPhysicalDeviceSamplerYcbcrConversionFeatures	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceSamplerYcbcrConversionFeatures {$/;"	s
VkPhysicalDeviceSamplerYcbcrConversionFeatures	deps/glad/vulkan.h	/^} VkPhysicalDeviceSamplerYcbcrConversionFeatures;$/;"	t	typeref:struct:VkPhysicalDeviceSamplerYcbcrConversionFeatures
VkPhysicalDeviceShaderDrawParameterFeatures	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceShaderDrawParameterFeatures  VkPhysicalDeviceShaderDrawParameterF/;"	t	typeref:struct:VkPhysicalDeviceShaderDrawParameterFeatures
VkPhysicalDeviceShaderDrawParametersFeatures	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceShaderDrawParametersFeatures {$/;"	s
VkPhysicalDeviceShaderDrawParametersFeatures	deps/glad/vulkan.h	/^} VkPhysicalDeviceShaderDrawParametersFeatures;$/;"	t	typeref:struct:VkPhysicalDeviceShaderDrawParametersFeatures
VkPhysicalDeviceSparseImageFormatInfo2	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceSparseImageFormatInfo2 {$/;"	s
VkPhysicalDeviceSparseImageFormatInfo2	deps/glad/vulkan.h	/^} VkPhysicalDeviceSparseImageFormatInfo2;$/;"	t	typeref:struct:VkPhysicalDeviceSparseImageFormatInfo2
VkPhysicalDeviceSparseProperties	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceSparseProperties {$/;"	s
VkPhysicalDeviceSparseProperties	deps/glad/vulkan.h	/^} VkPhysicalDeviceSparseProperties;$/;"	t	typeref:struct:VkPhysicalDeviceSparseProperties
VkPhysicalDeviceSubgroupProperties	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceSubgroupProperties {$/;"	s
VkPhysicalDeviceSubgroupProperties	deps/glad/vulkan.h	/^} VkPhysicalDeviceSubgroupProperties;$/;"	t	typeref:struct:VkPhysicalDeviceSubgroupProperties
VkPhysicalDeviceType	deps/glad/vulkan.h	/^typedef enum VkPhysicalDeviceType {$/;"	g
VkPhysicalDeviceType	deps/glad/vulkan.h	/^} VkPhysicalDeviceType;$/;"	t	typeref:enum:VkPhysicalDeviceType
VkPhysicalDeviceVariablePointerFeatures	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceVariablePointerFeatures  VkPhysicalDeviceVariablePointerFeatures;$/;"	t	typeref:struct:VkPhysicalDeviceVariablePointerFeatures
VkPhysicalDeviceVariablePointersFeatures	deps/glad/vulkan.h	/^typedef struct VkPhysicalDeviceVariablePointersFeatures {$/;"	s
VkPhysicalDeviceVariablePointersFeatures	deps/glad/vulkan.h	/^} VkPhysicalDeviceVariablePointersFeatures;$/;"	t	typeref:struct:VkPhysicalDeviceVariablePointersFeatures
VkPipelineBindPoint	deps/glad/vulkan.h	/^typedef enum VkPipelineBindPoint {$/;"	g
VkPipelineBindPoint	deps/glad/vulkan.h	/^} VkPipelineBindPoint;$/;"	t	typeref:enum:VkPipelineBindPoint
VkPipelineCacheCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineCacheCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineCacheCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineCacheCreateInfo {$/;"	s
VkPipelineCacheCreateInfo	deps/glad/vulkan.h	/^} VkPipelineCacheCreateInfo;$/;"	t	typeref:struct:VkPipelineCacheCreateInfo
VkPipelineCacheHeaderVersion	deps/glad/vulkan.h	/^typedef enum VkPipelineCacheHeaderVersion {$/;"	g
VkPipelineCacheHeaderVersion	deps/glad/vulkan.h	/^} VkPipelineCacheHeaderVersion;$/;"	t	typeref:enum:VkPipelineCacheHeaderVersion
VkPipelineColorBlendAttachmentState	deps/glad/vulkan.h	/^typedef struct VkPipelineColorBlendAttachmentState {$/;"	s
VkPipelineColorBlendAttachmentState	deps/glad/vulkan.h	/^} VkPipelineColorBlendAttachmentState;$/;"	t	typeref:struct:VkPipelineColorBlendAttachmentState
VkPipelineColorBlendStateCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineColorBlendStateCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineColorBlendStateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineColorBlendStateCreateInfo {$/;"	s
VkPipelineColorBlendStateCreateInfo	deps/glad/vulkan.h	/^} VkPipelineColorBlendStateCreateInfo;$/;"	t	typeref:struct:VkPipelineColorBlendStateCreateInfo
VkPipelineCreateFlagBits	deps/glad/vulkan.h	/^typedef enum VkPipelineCreateFlagBits {$/;"	g
VkPipelineCreateFlagBits	deps/glad/vulkan.h	/^} VkPipelineCreateFlagBits;$/;"	t	typeref:enum:VkPipelineCreateFlagBits
VkPipelineCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineDepthStencilStateCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineDepthStencilStateCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineDepthStencilStateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineDepthStencilStateCreateInfo {$/;"	s
VkPipelineDepthStencilStateCreateInfo	deps/glad/vulkan.h	/^} VkPipelineDepthStencilStateCreateInfo;$/;"	t	typeref:struct:VkPipelineDepthStencilStateCreateInfo
VkPipelineDynamicStateCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineDynamicStateCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineDynamicStateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineDynamicStateCreateInfo {$/;"	s
VkPipelineDynamicStateCreateInfo	deps/glad/vulkan.h	/^} VkPipelineDynamicStateCreateInfo;$/;"	t	typeref:struct:VkPipelineDynamicStateCreateInfo
VkPipelineInputAssemblyStateCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineInputAssemblyStateCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineInputAssemblyStateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineInputAssemblyStateCreateInfo {$/;"	s
VkPipelineInputAssemblyStateCreateInfo	deps/glad/vulkan.h	/^} VkPipelineInputAssemblyStateCreateInfo;$/;"	t	typeref:struct:VkPipelineInputAssemblyStateCreateInfo
VkPipelineLayoutCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineLayoutCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineLayoutCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineLayoutCreateInfo {$/;"	s
VkPipelineLayoutCreateInfo	deps/glad/vulkan.h	/^} VkPipelineLayoutCreateInfo;$/;"	t	typeref:struct:VkPipelineLayoutCreateInfo
VkPipelineMultisampleStateCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineMultisampleStateCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineMultisampleStateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineMultisampleStateCreateInfo {$/;"	s
VkPipelineMultisampleStateCreateInfo	deps/glad/vulkan.h	/^} VkPipelineMultisampleStateCreateInfo;$/;"	t	typeref:struct:VkPipelineMultisampleStateCreateInfo
VkPipelineRasterizationStateCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineRasterizationStateCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineRasterizationStateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineRasterizationStateCreateInfo {$/;"	s
VkPipelineRasterizationStateCreateInfo	deps/glad/vulkan.h	/^} VkPipelineRasterizationStateCreateInfo;$/;"	t	typeref:struct:VkPipelineRasterizationStateCreateInfo
VkPipelineShaderStageCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineShaderStageCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineShaderStageCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineShaderStageCreateInfo {$/;"	s
VkPipelineShaderStageCreateInfo	deps/glad/vulkan.h	/^} VkPipelineShaderStageCreateInfo;$/;"	t	typeref:struct:VkPipelineShaderStageCreateInfo
VkPipelineStageFlagBits	deps/glad/vulkan.h	/^typedef enum VkPipelineStageFlagBits {$/;"	g
VkPipelineStageFlagBits	deps/glad/vulkan.h	/^} VkPipelineStageFlagBits;$/;"	t	typeref:enum:VkPipelineStageFlagBits
VkPipelineStageFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineStageFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineTessellationDomainOriginStateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineTessellationDomainOriginStateCreateInfo {$/;"	s
VkPipelineTessellationDomainOriginStateCreateInfo	deps/glad/vulkan.h	/^} VkPipelineTessellationDomainOriginStateCreateInfo;$/;"	t	typeref:struct:VkPipelineTessellationDomainOriginStateCreateInfo
VkPipelineTessellationStateCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineTessellationStateCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineTessellationStateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineTessellationStateCreateInfo {$/;"	s
VkPipelineTessellationStateCreateInfo	deps/glad/vulkan.h	/^} VkPipelineTessellationStateCreateInfo;$/;"	t	typeref:struct:VkPipelineTessellationStateCreateInfo
VkPipelineVertexInputStateCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineVertexInputStateCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineVertexInputStateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineVertexInputStateCreateInfo {$/;"	s
VkPipelineVertexInputStateCreateInfo	deps/glad/vulkan.h	/^} VkPipelineVertexInputStateCreateInfo;$/;"	t	typeref:struct:VkPipelineVertexInputStateCreateInfo
VkPipelineViewportStateCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkPipelineViewportStateCreateFlags;$/;"	t	typeref:typename:VkFlags
VkPipelineViewportStateCreateInfo	deps/glad/vulkan.h	/^typedef struct VkPipelineViewportStateCreateInfo {$/;"	s
VkPipelineViewportStateCreateInfo	deps/glad/vulkan.h	/^} VkPipelineViewportStateCreateInfo;$/;"	t	typeref:struct:VkPipelineViewportStateCreateInfo
VkPointClippingBehavior	deps/glad/vulkan.h	/^typedef enum VkPointClippingBehavior {$/;"	g
VkPointClippingBehavior	deps/glad/vulkan.h	/^} VkPointClippingBehavior;$/;"	t	typeref:enum:VkPointClippingBehavior
VkPolygonMode	deps/glad/vulkan.h	/^typedef enum VkPolygonMode {$/;"	g
VkPolygonMode	deps/glad/vulkan.h	/^} VkPolygonMode;$/;"	t	typeref:enum:VkPolygonMode
VkPresentInfoKHR	deps/glad/vulkan.h	/^typedef struct VkPresentInfoKHR {$/;"	s
VkPresentInfoKHR	deps/glad/vulkan.h	/^} VkPresentInfoKHR;$/;"	t	typeref:struct:VkPresentInfoKHR
VkPresentModeKHR	deps/glad/vulkan.h	/^typedef enum VkPresentModeKHR {$/;"	g
VkPresentModeKHR	deps/glad/vulkan.h	/^} VkPresentModeKHR;$/;"	t	typeref:enum:VkPresentModeKHR
VkPrimitiveTopology	deps/glad/vulkan.h	/^typedef enum VkPrimitiveTopology {$/;"	g
VkPrimitiveTopology	deps/glad/vulkan.h	/^} VkPrimitiveTopology;$/;"	t	typeref:enum:VkPrimitiveTopology
VkProtectedSubmitInfo	deps/glad/vulkan.h	/^typedef struct VkProtectedSubmitInfo {$/;"	s
VkProtectedSubmitInfo	deps/glad/vulkan.h	/^} VkProtectedSubmitInfo;$/;"	t	typeref:struct:VkProtectedSubmitInfo
VkPushConstantRange	deps/glad/vulkan.h	/^typedef struct VkPushConstantRange {$/;"	s
VkPushConstantRange	deps/glad/vulkan.h	/^} VkPushConstantRange;$/;"	t	typeref:struct:VkPushConstantRange
VkQueryControlFlagBits	deps/glad/vulkan.h	/^typedef enum VkQueryControlFlagBits {$/;"	g
VkQueryControlFlagBits	deps/glad/vulkan.h	/^} VkQueryControlFlagBits;$/;"	t	typeref:enum:VkQueryControlFlagBits
VkQueryControlFlags	deps/glad/vulkan.h	/^typedef VkFlags VkQueryControlFlags;$/;"	t	typeref:typename:VkFlags
VkQueryPipelineStatisticFlagBits	deps/glad/vulkan.h	/^typedef enum VkQueryPipelineStatisticFlagBits {$/;"	g
VkQueryPipelineStatisticFlagBits	deps/glad/vulkan.h	/^} VkQueryPipelineStatisticFlagBits;$/;"	t	typeref:enum:VkQueryPipelineStatisticFlagBits
VkQueryPipelineStatisticFlags	deps/glad/vulkan.h	/^typedef VkFlags VkQueryPipelineStatisticFlags;$/;"	t	typeref:typename:VkFlags
VkQueryPoolCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkQueryPoolCreateFlags;$/;"	t	typeref:typename:VkFlags
VkQueryPoolCreateInfo	deps/glad/vulkan.h	/^typedef struct VkQueryPoolCreateInfo {$/;"	s
VkQueryPoolCreateInfo	deps/glad/vulkan.h	/^} VkQueryPoolCreateInfo;$/;"	t	typeref:struct:VkQueryPoolCreateInfo
VkQueryResultFlagBits	deps/glad/vulkan.h	/^typedef enum VkQueryResultFlagBits {$/;"	g
VkQueryResultFlagBits	deps/glad/vulkan.h	/^} VkQueryResultFlagBits;$/;"	t	typeref:enum:VkQueryResultFlagBits
VkQueryResultFlags	deps/glad/vulkan.h	/^typedef VkFlags VkQueryResultFlags;$/;"	t	typeref:typename:VkFlags
VkQueryType	deps/glad/vulkan.h	/^typedef enum VkQueryType {$/;"	g
VkQueryType	deps/glad/vulkan.h	/^} VkQueryType;$/;"	t	typeref:enum:VkQueryType
VkQueueFamilyProperties	deps/glad/vulkan.h	/^typedef struct VkQueueFamilyProperties {$/;"	s
VkQueueFamilyProperties	deps/glad/vulkan.h	/^} VkQueueFamilyProperties;$/;"	t	typeref:struct:VkQueueFamilyProperties
VkQueueFamilyProperties2	deps/glad/vulkan.h	/^typedef struct VkQueueFamilyProperties2 {$/;"	s
VkQueueFamilyProperties2	deps/glad/vulkan.h	/^} VkQueueFamilyProperties2;$/;"	t	typeref:struct:VkQueueFamilyProperties2
VkQueueFlagBits	deps/glad/vulkan.h	/^typedef enum VkQueueFlagBits {$/;"	g
VkQueueFlagBits	deps/glad/vulkan.h	/^} VkQueueFlagBits;$/;"	t	typeref:enum:VkQueueFlagBits
VkQueueFlags	deps/glad/vulkan.h	/^typedef VkFlags VkQueueFlags;$/;"	t	typeref:typename:VkFlags
VkRect2D	deps/glad/vulkan.h	/^typedef struct VkRect2D {$/;"	s
VkRect2D	deps/glad/vulkan.h	/^} VkRect2D;$/;"	t	typeref:struct:VkRect2D
VkRenderPassBeginInfo	deps/glad/vulkan.h	/^typedef struct VkRenderPassBeginInfo {$/;"	s
VkRenderPassBeginInfo	deps/glad/vulkan.h	/^} VkRenderPassBeginInfo;$/;"	t	typeref:struct:VkRenderPassBeginInfo
VkRenderPassCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkRenderPassCreateFlags;$/;"	t	typeref:typename:VkFlags
VkRenderPassCreateInfo	deps/glad/vulkan.h	/^typedef struct VkRenderPassCreateInfo {$/;"	s
VkRenderPassCreateInfo	deps/glad/vulkan.h	/^} VkRenderPassCreateInfo;$/;"	t	typeref:struct:VkRenderPassCreateInfo
VkRenderPassInputAttachmentAspectCreateInfo	deps/glad/vulkan.h	/^typedef struct VkRenderPassInputAttachmentAspectCreateInfo {$/;"	s
VkRenderPassInputAttachmentAspectCreateInfo	deps/glad/vulkan.h	/^} VkRenderPassInputAttachmentAspectCreateInfo;$/;"	t	typeref:struct:VkRenderPassInputAttachmentAspectCreateInfo
VkRenderPassMultiviewCreateInfo	deps/glad/vulkan.h	/^typedef struct VkRenderPassMultiviewCreateInfo {$/;"	s
VkRenderPassMultiviewCreateInfo	deps/glad/vulkan.h	/^} VkRenderPassMultiviewCreateInfo;$/;"	t	typeref:struct:VkRenderPassMultiviewCreateInfo
VkResult	deps/glad/vulkan.h	/^typedef enum VkResult {$/;"	g
VkResult	deps/glad/vulkan.h	/^} VkResult;$/;"	t	typeref:enum:VkResult
VkResult	src/internal.h	/^typedef enum VkResult$/;"	g
VkResult	src/internal.h	/^} VkResult;$/;"	t	typeref:enum:VkResult
VkSampleCountFlagBits	deps/glad/vulkan.h	/^typedef enum VkSampleCountFlagBits {$/;"	g
VkSampleCountFlagBits	deps/glad/vulkan.h	/^} VkSampleCountFlagBits;$/;"	t	typeref:enum:VkSampleCountFlagBits
VkSampleCountFlags	deps/glad/vulkan.h	/^typedef VkFlags VkSampleCountFlags;$/;"	t	typeref:typename:VkFlags
VkSampleMask	deps/glad/vulkan.h	/^typedef uint32_t VkSampleMask;$/;"	t	typeref:typename:uint32_t
VkSamplerAddressMode	deps/glad/vulkan.h	/^typedef enum VkSamplerAddressMode {$/;"	g
VkSamplerAddressMode	deps/glad/vulkan.h	/^} VkSamplerAddressMode;$/;"	t	typeref:enum:VkSamplerAddressMode
VkSamplerCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkSamplerCreateFlags;$/;"	t	typeref:typename:VkFlags
VkSamplerCreateInfo	deps/glad/vulkan.h	/^typedef struct VkSamplerCreateInfo {$/;"	s
VkSamplerCreateInfo	deps/glad/vulkan.h	/^} VkSamplerCreateInfo;$/;"	t	typeref:struct:VkSamplerCreateInfo
VkSamplerMipmapMode	deps/glad/vulkan.h	/^typedef enum VkSamplerMipmapMode {$/;"	g
VkSamplerMipmapMode	deps/glad/vulkan.h	/^} VkSamplerMipmapMode;$/;"	t	typeref:enum:VkSamplerMipmapMode
VkSamplerYcbcrConversionCreateInfo	deps/glad/vulkan.h	/^typedef struct VkSamplerYcbcrConversionCreateInfo {$/;"	s
VkSamplerYcbcrConversionCreateInfo	deps/glad/vulkan.h	/^} VkSamplerYcbcrConversionCreateInfo;$/;"	t	typeref:struct:VkSamplerYcbcrConversionCreateInfo
VkSamplerYcbcrConversionImageFormatProperties	deps/glad/vulkan.h	/^typedef struct VkSamplerYcbcrConversionImageFormatProperties {$/;"	s
VkSamplerYcbcrConversionImageFormatProperties	deps/glad/vulkan.h	/^} VkSamplerYcbcrConversionImageFormatProperties;$/;"	t	typeref:struct:VkSamplerYcbcrConversionImageFormatProperties
VkSamplerYcbcrConversionInfo	deps/glad/vulkan.h	/^typedef struct VkSamplerYcbcrConversionInfo {$/;"	s
VkSamplerYcbcrConversionInfo	deps/glad/vulkan.h	/^} VkSamplerYcbcrConversionInfo;$/;"	t	typeref:struct:VkSamplerYcbcrConversionInfo
VkSamplerYcbcrModelConversion	deps/glad/vulkan.h	/^typedef enum VkSamplerYcbcrModelConversion {$/;"	g
VkSamplerYcbcrModelConversion	deps/glad/vulkan.h	/^} VkSamplerYcbcrModelConversion;$/;"	t	typeref:enum:VkSamplerYcbcrModelConversion
VkSamplerYcbcrRange	deps/glad/vulkan.h	/^typedef enum VkSamplerYcbcrRange {$/;"	g
VkSamplerYcbcrRange	deps/glad/vulkan.h	/^} VkSamplerYcbcrRange;$/;"	t	typeref:enum:VkSamplerYcbcrRange
VkSemaphoreCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkSemaphoreCreateFlags;$/;"	t	typeref:typename:VkFlags
VkSemaphoreCreateInfo	deps/glad/vulkan.h	/^typedef struct VkSemaphoreCreateInfo {$/;"	s
VkSemaphoreCreateInfo	deps/glad/vulkan.h	/^} VkSemaphoreCreateInfo;$/;"	t	typeref:struct:VkSemaphoreCreateInfo
VkSemaphoreImportFlagBits	deps/glad/vulkan.h	/^typedef enum VkSemaphoreImportFlagBits {$/;"	g
VkSemaphoreImportFlagBits	deps/glad/vulkan.h	/^} VkSemaphoreImportFlagBits;$/;"	t	typeref:enum:VkSemaphoreImportFlagBits
VkSemaphoreImportFlags	deps/glad/vulkan.h	/^typedef VkFlags VkSemaphoreImportFlags;$/;"	t	typeref:typename:VkFlags
VkShaderModuleCreateFlags	deps/glad/vulkan.h	/^typedef VkFlags VkShaderModuleCreateFlags;$/;"	t	typeref:typename:VkFlags
VkShaderModuleCreateInfo	deps/glad/vulkan.h	/^typedef struct VkShaderModuleCreateInfo {$/;"	s
VkShaderModuleCreateInfo	deps/glad/vulkan.h	/^} VkShaderModuleCreateInfo;$/;"	t	typeref:struct:VkShaderModuleCreateInfo
VkShaderStageFlagBits	deps/glad/vulkan.h	/^typedef enum VkShaderStageFlagBits {$/;"	g
VkShaderStageFlagBits	deps/glad/vulkan.h	/^} VkShaderStageFlagBits;$/;"	t	typeref:enum:VkShaderStageFlagBits
VkShaderStageFlags	deps/glad/vulkan.h	/^typedef VkFlags VkShaderStageFlags;$/;"	t	typeref:typename:VkFlags
VkSharingMode	deps/glad/vulkan.h	/^typedef enum VkSharingMode {$/;"	g
VkSharingMode	deps/glad/vulkan.h	/^} VkSharingMode;$/;"	t	typeref:enum:VkSharingMode
VkSparseBufferMemoryBindInfo	deps/glad/vulkan.h	/^typedef struct VkSparseBufferMemoryBindInfo {$/;"	s
VkSparseBufferMemoryBindInfo	deps/glad/vulkan.h	/^} VkSparseBufferMemoryBindInfo;$/;"	t	typeref:struct:VkSparseBufferMemoryBindInfo
VkSparseImageFormatFlagBits	deps/glad/vulkan.h	/^typedef enum VkSparseImageFormatFlagBits {$/;"	g
VkSparseImageFormatFlagBits	deps/glad/vulkan.h	/^} VkSparseImageFormatFlagBits;$/;"	t	typeref:enum:VkSparseImageFormatFlagBits
VkSparseImageFormatFlags	deps/glad/vulkan.h	/^typedef VkFlags VkSparseImageFormatFlags;$/;"	t	typeref:typename:VkFlags
VkSparseImageFormatProperties	deps/glad/vulkan.h	/^typedef struct VkSparseImageFormatProperties {$/;"	s
VkSparseImageFormatProperties	deps/glad/vulkan.h	/^} VkSparseImageFormatProperties;$/;"	t	typeref:struct:VkSparseImageFormatProperties
VkSparseImageFormatProperties2	deps/glad/vulkan.h	/^typedef struct VkSparseImageFormatProperties2 {$/;"	s
VkSparseImageFormatProperties2	deps/glad/vulkan.h	/^} VkSparseImageFormatProperties2;$/;"	t	typeref:struct:VkSparseImageFormatProperties2
VkSparseImageMemoryBind	deps/glad/vulkan.h	/^typedef struct VkSparseImageMemoryBind {$/;"	s
VkSparseImageMemoryBind	deps/glad/vulkan.h	/^} VkSparseImageMemoryBind;$/;"	t	typeref:struct:VkSparseImageMemoryBind
VkSparseImageMemoryBindInfo	deps/glad/vulkan.h	/^typedef struct VkSparseImageMemoryBindInfo {$/;"	s
VkSparseImageMemoryBindInfo	deps/glad/vulkan.h	/^} VkSparseImageMemoryBindInfo;$/;"	t	typeref:struct:VkSparseImageMemoryBindInfo
VkSparseImageMemoryRequirements	deps/glad/vulkan.h	/^typedef struct VkSparseImageMemoryRequirements {$/;"	s
VkSparseImageMemoryRequirements	deps/glad/vulkan.h	/^} VkSparseImageMemoryRequirements;$/;"	t	typeref:struct:VkSparseImageMemoryRequirements
VkSparseImageMemoryRequirements2	deps/glad/vulkan.h	/^typedef struct VkSparseImageMemoryRequirements2 {$/;"	s
VkSparseImageMemoryRequirements2	deps/glad/vulkan.h	/^} VkSparseImageMemoryRequirements2;$/;"	t	typeref:struct:VkSparseImageMemoryRequirements2
VkSparseImageOpaqueMemoryBindInfo	deps/glad/vulkan.h	/^typedef struct VkSparseImageOpaqueMemoryBindInfo {$/;"	s
VkSparseImageOpaqueMemoryBindInfo	deps/glad/vulkan.h	/^} VkSparseImageOpaqueMemoryBindInfo;$/;"	t	typeref:struct:VkSparseImageOpaqueMemoryBindInfo
VkSparseMemoryBind	deps/glad/vulkan.h	/^typedef struct VkSparseMemoryBind {$/;"	s
VkSparseMemoryBind	deps/glad/vulkan.h	/^} VkSparseMemoryBind;$/;"	t	typeref:struct:VkSparseMemoryBind
VkSparseMemoryBindFlagBits	deps/glad/vulkan.h	/^typedef enum VkSparseMemoryBindFlagBits {$/;"	g
VkSparseMemoryBindFlagBits	deps/glad/vulkan.h	/^} VkSparseMemoryBindFlagBits;$/;"	t	typeref:enum:VkSparseMemoryBindFlagBits
VkSparseMemoryBindFlags	deps/glad/vulkan.h	/^typedef VkFlags VkSparseMemoryBindFlags;$/;"	t	typeref:typename:VkFlags
VkSpecializationInfo	deps/glad/vulkan.h	/^typedef struct VkSpecializationInfo {$/;"	s
VkSpecializationInfo	deps/glad/vulkan.h	/^} VkSpecializationInfo;$/;"	t	typeref:struct:VkSpecializationInfo
VkSpecializationMapEntry	deps/glad/vulkan.h	/^typedef struct VkSpecializationMapEntry {$/;"	s
VkSpecializationMapEntry	deps/glad/vulkan.h	/^} VkSpecializationMapEntry;$/;"	t	typeref:struct:VkSpecializationMapEntry
VkStencilFaceFlagBits	deps/glad/vulkan.h	/^typedef enum VkStencilFaceFlagBits {$/;"	g
VkStencilFaceFlagBits	deps/glad/vulkan.h	/^} VkStencilFaceFlagBits;$/;"	t	typeref:enum:VkStencilFaceFlagBits
VkStencilFaceFlags	deps/glad/vulkan.h	/^typedef VkFlags VkStencilFaceFlags;$/;"	t	typeref:typename:VkFlags
VkStencilOp	deps/glad/vulkan.h	/^typedef enum VkStencilOp {$/;"	g
VkStencilOp	deps/glad/vulkan.h	/^} VkStencilOp;$/;"	t	typeref:enum:VkStencilOp
VkStencilOpState	deps/glad/vulkan.h	/^typedef struct VkStencilOpState {$/;"	s
VkStencilOpState	deps/glad/vulkan.h	/^} VkStencilOpState;$/;"	t	typeref:struct:VkStencilOpState
VkStructureType	deps/glad/vulkan.h	/^typedef enum VkStructureType {$/;"	g
VkStructureType	deps/glad/vulkan.h	/^} VkStructureType;$/;"	t	typeref:enum:VkStructureType
VkStructureType	src/internal.h	/^typedef enum VkStructureType$/;"	g
VkStructureType	src/internal.h	/^} VkStructureType;$/;"	t	typeref:enum:VkStructureType
VkSubgroupFeatureFlagBits	deps/glad/vulkan.h	/^typedef enum VkSubgroupFeatureFlagBits {$/;"	g
VkSubgroupFeatureFlagBits	deps/glad/vulkan.h	/^} VkSubgroupFeatureFlagBits;$/;"	t	typeref:enum:VkSubgroupFeatureFlagBits
VkSubgroupFeatureFlags	deps/glad/vulkan.h	/^typedef VkFlags VkSubgroupFeatureFlags;$/;"	t	typeref:typename:VkFlags
VkSubmitInfo	deps/glad/vulkan.h	/^typedef struct VkSubmitInfo {$/;"	s
VkSubmitInfo	deps/glad/vulkan.h	/^} VkSubmitInfo;$/;"	t	typeref:struct:VkSubmitInfo
VkSubpassContents	deps/glad/vulkan.h	/^typedef enum VkSubpassContents {$/;"	g
VkSubpassContents	deps/glad/vulkan.h	/^} VkSubpassContents;$/;"	t	typeref:enum:VkSubpassContents
VkSubpassDependency	deps/glad/vulkan.h	/^typedef struct VkSubpassDependency {$/;"	s
VkSubpassDependency	deps/glad/vulkan.h	/^} VkSubpassDependency;$/;"	t	typeref:struct:VkSubpassDependency
VkSubpassDescription	deps/glad/vulkan.h	/^typedef struct VkSubpassDescription {$/;"	s
VkSubpassDescription	deps/glad/vulkan.h	/^} VkSubpassDescription;$/;"	t	typeref:struct:VkSubpassDescription
VkSubpassDescriptionFlags	deps/glad/vulkan.h	/^typedef VkFlags VkSubpassDescriptionFlags;$/;"	t	typeref:typename:VkFlags
VkSubresourceLayout	deps/glad/vulkan.h	/^typedef struct VkSubresourceLayout {$/;"	s
VkSubresourceLayout	deps/glad/vulkan.h	/^} VkSubresourceLayout;$/;"	t	typeref:struct:VkSubresourceLayout
VkSurfaceCapabilitiesKHR	deps/glad/vulkan.h	/^typedef struct VkSurfaceCapabilitiesKHR {$/;"	s
VkSurfaceCapabilitiesKHR	deps/glad/vulkan.h	/^} VkSurfaceCapabilitiesKHR;$/;"	t	typeref:struct:VkSurfaceCapabilitiesKHR
VkSurfaceFormatKHR	deps/glad/vulkan.h	/^typedef struct VkSurfaceFormatKHR {$/;"	s
VkSurfaceFormatKHR	deps/glad/vulkan.h	/^} VkSurfaceFormatKHR;$/;"	t	typeref:struct:VkSurfaceFormatKHR
VkSurfaceKHR	src/cocoa_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateMacOSSurfaceMVK)(VkInstance,const VkMacOSSurfaceCreateIn/;"	t
VkSurfaceKHR	src/cocoa_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateMetalSurfaceEXT)(VkInstance,const VkMetalSurfaceCreateIn/;"	t
VkSurfaceKHR	src/internal.h	/^typedef uint64_t VkSurfaceKHR;$/;"	t	typeref:typename:uint64_t
VkSurfaceTransformFlagBitsKHR	deps/glad/vulkan.h	/^typedef enum VkSurfaceTransformFlagBitsKHR {$/;"	g
VkSurfaceTransformFlagBitsKHR	deps/glad/vulkan.h	/^} VkSurfaceTransformFlagBitsKHR;$/;"	t	typeref:enum:VkSurfaceTransformFlagBitsKHR
VkSurfaceTransformFlagsKHR	deps/glad/vulkan.h	/^typedef VkFlags VkSurfaceTransformFlagsKHR;$/;"	t	typeref:typename:VkFlags
VkSwapchainCreateFlagBitsKHR	deps/glad/vulkan.h	/^typedef enum VkSwapchainCreateFlagBitsKHR {$/;"	g
VkSwapchainCreateFlagBitsKHR	deps/glad/vulkan.h	/^} VkSwapchainCreateFlagBitsKHR;$/;"	t	typeref:enum:VkSwapchainCreateFlagBitsKHR
VkSwapchainCreateFlagsKHR	deps/glad/vulkan.h	/^typedef VkFlags VkSwapchainCreateFlagsKHR;$/;"	t	typeref:typename:VkFlags
VkSwapchainCreateInfoKHR	deps/glad/vulkan.h	/^typedef struct VkSwapchainCreateInfoKHR {$/;"	s
VkSwapchainCreateInfoKHR	deps/glad/vulkan.h	/^} VkSwapchainCreateInfoKHR;$/;"	t	typeref:struct:VkSwapchainCreateInfoKHR
VkSystemAllocationScope	deps/glad/vulkan.h	/^typedef enum VkSystemAllocationScope {$/;"	g
VkSystemAllocationScope	deps/glad/vulkan.h	/^} VkSystemAllocationScope;$/;"	t	typeref:enum:VkSystemAllocationScope
VkTessellationDomainOrigin	deps/glad/vulkan.h	/^typedef enum VkTessellationDomainOrigin {$/;"	g
VkTessellationDomainOrigin	deps/glad/vulkan.h	/^} VkTessellationDomainOrigin;$/;"	t	typeref:enum:VkTessellationDomainOrigin
VkVendorId	deps/glad/vulkan.h	/^typedef enum VkVendorId {$/;"	g
VkVendorId	deps/glad/vulkan.h	/^} VkVendorId;$/;"	t	typeref:enum:VkVendorId
VkVertexInputAttributeDescription	deps/glad/vulkan.h	/^typedef struct VkVertexInputAttributeDescription {$/;"	s
VkVertexInputAttributeDescription	deps/glad/vulkan.h	/^} VkVertexInputAttributeDescription;$/;"	t	typeref:struct:VkVertexInputAttributeDescription
VkVertexInputBindingDescription	deps/glad/vulkan.h	/^typedef struct VkVertexInputBindingDescription {$/;"	s
VkVertexInputBindingDescription	deps/glad/vulkan.h	/^} VkVertexInputBindingDescription;$/;"	t	typeref:struct:VkVertexInputBindingDescription
VkVertexInputRate	deps/glad/vulkan.h	/^typedef enum VkVertexInputRate {$/;"	g
VkVertexInputRate	deps/glad/vulkan.h	/^} VkVertexInputRate;$/;"	t	typeref:enum:VkVertexInputRate
VkViewport	deps/glad/vulkan.h	/^typedef struct VkViewport {$/;"	s
VkViewport	deps/glad/vulkan.h	/^} VkViewport;$/;"	t	typeref:struct:VkViewport
VkWaylandSurfaceCreateFlagsKHR	src/wl_platform.h	/^typedef VkFlags VkWaylandSurfaceCreateFlagsKHR;$/;"	t	typeref:typename:VkFlags
VkWaylandSurfaceCreateInfoKHR	src/wl_platform.h	/^typedef struct VkWaylandSurfaceCreateInfoKHR$/;"	s
VkWaylandSurfaceCreateInfoKHR	src/wl_platform.h	/^} VkWaylandSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkWaylandSurfaceCreateInfoKHR
VkWin32SurfaceCreateFlagsKHR	src/win32_platform.h	/^typedef VkFlags VkWin32SurfaceCreateFlagsKHR;$/;"	t	typeref:typename:VkFlags
VkWin32SurfaceCreateInfoKHR	src/win32_platform.h	/^typedef struct VkWin32SurfaceCreateInfoKHR$/;"	s
VkWin32SurfaceCreateInfoKHR	src/win32_platform.h	/^} VkWin32SurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkWin32SurfaceCreateInfoKHR
VkWriteDescriptorSet	deps/glad/vulkan.h	/^typedef struct VkWriteDescriptorSet {$/;"	s
VkWriteDescriptorSet	deps/glad/vulkan.h	/^} VkWriteDescriptorSet;$/;"	t	typeref:struct:VkWriteDescriptorSet
VkXcbSurfaceCreateFlagsKHR	src/x11_platform.h	/^typedef VkFlags VkXcbSurfaceCreateFlagsKHR;$/;"	t	typeref:typename:VkFlags
VkXcbSurfaceCreateInfoKHR	src/x11_platform.h	/^typedef struct VkXcbSurfaceCreateInfoKHR$/;"	s
VkXcbSurfaceCreateInfoKHR	src/x11_platform.h	/^} VkXcbSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkXcbSurfaceCreateInfoKHR
VkXlibSurfaceCreateFlagsKHR	src/x11_platform.h	/^typedef VkFlags VkXlibSurfaceCreateFlagsKHR;$/;"	t	typeref:typename:VkFlags
VkXlibSurfaceCreateInfoKHR	src/x11_platform.h	/^typedef struct VkXlibSurfaceCreateInfoKHR$/;"	s
VkXlibSurfaceCreateInfoKHR	src/x11_platform.h	/^} VkXlibSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkXlibSurfaceCreateInfoKHR
WALL_L_OFFSET	examples/boing.c	/^#define WALL_L_OFFSET /;"	d	file:
WALL_R_OFFSET	examples/boing.c	/^#define WALL_R_OFFSET /;"	d	file:
WAYLAND_PROTOCOLS_FOUND	CMake/modules/FindWaylandProtocols.cmake	/^set(WAYLAND_PROTOCOLS_FOUND ${WaylandProtocols_FOUND})$/;"	v
WAYLAND_PROTOCOLS_PKGDATADIR	CMake/modules/FindWaylandProtocols.cmake	/^set(WAYLAND_PROTOCOLS_PKGDATADIR ${WaylandProtocols_PKGDATADIR})$/;"	v
WAYLAND_PROTOCOLS_VERSION	CMake/modules/FindWaylandProtocols.cmake	/^set(WAYLAND_PROTOCOLS_VERSION ${WaylandProtocols_VERSION})$/;"	v
WCHAR_MAX	deps/vs2008/stdint.h	/^#  define WCHAR_MAX /;"	d
WCHAR_MIN	deps/vs2008/stdint.h	/^#  define WCHAR_MIN /;"	d
WGL_ACCELERATION_ARB	src/wgl_context.h	/^#define WGL_ACCELERATION_ARB /;"	d
WGL_ACCUM_ALPHA_BITS_ARB	src/wgl_context.h	/^#define WGL_ACCUM_ALPHA_BITS_ARB /;"	d
WGL_ACCUM_BITS_ARB	src/wgl_context.h	/^#define WGL_ACCUM_BITS_ARB /;"	d
WGL_ACCUM_BLUE_BITS_ARB	src/wgl_context.h	/^#define WGL_ACCUM_BLUE_BITS_ARB /;"	d
WGL_ACCUM_GREEN_BITS_ARB	src/wgl_context.h	/^#define WGL_ACCUM_GREEN_BITS_ARB /;"	d
WGL_ACCUM_RED_BITS_ARB	src/wgl_context.h	/^#define WGL_ACCUM_RED_BITS_ARB /;"	d
WGL_ALPHA_BITS_ARB	src/wgl_context.h	/^#define WGL_ALPHA_BITS_ARB /;"	d
WGL_ALPHA_SHIFT_ARB	src/wgl_context.h	/^#define WGL_ALPHA_SHIFT_ARB /;"	d
WGL_AUX_BUFFERS_ARB	src/wgl_context.h	/^#define WGL_AUX_BUFFERS_ARB /;"	d
WGL_BLUE_BITS_ARB	src/wgl_context.h	/^#define WGL_BLUE_BITS_ARB /;"	d
WGL_BLUE_SHIFT_ARB	src/wgl_context.h	/^#define WGL_BLUE_SHIFT_ARB /;"	d
WGL_COLORSPACE_EXT	src/wgl_context.h	/^#define WGL_COLORSPACE_EXT /;"	d
WGL_COLORSPACE_SRGB_EXT	src/wgl_context.h	/^#define WGL_COLORSPACE_SRGB_EXT /;"	d
WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB /;"	d
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB /;"	d
WGL_CONTEXT_DEBUG_BIT_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_DEBUG_BIT_ARB /;"	d
WGL_CONTEXT_ES2_PROFILE_BIT_EXT	src/wgl_context.h	/^#define WGL_CONTEXT_ES2_PROFILE_BIT_EXT /;"	d
WGL_CONTEXT_FLAGS_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_FLAGS_ARB /;"	d
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d
WGL_CONTEXT_MAJOR_VERSION_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_MAJOR_VERSION_ARB /;"	d
WGL_CONTEXT_MINOR_VERSION_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_MINOR_VERSION_ARB /;"	d
WGL_CONTEXT_OPENGL_NO_ERROR_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_OPENGL_NO_ERROR_ARB /;"	d
WGL_CONTEXT_PROFILE_MASK_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_PROFILE_MASK_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB /;"	d
WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB	src/wgl_context.h	/^#define WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB /;"	d
WGL_DEPTH_BITS_ARB	src/wgl_context.h	/^#define WGL_DEPTH_BITS_ARB /;"	d
WGL_DOUBLE_BUFFER_ARB	src/wgl_context.h	/^#define WGL_DOUBLE_BUFFER_ARB /;"	d
WGL_DRAW_TO_WINDOW_ARB	src/wgl_context.h	/^#define WGL_DRAW_TO_WINDOW_ARB /;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	src/wgl_context.h	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d
WGL_GREEN_BITS_ARB	src/wgl_context.h	/^#define WGL_GREEN_BITS_ARB /;"	d
WGL_GREEN_SHIFT_ARB	src/wgl_context.h	/^#define WGL_GREEN_SHIFT_ARB /;"	d
WGL_LOSE_CONTEXT_ON_RESET_ARB	src/wgl_context.h	/^#define WGL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
WGL_NO_ACCELERATION_ARB	src/wgl_context.h	/^#define WGL_NO_ACCELERATION_ARB /;"	d
WGL_NO_RESET_NOTIFICATION_ARB	src/wgl_context.h	/^#define WGL_NO_RESET_NOTIFICATION_ARB /;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	src/wgl_context.h	/^#define WGL_NUMBER_PIXEL_FORMATS_ARB /;"	d
WGL_PIXEL_TYPE_ARB	src/wgl_context.h	/^#define WGL_PIXEL_TYPE_ARB /;"	d
WGL_RED_BITS_ARB	src/wgl_context.h	/^#define WGL_RED_BITS_ARB /;"	d
WGL_RED_SHIFT_ARB	src/wgl_context.h	/^#define WGL_RED_SHIFT_ARB /;"	d
WGL_SAMPLES_ARB	src/wgl_context.h	/^#define WGL_SAMPLES_ARB /;"	d
WGL_STENCIL_BITS_ARB	src/wgl_context.h	/^#define WGL_STENCIL_BITS_ARB /;"	d
WGL_STEREO_ARB	src/wgl_context.h	/^#define WGL_STEREO_ARB /;"	d
WGL_SUPPORT_OPENGL_ARB	src/wgl_context.h	/^#define WGL_SUPPORT_OPENGL_ARB /;"	d
WGL_TYPE_RGBA_ARB	src/wgl_context.h	/^#define WGL_TYPE_RGBA_ARB /;"	d
WIN32_LEAN_AND_MEAN	deps/tinycthread.h	/^    #define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	src/win32_platform.h	/^ #define WIN32_LEAN_AND_MEAN$/;"	d
WINELIB_NAME_AW	deps/mingw/_mingw_dxhelper.h	/^#   define WINELIB_NAME_AW /;"	d
WINELIB_NAME_AW	deps/mingw/_mingw_dxhelper.h	/^#   define WINELIB_NAME_AW(/;"	d
WINGDIAPI	include/GLFW/glfw3.h	/^ #define WINGDIAPI /;"	d
WINT_MAX	deps/vs2008/stdint.h	/^#define WINT_MAX /;"	d
WINT_MIN	deps/vs2008/stdint.h	/^#define WINT_MIN /;"	d
WINVER	src/win32_platform.h	/^ #define WINVER /;"	d
WM_COPYGLOBALDATA	src/win32_platform.h	/^ #define WM_COPYGLOBALDATA /;"	d
WM_DELETE_WINDOW	src/x11_platform.h	/^    Atom            WM_DELETE_WINDOW;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
WM_DPICHANGED	src/win32_platform.h	/^ #define WM_DPICHANGED /;"	d
WM_DWMCOMPOSITIONCHANGED	src/win32_platform.h	/^ #define WM_DWMCOMPOSITIONCHANGED /;"	d
WM_GETDPISCALEDSIZE	src/win32_platform.h	/^ #define WM_GETDPISCALEDSIZE /;"	d
WM_MOUSEHWHEEL	src/win32_platform.h	/^ #define WM_MOUSEHWHEEL /;"	d
WM_PROTOCOLS	src/x11_platform.h	/^    Atom            WM_PROTOCOLS;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
WM_STATE	src/x11_platform.h	/^    Atom            WM_STATE;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
WM_UNICHAR	src/win32_platform.h	/^ #define WM_UNICHAR /;"	d
XF86VidModeGetGammaRamp	src/x11_platform.h	/^#define XF86VidModeGetGammaRamp /;"	d
XF86VidModeGetGammaRampSize	src/x11_platform.h	/^#define XF86VidModeGetGammaRampSize /;"	d
XF86VidModeQueryExtension	src/x11_platform.h	/^#define XF86VidModeQueryExtension /;"	d
XF86VidModeSetGammaRamp	src/x11_platform.h	/^#define XF86VidModeSetGammaRamp /;"	d
XGetXCBConnection	src/x11_platform.h	/^#define XGetXCBConnection /;"	d
XINPUT_BATTERY_INFORMATION	deps/mingw/xinput.h	/^} XINPUT_BATTERY_INFORMATION, *PXINPUT_BATTERY_INFORMATION;$/;"	t	typeref:struct:_XINPUT_BATTERY_INFORMATION
XINPUT_CAPABILITIES	deps/mingw/xinput.h	/^} XINPUT_CAPABILITIES, *PXINPUT_CAPABILITIES;$/;"	t	typeref:struct:_XINPUT_CAPABILITIES
XINPUT_CAPS_VOICE_SUPPORTED	deps/mingw/xinput.h	/^#define XINPUT_CAPS_VOICE_SUPPORTED /;"	d
XINPUT_CAPS_WIRELESS	src/win32_platform.h	/^ #define XINPUT_CAPS_WIRELESS /;"	d
XINPUT_DEVSUBTYPE_ARCADE_PAD	src/win32_platform.h	/^ #define XINPUT_DEVSUBTYPE_ARCADE_PAD /;"	d
XINPUT_DEVSUBTYPE_ARCADE_STICK	deps/mingw/xinput.h	/^#define XINPUT_DEVSUBTYPE_ARCADE_STICK /;"	d
XINPUT_DEVSUBTYPE_ARCADE_STICK	src/win32_platform.h	/^ #define XINPUT_DEVSUBTYPE_ARCADE_STICK /;"	d
XINPUT_DEVSUBTYPE_DANCE_PAD	deps/mingw/xinput.h	/^#define XINPUT_DEVSUBTYPE_DANCE_PAD /;"	d
XINPUT_DEVSUBTYPE_DANCE_PAD	src/win32_platform.h	/^ #define XINPUT_DEVSUBTYPE_DANCE_PAD /;"	d
XINPUT_DEVSUBTYPE_DRUM_KIT	deps/mingw/xinput.h	/^#define XINPUT_DEVSUBTYPE_DRUM_KIT /;"	d
XINPUT_DEVSUBTYPE_DRUM_KIT	src/win32_platform.h	/^ #define XINPUT_DEVSUBTYPE_DRUM_KIT /;"	d
XINPUT_DEVSUBTYPE_FLIGHT_SICK	deps/mingw/xinput.h	/^#define XINPUT_DEVSUBTYPE_FLIGHT_SICK /;"	d
XINPUT_DEVSUBTYPE_FLIGHT_STICK	src/win32_platform.h	/^ #define XINPUT_DEVSUBTYPE_FLIGHT_STICK /;"	d
XINPUT_DEVSUBTYPE_GAMEPAD	deps/mingw/xinput.h	/^#define XINPUT_DEVSUBTYPE_GAMEPAD /;"	d
XINPUT_DEVSUBTYPE_GUITAR	deps/mingw/xinput.h	/^#define XINPUT_DEVSUBTYPE_GUITAR /;"	d
XINPUT_DEVSUBTYPE_GUITAR	src/win32_platform.h	/^ #define XINPUT_DEVSUBTYPE_GUITAR /;"	d
XINPUT_DEVSUBTYPE_WHEEL	deps/mingw/xinput.h	/^#define XINPUT_DEVSUBTYPE_WHEEL /;"	d
XINPUT_DEVSUBTYPE_WHEEL	src/win32_platform.h	/^ #define XINPUT_DEVSUBTYPE_WHEEL /;"	d
XINPUT_DEVTYPE_GAMEPAD	deps/mingw/xinput.h	/^#define XINPUT_DEVTYPE_GAMEPAD /;"	d
XINPUT_FLAG_GAMEPAD	deps/mingw/xinput.h	/^#define XINPUT_FLAG_GAMEPAD /;"	d
XINPUT_GAMEPAD	deps/mingw/xinput.h	/^} XINPUT_GAMEPAD, *PXINPUT_GAMEPAD;$/;"	t	typeref:struct:_XINPUT_GAMEPAD
XINPUT_GAMEPAD_A	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_A /;"	d
XINPUT_GAMEPAD_B	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_B /;"	d
XINPUT_GAMEPAD_BACK	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_BACK /;"	d
XINPUT_GAMEPAD_DPAD_DOWN	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_DPAD_DOWN /;"	d
XINPUT_GAMEPAD_DPAD_LEFT	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_DPAD_LEFT /;"	d
XINPUT_GAMEPAD_DPAD_RIGHT	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_DPAD_RIGHT /;"	d
XINPUT_GAMEPAD_DPAD_UP	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_DPAD_UP /;"	d
XINPUT_GAMEPAD_LEFT_SHOULDER	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_LEFT_SHOULDER /;"	d
XINPUT_GAMEPAD_LEFT_THUMB	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_LEFT_THUMB /;"	d
XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE /;"	d
XINPUT_GAMEPAD_RIGHT_SHOULDER	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_RIGHT_SHOULDER /;"	d
XINPUT_GAMEPAD_RIGHT_THUMB	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_RIGHT_THUMB /;"	d
XINPUT_GAMEPAD_RIGHT_THUMB_DEADZONE	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_RIGHT_THUMB_DEADZONE /;"	d
XINPUT_GAMEPAD_START	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_START /;"	d
XINPUT_GAMEPAD_TRIGGER_THRESHOLD	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_TRIGGER_THRESHOLD /;"	d
XINPUT_GAMEPAD_X	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_X /;"	d
XINPUT_GAMEPAD_Y	deps/mingw/xinput.h	/^#define XINPUT_GAMEPAD_Y /;"	d
XINPUT_KEYSTROKE	deps/mingw/xinput.h	/^} XINPUT_KEYSTROKE, *PXINPUT_KEYSTROKE;$/;"	t	typeref:struct:_XINPUT_KEYSTROKE
XINPUT_KEYSTROKE_KEYDOWN	deps/mingw/xinput.h	/^#define XINPUT_KEYSTROKE_KEYDOWN /;"	d
XINPUT_KEYSTROKE_KEYUP	deps/mingw/xinput.h	/^#define XINPUT_KEYSTROKE_KEYUP /;"	d
XINPUT_KEYSTROKE_REPEAT	deps/mingw/xinput.h	/^#define XINPUT_KEYSTROKE_REPEAT /;"	d
XINPUT_STATE	deps/mingw/xinput.h	/^} XINPUT_STATE, *PXINPUT_STATE;$/;"	t	typeref:struct:_XINPUT_STATE
XINPUT_VIBRATION	deps/mingw/xinput.h	/^} XINPUT_VIBRATION, *PXINPUT_VIBRATION;$/;"	t	typeref:struct:_XINPUT_VIBRATION
XIQueryVersion	src/x11_platform.h	/^#define XIQueryVersion /;"	d
XISelectEvents	src/x11_platform.h	/^#define XISelectEvents /;"	d
XInputGetCapabilities	src/win32_platform.h	/^#define XInputGetCapabilities /;"	d
XInputGetState	src/win32_platform.h	/^#define XInputGetState /;"	d
XKBCOMMON_DEFINITIONS	CMake/modules/FindXKBCommon.cmake	/^set(XKBCOMMON_DEFINITIONS ${PC_XKBCOMMON_CFLAGS_OTHER})$/;"	v
XKBCOMMON_INCLUDE_DIRS	CMake/modules/FindXKBCommon.cmake	/^set(XKBCOMMON_INCLUDE_DIRS ${XKBCOMMON_INCLUDE_DIR})$/;"	v
XKBCOMMON_LIBRARIES	CMake/modules/FindXKBCommon.cmake	/^set(XKBCOMMON_LIBRARIES ${XKBCOMMON_LIBRARY})$/;"	v
XKBCOMMON_LIBRARY_DIRS	CMake/modules/FindXKBCommon.cmake	/^set(XKBCOMMON_LIBRARY_DIRS ${XKBCOMMON_LIBRARY_DIRS})$/;"	v
XRRAllocGamma	src/x11_platform.h	/^#define XRRAllocGamma /;"	d
XRRFreeCrtcInfo	src/x11_platform.h	/^#define XRRFreeCrtcInfo /;"	d
XRRFreeGamma	src/x11_platform.h	/^#define XRRFreeGamma /;"	d
XRRFreeOutputInfo	src/x11_platform.h	/^#define XRRFreeOutputInfo /;"	d
XRRFreeScreenResources	src/x11_platform.h	/^#define XRRFreeScreenResources /;"	d
XRRGetCrtcGamma	src/x11_platform.h	/^#define XRRGetCrtcGamma /;"	d
XRRGetCrtcGammaSize	src/x11_platform.h	/^#define XRRGetCrtcGammaSize /;"	d
XRRGetCrtcInfo	src/x11_platform.h	/^#define XRRGetCrtcInfo /;"	d
XRRGetOutputInfo	src/x11_platform.h	/^#define XRRGetOutputInfo /;"	d
XRRGetOutputPrimary	src/x11_platform.h	/^#define XRRGetOutputPrimary /;"	d
XRRGetScreenResourcesCurrent	src/x11_platform.h	/^#define XRRGetScreenResourcesCurrent /;"	d
XRRQueryExtension	src/x11_platform.h	/^#define XRRQueryExtension /;"	d
XRRQueryVersion	src/x11_platform.h	/^#define XRRQueryVersion /;"	d
XRRSelectInput	src/x11_platform.h	/^#define XRRSelectInput /;"	d
XRRSetCrtcConfig	src/x11_platform.h	/^#define XRRSetCrtcConfig /;"	d
XRRSetCrtcGamma	src/x11_platform.h	/^#define XRRSetCrtcGamma /;"	d
XRRUpdateConfiguration	src/x11_platform.h	/^#define XRRUpdateConfiguration /;"	d
XRenderFindVisualFormat	src/x11_platform.h	/^#define XRenderFindVisualFormat /;"	d
XRenderQueryExtension	src/x11_platform.h	/^#define XRenderQueryExtension /;"	d
XRenderQueryVersion	src/x11_platform.h	/^#define XRenderQueryVersion /;"	d
XUSER_INDEX_ANY	deps/mingw/xinput.h	/^#define XUSER_INDEX_ANY /;"	d
XUSER_MAX_COUNT	deps/mingw/xinput.h	/^#define XUSER_MAX_COUNT /;"	d
XUSER_MAX_COUNT	src/win32_platform.h	/^ #define XUSER_MAX_COUNT /;"	d
XcursorGetDefaultSize	src/x11_platform.h	/^#define XcursorGetDefaultSize /;"	d
XcursorGetTheme	src/x11_platform.h	/^#define XcursorGetTheme /;"	d
XcursorImageCreate	src/x11_platform.h	/^#define XcursorImageCreate /;"	d
XcursorImageDestroy	src/x11_platform.h	/^#define XcursorImageDestroy /;"	d
XcursorImageLoadCursor	src/x11_platform.h	/^#define XcursorImageLoadCursor /;"	d
XcursorLibraryLoadImage	src/x11_platform.h	/^#define XcursorLibraryLoadImage /;"	d
XdndActionCopy	src/x11_platform.h	/^    Atom            XdndActionCopy;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
XdndAware	src/x11_platform.h	/^    Atom            XdndAware;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
XdndDrop	src/x11_platform.h	/^    Atom            XdndDrop;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
XdndEnter	src/x11_platform.h	/^    Atom            XdndEnter;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
XdndFinished	src/x11_platform.h	/^    Atom            XdndFinished;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
XdndPosition	src/x11_platform.h	/^    Atom            XdndPosition;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
XdndSelection	src/x11_platform.h	/^    Atom            XdndSelection;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
XdndStatus	src/x11_platform.h	/^    Atom            XdndStatus;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
XdndTypeList	src/x11_platform.h	/^    Atom            XdndTypeList;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
XineramaIsActive	src/x11_platform.h	/^#define XineramaIsActive /;"	d
XineramaQueryExtension	src/x11_platform.h	/^#define XineramaQueryExtension /;"	d
XineramaQueryScreens	src/x11_platform.h	/^#define XineramaQueryScreens /;"	d
_ANONYMOUS_STRUCT	deps/mingw/_mingw_dxhelper.h	/^#define _ANONYMOUS_STRUCT	/;"	d
_ANONYMOUS_STRUCT	deps/mingw/_mingw_dxhelper.h	/^#define _ANONYMOUS_STRUCT$/;"	d
_ANONYMOUS_UNION	deps/mingw/_mingw_dxhelper.h	/^#define _ANONYMOUS_UNION	/;"	d
_ANONYMOUS_UNION	deps/mingw/_mingw_dxhelper.h	/^#define _ANONYMOUS_UNION$/;"	d
_CONDITION_EVENT_ALL	deps/tinycthread.c	/^#define _CONDITION_EVENT_ALL /;"	d	file:
_CONDITION_EVENT_ONE	deps/tinycthread.c	/^#define _CONDITION_EVENT_ONE /;"	d	file:
_CPOINT	deps/mingw/dinput.h	/^typedef struct _CPOINT {$/;"	s
_CRT_NONSTDC_NO_DEPRECATE	deps/stb_image_write.h	/^   #define _CRT_NONSTDC_NO_DEPRECATE$/;"	d
_CRT_SECURE_NO_WARNINGS	deps/stb_image_write.h	/^   #define _CRT_SECURE_NO_WARNINGS$/;"	d
_DIACTIONA	deps/mingw/dinput.h	/^typedef struct _DIACTIONA {$/;"	s
_DIACTIONFORMATA	deps/mingw/dinput.h	/^typedef struct _DIACTIONFORMATA {$/;"	s
_DIACTIONFORMATW	deps/mingw/dinput.h	/^typedef struct _DIACTIONFORMATW {$/;"	s
_DIACTIONW	deps/mingw/dinput.h	/^typedef struct _DIACTIONW {$/;"	s
_DICOLORSET	deps/mingw/dinput.h	/^typedef struct _DICOLORSET {$/;"	s
_DICONFIGUREDEVICESPARAMSA	deps/mingw/dinput.h	/^typedef struct _DICONFIGUREDEVICESPARAMSA {$/;"	s
_DICONFIGUREDEVICESPARAMSW	deps/mingw/dinput.h	/^typedef struct _DICONFIGUREDEVICESPARAMSW {$/;"	s
_DIDATAFORMAT	deps/mingw/dinput.h	/^typedef struct _DIDATAFORMAT {$/;"	s
_DIDEVICEIMAGEINFOA	deps/mingw/dinput.h	/^typedef struct _DIDEVICEIMAGEINFOA {$/;"	s
_DIDEVICEIMAGEINFOHEADERA	deps/mingw/dinput.h	/^typedef struct _DIDEVICEIMAGEINFOHEADERA {$/;"	s
_DIDEVICEIMAGEINFOHEADERW	deps/mingw/dinput.h	/^typedef struct _DIDEVICEIMAGEINFOHEADERW {$/;"	s
_DIDEVICEIMAGEINFOW	deps/mingw/dinput.h	/^typedef struct _DIDEVICEIMAGEINFOW {$/;"	s
_DIOBJECTDATAFORMAT	deps/mingw/dinput.h	/^typedef struct _DIOBJECTDATAFORMAT {$/;"	s
_GLFW_COCOA	CMakeLists.txt	/^    set(_GLFW_COCOA 1)$/;"	v
_GLFW_CONCAT_VERSION	src/internal.h	/^#define _GLFW_CONCAT_VERSION(/;"	d
_GLFW_DECORATION_HORIZONTAL	src/wl_platform.h	/^#define _GLFW_DECORATION_HORIZONTAL /;"	d
_GLFW_DECORATION_TOP	src/wl_platform.h	/^#define _GLFW_DECORATION_TOP /;"	d
_GLFW_DECORATION_VERTICAL	src/wl_platform.h	/^#define _GLFW_DECORATION_VERTICAL /;"	d
_GLFW_DECORATION_WIDTH	src/wl_platform.h	/^#define _GLFW_DECORATION_WIDTH /;"	d
_GLFW_EGL_CONTEXT_STATE	src/egl_context.h	/^#define _GLFW_EGL_CONTEXT_STATE /;"	d
_GLFW_EGL_CONTEXT_STATE	src/null_platform.h	/^#define _GLFW_EGL_CONTEXT_STATE /;"	d
_GLFW_EGL_LIBRARY_CONTEXT_STATE	src/egl_context.h	/^#define _GLFW_EGL_LIBRARY_CONTEXT_STATE /;"	d
_GLFW_EGL_LIBRARY_CONTEXT_STATE	src/null_platform.h	/^#define _GLFW_EGL_LIBRARY_CONTEXT_STATE /;"	d
_GLFW_EGL_NATIVE_DISPLAY	src/cocoa_platform.h	/^#define _GLFW_EGL_NATIVE_DISPLAY EGL_DEFAULT_DISPLAY$/;"	M
_GLFW_EGL_NATIVE_DISPLAY	src/win32_platform.h	/^#define _GLFW_EGL_NATIVE_DISPLAY /;"	d
_GLFW_EGL_NATIVE_DISPLAY	src/wl_platform.h	/^#define _GLFW_EGL_NATIVE_DISPLAY /;"	d
_GLFW_EGL_NATIVE_DISPLAY	src/x11_platform.h	/^#define _GLFW_EGL_NATIVE_DISPLAY /;"	d
_GLFW_EGL_NATIVE_WINDOW	src/cocoa_platform.h	/^#define _GLFW_EGL_NATIVE_WINDOW  ((EGLNativeWindowType) window->ns.view)$/;"	M
_GLFW_EGL_NATIVE_WINDOW	src/win32_platform.h	/^#define _GLFW_EGL_NATIVE_WINDOW /;"	d
_GLFW_EGL_NATIVE_WINDOW	src/wl_platform.h	/^#define _GLFW_EGL_NATIVE_WINDOW /;"	d
_GLFW_EGL_NATIVE_WINDOW	src/x11_platform.h	/^#define _GLFW_EGL_NATIVE_WINDOW /;"	d
_GLFW_FIND_LOADER	src/vulkan.c	/^#define _GLFW_FIND_LOADER /;"	d	file:
_GLFW_INSERT_FIRST	src/internal.h	/^#define _GLFW_INSERT_FIRST /;"	d
_GLFW_INSERT_LAST	src/internal.h	/^#define _GLFW_INSERT_LAST /;"	d
_GLFW_JOYSTICK_AXIS	src/input.c	/^#define _GLFW_JOYSTICK_AXIS /;"	d	file:
_GLFW_JOYSTICK_BUTTON	src/input.c	/^#define _GLFW_JOYSTICK_BUTTON /;"	d	file:
_GLFW_JOYSTICK_HATBIT	src/input.c	/^#define _GLFW_JOYSTICK_HATBIT /;"	d	file:
_GLFW_MAKE_VERSION	src/internal.h	/^#define _GLFW_MAKE_VERSION(/;"	d
_GLFW_MESSAGE_SIZE	src/internal.h	/^#define _GLFW_MESSAGE_SIZE /;"	d
_GLFW_OSMESA	CMakeLists.txt	/^    set(_GLFW_OSMESA 1)$/;"	v
_GLFW_OSMESA_CONTEXT_STATE	src/osmesa_context.h	/^#define _GLFW_OSMESA_CONTEXT_STATE /;"	d
_GLFW_OSMESA_LIBRARY_CONTEXT_STATE	src/osmesa_context.h	/^#define _GLFW_OSMESA_LIBRARY_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_CONTEXT_STATE	src/glx_context.h	/^#define _GLFW_PLATFORM_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_CONTEXT_STATE	src/nsgl_context.h	/^#define _GLFW_PLATFORM_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_CONTEXT_STATE	src/null_platform.h	/^#define _GLFW_PLATFORM_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_CONTEXT_STATE	src/wgl_context.h	/^#define _GLFW_PLATFORM_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_CONTEXT_STATE	src/wl_platform.h	/^#define _GLFW_PLATFORM_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_CURSOR_STATE	src/cocoa_platform.h	/^#define _GLFW_PLATFORM_CURSOR_STATE         _GLFWcursorNS  ns$/;"	M
_GLFW_PLATFORM_CURSOR_STATE	src/null_platform.h	/^#define _GLFW_PLATFORM_CURSOR_STATE /;"	d
_GLFW_PLATFORM_CURSOR_STATE	src/win32_platform.h	/^#define _GLFW_PLATFORM_CURSOR_STATE /;"	d
_GLFW_PLATFORM_CURSOR_STATE	src/wl_platform.h	/^#define _GLFW_PLATFORM_CURSOR_STATE /;"	d
_GLFW_PLATFORM_CURSOR_STATE	src/x11_platform.h	/^#define _GLFW_PLATFORM_CURSOR_STATE /;"	d
_GLFW_PLATFORM_JOYSTICK_STATE	src/cocoa_joystick.h	/^#define _GLFW_PLATFORM_JOYSTICK_STATE /;"	d
_GLFW_PLATFORM_JOYSTICK_STATE	src/linux_joystick.h	/^#define _GLFW_PLATFORM_JOYSTICK_STATE /;"	d
_GLFW_PLATFORM_JOYSTICK_STATE	src/null_joystick.h	/^#define _GLFW_PLATFORM_JOYSTICK_STATE /;"	d
_GLFW_PLATFORM_JOYSTICK_STATE	src/win32_joystick.h	/^#define _GLFW_PLATFORM_JOYSTICK_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	src/glx_context.h	/^#define _GLFW_PLATFORM_LIBRARY_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	src/nsgl_context.h	/^#define _GLFW_PLATFORM_LIBRARY_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	src/null_platform.h	/^#define _GLFW_PLATFORM_LIBRARY_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	src/wgl_context.h	/^#define _GLFW_PLATFORM_LIBRARY_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	src/wl_platform.h	/^#define _GLFW_PLATFORM_LIBRARY_CONTEXT_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE	src/cocoa_joystick.h	/^#define _GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE	src/linux_joystick.h	/^#define _GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE	src/null_joystick.h	/^#define _GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE	src/win32_joystick.h	/^#define _GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_TIMER_STATE	src/cocoa_platform.h	/^#define _GLFW_PLATFORM_LIBRARY_TIMER_STATE  _GLFWtimerNS   ns$/;"	M
_GLFW_PLATFORM_LIBRARY_TIMER_STATE	src/posix_time.h	/^#define _GLFW_PLATFORM_LIBRARY_TIMER_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_TIMER_STATE	src/win32_platform.h	/^#define _GLFW_PLATFORM_LIBRARY_TIMER_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	src/cocoa_platform.h	/^#define _GLFW_PLATFORM_LIBRARY_WINDOW_STATE _GLFWlibraryNS ns$/;"	M
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	src/null_platform.h	/^#define _GLFW_PLATFORM_LIBRARY_WINDOW_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	src/win32_platform.h	/^#define _GLFW_PLATFORM_LIBRARY_WINDOW_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	src/wl_platform.h	/^#define _GLFW_PLATFORM_LIBRARY_WINDOW_STATE /;"	d
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	src/x11_platform.h	/^#define _GLFW_PLATFORM_LIBRARY_WINDOW_STATE /;"	d
_GLFW_PLATFORM_MAPPING_NAME	src/cocoa_joystick.h	/^#define _GLFW_PLATFORM_MAPPING_NAME /;"	d
_GLFW_PLATFORM_MAPPING_NAME	src/linux_joystick.h	/^#define _GLFW_PLATFORM_MAPPING_NAME /;"	d
_GLFW_PLATFORM_MAPPING_NAME	src/null_joystick.h	/^#define _GLFW_PLATFORM_MAPPING_NAME /;"	d
_GLFW_PLATFORM_MAPPING_NAME	src/win32_joystick.h	/^#define _GLFW_PLATFORM_MAPPING_NAME /;"	d
_GLFW_PLATFORM_MONITOR_STATE	src/cocoa_platform.h	/^#define _GLFW_PLATFORM_MONITOR_STATE        _GLFWmonitorNS ns$/;"	M
_GLFW_PLATFORM_MONITOR_STATE	src/null_platform.h	/^#define _GLFW_PLATFORM_MONITOR_STATE /;"	d
_GLFW_PLATFORM_MONITOR_STATE	src/win32_platform.h	/^#define _GLFW_PLATFORM_MONITOR_STATE /;"	d
_GLFW_PLATFORM_MONITOR_STATE	src/wl_platform.h	/^#define _GLFW_PLATFORM_MONITOR_STATE /;"	d
_GLFW_PLATFORM_MONITOR_STATE	src/x11_platform.h	/^#define _GLFW_PLATFORM_MONITOR_STATE /;"	d
_GLFW_PLATFORM_MUTEX_STATE	src/posix_thread.h	/^#define _GLFW_PLATFORM_MUTEX_STATE /;"	d
_GLFW_PLATFORM_MUTEX_STATE	src/win32_platform.h	/^#define _GLFW_PLATFORM_MUTEX_STATE /;"	d
_GLFW_PLATFORM_TLS_STATE	src/posix_thread.h	/^#define _GLFW_PLATFORM_TLS_STATE /;"	d
_GLFW_PLATFORM_TLS_STATE	src/win32_platform.h	/^#define _GLFW_PLATFORM_TLS_STATE /;"	d
_GLFW_PLATFORM_WINDOW_STATE	src/cocoa_platform.h	/^#define _GLFW_PLATFORM_WINDOW_STATE         _GLFWwindowNS  ns$/;"	M
_GLFW_PLATFORM_WINDOW_STATE	src/null_platform.h	/^#define _GLFW_PLATFORM_WINDOW_STATE /;"	d
_GLFW_PLATFORM_WINDOW_STATE	src/win32_platform.h	/^#define _GLFW_PLATFORM_WINDOW_STATE /;"	d
_GLFW_PLATFORM_WINDOW_STATE	src/wl_platform.h	/^#define _GLFW_PLATFORM_WINDOW_STATE /;"	d
_GLFW_PLATFORM_WINDOW_STATE	src/x11_platform.h	/^#define _GLFW_PLATFORM_WINDOW_STATE /;"	d
_GLFW_POLL_ALL	src/internal.h	/^#define _GLFW_POLL_ALL /;"	d
_GLFW_POLL_AXES	src/internal.h	/^#define _GLFW_POLL_AXES /;"	d
_GLFW_POLL_BUTTONS	src/internal.h	/^#define _GLFW_POLL_BUTTONS /;"	d
_GLFW_POLL_PRESENCE	src/internal.h	/^#define _GLFW_POLL_PRESENCE /;"	d
_GLFW_RECREATION_IMPOSSIBLE	src/wgl_context.h	/^#define _GLFW_RECREATION_IMPOSSIBLE /;"	d
_GLFW_RECREATION_NOT_NEEDED	src/wgl_context.h	/^#define _GLFW_RECREATION_NOT_NEEDED /;"	d
_GLFW_RECREATION_REQUIRED	src/wgl_context.h	/^#define _GLFW_RECREATION_REQUIRED /;"	d
_GLFW_REQUIRE_INIT	src/internal.h	/^#define _GLFW_REQUIRE_INIT(/;"	d
_GLFW_REQUIRE_INIT_OR_RETURN	src/internal.h	/^#define _GLFW_REQUIRE_INIT_OR_RETURN(/;"	d
_GLFW_REQUIRE_LOADER	src/vulkan.c	/^#define _GLFW_REQUIRE_LOADER /;"	d	file:
_GLFW_STICK	src/input.c	/^#define _GLFW_STICK /;"	d	file:
_GLFW_SWAP_POINTERS	src/internal.h	/^#define _GLFW_SWAP_POINTERS(/;"	d
_GLFW_TYPE_AXIS	src/win32_joystick.c	/^#define _GLFW_TYPE_AXIS /;"	d	file:
_GLFW_TYPE_BUTTON	src/win32_joystick.c	/^#define _GLFW_TYPE_BUTTON /;"	d	file:
_GLFW_TYPE_POV	src/win32_joystick.c	/^#define _GLFW_TYPE_POV /;"	d	file:
_GLFW_TYPE_SLIDER	src/win32_joystick.c	/^#define _GLFW_TYPE_SLIDER /;"	d	file:
_GLFW_USE_HYBRID_HPG	CMakeLists.txt	/^        set(_GLFW_USE_HYBRID_HPG 1)$/;"	v
_GLFW_VERSION_NUMBER	src/internal.h	/^#define _GLFW_VERSION_NUMBER /;"	d
_GLFW_VULKAN_STATIC	CMakeLists.txt	/^    set(_GLFW_VULKAN_STATIC 1)$/;"	v
_GLFW_WAYLAND	CMakeLists.txt	/^    set(_GLFW_WAYLAND 1)$/;"	v
_GLFW_WIN32	CMakeLists.txt	/^    set(_GLFW_WIN32 1)$/;"	v
_GLFW_WNDCLASSNAME	src/win32_platform.h	/^ #define _GLFW_WNDCLASSNAME /;"	d
_GLFW_X11	CMakeLists.txt	/^    set(_GLFW_X11 1)$/;"	v
_GLFW_XDND_VERSION	src/x11_window.c	/^#define _GLFW_XDND_VERSION /;"	d	file:
_GLFWcontext	src/internal.h	/^struct _GLFWcontext$/;"	s
_GLFWcontext	src/internal.h	/^typedef struct _GLFWcontext     _GLFWcontext;$/;"	t	typeref:struct:_GLFWcontext
_GLFWcontextEGL	src/egl_context.h	/^typedef struct _GLFWcontextEGL$/;"	s
_GLFWcontextEGL	src/egl_context.h	/^} _GLFWcontextEGL;$/;"	t	typeref:struct:_GLFWcontextEGL
_GLFWcontextGLX	src/glx_context.h	/^typedef struct _GLFWcontextGLX$/;"	s
_GLFWcontextGLX	src/glx_context.h	/^} _GLFWcontextGLX;$/;"	t	typeref:struct:_GLFWcontextGLX
_GLFWcontextNSGL	src/nsgl_context.h	/^typedef struct _GLFWcontextNSGL$/;"	s
_GLFWcontextNSGL	src/nsgl_context.h	/^} _GLFWcontextNSGL;$/;"	t	typeref:struct:_GLFWcontextNSGL
_GLFWcontextOSMesa	src/osmesa_context.h	/^typedef struct _GLFWcontextOSMesa$/;"	s
_GLFWcontextOSMesa	src/osmesa_context.h	/^} _GLFWcontextOSMesa;$/;"	t	typeref:struct:_GLFWcontextOSMesa
_GLFWcontextWGL	src/wgl_context.h	/^typedef struct _GLFWcontextWGL$/;"	s
_GLFWcontextWGL	src/wgl_context.h	/^} _GLFWcontextWGL;$/;"	t	typeref:struct:_GLFWcontextWGL
_GLFWctxconfig	src/internal.h	/^struct _GLFWctxconfig$/;"	s
_GLFWctxconfig	src/internal.h	/^typedef struct _GLFWctxconfig   _GLFWctxconfig;$/;"	t	typeref:struct:_GLFWctxconfig
_GLFWcursor	src/internal.h	/^struct _GLFWcursor$/;"	s
_GLFWcursor	src/internal.h	/^typedef struct _GLFWcursor      _GLFWcursor;$/;"	t	typeref:struct:_GLFWcursor
_GLFWcursorWayland	src/wl_platform.h	/^typedef struct _GLFWcursorWayland$/;"	s
_GLFWcursorWayland	src/wl_platform.h	/^} _GLFWcursorWayland;$/;"	t	typeref:struct:_GLFWcursorWayland
_GLFWcursorWin32	src/win32_platform.h	/^typedef struct _GLFWcursorWin32$/;"	s
_GLFWcursorWin32	src/win32_platform.h	/^} _GLFWcursorWin32;$/;"	t	typeref:struct:_GLFWcursorWin32
_GLFWcursorX11	src/x11_platform.h	/^typedef struct _GLFWcursorX11$/;"	s
_GLFWcursorX11	src/x11_platform.h	/^} _GLFWcursorX11;$/;"	t	typeref:struct:_GLFWcursorX11
_GLFWdecorationSideWayland	src/wl_platform.h	/^typedef enum _GLFWdecorationSideWayland$/;"	g
_GLFWdecorationSideWayland	src/wl_platform.h	/^} _GLFWdecorationSideWayland;$/;"	t	typeref:enum:_GLFWdecorationSideWayland
_GLFWdecorationWayland	src/wl_platform.h	/^typedef struct _GLFWdecorationWayland$/;"	s
_GLFWdecorationWayland	src/wl_platform.h	/^} _GLFWdecorationWayland;$/;"	t	typeref:struct:_GLFWdecorationWayland
_GLFWdestroycontextfun	src/internal.h	/^typedef void (* _GLFWdestroycontextfun)(_GLFWwindow*);$/;"	t	typeref:typename:void (*)(_GLFWwindow *)
_GLFWerror	src/internal.h	/^struct _GLFWerror$/;"	s
_GLFWerror	src/internal.h	/^typedef struct _GLFWerror       _GLFWerror;$/;"	t	typeref:struct:_GLFWerror
_GLFWextensionsupportedfun	src/internal.h	/^typedef int (* _GLFWextensionsupportedfun)(const char*);$/;"	t	typeref:typename:int (*)(const char *)
_GLFWfbconfig	src/internal.h	/^struct _GLFWfbconfig$/;"	s
_GLFWfbconfig	src/internal.h	/^typedef struct _GLFWfbconfig    _GLFWfbconfig;$/;"	t	typeref:struct:_GLFWfbconfig
_GLFWgetprocaddressfun	src/internal.h	/^typedef GLFWglproc (* _GLFWgetprocaddressfun)(const char*);$/;"	t	typeref:typename:GLFWglproc (*)(const char *)
_GLFWinitconfig	src/internal.h	/^struct _GLFWinitconfig$/;"	s
_GLFWinitconfig	src/internal.h	/^typedef struct _GLFWinitconfig  _GLFWinitconfig;$/;"	t	typeref:struct:_GLFWinitconfig
_GLFWjoyelementNS	src/cocoa_joystick.m	/^typedef struct _GLFWjoyelementNS$/;"	s
_GLFWjoyelementNS	src/cocoa_joystick.m	/^} _GLFWjoyelementNS;$/;"	t	struct:_GLFWjoyelementNS
_GLFWjoyobjectWin32	src/win32_joystick.h	/^typedef struct _GLFWjoyobjectWin32$/;"	s
_GLFWjoyobjectWin32	src/win32_joystick.h	/^} _GLFWjoyobjectWin32;$/;"	t	typeref:struct:_GLFWjoyobjectWin32
_GLFWjoystick	src/internal.h	/^struct _GLFWjoystick$/;"	s
_GLFWjoystick	src/internal.h	/^typedef struct _GLFWjoystick    _GLFWjoystick;$/;"	t	typeref:struct:_GLFWjoystick
_GLFWjoystickLinux	src/linux_joystick.h	/^typedef struct _GLFWjoystickLinux$/;"	s
_GLFWjoystickLinux	src/linux_joystick.h	/^} _GLFWjoystickLinux;$/;"	t	typeref:struct:_GLFWjoystickLinux
_GLFWjoystickNS	src/cocoa_joystick.h	/^typedef struct _GLFWjoystickNS$/;"	s
_GLFWjoystickNS	src/cocoa_joystick.h	/^} _GLFWjoystickNS;$/;"	t	typeref:struct:_GLFWjoystickNS
_GLFWjoystickWin32	src/win32_joystick.h	/^typedef struct _GLFWjoystickWin32$/;"	s
_GLFWjoystickWin32	src/win32_joystick.h	/^} _GLFWjoystickWin32;$/;"	t	typeref:struct:_GLFWjoystickWin32
_GLFWlibrary	src/internal.h	/^struct _GLFWlibrary$/;"	s
_GLFWlibrary	src/internal.h	/^typedef struct _GLFWlibrary     _GLFWlibrary;$/;"	t	typeref:struct:_GLFWlibrary
_GLFWlibraryEGL	src/egl_context.h	/^typedef struct _GLFWlibraryEGL$/;"	s
_GLFWlibraryEGL	src/egl_context.h	/^} _GLFWlibraryEGL;$/;"	t	typeref:struct:_GLFWlibraryEGL
_GLFWlibraryGLX	src/glx_context.h	/^typedef struct _GLFWlibraryGLX$/;"	s
_GLFWlibraryGLX	src/glx_context.h	/^} _GLFWlibraryGLX;$/;"	t	typeref:struct:_GLFWlibraryGLX
_GLFWlibraryLinux	src/linux_joystick.h	/^typedef struct _GLFWlibraryLinux$/;"	s
_GLFWlibraryLinux	src/linux_joystick.h	/^} _GLFWlibraryLinux;$/;"	t	typeref:struct:_GLFWlibraryLinux
_GLFWlibraryNSGL	src/nsgl_context.h	/^typedef struct _GLFWlibraryNSGL$/;"	s
_GLFWlibraryNSGL	src/nsgl_context.h	/^} _GLFWlibraryNSGL;$/;"	t	typeref:struct:_GLFWlibraryNSGL
_GLFWlibraryOSMesa	src/osmesa_context.h	/^typedef struct _GLFWlibraryOSMesa$/;"	s
_GLFWlibraryOSMesa	src/osmesa_context.h	/^} _GLFWlibraryOSMesa;$/;"	t	typeref:struct:_GLFWlibraryOSMesa
_GLFWlibraryWGL	src/wgl_context.h	/^typedef struct _GLFWlibraryWGL$/;"	s
_GLFWlibraryWGL	src/wgl_context.h	/^} _GLFWlibraryWGL;$/;"	t	typeref:struct:_GLFWlibraryWGL
_GLFWlibraryWayland	src/wl_platform.h	/^typedef struct _GLFWlibraryWayland$/;"	s
_GLFWlibraryWayland	src/wl_platform.h	/^} _GLFWlibraryWayland;$/;"	t	typeref:struct:_GLFWlibraryWayland
_GLFWlibraryWin32	src/win32_platform.h	/^typedef struct _GLFWlibraryWin32$/;"	s
_GLFWlibraryWin32	src/win32_platform.h	/^} _GLFWlibraryWin32;$/;"	t	typeref:struct:_GLFWlibraryWin32
_GLFWlibraryX11	src/x11_platform.h	/^typedef struct _GLFWlibraryX11$/;"	s
_GLFWlibraryX11	src/x11_platform.h	/^} _GLFWlibraryX11;$/;"	t	typeref:struct:_GLFWlibraryX11
_GLFWmakecontextcurrentfun	src/internal.h	/^typedef void (* _GLFWmakecontextcurrentfun)(_GLFWwindow*);$/;"	t	typeref:typename:void (*)(_GLFWwindow *)
_GLFWmapelement	src/internal.h	/^struct _GLFWmapelement$/;"	s
_GLFWmapelement	src/internal.h	/^typedef struct _GLFWmapelement  _GLFWmapelement;$/;"	t	typeref:struct:_GLFWmapelement
_GLFWmapping	src/internal.h	/^struct _GLFWmapping$/;"	s
_GLFWmapping	src/internal.h	/^typedef struct _GLFWmapping     _GLFWmapping;$/;"	t	typeref:struct:_GLFWmapping
_GLFWmonitor	src/internal.h	/^struct _GLFWmonitor$/;"	s
_GLFWmonitor	src/internal.h	/^typedef struct _GLFWmonitor     _GLFWmonitor;$/;"	t	typeref:struct:_GLFWmonitor
_GLFWmonitorNS	src/cocoa_platform.h	/^typedef struct _GLFWmonitorNS$/;"	s
_GLFWmonitorNS	src/cocoa_platform.h	/^} _GLFWmonitorNS;$/;"	t	struct:_GLFWmonitorNS
_GLFWmonitorWayland	src/wl_platform.h	/^typedef struct _GLFWmonitorWayland$/;"	s
_GLFWmonitorWayland	src/wl_platform.h	/^} _GLFWmonitorWayland;$/;"	t	typeref:struct:_GLFWmonitorWayland
_GLFWmonitorWin32	src/win32_platform.h	/^typedef struct _GLFWmonitorWin32$/;"	s
_GLFWmonitorWin32	src/win32_platform.h	/^} _GLFWmonitorWin32;$/;"	t	typeref:struct:_GLFWmonitorWin32
_GLFWmonitorX11	src/x11_platform.h	/^typedef struct _GLFWmonitorX11$/;"	s
_GLFWmonitorX11	src/x11_platform.h	/^} _GLFWmonitorX11;$/;"	t	typeref:struct:_GLFWmonitorX11
_GLFWmutex	src/internal.h	/^struct _GLFWmutex$/;"	s
_GLFWmutex	src/internal.h	/^typedef struct _GLFWmutex       _GLFWmutex;$/;"	t	typeref:struct:_GLFWmutex
_GLFWmutexPOSIX	src/posix_thread.h	/^typedef struct _GLFWmutexPOSIX$/;"	s
_GLFWmutexPOSIX	src/posix_thread.h	/^} _GLFWmutexPOSIX;$/;"	t	typeref:struct:_GLFWmutexPOSIX
_GLFWmutexWin32	src/win32_platform.h	/^typedef struct _GLFWmutexWin32$/;"	s
_GLFWmutexWin32	src/win32_platform.h	/^} _GLFWmutexWin32;$/;"	t	typeref:struct:_GLFWmutexWin32
_GLFWobjenumWin32	src/win32_joystick.c	/^typedef struct _GLFWobjenumWin32$/;"	s	file:
_GLFWobjenumWin32	src/win32_joystick.c	/^} _GLFWobjenumWin32;$/;"	t	typeref:struct:_GLFWobjenumWin32	file:
_GLFWswapbuffersfun	src/internal.h	/^typedef void (* _GLFWswapbuffersfun)(_GLFWwindow*);$/;"	t	typeref:typename:void (*)(_GLFWwindow *)
_GLFWswapintervalfun	src/internal.h	/^typedef void (* _GLFWswapintervalfun)(int);$/;"	t	typeref:typename:void (*)(int)
_GLFWtimerNS	src/cocoa_platform.h	/^typedef struct _GLFWtimerNS$/;"	s
_GLFWtimerNS	src/cocoa_platform.h	/^} _GLFWtimerNS;$/;"	t	struct:_GLFWtimerNS
_GLFWtimerPOSIX	src/posix_time.h	/^typedef struct _GLFWtimerPOSIX$/;"	s
_GLFWtimerPOSIX	src/posix_time.h	/^} _GLFWtimerPOSIX;$/;"	t	typeref:struct:_GLFWtimerPOSIX
_GLFWtimerWin32	src/win32_platform.h	/^typedef struct _GLFWtimerWin32$/;"	s
_GLFWtimerWin32	src/win32_platform.h	/^} _GLFWtimerWin32;$/;"	t	typeref:struct:_GLFWtimerWin32
_GLFWtls	src/internal.h	/^struct _GLFWtls$/;"	s
_GLFWtls	src/internal.h	/^typedef struct _GLFWtls         _GLFWtls;$/;"	t	typeref:struct:_GLFWtls
_GLFWtlsPOSIX	src/posix_thread.h	/^typedef struct _GLFWtlsPOSIX$/;"	s
_GLFWtlsPOSIX	src/posix_thread.h	/^} _GLFWtlsPOSIX;$/;"	t	typeref:struct:_GLFWtlsPOSIX
_GLFWtlsWin32	src/win32_platform.h	/^typedef struct _GLFWtlsWin32$/;"	s
_GLFWtlsWin32	src/win32_platform.h	/^} _GLFWtlsWin32;$/;"	t	typeref:struct:_GLFWtlsWin32
_GLFWwindow	src/internal.h	/^struct _GLFWwindow$/;"	s
_GLFWwindow	src/internal.h	/^typedef struct _GLFWwindow      _GLFWwindow;$/;"	t	typeref:struct:_GLFWwindow
_GLFWwindowNS	src/cocoa_platform.h	/^typedef struct _GLFWwindowNS$/;"	s
_GLFWwindowNS	src/cocoa_platform.h	/^} _GLFWwindowNS;$/;"	t	struct:_GLFWwindowNS
_GLFWwindowNull	src/null_platform.h	/^typedef struct _GLFWwindowNull$/;"	s
_GLFWwindowNull	src/null_platform.h	/^} _GLFWwindowNull;$/;"	t	typeref:struct:_GLFWwindowNull
_GLFWwindowWayland	src/wl_platform.h	/^typedef struct _GLFWwindowWayland$/;"	s
_GLFWwindowWayland	src/wl_platform.h	/^} _GLFWwindowWayland;$/;"	t	typeref:struct:_GLFWwindowWayland
_GLFWwindowWin32	src/win32_platform.h	/^typedef struct _GLFWwindowWin32$/;"	s
_GLFWwindowWin32	src/win32_platform.h	/^} _GLFWwindowWin32;$/;"	t	typeref:struct:_GLFWwindowWin32
_GLFWwindowX11	src/x11_platform.h	/^typedef struct _GLFWwindowX11$/;"	s
_GLFWwindowX11	src/x11_platform.h	/^} _GLFWwindowX11;$/;"	t	typeref:struct:_GLFWwindowX11
_GLFWwndconfig	src/internal.h	/^struct _GLFWwndconfig$/;"	s
_GLFWwndconfig	src/internal.h	/^typedef struct _GLFWwndconfig   _GLFWwndconfig;$/;"	t	typeref:struct:_GLFWwndconfig
_GNU_SOURCE	deps/tinycthread.h	/^    #define _GNU_SOURCE$/;"	d
_GNU_SOURCE	src/wl_window.c	/^#define _GNU_SOURCE$/;"	d	file:
_MSC_STDINT_H_	deps/vs2008/stdint.h	/^#define _MSC_STDINT_H_$/;"	d
_NET_WM_STATE_ADD	src/x11_window.c	/^#define _NET_WM_STATE_ADD /;"	d	file:
_NET_WM_STATE_REMOVE	src/x11_window.c	/^#define _NET_WM_STATE_REMOVE /;"	d	file:
_NET_WM_STATE_TOGGLE	src/x11_window.c	/^#define _NET_WM_STATE_TOGGLE /;"	d	file:
_POSIX_C_SOURCE	deps/tinycthread.h	/^    #define _POSIX_C_SOURCE /;"	d
_POSIX_C_SOURCE	src/posix_time.c	/^#define _POSIX_C_SOURCE /;"	d	file:
_POSIX_C_SOURCE	src/wl_init.c	/^#define _POSIX_C_SOURCE /;"	d	file:
_STRUCT_NAME	deps/mingw/_mingw_dxhelper.h	/^#define _STRUCT_NAME(/;"	d
_TINYCTHREAD_H_	deps/tinycthread.h	/^#define _TINYCTHREAD_H_$/;"	d
_TTHREAD_EMULATE_CLOCK_GETTIME_	deps/tinycthread.h	/^#define _TTHREAD_EMULATE_CLOCK_GETTIME_$/;"	d
_TTHREAD_PLATFORM_DEFINED_	deps/tinycthread.h	/^  #define _TTHREAD_PLATFORM_DEFINED_$/;"	d
_TTHREAD_POSIX_	deps/tinycthread.h	/^    #define _TTHREAD_POSIX_$/;"	d
_TTHREAD_WIN32_	deps/tinycthread.h	/^    #define _TTHREAD_WIN32_$/;"	d
_Thread_local	deps/tinycthread.h	/^  #define _Thread_local /;"	d
_UNION_NAME	deps/mingw/_mingw_dxhelper.h	/^#define _UNION_NAME(/;"	d
_USE_MATH_DEFINES	examples/boing.c	/^ #define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	examples/gears.c	/^ #define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	examples/particles.c	/^ #define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	examples/splitview.c	/^ #define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	examples/wave.c	/^ #define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	tests/cursor.c	/^ #define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	tests/msaa.c	/^ #define _USE_MATH_DEFINES$/;"	d	file:
_W64	deps/vs2008/stdint.h	/^#     define _W64 /;"	d
_W64	deps/vs2008/stdint.h	/^#     define _W64$/;"	d
_WIN32	include/GLFW/glfw3.h	/^ #define _WIN32$/;"	d
_WIN32_WINNT	src/win32_platform.h	/^ #define _WIN32_WINNT /;"	d
_WIN32_WINNT_WIN8	src/win32_platform.h	/^ #define _WIN32_WINNT_WIN8 /;"	d
_WIN32_WINNT_WINBLUE	src/win32_platform.h	/^ #define _WIN32_WINNT_WINBLUE /;"	d
_XINPUT_BATTERY_INFORMATION	deps/mingw/xinput.h	/^typedef struct _XINPUT_BATTERY_INFORMATION$/;"	s
_XINPUT_CAPABILITIES	deps/mingw/xinput.h	/^typedef struct _XINPUT_CAPABILITIES {$/;"	s
_XINPUT_GAMEPAD	deps/mingw/xinput.h	/^typedef struct _XINPUT_GAMEPAD {$/;"	s
_XINPUT_KEYSTROKE	deps/mingw/xinput.h	/^typedef struct _XINPUT_KEYSTROKE {$/;"	s
_XINPUT_STATE	deps/mingw/xinput.h	/^typedef struct _XINPUT_STATE {$/;"	s
_XINPUT_VIBRATION	deps/mingw/xinput.h	/^typedef struct _XINPUT_VIBRATION {$/;"	s
_XOPEN_SOURCE	deps/tinycthread.h	/^    #define _XOPEN_SOURCE /;"	d
__ANONYMOUS_DEFINED	deps/mingw/_mingw_dxhelper.h	/^#define __ANONYMOUS_DEFINED$/;"	d
__DINPUT_INCLUDED__	deps/mingw/dinput.h	/^#define __DINPUT_INCLUDED__$/;"	d
__GLXextproc	src/glx_context.h	/^typedef void (*__GLXextproc)(void);$/;"	t	typeref:typename:void (*)(void)
__GNU_EXTENSION	deps/mingw/_mingw_dxhelper.h	/^#define __GNU_EXTENSION	/;"	d
__GNU_EXTENSION	deps/mingw/_mingw_dxhelper.h	/^#define __GNU_EXTENSION$/;"	d
__UNDEF_LEAN_AND_MEAN	deps/tinycthread.h	/^    #define __UNDEF_LEAN_AND_MEAN$/;"	d
__WINE_XINPUT_H	deps/mingw/xinput.h	/^#define __WINE_XINPUT_H$/;"	d
__anon079e76470103	deps/glad/khrplatform.h	/^typedef enum {$/;"	g
__anon16ba099c0103	tests/inputlag.c	/^enum { cursor_sync_query, cursor_input_message } cursor_method = cursor_sync_query;$/;"	g	file:
__anon32ec62590108	src/wl_platform.h	/^    struct {$/;"	s	struct:_GLFWwindowWayland
__anon32ec62590208	src/wl_platform.h	/^    struct {$/;"	s	struct:_GLFWwindowWayland
__anon32ec62590308	src/wl_platform.h	/^    struct {$/;"	s	struct:_GLFWwindowWayland
__anon32ec62590408	src/wl_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryWayland
__anon32ec62590508	src/wl_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryWayland
__anon32ec62590608	src/wl_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryWayland
__anon51ee5e7e0108	src/x11_window.c	/^    struct {$/;"	s	function:getWindowState	file:
__anon51ee5e7e0208	src/x11_window.c	/^    {$/;"	s	function:_glfwPlatformSetWindowDecorated	file:
__anon62203f4b0108	examples/particles.c	/^{$/;"	s	file:
__anon62203f4b0208	examples/particles.c	/^{$/;"	s	file:
__anon62203f4b0308	examples/particles.c	/^struct {$/;"	s	file:
__anon62203f4b0408	examples/particles.c	/^typedef struct {$/;"	s	file:
__anon622bd5890108	src/win32_platform.h	/^{$/;"	s
__anon622bd5890208	src/win32_platform.h	/^{$/;"	s
__anon622bd5890303	src/win32_platform.h	/^{$/;"	g
__anon622bd5890403	src/win32_platform.h	/^{$/;"	g
__anon622bd5890508	src/win32_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryWin32
__anon622bd5890608	src/win32_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryWin32
__anon622bd5890708	src/win32_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryWin32
__anon622bd5890808	src/win32_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryWin32
__anon622bd5890908	src/win32_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryWin32
__anon622bd5890a08	src/win32_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryWin32
__anon622bd5890b08	src/win32_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryWin32
__anon6b8c80140103	tests/glfwinfo.c	/^    enum { CLIENT, CONTEXT, BEHAVIOR, DEBUG_CONTEXT, FORWARD, HELP,$/;"	g	function:main	file:
__anon6fa524230108	tests/threads.c	/^{$/;"	s	file:
__anon79ddf3cd0108	tests/events.c	/^{$/;"	s	file:
__anon830d96b00108	src/x11_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryX11
__anon830d96b00208	src/x11_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryX11
__anon830d96b00308	src/x11_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryX11
__anon830d96b00408	src/x11_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryX11
__anon830d96b00508	src/x11_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryX11
__anon830d96b00608	src/x11_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryX11
__anon830d96b00708	src/x11_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryX11
__anon830d96b00808	src/x11_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryX11
__anon830d96b00908	src/x11_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryX11
__anon830d96b00a08	src/x11_platform.h	/^    struct {$/;"	s	struct:_GLFWlibraryX11
__anon8425f2a30108	tests/windows.c	/^{$/;"	s	file:
__anon8f005edb010a	deps/mingw/dinput.h	/^	__GNU_EXTENSION union {$/;"	u	struct:_DIACTIONA
__anon8f005edb020a	deps/mingw/dinput.h	/^	__GNU_EXTENSION union {$/;"	u	struct:_DIACTIONW
__anon92fdd8d00108	deps/tinycthread.c	/^typedef struct {$/;"	s	file:
__anon92fdd8d50108	deps/tinycthread.h	/^typedef struct {$/;"	s
__anon92fdd8d50208	deps/tinycthread.h	/^typedef struct {$/;"	s
__anon955e808b0108	deps/stb_image_write.h	/^{$/;"	s
__anona0faa0af0108	src/internal.h	/^    struct {$/;"	s	struct:_GLFWinitconfig
__anona0faa0af0208	src/internal.h	/^    struct {$/;"	s	struct:_GLFWwndconfig
__anona0faa0af0308	src/internal.h	/^    struct {$/;"	s	struct:_GLFWwndconfig
__anona0faa0af0408	src/internal.h	/^    struct {$/;"	s	struct:_GLFWwndconfig
__anona0faa0af0508	src/internal.h	/^    struct {$/;"	s	struct:_GLFWctxconfig
__anona0faa0af0608	src/internal.h	/^    struct {$/;"	s	struct:_GLFWwindow
__anona0faa0af0708	src/internal.h	/^    struct {$/;"	s	struct:_GLFWlibrary
__anona0faa0af0808	src/internal.h	/^    struct {$/;"	s	struct:_GLFWlibrary
__anona0faa0af0908	src/internal.h	/^    struct {$/;"	s	struct:_GLFWlibrary
__anona0faa0af0a08	src/internal.h	/^    struct {$/;"	s	struct:_GLFWlibrary
__anona860d25d0108	src/input.c	/^    {$/;"	s	function:parseMapping	file:
__anonad2ab9a20108	tests/tearing.c	/^{$/;"	s	file:
__anonca7851080103	deps/nuklear.h	/^enum {nk_false, nk_true};$/;"	g
__anonca785108020a	deps/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	u
__anonca7851080303	deps/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	g	struct:nk_helper
__anonca7851080403	deps/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	g	struct:nk_helper
__anonca7851080503	deps/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	g	struct:nk_alignof
__anonca7851080603	deps/nuklear.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	g
__anonca785108070a	deps/nuklear.h	/^    union {nk_uint i; float f;} conv = {0};$/;"	u	function:nk_inv_sqrt
__anonca785108080a	deps/nuklear.h	/^    union {const nk_uint *i; const nk_byte *b;} conv = {0};$/;"	u	function:nk_murmur_hash
__anonca7851080903	deps/nuklear.h	/^enum {$/;"	g
__anonca7851080a03	deps/nuklear.h	/^enum { \/* platformID *\/$/;"	g
__anonca7851080b03	deps/nuklear.h	/^enum { \/* encodingID for NK_TT_PLATFORM_ID_UNICODE *\/$/;"	g
__anonca7851080c03	deps/nuklear.h	/^enum { \/* encodingID for NK_TT_PLATFORM_ID_MICROSOFT *\/$/;"	g
__anonca7851080d03	deps/nuklear.h	/^enum { \/* encodingID for NK_TT_PLATFORM_ID_MAC; same as Script Manager codes *\/$/;"	g
__anonca7851080e03	deps/nuklear.h	/^enum { \/* languageID for NK_TT_PLATFORM_ID_MICROSOFT; same as LCID... *\/$/;"	g
__anonca7851080f03	deps/nuklear.h	/^enum { \/* languageID for NK_TT_PLATFORM_ID_MAC *\/$/;"	g
__anond32b2c930103	examples/boing.c	/^typedef enum { DRAW_BALL, DRAW_BALL_SHADOW } DRAW_BALL_ENUM;$/;"	g	file:
__anond32b2c930208	examples/boing.c	/^typedef struct {float x; float y; float z;} vertex_t;$/;"	s	file:
__anondab0972c0108	tests/triangle-vulkan.c	/^typedef struct {$/;"	s	file:
__anondab0972c0208	tests/triangle-vulkan.c	/^    struct {$/;"	s	struct:demo	file:
__anondab0972c0308	tests/triangle-vulkan.c	/^    struct {$/;"	s	struct:demo	file:
__anone38272df0108	examples/offscreen.c	/^{$/;"	s	file:
__gl_h_	deps/glad/gl.h	/^#define __gl_h_ /;"	d
__khrplatform_h_	deps/glad/khrplatform.h	/^#define __khrplatform_h_$/;"	d
_cnd_timedwait_win32	deps/tinycthread.c	/^static int _cnd_timedwait_win32(cnd_t *cond, mtx_t *mtx, DWORD timeout)$/;"	f	typeref:typename:int	file:
_glfw	src/init.c	/^_GLFWlibrary _glfw = { GLFW_FALSE };$/;"	v	typeref:typename:_GLFWlibrary
_glfw3_h_	include/GLFW/glfw3.h	/^#define _glfw3_h_$/;"	d
_glfw3_native_h_	include/GLFW/glfw3native.h	/^#define _glfw3_native_h_$/;"	d
_glfwAddOutputWayland	src/wl_monitor.c	/^void _glfwAddOutputWayland(uint32_t name, uint32_t version)$/;"	f	typeref:typename:void
_glfwAllocGammaArrays	src/monitor.c	/^void _glfwAllocGammaArrays(GLFWgammaramp* ramp, unsigned int size)$/;"	f	typeref:typename:void
_glfwAllocJoystick	src/input.c	/^_GLFWjoystick* _glfwAllocJoystick(const char* name,$/;"	f	typeref:typename:_GLFWjoystick *
_glfwAllocMonitor	src/monitor.c	/^_GLFWmonitor* _glfwAllocMonitor(const char* name, int widthMM, int heightMM)$/;"	f	typeref:typename:_GLFWmonitor *
_glfwCenterCursorInContentArea	src/input.c	/^void _glfwCenterCursorInContentArea(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwChooseFBConfig	src/context.c	/^const _GLFWfbconfig* _glfwChooseFBConfig(const _GLFWfbconfig* desired,$/;"	f	typeref:typename:const _GLFWfbconfig *
_glfwChooseVideoMode	src/monitor.c	/^const GLFWvidmode* _glfwChooseVideoMode(_GLFWmonitor* monitor,$/;"	f	typeref:typename:const GLFWvidmode *
_glfwChooseVisualEGL	src/egl_context.c	/^GLFWbool _glfwChooseVisualEGL(const _GLFWwndconfig* wndconfig,$/;"	f	typeref:typename:GLFWbool
_glfwChooseVisualGLX	src/glx_context.c	/^GLFWbool _glfwChooseVisualGLX(const _GLFWwndconfig* wndconfig,$/;"	f	typeref:typename:GLFWbool
_glfwCompareVideoModes	src/monitor.c	/^int _glfwCompareVideoModes(const GLFWvidmode* fm, const GLFWvidmode* sm)$/;"	f	typeref:typename:int
_glfwCreateContextEGL	src/egl_context.c	/^GLFWbool _glfwCreateContextEGL(_GLFWwindow* window,$/;"	f	typeref:typename:GLFWbool
_glfwCreateContextGLX	src/glx_context.c	/^GLFWbool _glfwCreateContextGLX(_GLFWwindow* window,$/;"	f	typeref:typename:GLFWbool
_glfwCreateContextNSGL	src/nsgl_context.m	/^GLFWbool _glfwCreateContextNSGL(_GLFWwindow* window,$/;"	f
_glfwCreateContextOSMesa	src/osmesa_context.c	/^GLFWbool _glfwCreateContextOSMesa(_GLFWwindow* window,$/;"	f	typeref:typename:GLFWbool
_glfwCreateContextWGL	src/wgl_context.c	/^GLFWbool _glfwCreateContextWGL(_GLFWwindow* window,$/;"	f	typeref:typename:GLFWbool
_glfwCreateCursorX11	src/x11_init.c	/^Cursor _glfwCreateCursorX11(const GLFWimage* image, int xhot, int yhot)$/;"	f	typeref:typename:Cursor
_glfwCreateUTF8FromWideStringWin32	src/win32_init.c	/^char* _glfwCreateUTF8FromWideStringWin32(const WCHAR* source)$/;"	f	typeref:typename:char *
_glfwCreateWideStringFromUTF8Win32	src/win32_init.c	/^WCHAR* _glfwCreateWideStringFromUTF8Win32(const char* source)$/;"	f	typeref:typename:WCHAR *
_glfwDataFormat	src/win32_joystick.c	/^static const DIDATAFORMAT _glfwDataFormat =$/;"	v	typeref:typename:const DIDATAFORMAT	file:
_glfwDefaultMappings	src/mappings.h	/^const char* _glfwDefaultMappings[] =$/;"	v	typeref:typename:const char * []
_glfwDefaultMappings	src/mappings.h.in	/^const char* _glfwDefaultMappings[] =$/;"	v	typeref:typename:const char * []
_glfwDetectJoystickConnectionLinux	src/linux_joystick.c	/^void _glfwDetectJoystickConnectionLinux(void)$/;"	f	typeref:typename:void
_glfwDetectJoystickConnectionWin32	src/win32_joystick.c	/^void _glfwDetectJoystickConnectionWin32(void)$/;"	f	typeref:typename:void
_glfwDetectJoystickDisconnectionWin32	src/win32_joystick.c	/^void _glfwDetectJoystickDisconnectionWin32(void)$/;"	f	typeref:typename:void
_glfwErrorCallback	src/init.c	/^static GLFWerrorfun _glfwErrorCallback;$/;"	v	typeref:typename:GLFWerrorfun	file:
_glfwFreeGammaArrays	src/monitor.c	/^void _glfwFreeGammaArrays(GLFWgammaramp* ramp)$/;"	f	typeref:typename:void
_glfwFreeJoystick	src/input.c	/^void _glfwFreeJoystick(_GLFWjoystick* js)$/;"	f	typeref:typename:void
_glfwFreeMonitor	src/monitor.c	/^void _glfwFreeMonitor(_GLFWmonitor* monitor)$/;"	f	typeref:typename:void
_glfwGetMonitorContentScaleWin32	src/win32_monitor.c	/^void _glfwGetMonitorContentScaleWin32(HMONITOR handle, float* xscale, float* yscale)$/;"	f	typeref:typename:void
_glfwGetVulkanResultString	src/vulkan.c	/^const char* _glfwGetVulkanResultString(VkResult result)$/;"	f	typeref:typename:const char *
_glfwGetWindowPropertyX11	src/x11_window.c	/^unsigned long _glfwGetWindowPropertyX11(Window window,$/;"	f	typeref:typename:unsigned long
_glfwGrabErrorHandlerX11	src/x11_init.c	/^void _glfwGrabErrorHandlerX11(void)$/;"	f	typeref:typename:void
_glfwInitEGL	src/egl_context.c	/^GLFWbool _glfwInitEGL(void)$/;"	f	typeref:typename:GLFWbool
_glfwInitGLX	src/glx_context.c	/^GLFWbool _glfwInitGLX(void)$/;"	f	typeref:typename:GLFWbool
_glfwInitHints	src/init.c	/^static _GLFWinitconfig _glfwInitHints =$/;"	v	typeref:typename:_GLFWinitconfig	file:
_glfwInitJoysticksLinux	src/linux_joystick.c	/^GLFWbool _glfwInitJoysticksLinux(void)$/;"	f	typeref:typename:GLFWbool
_glfwInitJoysticksNS	src/cocoa_joystick.m	/^void _glfwInitJoysticksNS(void)$/;"	f	struct:_GLFWjoyelementNS
_glfwInitJoysticksWin32	src/win32_joystick.c	/^void _glfwInitJoysticksWin32(void)$/;"	f	typeref:typename:void
_glfwInitNSGL	src/nsgl_context.m	/^GLFWbool _glfwInitNSGL(void)$/;"	f
_glfwInitOSMesa	src/osmesa_context.c	/^GLFWbool _glfwInitOSMesa(void)$/;"	f	typeref:typename:GLFWbool
_glfwInitTimerNS	src/cocoa_platform.h	/^void _glfwInitTimerNS(void);$/;"	f	struct:_GLFWtimerNS
_glfwInitTimerNS	src/cocoa_time.c	/^void _glfwInitTimerNS(void)$/;"	f	typeref:typename:void
_glfwInitTimerPOSIX	src/posix_time.c	/^void _glfwInitTimerPOSIX(void)$/;"	f	typeref:typename:void
_glfwInitTimerWin32	src/win32_time.c	/^void _glfwInitTimerWin32(void)$/;"	f	typeref:typename:void
_glfwInitVulkan	src/vulkan.c	/^GLFWbool _glfwInitVulkan(int mode)$/;"	f	typeref:typename:GLFWbool
_glfwInitWGL	src/wgl_context.c	/^GLFWbool _glfwInitWGL(void)$/;"	f	typeref:typename:GLFWbool
_glfwInputChar	src/input.c	/^void _glfwInputChar(_GLFWwindow* window, unsigned int codepoint, int mods, GLFWbool plain)$/;"	f	typeref:typename:void
_glfwInputCursorEnter	src/input.c	/^void _glfwInputCursorEnter(_GLFWwindow* window, GLFWbool entered)$/;"	f	typeref:typename:void
_glfwInputCursorPos	src/input.c	/^void _glfwInputCursorPos(_GLFWwindow* window, double xpos, double ypos)$/;"	f	typeref:typename:void
_glfwInputDrop	src/input.c	/^void _glfwInputDrop(_GLFWwindow* window, int count, const char** paths)$/;"	f	typeref:typename:void
_glfwInputError	src/init.c	/^void _glfwInputError(int code, const char* format, ...)$/;"	f	typeref:typename:void
_glfwInputErrorWin32	src/win32_init.c	/^void _glfwInputErrorWin32(int error, const char* description)$/;"	f	typeref:typename:void
_glfwInputErrorX11	src/x11_init.c	/^void _glfwInputErrorX11(int error, const char* message)$/;"	f	typeref:typename:void
_glfwInputFramebufferSize	src/window.c	/^void _glfwInputFramebufferSize(_GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void
_glfwInputJoystick	src/input.c	/^void _glfwInputJoystick(_GLFWjoystick* js, int event)$/;"	f	typeref:typename:void
_glfwInputJoystickAxis	src/input.c	/^void _glfwInputJoystickAxis(_GLFWjoystick* js, int axis, float value)$/;"	f	typeref:typename:void
_glfwInputJoystickButton	src/input.c	/^void _glfwInputJoystickButton(_GLFWjoystick* js, int button, char value)$/;"	f	typeref:typename:void
_glfwInputJoystickHat	src/input.c	/^void _glfwInputJoystickHat(_GLFWjoystick* js, int hat, char value)$/;"	f	typeref:typename:void
_glfwInputKey	src/input.c	/^void _glfwInputKey(_GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void
_glfwInputMonitor	src/monitor.c	/^void _glfwInputMonitor(_GLFWmonitor* monitor, int action, int placement)$/;"	f	typeref:typename:void
_glfwInputMonitorWindow	src/monitor.c	/^void _glfwInputMonitorWindow(_GLFWmonitor* monitor, _GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwInputMouseClick	src/input.c	/^void _glfwInputMouseClick(_GLFWwindow* window, int button, int action, int mods)$/;"	f	typeref:typename:void
_glfwInputScroll	src/input.c	/^void _glfwInputScroll(_GLFWwindow* window, double xoffset, double yoffset)$/;"	f	typeref:typename:void
_glfwInputWindowCloseRequest	src/window.c	/^void _glfwInputWindowCloseRequest(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwInputWindowContentScale	src/window.c	/^void _glfwInputWindowContentScale(_GLFWwindow* window, float xscale, float yscale)$/;"	f	typeref:typename:void
_glfwInputWindowDamage	src/window.c	/^void _glfwInputWindowDamage(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwInputWindowFocus	src/window.c	/^void _glfwInputWindowFocus(_GLFWwindow* window, GLFWbool focused)$/;"	f	typeref:typename:void
_glfwInputWindowIconify	src/window.c	/^void _glfwInputWindowIconify(_GLFWwindow* window, GLFWbool iconified)$/;"	f	typeref:typename:void
_glfwInputWindowMaximize	src/window.c	/^void _glfwInputWindowMaximize(_GLFWwindow* window, GLFWbool maximized)$/;"	f	typeref:typename:void
_glfwInputWindowMonitor	src/window.c	/^void _glfwInputWindowMonitor(_GLFWwindow* window, _GLFWmonitor* monitor)$/;"	f	typeref:typename:void
_glfwInputWindowPos	src/window.c	/^void _glfwInputWindowPos(_GLFWwindow* window, int x, int y)$/;"	f	typeref:typename:void
_glfwInputWindowSize	src/window.c	/^void _glfwInputWindowSize(_GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void
_glfwIsValidContextConfig	src/context.c	/^GLFWbool _glfwIsValidContextConfig(const _GLFWctxconfig* ctxconfig)$/;"	f	typeref:typename:GLFWbool
_glfwIsVisualTransparentX11	src/x11_window.c	/^GLFWbool _glfwIsVisualTransparentX11(Visual* visual)$/;"	f	typeref:typename:GLFWbool
_glfwIsWindows10AnniversaryUpdateOrGreaterWin32	src/win32_platform.h	/^#define _glfwIsWindows10AnniversaryUpdateOrGreaterWin32(/;"	d
_glfwIsWindows10BuildOrGreaterWin32	src/win32_init.c	/^BOOL _glfwIsWindows10BuildOrGreaterWin32(WORD build)$/;"	f	typeref:typename:BOOL
_glfwIsWindows10CreatorsUpdateOrGreaterWin32	src/win32_platform.h	/^#define _glfwIsWindows10CreatorsUpdateOrGreaterWin32(/;"	d
_glfwIsWindowsVersionOrGreaterWin32	src/win32_init.c	/^BOOL _glfwIsWindowsVersionOrGreaterWin32(WORD major, WORD minor, WORD sp)$/;"	f	typeref:typename:BOOL
_glfwKeySym2Unicode	src/xkb_unicode.c	/^long _glfwKeySym2Unicode(unsigned int keysym)$/;"	f	typeref:typename:long
_glfwLoadLocalVulkanLoaderNS	src/cocoa_init.m	/^void* _glfwLoadLocalVulkanLoaderNS(void)$/;"	f
_glfwLoadLocalVulkanLoaderNS	src/cocoa_platform.h	/^void* _glfwLoadLocalVulkanLoaderNS(void);$/;"	f	struct:_GLFWtimerNS
_glfwMainThreadError	src/init.c	/^static _GLFWerror _glfwMainThreadError;$/;"	v	typeref:typename:_GLFWerror	file:
_glfwObjectDataFormats	src/win32_joystick.c	/^static DIOBJECTDATAFORMAT _glfwObjectDataFormats[] =$/;"	v	typeref:typename:DIOBJECTDATAFORMAT[]	file:
_glfwPlatformCreateCursor	src/cocoa_window.m	/^int _glfwPlatformCreateCursor(_GLFWcursor* cursor,$/;"	f
_glfwPlatformCreateCursor	src/null_window.c	/^int _glfwPlatformCreateCursor(_GLFWcursor* cursor,$/;"	f	typeref:typename:int
_glfwPlatformCreateCursor	src/win32_window.c	/^int _glfwPlatformCreateCursor(_GLFWcursor* cursor,$/;"	f	typeref:typename:int
_glfwPlatformCreateCursor	src/wl_window.c	/^int _glfwPlatformCreateCursor(_GLFWcursor* cursor,$/;"	f	typeref:typename:int
_glfwPlatformCreateCursor	src/x11_window.c	/^int _glfwPlatformCreateCursor(_GLFWcursor* cursor,$/;"	f	typeref:typename:int
_glfwPlatformCreateMutex	src/posix_thread.c	/^GLFWbool _glfwPlatformCreateMutex(_GLFWmutex* mutex)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformCreateMutex	src/win32_thread.c	/^GLFWbool _glfwPlatformCreateMutex(_GLFWmutex* mutex)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformCreateStandardCursor	src/cocoa_window.m	/^int _glfwPlatformCreateStandardCursor(_GLFWcursor* cursor, int shape)$/;"	f
_glfwPlatformCreateStandardCursor	src/null_window.c	/^int _glfwPlatformCreateStandardCursor(_GLFWcursor* cursor, int shape)$/;"	f	typeref:typename:int
_glfwPlatformCreateStandardCursor	src/win32_window.c	/^int _glfwPlatformCreateStandardCursor(_GLFWcursor* cursor, int shape)$/;"	f	typeref:typename:int
_glfwPlatformCreateStandardCursor	src/wl_window.c	/^int _glfwPlatformCreateStandardCursor(_GLFWcursor* cursor, int shape)$/;"	f	typeref:typename:int
_glfwPlatformCreateStandardCursor	src/x11_window.c	/^int _glfwPlatformCreateStandardCursor(_GLFWcursor* cursor, int shape)$/;"	f	typeref:typename:int
_glfwPlatformCreateTls	src/posix_thread.c	/^GLFWbool _glfwPlatformCreateTls(_GLFWtls* tls)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformCreateTls	src/win32_thread.c	/^GLFWbool _glfwPlatformCreateTls(_GLFWtls* tls)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformCreateWindow	src/cocoa_window.m	/^int _glfwPlatformCreateWindow(_GLFWwindow* window,$/;"	f
_glfwPlatformCreateWindow	src/null_window.c	/^int _glfwPlatformCreateWindow(_GLFWwindow* window,$/;"	f	typeref:typename:int
_glfwPlatformCreateWindow	src/win32_window.c	/^int _glfwPlatformCreateWindow(_GLFWwindow* window,$/;"	f	typeref:typename:int
_glfwPlatformCreateWindow	src/wl_window.c	/^int _glfwPlatformCreateWindow(_GLFWwindow* window,$/;"	f	typeref:typename:int
_glfwPlatformCreateWindow	src/x11_window.c	/^int _glfwPlatformCreateWindow(_GLFWwindow* window,$/;"	f	typeref:typename:int
_glfwPlatformCreateWindowSurface	src/cocoa_window.m	/^VkResult _glfwPlatformCreateWindowSurface(VkInstance instance,$/;"	f
_glfwPlatformCreateWindowSurface	src/null_window.c	/^VkResult _glfwPlatformCreateWindowSurface(VkInstance instance,$/;"	f	typeref:typename:VkResult
_glfwPlatformCreateWindowSurface	src/win32_window.c	/^VkResult _glfwPlatformCreateWindowSurface(VkInstance instance,$/;"	f	typeref:typename:VkResult
_glfwPlatformCreateWindowSurface	src/wl_window.c	/^VkResult _glfwPlatformCreateWindowSurface(VkInstance instance,$/;"	f	typeref:typename:VkResult
_glfwPlatformCreateWindowSurface	src/x11_window.c	/^VkResult _glfwPlatformCreateWindowSurface(VkInstance instance,$/;"	f	typeref:typename:VkResult
_glfwPlatformDestroyCursor	src/cocoa_window.m	/^void _glfwPlatformDestroyCursor(_GLFWcursor* cursor)$/;"	f
_glfwPlatformDestroyCursor	src/null_window.c	/^void _glfwPlatformDestroyCursor(_GLFWcursor* cursor)$/;"	f	typeref:typename:void
_glfwPlatformDestroyCursor	src/win32_window.c	/^void _glfwPlatformDestroyCursor(_GLFWcursor* cursor)$/;"	f	typeref:typename:void
_glfwPlatformDestroyCursor	src/wl_window.c	/^void _glfwPlatformDestroyCursor(_GLFWcursor* cursor)$/;"	f	typeref:typename:void
_glfwPlatformDestroyCursor	src/x11_window.c	/^void _glfwPlatformDestroyCursor(_GLFWcursor* cursor)$/;"	f	typeref:typename:void
_glfwPlatformDestroyMutex	src/posix_thread.c	/^void _glfwPlatformDestroyMutex(_GLFWmutex* mutex)$/;"	f	typeref:typename:void
_glfwPlatformDestroyMutex	src/win32_thread.c	/^void _glfwPlatformDestroyMutex(_GLFWmutex* mutex)$/;"	f	typeref:typename:void
_glfwPlatformDestroyTls	src/posix_thread.c	/^void _glfwPlatformDestroyTls(_GLFWtls* tls)$/;"	f	typeref:typename:void
_glfwPlatformDestroyTls	src/win32_thread.c	/^void _glfwPlatformDestroyTls(_GLFWtls* tls)$/;"	f	typeref:typename:void
_glfwPlatformDestroyWindow	src/cocoa_window.m	/^void _glfwPlatformDestroyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformDestroyWindow	src/null_window.c	/^void _glfwPlatformDestroyWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformDestroyWindow	src/win32_window.c	/^void _glfwPlatformDestroyWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformDestroyWindow	src/wl_window.c	/^void _glfwPlatformDestroyWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformDestroyWindow	src/x11_window.c	/^void _glfwPlatformDestroyWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformFocusWindow	src/cocoa_window.m	/^void _glfwPlatformFocusWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformFocusWindow	src/null_window.c	/^void _glfwPlatformFocusWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformFocusWindow	src/win32_window.c	/^void _glfwPlatformFocusWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformFocusWindow	src/wl_window.c	/^void _glfwPlatformFocusWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformFocusWindow	src/x11_window.c	/^void _glfwPlatformFocusWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformFramebufferTransparent	src/cocoa_window.m	/^int _glfwPlatformFramebufferTransparent(_GLFWwindow* window)$/;"	f
_glfwPlatformFramebufferTransparent	src/null_window.c	/^int _glfwPlatformFramebufferTransparent(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformFramebufferTransparent	src/win32_window.c	/^int _glfwPlatformFramebufferTransparent(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformFramebufferTransparent	src/wl_window.c	/^int _glfwPlatformFramebufferTransparent(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformFramebufferTransparent	src/x11_window.c	/^int _glfwPlatformFramebufferTransparent(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformFreeMonitor	src/cocoa_monitor.m	/^void _glfwPlatformFreeMonitor(_GLFWmonitor* monitor)$/;"	f
_glfwPlatformFreeMonitor	src/null_monitor.c	/^void _glfwPlatformFreeMonitor(_GLFWmonitor* monitor)$/;"	f	typeref:typename:void
_glfwPlatformFreeMonitor	src/win32_monitor.c	/^void _glfwPlatformFreeMonitor(_GLFWmonitor* monitor)$/;"	f	typeref:typename:void
_glfwPlatformFreeMonitor	src/wl_monitor.c	/^void _glfwPlatformFreeMonitor(_GLFWmonitor* monitor)$/;"	f	typeref:typename:void
_glfwPlatformFreeMonitor	src/x11_monitor.c	/^void _glfwPlatformFreeMonitor(_GLFWmonitor* monitor)$/;"	f	typeref:typename:void
_glfwPlatformGetClipboardString	src/cocoa_window.m	/^const char* _glfwPlatformGetClipboardString(void)$/;"	f
_glfwPlatformGetClipboardString	src/null_window.c	/^const char* _glfwPlatformGetClipboardString(void)$/;"	f	typeref:typename:const char *
_glfwPlatformGetClipboardString	src/win32_window.c	/^const char* _glfwPlatformGetClipboardString(void)$/;"	f	typeref:typename:const char *
_glfwPlatformGetClipboardString	src/wl_window.c	/^const char* _glfwPlatformGetClipboardString(void)$/;"	f	typeref:typename:const char *
_glfwPlatformGetClipboardString	src/x11_window.c	/^const char* _glfwPlatformGetClipboardString(void)$/;"	f	typeref:typename:const char *
_glfwPlatformGetCursorPos	src/cocoa_window.m	/^void _glfwPlatformGetCursorPos(_GLFWwindow* window, double* xpos, double* ypos)$/;"	f
_glfwPlatformGetCursorPos	src/null_window.c	/^void _glfwPlatformGetCursorPos(_GLFWwindow* window, double* xpos, double* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetCursorPos	src/win32_window.c	/^void _glfwPlatformGetCursorPos(_GLFWwindow* window, double* xpos, double* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetCursorPos	src/wl_window.c	/^void _glfwPlatformGetCursorPos(_GLFWwindow* window, double* xpos, double* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetCursorPos	src/x11_window.c	/^void _glfwPlatformGetCursorPos(_GLFWwindow* window, double* xpos, double* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetFramebufferSize	src/cocoa_window.m	/^void _glfwPlatformGetFramebufferSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetFramebufferSize	src/null_window.c	/^void _glfwPlatformGetFramebufferSize(_GLFWwindow* window, int* width, int* height)$/;"	f	typeref:typename:void
_glfwPlatformGetFramebufferSize	src/win32_window.c	/^void _glfwPlatformGetFramebufferSize(_GLFWwindow* window, int* width, int* height)$/;"	f	typeref:typename:void
_glfwPlatformGetFramebufferSize	src/wl_window.c	/^void _glfwPlatformGetFramebufferSize(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformGetFramebufferSize	src/x11_window.c	/^void _glfwPlatformGetFramebufferSize(_GLFWwindow* window, int* width, int* height)$/;"	f	typeref:typename:void
_glfwPlatformGetGammaRamp	src/cocoa_monitor.m	/^GLFWbool _glfwPlatformGetGammaRamp(_GLFWmonitor* monitor, GLFWgammaramp* ramp)$/;"	f
_glfwPlatformGetGammaRamp	src/null_monitor.c	/^GLFWbool _glfwPlatformGetGammaRamp(_GLFWmonitor* monitor, GLFWgammaramp* ramp)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformGetGammaRamp	src/win32_monitor.c	/^GLFWbool _glfwPlatformGetGammaRamp(_GLFWmonitor* monitor, GLFWgammaramp* ramp)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformGetGammaRamp	src/wl_monitor.c	/^GLFWbool _glfwPlatformGetGammaRamp(_GLFWmonitor* monitor, GLFWgammaramp* ramp)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformGetGammaRamp	src/x11_monitor.c	/^GLFWbool _glfwPlatformGetGammaRamp(_GLFWmonitor* monitor, GLFWgammaramp* ramp)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformGetKeyScancode	src/cocoa_window.m	/^int _glfwPlatformGetKeyScancode(int key)$/;"	f
_glfwPlatformGetKeyScancode	src/null_window.c	/^int _glfwPlatformGetKeyScancode(int key)$/;"	f	typeref:typename:int
_glfwPlatformGetKeyScancode	src/win32_window.c	/^int _glfwPlatformGetKeyScancode(int key)$/;"	f	typeref:typename:int
_glfwPlatformGetKeyScancode	src/wl_window.c	/^int _glfwPlatformGetKeyScancode(int key)$/;"	f	typeref:typename:int
_glfwPlatformGetKeyScancode	src/x11_window.c	/^int _glfwPlatformGetKeyScancode(int key)$/;"	f	typeref:typename:int
_glfwPlatformGetMonitorContentScale	src/cocoa_monitor.m	/^void _glfwPlatformGetMonitorContentScale(_GLFWmonitor* monitor,$/;"	f
_glfwPlatformGetMonitorContentScale	src/null_monitor.c	/^void _glfwPlatformGetMonitorContentScale(_GLFWmonitor* monitor,$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorContentScale	src/win32_monitor.c	/^void _glfwPlatformGetMonitorContentScale(_GLFWmonitor* monitor,$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorContentScale	src/wl_monitor.c	/^void _glfwPlatformGetMonitorContentScale(_GLFWmonitor* monitor,$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorContentScale	src/x11_monitor.c	/^void _glfwPlatformGetMonitorContentScale(_GLFWmonitor* monitor,$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorPos	src/cocoa_monitor.m	/^void _glfwPlatformGetMonitorPos(_GLFWmonitor* monitor, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetMonitorPos	src/null_monitor.c	/^void _glfwPlatformGetMonitorPos(_GLFWmonitor* monitor, int* xpos, int* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorPos	src/win32_monitor.c	/^void _glfwPlatformGetMonitorPos(_GLFWmonitor* monitor, int* xpos, int* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorPos	src/wl_monitor.c	/^void _glfwPlatformGetMonitorPos(_GLFWmonitor* monitor, int* xpos, int* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorPos	src/x11_monitor.c	/^void _glfwPlatformGetMonitorPos(_GLFWmonitor* monitor, int* xpos, int* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorWorkarea	src/cocoa_monitor.m	/^void _glfwPlatformGetMonitorWorkarea(_GLFWmonitor* monitor,$/;"	f
_glfwPlatformGetMonitorWorkarea	src/null_monitor.c	/^void _glfwPlatformGetMonitorWorkarea(_GLFWmonitor* monitor,$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorWorkarea	src/win32_monitor.c	/^void _glfwPlatformGetMonitorWorkarea(_GLFWmonitor* monitor,$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorWorkarea	src/wl_monitor.c	/^void _glfwPlatformGetMonitorWorkarea(_GLFWmonitor* monitor,$/;"	f	typeref:typename:void
_glfwPlatformGetMonitorWorkarea	src/x11_monitor.c	/^void _glfwPlatformGetMonitorWorkarea(_GLFWmonitor* monitor, int* xpos, int* ypos, int* width, in/;"	f	typeref:typename:void
_glfwPlatformGetPhysicalDevicePresentationSupport	src/cocoa_window.m	/^int _glfwPlatformGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f
_glfwPlatformGetPhysicalDevicePresentationSupport	src/null_window.c	/^int _glfwPlatformGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f	typeref:typename:int
_glfwPlatformGetPhysicalDevicePresentationSupport	src/win32_window.c	/^int _glfwPlatformGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f	typeref:typename:int
_glfwPlatformGetPhysicalDevicePresentationSupport	src/wl_window.c	/^int _glfwPlatformGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f	typeref:typename:int
_glfwPlatformGetPhysicalDevicePresentationSupport	src/x11_window.c	/^int _glfwPlatformGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f	typeref:typename:int
_glfwPlatformGetRequiredInstanceExtensions	src/cocoa_window.m	/^void _glfwPlatformGetRequiredInstanceExtensions(char** extensions)$/;"	f
_glfwPlatformGetRequiredInstanceExtensions	src/null_window.c	/^void _glfwPlatformGetRequiredInstanceExtensions(char** extensions)$/;"	f	typeref:typename:void
_glfwPlatformGetRequiredInstanceExtensions	src/win32_window.c	/^void _glfwPlatformGetRequiredInstanceExtensions(char** extensions)$/;"	f	typeref:typename:void
_glfwPlatformGetRequiredInstanceExtensions	src/wl_window.c	/^void _glfwPlatformGetRequiredInstanceExtensions(char** extensions)$/;"	f	typeref:typename:void
_glfwPlatformGetRequiredInstanceExtensions	src/x11_window.c	/^void _glfwPlatformGetRequiredInstanceExtensions(char** extensions)$/;"	f	typeref:typename:void
_glfwPlatformGetScancodeName	src/cocoa_window.m	/^const char* _glfwPlatformGetScancodeName(int scancode)$/;"	f
_glfwPlatformGetScancodeName	src/null_window.c	/^const char* _glfwPlatformGetScancodeName(int scancode)$/;"	f	typeref:typename:const char *
_glfwPlatformGetScancodeName	src/win32_window.c	/^const char* _glfwPlatformGetScancodeName(int scancode)$/;"	f	typeref:typename:const char *
_glfwPlatformGetScancodeName	src/wl_window.c	/^const char* _glfwPlatformGetScancodeName(int scancode)$/;"	f	typeref:typename:const char *
_glfwPlatformGetScancodeName	src/x11_window.c	/^const char* _glfwPlatformGetScancodeName(int scancode)$/;"	f	typeref:typename:const char *
_glfwPlatformGetTimerFrequency	src/cocoa_time.c	/^uint64_t _glfwPlatformGetTimerFrequency(void)$/;"	f	typeref:typename:uint64_t
_glfwPlatformGetTimerFrequency	src/posix_time.c	/^uint64_t _glfwPlatformGetTimerFrequency(void)$/;"	f	typeref:typename:uint64_t
_glfwPlatformGetTimerFrequency	src/win32_time.c	/^uint64_t _glfwPlatformGetTimerFrequency(void)$/;"	f	typeref:typename:uint64_t
_glfwPlatformGetTimerValue	src/cocoa_time.c	/^uint64_t _glfwPlatformGetTimerValue(void)$/;"	f	typeref:typename:uint64_t
_glfwPlatformGetTimerValue	src/posix_time.c	/^uint64_t _glfwPlatformGetTimerValue(void)$/;"	f	typeref:typename:uint64_t
_glfwPlatformGetTimerValue	src/win32_time.c	/^uint64_t _glfwPlatformGetTimerValue(void)$/;"	f	typeref:typename:uint64_t
_glfwPlatformGetTls	src/posix_thread.c	/^void* _glfwPlatformGetTls(_GLFWtls* tls)$/;"	f	typeref:typename:void *
_glfwPlatformGetTls	src/win32_thread.c	/^void* _glfwPlatformGetTls(_GLFWtls* tls)$/;"	f	typeref:typename:void *
_glfwPlatformGetVersionString	src/cocoa_init.m	/^const char* _glfwPlatformGetVersionString(void)$/;"	f
_glfwPlatformGetVersionString	src/null_init.c	/^const char* _glfwPlatformGetVersionString(void)$/;"	f	typeref:typename:const char *
_glfwPlatformGetVersionString	src/win32_init.c	/^const char* _glfwPlatformGetVersionString(void)$/;"	f	typeref:typename:const char *
_glfwPlatformGetVersionString	src/wl_init.c	/^const char* _glfwPlatformGetVersionString(void)$/;"	f	typeref:typename:const char *
_glfwPlatformGetVersionString	src/x11_init.c	/^const char* _glfwPlatformGetVersionString(void)$/;"	f	typeref:typename:const char *
_glfwPlatformGetVideoMode	src/cocoa_monitor.m	/^void _glfwPlatformGetVideoMode(_GLFWmonitor* monitor, GLFWvidmode *mode)$/;"	f
_glfwPlatformGetVideoMode	src/null_monitor.c	/^void _glfwPlatformGetVideoMode(_GLFWmonitor* monitor, GLFWvidmode* mode)$/;"	f	typeref:typename:void
_glfwPlatformGetVideoMode	src/win32_monitor.c	/^void _glfwPlatformGetVideoMode(_GLFWmonitor* monitor, GLFWvidmode* mode)$/;"	f	typeref:typename:void
_glfwPlatformGetVideoMode	src/wl_monitor.c	/^void _glfwPlatformGetVideoMode(_GLFWmonitor* monitor, GLFWvidmode* mode)$/;"	f	typeref:typename:void
_glfwPlatformGetVideoMode	src/x11_monitor.c	/^void _glfwPlatformGetVideoMode(_GLFWmonitor* monitor, GLFWvidmode* mode)$/;"	f	typeref:typename:void
_glfwPlatformGetVideoModes	src/cocoa_monitor.m	/^GLFWvidmode* _glfwPlatformGetVideoModes(_GLFWmonitor* monitor, int* count)$/;"	f
_glfwPlatformGetVideoModes	src/null_monitor.c	/^GLFWvidmode* _glfwPlatformGetVideoModes(_GLFWmonitor* monitor, int* found)$/;"	f	typeref:typename:GLFWvidmode *
_glfwPlatformGetVideoModes	src/win32_monitor.c	/^GLFWvidmode* _glfwPlatformGetVideoModes(_GLFWmonitor* monitor, int* count)$/;"	f	typeref:typename:GLFWvidmode *
_glfwPlatformGetVideoModes	src/wl_monitor.c	/^GLFWvidmode* _glfwPlatformGetVideoModes(_GLFWmonitor* monitor, int* found)$/;"	f	typeref:typename:GLFWvidmode *
_glfwPlatformGetVideoModes	src/x11_monitor.c	/^GLFWvidmode* _glfwPlatformGetVideoModes(_GLFWmonitor* monitor, int* count)$/;"	f	typeref:typename:GLFWvidmode *
_glfwPlatformGetWindowContentScale	src/cocoa_window.m	/^void _glfwPlatformGetWindowContentScale(_GLFWwindow* window,$/;"	f
_glfwPlatformGetWindowContentScale	src/null_window.c	/^void _glfwPlatformGetWindowContentScale(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformGetWindowContentScale	src/win32_window.c	/^void _glfwPlatformGetWindowContentScale(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformGetWindowContentScale	src/wl_window.c	/^void _glfwPlatformGetWindowContentScale(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformGetWindowContentScale	src/x11_window.c	/^void _glfwPlatformGetWindowContentScale(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformGetWindowFrameSize	src/cocoa_window.m	/^void _glfwPlatformGetWindowFrameSize(_GLFWwindow* window,$/;"	f
_glfwPlatformGetWindowFrameSize	src/null_window.c	/^void _glfwPlatformGetWindowFrameSize(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformGetWindowFrameSize	src/win32_window.c	/^void _glfwPlatformGetWindowFrameSize(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformGetWindowFrameSize	src/wl_window.c	/^void _glfwPlatformGetWindowFrameSize(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformGetWindowFrameSize	src/x11_window.c	/^void _glfwPlatformGetWindowFrameSize(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformGetWindowOpacity	src/cocoa_window.m	/^float _glfwPlatformGetWindowOpacity(_GLFWwindow* window)$/;"	f
_glfwPlatformGetWindowOpacity	src/null_window.c	/^float _glfwPlatformGetWindowOpacity(_GLFWwindow* window)$/;"	f	typeref:typename:float
_glfwPlatformGetWindowOpacity	src/win32_window.c	/^float _glfwPlatformGetWindowOpacity(_GLFWwindow* window)$/;"	f	typeref:typename:float
_glfwPlatformGetWindowOpacity	src/wl_window.c	/^float _glfwPlatformGetWindowOpacity(_GLFWwindow* window)$/;"	f	typeref:typename:float
_glfwPlatformGetWindowOpacity	src/x11_window.c	/^float _glfwPlatformGetWindowOpacity(_GLFWwindow* window)$/;"	f	typeref:typename:float
_glfwPlatformGetWindowPos	src/cocoa_window.m	/^void _glfwPlatformGetWindowPos(_GLFWwindow* window, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetWindowPos	src/null_window.c	/^void _glfwPlatformGetWindowPos(_GLFWwindow* window, int* xpos, int* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetWindowPos	src/win32_window.c	/^void _glfwPlatformGetWindowPos(_GLFWwindow* window, int* xpos, int* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetWindowPos	src/wl_window.c	/^void _glfwPlatformGetWindowPos(_GLFWwindow* window, int* xpos, int* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetWindowPos	src/x11_window.c	/^void _glfwPlatformGetWindowPos(_GLFWwindow* window, int* xpos, int* ypos)$/;"	f	typeref:typename:void
_glfwPlatformGetWindowSize	src/cocoa_window.m	/^void _glfwPlatformGetWindowSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetWindowSize	src/null_window.c	/^void _glfwPlatformGetWindowSize(_GLFWwindow* window, int* width, int* height)$/;"	f	typeref:typename:void
_glfwPlatformGetWindowSize	src/win32_window.c	/^void _glfwPlatformGetWindowSize(_GLFWwindow* window, int* width, int* height)$/;"	f	typeref:typename:void
_glfwPlatformGetWindowSize	src/wl_window.c	/^void _glfwPlatformGetWindowSize(_GLFWwindow* window, int* width, int* height)$/;"	f	typeref:typename:void
_glfwPlatformGetWindowSize	src/x11_window.c	/^void _glfwPlatformGetWindowSize(_GLFWwindow* window, int* width, int* height)$/;"	f	typeref:typename:void
_glfwPlatformHideWindow	src/cocoa_window.m	/^void _glfwPlatformHideWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformHideWindow	src/null_window.c	/^void _glfwPlatformHideWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformHideWindow	src/win32_window.c	/^void _glfwPlatformHideWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformHideWindow	src/wl_window.c	/^void _glfwPlatformHideWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformHideWindow	src/x11_window.c	/^void _glfwPlatformHideWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformIconifyWindow	src/cocoa_window.m	/^void _glfwPlatformIconifyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformIconifyWindow	src/null_window.c	/^void _glfwPlatformIconifyWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformIconifyWindow	src/win32_window.c	/^void _glfwPlatformIconifyWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformIconifyWindow	src/wl_window.c	/^void _glfwPlatformIconifyWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformIconifyWindow	src/x11_window.c	/^void _glfwPlatformIconifyWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformInit	src/cocoa_init.m	/^int _glfwPlatformInit(void)$/;"	f
_glfwPlatformInit	src/null_init.c	/^int _glfwPlatformInit(void)$/;"	f	typeref:typename:int
_glfwPlatformInit	src/win32_init.c	/^int _glfwPlatformInit(void)$/;"	f	typeref:typename:int
_glfwPlatformInit	src/wl_init.c	/^int _glfwPlatformInit(void)$/;"	f	typeref:typename:int
_glfwPlatformInit	src/x11_init.c	/^int _glfwPlatformInit(void)$/;"	f	typeref:typename:int
_glfwPlatformLockMutex	src/posix_thread.c	/^void _glfwPlatformLockMutex(_GLFWmutex* mutex)$/;"	f	typeref:typename:void
_glfwPlatformLockMutex	src/win32_thread.c	/^void _glfwPlatformLockMutex(_GLFWmutex* mutex)$/;"	f	typeref:typename:void
_glfwPlatformMaximizeWindow	src/cocoa_window.m	/^void _glfwPlatformMaximizeWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformMaximizeWindow	src/null_window.c	/^void _glfwPlatformMaximizeWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformMaximizeWindow	src/win32_window.c	/^void _glfwPlatformMaximizeWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformMaximizeWindow	src/wl_window.c	/^void _glfwPlatformMaximizeWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformMaximizeWindow	src/x11_window.c	/^void _glfwPlatformMaximizeWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformPollEvents	src/cocoa_window.m	/^void _glfwPlatformPollEvents(void)$/;"	f
_glfwPlatformPollEvents	src/null_window.c	/^void _glfwPlatformPollEvents(void)$/;"	f	typeref:typename:void
_glfwPlatformPollEvents	src/win32_window.c	/^void _glfwPlatformPollEvents(void)$/;"	f	typeref:typename:void
_glfwPlatformPollEvents	src/wl_window.c	/^void _glfwPlatformPollEvents(void)$/;"	f	typeref:typename:void
_glfwPlatformPollEvents	src/x11_window.c	/^void _glfwPlatformPollEvents(void)$/;"	f	typeref:typename:void
_glfwPlatformPollJoystick	src/cocoa_joystick.m	/^int _glfwPlatformPollJoystick(_GLFWjoystick* js, int mode)$/;"	f	struct:_GLFWjoyelementNS
_glfwPlatformPollJoystick	src/linux_joystick.c	/^int _glfwPlatformPollJoystick(_GLFWjoystick* js, int mode)$/;"	f	typeref:typename:int
_glfwPlatformPollJoystick	src/null_joystick.c	/^int _glfwPlatformPollJoystick(_GLFWjoystick* js, int mode)$/;"	f	typeref:typename:int
_glfwPlatformPollJoystick	src/win32_joystick.c	/^int _glfwPlatformPollJoystick(_GLFWjoystick* js, int mode)$/;"	f	typeref:typename:int
_glfwPlatformPostEmptyEvent	src/cocoa_window.m	/^void _glfwPlatformPostEmptyEvent(void)$/;"	f
_glfwPlatformPostEmptyEvent	src/null_window.c	/^void _glfwPlatformPostEmptyEvent(void)$/;"	f	typeref:typename:void
_glfwPlatformPostEmptyEvent	src/win32_window.c	/^void _glfwPlatformPostEmptyEvent(void)$/;"	f	typeref:typename:void
_glfwPlatformPostEmptyEvent	src/wl_window.c	/^void _glfwPlatformPostEmptyEvent(void)$/;"	f	typeref:typename:void
_glfwPlatformPostEmptyEvent	src/x11_window.c	/^void _glfwPlatformPostEmptyEvent(void)$/;"	f	typeref:typename:void
_glfwPlatformRawMouseMotionSupported	src/cocoa_window.m	/^GLFWbool _glfwPlatformRawMouseMotionSupported(void)$/;"	f
_glfwPlatformRawMouseMotionSupported	src/null_window.c	/^GLFWbool _glfwPlatformRawMouseMotionSupported(void)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformRawMouseMotionSupported	src/win32_window.c	/^GLFWbool _glfwPlatformRawMouseMotionSupported(void)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformRawMouseMotionSupported	src/wl_window.c	/^GLFWbool _glfwPlatformRawMouseMotionSupported(void)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformRawMouseMotionSupported	src/x11_window.c	/^GLFWbool _glfwPlatformRawMouseMotionSupported(void)$/;"	f	typeref:typename:GLFWbool
_glfwPlatformRequestWindowAttention	src/cocoa_window.m	/^void _glfwPlatformRequestWindowAttention(_GLFWwindow* window)$/;"	f
_glfwPlatformRequestWindowAttention	src/null_window.c	/^void _glfwPlatformRequestWindowAttention(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformRequestWindowAttention	src/win32_window.c	/^void _glfwPlatformRequestWindowAttention(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformRequestWindowAttention	src/wl_window.c	/^void _glfwPlatformRequestWindowAttention(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformRequestWindowAttention	src/x11_window.c	/^void _glfwPlatformRequestWindowAttention(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformRestoreWindow	src/cocoa_window.m	/^void _glfwPlatformRestoreWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformRestoreWindow	src/null_window.c	/^void _glfwPlatformRestoreWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformRestoreWindow	src/win32_window.c	/^void _glfwPlatformRestoreWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformRestoreWindow	src/wl_window.c	/^void _glfwPlatformRestoreWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformRestoreWindow	src/x11_window.c	/^void _glfwPlatformRestoreWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformSetClipboardString	src/cocoa_window.m	/^void _glfwPlatformSetClipboardString(const char* string)$/;"	f
_glfwPlatformSetClipboardString	src/null_window.c	/^void _glfwPlatformSetClipboardString(const char* string)$/;"	f	typeref:typename:void
_glfwPlatformSetClipboardString	src/win32_window.c	/^void _glfwPlatformSetClipboardString(const char* string)$/;"	f	typeref:typename:void
_glfwPlatformSetClipboardString	src/wl_window.c	/^void _glfwPlatformSetClipboardString(const char* string)$/;"	f	typeref:typename:void
_glfwPlatformSetClipboardString	src/x11_window.c	/^void _glfwPlatformSetClipboardString(const char* string)$/;"	f	typeref:typename:void
_glfwPlatformSetCursor	src/cocoa_window.m	/^void _glfwPlatformSetCursor(_GLFWwindow* window, _GLFWcursor* cursor)$/;"	f
_glfwPlatformSetCursor	src/null_window.c	/^void _glfwPlatformSetCursor(_GLFWwindow* window, _GLFWcursor* cursor)$/;"	f	typeref:typename:void
_glfwPlatformSetCursor	src/win32_window.c	/^void _glfwPlatformSetCursor(_GLFWwindow* window, _GLFWcursor* cursor)$/;"	f	typeref:typename:void
_glfwPlatformSetCursor	src/wl_window.c	/^void _glfwPlatformSetCursor(_GLFWwindow* window, _GLFWcursor* cursor)$/;"	f	typeref:typename:void
_glfwPlatformSetCursor	src/x11_window.c	/^void _glfwPlatformSetCursor(_GLFWwindow* window, _GLFWcursor* cursor)$/;"	f	typeref:typename:void
_glfwPlatformSetCursorMode	src/cocoa_window.m	/^void _glfwPlatformSetCursorMode(_GLFWwindow* window, int mode)$/;"	f
_glfwPlatformSetCursorMode	src/null_window.c	/^void _glfwPlatformSetCursorMode(_GLFWwindow* window, int mode)$/;"	f	typeref:typename:void
_glfwPlatformSetCursorMode	src/win32_window.c	/^void _glfwPlatformSetCursorMode(_GLFWwindow* window, int mode)$/;"	f	typeref:typename:void
_glfwPlatformSetCursorMode	src/wl_window.c	/^void _glfwPlatformSetCursorMode(_GLFWwindow* window, int mode)$/;"	f	typeref:typename:void
_glfwPlatformSetCursorMode	src/x11_window.c	/^void _glfwPlatformSetCursorMode(_GLFWwindow* window, int mode)$/;"	f	typeref:typename:void
_glfwPlatformSetCursorPos	src/cocoa_window.m	/^void _glfwPlatformSetCursorPos(_GLFWwindow* window, double x, double y)$/;"	f
_glfwPlatformSetCursorPos	src/null_window.c	/^void _glfwPlatformSetCursorPos(_GLFWwindow* window, double x, double y)$/;"	f	typeref:typename:void
_glfwPlatformSetCursorPos	src/win32_window.c	/^void _glfwPlatformSetCursorPos(_GLFWwindow* window, double xpos, double ypos)$/;"	f	typeref:typename:void
_glfwPlatformSetCursorPos	src/wl_window.c	/^void _glfwPlatformSetCursorPos(_GLFWwindow* window, double x, double y)$/;"	f	typeref:typename:void
_glfwPlatformSetCursorPos	src/x11_window.c	/^void _glfwPlatformSetCursorPos(_GLFWwindow* window, double x, double y)$/;"	f	typeref:typename:void
_glfwPlatformSetGammaRamp	src/cocoa_monitor.m	/^void _glfwPlatformSetGammaRamp(_GLFWmonitor* monitor, const GLFWgammaramp* ramp)$/;"	f
_glfwPlatformSetGammaRamp	src/null_monitor.c	/^void _glfwPlatformSetGammaRamp(_GLFWmonitor* monitor, const GLFWgammaramp* ramp)$/;"	f	typeref:typename:void
_glfwPlatformSetGammaRamp	src/win32_monitor.c	/^void _glfwPlatformSetGammaRamp(_GLFWmonitor* monitor, const GLFWgammaramp* ramp)$/;"	f	typeref:typename:void
_glfwPlatformSetGammaRamp	src/wl_monitor.c	/^void _glfwPlatformSetGammaRamp(_GLFWmonitor* monitor,$/;"	f	typeref:typename:void
_glfwPlatformSetGammaRamp	src/x11_monitor.c	/^void _glfwPlatformSetGammaRamp(_GLFWmonitor* monitor, const GLFWgammaramp* ramp)$/;"	f	typeref:typename:void
_glfwPlatformSetRawMouseMotion	src/cocoa_window.m	/^void _glfwPlatformSetRawMouseMotion(_GLFWwindow *window, GLFWbool enabled)$/;"	f
_glfwPlatformSetRawMouseMotion	src/null_window.c	/^void _glfwPlatformSetRawMouseMotion(_GLFWwindow *window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetRawMouseMotion	src/win32_window.c	/^void _glfwPlatformSetRawMouseMotion(_GLFWwindow *window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetRawMouseMotion	src/wl_window.c	/^void _glfwPlatformSetRawMouseMotion(_GLFWwindow *window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetRawMouseMotion	src/x11_window.c	/^void _glfwPlatformSetRawMouseMotion(_GLFWwindow *window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetTls	src/posix_thread.c	/^void _glfwPlatformSetTls(_GLFWtls* tls, void* value)$/;"	f	typeref:typename:void
_glfwPlatformSetTls	src/win32_thread.c	/^void _glfwPlatformSetTls(_GLFWtls* tls, void* value)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowAspectRatio	src/cocoa_window.m	/^void _glfwPlatformSetWindowAspectRatio(_GLFWwindow* window, int numer, int denom)$/;"	f
_glfwPlatformSetWindowAspectRatio	src/null_window.c	/^void _glfwPlatformSetWindowAspectRatio(_GLFWwindow* window, int n, int d)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowAspectRatio	src/win32_window.c	/^void _glfwPlatformSetWindowAspectRatio(_GLFWwindow* window, int numer, int denom)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowAspectRatio	src/wl_window.c	/^void _glfwPlatformSetWindowAspectRatio(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowAspectRatio	src/x11_window.c	/^void _glfwPlatformSetWindowAspectRatio(_GLFWwindow* window, int numer, int denom)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowDecorated	src/cocoa_window.m	/^void _glfwPlatformSetWindowDecorated(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowDecorated	src/null_window.c	/^void _glfwPlatformSetWindowDecorated(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowDecorated	src/win32_window.c	/^void _glfwPlatformSetWindowDecorated(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowDecorated	src/wl_window.c	/^void _glfwPlatformSetWindowDecorated(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowDecorated	src/x11_window.c	/^void _glfwPlatformSetWindowDecorated(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowFloating	src/cocoa_window.m	/^void _glfwPlatformSetWindowFloating(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowFloating	src/null_window.c	/^void _glfwPlatformSetWindowFloating(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowFloating	src/win32_window.c	/^void _glfwPlatformSetWindowFloating(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowFloating	src/wl_window.c	/^void _glfwPlatformSetWindowFloating(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowFloating	src/x11_window.c	/^void _glfwPlatformSetWindowFloating(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowIcon	src/cocoa_window.m	/^void _glfwPlatformSetWindowIcon(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowIcon	src/null_window.c	/^void _glfwPlatformSetWindowIcon(_GLFWwindow* window, int count,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowIcon	src/win32_window.c	/^void _glfwPlatformSetWindowIcon(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowIcon	src/wl_window.c	/^void _glfwPlatformSetWindowIcon(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowIcon	src/x11_window.c	/^void _glfwPlatformSetWindowIcon(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowMonitor	src/cocoa_window.m	/^void _glfwPlatformSetWindowMonitor(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowMonitor	src/null_window.c	/^void _glfwPlatformSetWindowMonitor(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowMonitor	src/win32_window.c	/^void _glfwPlatformSetWindowMonitor(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowMonitor	src/wl_window.c	/^void _glfwPlatformSetWindowMonitor(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowMonitor	src/x11_window.c	/^void _glfwPlatformSetWindowMonitor(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowOpacity	src/cocoa_window.m	/^void _glfwPlatformSetWindowOpacity(_GLFWwindow* window, float opacity)$/;"	f
_glfwPlatformSetWindowOpacity	src/null_window.c	/^void _glfwPlatformSetWindowOpacity(_GLFWwindow* window, float opacity)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowOpacity	src/win32_window.c	/^void _glfwPlatformSetWindowOpacity(_GLFWwindow* window, float opacity)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowOpacity	src/wl_window.c	/^void _glfwPlatformSetWindowOpacity(_GLFWwindow* window, float opacity)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowOpacity	src/x11_window.c	/^void _glfwPlatformSetWindowOpacity(_GLFWwindow* window, float opacity)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowPos	src/cocoa_window.m	/^void _glfwPlatformSetWindowPos(_GLFWwindow* window, int x, int y)$/;"	f
_glfwPlatformSetWindowPos	src/null_window.c	/^void _glfwPlatformSetWindowPos(_GLFWwindow* window, int xpos, int ypos)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowPos	src/win32_window.c	/^void _glfwPlatformSetWindowPos(_GLFWwindow* window, int xpos, int ypos)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowPos	src/wl_window.c	/^void _glfwPlatformSetWindowPos(_GLFWwindow* window, int xpos, int ypos)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowPos	src/x11_window.c	/^void _glfwPlatformSetWindowPos(_GLFWwindow* window, int xpos, int ypos)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowResizable	src/cocoa_window.m	/^void _glfwPlatformSetWindowResizable(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowResizable	src/null_window.c	/^void _glfwPlatformSetWindowResizable(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowResizable	src/win32_window.c	/^void _glfwPlatformSetWindowResizable(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowResizable	src/wl_window.c	/^void _glfwPlatformSetWindowResizable(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowResizable	src/x11_window.c	/^void _glfwPlatformSetWindowResizable(_GLFWwindow* window, GLFWbool enabled)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowSize	src/cocoa_window.m	/^void _glfwPlatformSetWindowSize(_GLFWwindow* window, int width, int height)$/;"	f
_glfwPlatformSetWindowSize	src/null_window.c	/^void _glfwPlatformSetWindowSize(_GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowSize	src/win32_window.c	/^void _glfwPlatformSetWindowSize(_GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowSize	src/wl_window.c	/^void _glfwPlatformSetWindowSize(_GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowSize	src/x11_window.c	/^void _glfwPlatformSetWindowSize(_GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowSizeLimits	src/cocoa_window.m	/^void _glfwPlatformSetWindowSizeLimits(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowSizeLimits	src/null_window.c	/^void _glfwPlatformSetWindowSizeLimits(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowSizeLimits	src/win32_window.c	/^void _glfwPlatformSetWindowSizeLimits(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowSizeLimits	src/wl_window.c	/^void _glfwPlatformSetWindowSizeLimits(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowSizeLimits	src/x11_window.c	/^void _glfwPlatformSetWindowSizeLimits(_GLFWwindow* window,$/;"	f	typeref:typename:void
_glfwPlatformSetWindowTitle	src/cocoa_window.m	/^void _glfwPlatformSetWindowTitle(_GLFWwindow* window, const char* title)$/;"	f
_glfwPlatformSetWindowTitle	src/null_window.c	/^void _glfwPlatformSetWindowTitle(_GLFWwindow* window, const char* title)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowTitle	src/win32_window.c	/^void _glfwPlatformSetWindowTitle(_GLFWwindow* window, const char* title)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowTitle	src/wl_window.c	/^void _glfwPlatformSetWindowTitle(_GLFWwindow* window, const char* title)$/;"	f	typeref:typename:void
_glfwPlatformSetWindowTitle	src/x11_window.c	/^void _glfwPlatformSetWindowTitle(_GLFWwindow* window, const char* title)$/;"	f	typeref:typename:void
_glfwPlatformShowWindow	src/cocoa_window.m	/^void _glfwPlatformShowWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformShowWindow	src/null_window.c	/^void _glfwPlatformShowWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformShowWindow	src/win32_window.c	/^void _glfwPlatformShowWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformShowWindow	src/wl_window.c	/^void _glfwPlatformShowWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformShowWindow	src/x11_window.c	/^void _glfwPlatformShowWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformTerminate	src/cocoa_init.m	/^void _glfwPlatformTerminate(void)$/;"	f
_glfwPlatformTerminate	src/null_init.c	/^void _glfwPlatformTerminate(void)$/;"	f	typeref:typename:void
_glfwPlatformTerminate	src/win32_init.c	/^void _glfwPlatformTerminate(void)$/;"	f	typeref:typename:void
_glfwPlatformTerminate	src/wl_init.c	/^void _glfwPlatformTerminate(void)$/;"	f	typeref:typename:void
_glfwPlatformTerminate	src/x11_init.c	/^void _glfwPlatformTerminate(void)$/;"	f	typeref:typename:void
_glfwPlatformUnhideWindow	src/null_window.c	/^void _glfwPlatformUnhideWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void
_glfwPlatformUnlockMutex	src/posix_thread.c	/^void _glfwPlatformUnlockMutex(_GLFWmutex* mutex)$/;"	f	typeref:typename:void
_glfwPlatformUnlockMutex	src/win32_thread.c	/^void _glfwPlatformUnlockMutex(_GLFWmutex* mutex)$/;"	f	typeref:typename:void
_glfwPlatformUpdateGamepadGUID	src/cocoa_joystick.m	/^void _glfwPlatformUpdateGamepadGUID(char* guid)$/;"	f	struct:_GLFWjoyelementNS
_glfwPlatformUpdateGamepadGUID	src/linux_joystick.c	/^void _glfwPlatformUpdateGamepadGUID(char* guid)$/;"	f	typeref:typename:void
_glfwPlatformUpdateGamepadGUID	src/null_joystick.c	/^void _glfwPlatformUpdateGamepadGUID(char* guid)$/;"	f	typeref:typename:void
_glfwPlatformUpdateGamepadGUID	src/win32_joystick.c	/^void _glfwPlatformUpdateGamepadGUID(char* guid)$/;"	f	typeref:typename:void
_glfwPlatformWaitEvents	src/cocoa_window.m	/^void _glfwPlatformWaitEvents(void)$/;"	f
_glfwPlatformWaitEvents	src/null_window.c	/^void _glfwPlatformWaitEvents(void)$/;"	f	typeref:typename:void
_glfwPlatformWaitEvents	src/win32_window.c	/^void _glfwPlatformWaitEvents(void)$/;"	f	typeref:typename:void
_glfwPlatformWaitEvents	src/wl_window.c	/^void _glfwPlatformWaitEvents(void)$/;"	f	typeref:typename:void
_glfwPlatformWaitEvents	src/x11_window.c	/^void _glfwPlatformWaitEvents(void)$/;"	f	typeref:typename:void
_glfwPlatformWaitEventsTimeout	src/cocoa_window.m	/^void _glfwPlatformWaitEventsTimeout(double timeout)$/;"	f
_glfwPlatformWaitEventsTimeout	src/null_window.c	/^void _glfwPlatformWaitEventsTimeout(double timeout)$/;"	f	typeref:typename:void
_glfwPlatformWaitEventsTimeout	src/win32_window.c	/^void _glfwPlatformWaitEventsTimeout(double timeout)$/;"	f	typeref:typename:void
_glfwPlatformWaitEventsTimeout	src/wl_window.c	/^void _glfwPlatformWaitEventsTimeout(double timeout)$/;"	f	typeref:typename:void
_glfwPlatformWaitEventsTimeout	src/x11_window.c	/^void _glfwPlatformWaitEventsTimeout(double timeout)$/;"	f	typeref:typename:void
_glfwPlatformWindowFocused	src/cocoa_window.m	/^int _glfwPlatformWindowFocused(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowFocused	src/null_window.c	/^int _glfwPlatformWindowFocused(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowFocused	src/win32_window.c	/^int _glfwPlatformWindowFocused(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowFocused	src/wl_window.c	/^int _glfwPlatformWindowFocused(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowFocused	src/x11_window.c	/^int _glfwPlatformWindowFocused(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowHovered	src/cocoa_window.m	/^int _glfwPlatformWindowHovered(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowHovered	src/null_window.c	/^int _glfwPlatformWindowHovered(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowHovered	src/win32_window.c	/^int _glfwPlatformWindowHovered(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowHovered	src/wl_window.c	/^int _glfwPlatformWindowHovered(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowHovered	src/x11_window.c	/^int _glfwPlatformWindowHovered(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowIconified	src/cocoa_window.m	/^int _glfwPlatformWindowIconified(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowIconified	src/null_window.c	/^int _glfwPlatformWindowIconified(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowIconified	src/win32_window.c	/^int _glfwPlatformWindowIconified(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowIconified	src/wl_window.c	/^int _glfwPlatformWindowIconified(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowIconified	src/x11_window.c	/^int _glfwPlatformWindowIconified(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowMaximized	src/cocoa_window.m	/^int _glfwPlatformWindowMaximized(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowMaximized	src/null_window.c	/^int _glfwPlatformWindowMaximized(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowMaximized	src/win32_window.c	/^int _glfwPlatformWindowMaximized(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowMaximized	src/wl_window.c	/^int _glfwPlatformWindowMaximized(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowMaximized	src/x11_window.c	/^int _glfwPlatformWindowMaximized(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowVisible	src/cocoa_window.m	/^int _glfwPlatformWindowVisible(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowVisible	src/null_window.c	/^int _glfwPlatformWindowVisible(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowVisible	src/win32_window.c	/^int _glfwPlatformWindowVisible(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowVisible	src/wl_window.c	/^int _glfwPlatformWindowVisible(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPlatformWindowVisible	src/x11_window.c	/^int _glfwPlatformWindowVisible(_GLFWwindow* window)$/;"	f	typeref:typename:int
_glfwPollMonitorsNS	src/cocoa_monitor.m	/^void _glfwPollMonitorsNS(void)$/;"	f
_glfwPollMonitorsNS	src/cocoa_platform.h	/^void _glfwPollMonitorsNS(void);$/;"	f	struct:_GLFWtimerNS
_glfwPollMonitorsWin32	src/win32_monitor.c	/^void _glfwPollMonitorsWin32(void)$/;"	f	typeref:typename:void
_glfwPollMonitorsX11	src/x11_monitor.c	/^void _glfwPollMonitorsX11(void)$/;"	f	typeref:typename:void
_glfwPushSelectionToManagerX11	src/x11_window.c	/^void _glfwPushSelectionToManagerX11(void)$/;"	f	typeref:typename:void
_glfwRefreshContextAttribs	src/context.c	/^GLFWbool _glfwRefreshContextAttribs(_GLFWwindow* window,$/;"	f	typeref:typename:GLFWbool
_glfwRegisterWindowClassWin32	src/win32_window.c	/^GLFWbool _glfwRegisterWindowClassWin32(void)$/;"	f	typeref:typename:GLFWbool
_glfwReleaseErrorHandlerX11	src/x11_init.c	/^void _glfwReleaseErrorHandlerX11(void)$/;"	f	typeref:typename:void
_glfwRestoreVideoModeNS	src/cocoa_monitor.m	/^void _glfwRestoreVideoModeNS(_GLFWmonitor* monitor)$/;"	f
_glfwRestoreVideoModeNS	src/cocoa_platform.h	/^void _glfwRestoreVideoModeNS(_GLFWmonitor* monitor);$/;"	f	struct:_GLFWtimerNS
_glfwRestoreVideoModeWin32	src/win32_monitor.c	/^void _glfwRestoreVideoModeWin32(_GLFWmonitor* monitor)$/;"	f	typeref:typename:void
_glfwRestoreVideoModeX11	src/x11_monitor.c	/^void _glfwRestoreVideoModeX11(_GLFWmonitor* monitor)$/;"	f	typeref:typename:void
_glfwSetVideoModeNS	src/cocoa_monitor.m	/^void _glfwSetVideoModeNS(_GLFWmonitor* monitor, const GLFWvidmode* desired)$/;"	f
_glfwSetVideoModeNS	src/cocoa_platform.h	/^void _glfwSetVideoModeNS(_GLFWmonitor* monitor, const GLFWvidmode* desired);$/;"	f	struct:_GLFWtimerNS
_glfwSetVideoModeWin32	src/win32_monitor.c	/^void _glfwSetVideoModeWin32(_GLFWmonitor* monitor, const GLFWvidmode* desired)$/;"	f	typeref:typename:void
_glfwSetVideoModeX11	src/x11_monitor.c	/^void _glfwSetVideoModeX11(_GLFWmonitor* monitor, const GLFWvidmode* desired)$/;"	f	typeref:typename:void
_glfwSplitBPP	src/monitor.c	/^void _glfwSplitBPP(int bpp, int* red, int* green, int* blue)$/;"	f	typeref:typename:void
_glfwStringInExtensionString	src/context.c	/^GLFWbool _glfwStringInExtensionString(const char* string, const char* extensions)$/;"	f	typeref:typename:GLFWbool
_glfwTerminateEGL	src/egl_context.c	/^void _glfwTerminateEGL(void)$/;"	f	typeref:typename:void
_glfwTerminateGLX	src/glx_context.c	/^void _glfwTerminateGLX(void)$/;"	f	typeref:typename:void
_glfwTerminateJoysticksLinux	src/linux_joystick.c	/^void _glfwTerminateJoysticksLinux(void)$/;"	f	typeref:typename:void
_glfwTerminateJoysticksNS	src/cocoa_joystick.m	/^void _glfwTerminateJoysticksNS(void)$/;"	f	struct:_GLFWjoyelementNS
_glfwTerminateJoysticksWin32	src/win32_joystick.c	/^void _glfwTerminateJoysticksWin32(void)$/;"	f	typeref:typename:void
_glfwTerminateNSGL	src/nsgl_context.m	/^void _glfwTerminateNSGL(void)$/;"	f
_glfwTerminateOSMesa	src/osmesa_context.c	/^void _glfwTerminateOSMesa(void)$/;"	f	typeref:typename:void
_glfwTerminateVulkan	src/vulkan.c	/^void _glfwTerminateVulkan(void)$/;"	f	typeref:typename:void
_glfwTerminateWGL	src/wgl_context.c	/^void _glfwTerminateWGL(void)$/;"	f	typeref:typename:void
_glfwTransformYNS	src/cocoa_platform.h	/^float _glfwTransformYNS(float y);$/;"	f	struct:_GLFWtimerNS
_glfwTransformYNS	src/cocoa_window.m	/^float _glfwTransformYNS(float y)$/;"	f
_glfwUnregisterWindowClassWin32	src/win32_window.c	/^void _glfwUnregisterWindowClassWin32(void)$/;"	f	typeref:typename:void
_glfwUpdateKeyNamesWin32	src/win32_init.c	/^void _glfwUpdateKeyNamesWin32(void)$/;"	f	typeref:typename:void
_glfw_GUID_DEVINTERFACE_HID	src/win32_init.c	/^static const GUID _glfw_GUID_DEVINTERFACE_HID =$/;"	v	typeref:typename:const GUID	file:
_glfw_GUID_POV	src/win32_joystick.c	/^static const GUID _glfw_GUID_POV =$/;"	v	typeref:typename:const GUID	file:
_glfw_GUID_RxAxis	src/win32_joystick.c	/^static const GUID _glfw_GUID_RxAxis =$/;"	v	typeref:typename:const GUID	file:
_glfw_GUID_RyAxis	src/win32_joystick.c	/^static const GUID _glfw_GUID_RyAxis =$/;"	v	typeref:typename:const GUID	file:
_glfw_GUID_RzAxis	src/win32_joystick.c	/^static const GUID _glfw_GUID_RzAxis =$/;"	v	typeref:typename:const GUID	file:
_glfw_GUID_Slider	src/win32_joystick.c	/^static const GUID _glfw_GUID_Slider =$/;"	v	typeref:typename:const GUID	file:
_glfw_GUID_XAxis	src/win32_joystick.c	/^static const GUID _glfw_GUID_XAxis =$/;"	v	typeref:typename:const GUID	file:
_glfw_GUID_YAxis	src/win32_joystick.c	/^static const GUID _glfw_GUID_YAxis =$/;"	v	typeref:typename:const GUID	file:
_glfw_GUID_ZAxis	src/win32_joystick.c	/^static const GUID _glfw_GUID_ZAxis =$/;"	v	typeref:typename:const GUID	file:
_glfw_IID_IDirectInput8W	src/win32_joystick.c	/^static const GUID _glfw_IID_IDirectInput8W =$/;"	v	typeref:typename:const GUID	file:
_glfw_dlclose	src/cocoa_platform.h	/^#define _glfw_dlclose(handle) dlclose(handle)$/;"	M
_glfw_dlclose	src/null_platform.h	/^ #define _glfw_dlclose(/;"	d
_glfw_dlclose	src/win32_platform.h	/^#define _glfw_dlclose(/;"	d
_glfw_dlclose	src/wl_platform.h	/^#define _glfw_dlclose(/;"	d
_glfw_dlclose	src/x11_platform.h	/^#define _glfw_dlclose(/;"	d
_glfw_dlopen	src/cocoa_platform.h	/^#define _glfw_dlopen(name) dlopen(name, RTLD_LAZY | RTLD_LOCAL)$/;"	M
_glfw_dlopen	src/null_platform.h	/^ #define _glfw_dlopen(/;"	d
_glfw_dlopen	src/win32_platform.h	/^#define _glfw_dlopen(/;"	d
_glfw_dlopen	src/wl_platform.h	/^#define _glfw_dlopen(/;"	d
_glfw_dlopen	src/x11_platform.h	/^#define _glfw_dlopen(/;"	d
_glfw_dlsym	src/cocoa_platform.h	/^#define _glfw_dlsym(handle, name) dlsym(handle, name)$/;"	M
_glfw_dlsym	src/null_platform.h	/^ #define _glfw_dlsym(/;"	d
_glfw_dlsym	src/win32_platform.h	/^#define _glfw_dlsym(/;"	d
_glfw_dlsym	src/wl_platform.h	/^#define _glfw_dlsym(/;"	d
_glfw_dlsym	src/x11_platform.h	/^#define _glfw_dlsym(/;"	d
_glfw_fmaxf	src/init.c	/^float _glfw_fmaxf(float a, float b)$/;"	f	typeref:typename:float
_glfw_fminf	src/init.c	/^float _glfw_fminf(float a, float b)$/;"	f	typeref:typename:float
_glfw_strdup	src/init.c	/^char* _glfw_strdup(const char* source)$/;"	f	typeref:typename:char *
_thrd_wrapper_function	deps/tinycthread.c	/^static unsigned WINAPI _thrd_wrapper_function(void * aArg)$/;"	f	typeref:typename:unsigned WINAPI	file:
_thread_start_info	deps/tinycthread.c	/^} _thread_start_info;$/;"	t	typeref:struct:__anon92fdd8d00108	file:
_ttherad_timespec	deps/tinycthread.h	/^struct _ttherad_timespec {$/;"	s
_tthread_clock_gettime	deps/tinycthread.c	/^int _tthread_clock_gettime(clockid_t clk_id, struct timespec *ts)$/;"	f	typeref:typename:int
_tthread_clockid_t	deps/tinycthread.h	/^typedef int _tthread_clockid_t;$/;"	t	typeref:typename:int
a	deps/glad/vulkan.h	/^    VkComponentSwizzle   a;$/;"	m	struct:VkComponentMapping	typeref:typename:VkComponentSwizzle
a	deps/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc	typeref:typename:float[2]
a	deps/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc_filled	typeref:typename:float[2]
a	deps/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_vec2i
a	deps/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_vec2i
a	deps/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
a	deps/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
a.code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
a.code:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
a.el:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
a:hover	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
a:visited	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
a:visited:hover	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
absInfo	src/linux_joystick.h	/^    struct input_absinfo    absInfo[ABS_CNT];$/;"	m	struct:_GLFWjoystickLinux	typeref:struct:input_absinfo[]
absMap	src/linux_joystick.h	/^    int                     absMap[ABS_CNT];$/;"	m	struct:_GLFWjoystickLinux	typeref:typename:int[]
acceptsFirstMouse:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
acceptsFirstResponder	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
accumAlphaBits	src/internal.h	/^    int         accumAlphaBits;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
accumBlueBits	src/internal.h	/^    int         accumBlueBits;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
accumGreenBits	src/internal.h	/^    int         accumGreenBits;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
accumRedBits	src/internal.h	/^    int         accumRedBits;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
acquireMonitor	src/cocoa_window.m	/^static void acquireMonitor(_GLFWwindow* window)$/;"	f
acquireMonitor	src/win32_window.c	/^static void acquireMonitor(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
acquireMonitor	src/x11_window.c	/^static void acquireMonitor(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
acquiredMonitorCount	src/win32_platform.h	/^    int                 acquiredMonitorCount;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:int
active	deps/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state	typeref:typename:int
active	deps/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state	typeref:typename:int
active	deps/nuklear.h	/^    int active;$/;"	m	struct:nk_buffer_marker	typeref:typename:int
active	deps/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_buffer	typeref:typename:int
active	deps/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_state	typeref:typename:int
active	deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_item
active	deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_item
active	deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_item
active	deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
active	deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_item
active	deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
active	deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
active	deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
active	deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_item
active	deps/nuklear.h	/^    struct nk_window *active;$/;"	m	struct:nk_context	typeref:struct:nk_window *
active	deps/nuklear.h	/^    unsigned char active;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
active	examples/particles.c	/^    int   active;    \/\/ Tells if this particle is active$/;"	m	struct:__anon62203f4b0408	typeref:typename:int	file:
active_con	deps/nuklear.h	/^    unsigned active_con;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
active_head	deps/nuklear.h	/^    struct nk_rp_node *active_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_node *
active_view	examples/splitview.c	/^static int active_view = 0;$/;"	v	typeref:typename:int	file:
adapterName	src/win32_platform.h	/^    WCHAR               adapterName[32];$/;"	m	struct:_GLFWmonitorWin32	typeref:typename:WCHAR[32]
addAttrib	src/wgl_context.c	/^#define addAttrib(/;"	d	file:
address.footer	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
addressModeU	deps/glad/vulkan.h	/^    VkSamplerAddressMode     addressModeU;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkSamplerAddressMode
addressModeV	deps/glad/vulkan.h	/^    VkSamplerAddressMode     addressModeV;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkSamplerAddressMode
addressModeW	deps/glad/vulkan.h	/^    VkSamplerAddressMode     addressModeW;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkSamplerAddressMode
adjust_grid	examples/wave.c	/^void adjust_grid(void)$/;"	f	typeref:typename:void
align	deps/nuklear.h	/^    enum nk_style_header_align align;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_header_align
align	deps/nuklear.h	/^    int align;$/;"	m	struct:nk_rp_context	typeref:typename:int
alignment	deps/glad/vulkan.h	/^    VkDeviceSize             alignment;$/;"	m	struct:VkMemoryRequirements	typeref:typename:VkDeviceSize
alloc	deps/nuklear.h	/^    nk_plugin_alloc alloc;$/;"	m	struct:nk_allocator	typeref:typename:nk_plugin_alloc
alloc	deps/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_allocator
alloc	deps/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_pool	typeref:struct:nk_allocator
alloc	deps/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_allocator
allocated	deps/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
allocated	deps/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
allocated	src/posix_thread.h	/^    GLFWbool        allocated;$/;"	m	struct:_GLFWmutexPOSIX	typeref:typename:GLFWbool
allocated	src/posix_thread.h	/^    GLFWbool        allocated;$/;"	m	struct:_GLFWtlsPOSIX	typeref:typename:GLFWbool
allocated	src/win32_platform.h	/^    GLFWbool            allocated;$/;"	m	struct:_GLFWmutexWin32	typeref:typename:GLFWbool
allocated	src/win32_platform.h	/^    GLFWbool            allocated;$/;"	m	struct:_GLFWtlsWin32	typeref:typename:GLFWbool
allocationSize	deps/glad/vulkan.h	/^    VkDeviceSize             allocationSize;$/;"	m	struct:VkMemoryAllocateInfo	typeref:typename:VkDeviceSize
alpha	examples/wave.c	/^GLfloat alpha = 210.f, beta = -70.f;$/;"	v	typeref:typename:GLfloat
alphaBits	src/internal.h	/^    int         alphaBits;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
alphaBlendOp	deps/glad/vulkan.h	/^    VkBlendOp                alphaBlendOp;$/;"	m	struct:VkPipelineColorBlendAttachmentState	typeref:typename:VkBlendOp
alphaToCoverageEnable	deps/glad/vulkan.h	/^    VkBool32                 alphaToCoverageEnable;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo	typeref:typename:VkBool32
alphaToOne	deps/glad/vulkan.h	/^    VkBool32                 alphaToOne;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
alphaToOneEnable	deps/glad/vulkan.h	/^    VkBool32                 alphaToOneEnable;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo	typeref:typename:VkBool32
altMask	src/wl_platform.h	/^        xkb_mod_mask_t          altMask;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:xkb_mod_mask_t
angle	examples/gears.c	/^static GLfloat angle = 0.f;$/;"	v	typeref:typename:GLfloat	file:
animate	examples/gears.c	/^static void animate(void)$/;"	f	typeref:typename:void	file:
animate_cursor	tests/cursor.c	/^static int animate_cursor = GLFW_FALSE;$/;"	v	typeref:typename:int	file:
anisotropyEnable	deps/glad/vulkan.h	/^    VkBool32                 anisotropyEnable;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkBool32
api	src/win32_platform.h	/^        IDirectInput8W*                 api;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890608	typeref:typename:IDirectInput8W *
apiVersion	deps/glad/vulkan.h	/^    uint32_t          apiVersion;$/;"	m	struct:VkApplicationInfo	typeref:typename:uint32_t
apiVersion	deps/glad/vulkan.h	/^    uint32_t         apiVersion;$/;"	m	struct:VkPhysicalDeviceProperties	typeref:typename:uint32_t
applicationDidChangeScreenParameters:	src/cocoa_init.m	/^{$/;"	m	implementation:GLFWApplicationDelegate
applicationDidFinishLaunching:	src/cocoa_init.m	/^{$/;"	m	implementation:GLFWApplicationDelegate
applicationDidHide:	src/cocoa_init.m	/^{$/;"	m	implementation:GLFWApplicationDelegate
applicationShouldTerminate:	src/cocoa_init.m	/^{$/;"	m	implementation:GLFWApplicationDelegate
applicationVersion	deps/glad/vulkan.h	/^    uint32_t          applicationVersion;$/;"	m	struct:VkApplicationInfo	typeref:typename:uint32_t
applicationWillFinishLaunching:	src/cocoa_init.m	/^{$/;"	m	implementation:GLFWApplicationDelegate
applyAspectRatio	src/win32_window.c	/^static void applyAspectRatio(_GLFWwindow* window, int edge, RECT* area)$/;"	f	typeref:typename:void	file:
arc_segment_count	deps/nuklear.h	/^    unsigned arc_segment_count; \/* number of segments used for arcs: default to 22 *\/$/;"	m	struct:nk_convert_config	typeref:typename:unsigned
arrange_windows	tests/windows.c	/^static void arrange_windows(void)$/;"	f	typeref:typename:void	file:
arrayLayer	deps/glad/vulkan.h	/^    uint32_t                 arrayLayer;$/;"	m	struct:VkImageSubresource	typeref:typename:uint32_t
arrayLayers	deps/glad/vulkan.h	/^    uint32_t                 arrayLayers;$/;"	m	struct:VkImageCreateInfo	typeref:typename:uint32_t
arrayPitch	deps/glad/vulkan.h	/^    VkDeviceSize             arrayPitch;$/;"	m	struct:VkSubresourceLayout	typeref:typename:VkDeviceSize
array_of_unicode_codepoints	deps/nuklear.h	/^    int *array_of_unicode_codepoints;$/;"	m	struct:nk_tt_pack_range	typeref:typename:int *
ascent	deps/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font	typeref:typename:float
aspectMask	deps/glad/vulkan.h	/^    VkImageAspectFlags                aspectMask;$/;"	m	struct:VkInputAttachmentAspectReference	typeref:typename:VkImageAspectFlags
aspectMask	deps/glad/vulkan.h	/^    VkImageAspectFlags       aspectMask;$/;"	m	struct:VkClearAttachment	typeref:typename:VkImageAspectFlags
aspectMask	deps/glad/vulkan.h	/^    VkImageAspectFlags       aspectMask;$/;"	m	struct:VkImageSubresource	typeref:typename:VkImageAspectFlags
aspectMask	deps/glad/vulkan.h	/^    VkImageAspectFlags       aspectMask;$/;"	m	struct:VkImageSubresourceLayers	typeref:typename:VkImageAspectFlags
aspectMask	deps/glad/vulkan.h	/^    VkImageAspectFlags       aspectMask;$/;"	m	struct:VkImageSubresourceRange	typeref:typename:VkImageAspectFlags
aspectMask	deps/glad/vulkan.h	/^    VkImageAspectFlags       aspectMask;$/;"	m	struct:VkSparseImageFormatProperties	typeref:typename:VkImageAspectFlags
aspectReferenceCount	deps/glad/vulkan.h	/^    uint32_t                          aspectReferenceCount;$/;"	m	struct:VkRenderPassInputAttachmentAspectCreateInfo	typeref:typename:uint32_t
aspect_ratio	examples/heightmap.c	/^static GLfloat aspect_ratio = 4.0f\/3.0f;$/;"	v	typeref:typename:GLfloat	file:
aspect_ratio	examples/particles.c	/^float aspect_ratio;$/;"	v	typeref:typename:float
at_x	deps/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel	typeref:typename:float
at_y	deps/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel	typeref:typename:float
atlas	deps/nuklear_glfw_gl2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_glfw	typeref:struct:nk_font_atlas
attachment	deps/glad/vulkan.h	/^    uint32_t                 attachment;$/;"	m	struct:VkAttachmentReference	typeref:typename:uint32_t
attachmentCount	deps/glad/vulkan.h	/^    uint32_t                 attachmentCount;$/;"	m	struct:VkFramebufferCreateInfo	typeref:typename:uint32_t
attachmentCount	deps/glad/vulkan.h	/^    uint32_t                 attachmentCount;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo	typeref:typename:uint32_t
attachmentCount	deps/glad/vulkan.h	/^    uint32_t     attachmentCount;$/;"	m	struct:VkRenderPassCreateInfo	typeref:typename:uint32_t
attribute	deps/nuklear.h	/^    enum nk_draw_vertex_layout_attribute attribute;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_attribute
attributedSubstringForProposedRange:actualRange:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
autoIconify	src/internal.h	/^    GLFWbool            autoIconify;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWbool
autoIconify	src/internal.h	/^    GLFWbool      autoIconify;$/;"	m	struct:_GLFWwndconfig	typeref:typename:GLFWbool
auxBuffers	src/internal.h	/^    int         auxBuffers;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
available	src/internal.h	/^        GLFWbool        available;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:GLFWbool
available	src/x11_platform.h	/^        GLFWbool     available;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00208	typeref:typename:GLFWbool
available	src/x11_platform.h	/^        GLFWbool    available;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:GLFWbool
available	src/x11_platform.h	/^        GLFWbool    available;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00608	typeref:typename:GLFWbool
available	src/x11_platform.h	/^        GLFWbool    available;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00808	typeref:typename:GLFWbool
available	src/x11_platform.h	/^        GLFWbool    available;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00908	typeref:typename:GLFWbool
available	src/x11_platform.h	/^        GLFWbool    available;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00a08	typeref:typename:GLFWbool
ax	examples/wave.c	/^double ax[GRIDW][GRIDH], ay[GRIDW][GRIDH];$/;"	v	typeref:typename:double[][]
axes	include/GLFW/glfw3.h	/^    float axes[6];$/;"	m	struct:GLFWgamepadstate	typeref:typename:float[6]
axes	src/cocoa_joystick.h	/^    CFMutableArrayRef   axes;$/;"	m	struct:_GLFWjoystickNS	typeref:typename:CFMutableArrayRef
axes	src/internal.h	/^    _GLFWmapelement axes[6];$/;"	m	struct:_GLFWmapping	typeref:typename:_GLFWmapelement[6]
axes	src/internal.h	/^    float*          axes;$/;"	m	struct:_GLFWjoystick	typeref:typename:float *
axisCount	src/internal.h	/^    int             axisCount;$/;"	m	struct:_GLFWjoystick	typeref:typename:int
axisCount	src/win32_joystick.c	/^    int                     axisCount;$/;"	m	struct:_GLFWobjenumWin32	typeref:typename:int	file:
axisOffset	src/internal.h	/^    int8_t          axisOffset;$/;"	m	struct:_GLFWmapelement	typeref:typename:int8_t
axisScale	src/internal.h	/^    int8_t          axisScale;$/;"	m	struct:_GLFWmapelement	typeref:typename:int8_t
ay	examples/wave.c	/^double ax[GRIDW][GRIDH], ay[GRIDW][GRIDH];$/;"	v	typeref:typename:double[][][][]
b	deps/glad/vulkan.h	/^    VkComponentSwizzle   b;$/;"	m	struct:VkComponentMapping	typeref:typename:VkComponentSwizzle
b	deps/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_vec2i
b	deps/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_vec2i
b	deps/nuklear.h	/^    union {const nk_uint *i; const nk_byte *b;} conv = {0};$/;"	m	union:nk_murmur_hash::__anonca785108080a	typeref:typename:const nk_byte *
b	deps/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
b	deps/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
b	examples/offscreen.c	/^    float r, g, b;$/;"	m	struct:__anone38272df0108	typeref:typename:float	file:
b	examples/particles.c	/^    float r,g,b;     \/\/ Color of particle$/;"	m	struct:__anon62203f4b0408	typeref:typename:float	file:
b	examples/wave.c	/^    GLfloat r, g, b;$/;"	m	struct:Vertex	typeref:typename:GLfloat	file:
b	tests/threads.c	/^    float r, g, b;$/;"	m	struct:__anon6fa524230108	typeref:typename:float	file:
b	tests/windows.c	/^    float r, g, b;$/;"	m	struct:__anon8425f2a30108	typeref:typename:float	file:
bLeftTrigger	deps/mingw/xinput.h	/^    BYTE bLeftTrigger;$/;"	m	struct:_XINPUT_GAMEPAD	typeref:typename:BYTE
bRightTrigger	deps/mingw/xinput.h	/^    BYTE bRightTrigger;$/;"	m	struct:_XINPUT_GAMEPAD	typeref:typename:BYTE
back	deps/glad/vulkan.h	/^    VkStencilOpState         back;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:VkStencilOpState
background	deps/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_command_text	typeref:struct:nk_color
background	deps/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
background	deps/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_text	typeref:struct:nk_color
background	deps/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_item
background	deps/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_item
ball_x	examples/boing.c	/^GLfloat ball_x          = -RADIUS;$/;"	v	typeref:typename:GLfloat
ball_x_inc	examples/boing.c	/^GLfloat ball_x_inc      = 1.f;$/;"	v	typeref:typename:GLfloat
ball_y	examples/boing.c	/^GLfloat ball_y          = -RADIUS;$/;"	v	typeref:typename:GLfloat
ball_y_inc	examples/boing.c	/^GLfloat ball_y_inc      = 2.f;$/;"	v	typeref:typename:GLfloat
bar_active	deps/nuklear.h	/^    struct nk_color bar_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
bar_filled	deps/nuklear.h	/^    struct nk_color bar_filled;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
bar_height	deps/nuklear.h	/^    float bar_height;$/;"	m	struct:nk_style_slider	typeref:typename:float
bar_hover	deps/nuklear.h	/^    struct nk_color bar_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
bar_normal	deps/nuklear.h	/^    struct nk_color bar_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
base	deps/nuklear.h	/^    struct nk_buffer *base;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_buffer *
base	docs/spaces.svg	/^     inkscape:showpageshadow="false" \/>$/;"	i
baseArrayLayer	deps/glad/vulkan.h	/^    uint32_t                 baseArrayLayer;$/;"	m	struct:VkImageSubresourceLayers	typeref:typename:uint32_t
baseArrayLayer	deps/glad/vulkan.h	/^    uint32_t                 baseArrayLayer;$/;"	m	struct:VkImageSubresourceRange	typeref:typename:uint32_t
baseArrayLayer	deps/glad/vulkan.h	/^    uint32_t         baseArrayLayer;$/;"	m	struct:VkClearRect	typeref:typename:uint32_t
baseMipLevel	deps/glad/vulkan.h	/^    uint32_t                 baseMipLevel;$/;"	m	struct:VkImageSubresourceRange	typeref:typename:uint32_t
basePipelineHandle	deps/glad/vulkan.h	/^    VkPipeline        basePipelineHandle;$/;"	m	struct:VkComputePipelineCreateInfo	typeref:typename:VkPipeline
basePipelineHandle	deps/glad/vulkan.h	/^    VkPipeline        basePipelineHandle;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:VkPipeline
basePipelineIndex	deps/glad/vulkan.h	/^    int32_t                  basePipelineIndex;$/;"	m	struct:VkComputePipelineCreateInfo	typeref:typename:int32_t
basePipelineIndex	deps/glad/vulkan.h	/^    int32_t                  basePipelineIndex;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:int32_t
baseline_y_delta	deps/nuklear.h	/^   float baseline_y_delta;$/;"	m	struct:nk_text_edit_row	typeref:typename:float
begin	deps/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view	typeref:typename:int
begin	deps/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_size
begin	deps/nuklear.h	/^    nk_size begin;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
begin	deps/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_curve	typeref:struct:nk_vec2i
begin	deps/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_line	typeref:struct:nk_vec2i
begin	deps/nuklear.h	/^    struct nk_window *begin;$/;"	m	struct:nk_context	typeref:struct:nk_window *
beginFadeReservation	src/cocoa_monitor.m	/^static CGDisplayFadeReservationToken beginFadeReservation(void)$/;"	f
beta	examples/wave.c	/^GLfloat alpha = 210.f, beta = -70.f;$/;"	v	typeref:typename:GLfloat
bigIcon	src/win32_platform.h	/^    HICON               bigIcon;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:HICON
bindCount	deps/glad/vulkan.h	/^    uint32_t                 bindCount;$/;"	m	struct:VkSparseBufferMemoryBindInfo	typeref:typename:uint32_t
bindCount	deps/glad/vulkan.h	/^    uint32_t                 bindCount;$/;"	m	struct:VkSparseImageMemoryBindInfo	typeref:typename:uint32_t
bindCount	deps/glad/vulkan.h	/^    uint32_t                 bindCount;$/;"	m	struct:VkSparseImageOpaqueMemoryBindInfo	typeref:typename:uint32_t
binding	deps/glad/vulkan.h	/^    uint32_t                 binding;$/;"	m	struct:VkDescriptorSetLayoutBinding	typeref:typename:uint32_t
binding	deps/glad/vulkan.h	/^    uint32_t                 binding;$/;"	m	struct:VkVertexInputAttributeDescription	typeref:typename:uint32_t
binding	deps/glad/vulkan.h	/^    uint32_t                 binding;$/;"	m	struct:VkVertexInputBindingDescription	typeref:typename:uint32_t
bindingCount	deps/glad/vulkan.h	/^    uint32_t                 bindingCount;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo	typeref:typename:uint32_t
blanking	src/x11_platform.h	/^        int         blanking;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00308	typeref:typename:int
blendConstants	deps/glad/vulkan.h	/^    float                    blendConstants [4];$/;"	m	struct:VkPipelineColorBlendStateCreateInfo	typeref:typename:float[4]
blendEnable	deps/glad/vulkan.h	/^    VkBool32                 blendEnable;$/;"	m	struct:VkPipelineColorBlendAttachmentState	typeref:typename:VkBool32
blue	include/GLFW/glfw3.h	/^    unsigned short* blue;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned short *
blueBits	include/GLFW/glfw3.h	/^    int blueBits;$/;"	m	struct:GLFWvidmode	typeref:typename:int
blueBits	src/internal.h	/^    int         blueBits;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
body	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
boing	examples/CMakeLists.txt	/^add_executable(boing WIN32 MACOSX_BUNDLE boing.c ${ICON} ${GLAD_GL})$/;"	t
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_panel	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_button	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_chart	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_combo	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_edit	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_progress	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_property	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_slider	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_tab	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_toggle	typeref:typename:float
border	deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_window	typeref:typename:float
borderColor	deps/glad/vulkan.h	/^    VkBorderColor            borderColor;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkBorderColor
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_color
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_color
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_color
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_tab	typeref:struct:nk_color
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
border_color	deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
border_cursor	deps/nuklear.h	/^    float border_cursor;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
bottom	deps/nuklear.h	/^    struct nk_color bottom;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
bottom	src/wl_platform.h	/^        _GLFWdecorationWayland             top, left, right, bottom;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590308	typeref:typename:_GLFWdecorationWayland
bottomDecoration	src/wl_platform.h	/^    bottomDecoration,$/;"	e	enum:_GLFWdecorationSideWayland
bounds	deps/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_panel	typeref:struct:nk_rect
bounds	deps/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_window	typeref:struct:nk_rect
buf	deps/nuklear.h	/^    struct nk_popup_buffer buf;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_buffer
buf	tests/triangle-vulkan.c	/^        VkBuffer buf;$/;"	m	struct:demo::__anondab0972c0308	typeref:typename:VkBuffer	file:
buffer	deps/glad/vulkan.h	/^    VkBuffer                                                               buffer;$/;"	m	struct:VkBufferMemoryRequirementsInfo2	typeref:typename:VkBuffer
buffer	deps/glad/vulkan.h	/^    VkBuffer                           buffer;$/;"	m	struct:VkBindBufferMemoryInfo	typeref:typename:VkBuffer
buffer	deps/glad/vulkan.h	/^    VkBuffer                 buffer;$/;"	m	struct:VkBufferMemoryBarrier	typeref:typename:VkBuffer
buffer	deps/glad/vulkan.h	/^    VkBuffer                 buffer;$/;"	m	struct:VkBufferViewCreateInfo	typeref:typename:VkBuffer
buffer	deps/glad/vulkan.h	/^    VkBuffer                 buffer;$/;"	m	struct:VkDescriptorBufferInfo	typeref:typename:VkBuffer
buffer	deps/glad/vulkan.h	/^    VkBuffer           buffer;$/;"	m	struct:VkMemoryDedicatedAllocateInfo	typeref:typename:VkBuffer
buffer	deps/glad/vulkan.h	/^    VkBuffer   buffer;$/;"	m	struct:VkSparseBufferMemoryBindInfo	typeref:typename:VkBuffer
buffer	deps/nuklear.h	/^    char buffer[NK_MAX_NUMBER_BUFFER];$/;"	m	struct:nk_property_state	typeref:typename:char[]
buffer	deps/nuklear.h	/^    struct nk_buffer *buffer;$/;"	m	struct:nk_draw_list	typeref:struct:nk_buffer *
buffer	deps/nuklear.h	/^    struct nk_buffer buffer;$/;"	m	struct:nk_str	typeref:struct:nk_buffer
buffer	deps/nuklear.h	/^    struct nk_command_buffer *buffer;$/;"	m	struct:nk_panel	typeref:struct:nk_command_buffer *
buffer	deps/nuklear.h	/^    struct nk_command_buffer buffer;$/;"	m	struct:nk_window	typeref:struct:nk_command_buffer
buffer	src/osmesa_context.h	/^    void*               buffer;$/;"	m	struct:_GLFWcontextOSMesa	typeref:typename:void *
buffer	src/wl_platform.h	/^        struct wl_buffer*                  buffer;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590308	typeref:struct:wl_buffer *
buffer	src/wl_platform.h	/^    struct wl_buffer*           buffer;$/;"	m	struct:_GLFWcursorWayland	typeref:struct:wl_buffer *
bufferBindCount	deps/glad/vulkan.h	/^    uint32_t                 bufferBindCount;$/;"	m	struct:VkBindSparseInfo	typeref:typename:uint32_t
bufferFeatures	deps/glad/vulkan.h	/^    VkFormatFeatureFlags     bufferFeatures;$/;"	m	struct:VkFormatProperties	typeref:typename:VkFormatFeatureFlags
bufferImageGranularity	deps/glad/vulkan.h	/^    VkDeviceSize             bufferImageGranularity;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkDeviceSize
bufferImageHeight	deps/glad/vulkan.h	/^    uint32_t                 bufferImageHeight;$/;"	m	struct:VkBufferImageCopy	typeref:typename:uint32_t
bufferOffset	deps/glad/vulkan.h	/^    VkDeviceSize             bufferOffset;$/;"	m	struct:VkBufferImageCopy	typeref:typename:VkDeviceSize
bufferRowLength	deps/glad/vulkan.h	/^    uint32_t                 bufferRowLength;$/;"	m	struct:VkBufferImageCopy	typeref:typename:uint32_t
buffers	tests/triangle-vulkan.c	/^    SwapchainBuffers *buffers;$/;"	m	struct:demo	typeref:typename:SwapchainBuffers *	file:
build	deps/nuklear.h	/^    int build;$/;"	m	struct:nk_context	typeref:typename:int
build	deps/nuklear.h	/^    struct nk_font_bake_data *build;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_bake_data *
bundle	src/cocoa_platform.h	/^        CFBundleRef     bundle;$/;"	E
button	deps/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style	typeref:struct:nk_style_button
button	deps/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_button
buttonCount	src/internal.h	/^    int             buttonCount;$/;"	m	struct:_GLFWjoystick	typeref:typename:int
buttonCount	src/win32_joystick.c	/^    int                     buttonCount;$/;"	m	struct:_GLFWobjenumWin32	typeref:typename:int	file:
button_behavior	deps/nuklear.h	/^    enum nk_button_behavior button_behavior;$/;"	m	struct:nk_context	typeref:enum:nk_button_behavior
button_behaviors	deps/nuklear.h	/^    struct nk_config_stack_button_behavior button_behaviors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_button_behavior
button_padding	deps/nuklear.h	/^    struct nk_vec2 button_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_vec2
buttons	deps/nuklear.h	/^    struct nk_mouse_button buttons[NK_BUTTON_MAX];$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse_button[]
buttons	include/GLFW/glfw3.h	/^    unsigned char buttons[15];$/;"	m	struct:GLFWgamepadstate	typeref:typename:unsigned char[15]
buttons	src/cocoa_joystick.h	/^    CFMutableArrayRef   buttons;$/;"	m	struct:_GLFWjoystickNS	typeref:typename:CFMutableArrayRef
buttons	src/internal.h	/^    _GLFWmapelement buttons[15];$/;"	m	struct:_GLFWmapping	typeref:typename:_GLFWmapelement[15]
buttons	src/internal.h	/^    unsigned char*  buttons;$/;"	m	struct:_GLFWjoystick	typeref:typename:unsigned char *
c	deps/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_vec2i
c	deps/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_vec2i
c	deps/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big	typeref:typename:char
cAreaFill	deps/mingw/dinput.h	/^	D3DCOLOR	cAreaFill;$/;"	m	struct:_DICOLORSET	typeref:typename:D3DCOLOR
cAxes	deps/mingw/dinput.h	/^	DWORD			cAxes;$/;"	m	struct:DIEFFECT	typeref:typename:DWORD
cAxes	deps/mingw/dinput.h	/^	DWORD			cAxes;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:DWORD
cBorder	deps/mingw/dinput.h	/^	D3DCOLOR	cBorder;$/;"	m	struct:_DICOLORSET	typeref:typename:D3DCOLOR
cCalloutHighlight	deps/mingw/dinput.h	/^	D3DCOLOR	cCalloutHighlight;$/;"	m	struct:_DICOLORSET	typeref:typename:D3DCOLOR
cCalloutLine	deps/mingw/dinput.h	/^	D3DCOLOR	cCalloutLine;$/;"	m	struct:_DICOLORSET	typeref:typename:D3DCOLOR
cChannels	deps/mingw/dinput.h	/^	DWORD			cChannels;$/;"	m	struct:DICUSTOMFORCE	typeref:typename:DWORD
cControlFill	deps/mingw/dinput.h	/^	D3DCOLOR	cControlFill;$/;"	m	struct:_DICOLORSET	typeref:typename:D3DCOLOR
cHighlightFill	deps/mingw/dinput.h	/^	D3DCOLOR	cHighlightFill;$/;"	m	struct:_DICOLORSET	typeref:typename:D3DCOLOR
cSamples	deps/mingw/dinput.h	/^	DWORD			cSamples;$/;"	m	struct:DICUSTOMFORCE	typeref:typename:DWORD
cTextFore	deps/mingw/dinput.h	/^	D3DCOLOR	cTextFore;$/;"	m	struct:_DICOLORSET	typeref:typename:D3DCOLOR
cTextHighlight	deps/mingw/dinput.h	/^	D3DCOLOR	cTextHighlight;$/;"	m	struct:_DICOLORSET	typeref:typename:D3DCOLOR
calc_grid	examples/wave.c	/^void calc_grid(void)$/;"	f	typeref:typename:void
calculateRefreshRate	src/x11_monitor.c	/^static int calculateRefreshRate(const XRRModeInfo* mi)$/;"	f	typeref:typename:int	file:
callback	deps/nuklear.h	/^    nk_command_custom_callback callback;$/;"	m	struct:nk_command_custom	typeref:typename:nk_command_custom_callback
callback	src/wl_platform.h	/^    struct wl_callback*         callback;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:wl_callback *
callback_data	deps/nuklear.h	/^    nk_handle callback_data;$/;"	m	struct:nk_command_custom	typeref:typename:nk_handle
callbacks	src/internal.h	/^    } callbacks;$/;"	m	struct:_GLFWlibrary	typeref:struct:_GLFWlibrary::__anona0faa0af0a08
callbacks	src/internal.h	/^    } callbacks;$/;"	m	struct:_GLFWwindow	typeref:struct:_GLFWwindow::__anona0faa0af0608
calls	deps/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
calls	deps/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
canBecomeKeyView	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
canBecomeKeyWindow	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWWindow
canBecomeMainWindow	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWWindow
cap	deps/nuklear.h	/^    nk_size cap;$/;"	m	struct:nk_pool	typeref:typename:nk_size
capacity	deps/nuklear.h	/^    unsigned capacity;$/;"	m	struct:nk_pool	typeref:typename:unsigned
capsLockMask	src/wl_platform.h	/^        xkb_mod_mask_t          capsLockMask;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:xkb_mod_mask_t
cbInBuffer	deps/mingw/dinput.h	/^	DWORD	cbInBuffer;$/;"	m	struct:DIEFFESCAPE	typeref:typename:DWORD
cbOutBuffer	deps/mingw/dinput.h	/^	DWORD	cbOutBuffer;$/;"	m	struct:DIEFFESCAPE	typeref:typename:DWORD
cbSize	src/win32_platform.h	/^    DWORD cbSize;$/;"	m	struct:__anon622bd5890108	typeref:typename:DWORD
cbTypeSpecificParams	deps/mingw/dinput.h	/^	DWORD			cbTypeSpecificParams;$/;"	m	struct:DIEFFECT	typeref:typename:DWORD
cbTypeSpecificParams	deps/mingw/dinput.h	/^	DWORD			cbTypeSpecificParams;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:DWORD
cc	docs/spaces.svg	/^   sodipodi:docname="spaces.svg">$/;"	n	uri:http://creativecommons.org/ns#
centerCursor	src/internal.h	/^    GLFWbool      centerCursor;$/;"	m	struct:_GLFWwndconfig	typeref:typename:GLFWbool
changeToResourcesDirectory	src/cocoa_init.m	/^static void changeToResourcesDirectory(void)$/;"	f
char_callback	tests/events.c	/^static void char_callback(GLFWwindow* window, unsigned int codepoint)$/;"	f	typeref:typename:void	file:
char_storage	deps/nuklear.h	/^   short char_storage;$/;"	m	struct:nk_text_undo_record	typeref:typename:short
character	src/internal.h	/^        GLFWcharfun             character;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWcharfun
characterIndexForPoint:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
chardata_for_range	deps/nuklear.h	/^    struct nk_tt_packedchar *chardata_for_range; \/* output *\/$/;"	m	struct:nk_tt_pack_range	typeref:struct:nk_tt_packedchar *
charmods	src/internal.h	/^        GLFWcharmodsfun         charmods;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWcharmodsfun
chart	deps/nuklear.h	/^    struct nk_chart chart;$/;"	m	struct:nk_panel	typeref:struct:nk_chart
chart	deps/nuklear.h	/^    struct nk_style_chart chart;$/;"	m	struct:nk_style	typeref:struct:nk_style_chart
chart_ramp_array	tests/gamma.c	/^static void chart_ramp_array(struct nk_context* nk,$/;"	f	typeref:typename:void	file:
chdir	src/internal.h	/^        GLFWbool  chdir;$/;"	m	struct:_GLFWinitconfig::__anona0faa0af0108	typeref:typename:GLFWbool
checkScaleChange	src/wl_window.c	/^static void checkScaleChange(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
checkbox	deps/nuklear.h	/^    struct nk_style_toggle checkbox;$/;"	m	struct:nk_style	typeref:struct:nk_style_toggle
chooseEGLConfig	src/egl_context.c	/^static GLFWbool chooseEGLConfig(const _GLFWctxconfig* ctxconfig,$/;"	f	typeref:typename:GLFWbool	file:
chooseGLXFBConfig	src/glx_context.c	/^static GLFWbool chooseGLXFBConfig(const _GLFWfbconfig* desired,$/;"	f	typeref:typename:GLFWbool	file:
chooseImage	src/win32_window.c	/^static const GLFWimage* chooseImage(int count, const GLFWimage* images,$/;"	f	typeref:typename:const GLFWimage *	file:
choosePixelFormat	src/wgl_context.c	/^static int choosePixelFormat(_GLFWwindow* window,$/;"	f	typeref:typename:int	file:
chromaFilter	deps/glad/vulkan.h	/^    VkFilter                           chromaFilter;$/;"	m	struct:VkSamplerYcbcrConversionCreateInfo	typeref:typename:VkFilter
circle_segment_count	deps/nuklear.h	/^    unsigned circle_segment_count; \/* number of segments used for circles: default to 22 *\/$/;"	m	struct:nk_convert_config	typeref:typename:unsigned
circle_vtx	deps/nuklear.h	/^    struct nk_vec2 circle_vtx[12];$/;"	m	struct:nk_draw_list	typeref:struct:nk_vec2[12]
className	src/internal.h	/^        char      className[256];$/;"	m	struct:_GLFWwndconfig::__anona0faa0af0308	typeref:typename:char[256]
clearValue	deps/glad/vulkan.h	/^    VkClearValue             clearValue;$/;"	m	struct:VkClearAttachment	typeref:typename:VkClearValue
clearValueCount	deps/glad/vulkan.h	/^    uint32_t                 clearValueCount;$/;"	m	struct:VkRenderPassBeginInfo	typeref:typename:uint32_t
clicked	deps/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_key	typeref:typename:unsigned int
clicked	deps/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_mouse_button	typeref:typename:unsigned int
clicked_pos	deps/nuklear.h	/^    struct nk_vec2 clicked_pos;$/;"	m	struct:nk_mouse_button	typeref:struct:nk_vec2
client	src/egl_context.h	/^   void*            client;$/;"	m	struct:_GLFWcontextEGL	typeref:typename:void *
client	src/internal.h	/^    int                 client;$/;"	m	struct:_GLFWcontext	typeref:typename:int
client	src/internal.h	/^    int           client;$/;"	m	struct:_GLFWctxconfig	typeref:typename:int
clip	deps/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_context	typeref:struct:nk_clipboard
clip	deps/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_text_edit	typeref:struct:nk_clipboard
clip	deps/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_rect
clip	deps/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_panel	typeref:struct:nk_rect
clip_rect	deps/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_command	typeref:struct:nk_rect
clip_rect	deps/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_list	typeref:struct:nk_rect
clipboard	tests/CMakeLists.txt	/^add_executable(clipboard clipboard.c ${GETOPT} ${GLAD_GL})$/;"	t
clipboardSendSize	src/wl_platform.h	/^    size_t                      clipboardSendSize;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:size_t
clipboardSendString	src/wl_platform.h	/^    char*                       clipboardSendString;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:char *
clipboardSize	src/wl_platform.h	/^    size_t                      clipboardSize;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:size_t
clipboardString	src/win32_platform.h	/^    char*               clipboardString;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:char *
clipboardString	src/wl_platform.h	/^    char*                       clipboardString;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:char *
clipboardString	src/x11_platform.h	/^    char*           clipboardString;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:char *
clipped	deps/glad/vulkan.h	/^    VkBool32                           clipped;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkBool32
clock_gettime	deps/tinycthread.h	/^#define clock_gettime /;"	d
clockid_t	deps/tinycthread.h	/^#define clockid_t /;"	d
close	src/internal.h	/^        GLFWwindowclosefun      close;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWwindowclosefun
closeJoystick	src/cocoa_joystick.m	/^static void closeJoystick(_GLFWjoystick* js)$/;"	f	struct:_GLFWjoyelementNS
closeJoystick	src/linux_joystick.c	/^static void closeJoystick(_GLFWjoystick* js)$/;"	f	typeref:typename:void	file:
closeJoystick	src/win32_joystick.c	/^static void closeJoystick(_GLFWjoystick* js)$/;"	f	typeref:typename:void	file:
close_button	deps/nuklear.h	/^    struct nk_style_button close_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_button
close_symbol	deps/nuklear.h	/^    enum nk_symbol_type close_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_symbol_type
close_window	tests/reopen.c	/^static void close_window(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
closeable	tests/events.c	/^    int closeable;$/;"	m	struct:__anon79ddf3cd0108	typeref:typename:int	file:
cmd	tests/triangle-vulkan.c	/^    VkCommandBuffer cmd;$/;"	m	struct:__anondab0972c0108	typeref:typename:VkCommandBuffer	file:
cmd_count	deps/nuklear.h	/^    unsigned int cmd_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
cmd_offset	deps/nuklear.h	/^    nk_size cmd_offset;$/;"	m	struct:nk_draw_list	typeref:typename:nk_size
cmd_pool	tests/triangle-vulkan.c	/^    VkCommandPool cmd_pool;$/;"	m	struct:demo	typeref:typename:VkCommandPool	file:
cmds	deps/nuklear_glfw_gl2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_buffer
cnd_broadcast	deps/tinycthread.c	/^int cnd_broadcast(cnd_t *cond)$/;"	f	typeref:typename:int
cnd_destroy	deps/tinycthread.c	/^void cnd_destroy(cnd_t *cond)$/;"	f	typeref:typename:void
cnd_init	deps/tinycthread.c	/^int cnd_init(cnd_t *cond)$/;"	f	typeref:typename:int
cnd_signal	deps/tinycthread.c	/^int cnd_signal(cnd_t *cond)$/;"	f	typeref:typename:int
cnd_t	deps/tinycthread.h	/^typedef pthread_cond_t cnd_t;$/;"	t	typeref:typename:pthread_cond_t
cnd_t	deps/tinycthread.h	/^} cnd_t;$/;"	t	typeref:struct:__anon92fdd8d50208
cnd_timedwait	deps/tinycthread.c	/^int cnd_timedwait(cnd_t *cond, mtx_t *mtx, const struct timespec *ts)$/;"	f	typeref:typename:int
cnd_wait	deps/tinycthread.c	/^int cnd_wait(cnd_t *cond, mtx_t *mtx)$/;"	f	typeref:typename:int
code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
code	src/internal.h	/^    int             code;$/;"	m	struct:_GLFWerror	typeref:typename:int
codeSize	deps/glad/vulkan.h	/^    size_t                   codeSize;$/;"	m	struct:VkShaderModuleCreateInfo	typeref:typename:size_t
codepair	src/xkb_unicode.c	/^static const struct codepair {$/;"	s	file:
codepoint	deps/nuklear.h	/^    nk_rune codepoint;$/;"	m	struct:nk_font_glyph	typeref:typename:nk_rune
col	deps/nuklear.h	/^    struct nk_color col;$/;"	m	struct:nk_command_image	typeref:struct:nk_color
col	deps/nuklear_glfw_gl2.h	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	typeref:typename:nk_byte[4]
col	examples/triangle-opengl.c	/^    vec3 col;$/;"	m	struct:Vertex	typeref:typename:vec3	file:
color	deps/glad/vulkan.h	/^    VkClearColorValue        color;$/;"	m	union:VkClearValue	typeref:typename:VkClearColorValue
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_curve	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_line	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_text	typeref:struct:nk_color
color	deps/nuklear.h	/^    struct nk_color color;$/;"	m	union:nk_style_item_data	typeref:struct:nk_color
colorAttachment	deps/glad/vulkan.h	/^    uint32_t                 colorAttachment;$/;"	m	struct:VkClearAttachment	typeref:typename:uint32_t
colorAttachmentCount	deps/glad/vulkan.h	/^    uint32_t                 colorAttachmentCount;$/;"	m	struct:VkSubpassDescription	typeref:typename:uint32_t
colorBlendOp	deps/glad/vulkan.h	/^    VkBlendOp                colorBlendOp;$/;"	m	struct:VkPipelineColorBlendAttachmentState	typeref:typename:VkBlendOp
colorSpace	deps/glad/vulkan.h	/^    VkColorSpaceKHR                    colorSpace;$/;"	m	struct:VkSurfaceFormatKHR	typeref:typename:VkColorSpaceKHR
colorWriteMask	deps/glad/vulkan.h	/^    VkColorComponentFlags    colorWriteMask;$/;"	m	struct:VkPipelineColorBlendAttachmentState	typeref:typename:VkColorComponentFlags
color_space	tests/triangle-vulkan.c	/^    VkColorSpaceKHR color_space;$/;"	m	struct:demo	typeref:typename:VkColorSpaceKHR	file:
colormap	src/x11_platform.h	/^    Colormap        colormap;$/;"	m	struct:_GLFWwindowX11	typeref:typename:Colormap
colors	deps/nuklear.h	/^    struct nk_config_stack_color colors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_color
colors	tests/windows.c	/^} colors[] =$/;"	v	typeref:typename:const struct __anon8425f2a30108[]
columns	deps/nuklear.h	/^    int columns;$/;"	m	struct:nk_row_layout	typeref:typename:int
combinedImageSamplerDescriptorCount	deps/glad/vulkan.h	/^    uint32_t                           combinedImageSamplerDescriptorCount;$/;"	m	struct:VkSamplerYcbcrConversionImageFormatProperties	typeref:typename:uint32_t
combo	deps/nuklear.h	/^    struct nk_style_combo combo;$/;"	m	struct:nk_style	typeref:struct:nk_style_combo
combo_border	deps/nuklear.h	/^    float combo_border;$/;"	m	struct:nk_style_window	typeref:typename:float
combo_border_color	deps/nuklear.h	/^    struct nk_color combo_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
combo_count	deps/nuklear.h	/^    unsigned combo_count;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
combo_padding	deps/nuklear.h	/^    struct nk_vec2 combo_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
commandBufferCount	deps/glad/vulkan.h	/^    uint32_t                 commandBufferCount;$/;"	m	struct:VkCommandBufferAllocateInfo	typeref:typename:uint32_t
commandBufferCount	deps/glad/vulkan.h	/^    uint32_t           commandBufferCount;$/;"	m	struct:VkDeviceGroupSubmitInfo	typeref:typename:uint32_t
commandBufferCount	deps/glad/vulkan.h	/^    uint32_t         commandBufferCount;$/;"	m	struct:VkSubmitInfo	typeref:typename:uint32_t
commandPool	deps/glad/vulkan.h	/^    VkCommandPool            commandPool;$/;"	m	struct:VkCommandBufferAllocateInfo	typeref:typename:VkCommandPool
compareElements	src/cocoa_joystick.m	/^static CFComparisonResult compareElements(const void* fp,$/;"	f	struct:_GLFWjoyelementNS
compareEnable	deps/glad/vulkan.h	/^    VkBool32                 compareEnable;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkBool32
compareJoystickObjects	src/win32_joystick.c	/^static int compareJoystickObjects(const void* first, const void* second)$/;"	f	typeref:typename:int	file:
compareJoysticks	src/linux_joystick.c	/^static int compareJoysticks(const void* fp, const void* sp)$/;"	f	typeref:typename:int	file:
compareMask	deps/glad/vulkan.h	/^    uint32_t                 compareMask;$/;"	m	struct:VkStencilOpState	typeref:typename:uint32_t
compareOp	deps/glad/vulkan.h	/^    VkCompareOp              compareOp;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkCompareOp
compareOp	deps/glad/vulkan.h	/^    VkCompareOp              compareOp;$/;"	m	struct:VkStencilOpState	typeref:typename:VkCompareOp
compareVideoModes	src/monitor.c	/^static int compareVideoModes(const void* fp, const void* sp)$/;"	f	typeref:typename:int	file:
compatibleHandleTypes	deps/glad/vulkan.h	/^    VkExternalFenceHandleTypeFlags   compatibleHandleTypes;$/;"	m	struct:VkExternalFenceProperties	typeref:typename:VkExternalFenceHandleTypeFlags
compatibleHandleTypes	deps/glad/vulkan.h	/^    VkExternalMemoryHandleTypeFlags   compatibleHandleTypes;$/;"	m	struct:VkExternalMemoryProperties	typeref:typename:VkExternalMemoryHandleTypeFlags
compatibleHandleTypes	deps/glad/vulkan.h	/^    VkExternalSemaphoreHandleTypeFlags   compatibleHandleTypes;$/;"	m	struct:VkExternalSemaphoreProperties	typeref:typename:VkExternalSemaphoreHandleTypeFlags
components	deps/glad/vulkan.h	/^    VkComponentMapping                 components;$/;"	m	struct:VkSamplerYcbcrConversionCreateInfo	typeref:typename:VkComponentMapping
components	deps/glad/vulkan.h	/^    VkComponentMapping       components;$/;"	m	struct:VkImageViewCreateInfo	typeref:typename:VkComponentMapping
composeState	src/wl_platform.h	/^        struct xkb_compose_state* composeState;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:struct:xkb_compose_state *
composeSymbol	src/wl_init.c	/^static xkb_keysym_t composeSymbol(xkb_keysym_t sym)$/;"	f	typeref:typename:xkb_keysym_t	file:
compose_state_feed	src/wl_platform.h	/^        PFN_xkb_compose_state_feed compose_state_feed;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_compose_state_feed
compose_state_get_one_sym	src/wl_platform.h	/^        PFN_xkb_compose_state_get_one_sym compose_state_get_one_sym;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_compose_state_get_one_sym
compose_state_get_status	src/wl_platform.h	/^        PFN_xkb_compose_state_get_status compose_state_get_status;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_compose_state_get_status
compose_state_new	src/wl_platform.h	/^        PFN_xkb_compose_state_new compose_state_new;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_compose_state_new
compose_state_unref	src/wl_platform.h	/^        PFN_xkb_compose_state_unref compose_state_unref;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_compose_state_unref
compose_table_new_from_locale	src/wl_platform.h	/^        PFN_xkb_compose_table_new_from_locale compose_table_new_from_locale;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_compose_table_new_from_locale
compose_table_unref	src/wl_platform.h	/^        PFN_xkb_compose_table_unref compose_table_unref;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_compose_table_unref
compositeAlpha	deps/glad/vulkan.h	/^    VkCompositeAlphaFlagBitsKHR        compositeAlpha;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkCompositeAlphaFlagBitsKHR
compositor	src/wl_platform.h	/^    struct wl_compositor*       compositor;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_compositor *
compositorVersion	src/wl_platform.h	/^    int                         compositorVersion;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:int
con_count	deps/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
con_old	deps/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
config	deps/nuklear.h	/^    struct nk_convert_config config;$/;"	m	struct:nk_draw_list	typeref:struct:nk_convert_config
config	deps/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font	typeref:struct:nk_font_config *
config	deps/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_config *
config	src/egl_context.h	/^   EGLConfig        config;$/;"	m	struct:_GLFWcontextEGL	typeref:typename:EGLConfig
connection	src/x11_platform.h	/^    xcb_connection_t*           connection;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR	typeref:typename:xcb_connection_t *
constantID	deps/glad/vulkan.h	/^    uint32_t                       constantID;$/;"	m	struct:VkSpecializationMapEntry	typeref:typename:uint32_t
contentScaleX	src/x11_platform.h	/^    float           contentScaleX, contentScaleY;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:float
contentScaleY	src/x11_platform.h	/^    float           contentScaleX, contentScaleY;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:float
content_padding	deps/nuklear.h	/^    struct nk_vec2 content_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_vec2
context	deps/stb_image_write.h	/^   void *context;$/;"	m	struct:__anon955e808b0108	typeref:typename:void *
context	src/internal.h	/^        _GLFWctxconfig  context;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0708	typeref:typename:_GLFWctxconfig
context	src/internal.h	/^    _GLFWcontext        context;$/;"	m	struct:_GLFWwindow	typeref:typename:_GLFWcontext
context	src/wl_platform.h	/^        struct xkb_context*     context;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:struct:xkb_context *
context	src/x11_platform.h	/^    XContext        context;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:XContext
contextSlot	src/internal.h	/^    _GLFWtls            contextSlot;$/;"	m	struct:_GLFWlibrary	typeref:typename:_GLFWtls
context_new	src/wl_platform.h	/^        PFN_xkb_context_new context_new;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_context_new
context_unref	src/wl_platform.h	/^        PFN_xkb_context_unref context_unref;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_context_unref
contextual_border	deps/nuklear.h	/^    float contextual_border;$/;"	m	struct:nk_style_window	typeref:typename:float
contextual_border_color	deps/nuklear.h	/^    struct nk_color contextual_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
contextual_button	deps/nuklear.h	/^    struct nk_style_button contextual_button;$/;"	m	struct:nk_style	typeref:struct:nk_style_button
contextual_padding	deps/nuklear.h	/^    struct nk_vec2 contextual_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
controlMask	src/wl_platform.h	/^        xkb_mod_mask_t          controlMask;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:xkb_mod_mask_t
conversion	deps/glad/vulkan.h	/^    VkSamplerYcbcrConversion        conversion;$/;"	m	struct:VkSamplerYcbcrConversionInfo	typeref:typename:VkSamplerYcbcrConversion
convertLatin1toUTF8	src/x11_window.c	/^static char* convertLatin1toUTF8(const char* source)$/;"	f	typeref:typename:char *	file:
coord_type	deps/nuklear.h	/^    enum nk_font_coord_type coord_type;$/;"	m	struct:nk_font_config	typeref:enum:nk_font_coord_type
copy	deps/nuklear.h	/^    nk_plugin_copy copy;$/;"	m	struct:nk_clipboard	typeref:typename:nk_plugin_copy
correlationMaskCount	deps/glad/vulkan.h	/^    uint32_t                 correlationMaskCount;$/;"	m	struct:VkRenderPassMultiviewCreateInfo	typeref:typename:uint32_t
cos_deg	examples/boing.c	/^double cos_deg( double deg )$/;"	f	typeref:typename:double
count	deps/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view	typeref:typename:int
count	deps/nuklear.h	/^    int count;$/;"	m	struct:nk_chart_slot	typeref:typename:int
count	deps/nuklear.h	/^    unsigned int count;$/;"	m	struct:nk_context	typeref:typename:unsigned int
count	src/x11_platform.h	/^        int         count;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00308	typeref:typename:int
counter	tests/events.c	/^static unsigned int counter = 0;$/;"	v	typeref:typename:unsigned int	file:
cp	deps/mingw/dinput.h	/^    CPOINT	cp[MAXCPOINTSNUM];$/;"	m	struct:DIPROPCPOINTS	typeref:typename:CPOINT[]
createAnonymousFile	src/wl_window.c	/^static int createAnonymousFile(off_t size)$/;"	f	typeref:typename:int	file:
createDecoration	src/wl_window.c	/^static void createDecoration(_GLFWdecorationWayland* decoration,$/;"	f	typeref:typename:void	file:
createDecorations	src/wl_window.c	/^static void createDecorations(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
createHelperWindow	src/win32_init.c	/^static GLFWbool createHelperWindow(void)$/;"	f	typeref:typename:GLFWbool	file:
createHelperWindow	src/x11_init.c	/^static Window createHelperWindow(void)$/;"	f	typeref:typename:Window	file:
createHiddenCursor	src/x11_init.c	/^static Cursor createHiddenCursor(void)$/;"	f	typeref:typename:Cursor	file:
createIcon	src/win32_window.c	/^static HICON createIcon(const GLFWimage* image,$/;"	f	typeref:typename:HICON	file:
createKeyTables	src/cocoa_init.m	/^static void createKeyTables(void)$/;"	f
createKeyTables	src/win32_init.c	/^static void createKeyTables(void)$/;"	f	typeref:typename:void	file:
createKeyTables	src/wl_init.c	/^static void createKeyTables(void)$/;"	f	typeref:typename:void	file:
createKeyTables	src/x11_init.c	/^static void createKeyTables(void)$/;"	f	typeref:typename:void	file:
createLegacyContextGLX	src/glx_context.c	/^static GLXContext createLegacyContextGLX(_GLFWwindow* window,$/;"	f	typeref:typename:GLXContext	file:
createMenuBar	src/cocoa_init.m	/^static void createMenuBar(void)$/;"	f
createMonitor	src/win32_monitor.c	/^static _GLFWmonitor* createMonitor(DISPLAY_DEVICEW* adapter,$/;"	f	typeref:typename:_GLFWmonitor *	file:
createNativeWindow	src/cocoa_window.m	/^static GLFWbool createNativeWindow(_GLFWwindow* window,$/;"	f
createNativeWindow	src/null_window.c	/^static int createNativeWindow(_GLFWwindow* window,$/;"	f	typeref:typename:int	file:
createNativeWindow	src/win32_window.c	/^static int createNativeWindow(_GLFWwindow* window,$/;"	f	typeref:typename:int	file:
createNativeWindow	src/x11_window.c	/^static GLFWbool createNativeWindow(_GLFWwindow* window,$/;"	f	typeref:typename:GLFWbool	file:
createShmBuffer	src/wl_window.c	/^static struct wl_buffer* createShmBuffer(const GLFWimage* image)$/;"	f	typeref:struct:wl_buffer *	file:
createSurface	src/wl_window.c	/^static GLFWbool createSurface(_GLFWwindow* window,$/;"	f	typeref:typename:GLFWbool	file:
createTmpfileCloexec	src/wl_window.c	/^static int createTmpfileCloexec(char* tmpname)$/;"	f	typeref:typename:int	file:
createXdgSurface	src/wl_window.c	/^static GLFWbool createXdgSurface(_GLFWwindow* window)$/;"	f	typeref:typename:GLFWbool	file:
create_cursor_frame	tests/cursor.c	/^static GLFWcursor* create_cursor_frame(float t)$/;"	f	typeref:typename:GLFWcursor *	file:
create_tracking_cursor	tests/cursor.c	/^static GLFWcursor* create_tracking_cursor(void)$/;"	f	typeref:typename:GLFWcursor *	file:
create_window	tests/iconify.c	/^static GLFWwindow* create_window(GLFWmonitor* monitor)$/;"	f	typeref:typename:GLFWwindow *	file:
crtc	src/x11_platform.h	/^    RRCrtc          crtc;$/;"	m	struct:_GLFWmonitorX11	typeref:typename:RRCrtc
ctrl	deps/nuklear.h	/^    struct nk_vec2i ctrl[2];$/;"	m	struct:nk_command_curve	typeref:struct:nk_vec2i[2]
ctx	deps/nuklear.h	/^    struct nk_context *ctx;$/;"	m	struct:nk_list_view	typeref:struct:nk_context *
ctx	deps/nuklear_glfw_gl2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_glfw	typeref:struct:nk_context
cullMode	deps/glad/vulkan.h	/^    VkCullModeFlags          cullMode;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:VkCullModeFlags
curFrame	tests/triangle-vulkan.c	/^    int32_t curFrame;$/;"	m	struct:demo	typeref:typename:int32_t	file:
cur_icon_color	tests/icon.c	/^static int cur_icon_color = 0;$/;"	v	typeref:typename:int	file:
current	deps/nuklear.h	/^    struct nk_window *current;$/;"	m	struct:nk_context	typeref:struct:nk_window *
currentCursor	src/wl_platform.h	/^    _GLFWcursor*                currentCursor;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:_GLFWcursor *
currentExtent	deps/glad/vulkan.h	/^    VkExtent2D                         currentExtent;$/;"	m	struct:VkSurfaceCapabilitiesKHR	typeref:typename:VkExtent2D
currentImage	src/wl_platform.h	/^    int                         currentImage;$/;"	m	struct:_GLFWcursorWayland	typeref:typename:int
currentMode	src/internal.h	/^    GLFWvidmode     currentMode;$/;"	m	struct:_GLFWmonitor	typeref:typename:GLFWvidmode
currentMode	src/wl_platform.h	/^    int                         currentMode;$/;"	m	struct:_GLFWmonitorWayland	typeref:typename:int
currentRamp	src/internal.h	/^    GLFWgammaramp   currentRamp;$/;"	m	struct:_GLFWmonitor	typeref:typename:GLFWgammaramp
currentTransform	deps/glad/vulkan.h	/^    VkSurfaceTransformFlagBitsKHR      currentTransform;$/;"	m	struct:VkSurfaceCapabilitiesKHR	typeref:typename:VkSurfaceTransformFlagBitsKHR
current_buffer	tests/triangle-vulkan.c	/^    uint32_t current_buffer;$/;"	m	struct:demo	typeref:typename:uint32_t	file:
cursor	deps/nuklear.h	/^    int cursor;$/;"	m	struct:nk_edit_state	typeref:typename:int
cursor	deps/nuklear.h	/^    int cursor;$/;"	m	struct:nk_property_state	typeref:typename:int
cursor	deps/nuklear.h	/^    int cursor;$/;"	m	struct:nk_text_edit	typeref:typename:int
cursor	src/internal.h	/^    _GLFWcursor*        cursor;$/;"	m	struct:_GLFWwindow	typeref:typename:_GLFWcursor *
cursor	src/wl_platform.h	/^    struct wl_cursor*           cursor;$/;"	m	struct:_GLFWcursorWayland	typeref:struct:wl_cursor *
cursor	src/wl_platform.h	/^    } cursor;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::__anon32ec62590508
cursor	tests/CMakeLists.txt	/^add_executable(cursor cursor.c ${GLAD_GL})$/;"	t
cursorEnter	src/internal.h	/^        GLFWcursorenterfun      cursorEnter;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWcursorenterfun
cursorHiDPI	src/wl_platform.h	/^    struct wl_cursor*           cursorHiDPI;$/;"	m	struct:_GLFWcursorWayland	typeref:struct:wl_cursor *
cursorInContentArea	src/cocoa_window.m	/^static GLFWbool cursorInContentArea(_GLFWwindow* window)$/;"	f
cursorInContentArea	src/win32_window.c	/^static GLFWbool cursorInContentArea(_GLFWwindow* window)$/;"	f	typeref:typename:GLFWbool	file:
cursorListHead	src/internal.h	/^    _GLFWcursor*        cursorListHead;$/;"	m	struct:_GLFWlibrary	typeref:typename:_GLFWcursor *
cursorMode	src/internal.h	/^    int                 cursorMode;$/;"	m	struct:_GLFWwindow	typeref:typename:int
cursorPos	src/internal.h	/^        GLFWcursorposfun        cursorPos;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWcursorposfun
cursorPosFun	examples/splitview.c	/^static void cursorPosFun(GLFWwindow* window, double x, double y)$/;"	f	typeref:typename:void	file:
cursorPosX	src/wl_platform.h	/^    double                      cursorPosX, cursorPosY;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:double
cursorPosY	src/wl_platform.h	/^    double                      cursorPosX, cursorPosY;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:double
cursorPreviousName	src/wl_platform.h	/^    const char*                 cursorPreviousName;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:const char *
cursorSurface	src/wl_platform.h	/^    struct wl_surface*          cursorSurface;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_surface *
cursorTheme	src/wl_platform.h	/^    struct wl_cursor_theme*     cursorTheme;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_cursor_theme *
cursorThemeHiDPI	src/wl_platform.h	/^    struct wl_cursor_theme*     cursorThemeHiDPI;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_cursor_theme *
cursorTimerfd	src/wl_platform.h	/^    int                         cursorTimerfd;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:int
cursorTracked	src/win32_platform.h	/^    GLFWbool            cursorTracked;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:GLFWbool
cursorUpdate:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
cursorWarpDeltaY	src/cocoa_platform.h	/^    double          cursorWarpDeltaX, cursorWarpDeltaY;$/;"	E	struct:_GLFWwindowNS
cursorX	examples/wave.c	/^double cursorX;$/;"	v	typeref:typename:double
cursorY	examples/wave.c	/^double cursorY;$/;"	v	typeref:typename:double
cursor_active	deps/nuklear.h	/^    const struct nk_cursor *cursor_active;$/;"	m	struct:nk_style	typeref:typename:const struct nk_cursor *
cursor_active	deps/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
cursor_active	deps/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
cursor_active	deps/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
cursor_at_end_of_line	deps/nuklear.h	/^    unsigned char cursor_at_end_of_line;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
cursor_border	deps/nuklear.h	/^    float cursor_border;$/;"	m	struct:nk_style_progress	typeref:typename:float
cursor_border_color	deps/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_color
cursor_border_color	deps/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_color
cursor_enter_callback	tests/events.c	/^static void cursor_enter_callback(GLFWwindow* window, int entered)$/;"	f	typeref:typename:void	file:
cursor_hover	deps/nuklear.h	/^    struct nk_color cursor_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_hover	deps/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
cursor_hover	deps/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
cursor_hover	deps/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
cursor_hover	deps/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
cursor_input_message	tests/inputlag.c	/^enum { cursor_sync_query, cursor_input_message } cursor_method = cursor_sync_query;$/;"	e	enum:__anon16ba099c0103	file:
cursor_last	deps/nuklear.h	/^    struct nk_cursor *cursor_last;$/;"	m	struct:nk_style	typeref:struct:nk_cursor *
cursor_method	tests/inputlag.c	/^enum { cursor_sync_query, cursor_input_message } cursor_method = cursor_sync_query;$/;"	v	typeref:enum:__anon16ba099c0103
cursor_new	tests/inputlag.c	/^struct nk_vec2 cursor_new, cursor_pos, cursor_vel;$/;"	v	typeref:struct:nk_vec2
cursor_normal	deps/nuklear.h	/^    struct nk_color cursor_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_normal	deps/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
cursor_normal	deps/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
cursor_normal	deps/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
cursor_normal	deps/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
cursor_pos	tests/inputlag.c	/^struct nk_vec2 cursor_new, cursor_pos, cursor_vel;$/;"	v	typeref:struct:nk_vec2
cursor_pos_callback	tests/inputlag.c	/^void cursor_pos_callback(GLFWwindow* window, double xpos, double ypos)$/;"	f	typeref:typename:void
cursor_position_callback	examples/boing.c	/^void cursor_position_callback( GLFWwindow* window, double x, double y )$/;"	f	typeref:typename:void
cursor_position_callback	examples/wave.c	/^void cursor_position_callback(GLFWwindow* window, double x, double y)$/;"	f	typeref:typename:void
cursor_position_callback	tests/cursor.c	/^static void cursor_position_callback(GLFWwindow* window, double x, double y)$/;"	f	typeref:typename:void	file:
cursor_position_callback	tests/events.c	/^static void cursor_position_callback(GLFWwindow* window, double x, double y)$/;"	f	typeref:typename:void	file:
cursor_rounding	deps/nuklear.h	/^    float cursor_rounding;$/;"	m	struct:nk_style_progress	typeref:typename:float
cursor_size	deps/nuklear.h	/^    float cursor_size;$/;"	m	struct:nk_style_edit	typeref:typename:float
cursor_size	deps/nuklear.h	/^    struct nk_vec2 cursor_size;$/;"	m	struct:nk_style_slider	typeref:struct:nk_vec2
cursor_sync_query	tests/inputlag.c	/^enum { cursor_sync_query, cursor_input_message } cursor_method = cursor_sync_query;$/;"	e	enum:__anon16ba099c0103	file:
cursor_text_hover	deps/nuklear.h	/^    struct nk_color cursor_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_text_normal	deps/nuklear.h	/^    struct nk_color cursor_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_vel	tests/inputlag.c	/^struct nk_vec2 cursor_new, cursor_pos, cursor_vel;$/;"	v	typeref:struct:nk_vec2
cursor_visible	deps/nuklear.h	/^    int cursor_visible;$/;"	m	struct:nk_style	typeref:typename:int
cursor_x	examples/boing.c	/^GLfloat cursor_x        = 0.f;$/;"	v	typeref:typename:GLfloat
cursor_x	tests/cursor.c	/^static double cursor_x;$/;"	v	typeref:typename:double	file:
cursor_y	examples/boing.c	/^GLfloat cursor_y        = 0.f;$/;"	v	typeref:typename:GLfloat
cursor_y	tests/cursor.c	/^static double cursor_y;$/;"	v	typeref:typename:double	file:
cursors	deps/nuklear.h	/^    const struct nk_cursor *cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_style	typeref:typename:const struct nk_cursor * []
cursors	deps/nuklear.h	/^    struct nk_cursor cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_font_atlas	typeref:struct:nk_cursor[]
curve_segment_count	deps/nuklear.h	/^    unsigned curve_segment_count; \/* number of segments used for curves: default to 22 *\/$/;"	m	struct:nk_convert_config	typeref:typename:unsigned
custom	deps/nuklear.h	/^    struct nk_recti custom;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_recti
cx	deps/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc	typeref:typename:short
cx	deps/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled	typeref:typename:short
cx	deps/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short
cy	deps/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc	typeref:typename:short
cy	deps/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled	typeref:typename:short
cy	deps/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short
d	deps/nuklear.h	/^    double d;$/;"	m	union:nk_property	typeref:typename:double
d_done	examples/particles.c	/^    cnd_t     d_done;    \/\/ Condition: particle draw done$/;"	m	struct:__anon62203f4b0308	typeref:typename:cnd_t	file:
d_frame	examples/particles.c	/^    int       d_frame;   \/\/ Particle draw frame number$/;"	m	struct:__anon62203f4b0308	typeref:typename:int	file:
data	deps/nuklear.h	/^    const unsigned char* data; \/* pointer to .ttf file *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:const unsigned char *
data	deps/nuklear.h	/^    union nk_page_data data;$/;"	m	struct:nk_page_element	typeref:union:nk_page_data
data	deps/nuklear.h	/^    union nk_style_item_data data;$/;"	m	struct:nk_style_item	typeref:union:nk_style_item_data
dataDevice	src/wl_platform.h	/^    struct wl_data_device*      dataDevice;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_data_device *
dataDeviceHandleDataOffer	src/wl_init.c	/^static void dataDeviceHandleDataOffer(void* data,$/;"	f	typeref:typename:void	file:
dataDeviceHandleDrop	src/wl_init.c	/^static void dataDeviceHandleDrop(void* data,$/;"	f	typeref:typename:void	file:
dataDeviceHandleEnter	src/wl_init.c	/^static void dataDeviceHandleEnter(void* data,$/;"	f	typeref:typename:void	file:
dataDeviceHandleLeave	src/wl_init.c	/^static void dataDeviceHandleLeave(void* data,$/;"	f	typeref:typename:void	file:
dataDeviceHandleMotion	src/wl_init.c	/^static void dataDeviceHandleMotion(void* data,$/;"	f	typeref:typename:void	file:
dataDeviceHandleSelection	src/wl_init.c	/^static void dataDeviceHandleSelection(void* data,$/;"	f	typeref:typename:void	file:
dataDeviceListener	src/wl_init.c	/^static const struct wl_data_device_listener dataDeviceListener = {$/;"	v	typeref:typename:const struct wl_data_device_listener	file:
dataDeviceManager	src/wl_platform.h	/^    struct wl_data_device_manager*          dataDeviceManager;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_data_device_manager *
dataOffer	src/wl_platform.h	/^    struct wl_data_offer*       dataOffer;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_data_offer *
dataOfferHandleOffer	src/wl_init.c	/^static void dataOfferHandleOffer(void* data,$/;"	f	typeref:typename:void	file:
dataOfferListener	src/wl_init.c	/^static const struct wl_data_offer_listener dataOfferListener = {$/;"	v	typeref:typename:const struct wl_data_offer_listener	file:
dataSize	deps/glad/vulkan.h	/^    size_t                   dataSize;$/;"	m	struct:VkSpecializationInfo	typeref:typename:size_t
dataSource	src/wl_platform.h	/^    struct wl_data_source*      dataSource;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_data_source *
dataSourceHandleCancelled	src/wl_window.c	/^static void dataSourceHandleCancelled(void* data,$/;"	f	typeref:typename:void	file:
dataSourceHandleSend	src/wl_window.c	/^static void dataSourceHandleSend(void* data,$/;"	f	typeref:typename:void	file:
dataSourceHandleTarget	src/wl_window.c	/^static void dataSourceHandleTarget(void* data,$/;"	f	typeref:typename:void	file:
dataSourceListener	src/wl_window.c	/^static const struct wl_data_source_listener dataSourceListener = {$/;"	v	typeref:typename:const struct wl_data_source_listener	file:
dbgFunc	tests/triangle-vulkan.c	/^dbgFunc(VkFlags msgFlags, VkDebugReportObjectTypeEXT objType,$/;"	f	typeref:typename:VKAPI_ATTR VkBool32 VKAPI_CALL
dc	docs/spaces.svg	/^   sodipodi:docname="spaces.svg">$/;"	n	uri:http://purl.org/dc/elements/1.1/
dc	src/wgl_context.h	/^    HDC       dc;$/;"	m	struct:_GLFWcontextWGL	typeref:typename:HDC
dealloc	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
debug	src/internal.h	/^    GLFWbool            forward, debug, noerror;$/;"	m	struct:_GLFWcontext	typeref:typename:GLFWbool
debug	src/internal.h	/^    GLFWbool      debug;$/;"	m	struct:_GLFWctxconfig	typeref:typename:GLFWbool
dec_button	deps/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_button
dec_button	deps/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_button
dec_button	deps/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_button
dec_symbol	deps/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_symbol_type
dec_symbol	deps/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_symbol_type
decodeUTF8	src/x11_window.c	/^static unsigned int decodeUTF8(const char** s)$/;"	f	typeref:typename:unsigned int	file:
decorated	src/internal.h	/^    GLFWbool            decorated;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWbool
decorated	src/internal.h	/^    GLFWbool      decorated;$/;"	m	struct:_GLFWwndconfig	typeref:typename:GLFWbool
decoration	src/wl_platform.h	/^        struct zxdg_toplevel_decoration_v1* decoration;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590108	typeref:struct:zxdg_toplevel_decoration_v1 *
decorationManager	src/wl_platform.h	/^    struct zxdg_decoration_manager_v1*      decorationManager;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:zxdg_decoration_manager_v1 *
decorations	src/wl_platform.h	/^    } decorations;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:_GLFWwindowWayland::__anon32ec62590308
decorations	src/x11_window.c	/^        unsigned long decorations;$/;"	m	struct:_glfwPlatformSetWindowDecorated::__anon51ee5e7e0208	typeref:typename:unsigned long	file:
default_font	deps/nuklear.h	/^    struct nk_font *default_font;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font *
defs4	docs/spaces.svg	/^     id="defs4">$/;"	i
deg2rad	examples/boing.c	/^double deg2rad( double deg )$/;"	f	typeref:typename:double
deg_rot_y	examples/boing.c	/^GLfloat deg_rot_y       = 0.f;$/;"	v	typeref:typename:GLfloat
deg_rot_y_inc	examples/boing.c	/^GLfloat deg_rot_y_inc   = 2.f;$/;"	v	typeref:typename:GLfloat
delay	src/wl_platform.h	/^    uint32_t delay;$/;"	m	struct:wl_cursor_image	typeref:typename:uint32_t
delegate	src/cocoa_platform.h	/^    id              delegate;$/;"	E	struct:_GLFWwindowNS
delete_length	deps/nuklear.h	/^   short delete_length;$/;"	m	struct:nk_text_undo_record	typeref:typename:short
delta	deps/nuklear.h	/^    struct nk_vec2 delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
delta_time_seconds	deps/nuklear.h	/^    float delta_time_seconds;$/;"	m	struct:nk_context	typeref:typename:float
demo	tests/triangle-vulkan.c	/^struct demo {$/;"	s	file:
demo_check_layers	tests/triangle-vulkan.c	/^static VkBool32 demo_check_layers(uint32_t check_count, const char **check_names,$/;"	f	typeref:typename:VkBool32	file:
demo_cleanup	tests/triangle-vulkan.c	/^static void demo_cleanup(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_create_window	tests/triangle-vulkan.c	/^static void demo_create_window(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_destroy_texture_image	tests/triangle-vulkan.c	/^static void demo_destroy_texture_image(struct demo *demo,$/;"	f	typeref:typename:void	file:
demo_draw	tests/triangle-vulkan.c	/^static void demo_draw(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_draw_build_cmd	tests/triangle-vulkan.c	/^static void demo_draw_build_cmd(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_error_callback	tests/triangle-vulkan.c	/^static void demo_error_callback(int error, const char* description) {$/;"	f	typeref:typename:void	file:
demo_flush_init_cmd	tests/triangle-vulkan.c	/^static void demo_flush_init_cmd(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_init	tests/triangle-vulkan.c	/^static void demo_init(struct demo *demo, const int argc, const char *argv[])$/;"	f	typeref:typename:void	file:
demo_init_connection	tests/triangle-vulkan.c	/^static void demo_init_connection(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_init_device	tests/triangle-vulkan.c	/^static void demo_init_device(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_init_vk	tests/triangle-vulkan.c	/^static void demo_init_vk(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_init_vk_swapchain	tests/triangle-vulkan.c	/^static void demo_init_vk_swapchain(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_key_callback	tests/triangle-vulkan.c	/^static void demo_key_callback(GLFWwindow* window, int key, int scancode, int action, int mods) {$/;"	f	typeref:typename:void	file:
demo_prepare	tests/triangle-vulkan.c	/^static void demo_prepare(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_buffers	tests/triangle-vulkan.c	/^static void demo_prepare_buffers(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_depth	tests/triangle-vulkan.c	/^static void demo_prepare_depth(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_descriptor_layout	tests/triangle-vulkan.c	/^static void demo_prepare_descriptor_layout(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_descriptor_pool	tests/triangle-vulkan.c	/^static void demo_prepare_descriptor_pool(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_descriptor_set	tests/triangle-vulkan.c	/^static void demo_prepare_descriptor_set(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_framebuffers	tests/triangle-vulkan.c	/^static void demo_prepare_framebuffers(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_fs	tests/triangle-vulkan.c	/^static VkShaderModule demo_prepare_fs(struct demo *demo) {$/;"	f	typeref:typename:VkShaderModule	file:
demo_prepare_pipeline	tests/triangle-vulkan.c	/^static void demo_prepare_pipeline(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_render_pass	tests/triangle-vulkan.c	/^static void demo_prepare_render_pass(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_shader_module	tests/triangle-vulkan.c	/^demo_prepare_shader_module(struct demo *demo, const void *code, size_t size) {$/;"	f	typeref:typename:VkShaderModule	file:
demo_prepare_texture_image	tests/triangle-vulkan.c	/^demo_prepare_texture_image(struct demo *demo, const uint32_t *tex_colors,$/;"	f	typeref:typename:void	file:
demo_prepare_textures	tests/triangle-vulkan.c	/^static void demo_prepare_textures(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_vertices	tests/triangle-vulkan.c	/^static void demo_prepare_vertices(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_prepare_vs	tests/triangle-vulkan.c	/^static VkShaderModule demo_prepare_vs(struct demo *demo) {$/;"	f	typeref:typename:VkShaderModule	file:
demo_refresh_callback	tests/triangle-vulkan.c	/^static void demo_refresh_callback(GLFWwindow* window) {$/;"	f	typeref:typename:void	file:
demo_resize	tests/triangle-vulkan.c	/^static void demo_resize(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_resize_callback	tests/triangle-vulkan.c	/^static void demo_resize_callback(GLFWwindow* window, int width, int height) {$/;"	f	typeref:typename:void	file:
demo_run	tests/triangle-vulkan.c	/^static void demo_run(struct demo *demo) {$/;"	f	typeref:typename:void	file:
demo_set_image_layout	tests/triangle-vulkan.c	/^static void demo_set_image_layout(struct demo *demo, VkImage image,$/;"	f	typeref:typename:void	file:
denom	src/internal.h	/^    int                 numer, denom;$/;"	m	struct:_GLFWwindow	typeref:typename:int
dependencyCount	deps/glad/vulkan.h	/^    uint32_t                 dependencyCount;$/;"	m	struct:VkRenderPassMultiviewCreateInfo	typeref:typename:uint32_t
dependencyCount	deps/glad/vulkan.h	/^    uint32_t         dependencyCount;$/;"	m	struct:VkRenderPassCreateInfo	typeref:typename:uint32_t
dependencyFlags	deps/glad/vulkan.h	/^    VkDependencyFlags        dependencyFlags;$/;"	m	struct:VkSubpassDependency	typeref:typename:VkDependencyFlags
depth	deps/glad/vulkan.h	/^    float                    depth;$/;"	m	struct:VkClearDepthStencilValue	typeref:typename:float
depth	deps/glad/vulkan.h	/^    uint32_t          depth;$/;"	m	struct:VkExtent3D	typeref:typename:uint32_t
depth	tests/triangle-vulkan.c	/^    } depth;$/;"	m	struct:demo	typeref:struct:demo::__anondab0972c0208	file:
depthBiasClamp	deps/glad/vulkan.h	/^    VkBool32                 depthBiasClamp;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
depthBiasClamp	deps/glad/vulkan.h	/^    float                    depthBiasClamp;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:float
depthBiasConstantFactor	deps/glad/vulkan.h	/^    float                    depthBiasConstantFactor;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:float
depthBiasEnable	deps/glad/vulkan.h	/^    VkBool32                 depthBiasEnable;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:VkBool32
depthBiasSlopeFactor	deps/glad/vulkan.h	/^    float                    depthBiasSlopeFactor;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:float
depthBits	src/internal.h	/^    int         depthBits;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
depthBounds	deps/glad/vulkan.h	/^    VkBool32                 depthBounds;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
depthBoundsTestEnable	deps/glad/vulkan.h	/^    VkBool32                 depthBoundsTestEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:VkBool32
depthClamp	deps/glad/vulkan.h	/^    VkBool32                 depthClamp;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
depthClampEnable	deps/glad/vulkan.h	/^    VkBool32                 depthClampEnable;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:VkBool32
depthCompareOp	deps/glad/vulkan.h	/^    VkCompareOp              depthCompareOp;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:VkCompareOp
depthFailOp	deps/glad/vulkan.h	/^    VkStencilOp              depthFailOp;$/;"	m	struct:VkStencilOpState	typeref:typename:VkStencilOp
depthIncrement	tests/triangle-vulkan.c	/^    float depthIncrement;$/;"	m	struct:demo	typeref:typename:float	file:
depthPitch	deps/glad/vulkan.h	/^    VkDeviceSize             depthPitch;$/;"	m	struct:VkSubresourceLayout	typeref:typename:VkDeviceSize
depthStencil	deps/glad/vulkan.h	/^    VkClearDepthStencilValue   depthStencil;$/;"	m	union:VkClearValue	typeref:typename:VkClearDepthStencilValue
depthStencil	tests/triangle-vulkan.c	/^    float depthStencil;$/;"	m	struct:demo	typeref:typename:float	file:
depthTestEnable	deps/glad/vulkan.h	/^    VkBool32                 depthTestEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:VkBool32
depthWriteEnable	deps/glad/vulkan.h	/^    VkBool32                 depthWriteEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:VkBool32
desc_layout	tests/triangle-vulkan.c	/^    VkDescriptorSetLayout desc_layout;$/;"	m	struct:demo	typeref:typename:VkDescriptorSetLayout	file:
desc_pool	tests/triangle-vulkan.c	/^    VkDescriptorPool desc_pool;$/;"	m	struct:demo	typeref:typename:VkDescriptorPool	file:
desc_set	tests/triangle-vulkan.c	/^    VkDescriptorSet desc_set;$/;"	m	struct:demo	typeref:typename:VkDescriptorSet	file:
descent	deps/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font	typeref:typename:float
description	deps/glad/vulkan.h	/^    char              description [ VK_MAX_DESCRIPTION_SIZE ];$/;"	m	struct:VkLayerProperties	typeref:typename:char[]
description	src/internal.h	/^    char            description[_GLFW_MESSAGE_SIZE];$/;"	m	struct:_GLFWerror	typeref:typename:char[]
descriptorCount	deps/glad/vulkan.h	/^    uint32_t                           descriptorCount;$/;"	m	struct:VkDescriptorUpdateTemplateEntry	typeref:typename:uint32_t
descriptorCount	deps/glad/vulkan.h	/^    uint32_t                 descriptorCount;$/;"	m	struct:VkCopyDescriptorSet	typeref:typename:uint32_t
descriptorCount	deps/glad/vulkan.h	/^    uint32_t                 descriptorCount;$/;"	m	struct:VkDescriptorPoolSize	typeref:typename:uint32_t
descriptorCount	deps/glad/vulkan.h	/^    uint32_t                 descriptorCount;$/;"	m	struct:VkWriteDescriptorSet	typeref:typename:uint32_t
descriptorCount	deps/glad/vulkan.h	/^    uint32_t   descriptorCount;$/;"	m	struct:VkDescriptorSetLayoutBinding	typeref:typename:uint32_t
descriptorPool	deps/glad/vulkan.h	/^    VkDescriptorPool         descriptorPool;$/;"	m	struct:VkDescriptorSetAllocateInfo	typeref:typename:VkDescriptorPool
descriptorSetCount	deps/glad/vulkan.h	/^    uint32_t                 descriptorSetCount;$/;"	m	struct:VkDescriptorSetAllocateInfo	typeref:typename:uint32_t
descriptorSetLayout	deps/glad/vulkan.h	/^    VkDescriptorSetLayout   descriptorSetLayout;$/;"	m	struct:VkDescriptorUpdateTemplateCreateInfo	typeref:typename:VkDescriptorSetLayout
descriptorType	deps/glad/vulkan.h	/^    VkDescriptorType                   descriptorType;$/;"	m	struct:VkDescriptorUpdateTemplateEntry	typeref:typename:VkDescriptorType
descriptorType	deps/glad/vulkan.h	/^    VkDescriptorType         descriptorType;$/;"	m	struct:VkDescriptorSetLayoutBinding	typeref:typename:VkDescriptorType
descriptorType	deps/glad/vulkan.h	/^    VkDescriptorType         descriptorType;$/;"	m	struct:VkWriteDescriptorSet	typeref:typename:VkDescriptorType
descriptorUpdateEntryCount	deps/glad/vulkan.h	/^    uint32_t                   descriptorUpdateEntryCount;$/;"	m	struct:VkDescriptorUpdateTemplateCreateInfo	typeref:typename:uint32_t
destroy	src/internal.h	/^    _GLFWdestroycontextfun      destroy;$/;"	m	struct:_GLFWcontext	typeref:typename:_GLFWdestroycontextfun
destroyContextEGL	src/egl_context.c	/^static void destroyContextEGL(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
destroyContextGLX	src/glx_context.c	/^static void destroyContextGLX(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
destroyContextNSGL	src/nsgl_context.m	/^static void destroyContextNSGL(_GLFWwindow* window)$/;"	f
destroyContextOSMesa	src/osmesa_context.c	/^static void destroyContextOSMesa(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
destroyContextWGL	src/wgl_context.c	/^static void destroyContextWGL(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
destroyDecoration	src/wl_window.c	/^static void destroyDecoration(_GLFWdecorationWayland* decoration)$/;"	f	typeref:typename:void	file:
destroyDecorations	src/wl_window.c	/^static void destroyDecorations(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
detectEWMH	src/x11_init.c	/^static void detectEWMH(void)$/;"	f	typeref:typename:void	file:
detectable	src/x11_platform.h	/^        GLFWbool     detectable;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00208	typeref:typename:GLFWbool
device	src/cocoa_joystick.h	/^    IOHIDDeviceRef      device;$/;"	m	struct:_GLFWjoystickNS	typeref:typename:IOHIDDeviceRef
device	src/win32_joystick.c	/^    IDirectInputDevice8W*   device;$/;"	m	struct:_GLFWobjenumWin32	typeref:typename:IDirectInputDevice8W *	file:
device	src/win32_joystick.h	/^    IDirectInputDevice8W*   device;$/;"	m	struct:_GLFWjoystickWin32	typeref:typename:IDirectInputDevice8W *
device	tests/triangle-vulkan.c	/^    VkDevice device;$/;"	m	struct:demo	typeref:typename:VkDevice	file:
deviceCallback	src/win32_joystick.c	/^static BOOL CALLBACK deviceCallback(const DIDEVICEINSTANCE* di, void* user)$/;"	f	typeref:typename:BOOL CALLBACK	file:
deviceID	deps/glad/vulkan.h	/^    uint32_t         deviceID;$/;"	m	struct:VkPhysicalDeviceProperties	typeref:typename:uint32_t
deviceIndexCount	deps/glad/vulkan.h	/^    uint32_t           deviceIndexCount;$/;"	m	struct:VkBindBufferMemoryDeviceGroupInfo	typeref:typename:uint32_t
deviceIndexCount	deps/glad/vulkan.h	/^    uint32_t           deviceIndexCount;$/;"	m	struct:VkBindImageMemoryDeviceGroupInfo	typeref:typename:uint32_t
deviceLUID	deps/glad/vulkan.h	/^    uint8_t                            deviceLUID [ VK_LUID_SIZE ];$/;"	m	struct:VkPhysicalDeviceIDProperties	typeref:typename:uint8_t[]
deviceLUIDValid	deps/glad/vulkan.h	/^    VkBool32                           deviceLUIDValid;$/;"	m	struct:VkPhysicalDeviceIDProperties	typeref:typename:VkBool32
deviceMask	deps/glad/vulkan.h	/^    uint32_t                           deviceMask;$/;"	m	struct:VkAcquireNextImageInfoKHR	typeref:typename:uint32_t
deviceMask	deps/glad/vulkan.h	/^    uint32_t                           deviceMask;$/;"	m	struct:VkDeviceGroupCommandBufferBeginInfo	typeref:typename:uint32_t
deviceMask	deps/glad/vulkan.h	/^    uint32_t                           deviceMask;$/;"	m	struct:VkDeviceGroupRenderPassBeginInfo	typeref:typename:uint32_t
deviceMask	deps/glad/vulkan.h	/^    uint32_t                           deviceMask;$/;"	m	struct:VkMemoryAllocateFlagsInfo	typeref:typename:uint32_t
deviceName	deps/glad/vulkan.h	/^    char             deviceName [ VK_MAX_PHYSICAL_DEVICE_NAME_SIZE ];$/;"	m	struct:VkPhysicalDeviceProperties	typeref:typename:char[]
deviceNodeMask	deps/glad/vulkan.h	/^    uint32_t                           deviceNodeMask;$/;"	m	struct:VkPhysicalDeviceIDProperties	typeref:typename:uint32_t
deviceNotificationHandle	src/win32_platform.h	/^    HDEVNOTIFY          deviceNotificationHandle;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:HDEVNOTIFY
deviceObjectCallback	src/win32_joystick.c	/^static BOOL CALLBACK deviceObjectCallback(const DIDEVICEOBJECTINSTANCEW* doi,$/;"	f	typeref:typename:BOOL CALLBACK	file:
deviceRenderAreaCount	deps/glad/vulkan.h	/^    uint32_t           deviceRenderAreaCount;$/;"	m	struct:VkDeviceGroupRenderPassBeginInfo	typeref:typename:uint32_t
deviceType	deps/glad/vulkan.h	/^    VkPhysicalDeviceType   deviceType;$/;"	m	struct:VkPhysicalDeviceProperties	typeref:typename:VkPhysicalDeviceType
deviceUUID	deps/glad/vulkan.h	/^    uint8_t                            deviceUUID [ VK_UUID_SIZE ];$/;"	m	struct:VkPhysicalDeviceIDProperties	typeref:typename:uint8_t[]
dics	deps/mingw/dinput.h	/^	DICOLORSET		dics;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA	typeref:typename:DICOLORSET
dics	deps/mingw/dinput.h	/^	DICOLORSET		dics;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW	typeref:typename:DICOLORSET
diff	deps/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anonca7851080503
dinput8	src/win32_platform.h	/^    } dinput8;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon622bd5890608
diph	deps/mingw/dinput.h	/^	DIPROPHEADER	diph;$/;"	m	struct:DIPROPCALPOV	typeref:typename:DIPROPHEADER
diph	deps/mingw/dinput.h	/^	DIPROPHEADER	diph;$/;"	m	struct:DIPROPDWORD	typeref:typename:DIPROPHEADER
diph	deps/mingw/dinput.h	/^	DIPROPHEADER	diph;$/;"	m	struct:DIPROPRANGE	typeref:typename:DIPROPHEADER
diph	deps/mingw/dinput.h	/^	DIPROPHEADER diph;$/;"	m	struct:DIPROPCAL	typeref:typename:DIPROPHEADER
diph	deps/mingw/dinput.h	/^	DIPROPHEADER diph;$/;"	m	struct:DIPROPGUIDANDPATH	typeref:typename:DIPROPHEADER
diph	deps/mingw/dinput.h	/^	DIPROPHEADER diph;$/;"	m	struct:DIPROPPOINTER	typeref:typename:DIPROPHEADER
diph	deps/mingw/dinput.h	/^        DIPROPHEADER diph;$/;"	m	struct:DIPROPSTRING	typeref:typename:DIPROPHEADER
diph	deps/mingw/dinput.h	/^    DIPROPHEADER diph;$/;"	m	struct:DIPROPCPOINTS	typeref:typename:DIPROPHEADER
direction	deps/nuklear.h	/^    float direction;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
disableCursor	src/win32_window.c	/^static void disableCursor(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
disableCursor	src/x11_window.c	/^static void disableCursor(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
disableRawMouseMotion	src/win32_window.c	/^static void disableRawMouseMotion(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
disableRawMouseMotion	src/x11_window.c	/^static void disableRawMouseMotion(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
disabledCursorWindow	src/win32_platform.h	/^    _GLFWwindow*        disabledCursorWindow;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:_GLFWwindow *
disabledCursorWindow	src/x11_platform.h	/^    _GLFWwindow*    disabledCursorWindow;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:_GLFWwindow *
discreteQueuePriorities	deps/glad/vulkan.h	/^    uint32_t                 discreteQueuePriorities;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
display	examples/boing.c	/^void display(void)$/;"	f	typeref:typename:void
display	src/egl_context.h	/^    EGLDisplay      display;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:EGLDisplay
display	src/wl_platform.h	/^    struct wl_display*              display;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:struct:wl_display *
display	src/wl_platform.h	/^    struct wl_display*          display;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_display *
display	src/x11_platform.h	/^    Display*        display;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Display *
displayID	src/cocoa_platform.h	/^    CGDirectDisplayID   displayID;$/;"	E	struct:_GLFWmonitorNS
displayName	src/win32_platform.h	/^    WCHAR               displayName[32];$/;"	m	struct:_GLFWmonitorWin32	typeref:typename:WCHAR[32]
display_height	deps/nuklear_glfw_gl2.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw	typeref:typename:int
display_width	deps/nuklear_glfw_gl2.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw	typeref:typename:int
div.ah	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
div.contents	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
div.directory	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
div.fragment	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
div.header	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
div.headertitle	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
div.line	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
div.qindex	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
div.toc	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
div.toc h3	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
div.toc li	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
div.toc ul	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
dl.attention	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
dl.bug	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
dl.deprecated	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
dl.invariant	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
dl.note	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
dl.post	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
dl.pre	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
dl.reflist dd	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
dl.reflist dt	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
dl.reflist dt a.el	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
dl.test	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
dl.todo	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
dl.warning	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
doCommandBySelector:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
doNothing:	src/cocoa_init.m	/^{$/;"	m	implementation:GLFWHelper
do_redraw	examples/splitview.c	/^static int do_redraw = 1;$/;"	v	typeref:typename:int	file:
docs	docs/CMakeLists.txt	/^add_custom_target(docs ALL "${DOXYGEN_EXECUTABLE}"$/;"	t
domainOrigin	deps/glad/vulkan.h	/^    VkTessellationDomainOrigin      domainOrigin;$/;"	m	struct:VkPipelineTessellationDomainOriginStateCreateInfo	typeref:typename:VkTessellationDomainOrigin
double_click_pos	deps/nuklear_glfw_gl2.h	/^    struct nk_vec2 double_click_pos;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
doublebuffer	src/internal.h	/^    GLFWbool    doublebuffer;$/;"	m	struct:_GLFWfbconfig	typeref:typename:GLFWbool
down	deps/nuklear.h	/^    int down;$/;"	m	struct:nk_key	typeref:typename:int
down	deps/nuklear.h	/^    int down;$/;"	m	struct:nk_mouse_button	typeref:typename:int
dpy	src/x11_platform.h	/^    Display*                    dpy;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR	typeref:typename:Display *
draggingEntered:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
draw	examples/gears.c	/^static void draw(void)$/;"	f	typeref:typename:void	file:
drawAllViews	examples/splitview.c	/^static void drawAllViews(void)$/;"	f	typeref:typename:void	file:
drawBallHow	examples/boing.c	/^DRAW_BALL_ENUM drawBallHow;$/;"	v	typeref:typename:DRAW_BALL_ENUM
drawGrid	examples/splitview.c	/^static void drawGrid(float scale, int steps)$/;"	f	typeref:typename:void	file:
drawIndirectFirstInstance	deps/glad/vulkan.h	/^    VkBool32                 drawIndirectFirstInstance;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
drawRect:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
drawScene	examples/splitview.c	/^static void drawScene(void)$/;"	f	typeref:typename:void	file:
drawTorus	examples/splitview.c	/^static void drawTorus(void)$/;"	f	typeref:typename:void	file:
draw_begin	deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle userdata)
draw_begin	deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_cmd	tests/triangle-vulkan.c	/^    VkCommandBuffer draw_cmd;  \/\/ Command Buffer for drawing commands$/;"	m	struct:demo	typeref:typename:VkCommandBuffer	file:
draw_end	deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle userdata)
draw_end	deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_floor	examples/particles.c	/^static void draw_floor(void)$/;"	f	typeref:typename:void	file:
draw_fountain	examples/particles.c	/^static void draw_fountain(void)$/;"	f	typeref:typename:void	file:
draw_list	deps/nuklear.h	/^    struct nk_draw_list draw_list;$/;"	m	struct:nk_context	typeref:struct:nk_draw_list
draw_marker	tests/inputlag.c	/^void draw_marker(struct nk_command_buffer* canvas, int lead, struct nk_vec2 pos)$/;"	f	typeref:typename:void
draw_particles	examples/particles.c	/^static void draw_particles(GLFWwindow* window, double t, float dt)$/;"	f	typeref:typename:void	file:
draw_scene	examples/particles.c	/^static void draw_scene(GLFWwindow* window, double t)$/;"	f	typeref:typename:void	file:
draw_scene	examples/wave.c	/^void draw_scene(GLFWwindow* window)$/;"	f	typeref:typename:void
driverUUID	deps/glad/vulkan.h	/^    uint8_t                            driverUUID [ VK_UUID_SIZE ];$/;"	m	struct:VkPhysicalDeviceIDProperties	typeref:typename:uint8_t[]
driverVersion	deps/glad/vulkan.h	/^    uint32_t         driverVersion;$/;"	m	struct:VkPhysicalDeviceProperties	typeref:typename:uint32_t
drop	src/internal.h	/^        GLFWdropfun             drop;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWdropfun
drop_callback	tests/events.c	/^static void drop_callback(GLFWwindow* window, int count, const char* paths[])$/;"	f	typeref:typename:void	file:
drop_callback	tests/joysticks.c	/^static void drop_callback(GLFWwindow* window, int count, const char* paths[])$/;"	f	typeref:typename:void	file:
dropped	src/linux_joystick.h	/^    GLFWbool                dropped;$/;"	m	struct:_GLFWlibraryLinux	typeref:typename:GLFWbool
dstAccessMask	deps/glad/vulkan.h	/^    VkAccessFlags            dstAccessMask;$/;"	m	struct:VkBufferMemoryBarrier	typeref:typename:VkAccessFlags
dstAccessMask	deps/glad/vulkan.h	/^    VkAccessFlags            dstAccessMask;$/;"	m	struct:VkImageMemoryBarrier	typeref:typename:VkAccessFlags
dstAccessMask	deps/glad/vulkan.h	/^    VkAccessFlags            dstAccessMask;$/;"	m	struct:VkMemoryBarrier	typeref:typename:VkAccessFlags
dstAccessMask	deps/glad/vulkan.h	/^    VkAccessFlags            dstAccessMask;$/;"	m	struct:VkSubpassDependency	typeref:typename:VkAccessFlags
dstAlphaBlendFactor	deps/glad/vulkan.h	/^    VkBlendFactor            dstAlphaBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState	typeref:typename:VkBlendFactor
dstArrayElement	deps/glad/vulkan.h	/^    uint32_t                           dstArrayElement;$/;"	m	struct:VkDescriptorUpdateTemplateEntry	typeref:typename:uint32_t
dstArrayElement	deps/glad/vulkan.h	/^    uint32_t                 dstArrayElement;$/;"	m	struct:VkCopyDescriptorSet	typeref:typename:uint32_t
dstArrayElement	deps/glad/vulkan.h	/^    uint32_t                 dstArrayElement;$/;"	m	struct:VkWriteDescriptorSet	typeref:typename:uint32_t
dstBinding	deps/glad/vulkan.h	/^    uint32_t                           dstBinding;$/;"	m	struct:VkDescriptorUpdateTemplateEntry	typeref:typename:uint32_t
dstBinding	deps/glad/vulkan.h	/^    uint32_t                 dstBinding;$/;"	m	struct:VkCopyDescriptorSet	typeref:typename:uint32_t
dstBinding	deps/glad/vulkan.h	/^    uint32_t                 dstBinding;$/;"	m	struct:VkWriteDescriptorSet	typeref:typename:uint32_t
dstColorBlendFactor	deps/glad/vulkan.h	/^    VkBlendFactor            dstColorBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState	typeref:typename:VkBlendFactor
dstOffset	deps/glad/vulkan.h	/^    VkDeviceSize                         dstOffset;$/;"	m	struct:VkBufferCopy	typeref:typename:VkDeviceSize
dstOffset	deps/glad/vulkan.h	/^    VkOffset3D               dstOffset;$/;"	m	struct:VkImageCopy	typeref:typename:VkOffset3D
dstOffset	deps/glad/vulkan.h	/^    VkOffset3D               dstOffset;$/;"	m	struct:VkImageResolve	typeref:typename:VkOffset3D
dstOffsets	deps/glad/vulkan.h	/^    VkOffset3D               dstOffsets [2];$/;"	m	struct:VkImageBlit	typeref:typename:VkOffset3D[2]
dstQueueFamilyIndex	deps/glad/vulkan.h	/^    uint32_t                 dstQueueFamilyIndex;$/;"	m	struct:VkBufferMemoryBarrier	typeref:typename:uint32_t
dstQueueFamilyIndex	deps/glad/vulkan.h	/^    uint32_t                 dstQueueFamilyIndex;$/;"	m	struct:VkImageMemoryBarrier	typeref:typename:uint32_t
dstSet	deps/glad/vulkan.h	/^    VkDescriptorSet          dstSet;$/;"	m	struct:VkCopyDescriptorSet	typeref:typename:VkDescriptorSet
dstSet	deps/glad/vulkan.h	/^    VkDescriptorSet          dstSet;$/;"	m	struct:VkWriteDescriptorSet	typeref:typename:VkDescriptorSet
dstStageMask	deps/glad/vulkan.h	/^    VkPipelineStageFlags     dstStageMask;$/;"	m	struct:VkSubpassDependency	typeref:typename:VkPipelineStageFlags
dstSubpass	deps/glad/vulkan.h	/^    uint32_t                 dstSubpass;$/;"	m	struct:VkSubpassDependency	typeref:typename:uint32_t
dstSubresource	deps/glad/vulkan.h	/^    VkImageSubresourceLayers   dstSubresource;$/;"	m	struct:VkImageBlit	typeref:typename:VkImageSubresourceLayers
dstSubresource	deps/glad/vulkan.h	/^    VkImageSubresourceLayers   dstSubresource;$/;"	m	struct:VkImageCopy	typeref:typename:VkImageSubresourceLayers
dstSubresource	deps/glad/vulkan.h	/^    VkImageSubresourceLayers   dstSubresource;$/;"	m	struct:VkImageResolve	typeref:typename:VkImageSubresourceLayers
dt	examples/boing.c	/^double  dt;$/;"	v	typeref:typename:double
dt	examples/particles.c	/^    float     dt;        \/\/ Time since last frame (s)$/;"	m	struct:__anon62203f4b0308	typeref:typename:float	file:
dt	examples/wave.c	/^double dt;$/;"	v	typeref:typename:double
dualSrcBlend	deps/glad/vulkan.h	/^    VkBool32                 dualSrcBlend;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
dwActionSize	deps/mingw/dinput.h	/^	DWORD		dwActionSize;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:DWORD
dwActionSize	deps/mingw/dinput.h	/^	DWORD		dwActionSize;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:DWORD
dwAttackLevel	deps/mingw/dinput.h	/^	DWORD			dwAttackLevel;$/;"	m	struct:DIENVELOPE	typeref:typename:DWORD
dwAttackTime	deps/mingw/dinput.h	/^	DWORD			dwAttackTime;$/;"	m	struct:DIENVELOPE	typeref:typename:DWORD
dwAxes	deps/mingw/dinput.h	/^    DWORD	dwAxes;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwAxes	deps/mingw/dinput.h	/^    DWORD	dwAxes;$/;"	m	struct:DIDEVCAPS_DX3	typeref:typename:DWORD
dwBufferSize	deps/mingw/dinput.h	/^	DWORD		dwBufferSize;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:DWORD
dwBufferSize	deps/mingw/dinput.h	/^	DWORD		dwBufferSize;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:DWORD
dwBufferSize	deps/mingw/dinput.h	/^	DWORD	dwBufferSize;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA	typeref:typename:DWORD
dwBufferSize	deps/mingw/dinput.h	/^	DWORD	dwBufferSize;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW	typeref:typename:DWORD
dwBufferUsed	deps/mingw/dinput.h	/^	DWORD	dwBufferUsed;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA	typeref:typename:DWORD
dwBufferUsed	deps/mingw/dinput.h	/^	DWORD	dwBufferUsed;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW	typeref:typename:DWORD
dwButtons	deps/mingw/dinput.h	/^    DWORD	dwButtons;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwButtons	deps/mingw/dinput.h	/^    DWORD	dwButtons;$/;"	m	struct:DIDEVCAPS_DX3	typeref:typename:DWORD
dwCPointsNum	deps/mingw/dinput.h	/^    DWORD	dwCPointsNum;$/;"	m	struct:DIPROPCPOINTS	typeref:typename:DWORD
dwCRC	deps/mingw/dinput.h	/^	DWORD		dwCRC;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:DWORD
dwCRC	deps/mingw/dinput.h	/^	DWORD		dwCRC;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:DWORD
dwCommand	deps/mingw/dinput.h	/^	DWORD	dwCommand;$/;"	m	struct:DIEFFESCAPE	typeref:typename:DWORD
dwData	deps/mingw/dinput.h	/^	DWORD		dwData;$/;"	m	struct:DIPROPDWORD	typeref:typename:DWORD
dwData	deps/mingw/dinput.h	/^    DWORD	dwData;$/;"	m	struct:DIDEVICEOBJECTDATA	typeref:typename:DWORD
dwData	deps/mingw/dinput.h	/^    DWORD	dwData;$/;"	m	struct:DIDEVICEOBJECTDATA_DX3	typeref:typename:DWORD
dwDataSize	deps/mingw/dinput.h	/^	DWORD		dwDataSize;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:DWORD
dwDataSize	deps/mingw/dinput.h	/^	DWORD		dwDataSize;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:DWORD
dwDataSize	deps/mingw/dinput.h	/^    DWORD			dwDataSize;$/;"	m	struct:_DIDATAFORMAT	typeref:typename:DWORD
dwDevType	deps/mingw/dinput.h	/^    DWORD	dwDevType;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwDevType	deps/mingw/dinput.h	/^    DWORD	dwDevType;$/;"	m	struct:DIDEVCAPS_DX3	typeref:typename:DWORD
dwDevType	deps/mingw/dinput.h	/^    DWORD	dwDevType;$/;"	m	struct:DIDEVICEINSTANCEA	typeref:typename:DWORD
dwDevType	deps/mingw/dinput.h	/^    DWORD	dwDevType;$/;"	m	struct:DIDEVICEINSTANCEW	typeref:typename:DWORD
dwDevType	deps/mingw/dinput.h	/^    DWORD   dwDevType;$/;"	m	struct:DIDEVICEINSTANCE_DX3A	typeref:typename:DWORD
dwDevType	deps/mingw/dinput.h	/^    DWORD   dwDevType;$/;"	m	struct:DIDEVICEINSTANCE_DX3W	typeref:typename:DWORD
dwDimension	deps/mingw/dinput.h	/^    DWORD	dwDimension;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:DWORD
dwDimension	deps/mingw/dinput.h	/^    DWORD	dwDimension;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:DWORD
dwDuration	deps/mingw/dinput.h	/^	DWORD			dwDuration;$/;"	m	struct:DIEFFECT	typeref:typename:DWORD
dwDuration	deps/mingw/dinput.h	/^	DWORD			dwDuration;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:DWORD
dwDynamicParams	deps/mingw/dinput.h	/^	DWORD			dwDynamicParams;$/;"	m	struct:DIEFFECTINFOA	typeref:typename:DWORD
dwDynamicParams	deps/mingw/dinput.h	/^	DWORD			dwDynamicParams;$/;"	m	struct:DIEFFECTINFOW	typeref:typename:DWORD
dwEffType	deps/mingw/dinput.h	/^	DWORD			dwEffType;$/;"	m	struct:DIEFFECTINFOA	typeref:typename:DWORD
dwEffType	deps/mingw/dinput.h	/^	DWORD			dwEffType;$/;"	m	struct:DIEFFECTINFOW	typeref:typename:DWORD
dwFFDriverVersion	deps/mingw/dinput.h	/^    DWORD	dwFFDriverVersion;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwFFForceResolution	deps/mingw/dinput.h	/^    DWORD	dwFFForceResolution;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:DWORD
dwFFForceResolution	deps/mingw/dinput.h	/^    DWORD	dwFFForceResolution;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:DWORD
dwFFMaxForce	deps/mingw/dinput.h	/^    DWORD	dwFFMaxForce;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:DWORD
dwFFMaxForce	deps/mingw/dinput.h	/^    DWORD	dwFFMaxForce;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:DWORD
dwFFMinTimeResolution	deps/mingw/dinput.h	/^    DWORD	dwFFMinTimeResolution;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwFFSamplePeriod	deps/mingw/dinput.h	/^    DWORD	dwFFSamplePeriod;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwFadeLevel	deps/mingw/dinput.h	/^	DWORD			dwFadeLevel;$/;"	m	struct:DIENVELOPE	typeref:typename:DWORD
dwFadeTime	deps/mingw/dinput.h	/^	DWORD			dwFadeTime;$/;"	m	struct:DIENVELOPE	typeref:typename:DWORD
dwFirmwareRevision	deps/mingw/dinput.h	/^    DWORD	dwFirmwareRevision;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^	DWORD			dwFlags;$/;"	m	struct:DIEFFECT	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^	DWORD			dwFlags;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^	DWORD		dwFlags;$/;"	m	struct:_DIACTIONA	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^	DWORD		dwFlags;$/;"	m	struct:_DIACTIONW	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^	DWORD	dwFlags;$/;"	m	struct:_DIDEVICEIMAGEINFOA	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^	DWORD	dwFlags;$/;"	m	struct:_DIDEVICEIMAGEINFOW	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^    DWORD			dwFlags;$/;"	m	struct:_DIDATAFORMAT	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^    DWORD	dwFlags;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^    DWORD	dwFlags;$/;"	m	struct:DIDEVCAPS_DX3	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^    DWORD	dwFlags;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^    DWORD	dwFlags;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^    DWORD	dwFlags;$/;"	m	struct:_DIOBJECTDATAFORMAT	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^    DWORD   dwFlags;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A	typeref:typename:DWORD
dwFlags	deps/mingw/dinput.h	/^    DWORD   dwFlags;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W	typeref:typename:DWORD
dwFlags	src/win32_platform.h	/^    DWORD dwFlags;$/;"	m	struct:__anon622bd5890208	typeref:typename:DWORD
dwGain	deps/mingw/dinput.h	/^	DWORD			dwGain;$/;"	m	struct:DIEFFECT	typeref:typename:DWORD
dwGain	deps/mingw/dinput.h	/^	DWORD			dwGain;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:DWORD
dwGenre	deps/mingw/dinput.h	/^	DWORD		dwGenre;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:DWORD
dwGenre	deps/mingw/dinput.h	/^	DWORD		dwGenre;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:DWORD
dwHardwareRevision	deps/mingw/dinput.h	/^    DWORD	dwHardwareRevision;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwHeaderSize	deps/mingw/dinput.h	/^    DWORD	dwHeaderSize;$/;"	m	struct:DIPROPHEADER	typeref:typename:DWORD
dwHow	deps/mingw/dinput.h	/^	DWORD		dwHow;$/;"	m	struct:_DIACTIONA	typeref:typename:DWORD
dwHow	deps/mingw/dinput.h	/^	DWORD		dwHow;$/;"	m	struct:_DIACTIONW	typeref:typename:DWORD
dwHow	deps/mingw/dinput.h	/^    DWORD	dwHow;$/;"	m	struct:DIPROPHEADER	typeref:typename:DWORD
dwLog	deps/mingw/dinput.h	/^    DWORD	dwLog;$/;"	m	struct:_CPOINT	typeref:typename:DWORD
dwMagnitude	deps/mingw/dinput.h	/^	DWORD			dwMagnitude;$/;"	m	struct:DIPERIODIC	typeref:typename:DWORD
dwNegativeSaturation	deps/mingw/dinput.h	/^	DWORD			dwNegativeSaturation;$/;"	m	struct:DICONDITION	typeref:typename:DWORD
dwNumActions	deps/mingw/dinput.h	/^	DWORD		dwNumActions;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:DWORD
dwNumActions	deps/mingw/dinput.h	/^	DWORD		dwNumActions;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:DWORD
dwNumObjs	deps/mingw/dinput.h	/^    DWORD			dwNumObjs;$/;"	m	struct:_DIDATAFORMAT	typeref:typename:DWORD
dwObj	deps/mingw/dinput.h	/^    DWORD	dwObj;$/;"	m	struct:DIPROPHEADER	typeref:typename:DWORD
dwObjID	deps/mingw/dinput.h	/^	DWORD		dwObjID;$/;"	m	struct:_DIACTIONA	typeref:typename:DWORD
dwObjID	deps/mingw/dinput.h	/^	DWORD		dwObjID;$/;"	m	struct:_DIACTIONW	typeref:typename:DWORD
dwObjID	deps/mingw/dinput.h	/^	DWORD	dwObjID;$/;"	m	struct:_DIDEVICEIMAGEINFOA	typeref:typename:DWORD
dwObjID	deps/mingw/dinput.h	/^	DWORD	dwObjID;$/;"	m	struct:_DIDEVICEIMAGEINFOW	typeref:typename:DWORD
dwObjSize	deps/mingw/dinput.h	/^    DWORD			dwObjSize;$/;"	m	struct:_DIDATAFORMAT	typeref:typename:DWORD
dwOfs	deps/mingw/dinput.h	/^    DWORD	dwOfs;$/;"	m	struct:DIDEVICEOBJECTDATA	typeref:typename:DWORD
dwOfs	deps/mingw/dinput.h	/^    DWORD	dwOfs;$/;"	m	struct:DIDEVICEOBJECTDATA_DX3	typeref:typename:DWORD
dwOfs	deps/mingw/dinput.h	/^    DWORD	dwOfs;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:DWORD
dwOfs	deps/mingw/dinput.h	/^    DWORD	dwOfs;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:DWORD
dwOfs	deps/mingw/dinput.h	/^    DWORD	dwOfs;$/;"	m	struct:_DIOBJECTDATAFORMAT	typeref:typename:DWORD
dwOfs	deps/mingw/dinput.h	/^    DWORD   dwOfs;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A	typeref:typename:DWORD
dwOfs	deps/mingw/dinput.h	/^    DWORD   dwOfs;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W	typeref:typename:DWORD
dwPOVs	deps/mingw/dinput.h	/^    DWORD	dwPOVs;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwPOVs	deps/mingw/dinput.h	/^    DWORD	dwPOVs;$/;"	m	struct:DIDEVCAPS_DX3	typeref:typename:DWORD
dwPacketNumber	deps/mingw/xinput.h	/^    DWORD dwPacketNumber;$/;"	m	struct:_XINPUT_STATE	typeref:typename:DWORD
dwPeriod	deps/mingw/dinput.h	/^	DWORD			dwPeriod;$/;"	m	struct:DIPERIODIC	typeref:typename:DWORD
dwPhase	deps/mingw/dinput.h	/^	DWORD			dwPhase;$/;"	m	struct:DIPERIODIC	typeref:typename:DWORD
dwPositiveSaturation	deps/mingw/dinput.h	/^	DWORD			dwPositiveSaturation;$/;"	m	struct:DICONDITION	typeref:typename:DWORD
dwSamplePeriod	deps/mingw/dinput.h	/^	DWORD			dwSamplePeriod;$/;"	m	struct:DICUSTOMFORCE	typeref:typename:DWORD
dwSamplePeriod	deps/mingw/dinput.h	/^	DWORD			dwSamplePeriod;$/;"	m	struct:DIEFFECT	typeref:typename:DWORD
dwSamplePeriod	deps/mingw/dinput.h	/^	DWORD			dwSamplePeriod;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:DWORD
dwSemantic	deps/mingw/dinput.h	/^	DWORD		dwSemantic;$/;"	m	struct:_DIACTIONA	typeref:typename:DWORD
dwSemantic	deps/mingw/dinput.h	/^	DWORD		dwSemantic;$/;"	m	struct:_DIACTIONW	typeref:typename:DWORD
dwSequence	deps/mingw/dinput.h	/^    DWORD	dwSequence;$/;"	m	struct:DIDEVICEOBJECTDATA	typeref:typename:DWORD
dwSequence	deps/mingw/dinput.h	/^    DWORD	dwSequence;$/;"	m	struct:DIDEVICEOBJECTDATA_DX3	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:DIEFFECT	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:DIEFFECTINFOA	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:DIEFFECTINFOW	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:DIENVELOPE	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD		dwSize;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD		dwSize;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD		dwSize;$/;"	m	struct:_DICOLORSET	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD	dwSize;$/;"	m	struct:DIEFFESCAPE	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD	dwSize;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^	DWORD	dwSize;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD			dwSize;$/;"	m	struct:_DIDATAFORMAT	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVCAPS	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVCAPS_DX3	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVICEINSTANCEA	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVICEINSTANCEW	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIPROPHEADER	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD   dwSize;$/;"	m	struct:DIDEVICEINSTANCE_DX3A	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD   dwSize;$/;"	m	struct:DIDEVICEINSTANCE_DX3W	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD   dwSize;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^    DWORD   dwSize;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W	typeref:typename:DWORD
dwSize	deps/mingw/dinput.h	/^  DWORD       dwSize;$/;"	m	struct:DIFILEEFFECT	typeref:typename:DWORD
dwSizeImageInfo	deps/mingw/dinput.h	/^	DWORD	dwSizeImageInfo;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA	typeref:typename:DWORD
dwSizeImageInfo	deps/mingw/dinput.h	/^	DWORD	dwSizeImageInfo;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW	typeref:typename:DWORD
dwStartDelay	deps/mingw/dinput.h	/^	DWORD			dwStartDelay;$/;"	m	struct:DIEFFECT	typeref:typename:DWORD
dwStaticParams	deps/mingw/dinput.h	/^	DWORD			dwStaticParams;$/;"	m	struct:DIEFFECTINFOA	typeref:typename:DWORD
dwStaticParams	deps/mingw/dinput.h	/^	DWORD			dwStaticParams;$/;"	m	struct:DIEFFECTINFOW	typeref:typename:DWORD
dwTextAlign	deps/mingw/dinput.h	/^	DWORD	dwTextAlign;$/;"	m	struct:_DIDEVICEIMAGEINFOA	typeref:typename:DWORD
dwTextAlign	deps/mingw/dinput.h	/^	DWORD	dwTextAlign;$/;"	m	struct:_DIDEVICEIMAGEINFOW	typeref:typename:DWORD
dwTimeStamp	deps/mingw/dinput.h	/^    DWORD	dwTimeStamp;$/;"	m	struct:DIDEVICEOBJECTDATA	typeref:typename:DWORD
dwTimeStamp	deps/mingw/dinput.h	/^    DWORD	dwTimeStamp;$/;"	m	struct:DIDEVICEOBJECTDATA_DX3	typeref:typename:DWORD
dwTriggerButton	deps/mingw/dinput.h	/^	DWORD			dwTriggerButton;$/;"	m	struct:DIEFFECT	typeref:typename:DWORD
dwTriggerButton	deps/mingw/dinput.h	/^	DWORD			dwTriggerButton;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:DWORD
dwTriggerRepeatInterval	deps/mingw/dinput.h	/^	DWORD			dwTriggerRepeatInterval;$/;"	m	struct:DIEFFECT	typeref:typename:DWORD
dwTriggerRepeatInterval	deps/mingw/dinput.h	/^	DWORD			dwTriggerRepeatInterval;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:DWORD
dwType	deps/mingw/dinput.h	/^    DWORD	dwType;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:DWORD
dwType	deps/mingw/dinput.h	/^    DWORD	dwType;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:DWORD
dwType	deps/mingw/dinput.h	/^    DWORD	dwType;$/;"	m	struct:_DIOBJECTDATAFORMAT	typeref:typename:DWORD
dwType	deps/mingw/dinput.h	/^    DWORD   dwType;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A	typeref:typename:DWORD
dwType	deps/mingw/dinput.h	/^    DWORD   dwType;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W	typeref:typename:DWORD
dwViewID	deps/mingw/dinput.h	/^	DWORD	dwViewID;$/;"	m	struct:_DIDEVICEIMAGEINFOA	typeref:typename:DWORD
dwViewID	deps/mingw/dinput.h	/^	DWORD	dwViewID;$/;"	m	struct:_DIDEVICEIMAGEINFOW	typeref:typename:DWORD
dwcAxes	deps/mingw/dinput.h	/^	DWORD	dwcAxes;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA	typeref:typename:DWORD
dwcAxes	deps/mingw/dinput.h	/^	DWORD	dwcAxes;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW	typeref:typename:DWORD
dwcButtons	deps/mingw/dinput.h	/^	DWORD	dwcButtons;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA	typeref:typename:DWORD
dwcButtons	deps/mingw/dinput.h	/^	DWORD	dwcButtons;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW	typeref:typename:DWORD
dwcFormats	deps/mingw/dinput.h	/^	DWORD			dwcFormats;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA	typeref:typename:DWORD
dwcFormats	deps/mingw/dinput.h	/^	DWORD			dwcFormats;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW	typeref:typename:DWORD
dwcPOVs	deps/mingw/dinput.h	/^	DWORD	dwcPOVs;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA	typeref:typename:DWORD
dwcPOVs	deps/mingw/dinput.h	/^	DWORD	dwcPOVs;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW	typeref:typename:DWORD
dwcUsers	deps/mingw/dinput.h	/^	DWORD			dwcUsers;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA	typeref:typename:DWORD
dwcUsers	deps/mingw/dinput.h	/^	DWORD			dwcUsers;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW	typeref:typename:DWORD
dwcValidPts	deps/mingw/dinput.h	/^	DWORD	dwcValidPts;$/;"	m	struct:_DIDEVICEIMAGEINFOA	typeref:typename:DWORD
dwcValidPts	deps/mingw/dinput.h	/^	DWORD	dwcValidPts;$/;"	m	struct:_DIDEVICEIMAGEINFOW	typeref:typename:DWORD
dwcViews	deps/mingw/dinput.h	/^	DWORD	dwcViews;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA	typeref:typename:DWORD
dwcViews	deps/mingw/dinput.h	/^	DWORD	dwcViews;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW	typeref:typename:DWORD
dwmapi	src/win32_platform.h	/^    } dwmapi;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon622bd5890908
dynamicStateCount	deps/glad/vulkan.h	/^    uint32_t                 dynamicStateCount;$/;"	m	struct:VkPipelineDynamicStateCreateInfo	typeref:typename:uint32_t
edit	deps/nuklear.h	/^    struct nk_edit_state edit;$/;"	m	struct:nk_window	typeref:struct:nk_edit_state
edit	deps/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style	typeref:struct:nk_style_edit
edit	deps/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_edit
egl	src/wl_platform.h	/^    } egl;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::__anon32ec62590608
eglBindAPI	src/egl_context.h	/^#define eglBindAPI /;"	d
eglCreateContext	src/egl_context.h	/^#define eglCreateContext /;"	d
eglCreateWindowSurface	src/egl_context.h	/^#define eglCreateWindowSurface /;"	d
eglDestroyContext	src/egl_context.h	/^#define eglDestroyContext /;"	d
eglDestroySurface	src/egl_context.h	/^#define eglDestroySurface /;"	d
eglGetConfigAttrib	src/egl_context.h	/^#define eglGetConfigAttrib /;"	d
eglGetConfigs	src/egl_context.h	/^#define eglGetConfigs /;"	d
eglGetDisplay	src/egl_context.h	/^#define eglGetDisplay /;"	d
eglGetError	src/egl_context.h	/^#define eglGetError /;"	d
eglGetProcAddress	src/egl_context.h	/^#define eglGetProcAddress /;"	d
eglInitialize	src/egl_context.h	/^#define eglInitialize /;"	d
eglMakeCurrent	src/egl_context.h	/^#define eglMakeCurrent /;"	d
eglQueryString	src/egl_context.h	/^#define eglQueryString /;"	d
eglSwapBuffers	src/egl_context.h	/^#define eglSwapBuffers /;"	d
eglSwapInterval	src/egl_context.h	/^#define eglSwapInterval /;"	d
eglTerminate	src/egl_context.h	/^#define eglTerminate /;"	d
elem_count	deps/nuklear.h	/^    unsigned int elem_count;$/;"	m	struct:nk_draw_command	typeref:typename:unsigned int
element	src/input.c	/^        _GLFWmapelement* element;$/;"	m	struct:parseMapping::__anona860d25d0108	typeref:typename:_GLFWmapelement *	file:
element_count	deps/nuklear.h	/^    unsigned int element_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
elements	deps/nuklear.h	/^    struct nk_buffer *elements;$/;"	m	struct:nk_draw_list	typeref:struct:nk_buffer *
em	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
empty	tests/CMakeLists.txt	/^add_executable(empty WIN32 MACOSX_BUNDLE empty.c ${TINYCTHREAD} ${GLAD_GL})$/;"	t
enableCursor	src/win32_window.c	/^static void enableCursor(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
enableCursor	src/x11_window.c	/^static void enableCursor(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
enableRawMouseMotion	src/win32_window.c	/^static void enableRawMouseMotion(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
enableRawMouseMotion	src/x11_window.c	/^static void enableRawMouseMotion(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
enable_vsync	tests/inputlag.c	/^int enable_vsync = nk_true;$/;"	v	typeref:typename:int
enabledExtensionCount	deps/glad/vulkan.h	/^    uint32_t                 enabledExtensionCount;$/;"	m	struct:VkDeviceCreateInfo	typeref:typename:uint32_t
enabledExtensionCount	deps/glad/vulkan.h	/^    uint32_t                 enabledExtensionCount;$/;"	m	struct:VkInstanceCreateInfo	typeref:typename:uint32_t
enabledLayerCount	deps/glad/vulkan.h	/^    uint32_t                 enabledLayerCount;$/;"	m	struct:VkDeviceCreateInfo	typeref:typename:uint32_t
enabledLayerCount	deps/glad/vulkan.h	/^    uint32_t                 enabledLayerCount;$/;"	m	struct:VkInstanceCreateInfo	typeref:typename:uint32_t
enabled_extension_count	tests/triangle-vulkan.c	/^    uint32_t enabled_extension_count;$/;"	m	struct:demo	typeref:typename:uint32_t	file:
enabled_layer_count	tests/triangle-vulkan.c	/^    uint32_t enabled_layer_count;$/;"	m	struct:demo	typeref:typename:uint32_t	file:
enabled_layers	tests/triangle-vulkan.c	/^    const char *enabled_layers[64];$/;"	m	struct:demo	typeref:typename:const char * [64]	file:
encodeUTF8	src/x11_window.c	/^static size_t encodeUTF8(char* s, unsigned int ch)$/;"	f	typeref:typename:size_t	file:
encode_utf8	tests/events.c	/^static size_t encode_utf8(char* s, unsigned int ch)$/;"	f	typeref:typename:size_t	file:
end	deps/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view	typeref:typename:int
end	deps/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_size
end	deps/nuklear.h	/^    nk_size end;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
end	deps/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_curve	typeref:struct:nk_vec2i
end	deps/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_line	typeref:struct:nk_vec2i
end	deps/nuklear.h	/^    struct nk_window *end;$/;"	m	struct:nk_context	typeref:struct:nk_window *
endFadeReservation	src/cocoa_monitor.m	/^static void endFadeReservation(CGDisplayFadeReservationToken token)$/;"	f
engineVersion	deps/glad/vulkan.h	/^    uint32_t          engineVersion;$/;"	m	struct:VkApplicationInfo	typeref:typename:uint32_t
errorBase	src/glx_context.h	/^    int             errorBase;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:int
errorBase	src/x11_platform.h	/^        int          errorBase;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00208	typeref:typename:int
errorBase	src/x11_platform.h	/^        int         errorBase;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:int
errorBase	src/x11_platform.h	/^        int         errorBase;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00808	typeref:typename:int
errorBase	src/x11_platform.h	/^        int         errorBase;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00908	typeref:typename:int
errorBase	src/x11_platform.h	/^        int         errorBase;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00a08	typeref:typename:int
errorCode	src/x11_platform.h	/^    int             errorCode;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:int
errorHandler	src/x11_init.c	/^static int errorHandler(Display *display, XErrorEvent* event)$/;"	f	typeref:typename:int	file:
errorListHead	src/internal.h	/^    _GLFWerror*         errorListHead;$/;"	m	struct:_GLFWlibrary	typeref:typename:_GLFWerror *
errorLock	src/internal.h	/^    _GLFWmutex          errorLock;$/;"	m	struct:_GLFWlibrary	typeref:typename:_GLFWmutex
errorSlot	src/internal.h	/^    _GLFWtls            errorSlot;$/;"	m	struct:_GLFWlibrary	typeref:typename:_GLFWtls
error_callback	examples/heightmap.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	examples/offscreen.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	examples/sharing.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	examples/triangle-opengl.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	examples/wave.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/clipboard.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/cursor.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/empty.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/events.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/gamma.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/glfwinfo.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/iconify.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/inputlag.c	/^void error_callback(int error, const char* description)$/;"	f	typeref:typename:void
error_callback	tests/joysticks.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/monitors.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/msaa.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/opacity.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/reopen.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/tearing.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/threads.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/timeout.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/title.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
error_callback	tests/windows.c	/^static void error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
euclid	tests/monitors.c	/^static int euclid(int a, int b)$/;"	f	typeref:typename:int	file:
eventBase	src/glx_context.h	/^    int             eventBase;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:int
eventBase	src/x11_platform.h	/^        int          eventBase;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00208	typeref:typename:int
eventBase	src/x11_platform.h	/^        int         eventBase;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:int
eventBase	src/x11_platform.h	/^        int         eventBase;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00808	typeref:typename:int
eventBase	src/x11_platform.h	/^        int         eventBase;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00908	typeref:typename:int
eventBase	src/x11_platform.h	/^        int         eventBase;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00a08	typeref:typename:int
eventSource	src/cocoa_platform.h	/^    CGEventSourceRef    eventSource;$/;"	t
events	tests/CMakeLists.txt	/^add_executable(events events.c ${GETOPT} ${GLAD_GL})$/;"	t
exportFromImportedHandleTypes	deps/glad/vulkan.h	/^    VkExternalFenceHandleTypeFlags   exportFromImportedHandleTypes;$/;"	m	struct:VkExternalFenceProperties	typeref:typename:VkExternalFenceHandleTypeFlags
exportFromImportedHandleTypes	deps/glad/vulkan.h	/^    VkExternalMemoryHandleTypeFlags   exportFromImportedHandleTypes;$/;"	m	struct:VkExternalMemoryProperties	typeref:typename:VkExternalMemoryHandleTypeFlags
exportFromImportedHandleTypes	deps/glad/vulkan.h	/^    VkExternalSemaphoreHandleTypeFlags   exportFromImportedHandleTypes;$/;"	m	struct:VkExternalSemaphoreProperties	typeref:typename:VkExternalSemaphoreHandleTypeFlags
exposure	src/x11_platform.h	/^        int         exposure;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00308	typeref:typename:int
extensionName	deps/glad/vulkan.h	/^    char              extensionName [ VK_MAX_EXTENSION_NAME_SIZE ];$/;"	m	struct:VkExtensionProperties	typeref:typename:char[]
extensionName	src/internal.h	/^    char            extensionName[256];$/;"	m	struct:VkExtensionProperties	typeref:typename:char[256]
extensionSupported	src/internal.h	/^    _GLFWextensionsupportedfun  extensionSupported;$/;"	m	struct:_GLFWcontext	typeref:typename:_GLFWextensionsupportedfun
extensionSupportedEGL	src/egl_context.c	/^static int extensionSupportedEGL(const char* extension)$/;"	f	typeref:typename:int	file:
extensionSupportedGLX	src/glx_context.c	/^static int extensionSupportedGLX(const char* extension)$/;"	f	typeref:typename:int	file:
extensionSupportedNSGL	src/nsgl_context.m	/^static int extensionSupportedNSGL(const char* extension)$/;"	f
extensionSupportedOSMesa	src/osmesa_context.c	/^static int extensionSupportedOSMesa(const char* extension)$/;"	f	typeref:typename:int	file:
extensionSupportedWGL	src/wgl_context.c	/^static int extensionSupportedWGL(const char* extension)$/;"	f	typeref:typename:int	file:
extension_names	tests/triangle-vulkan.c	/^    const char *extension_names[64];$/;"	m	struct:demo	typeref:typename:const char * [64]	file:
extensions	src/internal.h	/^        char*           extensions[2];$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:char * [2]
extent	deps/glad/vulkan.h	/^    VkExtent2D       extent;$/;"	m	struct:VkRect2D	typeref:typename:VkExtent2D
extent	deps/glad/vulkan.h	/^    VkExtent3D               extent;$/;"	m	struct:VkImageCopy	typeref:typename:VkExtent3D
extent	deps/glad/vulkan.h	/^    VkExtent3D               extent;$/;"	m	struct:VkImageCreateInfo	typeref:typename:VkExtent3D
extent	deps/glad/vulkan.h	/^    VkExtent3D               extent;$/;"	m	struct:VkImageResolve	typeref:typename:VkExtent3D
extent	deps/glad/vulkan.h	/^    VkExtent3D               extent;$/;"	m	struct:VkSparseImageMemoryBind	typeref:typename:VkExtent3D
externalFenceFeatures	deps/glad/vulkan.h	/^    VkExternalFenceFeatureFlags   externalFenceFeatures;$/;"	m	struct:VkExternalFenceProperties	typeref:typename:VkExternalFenceFeatureFlags
externalMemoryFeatures	deps/glad/vulkan.h	/^    VkExternalMemoryFeatureFlags    externalMemoryFeatures;$/;"	m	struct:VkExternalMemoryProperties	typeref:typename:VkExternalMemoryFeatureFlags
externalMemoryProperties	deps/glad/vulkan.h	/^    VkExternalMemoryProperties      externalMemoryProperties;$/;"	m	struct:VkExternalBufferProperties	typeref:typename:VkExternalMemoryProperties
externalMemoryProperties	deps/glad/vulkan.h	/^    VkExternalMemoryProperties   externalMemoryProperties;$/;"	m	struct:VkExternalImageFormatProperties	typeref:typename:VkExternalMemoryProperties
externalSemaphoreFeatures	deps/glad/vulkan.h	/^    VkExternalSemaphoreFeatureFlags   externalSemaphoreFeatures;$/;"	m	struct:VkExternalSemaphoreProperties	typeref:typename:VkExternalSemaphoreFeatureFlags
extra	deps/nuklear.h	/^    struct nk_rp_node extra[2];$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_node[2]
ey	deps/nuklear.h	/^    float ey;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
f	deps/nuklear.h	/^    float f;$/;"	m	union:nk_property	typeref:typename:float
f	deps/nuklear.h	/^    union {nk_uint i; float f;} conv = {0};$/;"	m	union:nk_inv_sqrt::__anonca785108070a	typeref:typename:float
fEnable	src/win32_platform.h	/^    BOOL fEnable;$/;"	m	struct:__anon622bd5890208	typeref:typename:BOOL
fTransitionOnMaximized	src/win32_platform.h	/^    BOOL fTransitionOnMaximized;$/;"	m	struct:__anon622bd5890208	typeref:typename:BOOL
failOp	deps/glad/vulkan.h	/^    VkStencilOp              failOp;$/;"	m	struct:VkStencilOpState	typeref:typename:VkStencilOp
fallback	deps/nuklear.h	/^    const struct nk_font_glyph *fallback;$/;"	m	struct:nk_font	typeref:typename:const struct nk_font_glyph *
fallbackRefreshRate	src/cocoa_platform.h	/^    double              fallbackRefreshRate;$/;"	E	struct:_GLFWmonitorNS
fallback_codepoint	deps/nuklear.h	/^    nk_rune fallback_codepoint;$/;"	m	struct:nk_font	typeref:typename:nk_rune
fallback_glyph	deps/nuklear.h	/^    nk_rune fallback_glyph;$/;"	m	struct:nk_font_config	typeref:typename:nk_rune
fbHeight	src/cocoa_platform.h	/^    int             fbWidth, fbHeight;$/;"	E	struct:_GLFWwindowNS
fb_scale	deps/nuklear_glfw_gl2.h	/^    struct nk_vec2 fb_scale;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
fbsize	src/internal.h	/^        GLFWframebuffersizefun  fbsize;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWframebuffersizefun
fd	src/linux_joystick.h	/^    int                     fd;$/;"	m	struct:_GLFWjoystickLinux	typeref:typename:int
fdx	deps/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
fdy	deps/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
features	deps/glad/vulkan.h	/^    VkPhysicalDeviceFeatures           features;$/;"	m	struct:VkPhysicalDeviceFeatures2	typeref:typename:VkPhysicalDeviceFeatures
fence	deps/glad/vulkan.h	/^    VkFence   fence;$/;"	m	struct:VkAcquireNextImageInfoKHR	typeref:typename:VkFence
fillModeNonSolid	deps/glad/vulkan.h	/^    VkBool32                 fillModeNonSolid;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
filled	deps/nuklear.h	/^    float filled;$/;"	m	struct:nk_row_layout	typeref:typename:float
filter	deps/nuklear.h	/^    nk_plugin_filter filter;$/;"	m	struct:nk_text_edit	typeref:typename:nk_plugin_filter
finalLayout	deps/glad/vulkan.h	/^    VkImageLayout            finalLayout;$/;"	m	struct:VkAttachmentDescription	typeref:typename:VkImageLayout
findAttribValue	src/wgl_context.c	/^#define findAttribValue(/;"	d	file:
findMapping	src/input.c	/^static _GLFWmapping* findMapping(const char* guid)$/;"	f	typeref:typename:_GLFWmapping *	file:
findPixelFormatAttribValue	src/wgl_context.c	/^static int findPixelFormatAttribValue(const int* attribs,$/;"	f	typeref:typename:int	file:
findValidMapping	src/input.c	/^static _GLFWmapping* findValidMapping(const _GLFWjoystick* js)$/;"	f	typeref:typename:_GLFWmapping *	file:
findWindowFromDecorationSurface	src/wl_init.c	/^static _GLFWwindow* findWindowFromDecorationSurface(struct wl_surface* surface,$/;"	f	typeref:typename:_GLFWwindow *	file:
firstIndex	deps/glad/vulkan.h	/^    uint32_t                         firstIndex;$/;"	m	struct:VkDrawIndexedIndirectCommand	typeref:typename:uint32_t
firstInstance	deps/glad/vulkan.h	/^    uint32_t   firstInstance;$/;"	m	struct:VkDrawIndexedIndirectCommand	typeref:typename:uint32_t
firstInstance	deps/glad/vulkan.h	/^    uint32_t   firstInstance;$/;"	m	struct:VkDrawIndirectCommand	typeref:typename:uint32_t
firstRectForCharacterRange:actualRange:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
firstVertex	deps/glad/vulkan.h	/^    uint32_t                         firstVertex;$/;"	m	struct:VkDrawIndirectCommand	typeref:typename:uint32_t
first_char	deps/nuklear.h	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find	typeref:typename:int
first_free	deps/nuklear.h	/^    void   *first_free;$/;"	m	struct:nk_tt__hheap	typeref:typename:void *
first_unicode_codepoint_in_range	deps/nuklear.h	/^    int first_unicode_codepoint_in_range;$/;"	m	struct:nk_tt_pack_range	typeref:typename:int
fitToMonitor	src/win32_window.c	/^static void fitToMonitor(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
fixed_background	deps/nuklear.h	/^    struct nk_style_item fixed_background;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_item
flag	deps/getopt.h	/^  int* flag;$/;"	m	struct:option	typeref:typename:int *
flags	deps/glad/vulkan.h	/^    VkAttachmentDescriptionFlags   flags;$/;"	m	struct:VkAttachmentDescription	typeref:typename:VkAttachmentDescriptionFlags
flags	deps/glad/vulkan.h	/^    VkBufferCreateFlags      flags;$/;"	m	struct:VkBufferCreateInfo	typeref:typename:VkBufferCreateFlags
flags	deps/glad/vulkan.h	/^    VkBufferCreateFlags   flags;$/;"	m	struct:VkPhysicalDeviceExternalBufferInfo	typeref:typename:VkBufferCreateFlags
flags	deps/glad/vulkan.h	/^    VkBufferViewCreateFlags flags;$/;"	m	struct:VkBufferViewCreateInfo	typeref:typename:VkBufferViewCreateFlags
flags	deps/glad/vulkan.h	/^    VkCommandBufferUsageFlags    flags;$/;"	m	struct:VkCommandBufferBeginInfo	typeref:typename:VkCommandBufferUsageFlags
flags	deps/glad/vulkan.h	/^    VkCommandPoolCreateFlags     flags;$/;"	m	struct:VkCommandPoolCreateInfo	typeref:typename:VkCommandPoolCreateFlags
flags	deps/glad/vulkan.h	/^    VkDebugReportFlagsEXT              flags;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT	typeref:typename:VkDebugReportFlagsEXT
flags	deps/glad/vulkan.h	/^    VkDescriptorPoolCreateFlags    flags;$/;"	m	struct:VkDescriptorPoolCreateInfo	typeref:typename:VkDescriptorPoolCreateFlags
flags	deps/glad/vulkan.h	/^    VkDescriptorSetLayoutCreateFlags      flags;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo	typeref:typename:VkDescriptorSetLayoutCreateFlags
flags	deps/glad/vulkan.h	/^    VkDescriptorUpdateTemplateCreateFlags      flags;$/;"	m	struct:VkDescriptorUpdateTemplateCreateInfo	typeref:typename:VkDescriptorUpdateTemplateCreateFlags
flags	deps/glad/vulkan.h	/^    VkDeviceCreateFlags      flags;$/;"	m	struct:VkDeviceCreateInfo	typeref:typename:VkDeviceCreateFlags
flags	deps/glad/vulkan.h	/^    VkDeviceQueueCreateFlags              flags;$/;"	m	struct:VkDeviceQueueInfo2	typeref:typename:VkDeviceQueueCreateFlags
flags	deps/glad/vulkan.h	/^    VkDeviceQueueCreateFlags      flags;$/;"	m	struct:VkDeviceQueueCreateInfo	typeref:typename:VkDeviceQueueCreateFlags
flags	deps/glad/vulkan.h	/^    VkEventCreateFlags       flags;$/;"	m	struct:VkEventCreateInfo	typeref:typename:VkEventCreateFlags
flags	deps/glad/vulkan.h	/^    VkFenceCreateFlags       flags;$/;"	m	struct:VkFenceCreateInfo	typeref:typename:VkFenceCreateFlags
flags	deps/glad/vulkan.h	/^    VkFramebufferCreateFlags      flags;$/;"	m	struct:VkFramebufferCreateInfo	typeref:typename:VkFramebufferCreateFlags
flags	deps/glad/vulkan.h	/^    VkImageCreateFlags       flags;$/;"	m	struct:VkImageCreateInfo	typeref:typename:VkImageCreateFlags
flags	deps/glad/vulkan.h	/^    VkImageCreateFlags   flags;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2	typeref:typename:VkImageCreateFlags
flags	deps/glad/vulkan.h	/^    VkImageViewCreateFlags   flags;$/;"	m	struct:VkImageViewCreateInfo	typeref:typename:VkImageViewCreateFlags
flags	deps/glad/vulkan.h	/^    VkInstanceCreateFlags    flags;$/;"	m	struct:VkInstanceCreateInfo	typeref:typename:VkInstanceCreateFlags
flags	deps/glad/vulkan.h	/^    VkMemoryAllocateFlags   flags;$/;"	m	struct:VkMemoryAllocateFlagsInfo	typeref:typename:VkMemoryAllocateFlags
flags	deps/glad/vulkan.h	/^    VkMemoryHeapFlags        flags;$/;"	m	struct:VkMemoryHeap	typeref:typename:VkMemoryHeapFlags
flags	deps/glad/vulkan.h	/^    VkPipelineCacheCreateFlags      flags;$/;"	m	struct:VkPipelineCacheCreateInfo	typeref:typename:VkPipelineCacheCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineColorBlendStateCreateFlags      flags;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo	typeref:typename:VkPipelineColorBlendStateCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineCreateFlags    flags;$/;"	m	struct:VkComputePipelineCreateInfo	typeref:typename:VkPipelineCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineCreateFlags    flags;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:VkPipelineCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineDepthStencilStateCreateFlags      flags;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:VkPipelineDepthStencilStateCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineDynamicStateCreateFlags      flags;$/;"	m	struct:VkPipelineDynamicStateCreateInfo	typeref:typename:VkPipelineDynamicStateCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineInputAssemblyStateCreateFlags      flags;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo	typeref:typename:VkPipelineInputAssemblyStateCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineLayoutCreateFlags      flags;$/;"	m	struct:VkPipelineLayoutCreateInfo	typeref:typename:VkPipelineLayoutCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineMultisampleStateCreateFlags      flags;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo	typeref:typename:VkPipelineMultisampleStateCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineRasterizationStateCreateFlags      flags;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:VkPipelineRasterizationStateCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineShaderStageCreateFlags      flags;$/;"	m	struct:VkPipelineShaderStageCreateInfo	typeref:typename:VkPipelineShaderStageCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineTessellationStateCreateFlags      flags;$/;"	m	struct:VkPipelineTessellationStateCreateInfo	typeref:typename:VkPipelineTessellationStateCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineVertexInputStateCreateFlags      flags;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo	typeref:typename:VkPipelineVertexInputStateCreateFlags
flags	deps/glad/vulkan.h	/^    VkPipelineViewportStateCreateFlags      flags;$/;"	m	struct:VkPipelineViewportStateCreateInfo	typeref:typename:VkPipelineViewportStateCreateFlags
flags	deps/glad/vulkan.h	/^    VkQueryPoolCreateFlags   flags;$/;"	m	struct:VkQueryPoolCreateInfo	typeref:typename:VkQueryPoolCreateFlags
flags	deps/glad/vulkan.h	/^    VkRenderPassCreateFlags      flags;$/;"	m	struct:VkRenderPassCreateInfo	typeref:typename:VkRenderPassCreateFlags
flags	deps/glad/vulkan.h	/^    VkSamplerCreateFlags     flags;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkSamplerCreateFlags
flags	deps/glad/vulkan.h	/^    VkSemaphoreCreateFlags   flags;$/;"	m	struct:VkSemaphoreCreateInfo	typeref:typename:VkSemaphoreCreateFlags
flags	deps/glad/vulkan.h	/^    VkShaderModuleCreateFlags   flags;$/;"	m	struct:VkShaderModuleCreateInfo	typeref:typename:VkShaderModuleCreateFlags
flags	deps/glad/vulkan.h	/^    VkSparseImageFormatFlags   flags;$/;"	m	struct:VkSparseImageFormatProperties	typeref:typename:VkSparseImageFormatFlags
flags	deps/glad/vulkan.h	/^    VkSparseMemoryBindFlags flags;$/;"	m	struct:VkSparseImageMemoryBind	typeref:typename:VkSparseMemoryBindFlags
flags	deps/glad/vulkan.h	/^    VkSparseMemoryBindFlags flags;$/;"	m	struct:VkSparseMemoryBind	typeref:typename:VkSparseMemoryBindFlags
flags	deps/glad/vulkan.h	/^    VkSubpassDescriptionFlags   flags;$/;"	m	struct:VkSubpassDescription	typeref:typename:VkSubpassDescriptionFlags
flags	deps/glad/vulkan.h	/^    VkSwapchainCreateFlagsKHR          flags;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkSwapchainCreateFlagsKHR
flags	deps/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_panel	typeref:typename:nk_flags
flags	deps/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_window	typeref:typename:nk_flags
flags	deps/nuklear.h	/^    struct nk_config_stack_flags flags;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_flags
flags	src/cocoa_platform.h	/^    VkMacOSSurfaceCreateFlagsMVK    flags;$/;"	E	struct:VkMacOSSurfaceCreateInfoMVK
flags	src/win32_platform.h	/^    VkWin32SurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR	typeref:typename:VkWin32SurfaceCreateFlagsKHR
flags	src/wl_platform.h	/^    VkWaylandSurfaceCreateFlagsKHR  flags;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:typename:VkWaylandSurfaceCreateFlagsKHR
flags	src/x11_platform.h	/^    VkXcbSurfaceCreateFlagsKHR  flags;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR	typeref:typename:VkXcbSurfaceCreateFlagsKHR
flags	src/x11_platform.h	/^    VkXlibSurfaceCreateFlagsKHR flags;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR	typeref:typename:VkXlibSurfaceCreateFlagsKHR
flags	src/x11_window.c	/^        unsigned long flags;$/;"	m	struct:_glfwPlatformSetWindowDecorated::__anon51ee5e7e0208	typeref:typename:unsigned long	file:
flagsChanged:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
float32	deps/glad/vulkan.h	/^    float                    float32 [4];$/;"	m	union:VkClearColorValue	typeref:typename:float[4]
floating	src/internal.h	/^    GLFWbool            floating;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWbool
floating	src/internal.h	/^    GLFWbool      floating;$/;"	m	struct:_GLFWwndconfig	typeref:typename:GLFWbool
floats	deps/nuklear.h	/^    struct nk_config_stack_float floats;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_float
floor_diffuse	examples/particles.c	/^const GLfloat floor_diffuse[4]     = { 1.f,  0.6f, 0.6f, 1.f };$/;"	v	typeref:typename:const GLfloat[4]
floor_shininess	examples/particles.c	/^const GLfloat floor_shininess      = 18.f;$/;"	v	typeref:typename:const GLfloat
floor_specular	examples/particles.c	/^const GLfloat floor_specular[4]    = { 0.6f, 0.6f, 0.6f, 1.f };$/;"	v	typeref:typename:const GLfloat[4]
floor_tex_id	examples/particles.c	/^GLuint particle_tex_id, floor_tex_id;$/;"	v	typeref:typename:GLuint
floor_texture	examples/particles.c	/^const unsigned char floor_texture[ F_TEX_WIDTH * F_TEX_HEIGHT ] = {$/;"	v	typeref:typename:const unsigned char[]
focus	src/internal.h	/^        GLFWwindowfocusfun      focus;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWwindowfocusfun
focus	src/wl_platform.h	/^        int                                focus;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590308	typeref:typename:int
focusOnShow	src/internal.h	/^    GLFWbool            focusOnShow;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWbool
focusOnShow	src/internal.h	/^    GLFWbool      focusOnShow;$/;"	m	struct:_GLFWwndconfig	typeref:typename:GLFWbool
focused	src/internal.h	/^    GLFWbool      focused;$/;"	m	struct:_GLFWwndconfig	typeref:typename:GLFWbool
fog_color	examples/particles.c	/^const GLfloat fog_color[4]         = { 0.1f, 0.1f, 0.1f, 1.f };$/;"	v	typeref:typename:const GLfloat[4]
font	deps/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_command_text	typeref:typename:const struct nk_user_font *
font	deps/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_style	typeref:typename:const struct nk_user_font *
font	deps/nuklear.h	/^    struct nk_baked_font *font;$/;"	m	struct:nk_font_config	typeref:struct:nk_baked_font *
font_num	deps/nuklear.h	/^    int font_num;$/;"	m	struct:nk_font_atlas	typeref:typename:int
font_size	deps/nuklear.h	/^    float font_size;$/;"	m	struct:nk_tt_pack_range	typeref:typename:float
font_tex	deps/nuklear_glfw_gl2.h	/^    GLuint font_tex;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
fonts	deps/nuklear.h	/^    struct nk_config_stack_user_font fonts;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_user_font
fonts	deps/nuklear.h	/^    struct nk_font *fonts;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font *
fontstart	deps/nuklear.h	/^    int fontstart;\/* offset of start of font *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
footer_height	deps/nuklear.h	/^    float footer_height;$/;"	m	struct:nk_panel	typeref:typename:float
forceExplicitReconstruction	deps/glad/vulkan.h	/^    VkBool32                           forceExplicitReconstruction;$/;"	m	struct:VkSamplerYcbcrConversionCreateInfo	typeref:typename:VkBool32
foreground	deps/nuklear.h	/^    struct nk_color foreground;$/;"	m	struct:nk_command_text	typeref:struct:nk_color
foregroundLockTimeout	src/win32_platform.h	/^    DWORD               foregroundLockTimeout;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:DWORD
format	deps/glad/vulkan.h	/^    VkFormat                           format;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2	typeref:typename:VkFormat
format	deps/glad/vulkan.h	/^    VkFormat                           format;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2	typeref:typename:VkFormat
format	deps/glad/vulkan.h	/^    VkFormat                           format;$/;"	m	struct:VkSamplerYcbcrConversionCreateInfo	typeref:typename:VkFormat
format	deps/glad/vulkan.h	/^    VkFormat                           format;$/;"	m	struct:VkSurfaceFormatKHR	typeref:typename:VkFormat
format	deps/glad/vulkan.h	/^    VkFormat                 format;$/;"	m	struct:VkAttachmentDescription	typeref:typename:VkFormat
format	deps/glad/vulkan.h	/^    VkFormat                 format;$/;"	m	struct:VkBufferViewCreateInfo	typeref:typename:VkFormat
format	deps/glad/vulkan.h	/^    VkFormat                 format;$/;"	m	struct:VkImageCreateInfo	typeref:typename:VkFormat
format	deps/glad/vulkan.h	/^    VkFormat                 format;$/;"	m	struct:VkImageViewCreateInfo	typeref:typename:VkFormat
format	deps/glad/vulkan.h	/^    VkFormat                 format;$/;"	m	struct:VkVertexInputAttributeDescription	typeref:typename:VkFormat
format	deps/nuklear.h	/^    enum nk_draw_vertex_layout_format format;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_format
format	src/x11_platform.h	/^        Atom        format;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00408	typeref:typename:Atom
format	tests/triangle-vulkan.c	/^        VkFormat format;$/;"	m	struct:demo::__anondab0972c0208	typeref:typename:VkFormat	file:
format	tests/triangle-vulkan.c	/^    VkFormat format;$/;"	m	struct:demo	typeref:typename:VkFormat	file:
formatProperties	deps/glad/vulkan.h	/^    VkFormatProperties                 formatProperties;$/;"	m	struct:VkFormatProperties2	typeref:typename:VkFormatProperties
formatProperties	deps/glad/vulkan.h	/^    VkSparseImageFormatProperties   formatProperties;$/;"	m	struct:VkSparseImageMemoryRequirements	typeref:typename:VkSparseImageFormatProperties
format_mode	tests/monitors.c	/^static const char* format_mode(const GLFWvidmode* mode)$/;"	f	typeref:typename:const char *	file:
forward	src/internal.h	/^    GLFWbool            forward, debug, noerror;$/;"	m	struct:_GLFWcontext	typeref:typename:GLFWbool
forward	src/internal.h	/^    GLFWbool      forward;$/;"	m	struct:_GLFWctxconfig	typeref:typename:GLFWbool
fountain_diffuse	examples/particles.c	/^const GLfloat fountain_diffuse[4]  = { 0.7f, 1.f,  1.f,  1.f };$/;"	v	typeref:typename:const GLfloat[4]
fountain_normal	examples/particles.c	/^static const float fountain_normal[FOUNTAIN_SIDE_POINTS * 2] =$/;"	v	typeref:typename:const float[]	file:
fountain_shininess	examples/particles.c	/^const GLfloat fountain_shininess   = 12.f;$/;"	v	typeref:typename:const GLfloat
fountain_side	examples/particles.c	/^static const float fountain_side[FOUNTAIN_SIDE_POINTS * 2] =$/;"	v	typeref:typename:const float[]	file:
fountain_specular	examples/particles.c	/^const GLfloat fountain_specular[4] = {  1.f, 1.f,  1.f,  1.f };$/;"	v	typeref:typename:const GLfloat[4]
fragShaderCode	tests/triangle-vulkan.c	/^static const char fragShaderCode[] = {$/;"	v	typeref:typename:const char[]	file:
frag_shader_module	tests/triangle-vulkan.c	/^    VkShaderModule frag_shader_module;$/;"	m	struct:demo	typeref:typename:VkShaderModule	file:
fragmentStoresAndAtomics	deps/glad/vulkan.h	/^    VkBool32                 fragmentStoresAndAtomics;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
fragment_shader_text	examples/heightmap.c	/^static const char* fragment_shader_text =$/;"	v	typeref:typename:const char *	file:
fragment_shader_text	examples/offscreen.c	/^static const char* fragment_shader_text =$/;"	v	typeref:typename:const char *	file:
fragment_shader_text	examples/sharing.c	/^static const char* fragment_shader_text =$/;"	v	typeref:typename:const char *	file:
fragment_shader_text	examples/triangle-opengl.c	/^static const char* fragment_shader_text =$/;"	v	typeref:typename:const char *	file:
fragment_shader_text	tests/cursor.c	/^static const char* fragment_shader_text =$/;"	v	typeref:typename:const char *	file:
fragment_shader_text	tests/msaa.c	/^static const char* fragment_shader_text =$/;"	v	typeref:typename:const char *	file:
fragment_shader_text	tests/reopen.c	/^static const char* fragment_shader_text =$/;"	v	typeref:typename:const char *	file:
fragment_shader_text	tests/tearing.c	/^static const char* fragment_shader_text =$/;"	v	typeref:typename:const char *	file:
frameAction	src/win32_platform.h	/^    GLFWbool            frameAction;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:GLFWbool
frameCount	tests/triangle-vulkan.c	/^    int32_t frameCount;$/;"	m	struct:demo	typeref:typename:int32_t	file:
frameName	src/internal.h	/^        char      frameName[256];$/;"	m	struct:_GLFWwndconfig::__anona0faa0af0208	typeref:typename:char[256]
frame_rate	tests/tearing.c	/^static double frame_rate;$/;"	v	typeref:typename:double	file:
framebuffer	deps/glad/vulkan.h	/^    VkFramebuffer            framebuffer;$/;"	m	struct:VkRenderPassBeginInfo	typeref:typename:VkFramebuffer
framebuffer	deps/glad/vulkan.h	/^    VkFramebuffer     framebuffer;$/;"	m	struct:VkCommandBufferInheritanceInfo	typeref:typename:VkFramebuffer
framebuffer	src/internal.h	/^        _GLFWfbconfig   framebuffer;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0708	typeref:typename:_GLFWfbconfig
framebufferColorSampleCounts	deps/glad/vulkan.h	/^    VkSampleCountFlags       framebufferColorSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkSampleCountFlags
framebufferDepthSampleCounts	deps/glad/vulkan.h	/^    VkSampleCountFlags       framebufferDepthSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkSampleCountFlags
framebufferNoAttachmentsSampleCounts	deps/glad/vulkan.h	/^    VkSampleCountFlags       framebufferNoAttachmentsSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkSampleCountFlags
framebufferSizeFun	examples/splitview.c	/^static void framebufferSizeFun(GLFWwindow* window, int w, int h)$/;"	f	typeref:typename:void	file:
framebufferStencilSampleCounts	deps/glad/vulkan.h	/^    VkSampleCountFlags       framebufferStencilSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkSampleCountFlags
framebuffer_size_callback	examples/wave.c	/^void framebuffer_size_callback(GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void
framebuffer_size_callback	tests/events.c	/^static void framebuffer_size_callback(GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void	file:
framebuffer_size_callback	tests/iconify.c	/^static void framebuffer_size_callback(GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void	file:
framebuffer_size_callback	tests/monitors.c	/^static void framebuffer_size_callback(GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void	file:
framebuffers	tests/triangle-vulkan.c	/^    VkFramebuffer *framebuffers;$/;"	m	struct:demo	typeref:typename:VkFramebuffer *	file:
framework	src/nsgl_context.h	/^    CFBundleRef     framework;$/;"	m	struct:_GLFWlibraryNSGL	typeref:typename:CFBundleRef
free	deps/nuklear.h	/^    nk_plugin_free free;$/;"	m	struct:nk_allocator	typeref:typename:nk_plugin_free
freeLibraries	src/win32_init.c	/^static void freeLibraries(void)$/;"	f	typeref:typename:void	file:
free_head	deps/nuklear.h	/^    struct nk_rp_node *free_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_node *
freelist	deps/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_context	typeref:struct:nk_page_element *
freelist	deps/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_pool	typeref:struct:nk_page_element *
frequency	src/cocoa_platform.h	/^    uint64_t        frequency;$/;"	E	struct:_GLFWtimerNS
frequency	src/posix_time.h	/^    uint64_t    frequency;$/;"	m	struct:_GLFWtimerPOSIX	typeref:typename:uint64_t
frequency	src/win32_platform.h	/^    uint64_t            frequency;$/;"	m	struct:_GLFWtimerWin32	typeref:typename:uint64_t
front	deps/glad/vulkan.h	/^    VkStencilOpState         front;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:VkStencilOpState
frontFace	deps/glad/vulkan.h	/^    VkFrontFace              frontFace;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:VkFrontFace
ftTimeStamp	deps/mingw/dinput.h	/^	FILETIME	ftTimeStamp;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:FILETIME
ftTimeStamp	deps/mingw/dinput.h	/^	FILETIME	ftTimeStamp;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:FILETIME
fullDrawIndexUint32	deps/glad/vulkan.h	/^    VkBool32                 fullDrawIndexUint32;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
func	deps/stb_image_write.h	/^   stbi_write_func *func;$/;"	m	struct:__anon955e808b0108	typeref:typename:stbi_write_func *
functions	src/x11_window.c	/^        unsigned long functions;$/;"	m	struct:_glfwPlatformSetWindowDecorated::__anon51ee5e7e0208	typeref:typename:unsigned long	file:
fx	deps/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
g	deps/glad/vulkan.h	/^    VkComponentSwizzle   g;$/;"	m	struct:VkComponentMapping	typeref:typename:VkComponentSwizzle
g	deps/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
g	deps/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
g	examples/offscreen.c	/^    float r, g, b;$/;"	m	struct:__anone38272df0108	typeref:typename:float	file:
g	examples/particles.c	/^    float r,g,b;     \/\/ Color of particle$/;"	m	struct:__anon62203f4b0408	typeref:typename:float	file:
g	examples/wave.c	/^    GLfloat r, g, b;$/;"	m	struct:Vertex	typeref:typename:GLfloat	file:
g	tests/threads.c	/^    float r, g, b;$/;"	m	struct:__anon6fa524230108	typeref:typename:float	file:
g	tests/windows.c	/^    float r, g, b;$/;"	m	struct:__anon8425f2a30108	typeref:typename:float	file:
gamma	tests/CMakeLists.txt	/^add_executable(gamma WIN32 MACOSX_BUNDLE gamma.c ${GLAD_GL})$/;"	t
gammaBroken	src/x11_platform.h	/^        GLFWbool    gammaBroken;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:GLFWbool
gear	examples/gears.c	/^gear(GLfloat inner_radius, GLfloat outer_radius, GLfloat width,$/;"	f	typeref:typename:void	file:
gear1	examples/gears.c	/^static GLint gear1, gear2, gear3;$/;"	v	typeref:typename:GLint	file:
gear2	examples/gears.c	/^static GLint gear1, gear2, gear3;$/;"	v	typeref:typename:GLint	file:
gear3	examples/gears.c	/^static GLint gear1, gear2, gear3;$/;"	v	typeref:typename:GLint	file:
gears	examples/CMakeLists.txt	/^add_executable(gears WIN32 MACOSX_BUNDLE gears.c ${ICON} ${GLAD_GL})$/;"	t
generate_heightmap__circle	examples/heightmap.c	/^static void generate_heightmap__circle(float* center_x, float* center_y,$/;"	f	typeref:typename:void	file:
geometryShader	deps/glad/vulkan.h	/^    VkBool32                 geometryShader;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
getDeviceDescription	src/win32_joystick.c	/^static const char* getDeviceDescription(const XINPUT_CAPABILITIES* xic)$/;"	f	typeref:typename:const char *	file:
getDisplayName	src/cocoa_monitor.m	/^static char* getDisplayName(CGDirectDisplayID displayID)$/;"	f
getEGLConfigAttrib	src/egl_context.c	/^static int getEGLConfigAttrib(EGLConfig config, int attrib)$/;"	f	typeref:typename:int	file:
getEGLErrorString	src/egl_context.c	/^static const char* getEGLErrorString(EGLint error)$/;"	f	typeref:typename:const char *	file:
getElementValue	src/cocoa_joystick.m	/^static long getElementValue(_GLFWjoystick* js, _GLFWjoyelementNS* element)$/;"	f	struct:_GLFWjoyelementNS
getFallbackRefreshRate	src/cocoa_monitor.m	/^static double getFallbackRefreshRate(CGDirectDisplayID displayID)$/;"	f
getFullWindowSize	src/win32_window.c	/^static void getFullWindowSize(DWORD style, DWORD exStyle,$/;"	f	typeref:typename:void	file:
getGLXFBConfigAttrib	src/glx_context.c	/^static int getGLXFBConfigAttrib(GLXFBConfig fbconfig, int attrib)$/;"	f	typeref:typename:int	file:
getKeyMods	src/win32_window.c	/^static int getKeyMods(void)$/;"	f	typeref:typename:int	file:
getModeInfo	src/x11_monitor.c	/^static const XRRModeInfo* getModeInfo(const XRRScreenResources* sr, RRMode id)$/;"	f	typeref:typename:const XRRModeInfo *	file:
getProcAddress	src/internal.h	/^    _GLFWgetprocaddressfun      getProcAddress;$/;"	m	struct:_GLFWcontext	typeref:typename:_GLFWgetprocaddressfun
getProcAddressEGL	src/egl_context.c	/^static GLFWglproc getProcAddressEGL(const char* procname)$/;"	f	typeref:typename:GLFWglproc	file:
getProcAddressGLX	src/glx_context.c	/^static GLFWglproc getProcAddressGLX(const char* procname)$/;"	f	typeref:typename:GLFWglproc	file:
getProcAddressNSGL	src/nsgl_context.m	/^static GLFWglproc getProcAddressNSGL(const char* procname)$/;"	f
getProcAddressOSMesa	src/osmesa_context.c	/^static GLFWglproc getProcAddressOSMesa(const char* procname)$/;"	f	typeref:typename:GLFWglproc	file:
getProcAddressWGL	src/wgl_context.c	/^static GLFWglproc getProcAddressWGL(const char* procname)$/;"	f	typeref:typename:GLFWglproc	file:
getSelectionString	src/x11_window.c	/^static const char* getSelectionString(Atom selection)$/;"	f	typeref:typename:const char *	file:
getStyleMask	src/cocoa_window.m	/^static NSUInteger getStyleMask(_GLFWwindow* window)$/;"	f
getSupportedAtom	src/x11_init.c	/^static Atom getSupportedAtom(Atom* supportedAtoms,$/;"	f	typeref:typename:Atom	file:
getSystemContentScale	src/x11_init.c	/^static void getSystemContentScale(float* xscale, float* yscale)$/;"	f	typeref:typename:void	file:
getWindowExStyle	src/win32_window.c	/^static DWORD getWindowExStyle(const _GLFWwindow* window)$/;"	f	typeref:typename:DWORD	file:
getWindowState	src/x11_window.c	/^static int getWindowState(_GLFWwindow* window)$/;"	f	typeref:typename:int	file:
getWindowStyle	src/win32_window.c	/^static DWORD getWindowStyle(const _GLFWwindow* window)$/;"	f	typeref:typename:DWORD	file:
get_action_name	tests/events.c	/^static const char* get_action_name(int action)$/;"	f	typeref:typename:const char *	file:
get_api_name	tests/glfwinfo.c	/^static const char* get_api_name(int api)$/;"	f	typeref:typename:const char *	file:
get_button_name	tests/events.c	/^static const char* get_button_name(int button)$/;"	f	typeref:typename:const char *	file:
get_device_type_name	tests/glfwinfo.c	/^static const char* get_device_type_name(VkPhysicalDeviceType type)$/;"	f	typeref:typename:const char *	file:
get_key_name	tests/events.c	/^static const char* get_key_name(int key)$/;"	f	typeref:typename:const char *	file:
get_mods_name	tests/events.c	/^static const char* get_mods_name(int mods)$/;"	f	typeref:typename:const char *	file:
get_profile_name_gl	tests/glfwinfo.c	/^static const char* get_profile_name_gl(GLint mask)$/;"	f	typeref:typename:const char *	file:
get_profile_name_glfw	tests/glfwinfo.c	/^static const char* get_profile_name_glfw(int profile)$/;"	f	typeref:typename:const char *	file:
get_strategy_name_gl	tests/glfwinfo.c	/^static const char* get_strategy_name_gl(GLint strategy)$/;"	f	typeref:typename:const char *	file:
get_strategy_name_glfw	tests/glfwinfo.c	/^static const char* get_strategy_name_glfw(int strategy)$/;"	f	typeref:typename:const char *	file:
getopt	deps/getopt.c	/^int getopt(int argc, char* const argv[], const char* optstring) {$/;"	f	typeref:typename:int
getopt_long	deps/getopt.c	/^int getopt_long(int argc, char* const argv[], const char* optstring,$/;"	f	typeref:typename:int
glAccum	deps/glad/gl.h	/^#define glAccum /;"	d
glActiveTexture	deps/glad/gl.h	/^#define glActiveTexture /;"	d
glAlphaFunc	deps/glad/gl.h	/^#define glAlphaFunc /;"	d
glAreTexturesResident	deps/glad/gl.h	/^#define glAreTexturesResident /;"	d
glArrayElement	deps/glad/gl.h	/^#define glArrayElement /;"	d
glAttachShader	deps/glad/gl.h	/^#define glAttachShader /;"	d
glBegin	deps/glad/gl.h	/^#define glBegin /;"	d
glBeginConditionalRender	deps/glad/gl.h	/^#define glBeginConditionalRender /;"	d
glBeginQuery	deps/glad/gl.h	/^#define glBeginQuery /;"	d
glBeginTransformFeedback	deps/glad/gl.h	/^#define glBeginTransformFeedback /;"	d
glBindAttribLocation	deps/glad/gl.h	/^#define glBindAttribLocation /;"	d
glBindBuffer	deps/glad/gl.h	/^#define glBindBuffer /;"	d
glBindBufferBase	deps/glad/gl.h	/^#define glBindBufferBase /;"	d
glBindBufferRange	deps/glad/gl.h	/^#define glBindBufferRange /;"	d
glBindFragDataLocation	deps/glad/gl.h	/^#define glBindFragDataLocation /;"	d
glBindFragDataLocationIndexed	deps/glad/gl.h	/^#define glBindFragDataLocationIndexed /;"	d
glBindFramebuffer	deps/glad/gl.h	/^#define glBindFramebuffer /;"	d
glBindRenderbuffer	deps/glad/gl.h	/^#define glBindRenderbuffer /;"	d
glBindSampler	deps/glad/gl.h	/^#define glBindSampler /;"	d
glBindTexture	deps/glad/gl.h	/^#define glBindTexture /;"	d
glBindVertexArray	deps/glad/gl.h	/^#define glBindVertexArray /;"	d
glBitmap	deps/glad/gl.h	/^#define glBitmap /;"	d
glBlendColor	deps/glad/gl.h	/^#define glBlendColor /;"	d
glBlendEquation	deps/glad/gl.h	/^#define glBlendEquation /;"	d
glBlendEquationSeparate	deps/glad/gl.h	/^#define glBlendEquationSeparate /;"	d
glBlendFunc	deps/glad/gl.h	/^#define glBlendFunc /;"	d
glBlendFuncSeparate	deps/glad/gl.h	/^#define glBlendFuncSeparate /;"	d
glBlitFramebuffer	deps/glad/gl.h	/^#define glBlitFramebuffer /;"	d
glBufferData	deps/glad/gl.h	/^#define glBufferData /;"	d
glBufferSubData	deps/glad/gl.h	/^#define glBufferSubData /;"	d
glCallList	deps/glad/gl.h	/^#define glCallList /;"	d
glCallLists	deps/glad/gl.h	/^#define glCallLists /;"	d
glCheckFramebufferStatus	deps/glad/gl.h	/^#define glCheckFramebufferStatus /;"	d
glClampColor	deps/glad/gl.h	/^#define glClampColor /;"	d
glClear	deps/glad/gl.h	/^#define glClear /;"	d
glClearAccum	deps/glad/gl.h	/^#define glClearAccum /;"	d
glClearBufferfi	deps/glad/gl.h	/^#define glClearBufferfi /;"	d
glClearBufferfv	deps/glad/gl.h	/^#define glClearBufferfv /;"	d
glClearBufferiv	deps/glad/gl.h	/^#define glClearBufferiv /;"	d
glClearBufferuiv	deps/glad/gl.h	/^#define glClearBufferuiv /;"	d
glClearColor	deps/glad/gl.h	/^#define glClearColor /;"	d
glClearDepth	deps/glad/gl.h	/^#define glClearDepth /;"	d
glClearIndex	deps/glad/gl.h	/^#define glClearIndex /;"	d
glClearStencil	deps/glad/gl.h	/^#define glClearStencil /;"	d
glClientActiveTexture	deps/glad/gl.h	/^#define glClientActiveTexture /;"	d
glClientWaitSync	deps/glad/gl.h	/^#define glClientWaitSync /;"	d
glClipPlane	deps/glad/gl.h	/^#define glClipPlane /;"	d
glColor3b	deps/glad/gl.h	/^#define glColor3b /;"	d
glColor3bv	deps/glad/gl.h	/^#define glColor3bv /;"	d
glColor3d	deps/glad/gl.h	/^#define glColor3d /;"	d
glColor3dv	deps/glad/gl.h	/^#define glColor3dv /;"	d
glColor3f	deps/glad/gl.h	/^#define glColor3f /;"	d
glColor3fv	deps/glad/gl.h	/^#define glColor3fv /;"	d
glColor3i	deps/glad/gl.h	/^#define glColor3i /;"	d
glColor3iv	deps/glad/gl.h	/^#define glColor3iv /;"	d
glColor3s	deps/glad/gl.h	/^#define glColor3s /;"	d
glColor3sv	deps/glad/gl.h	/^#define glColor3sv /;"	d
glColor3ub	deps/glad/gl.h	/^#define glColor3ub /;"	d
glColor3ubv	deps/glad/gl.h	/^#define glColor3ubv /;"	d
glColor3ui	deps/glad/gl.h	/^#define glColor3ui /;"	d
glColor3uiv	deps/glad/gl.h	/^#define glColor3uiv /;"	d
glColor3us	deps/glad/gl.h	/^#define glColor3us /;"	d
glColor3usv	deps/glad/gl.h	/^#define glColor3usv /;"	d
glColor4b	deps/glad/gl.h	/^#define glColor4b /;"	d
glColor4bv	deps/glad/gl.h	/^#define glColor4bv /;"	d
glColor4d	deps/glad/gl.h	/^#define glColor4d /;"	d
glColor4dv	deps/glad/gl.h	/^#define glColor4dv /;"	d
glColor4f	deps/glad/gl.h	/^#define glColor4f /;"	d
glColor4fv	deps/glad/gl.h	/^#define glColor4fv /;"	d
glColor4i	deps/glad/gl.h	/^#define glColor4i /;"	d
glColor4iv	deps/glad/gl.h	/^#define glColor4iv /;"	d
glColor4s	deps/glad/gl.h	/^#define glColor4s /;"	d
glColor4sv	deps/glad/gl.h	/^#define glColor4sv /;"	d
glColor4ub	deps/glad/gl.h	/^#define glColor4ub /;"	d
glColor4ubv	deps/glad/gl.h	/^#define glColor4ubv /;"	d
glColor4ui	deps/glad/gl.h	/^#define glColor4ui /;"	d
glColor4uiv	deps/glad/gl.h	/^#define glColor4uiv /;"	d
glColor4us	deps/glad/gl.h	/^#define glColor4us /;"	d
glColor4usv	deps/glad/gl.h	/^#define glColor4usv /;"	d
glColorMask	deps/glad/gl.h	/^#define glColorMask /;"	d
glColorMaski	deps/glad/gl.h	/^#define glColorMaski /;"	d
glColorMaterial	deps/glad/gl.h	/^#define glColorMaterial /;"	d
glColorP3ui	deps/glad/gl.h	/^#define glColorP3ui /;"	d
glColorP3uiv	deps/glad/gl.h	/^#define glColorP3uiv /;"	d
glColorP4ui	deps/glad/gl.h	/^#define glColorP4ui /;"	d
glColorP4uiv	deps/glad/gl.h	/^#define glColorP4uiv /;"	d
glColorPointer	deps/glad/gl.h	/^#define glColorPointer /;"	d
glCompileShader	deps/glad/gl.h	/^#define glCompileShader /;"	d
glCompressedTexImage1D	deps/glad/gl.h	/^#define glCompressedTexImage1D /;"	d
glCompressedTexImage2D	deps/glad/gl.h	/^#define glCompressedTexImage2D /;"	d
glCompressedTexImage3D	deps/glad/gl.h	/^#define glCompressedTexImage3D /;"	d
glCompressedTexSubImage1D	deps/glad/gl.h	/^#define glCompressedTexSubImage1D /;"	d
glCompressedTexSubImage2D	deps/glad/gl.h	/^#define glCompressedTexSubImage2D /;"	d
glCompressedTexSubImage3D	deps/glad/gl.h	/^#define glCompressedTexSubImage3D /;"	d
glCopyBufferSubData	deps/glad/gl.h	/^#define glCopyBufferSubData /;"	d
glCopyPixels	deps/glad/gl.h	/^#define glCopyPixels /;"	d
glCopyTexImage1D	deps/glad/gl.h	/^#define glCopyTexImage1D /;"	d
glCopyTexImage2D	deps/glad/gl.h	/^#define glCopyTexImage2D /;"	d
glCopyTexSubImage1D	deps/glad/gl.h	/^#define glCopyTexSubImage1D /;"	d
glCopyTexSubImage2D	deps/glad/gl.h	/^#define glCopyTexSubImage2D /;"	d
glCopyTexSubImage3D	deps/glad/gl.h	/^#define glCopyTexSubImage3D /;"	d
glCreateProgram	deps/glad/gl.h	/^#define glCreateProgram /;"	d
glCreateShader	deps/glad/gl.h	/^#define glCreateShader /;"	d
glCullFace	deps/glad/gl.h	/^#define glCullFace /;"	d
glDebugMessageCallback	deps/glad/gl.h	/^#define glDebugMessageCallback /;"	d
glDebugMessageControl	deps/glad/gl.h	/^#define glDebugMessageControl /;"	d
glDebugMessageInsert	deps/glad/gl.h	/^#define glDebugMessageInsert /;"	d
glDeleteBuffers	deps/glad/gl.h	/^#define glDeleteBuffers /;"	d
glDeleteFramebuffers	deps/glad/gl.h	/^#define glDeleteFramebuffers /;"	d
glDeleteLists	deps/glad/gl.h	/^#define glDeleteLists /;"	d
glDeleteProgram	deps/glad/gl.h	/^#define glDeleteProgram /;"	d
glDeleteQueries	deps/glad/gl.h	/^#define glDeleteQueries /;"	d
glDeleteRenderbuffers	deps/glad/gl.h	/^#define glDeleteRenderbuffers /;"	d
glDeleteSamplers	deps/glad/gl.h	/^#define glDeleteSamplers /;"	d
glDeleteShader	deps/glad/gl.h	/^#define glDeleteShader /;"	d
glDeleteSync	deps/glad/gl.h	/^#define glDeleteSync /;"	d
glDeleteTextures	deps/glad/gl.h	/^#define glDeleteTextures /;"	d
glDeleteVertexArrays	deps/glad/gl.h	/^#define glDeleteVertexArrays /;"	d
glDepthFunc	deps/glad/gl.h	/^#define glDepthFunc /;"	d
glDepthMask	deps/glad/gl.h	/^#define glDepthMask /;"	d
glDepthRange	deps/glad/gl.h	/^#define glDepthRange /;"	d
glDetachShader	deps/glad/gl.h	/^#define glDetachShader /;"	d
glDisable	deps/glad/gl.h	/^#define glDisable /;"	d
glDisableClientState	deps/glad/gl.h	/^#define glDisableClientState /;"	d
glDisableVertexAttribArray	deps/glad/gl.h	/^#define glDisableVertexAttribArray /;"	d
glDisablei	deps/glad/gl.h	/^#define glDisablei /;"	d
glDrawArrays	deps/glad/gl.h	/^#define glDrawArrays /;"	d
glDrawArraysInstanced	deps/glad/gl.h	/^#define glDrawArraysInstanced /;"	d
glDrawBuffer	deps/glad/gl.h	/^#define glDrawBuffer /;"	d
glDrawBuffers	deps/glad/gl.h	/^#define glDrawBuffers /;"	d
glDrawElements	deps/glad/gl.h	/^#define glDrawElements /;"	d
glDrawElementsBaseVertex	deps/glad/gl.h	/^#define glDrawElementsBaseVertex /;"	d
glDrawElementsInstanced	deps/glad/gl.h	/^#define glDrawElementsInstanced /;"	d
glDrawElementsInstancedBaseVertex	deps/glad/gl.h	/^#define glDrawElementsInstancedBaseVertex /;"	d
glDrawPixels	deps/glad/gl.h	/^#define glDrawPixels /;"	d
glDrawRangeElements	deps/glad/gl.h	/^#define glDrawRangeElements /;"	d
glDrawRangeElementsBaseVertex	deps/glad/gl.h	/^#define glDrawRangeElementsBaseVertex /;"	d
glEdgeFlag	deps/glad/gl.h	/^#define glEdgeFlag /;"	d
glEdgeFlagPointer	deps/glad/gl.h	/^#define glEdgeFlagPointer /;"	d
glEdgeFlagv	deps/glad/gl.h	/^#define glEdgeFlagv /;"	d
glEnable	deps/glad/gl.h	/^#define glEnable /;"	d
glEnableClientState	deps/glad/gl.h	/^#define glEnableClientState /;"	d
glEnableVertexAttribArray	deps/glad/gl.h	/^#define glEnableVertexAttribArray /;"	d
glEnablei	deps/glad/gl.h	/^#define glEnablei /;"	d
glEnd	deps/glad/gl.h	/^#define glEnd /;"	d
glEndConditionalRender	deps/glad/gl.h	/^#define glEndConditionalRender /;"	d
glEndList	deps/glad/gl.h	/^#define glEndList /;"	d
glEndQuery	deps/glad/gl.h	/^#define glEndQuery /;"	d
glEndTransformFeedback	deps/glad/gl.h	/^#define glEndTransformFeedback /;"	d
glEvalCoord1d	deps/glad/gl.h	/^#define glEvalCoord1d /;"	d
glEvalCoord1dv	deps/glad/gl.h	/^#define glEvalCoord1dv /;"	d
glEvalCoord1f	deps/glad/gl.h	/^#define glEvalCoord1f /;"	d
glEvalCoord1fv	deps/glad/gl.h	/^#define glEvalCoord1fv /;"	d
glEvalCoord2d	deps/glad/gl.h	/^#define glEvalCoord2d /;"	d
glEvalCoord2dv	deps/glad/gl.h	/^#define glEvalCoord2dv /;"	d
glEvalCoord2f	deps/glad/gl.h	/^#define glEvalCoord2f /;"	d
glEvalCoord2fv	deps/glad/gl.h	/^#define glEvalCoord2fv /;"	d
glEvalMesh1	deps/glad/gl.h	/^#define glEvalMesh1 /;"	d
glEvalMesh2	deps/glad/gl.h	/^#define glEvalMesh2 /;"	d
glEvalPoint1	deps/glad/gl.h	/^#define glEvalPoint1 /;"	d
glEvalPoint2	deps/glad/gl.h	/^#define glEvalPoint2 /;"	d
glFeedbackBuffer	deps/glad/gl.h	/^#define glFeedbackBuffer /;"	d
glFenceSync	deps/glad/gl.h	/^#define glFenceSync /;"	d
glFinish	deps/glad/gl.h	/^#define glFinish /;"	d
glFlush	deps/glad/gl.h	/^#define glFlush /;"	d
glFlushMappedBufferRange	deps/glad/gl.h	/^#define glFlushMappedBufferRange /;"	d
glFogCoordPointer	deps/glad/gl.h	/^#define glFogCoordPointer /;"	d
glFogCoordd	deps/glad/gl.h	/^#define glFogCoordd /;"	d
glFogCoorddv	deps/glad/gl.h	/^#define glFogCoorddv /;"	d
glFogCoordf	deps/glad/gl.h	/^#define glFogCoordf /;"	d
glFogCoordfv	deps/glad/gl.h	/^#define glFogCoordfv /;"	d
glFogf	deps/glad/gl.h	/^#define glFogf /;"	d
glFogfv	deps/glad/gl.h	/^#define glFogfv /;"	d
glFogi	deps/glad/gl.h	/^#define glFogi /;"	d
glFogiv	deps/glad/gl.h	/^#define glFogiv /;"	d
glFramebufferRenderbuffer	deps/glad/gl.h	/^#define glFramebufferRenderbuffer /;"	d
glFramebufferTexture	deps/glad/gl.h	/^#define glFramebufferTexture /;"	d
glFramebufferTexture1D	deps/glad/gl.h	/^#define glFramebufferTexture1D /;"	d
glFramebufferTexture2D	deps/glad/gl.h	/^#define glFramebufferTexture2D /;"	d
glFramebufferTexture3D	deps/glad/gl.h	/^#define glFramebufferTexture3D /;"	d
glFramebufferTextureLayer	deps/glad/gl.h	/^#define glFramebufferTextureLayer /;"	d
glFrontFace	deps/glad/gl.h	/^#define glFrontFace /;"	d
glFrustum	deps/glad/gl.h	/^#define glFrustum /;"	d
glGenBuffers	deps/glad/gl.h	/^#define glGenBuffers /;"	d
glGenFramebuffers	deps/glad/gl.h	/^#define glGenFramebuffers /;"	d
glGenLists	deps/glad/gl.h	/^#define glGenLists /;"	d
glGenQueries	deps/glad/gl.h	/^#define glGenQueries /;"	d
glGenRenderbuffers	deps/glad/gl.h	/^#define glGenRenderbuffers /;"	d
glGenSamplers	deps/glad/gl.h	/^#define glGenSamplers /;"	d
glGenTextures	deps/glad/gl.h	/^#define glGenTextures /;"	d
glGenVertexArrays	deps/glad/gl.h	/^#define glGenVertexArrays /;"	d
glGenerateMipmap	deps/glad/gl.h	/^#define glGenerateMipmap /;"	d
glGetActiveAttrib	deps/glad/gl.h	/^#define glGetActiveAttrib /;"	d
glGetActiveUniform	deps/glad/gl.h	/^#define glGetActiveUniform /;"	d
glGetActiveUniformBlockName	deps/glad/gl.h	/^#define glGetActiveUniformBlockName /;"	d
glGetActiveUniformBlockiv	deps/glad/gl.h	/^#define glGetActiveUniformBlockiv /;"	d
glGetActiveUniformName	deps/glad/gl.h	/^#define glGetActiveUniformName /;"	d
glGetActiveUniformsiv	deps/glad/gl.h	/^#define glGetActiveUniformsiv /;"	d
glGetAttachedShaders	deps/glad/gl.h	/^#define glGetAttachedShaders /;"	d
glGetAttribLocation	deps/glad/gl.h	/^#define glGetAttribLocation /;"	d
glGetBooleani_v	deps/glad/gl.h	/^#define glGetBooleani_v /;"	d
glGetBooleanv	deps/glad/gl.h	/^#define glGetBooleanv /;"	d
glGetBufferParameteri64v	deps/glad/gl.h	/^#define glGetBufferParameteri64v /;"	d
glGetBufferParameteriv	deps/glad/gl.h	/^#define glGetBufferParameteriv /;"	d
glGetBufferPointerv	deps/glad/gl.h	/^#define glGetBufferPointerv /;"	d
glGetBufferSubData	deps/glad/gl.h	/^#define glGetBufferSubData /;"	d
glGetClipPlane	deps/glad/gl.h	/^#define glGetClipPlane /;"	d
glGetCompressedTexImage	deps/glad/gl.h	/^#define glGetCompressedTexImage /;"	d
glGetDebugMessageLog	deps/glad/gl.h	/^#define glGetDebugMessageLog /;"	d
glGetDoublev	deps/glad/gl.h	/^#define glGetDoublev /;"	d
glGetError	deps/glad/gl.h	/^#define glGetError /;"	d
glGetFloatv	deps/glad/gl.h	/^#define glGetFloatv /;"	d
glGetFragDataIndex	deps/glad/gl.h	/^#define glGetFragDataIndex /;"	d
glGetFragDataLocation	deps/glad/gl.h	/^#define glGetFragDataLocation /;"	d
glGetFramebufferAttachmentParameteriv	deps/glad/gl.h	/^#define glGetFramebufferAttachmentParameteriv /;"	d
glGetGraphicsResetStatusARB	deps/glad/gl.h	/^#define glGetGraphicsResetStatusARB /;"	d
glGetInteger64i_v	deps/glad/gl.h	/^#define glGetInteger64i_v /;"	d
glGetInteger64v	deps/glad/gl.h	/^#define glGetInteger64v /;"	d
glGetIntegeri_v	deps/glad/gl.h	/^#define glGetIntegeri_v /;"	d
glGetIntegerv	deps/glad/gl.h	/^#define glGetIntegerv /;"	d
glGetLightfv	deps/glad/gl.h	/^#define glGetLightfv /;"	d
glGetLightiv	deps/glad/gl.h	/^#define glGetLightiv /;"	d
glGetMapdv	deps/glad/gl.h	/^#define glGetMapdv /;"	d
glGetMapfv	deps/glad/gl.h	/^#define glGetMapfv /;"	d
glGetMapiv	deps/glad/gl.h	/^#define glGetMapiv /;"	d
glGetMaterialfv	deps/glad/gl.h	/^#define glGetMaterialfv /;"	d
glGetMaterialiv	deps/glad/gl.h	/^#define glGetMaterialiv /;"	d
glGetMultisamplefv	deps/glad/gl.h	/^#define glGetMultisamplefv /;"	d
glGetObjectLabel	deps/glad/gl.h	/^#define glGetObjectLabel /;"	d
glGetObjectPtrLabel	deps/glad/gl.h	/^#define glGetObjectPtrLabel /;"	d
glGetPixelMapfv	deps/glad/gl.h	/^#define glGetPixelMapfv /;"	d
glGetPixelMapuiv	deps/glad/gl.h	/^#define glGetPixelMapuiv /;"	d
glGetPixelMapusv	deps/glad/gl.h	/^#define glGetPixelMapusv /;"	d
glGetPointerv	deps/glad/gl.h	/^#define glGetPointerv /;"	d
glGetPolygonStipple	deps/glad/gl.h	/^#define glGetPolygonStipple /;"	d
glGetProgramInfoLog	deps/glad/gl.h	/^#define glGetProgramInfoLog /;"	d
glGetProgramiv	deps/glad/gl.h	/^#define glGetProgramiv /;"	d
glGetQueryObjecti64v	deps/glad/gl.h	/^#define glGetQueryObjecti64v /;"	d
glGetQueryObjectiv	deps/glad/gl.h	/^#define glGetQueryObjectiv /;"	d
glGetQueryObjectui64v	deps/glad/gl.h	/^#define glGetQueryObjectui64v /;"	d
glGetQueryObjectuiv	deps/glad/gl.h	/^#define glGetQueryObjectuiv /;"	d
glGetQueryiv	deps/glad/gl.h	/^#define glGetQueryiv /;"	d
glGetRenderbufferParameteriv	deps/glad/gl.h	/^#define glGetRenderbufferParameteriv /;"	d
glGetSamplerParameterIiv	deps/glad/gl.h	/^#define glGetSamplerParameterIiv /;"	d
glGetSamplerParameterIuiv	deps/glad/gl.h	/^#define glGetSamplerParameterIuiv /;"	d
glGetSamplerParameterfv	deps/glad/gl.h	/^#define glGetSamplerParameterfv /;"	d
glGetSamplerParameteriv	deps/glad/gl.h	/^#define glGetSamplerParameteriv /;"	d
glGetShaderInfoLog	deps/glad/gl.h	/^#define glGetShaderInfoLog /;"	d
glGetShaderSource	deps/glad/gl.h	/^#define glGetShaderSource /;"	d
glGetShaderiv	deps/glad/gl.h	/^#define glGetShaderiv /;"	d
glGetString	deps/glad/gl.h	/^#define glGetString /;"	d
glGetStringi	deps/glad/gl.h	/^#define glGetStringi /;"	d
glGetSynciv	deps/glad/gl.h	/^#define glGetSynciv /;"	d
glGetTexEnvfv	deps/glad/gl.h	/^#define glGetTexEnvfv /;"	d
glGetTexEnviv	deps/glad/gl.h	/^#define glGetTexEnviv /;"	d
glGetTexGendv	deps/glad/gl.h	/^#define glGetTexGendv /;"	d
glGetTexGenfv	deps/glad/gl.h	/^#define glGetTexGenfv /;"	d
glGetTexGeniv	deps/glad/gl.h	/^#define glGetTexGeniv /;"	d
glGetTexImage	deps/glad/gl.h	/^#define glGetTexImage /;"	d
glGetTexLevelParameterfv	deps/glad/gl.h	/^#define glGetTexLevelParameterfv /;"	d
glGetTexLevelParameteriv	deps/glad/gl.h	/^#define glGetTexLevelParameteriv /;"	d
glGetTexParameterIiv	deps/glad/gl.h	/^#define glGetTexParameterIiv /;"	d
glGetTexParameterIuiv	deps/glad/gl.h	/^#define glGetTexParameterIuiv /;"	d
glGetTexParameterfv	deps/glad/gl.h	/^#define glGetTexParameterfv /;"	d
glGetTexParameteriv	deps/glad/gl.h	/^#define glGetTexParameteriv /;"	d
glGetTransformFeedbackVarying	deps/glad/gl.h	/^#define glGetTransformFeedbackVarying /;"	d
glGetUniformBlockIndex	deps/glad/gl.h	/^#define glGetUniformBlockIndex /;"	d
glGetUniformIndices	deps/glad/gl.h	/^#define glGetUniformIndices /;"	d
glGetUniformLocation	deps/glad/gl.h	/^#define glGetUniformLocation /;"	d
glGetUniformfv	deps/glad/gl.h	/^#define glGetUniformfv /;"	d
glGetUniformiv	deps/glad/gl.h	/^#define glGetUniformiv /;"	d
glGetUniformuiv	deps/glad/gl.h	/^#define glGetUniformuiv /;"	d
glGetVertexAttribIiv	deps/glad/gl.h	/^#define glGetVertexAttribIiv /;"	d
glGetVertexAttribIuiv	deps/glad/gl.h	/^#define glGetVertexAttribIuiv /;"	d
glGetVertexAttribPointerv	deps/glad/gl.h	/^#define glGetVertexAttribPointerv /;"	d
glGetVertexAttribdv	deps/glad/gl.h	/^#define glGetVertexAttribdv /;"	d
glGetVertexAttribfv	deps/glad/gl.h	/^#define glGetVertexAttribfv /;"	d
glGetVertexAttribiv	deps/glad/gl.h	/^#define glGetVertexAttribiv /;"	d
glGetnColorTableARB	deps/glad/gl.h	/^#define glGetnColorTableARB /;"	d
glGetnCompressedTexImageARB	deps/glad/gl.h	/^#define glGetnCompressedTexImageARB /;"	d
glGetnConvolutionFilterARB	deps/glad/gl.h	/^#define glGetnConvolutionFilterARB /;"	d
glGetnHistogramARB	deps/glad/gl.h	/^#define glGetnHistogramARB /;"	d
glGetnMapdvARB	deps/glad/gl.h	/^#define glGetnMapdvARB /;"	d
glGetnMapfvARB	deps/glad/gl.h	/^#define glGetnMapfvARB /;"	d
glGetnMapivARB	deps/glad/gl.h	/^#define glGetnMapivARB /;"	d
glGetnMinmaxARB	deps/glad/gl.h	/^#define glGetnMinmaxARB /;"	d
glGetnPixelMapfvARB	deps/glad/gl.h	/^#define glGetnPixelMapfvARB /;"	d
glGetnPixelMapuivARB	deps/glad/gl.h	/^#define glGetnPixelMapuivARB /;"	d
glGetnPixelMapusvARB	deps/glad/gl.h	/^#define glGetnPixelMapusvARB /;"	d
glGetnPolygonStippleARB	deps/glad/gl.h	/^#define glGetnPolygonStippleARB /;"	d
glGetnSeparableFilterARB	deps/glad/gl.h	/^#define glGetnSeparableFilterARB /;"	d
glGetnTexImageARB	deps/glad/gl.h	/^#define glGetnTexImageARB /;"	d
glGetnUniformdvARB	deps/glad/gl.h	/^#define glGetnUniformdvARB /;"	d
glGetnUniformfvARB	deps/glad/gl.h	/^#define glGetnUniformfvARB /;"	d
glGetnUniformivARB	deps/glad/gl.h	/^#define glGetnUniformivARB /;"	d
glGetnUniformuivARB	deps/glad/gl.h	/^#define glGetnUniformuivARB /;"	d
glHint	deps/glad/gl.h	/^#define glHint /;"	d
glIndexMask	deps/glad/gl.h	/^#define glIndexMask /;"	d
glIndexPointer	deps/glad/gl.h	/^#define glIndexPointer /;"	d
glIndexd	deps/glad/gl.h	/^#define glIndexd /;"	d
glIndexdv	deps/glad/gl.h	/^#define glIndexdv /;"	d
glIndexf	deps/glad/gl.h	/^#define glIndexf /;"	d
glIndexfv	deps/glad/gl.h	/^#define glIndexfv /;"	d
glIndexi	deps/glad/gl.h	/^#define glIndexi /;"	d
glIndexiv	deps/glad/gl.h	/^#define glIndexiv /;"	d
glIndexs	deps/glad/gl.h	/^#define glIndexs /;"	d
glIndexsv	deps/glad/gl.h	/^#define glIndexsv /;"	d
glIndexub	deps/glad/gl.h	/^#define glIndexub /;"	d
glIndexubv	deps/glad/gl.h	/^#define glIndexubv /;"	d
glInitNames	deps/glad/gl.h	/^#define glInitNames /;"	d
glInterleavedArrays	deps/glad/gl.h	/^#define glInterleavedArrays /;"	d
glIsBuffer	deps/glad/gl.h	/^#define glIsBuffer /;"	d
glIsEnabled	deps/glad/gl.h	/^#define glIsEnabled /;"	d
glIsEnabledi	deps/glad/gl.h	/^#define glIsEnabledi /;"	d
glIsFramebuffer	deps/glad/gl.h	/^#define glIsFramebuffer /;"	d
glIsList	deps/glad/gl.h	/^#define glIsList /;"	d
glIsProgram	deps/glad/gl.h	/^#define glIsProgram /;"	d
glIsQuery	deps/glad/gl.h	/^#define glIsQuery /;"	d
glIsRenderbuffer	deps/glad/gl.h	/^#define glIsRenderbuffer /;"	d
glIsSampler	deps/glad/gl.h	/^#define glIsSampler /;"	d
glIsShader	deps/glad/gl.h	/^#define glIsShader /;"	d
glIsSync	deps/glad/gl.h	/^#define glIsSync /;"	d
glIsTexture	deps/glad/gl.h	/^#define glIsTexture /;"	d
glIsVertexArray	deps/glad/gl.h	/^#define glIsVertexArray /;"	d
glLightModelf	deps/glad/gl.h	/^#define glLightModelf /;"	d
glLightModelfv	deps/glad/gl.h	/^#define glLightModelfv /;"	d
glLightModeli	deps/glad/gl.h	/^#define glLightModeli /;"	d
glLightModeliv	deps/glad/gl.h	/^#define glLightModeliv /;"	d
glLightf	deps/glad/gl.h	/^#define glLightf /;"	d
glLightfv	deps/glad/gl.h	/^#define glLightfv /;"	d
glLighti	deps/glad/gl.h	/^#define glLighti /;"	d
glLightiv	deps/glad/gl.h	/^#define glLightiv /;"	d
glLineStipple	deps/glad/gl.h	/^#define glLineStipple /;"	d
glLineWidth	deps/glad/gl.h	/^#define glLineWidth /;"	d
glLinkProgram	deps/glad/gl.h	/^#define glLinkProgram /;"	d
glListBase	deps/glad/gl.h	/^#define glListBase /;"	d
glLoadIdentity	deps/glad/gl.h	/^#define glLoadIdentity /;"	d
glLoadMatrixd	deps/glad/gl.h	/^#define glLoadMatrixd /;"	d
glLoadMatrixf	deps/glad/gl.h	/^#define glLoadMatrixf /;"	d
glLoadName	deps/glad/gl.h	/^#define glLoadName /;"	d
glLoadTransposeMatrixd	deps/glad/gl.h	/^#define glLoadTransposeMatrixd /;"	d
glLoadTransposeMatrixf	deps/glad/gl.h	/^#define glLoadTransposeMatrixf /;"	d
glLogicOp	deps/glad/gl.h	/^#define glLogicOp /;"	d
glMap1d	deps/glad/gl.h	/^#define glMap1d /;"	d
glMap1f	deps/glad/gl.h	/^#define glMap1f /;"	d
glMap2d	deps/glad/gl.h	/^#define glMap2d /;"	d
glMap2f	deps/glad/gl.h	/^#define glMap2f /;"	d
glMapBuffer	deps/glad/gl.h	/^#define glMapBuffer /;"	d
glMapBufferRange	deps/glad/gl.h	/^#define glMapBufferRange /;"	d
glMapGrid1d	deps/glad/gl.h	/^#define glMapGrid1d /;"	d
glMapGrid1f	deps/glad/gl.h	/^#define glMapGrid1f /;"	d
glMapGrid2d	deps/glad/gl.h	/^#define glMapGrid2d /;"	d
glMapGrid2f	deps/glad/gl.h	/^#define glMapGrid2f /;"	d
glMaterialf	deps/glad/gl.h	/^#define glMaterialf /;"	d
glMaterialfv	deps/glad/gl.h	/^#define glMaterialfv /;"	d
glMateriali	deps/glad/gl.h	/^#define glMateriali /;"	d
glMaterialiv	deps/glad/gl.h	/^#define glMaterialiv /;"	d
glMatrixMode	deps/glad/gl.h	/^#define glMatrixMode /;"	d
glMultMatrixd	deps/glad/gl.h	/^#define glMultMatrixd /;"	d
glMultMatrixf	deps/glad/gl.h	/^#define glMultMatrixf /;"	d
glMultTransposeMatrixd	deps/glad/gl.h	/^#define glMultTransposeMatrixd /;"	d
glMultTransposeMatrixf	deps/glad/gl.h	/^#define glMultTransposeMatrixf /;"	d
glMultiDrawArrays	deps/glad/gl.h	/^#define glMultiDrawArrays /;"	d
glMultiDrawElements	deps/glad/gl.h	/^#define glMultiDrawElements /;"	d
glMultiDrawElementsBaseVertex	deps/glad/gl.h	/^#define glMultiDrawElementsBaseVertex /;"	d
glMultiTexCoord1d	deps/glad/gl.h	/^#define glMultiTexCoord1d /;"	d
glMultiTexCoord1dv	deps/glad/gl.h	/^#define glMultiTexCoord1dv /;"	d
glMultiTexCoord1f	deps/glad/gl.h	/^#define glMultiTexCoord1f /;"	d
glMultiTexCoord1fv	deps/glad/gl.h	/^#define glMultiTexCoord1fv /;"	d
glMultiTexCoord1i	deps/glad/gl.h	/^#define glMultiTexCoord1i /;"	d
glMultiTexCoord1iv	deps/glad/gl.h	/^#define glMultiTexCoord1iv /;"	d
glMultiTexCoord1s	deps/glad/gl.h	/^#define glMultiTexCoord1s /;"	d
glMultiTexCoord1sv	deps/glad/gl.h	/^#define glMultiTexCoord1sv /;"	d
glMultiTexCoord2d	deps/glad/gl.h	/^#define glMultiTexCoord2d /;"	d
glMultiTexCoord2dv	deps/glad/gl.h	/^#define glMultiTexCoord2dv /;"	d
glMultiTexCoord2f	deps/glad/gl.h	/^#define glMultiTexCoord2f /;"	d
glMultiTexCoord2fv	deps/glad/gl.h	/^#define glMultiTexCoord2fv /;"	d
glMultiTexCoord2i	deps/glad/gl.h	/^#define glMultiTexCoord2i /;"	d
glMultiTexCoord2iv	deps/glad/gl.h	/^#define glMultiTexCoord2iv /;"	d
glMultiTexCoord2s	deps/glad/gl.h	/^#define glMultiTexCoord2s /;"	d
glMultiTexCoord2sv	deps/glad/gl.h	/^#define glMultiTexCoord2sv /;"	d
glMultiTexCoord3d	deps/glad/gl.h	/^#define glMultiTexCoord3d /;"	d
glMultiTexCoord3dv	deps/glad/gl.h	/^#define glMultiTexCoord3dv /;"	d
glMultiTexCoord3f	deps/glad/gl.h	/^#define glMultiTexCoord3f /;"	d
glMultiTexCoord3fv	deps/glad/gl.h	/^#define glMultiTexCoord3fv /;"	d
glMultiTexCoord3i	deps/glad/gl.h	/^#define glMultiTexCoord3i /;"	d
glMultiTexCoord3iv	deps/glad/gl.h	/^#define glMultiTexCoord3iv /;"	d
glMultiTexCoord3s	deps/glad/gl.h	/^#define glMultiTexCoord3s /;"	d
glMultiTexCoord3sv	deps/glad/gl.h	/^#define glMultiTexCoord3sv /;"	d
glMultiTexCoord4d	deps/glad/gl.h	/^#define glMultiTexCoord4d /;"	d
glMultiTexCoord4dv	deps/glad/gl.h	/^#define glMultiTexCoord4dv /;"	d
glMultiTexCoord4f	deps/glad/gl.h	/^#define glMultiTexCoord4f /;"	d
glMultiTexCoord4fv	deps/glad/gl.h	/^#define glMultiTexCoord4fv /;"	d
glMultiTexCoord4i	deps/glad/gl.h	/^#define glMultiTexCoord4i /;"	d
glMultiTexCoord4iv	deps/glad/gl.h	/^#define glMultiTexCoord4iv /;"	d
glMultiTexCoord4s	deps/glad/gl.h	/^#define glMultiTexCoord4s /;"	d
glMultiTexCoord4sv	deps/glad/gl.h	/^#define glMultiTexCoord4sv /;"	d
glMultiTexCoordP1ui	deps/glad/gl.h	/^#define glMultiTexCoordP1ui /;"	d
glMultiTexCoordP1uiv	deps/glad/gl.h	/^#define glMultiTexCoordP1uiv /;"	d
glMultiTexCoordP2ui	deps/glad/gl.h	/^#define glMultiTexCoordP2ui /;"	d
glMultiTexCoordP2uiv	deps/glad/gl.h	/^#define glMultiTexCoordP2uiv /;"	d
glMultiTexCoordP3ui	deps/glad/gl.h	/^#define glMultiTexCoordP3ui /;"	d
glMultiTexCoordP3uiv	deps/glad/gl.h	/^#define glMultiTexCoordP3uiv /;"	d
glMultiTexCoordP4ui	deps/glad/gl.h	/^#define glMultiTexCoordP4ui /;"	d
glMultiTexCoordP4uiv	deps/glad/gl.h	/^#define glMultiTexCoordP4uiv /;"	d
glNewList	deps/glad/gl.h	/^#define glNewList /;"	d
glNormal3b	deps/glad/gl.h	/^#define glNormal3b /;"	d
glNormal3bv	deps/glad/gl.h	/^#define glNormal3bv /;"	d
glNormal3d	deps/glad/gl.h	/^#define glNormal3d /;"	d
glNormal3dv	deps/glad/gl.h	/^#define glNormal3dv /;"	d
glNormal3f	deps/glad/gl.h	/^#define glNormal3f /;"	d
glNormal3fv	deps/glad/gl.h	/^#define glNormal3fv /;"	d
glNormal3i	deps/glad/gl.h	/^#define glNormal3i /;"	d
glNormal3iv	deps/glad/gl.h	/^#define glNormal3iv /;"	d
glNormal3s	deps/glad/gl.h	/^#define glNormal3s /;"	d
glNormal3sv	deps/glad/gl.h	/^#define glNormal3sv /;"	d
glNormalP3ui	deps/glad/gl.h	/^#define glNormalP3ui /;"	d
glNormalP3uiv	deps/glad/gl.h	/^#define glNormalP3uiv /;"	d
glNormalPointer	deps/glad/gl.h	/^#define glNormalPointer /;"	d
glObjectLabel	deps/glad/gl.h	/^#define glObjectLabel /;"	d
glObjectPtrLabel	deps/glad/gl.h	/^#define glObjectPtrLabel /;"	d
glOrtho	deps/glad/gl.h	/^#define glOrtho /;"	d
glPassThrough	deps/glad/gl.h	/^#define glPassThrough /;"	d
glPixelMapfv	deps/glad/gl.h	/^#define glPixelMapfv /;"	d
glPixelMapuiv	deps/glad/gl.h	/^#define glPixelMapuiv /;"	d
glPixelMapusv	deps/glad/gl.h	/^#define glPixelMapusv /;"	d
glPixelStoref	deps/glad/gl.h	/^#define glPixelStoref /;"	d
glPixelStorei	deps/glad/gl.h	/^#define glPixelStorei /;"	d
glPixelTransferf	deps/glad/gl.h	/^#define glPixelTransferf /;"	d
glPixelTransferi	deps/glad/gl.h	/^#define glPixelTransferi /;"	d
glPixelZoom	deps/glad/gl.h	/^#define glPixelZoom /;"	d
glPointParameterf	deps/glad/gl.h	/^#define glPointParameterf /;"	d
glPointParameterfv	deps/glad/gl.h	/^#define glPointParameterfv /;"	d
glPointParameteri	deps/glad/gl.h	/^#define glPointParameteri /;"	d
glPointParameteriv	deps/glad/gl.h	/^#define glPointParameteriv /;"	d
glPointSize	deps/glad/gl.h	/^#define glPointSize /;"	d
glPolygonMode	deps/glad/gl.h	/^#define glPolygonMode /;"	d
glPolygonOffset	deps/glad/gl.h	/^#define glPolygonOffset /;"	d
glPolygonStipple	deps/glad/gl.h	/^#define glPolygonStipple /;"	d
glPopAttrib	deps/glad/gl.h	/^#define glPopAttrib /;"	d
glPopClientAttrib	deps/glad/gl.h	/^#define glPopClientAttrib /;"	d
glPopDebugGroup	deps/glad/gl.h	/^#define glPopDebugGroup /;"	d
glPopMatrix	deps/glad/gl.h	/^#define glPopMatrix /;"	d
glPopName	deps/glad/gl.h	/^#define glPopName /;"	d
glPrimitiveRestartIndex	deps/glad/gl.h	/^#define glPrimitiveRestartIndex /;"	d
glPrioritizeTextures	deps/glad/gl.h	/^#define glPrioritizeTextures /;"	d
glProvokingVertex	deps/glad/gl.h	/^#define glProvokingVertex /;"	d
glPushAttrib	deps/glad/gl.h	/^#define glPushAttrib /;"	d
glPushClientAttrib	deps/glad/gl.h	/^#define glPushClientAttrib /;"	d
glPushDebugGroup	deps/glad/gl.h	/^#define glPushDebugGroup /;"	d
glPushMatrix	deps/glad/gl.h	/^#define glPushMatrix /;"	d
glPushName	deps/glad/gl.h	/^#define glPushName /;"	d
glQueryCounter	deps/glad/gl.h	/^#define glQueryCounter /;"	d
glRasterPos2d	deps/glad/gl.h	/^#define glRasterPos2d /;"	d
glRasterPos2dv	deps/glad/gl.h	/^#define glRasterPos2dv /;"	d
glRasterPos2f	deps/glad/gl.h	/^#define glRasterPos2f /;"	d
glRasterPos2fv	deps/glad/gl.h	/^#define glRasterPos2fv /;"	d
glRasterPos2i	deps/glad/gl.h	/^#define glRasterPos2i /;"	d
glRasterPos2iv	deps/glad/gl.h	/^#define glRasterPos2iv /;"	d
glRasterPos2s	deps/glad/gl.h	/^#define glRasterPos2s /;"	d
glRasterPos2sv	deps/glad/gl.h	/^#define glRasterPos2sv /;"	d
glRasterPos3d	deps/glad/gl.h	/^#define glRasterPos3d /;"	d
glRasterPos3dv	deps/glad/gl.h	/^#define glRasterPos3dv /;"	d
glRasterPos3f	deps/glad/gl.h	/^#define glRasterPos3f /;"	d
glRasterPos3fv	deps/glad/gl.h	/^#define glRasterPos3fv /;"	d
glRasterPos3i	deps/glad/gl.h	/^#define glRasterPos3i /;"	d
glRasterPos3iv	deps/glad/gl.h	/^#define glRasterPos3iv /;"	d
glRasterPos3s	deps/glad/gl.h	/^#define glRasterPos3s /;"	d
glRasterPos3sv	deps/glad/gl.h	/^#define glRasterPos3sv /;"	d
glRasterPos4d	deps/glad/gl.h	/^#define glRasterPos4d /;"	d
glRasterPos4dv	deps/glad/gl.h	/^#define glRasterPos4dv /;"	d
glRasterPos4f	deps/glad/gl.h	/^#define glRasterPos4f /;"	d
glRasterPos4fv	deps/glad/gl.h	/^#define glRasterPos4fv /;"	d
glRasterPos4i	deps/glad/gl.h	/^#define glRasterPos4i /;"	d
glRasterPos4iv	deps/glad/gl.h	/^#define glRasterPos4iv /;"	d
glRasterPos4s	deps/glad/gl.h	/^#define glRasterPos4s /;"	d
glRasterPos4sv	deps/glad/gl.h	/^#define glRasterPos4sv /;"	d
glReadBuffer	deps/glad/gl.h	/^#define glReadBuffer /;"	d
glReadPixels	deps/glad/gl.h	/^#define glReadPixels /;"	d
glReadnPixels	deps/glad/gl.h	/^#define glReadnPixels /;"	d
glReadnPixelsARB	deps/glad/gl.h	/^#define glReadnPixelsARB /;"	d
glRectd	deps/glad/gl.h	/^#define glRectd /;"	d
glRectdv	deps/glad/gl.h	/^#define glRectdv /;"	d
glRectf	deps/glad/gl.h	/^#define glRectf /;"	d
glRectfv	deps/glad/gl.h	/^#define glRectfv /;"	d
glRecti	deps/glad/gl.h	/^#define glRecti /;"	d
glRectiv	deps/glad/gl.h	/^#define glRectiv /;"	d
glRects	deps/glad/gl.h	/^#define glRects /;"	d
glRectsv	deps/glad/gl.h	/^#define glRectsv /;"	d
glRenderMode	deps/glad/gl.h	/^#define glRenderMode /;"	d
glRenderbufferStorage	deps/glad/gl.h	/^#define glRenderbufferStorage /;"	d
glRenderbufferStorageMultisample	deps/glad/gl.h	/^#define glRenderbufferStorageMultisample /;"	d
glRotated	deps/glad/gl.h	/^#define glRotated /;"	d
glRotatef	deps/glad/gl.h	/^#define glRotatef /;"	d
glSampleCoverage	deps/glad/gl.h	/^#define glSampleCoverage /;"	d
glSampleCoverageARB	deps/glad/gl.h	/^#define glSampleCoverageARB /;"	d
glSampleMaski	deps/glad/gl.h	/^#define glSampleMaski /;"	d
glSamplerParameterIiv	deps/glad/gl.h	/^#define glSamplerParameterIiv /;"	d
glSamplerParameterIuiv	deps/glad/gl.h	/^#define glSamplerParameterIuiv /;"	d
glSamplerParameterf	deps/glad/gl.h	/^#define glSamplerParameterf /;"	d
glSamplerParameterfv	deps/glad/gl.h	/^#define glSamplerParameterfv /;"	d
glSamplerParameteri	deps/glad/gl.h	/^#define glSamplerParameteri /;"	d
glSamplerParameteriv	deps/glad/gl.h	/^#define glSamplerParameteriv /;"	d
glScaled	deps/glad/gl.h	/^#define glScaled /;"	d
glScalef	deps/glad/gl.h	/^#define glScalef /;"	d
glScissor	deps/glad/gl.h	/^#define glScissor /;"	d
glSecondaryColor3b	deps/glad/gl.h	/^#define glSecondaryColor3b /;"	d
glSecondaryColor3bv	deps/glad/gl.h	/^#define glSecondaryColor3bv /;"	d
glSecondaryColor3d	deps/glad/gl.h	/^#define glSecondaryColor3d /;"	d
glSecondaryColor3dv	deps/glad/gl.h	/^#define glSecondaryColor3dv /;"	d
glSecondaryColor3f	deps/glad/gl.h	/^#define glSecondaryColor3f /;"	d
glSecondaryColor3fv	deps/glad/gl.h	/^#define glSecondaryColor3fv /;"	d
glSecondaryColor3i	deps/glad/gl.h	/^#define glSecondaryColor3i /;"	d
glSecondaryColor3iv	deps/glad/gl.h	/^#define glSecondaryColor3iv /;"	d
glSecondaryColor3s	deps/glad/gl.h	/^#define glSecondaryColor3s /;"	d
glSecondaryColor3sv	deps/glad/gl.h	/^#define glSecondaryColor3sv /;"	d
glSecondaryColor3ub	deps/glad/gl.h	/^#define glSecondaryColor3ub /;"	d
glSecondaryColor3ubv	deps/glad/gl.h	/^#define glSecondaryColor3ubv /;"	d
glSecondaryColor3ui	deps/glad/gl.h	/^#define glSecondaryColor3ui /;"	d
glSecondaryColor3uiv	deps/glad/gl.h	/^#define glSecondaryColor3uiv /;"	d
glSecondaryColor3us	deps/glad/gl.h	/^#define glSecondaryColor3us /;"	d
glSecondaryColor3usv	deps/glad/gl.h	/^#define glSecondaryColor3usv /;"	d
glSecondaryColorP3ui	deps/glad/gl.h	/^#define glSecondaryColorP3ui /;"	d
glSecondaryColorP3uiv	deps/glad/gl.h	/^#define glSecondaryColorP3uiv /;"	d
glSecondaryColorPointer	deps/glad/gl.h	/^#define glSecondaryColorPointer /;"	d
glSelectBuffer	deps/glad/gl.h	/^#define glSelectBuffer /;"	d
glShadeModel	deps/glad/gl.h	/^#define glShadeModel /;"	d
glShaderSource	deps/glad/gl.h	/^#define glShaderSource /;"	d
glStencilFunc	deps/glad/gl.h	/^#define glStencilFunc /;"	d
glStencilFuncSeparate	deps/glad/gl.h	/^#define glStencilFuncSeparate /;"	d
glStencilMask	deps/glad/gl.h	/^#define glStencilMask /;"	d
glStencilMaskSeparate	deps/glad/gl.h	/^#define glStencilMaskSeparate /;"	d
glStencilOp	deps/glad/gl.h	/^#define glStencilOp /;"	d
glStencilOpSeparate	deps/glad/gl.h	/^#define glStencilOpSeparate /;"	d
glTexBuffer	deps/glad/gl.h	/^#define glTexBuffer /;"	d
glTexCoord1d	deps/glad/gl.h	/^#define glTexCoord1d /;"	d
glTexCoord1dv	deps/glad/gl.h	/^#define glTexCoord1dv /;"	d
glTexCoord1f	deps/glad/gl.h	/^#define glTexCoord1f /;"	d
glTexCoord1fv	deps/glad/gl.h	/^#define glTexCoord1fv /;"	d
glTexCoord1i	deps/glad/gl.h	/^#define glTexCoord1i /;"	d
glTexCoord1iv	deps/glad/gl.h	/^#define glTexCoord1iv /;"	d
glTexCoord1s	deps/glad/gl.h	/^#define glTexCoord1s /;"	d
glTexCoord1sv	deps/glad/gl.h	/^#define glTexCoord1sv /;"	d
glTexCoord2d	deps/glad/gl.h	/^#define glTexCoord2d /;"	d
glTexCoord2dv	deps/glad/gl.h	/^#define glTexCoord2dv /;"	d
glTexCoord2f	deps/glad/gl.h	/^#define glTexCoord2f /;"	d
glTexCoord2fv	deps/glad/gl.h	/^#define glTexCoord2fv /;"	d
glTexCoord2i	deps/glad/gl.h	/^#define glTexCoord2i /;"	d
glTexCoord2iv	deps/glad/gl.h	/^#define glTexCoord2iv /;"	d
glTexCoord2s	deps/glad/gl.h	/^#define glTexCoord2s /;"	d
glTexCoord2sv	deps/glad/gl.h	/^#define glTexCoord2sv /;"	d
glTexCoord3d	deps/glad/gl.h	/^#define glTexCoord3d /;"	d
glTexCoord3dv	deps/glad/gl.h	/^#define glTexCoord3dv /;"	d
glTexCoord3f	deps/glad/gl.h	/^#define glTexCoord3f /;"	d
glTexCoord3fv	deps/glad/gl.h	/^#define glTexCoord3fv /;"	d
glTexCoord3i	deps/glad/gl.h	/^#define glTexCoord3i /;"	d
glTexCoord3iv	deps/glad/gl.h	/^#define glTexCoord3iv /;"	d
glTexCoord3s	deps/glad/gl.h	/^#define glTexCoord3s /;"	d
glTexCoord3sv	deps/glad/gl.h	/^#define glTexCoord3sv /;"	d
glTexCoord4d	deps/glad/gl.h	/^#define glTexCoord4d /;"	d
glTexCoord4dv	deps/glad/gl.h	/^#define glTexCoord4dv /;"	d
glTexCoord4f	deps/glad/gl.h	/^#define glTexCoord4f /;"	d
glTexCoord4fv	deps/glad/gl.h	/^#define glTexCoord4fv /;"	d
glTexCoord4i	deps/glad/gl.h	/^#define glTexCoord4i /;"	d
glTexCoord4iv	deps/glad/gl.h	/^#define glTexCoord4iv /;"	d
glTexCoord4s	deps/glad/gl.h	/^#define glTexCoord4s /;"	d
glTexCoord4sv	deps/glad/gl.h	/^#define glTexCoord4sv /;"	d
glTexCoordP1ui	deps/glad/gl.h	/^#define glTexCoordP1ui /;"	d
glTexCoordP1uiv	deps/glad/gl.h	/^#define glTexCoordP1uiv /;"	d
glTexCoordP2ui	deps/glad/gl.h	/^#define glTexCoordP2ui /;"	d
glTexCoordP2uiv	deps/glad/gl.h	/^#define glTexCoordP2uiv /;"	d
glTexCoordP3ui	deps/glad/gl.h	/^#define glTexCoordP3ui /;"	d
glTexCoordP3uiv	deps/glad/gl.h	/^#define glTexCoordP3uiv /;"	d
glTexCoordP4ui	deps/glad/gl.h	/^#define glTexCoordP4ui /;"	d
glTexCoordP4uiv	deps/glad/gl.h	/^#define glTexCoordP4uiv /;"	d
glTexCoordPointer	deps/glad/gl.h	/^#define glTexCoordPointer /;"	d
glTexEnvf	deps/glad/gl.h	/^#define glTexEnvf /;"	d
glTexEnvfv	deps/glad/gl.h	/^#define glTexEnvfv /;"	d
glTexEnvi	deps/glad/gl.h	/^#define glTexEnvi /;"	d
glTexEnviv	deps/glad/gl.h	/^#define glTexEnviv /;"	d
glTexGend	deps/glad/gl.h	/^#define glTexGend /;"	d
glTexGendv	deps/glad/gl.h	/^#define glTexGendv /;"	d
glTexGenf	deps/glad/gl.h	/^#define glTexGenf /;"	d
glTexGenfv	deps/glad/gl.h	/^#define glTexGenfv /;"	d
glTexGeni	deps/glad/gl.h	/^#define glTexGeni /;"	d
glTexGeniv	deps/glad/gl.h	/^#define glTexGeniv /;"	d
glTexImage1D	deps/glad/gl.h	/^#define glTexImage1D /;"	d
glTexImage2D	deps/glad/gl.h	/^#define glTexImage2D /;"	d
glTexImage2DMultisample	deps/glad/gl.h	/^#define glTexImage2DMultisample /;"	d
glTexImage3D	deps/glad/gl.h	/^#define glTexImage3D /;"	d
glTexImage3DMultisample	deps/glad/gl.h	/^#define glTexImage3DMultisample /;"	d
glTexParameterIiv	deps/glad/gl.h	/^#define glTexParameterIiv /;"	d
glTexParameterIuiv	deps/glad/gl.h	/^#define glTexParameterIuiv /;"	d
glTexParameterf	deps/glad/gl.h	/^#define glTexParameterf /;"	d
glTexParameterfv	deps/glad/gl.h	/^#define glTexParameterfv /;"	d
glTexParameteri	deps/glad/gl.h	/^#define glTexParameteri /;"	d
glTexParameteriv	deps/glad/gl.h	/^#define glTexParameteriv /;"	d
glTexSubImage1D	deps/glad/gl.h	/^#define glTexSubImage1D /;"	d
glTexSubImage2D	deps/glad/gl.h	/^#define glTexSubImage2D /;"	d
glTexSubImage3D	deps/glad/gl.h	/^#define glTexSubImage3D /;"	d
glTransformFeedbackVaryings	deps/glad/gl.h	/^#define glTransformFeedbackVaryings /;"	d
glTranslated	deps/glad/gl.h	/^#define glTranslated /;"	d
glTranslatef	deps/glad/gl.h	/^#define glTranslatef /;"	d
glUniform1f	deps/glad/gl.h	/^#define glUniform1f /;"	d
glUniform1fv	deps/glad/gl.h	/^#define glUniform1fv /;"	d
glUniform1i	deps/glad/gl.h	/^#define glUniform1i /;"	d
glUniform1iv	deps/glad/gl.h	/^#define glUniform1iv /;"	d
glUniform1ui	deps/glad/gl.h	/^#define glUniform1ui /;"	d
glUniform1uiv	deps/glad/gl.h	/^#define glUniform1uiv /;"	d
glUniform2f	deps/glad/gl.h	/^#define glUniform2f /;"	d
glUniform2fv	deps/glad/gl.h	/^#define glUniform2fv /;"	d
glUniform2i	deps/glad/gl.h	/^#define glUniform2i /;"	d
glUniform2iv	deps/glad/gl.h	/^#define glUniform2iv /;"	d
glUniform2ui	deps/glad/gl.h	/^#define glUniform2ui /;"	d
glUniform2uiv	deps/glad/gl.h	/^#define glUniform2uiv /;"	d
glUniform3f	deps/glad/gl.h	/^#define glUniform3f /;"	d
glUniform3fv	deps/glad/gl.h	/^#define glUniform3fv /;"	d
glUniform3i	deps/glad/gl.h	/^#define glUniform3i /;"	d
glUniform3iv	deps/glad/gl.h	/^#define glUniform3iv /;"	d
glUniform3ui	deps/glad/gl.h	/^#define glUniform3ui /;"	d
glUniform3uiv	deps/glad/gl.h	/^#define glUniform3uiv /;"	d
glUniform4f	deps/glad/gl.h	/^#define glUniform4f /;"	d
glUniform4fv	deps/glad/gl.h	/^#define glUniform4fv /;"	d
glUniform4i	deps/glad/gl.h	/^#define glUniform4i /;"	d
glUniform4iv	deps/glad/gl.h	/^#define glUniform4iv /;"	d
glUniform4ui	deps/glad/gl.h	/^#define glUniform4ui /;"	d
glUniform4uiv	deps/glad/gl.h	/^#define glUniform4uiv /;"	d
glUniformBlockBinding	deps/glad/gl.h	/^#define glUniformBlockBinding /;"	d
glUniformMatrix2fv	deps/glad/gl.h	/^#define glUniformMatrix2fv /;"	d
glUniformMatrix2x3fv	deps/glad/gl.h	/^#define glUniformMatrix2x3fv /;"	d
glUniformMatrix2x4fv	deps/glad/gl.h	/^#define glUniformMatrix2x4fv /;"	d
glUniformMatrix3fv	deps/glad/gl.h	/^#define glUniformMatrix3fv /;"	d
glUniformMatrix3x2fv	deps/glad/gl.h	/^#define glUniformMatrix3x2fv /;"	d
glUniformMatrix3x4fv	deps/glad/gl.h	/^#define glUniformMatrix3x4fv /;"	d
glUniformMatrix4fv	deps/glad/gl.h	/^#define glUniformMatrix4fv /;"	d
glUniformMatrix4x2fv	deps/glad/gl.h	/^#define glUniformMatrix4x2fv /;"	d
glUniformMatrix4x3fv	deps/glad/gl.h	/^#define glUniformMatrix4x3fv /;"	d
glUnmapBuffer	deps/glad/gl.h	/^#define glUnmapBuffer /;"	d
glUseProgram	deps/glad/gl.h	/^#define glUseProgram /;"	d
glValidateProgram	deps/glad/gl.h	/^#define glValidateProgram /;"	d
glVertex2d	deps/glad/gl.h	/^#define glVertex2d /;"	d
glVertex2dv	deps/glad/gl.h	/^#define glVertex2dv /;"	d
glVertex2f	deps/glad/gl.h	/^#define glVertex2f /;"	d
glVertex2fv	deps/glad/gl.h	/^#define glVertex2fv /;"	d
glVertex2i	deps/glad/gl.h	/^#define glVertex2i /;"	d
glVertex2iv	deps/glad/gl.h	/^#define glVertex2iv /;"	d
glVertex2s	deps/glad/gl.h	/^#define glVertex2s /;"	d
glVertex2sv	deps/glad/gl.h	/^#define glVertex2sv /;"	d
glVertex3d	deps/glad/gl.h	/^#define glVertex3d /;"	d
glVertex3dv	deps/glad/gl.h	/^#define glVertex3dv /;"	d
glVertex3f	deps/glad/gl.h	/^#define glVertex3f /;"	d
glVertex3fv	deps/glad/gl.h	/^#define glVertex3fv /;"	d
glVertex3i	deps/glad/gl.h	/^#define glVertex3i /;"	d
glVertex3iv	deps/glad/gl.h	/^#define glVertex3iv /;"	d
glVertex3s	deps/glad/gl.h	/^#define glVertex3s /;"	d
glVertex3sv	deps/glad/gl.h	/^#define glVertex3sv /;"	d
glVertex4d	deps/glad/gl.h	/^#define glVertex4d /;"	d
glVertex4dv	deps/glad/gl.h	/^#define glVertex4dv /;"	d
glVertex4f	deps/glad/gl.h	/^#define glVertex4f /;"	d
glVertex4fv	deps/glad/gl.h	/^#define glVertex4fv /;"	d
glVertex4i	deps/glad/gl.h	/^#define glVertex4i /;"	d
glVertex4iv	deps/glad/gl.h	/^#define glVertex4iv /;"	d
glVertex4s	deps/glad/gl.h	/^#define glVertex4s /;"	d
glVertex4sv	deps/glad/gl.h	/^#define glVertex4sv /;"	d
glVertexAttrib1d	deps/glad/gl.h	/^#define glVertexAttrib1d /;"	d
glVertexAttrib1dv	deps/glad/gl.h	/^#define glVertexAttrib1dv /;"	d
glVertexAttrib1f	deps/glad/gl.h	/^#define glVertexAttrib1f /;"	d
glVertexAttrib1fv	deps/glad/gl.h	/^#define glVertexAttrib1fv /;"	d
glVertexAttrib1s	deps/glad/gl.h	/^#define glVertexAttrib1s /;"	d
glVertexAttrib1sv	deps/glad/gl.h	/^#define glVertexAttrib1sv /;"	d
glVertexAttrib2d	deps/glad/gl.h	/^#define glVertexAttrib2d /;"	d
glVertexAttrib2dv	deps/glad/gl.h	/^#define glVertexAttrib2dv /;"	d
glVertexAttrib2f	deps/glad/gl.h	/^#define glVertexAttrib2f /;"	d
glVertexAttrib2fv	deps/glad/gl.h	/^#define glVertexAttrib2fv /;"	d
glVertexAttrib2s	deps/glad/gl.h	/^#define glVertexAttrib2s /;"	d
glVertexAttrib2sv	deps/glad/gl.h	/^#define glVertexAttrib2sv /;"	d
glVertexAttrib3d	deps/glad/gl.h	/^#define glVertexAttrib3d /;"	d
glVertexAttrib3dv	deps/glad/gl.h	/^#define glVertexAttrib3dv /;"	d
glVertexAttrib3f	deps/glad/gl.h	/^#define glVertexAttrib3f /;"	d
glVertexAttrib3fv	deps/glad/gl.h	/^#define glVertexAttrib3fv /;"	d
glVertexAttrib3s	deps/glad/gl.h	/^#define glVertexAttrib3s /;"	d
glVertexAttrib3sv	deps/glad/gl.h	/^#define glVertexAttrib3sv /;"	d
glVertexAttrib4Nbv	deps/glad/gl.h	/^#define glVertexAttrib4Nbv /;"	d
glVertexAttrib4Niv	deps/glad/gl.h	/^#define glVertexAttrib4Niv /;"	d
glVertexAttrib4Nsv	deps/glad/gl.h	/^#define glVertexAttrib4Nsv /;"	d
glVertexAttrib4Nub	deps/glad/gl.h	/^#define glVertexAttrib4Nub /;"	d
glVertexAttrib4Nubv	deps/glad/gl.h	/^#define glVertexAttrib4Nubv /;"	d
glVertexAttrib4Nuiv	deps/glad/gl.h	/^#define glVertexAttrib4Nuiv /;"	d
glVertexAttrib4Nusv	deps/glad/gl.h	/^#define glVertexAttrib4Nusv /;"	d
glVertexAttrib4bv	deps/glad/gl.h	/^#define glVertexAttrib4bv /;"	d
glVertexAttrib4d	deps/glad/gl.h	/^#define glVertexAttrib4d /;"	d
glVertexAttrib4dv	deps/glad/gl.h	/^#define glVertexAttrib4dv /;"	d
glVertexAttrib4f	deps/glad/gl.h	/^#define glVertexAttrib4f /;"	d
glVertexAttrib4fv	deps/glad/gl.h	/^#define glVertexAttrib4fv /;"	d
glVertexAttrib4iv	deps/glad/gl.h	/^#define glVertexAttrib4iv /;"	d
glVertexAttrib4s	deps/glad/gl.h	/^#define glVertexAttrib4s /;"	d
glVertexAttrib4sv	deps/glad/gl.h	/^#define glVertexAttrib4sv /;"	d
glVertexAttrib4ubv	deps/glad/gl.h	/^#define glVertexAttrib4ubv /;"	d
glVertexAttrib4uiv	deps/glad/gl.h	/^#define glVertexAttrib4uiv /;"	d
glVertexAttrib4usv	deps/glad/gl.h	/^#define glVertexAttrib4usv /;"	d
glVertexAttribDivisor	deps/glad/gl.h	/^#define glVertexAttribDivisor /;"	d
glVertexAttribI1i	deps/glad/gl.h	/^#define glVertexAttribI1i /;"	d
glVertexAttribI1iv	deps/glad/gl.h	/^#define glVertexAttribI1iv /;"	d
glVertexAttribI1ui	deps/glad/gl.h	/^#define glVertexAttribI1ui /;"	d
glVertexAttribI1uiv	deps/glad/gl.h	/^#define glVertexAttribI1uiv /;"	d
glVertexAttribI2i	deps/glad/gl.h	/^#define glVertexAttribI2i /;"	d
glVertexAttribI2iv	deps/glad/gl.h	/^#define glVertexAttribI2iv /;"	d
glVertexAttribI2ui	deps/glad/gl.h	/^#define glVertexAttribI2ui /;"	d
glVertexAttribI2uiv	deps/glad/gl.h	/^#define glVertexAttribI2uiv /;"	d
glVertexAttribI3i	deps/glad/gl.h	/^#define glVertexAttribI3i /;"	d
glVertexAttribI3iv	deps/glad/gl.h	/^#define glVertexAttribI3iv /;"	d
glVertexAttribI3ui	deps/glad/gl.h	/^#define glVertexAttribI3ui /;"	d
glVertexAttribI3uiv	deps/glad/gl.h	/^#define glVertexAttribI3uiv /;"	d
glVertexAttribI4bv	deps/glad/gl.h	/^#define glVertexAttribI4bv /;"	d
glVertexAttribI4i	deps/glad/gl.h	/^#define glVertexAttribI4i /;"	d
glVertexAttribI4iv	deps/glad/gl.h	/^#define glVertexAttribI4iv /;"	d
glVertexAttribI4sv	deps/glad/gl.h	/^#define glVertexAttribI4sv /;"	d
glVertexAttribI4ubv	deps/glad/gl.h	/^#define glVertexAttribI4ubv /;"	d
glVertexAttribI4ui	deps/glad/gl.h	/^#define glVertexAttribI4ui /;"	d
glVertexAttribI4uiv	deps/glad/gl.h	/^#define glVertexAttribI4uiv /;"	d
glVertexAttribI4usv	deps/glad/gl.h	/^#define glVertexAttribI4usv /;"	d
glVertexAttribIPointer	deps/glad/gl.h	/^#define glVertexAttribIPointer /;"	d
glVertexAttribP1ui	deps/glad/gl.h	/^#define glVertexAttribP1ui /;"	d
glVertexAttribP1uiv	deps/glad/gl.h	/^#define glVertexAttribP1uiv /;"	d
glVertexAttribP2ui	deps/glad/gl.h	/^#define glVertexAttribP2ui /;"	d
glVertexAttribP2uiv	deps/glad/gl.h	/^#define glVertexAttribP2uiv /;"	d
glVertexAttribP3ui	deps/glad/gl.h	/^#define glVertexAttribP3ui /;"	d
glVertexAttribP3uiv	deps/glad/gl.h	/^#define glVertexAttribP3uiv /;"	d
glVertexAttribP4ui	deps/glad/gl.h	/^#define glVertexAttribP4ui /;"	d
glVertexAttribP4uiv	deps/glad/gl.h	/^#define glVertexAttribP4uiv /;"	d
glVertexAttribPointer	deps/glad/gl.h	/^#define glVertexAttribPointer /;"	d
glVertexP2ui	deps/glad/gl.h	/^#define glVertexP2ui /;"	d
glVertexP2uiv	deps/glad/gl.h	/^#define glVertexP2uiv /;"	d
glVertexP3ui	deps/glad/gl.h	/^#define glVertexP3ui /;"	d
glVertexP3uiv	deps/glad/gl.h	/^#define glVertexP3uiv /;"	d
glVertexP4ui	deps/glad/gl.h	/^#define glVertexP4ui /;"	d
glVertexP4uiv	deps/glad/gl.h	/^#define glVertexP4uiv /;"	d
glVertexPointer	deps/glad/gl.h	/^#define glVertexPointer /;"	d
glViewport	deps/glad/gl.h	/^#define glViewport /;"	d
glWaitSync	deps/glad/gl.h	/^#define glWaitSync /;"	d
glWindowPos2d	deps/glad/gl.h	/^#define glWindowPos2d /;"	d
glWindowPos2dv	deps/glad/gl.h	/^#define glWindowPos2dv /;"	d
glWindowPos2f	deps/glad/gl.h	/^#define glWindowPos2f /;"	d
glWindowPos2fv	deps/glad/gl.h	/^#define glWindowPos2fv /;"	d
glWindowPos2i	deps/glad/gl.h	/^#define glWindowPos2i /;"	d
glWindowPos2iv	deps/glad/gl.h	/^#define glWindowPos2iv /;"	d
glWindowPos2s	deps/glad/gl.h	/^#define glWindowPos2s /;"	d
glWindowPos2sv	deps/glad/gl.h	/^#define glWindowPos2sv /;"	d
glWindowPos3d	deps/glad/gl.h	/^#define glWindowPos3d /;"	d
glWindowPos3dv	deps/glad/gl.h	/^#define glWindowPos3dv /;"	d
glWindowPos3f	deps/glad/gl.h	/^#define glWindowPos3f /;"	d
glWindowPos3fv	deps/glad/gl.h	/^#define glWindowPos3fv /;"	d
glWindowPos3i	deps/glad/gl.h	/^#define glWindowPos3i /;"	d
glWindowPos3iv	deps/glad/gl.h	/^#define glWindowPos3iv /;"	d
glWindowPos3s	deps/glad/gl.h	/^#define glWindowPos3s /;"	d
glWindowPos3sv	deps/glad/gl.h	/^#define glWindowPos3sv /;"	d
glXCreateNewContext	src/glx_context.h	/^#define glXCreateNewContext /;"	d
glXCreateWindow	src/glx_context.h	/^#define glXCreateWindow /;"	d
glXDestroyContext	src/glx_context.h	/^#define glXDestroyContext /;"	d
glXDestroyWindow	src/glx_context.h	/^#define glXDestroyWindow /;"	d
glXGetClientString	src/glx_context.h	/^#define glXGetClientString /;"	d
glXGetFBConfigAttrib	src/glx_context.h	/^#define glXGetFBConfigAttrib /;"	d
glXGetFBConfigs	src/glx_context.h	/^#define glXGetFBConfigs /;"	d
glXGetVisualFromFBConfig	src/glx_context.h	/^#define glXGetVisualFromFBConfig /;"	d
glXMakeCurrent	src/glx_context.h	/^#define glXMakeCurrent /;"	d
glXQueryExtension	src/glx_context.h	/^#define glXQueryExtension /;"	d
glXQueryExtensionsString	src/glx_context.h	/^#define glXQueryExtensionsString /;"	d
glXQueryVersion	src/glx_context.h	/^#define glXQueryVersion /;"	d
glXSwapBuffers	src/glx_context.h	/^#define glXSwapBuffers /;"	d
gladLoadGL	deps/glad_gl.c	/^int gladLoadGL( GLADloadfunc load) {$/;"	f	typeref:typename:int
gladLoadGLUserPtr	deps/glad_gl.c	/^int gladLoadGLUserPtr( GLADuserptrloadfunc load, void *userptr) {$/;"	f	typeref:typename:int
gladLoadVulkan	deps/glad_vulkan.c	/^int gladLoadVulkan( VkPhysicalDevice physical_device, GLADloadfunc load) {$/;"	f	typeref:typename:int
gladLoadVulkanUserPtr	deps/glad_vulkan.c	/^int gladLoadVulkanUserPtr( VkPhysicalDevice physical_device, GLADuserptrloadfunc load, void *use/;"	f	typeref:typename:int
glad_glAccum	deps/glad/gl.h	/^GLAD_API_CALL PFNGLACCUMPROC glad_glAccum;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLACCUMPROC
glad_glAccum	deps/glad_gl.c	/^PFNGLACCUMPROC glad_glAccum = NULL;$/;"	v	typeref:typename:PFNGLACCUMPROC
glad_glActiveTexture	deps/glad/gl.h	/^GLAD_API_CALL PFNGLACTIVETEXTUREPROC glad_glActiveTexture;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLACTIVETEXTUREPROC
glad_glActiveTexture	deps/glad_gl.c	/^PFNGLACTIVETEXTUREPROC glad_glActiveTexture = NULL;$/;"	v	typeref:typename:PFNGLACTIVETEXTUREPROC
glad_glAlphaFunc	deps/glad/gl.h	/^GLAD_API_CALL PFNGLALPHAFUNCPROC glad_glAlphaFunc;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLALPHAFUNCPROC
glad_glAlphaFunc	deps/glad_gl.c	/^PFNGLALPHAFUNCPROC glad_glAlphaFunc = NULL;$/;"	v	typeref:typename:PFNGLALPHAFUNCPROC
glad_glAreTexturesResident	deps/glad/gl.h	/^GLAD_API_CALL PFNGLARETEXTURESRESIDENTPROC glad_glAreTexturesResident;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLARETEXTURESRESIDENTPROC
glad_glAreTexturesResident	deps/glad_gl.c	/^PFNGLARETEXTURESRESIDENTPROC glad_glAreTexturesResident = NULL;$/;"	v	typeref:typename:PFNGLARETEXTURESRESIDENTPROC
glad_glArrayElement	deps/glad/gl.h	/^GLAD_API_CALL PFNGLARRAYELEMENTPROC glad_glArrayElement;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLARRAYELEMENTPROC
glad_glArrayElement	deps/glad_gl.c	/^PFNGLARRAYELEMENTPROC glad_glArrayElement = NULL;$/;"	v	typeref:typename:PFNGLARRAYELEMENTPROC
glad_glAttachShader	deps/glad/gl.h	/^GLAD_API_CALL PFNGLATTACHSHADERPROC glad_glAttachShader;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLATTACHSHADERPROC
glad_glAttachShader	deps/glad_gl.c	/^PFNGLATTACHSHADERPROC glad_glAttachShader = NULL;$/;"	v	typeref:typename:PFNGLATTACHSHADERPROC
glad_glBegin	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBEGINPROC glad_glBegin;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBEGINPROC
glad_glBegin	deps/glad_gl.c	/^PFNGLBEGINPROC glad_glBegin = NULL;$/;"	v	typeref:typename:PFNGLBEGINPROC
glad_glBeginConditionalRender	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBEGINCONDITIONALRENDERPROC glad_glBeginConditionalRender;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBEGINCONDITIONALRENDERPROC
glad_glBeginConditionalRender	deps/glad_gl.c	/^PFNGLBEGINCONDITIONALRENDERPROC glad_glBeginConditionalRender = NULL;$/;"	v	typeref:typename:PFNGLBEGINCONDITIONALRENDERPROC
glad_glBeginQuery	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBEGINQUERYPROC glad_glBeginQuery;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBEGINQUERYPROC
glad_glBeginQuery	deps/glad_gl.c	/^PFNGLBEGINQUERYPROC glad_glBeginQuery = NULL;$/;"	v	typeref:typename:PFNGLBEGINQUERYPROC
glad_glBeginTransformFeedback	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBEGINTRANSFORMFEEDBACKPROC glad_glBeginTransformFeedback;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBEGINTRANSFORMFEEDBACKPROC
glad_glBeginTransformFeedback	deps/glad_gl.c	/^PFNGLBEGINTRANSFORMFEEDBACKPROC glad_glBeginTransformFeedback = NULL;$/;"	v	typeref:typename:PFNGLBEGINTRANSFORMFEEDBACKPROC
glad_glBindAttribLocation	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDATTRIBLOCATIONPROC glad_glBindAttribLocation;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDATTRIBLOCATIONPROC
glad_glBindAttribLocation	deps/glad_gl.c	/^PFNGLBINDATTRIBLOCATIONPROC glad_glBindAttribLocation = NULL;$/;"	v	typeref:typename:PFNGLBINDATTRIBLOCATIONPROC
glad_glBindBuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDBUFFERPROC glad_glBindBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDBUFFERPROC
glad_glBindBuffer	deps/glad_gl.c	/^PFNGLBINDBUFFERPROC glad_glBindBuffer = NULL;$/;"	v	typeref:typename:PFNGLBINDBUFFERPROC
glad_glBindBufferBase	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDBUFFERBASEPROC glad_glBindBufferBase;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDBUFFERBASEPROC
glad_glBindBufferBase	deps/glad_gl.c	/^PFNGLBINDBUFFERBASEPROC glad_glBindBufferBase = NULL;$/;"	v	typeref:typename:PFNGLBINDBUFFERBASEPROC
glad_glBindBufferRange	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDBUFFERRANGEPROC glad_glBindBufferRange;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDBUFFERRANGEPROC
glad_glBindBufferRange	deps/glad_gl.c	/^PFNGLBINDBUFFERRANGEPROC glad_glBindBufferRange = NULL;$/;"	v	typeref:typename:PFNGLBINDBUFFERRANGEPROC
glad_glBindFragDataLocation	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDFRAGDATALOCATIONPROC glad_glBindFragDataLocation;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDFRAGDATALOCATIONPROC
glad_glBindFragDataLocation	deps/glad_gl.c	/^PFNGLBINDFRAGDATALOCATIONPROC glad_glBindFragDataLocation = NULL;$/;"	v	typeref:typename:PFNGLBINDFRAGDATALOCATIONPROC
glad_glBindFragDataLocationIndexed	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glad_glBindFragDataLocationIndexed;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
glad_glBindFragDataLocationIndexed	deps/glad_gl.c	/^PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glad_glBindFragDataLocationIndexed = NULL;$/;"	v	typeref:typename:PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
glad_glBindFramebuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDFRAMEBUFFERPROC glad_glBindFramebuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDFRAMEBUFFERPROC
glad_glBindFramebuffer	deps/glad_gl.c	/^PFNGLBINDFRAMEBUFFERPROC glad_glBindFramebuffer = NULL;$/;"	v	typeref:typename:PFNGLBINDFRAMEBUFFERPROC
glad_glBindRenderbuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDRENDERBUFFERPROC glad_glBindRenderbuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDRENDERBUFFERPROC
glad_glBindRenderbuffer	deps/glad_gl.c	/^PFNGLBINDRENDERBUFFERPROC glad_glBindRenderbuffer = NULL;$/;"	v	typeref:typename:PFNGLBINDRENDERBUFFERPROC
glad_glBindSampler	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDSAMPLERPROC glad_glBindSampler;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDSAMPLERPROC
glad_glBindSampler	deps/glad_gl.c	/^PFNGLBINDSAMPLERPROC glad_glBindSampler = NULL;$/;"	v	typeref:typename:PFNGLBINDSAMPLERPROC
glad_glBindTexture	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDTEXTUREPROC glad_glBindTexture;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDTEXTUREPROC
glad_glBindTexture	deps/glad_gl.c	/^PFNGLBINDTEXTUREPROC glad_glBindTexture = NULL;$/;"	v	typeref:typename:PFNGLBINDTEXTUREPROC
glad_glBindVertexArray	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBINDVERTEXARRAYPROC glad_glBindVertexArray;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBINDVERTEXARRAYPROC
glad_glBindVertexArray	deps/glad_gl.c	/^PFNGLBINDVERTEXARRAYPROC glad_glBindVertexArray = NULL;$/;"	v	typeref:typename:PFNGLBINDVERTEXARRAYPROC
glad_glBitmap	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBITMAPPROC glad_glBitmap;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBITMAPPROC
glad_glBitmap	deps/glad_gl.c	/^PFNGLBITMAPPROC glad_glBitmap = NULL;$/;"	v	typeref:typename:PFNGLBITMAPPROC
glad_glBlendColor	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBLENDCOLORPROC glad_glBlendColor;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBLENDCOLORPROC
glad_glBlendColor	deps/glad_gl.c	/^PFNGLBLENDCOLORPROC glad_glBlendColor = NULL;$/;"	v	typeref:typename:PFNGLBLENDCOLORPROC
glad_glBlendEquation	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBLENDEQUATIONPROC glad_glBlendEquation;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBLENDEQUATIONPROC
glad_glBlendEquation	deps/glad_gl.c	/^PFNGLBLENDEQUATIONPROC glad_glBlendEquation = NULL;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONPROC
glad_glBlendEquationSeparate	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBLENDEQUATIONSEPARATEPROC glad_glBlendEquationSeparate;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBLENDEQUATIONSEPARATEPROC
glad_glBlendEquationSeparate	deps/glad_gl.c	/^PFNGLBLENDEQUATIONSEPARATEPROC glad_glBlendEquationSeparate = NULL;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONSEPARATEPROC
glad_glBlendFunc	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBLENDFUNCPROC glad_glBlendFunc;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBLENDFUNCPROC
glad_glBlendFunc	deps/glad_gl.c	/^PFNGLBLENDFUNCPROC glad_glBlendFunc = NULL;$/;"	v	typeref:typename:PFNGLBLENDFUNCPROC
glad_glBlendFuncSeparate	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBLENDFUNCSEPARATEPROC glad_glBlendFuncSeparate;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBLENDFUNCSEPARATEPROC
glad_glBlendFuncSeparate	deps/glad_gl.c	/^PFNGLBLENDFUNCSEPARATEPROC glad_glBlendFuncSeparate = NULL;$/;"	v	typeref:typename:PFNGLBLENDFUNCSEPARATEPROC
glad_glBlitFramebuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBLITFRAMEBUFFERPROC glad_glBlitFramebuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBLITFRAMEBUFFERPROC
glad_glBlitFramebuffer	deps/glad_gl.c	/^PFNGLBLITFRAMEBUFFERPROC glad_glBlitFramebuffer = NULL;$/;"	v	typeref:typename:PFNGLBLITFRAMEBUFFERPROC
glad_glBufferData	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBUFFERDATAPROC glad_glBufferData;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBUFFERDATAPROC
glad_glBufferData	deps/glad_gl.c	/^PFNGLBUFFERDATAPROC glad_glBufferData = NULL;$/;"	v	typeref:typename:PFNGLBUFFERDATAPROC
glad_glBufferSubData	deps/glad/gl.h	/^GLAD_API_CALL PFNGLBUFFERSUBDATAPROC glad_glBufferSubData;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLBUFFERSUBDATAPROC
glad_glBufferSubData	deps/glad_gl.c	/^PFNGLBUFFERSUBDATAPROC glad_glBufferSubData = NULL;$/;"	v	typeref:typename:PFNGLBUFFERSUBDATAPROC
glad_glCallList	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCALLLISTPROC glad_glCallList;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCALLLISTPROC
glad_glCallList	deps/glad_gl.c	/^PFNGLCALLLISTPROC glad_glCallList = NULL;$/;"	v	typeref:typename:PFNGLCALLLISTPROC
glad_glCallLists	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCALLLISTSPROC glad_glCallLists;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCALLLISTSPROC
glad_glCallLists	deps/glad_gl.c	/^PFNGLCALLLISTSPROC glad_glCallLists = NULL;$/;"	v	typeref:typename:PFNGLCALLLISTSPROC
glad_glCheckFramebufferStatus	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCHECKFRAMEBUFFERSTATUSPROC glad_glCheckFramebufferStatus;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCHECKFRAMEBUFFERSTATUSPROC
glad_glCheckFramebufferStatus	deps/glad_gl.c	/^PFNGLCHECKFRAMEBUFFERSTATUSPROC glad_glCheckFramebufferStatus = NULL;$/;"	v	typeref:typename:PFNGLCHECKFRAMEBUFFERSTATUSPROC
glad_glClampColor	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLAMPCOLORPROC glad_glClampColor;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLAMPCOLORPROC
glad_glClampColor	deps/glad_gl.c	/^PFNGLCLAMPCOLORPROC glad_glClampColor = NULL;$/;"	v	typeref:typename:PFNGLCLAMPCOLORPROC
glad_glClear	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLEARPROC glad_glClear;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLEARPROC
glad_glClear	deps/glad_gl.c	/^PFNGLCLEARPROC glad_glClear = NULL;$/;"	v	typeref:typename:PFNGLCLEARPROC
glad_glClearAccum	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLEARACCUMPROC glad_glClearAccum;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLEARACCUMPROC
glad_glClearAccum	deps/glad_gl.c	/^PFNGLCLEARACCUMPROC glad_glClearAccum = NULL;$/;"	v	typeref:typename:PFNGLCLEARACCUMPROC
glad_glClearBufferfi	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLEARBUFFERFIPROC glad_glClearBufferfi;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLEARBUFFERFIPROC
glad_glClearBufferfi	deps/glad_gl.c	/^PFNGLCLEARBUFFERFIPROC glad_glClearBufferfi = NULL;$/;"	v	typeref:typename:PFNGLCLEARBUFFERFIPROC
glad_glClearBufferfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLEARBUFFERFVPROC glad_glClearBufferfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLEARBUFFERFVPROC
glad_glClearBufferfv	deps/glad_gl.c	/^PFNGLCLEARBUFFERFVPROC glad_glClearBufferfv = NULL;$/;"	v	typeref:typename:PFNGLCLEARBUFFERFVPROC
glad_glClearBufferiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLEARBUFFERIVPROC glad_glClearBufferiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLEARBUFFERIVPROC
glad_glClearBufferiv	deps/glad_gl.c	/^PFNGLCLEARBUFFERIVPROC glad_glClearBufferiv = NULL;$/;"	v	typeref:typename:PFNGLCLEARBUFFERIVPROC
glad_glClearBufferuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLEARBUFFERUIVPROC glad_glClearBufferuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLEARBUFFERUIVPROC
glad_glClearBufferuiv	deps/glad_gl.c	/^PFNGLCLEARBUFFERUIVPROC glad_glClearBufferuiv = NULL;$/;"	v	typeref:typename:PFNGLCLEARBUFFERUIVPROC
glad_glClearColor	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLEARCOLORPROC glad_glClearColor;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLEARCOLORPROC
glad_glClearColor	deps/glad_gl.c	/^PFNGLCLEARCOLORPROC glad_glClearColor = NULL;$/;"	v	typeref:typename:PFNGLCLEARCOLORPROC
glad_glClearDepth	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLEARDEPTHPROC glad_glClearDepth;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLEARDEPTHPROC
glad_glClearDepth	deps/glad_gl.c	/^PFNGLCLEARDEPTHPROC glad_glClearDepth = NULL;$/;"	v	typeref:typename:PFNGLCLEARDEPTHPROC
glad_glClearIndex	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLEARINDEXPROC glad_glClearIndex;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLEARINDEXPROC
glad_glClearIndex	deps/glad_gl.c	/^PFNGLCLEARINDEXPROC glad_glClearIndex = NULL;$/;"	v	typeref:typename:PFNGLCLEARINDEXPROC
glad_glClearStencil	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLEARSTENCILPROC glad_glClearStencil;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLEARSTENCILPROC
glad_glClearStencil	deps/glad_gl.c	/^PFNGLCLEARSTENCILPROC glad_glClearStencil = NULL;$/;"	v	typeref:typename:PFNGLCLEARSTENCILPROC
glad_glClientActiveTexture	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLIENTACTIVETEXTUREPROC glad_glClientActiveTexture;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLIENTACTIVETEXTUREPROC
glad_glClientActiveTexture	deps/glad_gl.c	/^PFNGLCLIENTACTIVETEXTUREPROC glad_glClientActiveTexture = NULL;$/;"	v	typeref:typename:PFNGLCLIENTACTIVETEXTUREPROC
glad_glClientWaitSync	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLIENTWAITSYNCPROC glad_glClientWaitSync;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLIENTWAITSYNCPROC
glad_glClientWaitSync	deps/glad_gl.c	/^PFNGLCLIENTWAITSYNCPROC glad_glClientWaitSync = NULL;$/;"	v	typeref:typename:PFNGLCLIENTWAITSYNCPROC
glad_glClipPlane	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCLIPPLANEPROC glad_glClipPlane;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCLIPPLANEPROC
glad_glClipPlane	deps/glad_gl.c	/^PFNGLCLIPPLANEPROC glad_glClipPlane = NULL;$/;"	v	typeref:typename:PFNGLCLIPPLANEPROC
glad_glColor3b	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3BPROC glad_glColor3b;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3BPROC
glad_glColor3b	deps/glad_gl.c	/^PFNGLCOLOR3BPROC glad_glColor3b = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3BPROC
glad_glColor3bv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3BVPROC glad_glColor3bv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3BVPROC
glad_glColor3bv	deps/glad_gl.c	/^PFNGLCOLOR3BVPROC glad_glColor3bv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3BVPROC
glad_glColor3d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3DPROC glad_glColor3d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3DPROC
glad_glColor3d	deps/glad_gl.c	/^PFNGLCOLOR3DPROC glad_glColor3d = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3DPROC
glad_glColor3dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3DVPROC glad_glColor3dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3DVPROC
glad_glColor3dv	deps/glad_gl.c	/^PFNGLCOLOR3DVPROC glad_glColor3dv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3DVPROC
glad_glColor3f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3FPROC glad_glColor3f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3FPROC
glad_glColor3f	deps/glad_gl.c	/^PFNGLCOLOR3FPROC glad_glColor3f = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3FPROC
glad_glColor3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3FVPROC glad_glColor3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3FVPROC
glad_glColor3fv	deps/glad_gl.c	/^PFNGLCOLOR3FVPROC glad_glColor3fv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3FVPROC
glad_glColor3i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3IPROC glad_glColor3i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3IPROC
glad_glColor3i	deps/glad_gl.c	/^PFNGLCOLOR3IPROC glad_glColor3i = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3IPROC
glad_glColor3iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3IVPROC glad_glColor3iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3IVPROC
glad_glColor3iv	deps/glad_gl.c	/^PFNGLCOLOR3IVPROC glad_glColor3iv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3IVPROC
glad_glColor3s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3SPROC glad_glColor3s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3SPROC
glad_glColor3s	deps/glad_gl.c	/^PFNGLCOLOR3SPROC glad_glColor3s = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3SPROC
glad_glColor3sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3SVPROC glad_glColor3sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3SVPROC
glad_glColor3sv	deps/glad_gl.c	/^PFNGLCOLOR3SVPROC glad_glColor3sv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3SVPROC
glad_glColor3ub	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3UBPROC glad_glColor3ub;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3UBPROC
glad_glColor3ub	deps/glad_gl.c	/^PFNGLCOLOR3UBPROC glad_glColor3ub = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3UBPROC
glad_glColor3ubv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3UBVPROC glad_glColor3ubv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3UBVPROC
glad_glColor3ubv	deps/glad_gl.c	/^PFNGLCOLOR3UBVPROC glad_glColor3ubv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3UBVPROC
glad_glColor3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3UIPROC glad_glColor3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3UIPROC
glad_glColor3ui	deps/glad_gl.c	/^PFNGLCOLOR3UIPROC glad_glColor3ui = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3UIPROC
glad_glColor3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3UIVPROC glad_glColor3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3UIVPROC
glad_glColor3uiv	deps/glad_gl.c	/^PFNGLCOLOR3UIVPROC glad_glColor3uiv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3UIVPROC
glad_glColor3us	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3USPROC glad_glColor3us;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3USPROC
glad_glColor3us	deps/glad_gl.c	/^PFNGLCOLOR3USPROC glad_glColor3us = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3USPROC
glad_glColor3usv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR3USVPROC glad_glColor3usv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR3USVPROC
glad_glColor3usv	deps/glad_gl.c	/^PFNGLCOLOR3USVPROC glad_glColor3usv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR3USVPROC
glad_glColor4b	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4BPROC glad_glColor4b;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4BPROC
glad_glColor4b	deps/glad_gl.c	/^PFNGLCOLOR4BPROC glad_glColor4b = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4BPROC
glad_glColor4bv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4BVPROC glad_glColor4bv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4BVPROC
glad_glColor4bv	deps/glad_gl.c	/^PFNGLCOLOR4BVPROC glad_glColor4bv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4BVPROC
glad_glColor4d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4DPROC glad_glColor4d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4DPROC
glad_glColor4d	deps/glad_gl.c	/^PFNGLCOLOR4DPROC glad_glColor4d = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4DPROC
glad_glColor4dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4DVPROC glad_glColor4dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4DVPROC
glad_glColor4dv	deps/glad_gl.c	/^PFNGLCOLOR4DVPROC glad_glColor4dv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4DVPROC
glad_glColor4f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4FPROC glad_glColor4f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4FPROC
glad_glColor4f	deps/glad_gl.c	/^PFNGLCOLOR4FPROC glad_glColor4f = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4FPROC
glad_glColor4fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4FVPROC glad_glColor4fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4FVPROC
glad_glColor4fv	deps/glad_gl.c	/^PFNGLCOLOR4FVPROC glad_glColor4fv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4FVPROC
glad_glColor4i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4IPROC glad_glColor4i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4IPROC
glad_glColor4i	deps/glad_gl.c	/^PFNGLCOLOR4IPROC glad_glColor4i = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4IPROC
glad_glColor4iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4IVPROC glad_glColor4iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4IVPROC
glad_glColor4iv	deps/glad_gl.c	/^PFNGLCOLOR4IVPROC glad_glColor4iv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4IVPROC
glad_glColor4s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4SPROC glad_glColor4s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4SPROC
glad_glColor4s	deps/glad_gl.c	/^PFNGLCOLOR4SPROC glad_glColor4s = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4SPROC
glad_glColor4sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4SVPROC glad_glColor4sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4SVPROC
glad_glColor4sv	deps/glad_gl.c	/^PFNGLCOLOR4SVPROC glad_glColor4sv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4SVPROC
glad_glColor4ub	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4UBPROC glad_glColor4ub;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4UBPROC
glad_glColor4ub	deps/glad_gl.c	/^PFNGLCOLOR4UBPROC glad_glColor4ub = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4UBPROC
glad_glColor4ubv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4UBVPROC glad_glColor4ubv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4UBVPROC
glad_glColor4ubv	deps/glad_gl.c	/^PFNGLCOLOR4UBVPROC glad_glColor4ubv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4UBVPROC
glad_glColor4ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4UIPROC glad_glColor4ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4UIPROC
glad_glColor4ui	deps/glad_gl.c	/^PFNGLCOLOR4UIPROC glad_glColor4ui = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4UIPROC
glad_glColor4uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4UIVPROC glad_glColor4uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4UIVPROC
glad_glColor4uiv	deps/glad_gl.c	/^PFNGLCOLOR4UIVPROC glad_glColor4uiv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4UIVPROC
glad_glColor4us	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4USPROC glad_glColor4us;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4USPROC
glad_glColor4us	deps/glad_gl.c	/^PFNGLCOLOR4USPROC glad_glColor4us = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4USPROC
glad_glColor4usv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLOR4USVPROC glad_glColor4usv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLOR4USVPROC
glad_glColor4usv	deps/glad_gl.c	/^PFNGLCOLOR4USVPROC glad_glColor4usv = NULL;$/;"	v	typeref:typename:PFNGLCOLOR4USVPROC
glad_glColorMask	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLORMASKPROC glad_glColorMask;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLORMASKPROC
glad_glColorMask	deps/glad_gl.c	/^PFNGLCOLORMASKPROC glad_glColorMask = NULL;$/;"	v	typeref:typename:PFNGLCOLORMASKPROC
glad_glColorMaski	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLORMASKIPROC glad_glColorMaski;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLORMASKIPROC
glad_glColorMaski	deps/glad_gl.c	/^PFNGLCOLORMASKIPROC glad_glColorMaski = NULL;$/;"	v	typeref:typename:PFNGLCOLORMASKIPROC
glad_glColorMaterial	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLORMATERIALPROC glad_glColorMaterial;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLORMATERIALPROC
glad_glColorMaterial	deps/glad_gl.c	/^PFNGLCOLORMATERIALPROC glad_glColorMaterial = NULL;$/;"	v	typeref:typename:PFNGLCOLORMATERIALPROC
glad_glColorP3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLORP3UIPROC glad_glColorP3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLORP3UIPROC
glad_glColorP3ui	deps/glad_gl.c	/^PFNGLCOLORP3UIPROC glad_glColorP3ui = NULL;$/;"	v	typeref:typename:PFNGLCOLORP3UIPROC
glad_glColorP3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLORP3UIVPROC glad_glColorP3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLORP3UIVPROC
glad_glColorP3uiv	deps/glad_gl.c	/^PFNGLCOLORP3UIVPROC glad_glColorP3uiv = NULL;$/;"	v	typeref:typename:PFNGLCOLORP3UIVPROC
glad_glColorP4ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLORP4UIPROC glad_glColorP4ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLORP4UIPROC
glad_glColorP4ui	deps/glad_gl.c	/^PFNGLCOLORP4UIPROC glad_glColorP4ui = NULL;$/;"	v	typeref:typename:PFNGLCOLORP4UIPROC
glad_glColorP4uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLORP4UIVPROC glad_glColorP4uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLORP4UIVPROC
glad_glColorP4uiv	deps/glad_gl.c	/^PFNGLCOLORP4UIVPROC glad_glColorP4uiv = NULL;$/;"	v	typeref:typename:PFNGLCOLORP4UIVPROC
glad_glColorPointer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOLORPOINTERPROC glad_glColorPointer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOLORPOINTERPROC
glad_glColorPointer	deps/glad_gl.c	/^PFNGLCOLORPOINTERPROC glad_glColorPointer = NULL;$/;"	v	typeref:typename:PFNGLCOLORPOINTERPROC
glad_glCompileShader	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOMPILESHADERPROC glad_glCompileShader;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOMPILESHADERPROC
glad_glCompileShader	deps/glad_gl.c	/^PFNGLCOMPILESHADERPROC glad_glCompileShader = NULL;$/;"	v	typeref:typename:PFNGLCOMPILESHADERPROC
glad_glCompressedTexImage1D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE1DPROC glad_glCompressedTexImage1D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE1DPROC
glad_glCompressedTexImage1D	deps/glad_gl.c	/^PFNGLCOMPRESSEDTEXIMAGE1DPROC glad_glCompressedTexImage1D = NULL;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE1DPROC
glad_glCompressedTexImage2D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE2DPROC glad_glCompressedTexImage2D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE2DPROC
glad_glCompressedTexImage2D	deps/glad_gl.c	/^PFNGLCOMPRESSEDTEXIMAGE2DPROC glad_glCompressedTexImage2D = NULL;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE2DPROC
glad_glCompressedTexImage3D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE3DPROC glad_glCompressedTexImage3D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE3DPROC
glad_glCompressedTexImage3D	deps/glad_gl.c	/^PFNGLCOMPRESSEDTEXIMAGE3DPROC glad_glCompressedTexImage3D = NULL;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE3DPROC
glad_glCompressedTexSubImage1D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glad_glCompressedTexSubImage1D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
glad_glCompressedTexSubImage1D	deps/glad_gl.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glad_glCompressedTexSubImage1D = NULL;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
glad_glCompressedTexSubImage2D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glad_glCompressedTexSubImage2D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
glad_glCompressedTexSubImage2D	deps/glad_gl.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glad_glCompressedTexSubImage2D = NULL;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
glad_glCompressedTexSubImage3D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glad_glCompressedTexSubImage3D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
glad_glCompressedTexSubImage3D	deps/glad_gl.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glad_glCompressedTexSubImage3D = NULL;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
glad_glCopyBufferSubData	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOPYBUFFERSUBDATAPROC glad_glCopyBufferSubData;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOPYBUFFERSUBDATAPROC
glad_glCopyBufferSubData	deps/glad_gl.c	/^PFNGLCOPYBUFFERSUBDATAPROC glad_glCopyBufferSubData = NULL;$/;"	v	typeref:typename:PFNGLCOPYBUFFERSUBDATAPROC
glad_glCopyPixels	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOPYPIXELSPROC glad_glCopyPixels;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOPYPIXELSPROC
glad_glCopyPixels	deps/glad_gl.c	/^PFNGLCOPYPIXELSPROC glad_glCopyPixels = NULL;$/;"	v	typeref:typename:PFNGLCOPYPIXELSPROC
glad_glCopyTexImage1D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOPYTEXIMAGE1DPROC glad_glCopyTexImage1D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOPYTEXIMAGE1DPROC
glad_glCopyTexImage1D	deps/glad_gl.c	/^PFNGLCOPYTEXIMAGE1DPROC glad_glCopyTexImage1D = NULL;$/;"	v	typeref:typename:PFNGLCOPYTEXIMAGE1DPROC
glad_glCopyTexImage2D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOPYTEXIMAGE2DPROC glad_glCopyTexImage2D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOPYTEXIMAGE2DPROC
glad_glCopyTexImage2D	deps/glad_gl.c	/^PFNGLCOPYTEXIMAGE2DPROC glad_glCopyTexImage2D = NULL;$/;"	v	typeref:typename:PFNGLCOPYTEXIMAGE2DPROC
glad_glCopyTexSubImage1D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE1DPROC glad_glCopyTexSubImage1D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE1DPROC
glad_glCopyTexSubImage1D	deps/glad_gl.c	/^PFNGLCOPYTEXSUBIMAGE1DPROC glad_glCopyTexSubImage1D = NULL;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE1DPROC
glad_glCopyTexSubImage2D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE2DPROC glad_glCopyTexSubImage2D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE2DPROC
glad_glCopyTexSubImage2D	deps/glad_gl.c	/^PFNGLCOPYTEXSUBIMAGE2DPROC glad_glCopyTexSubImage2D = NULL;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE2DPROC
glad_glCopyTexSubImage3D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE3DPROC glad_glCopyTexSubImage3D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE3DPROC
glad_glCopyTexSubImage3D	deps/glad_gl.c	/^PFNGLCOPYTEXSUBIMAGE3DPROC glad_glCopyTexSubImage3D = NULL;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE3DPROC
glad_glCreateProgram	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCREATEPROGRAMPROC glad_glCreateProgram;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCREATEPROGRAMPROC
glad_glCreateProgram	deps/glad_gl.c	/^PFNGLCREATEPROGRAMPROC glad_glCreateProgram = NULL;$/;"	v	typeref:typename:PFNGLCREATEPROGRAMPROC
glad_glCreateShader	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCREATESHADERPROC glad_glCreateShader;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCREATESHADERPROC
glad_glCreateShader	deps/glad_gl.c	/^PFNGLCREATESHADERPROC glad_glCreateShader = NULL;$/;"	v	typeref:typename:PFNGLCREATESHADERPROC
glad_glCullFace	deps/glad/gl.h	/^GLAD_API_CALL PFNGLCULLFACEPROC glad_glCullFace;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLCULLFACEPROC
glad_glCullFace	deps/glad_gl.c	/^PFNGLCULLFACEPROC glad_glCullFace = NULL;$/;"	v	typeref:typename:PFNGLCULLFACEPROC
glad_glDebugMessageCallback	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDEBUGMESSAGECALLBACKPROC
glad_glDebugMessageCallback	deps/glad_gl.c	/^PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback = NULL;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECALLBACKPROC
glad_glDebugMessageControl	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDEBUGMESSAGECONTROLPROC
glad_glDebugMessageControl	deps/glad_gl.c	/^PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl = NULL;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECONTROLPROC
glad_glDebugMessageInsert	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDEBUGMESSAGEINSERTPROC
glad_glDebugMessageInsert	deps/glad_gl.c	/^PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert = NULL;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGEINSERTPROC
glad_glDeleteBuffers	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETEBUFFERSPROC
glad_glDeleteBuffers	deps/glad_gl.c	/^PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers = NULL;$/;"	v	typeref:typename:PFNGLDELETEBUFFERSPROC
glad_glDeleteFramebuffers	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETEFRAMEBUFFERSPROC
glad_glDeleteFramebuffers	deps/glad_gl.c	/^PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers = NULL;$/;"	v	typeref:typename:PFNGLDELETEFRAMEBUFFERSPROC
glad_glDeleteLists	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETELISTSPROC glad_glDeleteLists;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETELISTSPROC
glad_glDeleteLists	deps/glad_gl.c	/^PFNGLDELETELISTSPROC glad_glDeleteLists = NULL;$/;"	v	typeref:typename:PFNGLDELETELISTSPROC
glad_glDeleteProgram	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETEPROGRAMPROC glad_glDeleteProgram;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETEPROGRAMPROC
glad_glDeleteProgram	deps/glad_gl.c	/^PFNGLDELETEPROGRAMPROC glad_glDeleteProgram = NULL;$/;"	v	typeref:typename:PFNGLDELETEPROGRAMPROC
glad_glDeleteQueries	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETEQUERIESPROC glad_glDeleteQueries;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETEQUERIESPROC
glad_glDeleteQueries	deps/glad_gl.c	/^PFNGLDELETEQUERIESPROC glad_glDeleteQueries = NULL;$/;"	v	typeref:typename:PFNGLDELETEQUERIESPROC
glad_glDeleteRenderbuffers	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETERENDERBUFFERSPROC
glad_glDeleteRenderbuffers	deps/glad_gl.c	/^PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers = NULL;$/;"	v	typeref:typename:PFNGLDELETERENDERBUFFERSPROC
glad_glDeleteSamplers	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETESAMPLERSPROC glad_glDeleteSamplers;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETESAMPLERSPROC
glad_glDeleteSamplers	deps/glad_gl.c	/^PFNGLDELETESAMPLERSPROC glad_glDeleteSamplers = NULL;$/;"	v	typeref:typename:PFNGLDELETESAMPLERSPROC
glad_glDeleteShader	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETESHADERPROC glad_glDeleteShader;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETESHADERPROC
glad_glDeleteShader	deps/glad_gl.c	/^PFNGLDELETESHADERPROC glad_glDeleteShader = NULL;$/;"	v	typeref:typename:PFNGLDELETESHADERPROC
glad_glDeleteSync	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETESYNCPROC glad_glDeleteSync;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETESYNCPROC
glad_glDeleteSync	deps/glad_gl.c	/^PFNGLDELETESYNCPROC glad_glDeleteSync = NULL;$/;"	v	typeref:typename:PFNGLDELETESYNCPROC
glad_glDeleteTextures	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETETEXTURESPROC glad_glDeleteTextures;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETETEXTURESPROC
glad_glDeleteTextures	deps/glad_gl.c	/^PFNGLDELETETEXTURESPROC glad_glDeleteTextures = NULL;$/;"	v	typeref:typename:PFNGLDELETETEXTURESPROC
glad_glDeleteVertexArrays	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDELETEVERTEXARRAYSPROC
glad_glDeleteVertexArrays	deps/glad_gl.c	/^PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays = NULL;$/;"	v	typeref:typename:PFNGLDELETEVERTEXARRAYSPROC
glad_glDepthFunc	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDEPTHFUNCPROC glad_glDepthFunc;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDEPTHFUNCPROC
glad_glDepthFunc	deps/glad_gl.c	/^PFNGLDEPTHFUNCPROC glad_glDepthFunc = NULL;$/;"	v	typeref:typename:PFNGLDEPTHFUNCPROC
glad_glDepthMask	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDEPTHMASKPROC glad_glDepthMask;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDEPTHMASKPROC
glad_glDepthMask	deps/glad_gl.c	/^PFNGLDEPTHMASKPROC glad_glDepthMask = NULL;$/;"	v	typeref:typename:PFNGLDEPTHMASKPROC
glad_glDepthRange	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDEPTHRANGEPROC glad_glDepthRange;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDEPTHRANGEPROC
glad_glDepthRange	deps/glad_gl.c	/^PFNGLDEPTHRANGEPROC glad_glDepthRange = NULL;$/;"	v	typeref:typename:PFNGLDEPTHRANGEPROC
glad_glDetachShader	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDETACHSHADERPROC glad_glDetachShader;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDETACHSHADERPROC
glad_glDetachShader	deps/glad_gl.c	/^PFNGLDETACHSHADERPROC glad_glDetachShader = NULL;$/;"	v	typeref:typename:PFNGLDETACHSHADERPROC
glad_glDisable	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDISABLEPROC glad_glDisable;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDISABLEPROC
glad_glDisable	deps/glad_gl.c	/^PFNGLDISABLEPROC glad_glDisable = NULL;$/;"	v	typeref:typename:PFNGLDISABLEPROC
glad_glDisableClientState	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDISABLECLIENTSTATEPROC glad_glDisableClientState;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDISABLECLIENTSTATEPROC
glad_glDisableClientState	deps/glad_gl.c	/^PFNGLDISABLECLIENTSTATEPROC glad_glDisableClientState = NULL;$/;"	v	typeref:typename:PFNGLDISABLECLIENTSTATEPROC
glad_glDisableVertexAttribArray	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDISABLEVERTEXATTRIBARRAYPROC
glad_glDisableVertexAttribArray	deps/glad_gl.c	/^PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray = NULL;$/;"	v	typeref:typename:PFNGLDISABLEVERTEXATTRIBARRAYPROC
glad_glDisablei	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDISABLEIPROC glad_glDisablei;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDISABLEIPROC
glad_glDisablei	deps/glad_gl.c	/^PFNGLDISABLEIPROC glad_glDisablei = NULL;$/;"	v	typeref:typename:PFNGLDISABLEIPROC
glad_glDrawArrays	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWARRAYSPROC glad_glDrawArrays;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWARRAYSPROC
glad_glDrawArrays	deps/glad_gl.c	/^PFNGLDRAWARRAYSPROC glad_glDrawArrays = NULL;$/;"	v	typeref:typename:PFNGLDRAWARRAYSPROC
glad_glDrawArraysInstanced	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWARRAYSINSTANCEDPROC
glad_glDrawArraysInstanced	deps/glad_gl.c	/^PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced = NULL;$/;"	v	typeref:typename:PFNGLDRAWARRAYSINSTANCEDPROC
glad_glDrawBuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWBUFFERPROC glad_glDrawBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWBUFFERPROC
glad_glDrawBuffer	deps/glad_gl.c	/^PFNGLDRAWBUFFERPROC glad_glDrawBuffer = NULL;$/;"	v	typeref:typename:PFNGLDRAWBUFFERPROC
glad_glDrawBuffers	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWBUFFERSPROC glad_glDrawBuffers;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWBUFFERSPROC
glad_glDrawBuffers	deps/glad_gl.c	/^PFNGLDRAWBUFFERSPROC glad_glDrawBuffers = NULL;$/;"	v	typeref:typename:PFNGLDRAWBUFFERSPROC
glad_glDrawElements	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWELEMENTSPROC glad_glDrawElements;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWELEMENTSPROC
glad_glDrawElements	deps/glad_gl.c	/^PFNGLDRAWELEMENTSPROC glad_glDrawElements = NULL;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSPROC
glad_glDrawElementsBaseVertex	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWELEMENTSBASEVERTEXPROC
glad_glDrawElementsBaseVertex	deps/glad_gl.c	/^PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex = NULL;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSBASEVERTEXPROC
glad_glDrawElementsInstanced	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDPROC
glad_glDrawElementsInstanced	deps/glad_gl.c	/^PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced = NULL;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDPROC
glad_glDrawElementsInstancedBaseVertex	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_glDrawElementsInstancedBaseVertex;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
glad_glDrawElementsInstancedBaseVertex	deps/glad_gl.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_glDrawElementsInstancedBaseVertex = NULL;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
glad_glDrawPixels	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWPIXELSPROC glad_glDrawPixels;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWPIXELSPROC
glad_glDrawPixels	deps/glad_gl.c	/^PFNGLDRAWPIXELSPROC glad_glDrawPixels = NULL;$/;"	v	typeref:typename:PFNGLDRAWPIXELSPROC
glad_glDrawRangeElements	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWRANGEELEMENTSPROC
glad_glDrawRangeElements	deps/glad_gl.c	/^PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements = NULL;$/;"	v	typeref:typename:PFNGLDRAWRANGEELEMENTSPROC
glad_glDrawRangeElementsBaseVertex	deps/glad/gl.h	/^GLAD_API_CALL PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
glad_glDrawRangeElementsBaseVertex	deps/glad_gl.c	/^PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex = NULL;$/;"	v	typeref:typename:PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
glad_glEdgeFlag	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEDGEFLAGPROC glad_glEdgeFlag;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEDGEFLAGPROC
glad_glEdgeFlag	deps/glad_gl.c	/^PFNGLEDGEFLAGPROC glad_glEdgeFlag = NULL;$/;"	v	typeref:typename:PFNGLEDGEFLAGPROC
glad_glEdgeFlagPointer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEDGEFLAGPOINTERPROC glad_glEdgeFlagPointer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEDGEFLAGPOINTERPROC
glad_glEdgeFlagPointer	deps/glad_gl.c	/^PFNGLEDGEFLAGPOINTERPROC glad_glEdgeFlagPointer = NULL;$/;"	v	typeref:typename:PFNGLEDGEFLAGPOINTERPROC
glad_glEdgeFlagv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEDGEFLAGVPROC glad_glEdgeFlagv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEDGEFLAGVPROC
glad_glEdgeFlagv	deps/glad_gl.c	/^PFNGLEDGEFLAGVPROC glad_glEdgeFlagv = NULL;$/;"	v	typeref:typename:PFNGLEDGEFLAGVPROC
glad_glEnable	deps/glad/gl.h	/^GLAD_API_CALL PFNGLENABLEPROC glad_glEnable;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLENABLEPROC
glad_glEnable	deps/glad_gl.c	/^PFNGLENABLEPROC glad_glEnable = NULL;$/;"	v	typeref:typename:PFNGLENABLEPROC
glad_glEnableClientState	deps/glad/gl.h	/^GLAD_API_CALL PFNGLENABLECLIENTSTATEPROC glad_glEnableClientState;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLENABLECLIENTSTATEPROC
glad_glEnableClientState	deps/glad_gl.c	/^PFNGLENABLECLIENTSTATEPROC glad_glEnableClientState = NULL;$/;"	v	typeref:typename:PFNGLENABLECLIENTSTATEPROC
glad_glEnableVertexAttribArray	deps/glad/gl.h	/^GLAD_API_CALL PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLENABLEVERTEXATTRIBARRAYPROC
glad_glEnableVertexAttribArray	deps/glad_gl.c	/^PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray = NULL;$/;"	v	typeref:typename:PFNGLENABLEVERTEXATTRIBARRAYPROC
glad_glEnablei	deps/glad/gl.h	/^GLAD_API_CALL PFNGLENABLEIPROC glad_glEnablei;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLENABLEIPROC
glad_glEnablei	deps/glad_gl.c	/^PFNGLENABLEIPROC glad_glEnablei = NULL;$/;"	v	typeref:typename:PFNGLENABLEIPROC
glad_glEnd	deps/glad/gl.h	/^GLAD_API_CALL PFNGLENDPROC glad_glEnd;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLENDPROC
glad_glEnd	deps/glad_gl.c	/^PFNGLENDPROC glad_glEnd = NULL;$/;"	v	typeref:typename:PFNGLENDPROC
glad_glEndConditionalRender	deps/glad/gl.h	/^GLAD_API_CALL PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLENDCONDITIONALRENDERPROC
glad_glEndConditionalRender	deps/glad_gl.c	/^PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender = NULL;$/;"	v	typeref:typename:PFNGLENDCONDITIONALRENDERPROC
glad_glEndList	deps/glad/gl.h	/^GLAD_API_CALL PFNGLENDLISTPROC glad_glEndList;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLENDLISTPROC
glad_glEndList	deps/glad_gl.c	/^PFNGLENDLISTPROC glad_glEndList = NULL;$/;"	v	typeref:typename:PFNGLENDLISTPROC
glad_glEndQuery	deps/glad/gl.h	/^GLAD_API_CALL PFNGLENDQUERYPROC glad_glEndQuery;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLENDQUERYPROC
glad_glEndQuery	deps/glad_gl.c	/^PFNGLENDQUERYPROC glad_glEndQuery = NULL;$/;"	v	typeref:typename:PFNGLENDQUERYPROC
glad_glEndTransformFeedback	deps/glad/gl.h	/^GLAD_API_CALL PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLENDTRANSFORMFEEDBACKPROC
glad_glEndTransformFeedback	deps/glad_gl.c	/^PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback = NULL;$/;"	v	typeref:typename:PFNGLENDTRANSFORMFEEDBACKPROC
glad_glEvalCoord1d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALCOORD1DPROC glad_glEvalCoord1d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALCOORD1DPROC
glad_glEvalCoord1d	deps/glad_gl.c	/^PFNGLEVALCOORD1DPROC glad_glEvalCoord1d = NULL;$/;"	v	typeref:typename:PFNGLEVALCOORD1DPROC
glad_glEvalCoord1dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALCOORD1DVPROC glad_glEvalCoord1dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALCOORD1DVPROC
glad_glEvalCoord1dv	deps/glad_gl.c	/^PFNGLEVALCOORD1DVPROC glad_glEvalCoord1dv = NULL;$/;"	v	typeref:typename:PFNGLEVALCOORD1DVPROC
glad_glEvalCoord1f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALCOORD1FPROC glad_glEvalCoord1f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALCOORD1FPROC
glad_glEvalCoord1f	deps/glad_gl.c	/^PFNGLEVALCOORD1FPROC glad_glEvalCoord1f = NULL;$/;"	v	typeref:typename:PFNGLEVALCOORD1FPROC
glad_glEvalCoord1fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALCOORD1FVPROC glad_glEvalCoord1fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALCOORD1FVPROC
glad_glEvalCoord1fv	deps/glad_gl.c	/^PFNGLEVALCOORD1FVPROC glad_glEvalCoord1fv = NULL;$/;"	v	typeref:typename:PFNGLEVALCOORD1FVPROC
glad_glEvalCoord2d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALCOORD2DPROC glad_glEvalCoord2d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALCOORD2DPROC
glad_glEvalCoord2d	deps/glad_gl.c	/^PFNGLEVALCOORD2DPROC glad_glEvalCoord2d = NULL;$/;"	v	typeref:typename:PFNGLEVALCOORD2DPROC
glad_glEvalCoord2dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALCOORD2DVPROC glad_glEvalCoord2dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALCOORD2DVPROC
glad_glEvalCoord2dv	deps/glad_gl.c	/^PFNGLEVALCOORD2DVPROC glad_glEvalCoord2dv = NULL;$/;"	v	typeref:typename:PFNGLEVALCOORD2DVPROC
glad_glEvalCoord2f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALCOORD2FPROC glad_glEvalCoord2f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALCOORD2FPROC
glad_glEvalCoord2f	deps/glad_gl.c	/^PFNGLEVALCOORD2FPROC glad_glEvalCoord2f = NULL;$/;"	v	typeref:typename:PFNGLEVALCOORD2FPROC
glad_glEvalCoord2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALCOORD2FVPROC glad_glEvalCoord2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALCOORD2FVPROC
glad_glEvalCoord2fv	deps/glad_gl.c	/^PFNGLEVALCOORD2FVPROC glad_glEvalCoord2fv = NULL;$/;"	v	typeref:typename:PFNGLEVALCOORD2FVPROC
glad_glEvalMesh1	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALMESH1PROC glad_glEvalMesh1;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALMESH1PROC
glad_glEvalMesh1	deps/glad_gl.c	/^PFNGLEVALMESH1PROC glad_glEvalMesh1 = NULL;$/;"	v	typeref:typename:PFNGLEVALMESH1PROC
glad_glEvalMesh2	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALMESH2PROC glad_glEvalMesh2;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALMESH2PROC
glad_glEvalMesh2	deps/glad_gl.c	/^PFNGLEVALMESH2PROC glad_glEvalMesh2 = NULL;$/;"	v	typeref:typename:PFNGLEVALMESH2PROC
glad_glEvalPoint1	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALPOINT1PROC glad_glEvalPoint1;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALPOINT1PROC
glad_glEvalPoint1	deps/glad_gl.c	/^PFNGLEVALPOINT1PROC glad_glEvalPoint1 = NULL;$/;"	v	typeref:typename:PFNGLEVALPOINT1PROC
glad_glEvalPoint2	deps/glad/gl.h	/^GLAD_API_CALL PFNGLEVALPOINT2PROC glad_glEvalPoint2;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLEVALPOINT2PROC
glad_glEvalPoint2	deps/glad_gl.c	/^PFNGLEVALPOINT2PROC glad_glEvalPoint2 = NULL;$/;"	v	typeref:typename:PFNGLEVALPOINT2PROC
glad_glFeedbackBuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFEEDBACKBUFFERPROC glad_glFeedbackBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFEEDBACKBUFFERPROC
glad_glFeedbackBuffer	deps/glad_gl.c	/^PFNGLFEEDBACKBUFFERPROC glad_glFeedbackBuffer = NULL;$/;"	v	typeref:typename:PFNGLFEEDBACKBUFFERPROC
glad_glFenceSync	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFENCESYNCPROC glad_glFenceSync;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFENCESYNCPROC
glad_glFenceSync	deps/glad_gl.c	/^PFNGLFENCESYNCPROC glad_glFenceSync = NULL;$/;"	v	typeref:typename:PFNGLFENCESYNCPROC
glad_glFinish	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFINISHPROC glad_glFinish;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFINISHPROC
glad_glFinish	deps/glad_gl.c	/^PFNGLFINISHPROC glad_glFinish = NULL;$/;"	v	typeref:typename:PFNGLFINISHPROC
glad_glFlush	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFLUSHPROC glad_glFlush;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFLUSHPROC
glad_glFlush	deps/glad_gl.c	/^PFNGLFLUSHPROC glad_glFlush = NULL;$/;"	v	typeref:typename:PFNGLFLUSHPROC
glad_glFlushMappedBufferRange	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFLUSHMAPPEDBUFFERRANGEPROC
glad_glFlushMappedBufferRange	deps/glad_gl.c	/^PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange = NULL;$/;"	v	typeref:typename:PFNGLFLUSHMAPPEDBUFFERRANGEPROC
glad_glFogCoordPointer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFOGCOORDPOINTERPROC glad_glFogCoordPointer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFOGCOORDPOINTERPROC
glad_glFogCoordPointer	deps/glad_gl.c	/^PFNGLFOGCOORDPOINTERPROC glad_glFogCoordPointer = NULL;$/;"	v	typeref:typename:PFNGLFOGCOORDPOINTERPROC
glad_glFogCoordd	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFOGCOORDDPROC glad_glFogCoordd;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFOGCOORDDPROC
glad_glFogCoordd	deps/glad_gl.c	/^PFNGLFOGCOORDDPROC glad_glFogCoordd = NULL;$/;"	v	typeref:typename:PFNGLFOGCOORDDPROC
glad_glFogCoorddv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFOGCOORDDVPROC glad_glFogCoorddv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFOGCOORDDVPROC
glad_glFogCoorddv	deps/glad_gl.c	/^PFNGLFOGCOORDDVPROC glad_glFogCoorddv = NULL;$/;"	v	typeref:typename:PFNGLFOGCOORDDVPROC
glad_glFogCoordf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFOGCOORDFPROC glad_glFogCoordf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFOGCOORDFPROC
glad_glFogCoordf	deps/glad_gl.c	/^PFNGLFOGCOORDFPROC glad_glFogCoordf = NULL;$/;"	v	typeref:typename:PFNGLFOGCOORDFPROC
glad_glFogCoordfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFOGCOORDFVPROC glad_glFogCoordfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFOGCOORDFVPROC
glad_glFogCoordfv	deps/glad_gl.c	/^PFNGLFOGCOORDFVPROC glad_glFogCoordfv = NULL;$/;"	v	typeref:typename:PFNGLFOGCOORDFVPROC
glad_glFogf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFOGFPROC glad_glFogf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFOGFPROC
glad_glFogf	deps/glad_gl.c	/^PFNGLFOGFPROC glad_glFogf = NULL;$/;"	v	typeref:typename:PFNGLFOGFPROC
glad_glFogfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFOGFVPROC glad_glFogfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFOGFVPROC
glad_glFogfv	deps/glad_gl.c	/^PFNGLFOGFVPROC glad_glFogfv = NULL;$/;"	v	typeref:typename:PFNGLFOGFVPROC
glad_glFogi	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFOGIPROC glad_glFogi;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFOGIPROC
glad_glFogi	deps/glad_gl.c	/^PFNGLFOGIPROC glad_glFogi = NULL;$/;"	v	typeref:typename:PFNGLFOGIPROC
glad_glFogiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFOGIVPROC glad_glFogiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFOGIVPROC
glad_glFogiv	deps/glad_gl.c	/^PFNGLFOGIVPROC glad_glFogiv = NULL;$/;"	v	typeref:typename:PFNGLFOGIVPROC
glad_glFramebufferRenderbuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFRAMEBUFFERRENDERBUFFERPROC
glad_glFramebufferRenderbuffer	deps/glad_gl.c	/^PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer = NULL;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERRENDERBUFFERPROC
glad_glFramebufferTexture	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFRAMEBUFFERTEXTUREPROC
glad_glFramebufferTexture	deps/glad_gl.c	/^PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture = NULL;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTUREPROC
glad_glFramebufferTexture1D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE1DPROC
glad_glFramebufferTexture1D	deps/glad_gl.c	/^PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D = NULL;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE1DPROC
glad_glFramebufferTexture2D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE2DPROC
glad_glFramebufferTexture2D	deps/glad_gl.c	/^PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D = NULL;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE2DPROC
glad_glFramebufferTexture3D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE3DPROC
glad_glFramebufferTexture3D	deps/glad_gl.c	/^PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D = NULL;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE3DPROC
glad_glFramebufferTextureLayer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURELAYERPROC
glad_glFramebufferTextureLayer	deps/glad_gl.c	/^PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer = NULL;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURELAYERPROC
glad_glFrontFace	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFRONTFACEPROC glad_glFrontFace;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFRONTFACEPROC
glad_glFrontFace	deps/glad_gl.c	/^PFNGLFRONTFACEPROC glad_glFrontFace = NULL;$/;"	v	typeref:typename:PFNGLFRONTFACEPROC
glad_glFrustum	deps/glad/gl.h	/^GLAD_API_CALL PFNGLFRUSTUMPROC glad_glFrustum;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLFRUSTUMPROC
glad_glFrustum	deps/glad_gl.c	/^PFNGLFRUSTUMPROC glad_glFrustum = NULL;$/;"	v	typeref:typename:PFNGLFRUSTUMPROC
glad_glGenBuffers	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGENBUFFERSPROC glad_glGenBuffers;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGENBUFFERSPROC
glad_glGenBuffers	deps/glad_gl.c	/^PFNGLGENBUFFERSPROC glad_glGenBuffers = NULL;$/;"	v	typeref:typename:PFNGLGENBUFFERSPROC
glad_glGenFramebuffers	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGENFRAMEBUFFERSPROC
glad_glGenFramebuffers	deps/glad_gl.c	/^PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers = NULL;$/;"	v	typeref:typename:PFNGLGENFRAMEBUFFERSPROC
glad_glGenLists	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGENLISTSPROC glad_glGenLists;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGENLISTSPROC
glad_glGenLists	deps/glad_gl.c	/^PFNGLGENLISTSPROC glad_glGenLists = NULL;$/;"	v	typeref:typename:PFNGLGENLISTSPROC
glad_glGenQueries	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGENQUERIESPROC glad_glGenQueries;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGENQUERIESPROC
glad_glGenQueries	deps/glad_gl.c	/^PFNGLGENQUERIESPROC glad_glGenQueries = NULL;$/;"	v	typeref:typename:PFNGLGENQUERIESPROC
glad_glGenRenderbuffers	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGENRENDERBUFFERSPROC
glad_glGenRenderbuffers	deps/glad_gl.c	/^PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers = NULL;$/;"	v	typeref:typename:PFNGLGENRENDERBUFFERSPROC
glad_glGenSamplers	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGENSAMPLERSPROC glad_glGenSamplers;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGENSAMPLERSPROC
glad_glGenSamplers	deps/glad_gl.c	/^PFNGLGENSAMPLERSPROC glad_glGenSamplers = NULL;$/;"	v	typeref:typename:PFNGLGENSAMPLERSPROC
glad_glGenTextures	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGENTEXTURESPROC glad_glGenTextures;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGENTEXTURESPROC
glad_glGenTextures	deps/glad_gl.c	/^PFNGLGENTEXTURESPROC glad_glGenTextures = NULL;$/;"	v	typeref:typename:PFNGLGENTEXTURESPROC
glad_glGenVertexArrays	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGENVERTEXARRAYSPROC
glad_glGenVertexArrays	deps/glad_gl.c	/^PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays = NULL;$/;"	v	typeref:typename:PFNGLGENVERTEXARRAYSPROC
glad_glGenerateMipmap	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGENERATEMIPMAPPROC
glad_glGenerateMipmap	deps/glad_gl.c	/^PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap = NULL;$/;"	v	typeref:typename:PFNGLGENERATEMIPMAPPROC
glad_glGetActiveAttrib	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETACTIVEATTRIBPROC
glad_glGetActiveAttrib	deps/glad_gl.c	/^PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib = NULL;$/;"	v	typeref:typename:PFNGLGETACTIVEATTRIBPROC
glad_glGetActiveUniform	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETACTIVEUNIFORMPROC
glad_glGetActiveUniform	deps/glad_gl.c	/^PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform = NULL;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMPROC
glad_glGetActiveUniformBlockName	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
glad_glGetActiveUniformBlockName	deps/glad_gl.c	/^PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName = NULL;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
glad_glGetActiveUniformBlockiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETACTIVEUNIFORMBLOCKIVPROC
glad_glGetActiveUniformBlockiv	deps/glad_gl.c	/^PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv = NULL;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMBLOCKIVPROC
glad_glGetActiveUniformName	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETACTIVEUNIFORMNAMEPROC
glad_glGetActiveUniformName	deps/glad_gl.c	/^PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName = NULL;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMNAMEPROC
glad_glGetActiveUniformsiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETACTIVEUNIFORMSIVPROC
glad_glGetActiveUniformsiv	deps/glad_gl.c	/^PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv = NULL;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMSIVPROC
glad_glGetAttachedShaders	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETATTACHEDSHADERSPROC
glad_glGetAttachedShaders	deps/glad_gl.c	/^PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders = NULL;$/;"	v	typeref:typename:PFNGLGETATTACHEDSHADERSPROC
glad_glGetAttribLocation	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETATTRIBLOCATIONPROC
glad_glGetAttribLocation	deps/glad_gl.c	/^PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation = NULL;$/;"	v	typeref:typename:PFNGLGETATTRIBLOCATIONPROC
glad_glGetBooleani_v	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETBOOLEANI_VPROC
glad_glGetBooleani_v	deps/glad_gl.c	/^PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v = NULL;$/;"	v	typeref:typename:PFNGLGETBOOLEANI_VPROC
glad_glGetBooleanv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETBOOLEANVPROC glad_glGetBooleanv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETBOOLEANVPROC
glad_glGetBooleanv	deps/glad_gl.c	/^PFNGLGETBOOLEANVPROC glad_glGetBooleanv = NULL;$/;"	v	typeref:typename:PFNGLGETBOOLEANVPROC
glad_glGetBufferParameteri64v	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETBUFFERPARAMETERI64VPROC
glad_glGetBufferParameteri64v	deps/glad_gl.c	/^PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v = NULL;$/;"	v	typeref:typename:PFNGLGETBUFFERPARAMETERI64VPROC
glad_glGetBufferParameteriv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETBUFFERPARAMETERIVPROC
glad_glGetBufferParameteriv	deps/glad_gl.c	/^PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv = NULL;$/;"	v	typeref:typename:PFNGLGETBUFFERPARAMETERIVPROC
glad_glGetBufferPointerv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETBUFFERPOINTERVPROC
glad_glGetBufferPointerv	deps/glad_gl.c	/^PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv = NULL;$/;"	v	typeref:typename:PFNGLGETBUFFERPOINTERVPROC
glad_glGetBufferSubData	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETBUFFERSUBDATAPROC
glad_glGetBufferSubData	deps/glad_gl.c	/^PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData = NULL;$/;"	v	typeref:typename:PFNGLGETBUFFERSUBDATAPROC
glad_glGetClipPlane	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETCLIPPLANEPROC glad_glGetClipPlane;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETCLIPPLANEPROC
glad_glGetClipPlane	deps/glad_gl.c	/^PFNGLGETCLIPPLANEPROC glad_glGetClipPlane = NULL;$/;"	v	typeref:typename:PFNGLGETCLIPPLANEPROC
glad_glGetCompressedTexImage	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETCOMPRESSEDTEXIMAGEPROC
glad_glGetCompressedTexImage	deps/glad_gl.c	/^PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage = NULL;$/;"	v	typeref:typename:PFNGLGETCOMPRESSEDTEXIMAGEPROC
glad_glGetDebugMessageLog	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETDEBUGMESSAGELOGPROC
glad_glGetDebugMessageLog	deps/glad_gl.c	/^PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog = NULL;$/;"	v	typeref:typename:PFNGLGETDEBUGMESSAGELOGPROC
glad_glGetDoublev	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETDOUBLEVPROC glad_glGetDoublev;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETDOUBLEVPROC
glad_glGetDoublev	deps/glad_gl.c	/^PFNGLGETDOUBLEVPROC glad_glGetDoublev = NULL;$/;"	v	typeref:typename:PFNGLGETDOUBLEVPROC
glad_glGetError	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETERRORPROC glad_glGetError;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETERRORPROC
glad_glGetError	deps/glad_gl.c	/^PFNGLGETERRORPROC glad_glGetError = NULL;$/;"	v	typeref:typename:PFNGLGETERRORPROC
glad_glGetFloatv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETFLOATVPROC glad_glGetFloatv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETFLOATVPROC
glad_glGetFloatv	deps/glad_gl.c	/^PFNGLGETFLOATVPROC glad_glGetFloatv = NULL;$/;"	v	typeref:typename:PFNGLGETFLOATVPROC
glad_glGetFragDataIndex	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETFRAGDATAINDEXPROC glad_glGetFragDataIndex;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETFRAGDATAINDEXPROC
glad_glGetFragDataIndex	deps/glad_gl.c	/^PFNGLGETFRAGDATAINDEXPROC glad_glGetFragDataIndex = NULL;$/;"	v	typeref:typename:PFNGLGETFRAGDATAINDEXPROC
glad_glGetFragDataLocation	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETFRAGDATALOCATIONPROC
glad_glGetFragDataLocation	deps/glad_gl.c	/^PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation = NULL;$/;"	v	typeref:typename:PFNGLGETFRAGDATALOCATIONPROC
glad_glGetFramebufferAttachmentParameteriv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetFramebufferAttachmentParame/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
glad_glGetFramebufferAttachmentParameteriv	deps/glad_gl.c	/^PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetFramebufferAttachmentParameteriv = NULL;$/;"	v	typeref:typename:PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
glad_glGetGraphicsResetStatusARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_glGetGraphicsResetStatusARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETGRAPHICSRESETSTATUSARBPROC
glad_glGetGraphicsResetStatusARB	deps/glad_gl.c	/^PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_glGetGraphicsResetStatusARB = NULL;$/;"	v	typeref:typename:PFNGLGETGRAPHICSRESETSTATUSARBPROC
glad_glGetInteger64i_v	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETINTEGER64I_VPROC
glad_glGetInteger64i_v	deps/glad_gl.c	/^PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v = NULL;$/;"	v	typeref:typename:PFNGLGETINTEGER64I_VPROC
glad_glGetInteger64v	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETINTEGER64VPROC glad_glGetInteger64v;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETINTEGER64VPROC
glad_glGetInteger64v	deps/glad_gl.c	/^PFNGLGETINTEGER64VPROC glad_glGetInteger64v = NULL;$/;"	v	typeref:typename:PFNGLGETINTEGER64VPROC
glad_glGetIntegeri_v	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETINTEGERI_VPROC
glad_glGetIntegeri_v	deps/glad_gl.c	/^PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v = NULL;$/;"	v	typeref:typename:PFNGLGETINTEGERI_VPROC
glad_glGetIntegerv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETINTEGERVPROC glad_glGetIntegerv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETINTEGERVPROC
glad_glGetIntegerv	deps/glad_gl.c	/^PFNGLGETINTEGERVPROC glad_glGetIntegerv = NULL;$/;"	v	typeref:typename:PFNGLGETINTEGERVPROC
glad_glGetLightfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETLIGHTFVPROC glad_glGetLightfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETLIGHTFVPROC
glad_glGetLightfv	deps/glad_gl.c	/^PFNGLGETLIGHTFVPROC glad_glGetLightfv = NULL;$/;"	v	typeref:typename:PFNGLGETLIGHTFVPROC
glad_glGetLightiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETLIGHTIVPROC glad_glGetLightiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETLIGHTIVPROC
glad_glGetLightiv	deps/glad_gl.c	/^PFNGLGETLIGHTIVPROC glad_glGetLightiv = NULL;$/;"	v	typeref:typename:PFNGLGETLIGHTIVPROC
glad_glGetMapdv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETMAPDVPROC glad_glGetMapdv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETMAPDVPROC
glad_glGetMapdv	deps/glad_gl.c	/^PFNGLGETMAPDVPROC glad_glGetMapdv = NULL;$/;"	v	typeref:typename:PFNGLGETMAPDVPROC
glad_glGetMapfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETMAPFVPROC glad_glGetMapfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETMAPFVPROC
glad_glGetMapfv	deps/glad_gl.c	/^PFNGLGETMAPFVPROC glad_glGetMapfv = NULL;$/;"	v	typeref:typename:PFNGLGETMAPFVPROC
glad_glGetMapiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETMAPIVPROC glad_glGetMapiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETMAPIVPROC
glad_glGetMapiv	deps/glad_gl.c	/^PFNGLGETMAPIVPROC glad_glGetMapiv = NULL;$/;"	v	typeref:typename:PFNGLGETMAPIVPROC
glad_glGetMaterialfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETMATERIALFVPROC glad_glGetMaterialfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETMATERIALFVPROC
glad_glGetMaterialfv	deps/glad_gl.c	/^PFNGLGETMATERIALFVPROC glad_glGetMaterialfv = NULL;$/;"	v	typeref:typename:PFNGLGETMATERIALFVPROC
glad_glGetMaterialiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETMATERIALIVPROC glad_glGetMaterialiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETMATERIALIVPROC
glad_glGetMaterialiv	deps/glad_gl.c	/^PFNGLGETMATERIALIVPROC glad_glGetMaterialiv = NULL;$/;"	v	typeref:typename:PFNGLGETMATERIALIVPROC
glad_glGetMultisamplefv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETMULTISAMPLEFVPROC
glad_glGetMultisamplefv	deps/glad_gl.c	/^PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv = NULL;$/;"	v	typeref:typename:PFNGLGETMULTISAMPLEFVPROC
glad_glGetObjectLabel	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETOBJECTLABELPROC
glad_glGetObjectLabel	deps/glad_gl.c	/^PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel = NULL;$/;"	v	typeref:typename:PFNGLGETOBJECTLABELPROC
glad_glGetObjectPtrLabel	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETOBJECTPTRLABELPROC
glad_glGetObjectPtrLabel	deps/glad_gl.c	/^PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel = NULL;$/;"	v	typeref:typename:PFNGLGETOBJECTPTRLABELPROC
glad_glGetPixelMapfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETPIXELMAPFVPROC glad_glGetPixelMapfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETPIXELMAPFVPROC
glad_glGetPixelMapfv	deps/glad_gl.c	/^PFNGLGETPIXELMAPFVPROC glad_glGetPixelMapfv = NULL;$/;"	v	typeref:typename:PFNGLGETPIXELMAPFVPROC
glad_glGetPixelMapuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETPIXELMAPUIVPROC glad_glGetPixelMapuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETPIXELMAPUIVPROC
glad_glGetPixelMapuiv	deps/glad_gl.c	/^PFNGLGETPIXELMAPUIVPROC glad_glGetPixelMapuiv = NULL;$/;"	v	typeref:typename:PFNGLGETPIXELMAPUIVPROC
glad_glGetPixelMapusv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETPIXELMAPUSVPROC glad_glGetPixelMapusv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETPIXELMAPUSVPROC
glad_glGetPixelMapusv	deps/glad_gl.c	/^PFNGLGETPIXELMAPUSVPROC glad_glGetPixelMapusv = NULL;$/;"	v	typeref:typename:PFNGLGETPIXELMAPUSVPROC
glad_glGetPointerv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETPOINTERVPROC glad_glGetPointerv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETPOINTERVPROC
glad_glGetPointerv	deps/glad_gl.c	/^PFNGLGETPOINTERVPROC glad_glGetPointerv = NULL;$/;"	v	typeref:typename:PFNGLGETPOINTERVPROC
glad_glGetPolygonStipple	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETPOLYGONSTIPPLEPROC glad_glGetPolygonStipple;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETPOLYGONSTIPPLEPROC
glad_glGetPolygonStipple	deps/glad_gl.c	/^PFNGLGETPOLYGONSTIPPLEPROC glad_glGetPolygonStipple = NULL;$/;"	v	typeref:typename:PFNGLGETPOLYGONSTIPPLEPROC
glad_glGetProgramInfoLog	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETPROGRAMINFOLOGPROC
glad_glGetProgramInfoLog	deps/glad_gl.c	/^PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog = NULL;$/;"	v	typeref:typename:PFNGLGETPROGRAMINFOLOGPROC
glad_glGetProgramiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETPROGRAMIVPROC glad_glGetProgramiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETPROGRAMIVPROC
glad_glGetProgramiv	deps/glad_gl.c	/^PFNGLGETPROGRAMIVPROC glad_glGetProgramiv = NULL;$/;"	v	typeref:typename:PFNGLGETPROGRAMIVPROC
glad_glGetQueryObjecti64v	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETQUERYOBJECTI64VPROC glad_glGetQueryObjecti64v;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETQUERYOBJECTI64VPROC
glad_glGetQueryObjecti64v	deps/glad_gl.c	/^PFNGLGETQUERYOBJECTI64VPROC glad_glGetQueryObjecti64v = NULL;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTI64VPROC
glad_glGetQueryObjectiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETQUERYOBJECTIVPROC
glad_glGetQueryObjectiv	deps/glad_gl.c	/^PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv = NULL;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTIVPROC
glad_glGetQueryObjectui64v	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETQUERYOBJECTUI64VPROC glad_glGetQueryObjectui64v;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETQUERYOBJECTUI64VPROC
glad_glGetQueryObjectui64v	deps/glad_gl.c	/^PFNGLGETQUERYOBJECTUI64VPROC glad_glGetQueryObjectui64v = NULL;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTUI64VPROC
glad_glGetQueryObjectuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETQUERYOBJECTUIVPROC
glad_glGetQueryObjectuiv	deps/glad_gl.c	/^PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv = NULL;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTUIVPROC
glad_glGetQueryiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETQUERYIVPROC glad_glGetQueryiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETQUERYIVPROC
glad_glGetQueryiv	deps/glad_gl.c	/^PFNGLGETQUERYIVPROC glad_glGetQueryiv = NULL;$/;"	v	typeref:typename:PFNGLGETQUERYIVPROC
glad_glGetRenderbufferParameteriv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETRENDERBUFFERPARAMETERIVPROC
glad_glGetRenderbufferParameteriv	deps/glad_gl.c	/^PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv = NULL;$/;"	v	typeref:typename:PFNGLGETRENDERBUFFERPARAMETERIVPROC
glad_glGetSamplerParameterIiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIIVPROC glad_glGetSamplerParameterIiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIIVPROC
glad_glGetSamplerParameterIiv	deps/glad_gl.c	/^PFNGLGETSAMPLERPARAMETERIIVPROC glad_glGetSamplerParameterIiv = NULL;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIIVPROC
glad_glGetSamplerParameterIuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIUIVPROC glad_glGetSamplerParameterIuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIUIVPROC
glad_glGetSamplerParameterIuiv	deps/glad_gl.c	/^PFNGLGETSAMPLERPARAMETERIUIVPROC glad_glGetSamplerParameterIuiv = NULL;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIUIVPROC
glad_glGetSamplerParameterfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETSAMPLERPARAMETERFVPROC glad_glGetSamplerParameterfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETSAMPLERPARAMETERFVPROC
glad_glGetSamplerParameterfv	deps/glad_gl.c	/^PFNGLGETSAMPLERPARAMETERFVPROC glad_glGetSamplerParameterfv = NULL;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERFVPROC
glad_glGetSamplerParameteriv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIVPROC glad_glGetSamplerParameteriv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIVPROC
glad_glGetSamplerParameteriv	deps/glad_gl.c	/^PFNGLGETSAMPLERPARAMETERIVPROC glad_glGetSamplerParameteriv = NULL;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIVPROC
glad_glGetShaderInfoLog	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETSHADERINFOLOGPROC
glad_glGetShaderInfoLog	deps/glad_gl.c	/^PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog = NULL;$/;"	v	typeref:typename:PFNGLGETSHADERINFOLOGPROC
glad_glGetShaderSource	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETSHADERSOURCEPROC
glad_glGetShaderSource	deps/glad_gl.c	/^PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource = NULL;$/;"	v	typeref:typename:PFNGLGETSHADERSOURCEPROC
glad_glGetShaderiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETSHADERIVPROC glad_glGetShaderiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETSHADERIVPROC
glad_glGetShaderiv	deps/glad_gl.c	/^PFNGLGETSHADERIVPROC glad_glGetShaderiv = NULL;$/;"	v	typeref:typename:PFNGLGETSHADERIVPROC
glad_glGetString	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETSTRINGPROC glad_glGetString;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETSTRINGPROC
glad_glGetString	deps/glad_gl.c	/^PFNGLGETSTRINGPROC glad_glGetString = NULL;$/;"	v	typeref:typename:PFNGLGETSTRINGPROC
glad_glGetStringi	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETSTRINGIPROC glad_glGetStringi;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETSTRINGIPROC
glad_glGetStringi	deps/glad_gl.c	/^PFNGLGETSTRINGIPROC glad_glGetStringi = NULL;$/;"	v	typeref:typename:PFNGLGETSTRINGIPROC
glad_glGetSynciv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETSYNCIVPROC glad_glGetSynciv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETSYNCIVPROC
glad_glGetSynciv	deps/glad_gl.c	/^PFNGLGETSYNCIVPROC glad_glGetSynciv = NULL;$/;"	v	typeref:typename:PFNGLGETSYNCIVPROC
glad_glGetTexEnvfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXENVFVPROC glad_glGetTexEnvfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXENVFVPROC
glad_glGetTexEnvfv	deps/glad_gl.c	/^PFNGLGETTEXENVFVPROC glad_glGetTexEnvfv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXENVFVPROC
glad_glGetTexEnviv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXENVIVPROC glad_glGetTexEnviv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXENVIVPROC
glad_glGetTexEnviv	deps/glad_gl.c	/^PFNGLGETTEXENVIVPROC glad_glGetTexEnviv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXENVIVPROC
glad_glGetTexGendv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXGENDVPROC glad_glGetTexGendv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXGENDVPROC
glad_glGetTexGendv	deps/glad_gl.c	/^PFNGLGETTEXGENDVPROC glad_glGetTexGendv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXGENDVPROC
glad_glGetTexGenfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXGENFVPROC glad_glGetTexGenfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXGENFVPROC
glad_glGetTexGenfv	deps/glad_gl.c	/^PFNGLGETTEXGENFVPROC glad_glGetTexGenfv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXGENFVPROC
glad_glGetTexGeniv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXGENIVPROC glad_glGetTexGeniv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXGENIVPROC
glad_glGetTexGeniv	deps/glad_gl.c	/^PFNGLGETTEXGENIVPROC glad_glGetTexGeniv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXGENIVPROC
glad_glGetTexImage	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXIMAGEPROC glad_glGetTexImage;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXIMAGEPROC
glad_glGetTexImage	deps/glad_gl.c	/^PFNGLGETTEXIMAGEPROC glad_glGetTexImage = NULL;$/;"	v	typeref:typename:PFNGLGETTEXIMAGEPROC
glad_glGetTexLevelParameterfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXLEVELPARAMETERFVPROC
glad_glGetTexLevelParameterfv	deps/glad_gl.c	/^PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXLEVELPARAMETERFVPROC
glad_glGetTexLevelParameteriv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXLEVELPARAMETERIVPROC
glad_glGetTexLevelParameteriv	deps/glad_gl.c	/^PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXLEVELPARAMETERIVPROC
glad_glGetTexParameterIiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXPARAMETERIIVPROC
glad_glGetTexParameterIiv	deps/glad_gl.c	/^PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIIVPROC
glad_glGetTexParameterIuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXPARAMETERIUIVPROC
glad_glGetTexParameterIuiv	deps/glad_gl.c	/^PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIUIVPROC
glad_glGetTexParameterfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXPARAMETERFVPROC
glad_glGetTexParameterfv	deps/glad_gl.c	/^PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERFVPROC
glad_glGetTexParameteriv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTEXPARAMETERIVPROC
glad_glGetTexParameteriv	deps/glad_gl.c	/^PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv = NULL;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIVPROC
glad_glGetTransformFeedbackVarying	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
glad_glGetTransformFeedbackVarying	deps/glad_gl.c	/^PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying = NULL;$/;"	v	typeref:typename:PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
glad_glGetUniformBlockIndex	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETUNIFORMBLOCKINDEXPROC
glad_glGetUniformBlockIndex	deps/glad_gl.c	/^PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex = NULL;$/;"	v	typeref:typename:PFNGLGETUNIFORMBLOCKINDEXPROC
glad_glGetUniformIndices	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETUNIFORMINDICESPROC
glad_glGetUniformIndices	deps/glad_gl.c	/^PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices = NULL;$/;"	v	typeref:typename:PFNGLGETUNIFORMINDICESPROC
glad_glGetUniformLocation	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETUNIFORMLOCATIONPROC
glad_glGetUniformLocation	deps/glad_gl.c	/^PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation = NULL;$/;"	v	typeref:typename:PFNGLGETUNIFORMLOCATIONPROC
glad_glGetUniformfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETUNIFORMFVPROC glad_glGetUniformfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETUNIFORMFVPROC
glad_glGetUniformfv	deps/glad_gl.c	/^PFNGLGETUNIFORMFVPROC glad_glGetUniformfv = NULL;$/;"	v	typeref:typename:PFNGLGETUNIFORMFVPROC
glad_glGetUniformiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETUNIFORMIVPROC glad_glGetUniformiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETUNIFORMIVPROC
glad_glGetUniformiv	deps/glad_gl.c	/^PFNGLGETUNIFORMIVPROC glad_glGetUniformiv = NULL;$/;"	v	typeref:typename:PFNGLGETUNIFORMIVPROC
glad_glGetUniformuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETUNIFORMUIVPROC
glad_glGetUniformuiv	deps/glad_gl.c	/^PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv = NULL;$/;"	v	typeref:typename:PFNGLGETUNIFORMUIVPROC
glad_glGetVertexAttribIiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETVERTEXATTRIBIIVPROC
glad_glGetVertexAttribIiv	deps/glad_gl.c	/^PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv = NULL;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIIVPROC
glad_glGetVertexAttribIuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETVERTEXATTRIBIUIVPROC
glad_glGetVertexAttribIuiv	deps/glad_gl.c	/^PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv = NULL;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIUIVPROC
glad_glGetVertexAttribPointerv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETVERTEXATTRIBPOINTERVPROC
glad_glGetVertexAttribPointerv	deps/glad_gl.c	/^PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv = NULL;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBPOINTERVPROC
glad_glGetVertexAttribdv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETVERTEXATTRIBDVPROC
glad_glGetVertexAttribdv	deps/glad_gl.c	/^PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv = NULL;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBDVPROC
glad_glGetVertexAttribfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETVERTEXATTRIBFVPROC
glad_glGetVertexAttribfv	deps/glad_gl.c	/^PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv = NULL;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBFVPROC
glad_glGetVertexAttribiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETVERTEXATTRIBIVPROC
glad_glGetVertexAttribiv	deps/glad_gl.c	/^PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv = NULL;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIVPROC
glad_glGetnColorTableARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNCOLORTABLEARBPROC glad_glGetnColorTableARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNCOLORTABLEARBPROC
glad_glGetnColorTableARB	deps/glad_gl.c	/^PFNGLGETNCOLORTABLEARBPROC glad_glGetnColorTableARB = NULL;$/;"	v	typeref:typename:PFNGLGETNCOLORTABLEARBPROC
glad_glGetnCompressedTexImageARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_glGetnCompressedTexImageARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
glad_glGetnCompressedTexImageARB	deps/glad_gl.c	/^PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_glGetnCompressedTexImageARB = NULL;$/;"	v	typeref:typename:PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
glad_glGetnConvolutionFilterARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNCONVOLUTIONFILTERARBPROC glad_glGetnConvolutionFilterARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNCONVOLUTIONFILTERARBPROC
glad_glGetnConvolutionFilterARB	deps/glad_gl.c	/^PFNGLGETNCONVOLUTIONFILTERARBPROC glad_glGetnConvolutionFilterARB = NULL;$/;"	v	typeref:typename:PFNGLGETNCONVOLUTIONFILTERARBPROC
glad_glGetnHistogramARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNHISTOGRAMARBPROC glad_glGetnHistogramARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNHISTOGRAMARBPROC
glad_glGetnHistogramARB	deps/glad_gl.c	/^PFNGLGETNHISTOGRAMARBPROC glad_glGetnHistogramARB = NULL;$/;"	v	typeref:typename:PFNGLGETNHISTOGRAMARBPROC
glad_glGetnMapdvARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNMAPDVARBPROC glad_glGetnMapdvARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNMAPDVARBPROC
glad_glGetnMapdvARB	deps/glad_gl.c	/^PFNGLGETNMAPDVARBPROC glad_glGetnMapdvARB = NULL;$/;"	v	typeref:typename:PFNGLGETNMAPDVARBPROC
glad_glGetnMapfvARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNMAPFVARBPROC glad_glGetnMapfvARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNMAPFVARBPROC
glad_glGetnMapfvARB	deps/glad_gl.c	/^PFNGLGETNMAPFVARBPROC glad_glGetnMapfvARB = NULL;$/;"	v	typeref:typename:PFNGLGETNMAPFVARBPROC
glad_glGetnMapivARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNMAPIVARBPROC glad_glGetnMapivARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNMAPIVARBPROC
glad_glGetnMapivARB	deps/glad_gl.c	/^PFNGLGETNMAPIVARBPROC glad_glGetnMapivARB = NULL;$/;"	v	typeref:typename:PFNGLGETNMAPIVARBPROC
glad_glGetnMinmaxARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNMINMAXARBPROC glad_glGetnMinmaxARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNMINMAXARBPROC
glad_glGetnMinmaxARB	deps/glad_gl.c	/^PFNGLGETNMINMAXARBPROC glad_glGetnMinmaxARB = NULL;$/;"	v	typeref:typename:PFNGLGETNMINMAXARBPROC
glad_glGetnPixelMapfvARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNPIXELMAPFVARBPROC glad_glGetnPixelMapfvARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNPIXELMAPFVARBPROC
glad_glGetnPixelMapfvARB	deps/glad_gl.c	/^PFNGLGETNPIXELMAPFVARBPROC glad_glGetnPixelMapfvARB = NULL;$/;"	v	typeref:typename:PFNGLGETNPIXELMAPFVARBPROC
glad_glGetnPixelMapuivARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNPIXELMAPUIVARBPROC glad_glGetnPixelMapuivARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNPIXELMAPUIVARBPROC
glad_glGetnPixelMapuivARB	deps/glad_gl.c	/^PFNGLGETNPIXELMAPUIVARBPROC glad_glGetnPixelMapuivARB = NULL;$/;"	v	typeref:typename:PFNGLGETNPIXELMAPUIVARBPROC
glad_glGetnPixelMapusvARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNPIXELMAPUSVARBPROC glad_glGetnPixelMapusvARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNPIXELMAPUSVARBPROC
glad_glGetnPixelMapusvARB	deps/glad_gl.c	/^PFNGLGETNPIXELMAPUSVARBPROC glad_glGetnPixelMapusvARB = NULL;$/;"	v	typeref:typename:PFNGLGETNPIXELMAPUSVARBPROC
glad_glGetnPolygonStippleARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNPOLYGONSTIPPLEARBPROC glad_glGetnPolygonStippleARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNPOLYGONSTIPPLEARBPROC
glad_glGetnPolygonStippleARB	deps/glad_gl.c	/^PFNGLGETNPOLYGONSTIPPLEARBPROC glad_glGetnPolygonStippleARB = NULL;$/;"	v	typeref:typename:PFNGLGETNPOLYGONSTIPPLEARBPROC
glad_glGetnSeparableFilterARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNSEPARABLEFILTERARBPROC glad_glGetnSeparableFilterARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNSEPARABLEFILTERARBPROC
glad_glGetnSeparableFilterARB	deps/glad_gl.c	/^PFNGLGETNSEPARABLEFILTERARBPROC glad_glGetnSeparableFilterARB = NULL;$/;"	v	typeref:typename:PFNGLGETNSEPARABLEFILTERARBPROC
glad_glGetnTexImageARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNTEXIMAGEARBPROC glad_glGetnTexImageARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNTEXIMAGEARBPROC
glad_glGetnTexImageARB	deps/glad_gl.c	/^PFNGLGETNTEXIMAGEARBPROC glad_glGetnTexImageARB = NULL;$/;"	v	typeref:typename:PFNGLGETNTEXIMAGEARBPROC
glad_glGetnUniformdvARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNUNIFORMDVARBPROC glad_glGetnUniformdvARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNUNIFORMDVARBPROC
glad_glGetnUniformdvARB	deps/glad_gl.c	/^PFNGLGETNUNIFORMDVARBPROC glad_glGetnUniformdvARB = NULL;$/;"	v	typeref:typename:PFNGLGETNUNIFORMDVARBPROC
glad_glGetnUniformfvARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNUNIFORMFVARBPROC glad_glGetnUniformfvARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNUNIFORMFVARBPROC
glad_glGetnUniformfvARB	deps/glad_gl.c	/^PFNGLGETNUNIFORMFVARBPROC glad_glGetnUniformfvARB = NULL;$/;"	v	typeref:typename:PFNGLGETNUNIFORMFVARBPROC
glad_glGetnUniformivARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNUNIFORMIVARBPROC glad_glGetnUniformivARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNUNIFORMIVARBPROC
glad_glGetnUniformivARB	deps/glad_gl.c	/^PFNGLGETNUNIFORMIVARBPROC glad_glGetnUniformivARB = NULL;$/;"	v	typeref:typename:PFNGLGETNUNIFORMIVARBPROC
glad_glGetnUniformuivARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLGETNUNIFORMUIVARBPROC glad_glGetnUniformuivARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLGETNUNIFORMUIVARBPROC
glad_glGetnUniformuivARB	deps/glad_gl.c	/^PFNGLGETNUNIFORMUIVARBPROC glad_glGetnUniformuivARB = NULL;$/;"	v	typeref:typename:PFNGLGETNUNIFORMUIVARBPROC
glad_glHint	deps/glad/gl.h	/^GLAD_API_CALL PFNGLHINTPROC glad_glHint;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLHINTPROC
glad_glHint	deps/glad_gl.c	/^PFNGLHINTPROC glad_glHint = NULL;$/;"	v	typeref:typename:PFNGLHINTPROC
glad_glIndexMask	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXMASKPROC glad_glIndexMask;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXMASKPROC
glad_glIndexMask	deps/glad_gl.c	/^PFNGLINDEXMASKPROC glad_glIndexMask = NULL;$/;"	v	typeref:typename:PFNGLINDEXMASKPROC
glad_glIndexPointer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXPOINTERPROC glad_glIndexPointer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXPOINTERPROC
glad_glIndexPointer	deps/glad_gl.c	/^PFNGLINDEXPOINTERPROC glad_glIndexPointer = NULL;$/;"	v	typeref:typename:PFNGLINDEXPOINTERPROC
glad_glIndexd	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXDPROC glad_glIndexd;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXDPROC
glad_glIndexd	deps/glad_gl.c	/^PFNGLINDEXDPROC glad_glIndexd = NULL;$/;"	v	typeref:typename:PFNGLINDEXDPROC
glad_glIndexdv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXDVPROC glad_glIndexdv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXDVPROC
glad_glIndexdv	deps/glad_gl.c	/^PFNGLINDEXDVPROC glad_glIndexdv = NULL;$/;"	v	typeref:typename:PFNGLINDEXDVPROC
glad_glIndexf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXFPROC glad_glIndexf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXFPROC
glad_glIndexf	deps/glad_gl.c	/^PFNGLINDEXFPROC glad_glIndexf = NULL;$/;"	v	typeref:typename:PFNGLINDEXFPROC
glad_glIndexfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXFVPROC glad_glIndexfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXFVPROC
glad_glIndexfv	deps/glad_gl.c	/^PFNGLINDEXFVPROC glad_glIndexfv = NULL;$/;"	v	typeref:typename:PFNGLINDEXFVPROC
glad_glIndexi	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXIPROC glad_glIndexi;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXIPROC
glad_glIndexi	deps/glad_gl.c	/^PFNGLINDEXIPROC glad_glIndexi = NULL;$/;"	v	typeref:typename:PFNGLINDEXIPROC
glad_glIndexiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXIVPROC glad_glIndexiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXIVPROC
glad_glIndexiv	deps/glad_gl.c	/^PFNGLINDEXIVPROC glad_glIndexiv = NULL;$/;"	v	typeref:typename:PFNGLINDEXIVPROC
glad_glIndexs	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXSPROC glad_glIndexs;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXSPROC
glad_glIndexs	deps/glad_gl.c	/^PFNGLINDEXSPROC glad_glIndexs = NULL;$/;"	v	typeref:typename:PFNGLINDEXSPROC
glad_glIndexsv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXSVPROC glad_glIndexsv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXSVPROC
glad_glIndexsv	deps/glad_gl.c	/^PFNGLINDEXSVPROC glad_glIndexsv = NULL;$/;"	v	typeref:typename:PFNGLINDEXSVPROC
glad_glIndexub	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXUBPROC glad_glIndexub;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXUBPROC
glad_glIndexub	deps/glad_gl.c	/^PFNGLINDEXUBPROC glad_glIndexub = NULL;$/;"	v	typeref:typename:PFNGLINDEXUBPROC
glad_glIndexubv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINDEXUBVPROC glad_glIndexubv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINDEXUBVPROC
glad_glIndexubv	deps/glad_gl.c	/^PFNGLINDEXUBVPROC glad_glIndexubv = NULL;$/;"	v	typeref:typename:PFNGLINDEXUBVPROC
glad_glInitNames	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINITNAMESPROC glad_glInitNames;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINITNAMESPROC
glad_glInitNames	deps/glad_gl.c	/^PFNGLINITNAMESPROC glad_glInitNames = NULL;$/;"	v	typeref:typename:PFNGLINITNAMESPROC
glad_glInterleavedArrays	deps/glad/gl.h	/^GLAD_API_CALL PFNGLINTERLEAVEDARRAYSPROC glad_glInterleavedArrays;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLINTERLEAVEDARRAYSPROC
glad_glInterleavedArrays	deps/glad_gl.c	/^PFNGLINTERLEAVEDARRAYSPROC glad_glInterleavedArrays = NULL;$/;"	v	typeref:typename:PFNGLINTERLEAVEDARRAYSPROC
glad_glIsBuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISBUFFERPROC glad_glIsBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISBUFFERPROC
glad_glIsBuffer	deps/glad_gl.c	/^PFNGLISBUFFERPROC glad_glIsBuffer = NULL;$/;"	v	typeref:typename:PFNGLISBUFFERPROC
glad_glIsEnabled	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISENABLEDPROC glad_glIsEnabled;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISENABLEDPROC
glad_glIsEnabled	deps/glad_gl.c	/^PFNGLISENABLEDPROC glad_glIsEnabled = NULL;$/;"	v	typeref:typename:PFNGLISENABLEDPROC
glad_glIsEnabledi	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISENABLEDIPROC glad_glIsEnabledi;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISENABLEDIPROC
glad_glIsEnabledi	deps/glad_gl.c	/^PFNGLISENABLEDIPROC glad_glIsEnabledi = NULL;$/;"	v	typeref:typename:PFNGLISENABLEDIPROC
glad_glIsFramebuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISFRAMEBUFFERPROC
glad_glIsFramebuffer	deps/glad_gl.c	/^PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer = NULL;$/;"	v	typeref:typename:PFNGLISFRAMEBUFFERPROC
glad_glIsList	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISLISTPROC glad_glIsList;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISLISTPROC
glad_glIsList	deps/glad_gl.c	/^PFNGLISLISTPROC glad_glIsList = NULL;$/;"	v	typeref:typename:PFNGLISLISTPROC
glad_glIsProgram	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISPROGRAMPROC glad_glIsProgram;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISPROGRAMPROC
glad_glIsProgram	deps/glad_gl.c	/^PFNGLISPROGRAMPROC glad_glIsProgram = NULL;$/;"	v	typeref:typename:PFNGLISPROGRAMPROC
glad_glIsQuery	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISQUERYPROC glad_glIsQuery;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISQUERYPROC
glad_glIsQuery	deps/glad_gl.c	/^PFNGLISQUERYPROC glad_glIsQuery = NULL;$/;"	v	typeref:typename:PFNGLISQUERYPROC
glad_glIsRenderbuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISRENDERBUFFERPROC
glad_glIsRenderbuffer	deps/glad_gl.c	/^PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer = NULL;$/;"	v	typeref:typename:PFNGLISRENDERBUFFERPROC
glad_glIsSampler	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISSAMPLERPROC glad_glIsSampler;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISSAMPLERPROC
glad_glIsSampler	deps/glad_gl.c	/^PFNGLISSAMPLERPROC glad_glIsSampler = NULL;$/;"	v	typeref:typename:PFNGLISSAMPLERPROC
glad_glIsShader	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISSHADERPROC glad_glIsShader;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISSHADERPROC
glad_glIsShader	deps/glad_gl.c	/^PFNGLISSHADERPROC glad_glIsShader = NULL;$/;"	v	typeref:typename:PFNGLISSHADERPROC
glad_glIsSync	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISSYNCPROC glad_glIsSync;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISSYNCPROC
glad_glIsSync	deps/glad_gl.c	/^PFNGLISSYNCPROC glad_glIsSync = NULL;$/;"	v	typeref:typename:PFNGLISSYNCPROC
glad_glIsTexture	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISTEXTUREPROC glad_glIsTexture;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISTEXTUREPROC
glad_glIsTexture	deps/glad_gl.c	/^PFNGLISTEXTUREPROC glad_glIsTexture = NULL;$/;"	v	typeref:typename:PFNGLISTEXTUREPROC
glad_glIsVertexArray	deps/glad/gl.h	/^GLAD_API_CALL PFNGLISVERTEXARRAYPROC glad_glIsVertexArray;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLISVERTEXARRAYPROC
glad_glIsVertexArray	deps/glad_gl.c	/^PFNGLISVERTEXARRAYPROC glad_glIsVertexArray = NULL;$/;"	v	typeref:typename:PFNGLISVERTEXARRAYPROC
glad_glLightModelf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLIGHTMODELFPROC glad_glLightModelf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLIGHTMODELFPROC
glad_glLightModelf	deps/glad_gl.c	/^PFNGLLIGHTMODELFPROC glad_glLightModelf = NULL;$/;"	v	typeref:typename:PFNGLLIGHTMODELFPROC
glad_glLightModelfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLIGHTMODELFVPROC glad_glLightModelfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLIGHTMODELFVPROC
glad_glLightModelfv	deps/glad_gl.c	/^PFNGLLIGHTMODELFVPROC glad_glLightModelfv = NULL;$/;"	v	typeref:typename:PFNGLLIGHTMODELFVPROC
glad_glLightModeli	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLIGHTMODELIPROC glad_glLightModeli;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLIGHTMODELIPROC
glad_glLightModeli	deps/glad_gl.c	/^PFNGLLIGHTMODELIPROC glad_glLightModeli = NULL;$/;"	v	typeref:typename:PFNGLLIGHTMODELIPROC
glad_glLightModeliv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLIGHTMODELIVPROC glad_glLightModeliv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLIGHTMODELIVPROC
glad_glLightModeliv	deps/glad_gl.c	/^PFNGLLIGHTMODELIVPROC glad_glLightModeliv = NULL;$/;"	v	typeref:typename:PFNGLLIGHTMODELIVPROC
glad_glLightf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLIGHTFPROC glad_glLightf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLIGHTFPROC
glad_glLightf	deps/glad_gl.c	/^PFNGLLIGHTFPROC glad_glLightf = NULL;$/;"	v	typeref:typename:PFNGLLIGHTFPROC
glad_glLightfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLIGHTFVPROC glad_glLightfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLIGHTFVPROC
glad_glLightfv	deps/glad_gl.c	/^PFNGLLIGHTFVPROC glad_glLightfv = NULL;$/;"	v	typeref:typename:PFNGLLIGHTFVPROC
glad_glLighti	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLIGHTIPROC glad_glLighti;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLIGHTIPROC
glad_glLighti	deps/glad_gl.c	/^PFNGLLIGHTIPROC glad_glLighti = NULL;$/;"	v	typeref:typename:PFNGLLIGHTIPROC
glad_glLightiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLIGHTIVPROC glad_glLightiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLIGHTIVPROC
glad_glLightiv	deps/glad_gl.c	/^PFNGLLIGHTIVPROC glad_glLightiv = NULL;$/;"	v	typeref:typename:PFNGLLIGHTIVPROC
glad_glLineStipple	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLINESTIPPLEPROC glad_glLineStipple;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLINESTIPPLEPROC
glad_glLineStipple	deps/glad_gl.c	/^PFNGLLINESTIPPLEPROC glad_glLineStipple = NULL;$/;"	v	typeref:typename:PFNGLLINESTIPPLEPROC
glad_glLineWidth	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLINEWIDTHPROC glad_glLineWidth;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLINEWIDTHPROC
glad_glLineWidth	deps/glad_gl.c	/^PFNGLLINEWIDTHPROC glad_glLineWidth = NULL;$/;"	v	typeref:typename:PFNGLLINEWIDTHPROC
glad_glLinkProgram	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLINKPROGRAMPROC glad_glLinkProgram;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLINKPROGRAMPROC
glad_glLinkProgram	deps/glad_gl.c	/^PFNGLLINKPROGRAMPROC glad_glLinkProgram = NULL;$/;"	v	typeref:typename:PFNGLLINKPROGRAMPROC
glad_glListBase	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLISTBASEPROC glad_glListBase;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLISTBASEPROC
glad_glListBase	deps/glad_gl.c	/^PFNGLLISTBASEPROC glad_glListBase = NULL;$/;"	v	typeref:typename:PFNGLLISTBASEPROC
glad_glLoadIdentity	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLOADIDENTITYPROC glad_glLoadIdentity;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLOADIDENTITYPROC
glad_glLoadIdentity	deps/glad_gl.c	/^PFNGLLOADIDENTITYPROC glad_glLoadIdentity = NULL;$/;"	v	typeref:typename:PFNGLLOADIDENTITYPROC
glad_glLoadMatrixd	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLOADMATRIXDPROC glad_glLoadMatrixd;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLOADMATRIXDPROC
glad_glLoadMatrixd	deps/glad_gl.c	/^PFNGLLOADMATRIXDPROC glad_glLoadMatrixd = NULL;$/;"	v	typeref:typename:PFNGLLOADMATRIXDPROC
glad_glLoadMatrixf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLOADMATRIXFPROC glad_glLoadMatrixf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLOADMATRIXFPROC
glad_glLoadMatrixf	deps/glad_gl.c	/^PFNGLLOADMATRIXFPROC glad_glLoadMatrixf = NULL;$/;"	v	typeref:typename:PFNGLLOADMATRIXFPROC
glad_glLoadName	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLOADNAMEPROC glad_glLoadName;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLOADNAMEPROC
glad_glLoadName	deps/glad_gl.c	/^PFNGLLOADNAMEPROC glad_glLoadName = NULL;$/;"	v	typeref:typename:PFNGLLOADNAMEPROC
glad_glLoadTransposeMatrixd	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLOADTRANSPOSEMATRIXDPROC glad_glLoadTransposeMatrixd;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLOADTRANSPOSEMATRIXDPROC
glad_glLoadTransposeMatrixd	deps/glad_gl.c	/^PFNGLLOADTRANSPOSEMATRIXDPROC glad_glLoadTransposeMatrixd = NULL;$/;"	v	typeref:typename:PFNGLLOADTRANSPOSEMATRIXDPROC
glad_glLoadTransposeMatrixf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLOADTRANSPOSEMATRIXFPROC glad_glLoadTransposeMatrixf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLOADTRANSPOSEMATRIXFPROC
glad_glLoadTransposeMatrixf	deps/glad_gl.c	/^PFNGLLOADTRANSPOSEMATRIXFPROC glad_glLoadTransposeMatrixf = NULL;$/;"	v	typeref:typename:PFNGLLOADTRANSPOSEMATRIXFPROC
glad_glLogicOp	deps/glad/gl.h	/^GLAD_API_CALL PFNGLLOGICOPPROC glad_glLogicOp;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLLOGICOPPROC
glad_glLogicOp	deps/glad_gl.c	/^PFNGLLOGICOPPROC glad_glLogicOp = NULL;$/;"	v	typeref:typename:PFNGLLOGICOPPROC
glad_glMap1d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMAP1DPROC glad_glMap1d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMAP1DPROC
glad_glMap1d	deps/glad_gl.c	/^PFNGLMAP1DPROC glad_glMap1d = NULL;$/;"	v	typeref:typename:PFNGLMAP1DPROC
glad_glMap1f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMAP1FPROC glad_glMap1f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMAP1FPROC
glad_glMap1f	deps/glad_gl.c	/^PFNGLMAP1FPROC glad_glMap1f = NULL;$/;"	v	typeref:typename:PFNGLMAP1FPROC
glad_glMap2d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMAP2DPROC glad_glMap2d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMAP2DPROC
glad_glMap2d	deps/glad_gl.c	/^PFNGLMAP2DPROC glad_glMap2d = NULL;$/;"	v	typeref:typename:PFNGLMAP2DPROC
glad_glMap2f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMAP2FPROC glad_glMap2f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMAP2FPROC
glad_glMap2f	deps/glad_gl.c	/^PFNGLMAP2FPROC glad_glMap2f = NULL;$/;"	v	typeref:typename:PFNGLMAP2FPROC
glad_glMapBuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMAPBUFFERPROC glad_glMapBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMAPBUFFERPROC
glad_glMapBuffer	deps/glad_gl.c	/^PFNGLMAPBUFFERPROC glad_glMapBuffer = NULL;$/;"	v	typeref:typename:PFNGLMAPBUFFERPROC
glad_glMapBufferRange	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMAPBUFFERRANGEPROC
glad_glMapBufferRange	deps/glad_gl.c	/^PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange = NULL;$/;"	v	typeref:typename:PFNGLMAPBUFFERRANGEPROC
glad_glMapGrid1d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMAPGRID1DPROC glad_glMapGrid1d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMAPGRID1DPROC
glad_glMapGrid1d	deps/glad_gl.c	/^PFNGLMAPGRID1DPROC glad_glMapGrid1d = NULL;$/;"	v	typeref:typename:PFNGLMAPGRID1DPROC
glad_glMapGrid1f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMAPGRID1FPROC glad_glMapGrid1f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMAPGRID1FPROC
glad_glMapGrid1f	deps/glad_gl.c	/^PFNGLMAPGRID1FPROC glad_glMapGrid1f = NULL;$/;"	v	typeref:typename:PFNGLMAPGRID1FPROC
glad_glMapGrid2d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMAPGRID2DPROC glad_glMapGrid2d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMAPGRID2DPROC
glad_glMapGrid2d	deps/glad_gl.c	/^PFNGLMAPGRID2DPROC glad_glMapGrid2d = NULL;$/;"	v	typeref:typename:PFNGLMAPGRID2DPROC
glad_glMapGrid2f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMAPGRID2FPROC glad_glMapGrid2f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMAPGRID2FPROC
glad_glMapGrid2f	deps/glad_gl.c	/^PFNGLMAPGRID2FPROC glad_glMapGrid2f = NULL;$/;"	v	typeref:typename:PFNGLMAPGRID2FPROC
glad_glMaterialf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMATERIALFPROC glad_glMaterialf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMATERIALFPROC
glad_glMaterialf	deps/glad_gl.c	/^PFNGLMATERIALFPROC glad_glMaterialf = NULL;$/;"	v	typeref:typename:PFNGLMATERIALFPROC
glad_glMaterialfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMATERIALFVPROC glad_glMaterialfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMATERIALFVPROC
glad_glMaterialfv	deps/glad_gl.c	/^PFNGLMATERIALFVPROC glad_glMaterialfv = NULL;$/;"	v	typeref:typename:PFNGLMATERIALFVPROC
glad_glMateriali	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMATERIALIPROC glad_glMateriali;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMATERIALIPROC
glad_glMateriali	deps/glad_gl.c	/^PFNGLMATERIALIPROC glad_glMateriali = NULL;$/;"	v	typeref:typename:PFNGLMATERIALIPROC
glad_glMaterialiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMATERIALIVPROC glad_glMaterialiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMATERIALIVPROC
glad_glMaterialiv	deps/glad_gl.c	/^PFNGLMATERIALIVPROC glad_glMaterialiv = NULL;$/;"	v	typeref:typename:PFNGLMATERIALIVPROC
glad_glMatrixMode	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMATRIXMODEPROC glad_glMatrixMode;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMATRIXMODEPROC
glad_glMatrixMode	deps/glad_gl.c	/^PFNGLMATRIXMODEPROC glad_glMatrixMode = NULL;$/;"	v	typeref:typename:PFNGLMATRIXMODEPROC
glad_glMultMatrixd	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTMATRIXDPROC glad_glMultMatrixd;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTMATRIXDPROC
glad_glMultMatrixd	deps/glad_gl.c	/^PFNGLMULTMATRIXDPROC glad_glMultMatrixd = NULL;$/;"	v	typeref:typename:PFNGLMULTMATRIXDPROC
glad_glMultMatrixf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTMATRIXFPROC glad_glMultMatrixf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTMATRIXFPROC
glad_glMultMatrixf	deps/glad_gl.c	/^PFNGLMULTMATRIXFPROC glad_glMultMatrixf = NULL;$/;"	v	typeref:typename:PFNGLMULTMATRIXFPROC
glad_glMultTransposeMatrixd	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTTRANSPOSEMATRIXDPROC glad_glMultTransposeMatrixd;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTTRANSPOSEMATRIXDPROC
glad_glMultTransposeMatrixd	deps/glad_gl.c	/^PFNGLMULTTRANSPOSEMATRIXDPROC glad_glMultTransposeMatrixd = NULL;$/;"	v	typeref:typename:PFNGLMULTTRANSPOSEMATRIXDPROC
glad_glMultTransposeMatrixf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTTRANSPOSEMATRIXFPROC glad_glMultTransposeMatrixf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTTRANSPOSEMATRIXFPROC
glad_glMultTransposeMatrixf	deps/glad_gl.c	/^PFNGLMULTTRANSPOSEMATRIXFPROC glad_glMultTransposeMatrixf = NULL;$/;"	v	typeref:typename:PFNGLMULTTRANSPOSEMATRIXFPROC
glad_glMultiDrawArrays	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTIDRAWARRAYSPROC
glad_glMultiDrawArrays	deps/glad_gl.c	/^PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays = NULL;$/;"	v	typeref:typename:PFNGLMULTIDRAWARRAYSPROC
glad_glMultiDrawElements	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTIDRAWELEMENTSPROC
glad_glMultiDrawElements	deps/glad_gl.c	/^PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements = NULL;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSPROC
glad_glMultiDrawElementsBaseVertex	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
glad_glMultiDrawElementsBaseVertex	deps/glad_gl.c	/^PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex = NULL;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
glad_glMultiTexCoord1d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD1DPROC glad_glMultiTexCoord1d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD1DPROC
glad_glMultiTexCoord1d	deps/glad_gl.c	/^PFNGLMULTITEXCOORD1DPROC glad_glMultiTexCoord1d = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD1DPROC
glad_glMultiTexCoord1dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD1DVPROC glad_glMultiTexCoord1dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD1DVPROC
glad_glMultiTexCoord1dv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD1DVPROC glad_glMultiTexCoord1dv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD1DVPROC
glad_glMultiTexCoord1f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD1FPROC glad_glMultiTexCoord1f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD1FPROC
glad_glMultiTexCoord1f	deps/glad_gl.c	/^PFNGLMULTITEXCOORD1FPROC glad_glMultiTexCoord1f = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD1FPROC
glad_glMultiTexCoord1fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD1FVPROC glad_glMultiTexCoord1fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD1FVPROC
glad_glMultiTexCoord1fv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD1FVPROC glad_glMultiTexCoord1fv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD1FVPROC
glad_glMultiTexCoord1i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD1IPROC glad_glMultiTexCoord1i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD1IPROC
glad_glMultiTexCoord1i	deps/glad_gl.c	/^PFNGLMULTITEXCOORD1IPROC glad_glMultiTexCoord1i = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD1IPROC
glad_glMultiTexCoord1iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD1IVPROC glad_glMultiTexCoord1iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD1IVPROC
glad_glMultiTexCoord1iv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD1IVPROC glad_glMultiTexCoord1iv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD1IVPROC
glad_glMultiTexCoord1s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD1SPROC glad_glMultiTexCoord1s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD1SPROC
glad_glMultiTexCoord1s	deps/glad_gl.c	/^PFNGLMULTITEXCOORD1SPROC glad_glMultiTexCoord1s = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD1SPROC
glad_glMultiTexCoord1sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD1SVPROC glad_glMultiTexCoord1sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD1SVPROC
glad_glMultiTexCoord1sv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD1SVPROC glad_glMultiTexCoord1sv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD1SVPROC
glad_glMultiTexCoord2d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD2DPROC glad_glMultiTexCoord2d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD2DPROC
glad_glMultiTexCoord2d	deps/glad_gl.c	/^PFNGLMULTITEXCOORD2DPROC glad_glMultiTexCoord2d = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD2DPROC
glad_glMultiTexCoord2dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD2DVPROC glad_glMultiTexCoord2dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD2DVPROC
glad_glMultiTexCoord2dv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD2DVPROC glad_glMultiTexCoord2dv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD2DVPROC
glad_glMultiTexCoord2f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD2FPROC glad_glMultiTexCoord2f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD2FPROC
glad_glMultiTexCoord2f	deps/glad_gl.c	/^PFNGLMULTITEXCOORD2FPROC glad_glMultiTexCoord2f = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD2FPROC
glad_glMultiTexCoord2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD2FVPROC glad_glMultiTexCoord2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD2FVPROC
glad_glMultiTexCoord2fv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD2FVPROC glad_glMultiTexCoord2fv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD2FVPROC
glad_glMultiTexCoord2i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD2IPROC glad_glMultiTexCoord2i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD2IPROC
glad_glMultiTexCoord2i	deps/glad_gl.c	/^PFNGLMULTITEXCOORD2IPROC glad_glMultiTexCoord2i = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD2IPROC
glad_glMultiTexCoord2iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD2IVPROC glad_glMultiTexCoord2iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD2IVPROC
glad_glMultiTexCoord2iv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD2IVPROC glad_glMultiTexCoord2iv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD2IVPROC
glad_glMultiTexCoord2s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD2SPROC glad_glMultiTexCoord2s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD2SPROC
glad_glMultiTexCoord2s	deps/glad_gl.c	/^PFNGLMULTITEXCOORD2SPROC glad_glMultiTexCoord2s = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD2SPROC
glad_glMultiTexCoord2sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD2SVPROC glad_glMultiTexCoord2sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD2SVPROC
glad_glMultiTexCoord2sv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD2SVPROC glad_glMultiTexCoord2sv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD2SVPROC
glad_glMultiTexCoord3d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD3DPROC glad_glMultiTexCoord3d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD3DPROC
glad_glMultiTexCoord3d	deps/glad_gl.c	/^PFNGLMULTITEXCOORD3DPROC glad_glMultiTexCoord3d = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD3DPROC
glad_glMultiTexCoord3dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD3DVPROC glad_glMultiTexCoord3dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD3DVPROC
glad_glMultiTexCoord3dv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD3DVPROC glad_glMultiTexCoord3dv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD3DVPROC
glad_glMultiTexCoord3f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD3FPROC glad_glMultiTexCoord3f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD3FPROC
glad_glMultiTexCoord3f	deps/glad_gl.c	/^PFNGLMULTITEXCOORD3FPROC glad_glMultiTexCoord3f = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD3FPROC
glad_glMultiTexCoord3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD3FVPROC glad_glMultiTexCoord3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD3FVPROC
glad_glMultiTexCoord3fv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD3FVPROC glad_glMultiTexCoord3fv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD3FVPROC
glad_glMultiTexCoord3i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD3IPROC glad_glMultiTexCoord3i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD3IPROC
glad_glMultiTexCoord3i	deps/glad_gl.c	/^PFNGLMULTITEXCOORD3IPROC glad_glMultiTexCoord3i = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD3IPROC
glad_glMultiTexCoord3iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD3IVPROC glad_glMultiTexCoord3iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD3IVPROC
glad_glMultiTexCoord3iv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD3IVPROC glad_glMultiTexCoord3iv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD3IVPROC
glad_glMultiTexCoord3s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD3SPROC glad_glMultiTexCoord3s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD3SPROC
glad_glMultiTexCoord3s	deps/glad_gl.c	/^PFNGLMULTITEXCOORD3SPROC glad_glMultiTexCoord3s = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD3SPROC
glad_glMultiTexCoord3sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD3SVPROC glad_glMultiTexCoord3sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD3SVPROC
glad_glMultiTexCoord3sv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD3SVPROC glad_glMultiTexCoord3sv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD3SVPROC
glad_glMultiTexCoord4d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD4DPROC glad_glMultiTexCoord4d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD4DPROC
glad_glMultiTexCoord4d	deps/glad_gl.c	/^PFNGLMULTITEXCOORD4DPROC glad_glMultiTexCoord4d = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD4DPROC
glad_glMultiTexCoord4dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD4DVPROC glad_glMultiTexCoord4dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD4DVPROC
glad_glMultiTexCoord4dv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD4DVPROC glad_glMultiTexCoord4dv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD4DVPROC
glad_glMultiTexCoord4f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD4FPROC glad_glMultiTexCoord4f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD4FPROC
glad_glMultiTexCoord4f	deps/glad_gl.c	/^PFNGLMULTITEXCOORD4FPROC glad_glMultiTexCoord4f = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD4FPROC
glad_glMultiTexCoord4fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD4FVPROC glad_glMultiTexCoord4fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD4FVPROC
glad_glMultiTexCoord4fv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD4FVPROC glad_glMultiTexCoord4fv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD4FVPROC
glad_glMultiTexCoord4i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD4IPROC glad_glMultiTexCoord4i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD4IPROC
glad_glMultiTexCoord4i	deps/glad_gl.c	/^PFNGLMULTITEXCOORD4IPROC glad_glMultiTexCoord4i = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD4IPROC
glad_glMultiTexCoord4iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD4IVPROC glad_glMultiTexCoord4iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD4IVPROC
glad_glMultiTexCoord4iv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD4IVPROC glad_glMultiTexCoord4iv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD4IVPROC
glad_glMultiTexCoord4s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD4SPROC glad_glMultiTexCoord4s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD4SPROC
glad_glMultiTexCoord4s	deps/glad_gl.c	/^PFNGLMULTITEXCOORD4SPROC glad_glMultiTexCoord4s = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD4SPROC
glad_glMultiTexCoord4sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORD4SVPROC glad_glMultiTexCoord4sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORD4SVPROC
glad_glMultiTexCoord4sv	deps/glad_gl.c	/^PFNGLMULTITEXCOORD4SVPROC glad_glMultiTexCoord4sv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORD4SVPROC
glad_glMultiTexCoordP1ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORDP1UIPROC glad_glMultiTexCoordP1ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORDP1UIPROC
glad_glMultiTexCoordP1ui	deps/glad_gl.c	/^PFNGLMULTITEXCOORDP1UIPROC glad_glMultiTexCoordP1ui = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP1UIPROC
glad_glMultiTexCoordP1uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORDP1UIVPROC glad_glMultiTexCoordP1uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORDP1UIVPROC
glad_glMultiTexCoordP1uiv	deps/glad_gl.c	/^PFNGLMULTITEXCOORDP1UIVPROC glad_glMultiTexCoordP1uiv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP1UIVPROC
glad_glMultiTexCoordP2ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORDP2UIPROC glad_glMultiTexCoordP2ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORDP2UIPROC
glad_glMultiTexCoordP2ui	deps/glad_gl.c	/^PFNGLMULTITEXCOORDP2UIPROC glad_glMultiTexCoordP2ui = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP2UIPROC
glad_glMultiTexCoordP2uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORDP2UIVPROC glad_glMultiTexCoordP2uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORDP2UIVPROC
glad_glMultiTexCoordP2uiv	deps/glad_gl.c	/^PFNGLMULTITEXCOORDP2UIVPROC glad_glMultiTexCoordP2uiv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP2UIVPROC
glad_glMultiTexCoordP3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORDP3UIPROC glad_glMultiTexCoordP3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORDP3UIPROC
glad_glMultiTexCoordP3ui	deps/glad_gl.c	/^PFNGLMULTITEXCOORDP3UIPROC glad_glMultiTexCoordP3ui = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP3UIPROC
glad_glMultiTexCoordP3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORDP3UIVPROC glad_glMultiTexCoordP3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORDP3UIVPROC
glad_glMultiTexCoordP3uiv	deps/glad_gl.c	/^PFNGLMULTITEXCOORDP3UIVPROC glad_glMultiTexCoordP3uiv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP3UIVPROC
glad_glMultiTexCoordP4ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORDP4UIPROC glad_glMultiTexCoordP4ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORDP4UIPROC
glad_glMultiTexCoordP4ui	deps/glad_gl.c	/^PFNGLMULTITEXCOORDP4UIPROC glad_glMultiTexCoordP4ui = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP4UIPROC
glad_glMultiTexCoordP4uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLMULTITEXCOORDP4UIVPROC glad_glMultiTexCoordP4uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLMULTITEXCOORDP4UIVPROC
glad_glMultiTexCoordP4uiv	deps/glad_gl.c	/^PFNGLMULTITEXCOORDP4UIVPROC glad_glMultiTexCoordP4uiv = NULL;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP4UIVPROC
glad_glNewList	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNEWLISTPROC glad_glNewList;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNEWLISTPROC
glad_glNewList	deps/glad_gl.c	/^PFNGLNEWLISTPROC glad_glNewList = NULL;$/;"	v	typeref:typename:PFNGLNEWLISTPROC
glad_glNormal3b	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMAL3BPROC glad_glNormal3b;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMAL3BPROC
glad_glNormal3b	deps/glad_gl.c	/^PFNGLNORMAL3BPROC glad_glNormal3b = NULL;$/;"	v	typeref:typename:PFNGLNORMAL3BPROC
glad_glNormal3bv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMAL3BVPROC glad_glNormal3bv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMAL3BVPROC
glad_glNormal3bv	deps/glad_gl.c	/^PFNGLNORMAL3BVPROC glad_glNormal3bv = NULL;$/;"	v	typeref:typename:PFNGLNORMAL3BVPROC
glad_glNormal3d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMAL3DPROC glad_glNormal3d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMAL3DPROC
glad_glNormal3d	deps/glad_gl.c	/^PFNGLNORMAL3DPROC glad_glNormal3d = NULL;$/;"	v	typeref:typename:PFNGLNORMAL3DPROC
glad_glNormal3dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMAL3DVPROC glad_glNormal3dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMAL3DVPROC
glad_glNormal3dv	deps/glad_gl.c	/^PFNGLNORMAL3DVPROC glad_glNormal3dv = NULL;$/;"	v	typeref:typename:PFNGLNORMAL3DVPROC
glad_glNormal3f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMAL3FPROC glad_glNormal3f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMAL3FPROC
glad_glNormal3f	deps/glad_gl.c	/^PFNGLNORMAL3FPROC glad_glNormal3f = NULL;$/;"	v	typeref:typename:PFNGLNORMAL3FPROC
glad_glNormal3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMAL3FVPROC glad_glNormal3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMAL3FVPROC
glad_glNormal3fv	deps/glad_gl.c	/^PFNGLNORMAL3FVPROC glad_glNormal3fv = NULL;$/;"	v	typeref:typename:PFNGLNORMAL3FVPROC
glad_glNormal3i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMAL3IPROC glad_glNormal3i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMAL3IPROC
glad_glNormal3i	deps/glad_gl.c	/^PFNGLNORMAL3IPROC glad_glNormal3i = NULL;$/;"	v	typeref:typename:PFNGLNORMAL3IPROC
glad_glNormal3iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMAL3IVPROC glad_glNormal3iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMAL3IVPROC
glad_glNormal3iv	deps/glad_gl.c	/^PFNGLNORMAL3IVPROC glad_glNormal3iv = NULL;$/;"	v	typeref:typename:PFNGLNORMAL3IVPROC
glad_glNormal3s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMAL3SPROC glad_glNormal3s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMAL3SPROC
glad_glNormal3s	deps/glad_gl.c	/^PFNGLNORMAL3SPROC glad_glNormal3s = NULL;$/;"	v	typeref:typename:PFNGLNORMAL3SPROC
glad_glNormal3sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMAL3SVPROC glad_glNormal3sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMAL3SVPROC
glad_glNormal3sv	deps/glad_gl.c	/^PFNGLNORMAL3SVPROC glad_glNormal3sv = NULL;$/;"	v	typeref:typename:PFNGLNORMAL3SVPROC
glad_glNormalP3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMALP3UIPROC glad_glNormalP3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMALP3UIPROC
glad_glNormalP3ui	deps/glad_gl.c	/^PFNGLNORMALP3UIPROC glad_glNormalP3ui = NULL;$/;"	v	typeref:typename:PFNGLNORMALP3UIPROC
glad_glNormalP3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMALP3UIVPROC glad_glNormalP3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMALP3UIVPROC
glad_glNormalP3uiv	deps/glad_gl.c	/^PFNGLNORMALP3UIVPROC glad_glNormalP3uiv = NULL;$/;"	v	typeref:typename:PFNGLNORMALP3UIVPROC
glad_glNormalPointer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLNORMALPOINTERPROC glad_glNormalPointer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLNORMALPOINTERPROC
glad_glNormalPointer	deps/glad_gl.c	/^PFNGLNORMALPOINTERPROC glad_glNormalPointer = NULL;$/;"	v	typeref:typename:PFNGLNORMALPOINTERPROC
glad_glObjectLabel	deps/glad/gl.h	/^GLAD_API_CALL PFNGLOBJECTLABELPROC glad_glObjectLabel;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLOBJECTLABELPROC
glad_glObjectLabel	deps/glad_gl.c	/^PFNGLOBJECTLABELPROC glad_glObjectLabel = NULL;$/;"	v	typeref:typename:PFNGLOBJECTLABELPROC
glad_glObjectPtrLabel	deps/glad/gl.h	/^GLAD_API_CALL PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLOBJECTPTRLABELPROC
glad_glObjectPtrLabel	deps/glad_gl.c	/^PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel = NULL;$/;"	v	typeref:typename:PFNGLOBJECTPTRLABELPROC
glad_glOrtho	deps/glad/gl.h	/^GLAD_API_CALL PFNGLORTHOPROC glad_glOrtho;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLORTHOPROC
glad_glOrtho	deps/glad_gl.c	/^PFNGLORTHOPROC glad_glOrtho = NULL;$/;"	v	typeref:typename:PFNGLORTHOPROC
glad_glPassThrough	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPASSTHROUGHPROC glad_glPassThrough;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPASSTHROUGHPROC
glad_glPassThrough	deps/glad_gl.c	/^PFNGLPASSTHROUGHPROC glad_glPassThrough = NULL;$/;"	v	typeref:typename:PFNGLPASSTHROUGHPROC
glad_glPixelMapfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPIXELMAPFVPROC glad_glPixelMapfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPIXELMAPFVPROC
glad_glPixelMapfv	deps/glad_gl.c	/^PFNGLPIXELMAPFVPROC glad_glPixelMapfv = NULL;$/;"	v	typeref:typename:PFNGLPIXELMAPFVPROC
glad_glPixelMapuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPIXELMAPUIVPROC glad_glPixelMapuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPIXELMAPUIVPROC
glad_glPixelMapuiv	deps/glad_gl.c	/^PFNGLPIXELMAPUIVPROC glad_glPixelMapuiv = NULL;$/;"	v	typeref:typename:PFNGLPIXELMAPUIVPROC
glad_glPixelMapusv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPIXELMAPUSVPROC glad_glPixelMapusv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPIXELMAPUSVPROC
glad_glPixelMapusv	deps/glad_gl.c	/^PFNGLPIXELMAPUSVPROC glad_glPixelMapusv = NULL;$/;"	v	typeref:typename:PFNGLPIXELMAPUSVPROC
glad_glPixelStoref	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPIXELSTOREFPROC glad_glPixelStoref;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPIXELSTOREFPROC
glad_glPixelStoref	deps/glad_gl.c	/^PFNGLPIXELSTOREFPROC glad_glPixelStoref = NULL;$/;"	v	typeref:typename:PFNGLPIXELSTOREFPROC
glad_glPixelStorei	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPIXELSTOREIPROC glad_glPixelStorei;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPIXELSTOREIPROC
glad_glPixelStorei	deps/glad_gl.c	/^PFNGLPIXELSTOREIPROC glad_glPixelStorei = NULL;$/;"	v	typeref:typename:PFNGLPIXELSTOREIPROC
glad_glPixelTransferf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPIXELTRANSFERFPROC glad_glPixelTransferf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPIXELTRANSFERFPROC
glad_glPixelTransferf	deps/glad_gl.c	/^PFNGLPIXELTRANSFERFPROC glad_glPixelTransferf = NULL;$/;"	v	typeref:typename:PFNGLPIXELTRANSFERFPROC
glad_glPixelTransferi	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPIXELTRANSFERIPROC glad_glPixelTransferi;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPIXELTRANSFERIPROC
glad_glPixelTransferi	deps/glad_gl.c	/^PFNGLPIXELTRANSFERIPROC glad_glPixelTransferi = NULL;$/;"	v	typeref:typename:PFNGLPIXELTRANSFERIPROC
glad_glPixelZoom	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPIXELZOOMPROC glad_glPixelZoom;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPIXELZOOMPROC
glad_glPixelZoom	deps/glad_gl.c	/^PFNGLPIXELZOOMPROC glad_glPixelZoom = NULL;$/;"	v	typeref:typename:PFNGLPIXELZOOMPROC
glad_glPointParameterf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOINTPARAMETERFPROC glad_glPointParameterf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOINTPARAMETERFPROC
glad_glPointParameterf	deps/glad_gl.c	/^PFNGLPOINTPARAMETERFPROC glad_glPointParameterf = NULL;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERFPROC
glad_glPointParameterfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOINTPARAMETERFVPROC
glad_glPointParameterfv	deps/glad_gl.c	/^PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv = NULL;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERFVPROC
glad_glPointParameteri	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOINTPARAMETERIPROC glad_glPointParameteri;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOINTPARAMETERIPROC
glad_glPointParameteri	deps/glad_gl.c	/^PFNGLPOINTPARAMETERIPROC glad_glPointParameteri = NULL;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERIPROC
glad_glPointParameteriv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOINTPARAMETERIVPROC
glad_glPointParameteriv	deps/glad_gl.c	/^PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv = NULL;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERIVPROC
glad_glPointSize	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOINTSIZEPROC glad_glPointSize;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOINTSIZEPROC
glad_glPointSize	deps/glad_gl.c	/^PFNGLPOINTSIZEPROC glad_glPointSize = NULL;$/;"	v	typeref:typename:PFNGLPOINTSIZEPROC
glad_glPolygonMode	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOLYGONMODEPROC glad_glPolygonMode;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOLYGONMODEPROC
glad_glPolygonMode	deps/glad_gl.c	/^PFNGLPOLYGONMODEPROC glad_glPolygonMode = NULL;$/;"	v	typeref:typename:PFNGLPOLYGONMODEPROC
glad_glPolygonOffset	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOLYGONOFFSETPROC
glad_glPolygonOffset	deps/glad_gl.c	/^PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset = NULL;$/;"	v	typeref:typename:PFNGLPOLYGONOFFSETPROC
glad_glPolygonStipple	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOLYGONSTIPPLEPROC glad_glPolygonStipple;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOLYGONSTIPPLEPROC
glad_glPolygonStipple	deps/glad_gl.c	/^PFNGLPOLYGONSTIPPLEPROC glad_glPolygonStipple = NULL;$/;"	v	typeref:typename:PFNGLPOLYGONSTIPPLEPROC
glad_glPopAttrib	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOPATTRIBPROC glad_glPopAttrib;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOPATTRIBPROC
glad_glPopAttrib	deps/glad_gl.c	/^PFNGLPOPATTRIBPROC glad_glPopAttrib = NULL;$/;"	v	typeref:typename:PFNGLPOPATTRIBPROC
glad_glPopClientAttrib	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOPCLIENTATTRIBPROC glad_glPopClientAttrib;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOPCLIENTATTRIBPROC
glad_glPopClientAttrib	deps/glad_gl.c	/^PFNGLPOPCLIENTATTRIBPROC glad_glPopClientAttrib = NULL;$/;"	v	typeref:typename:PFNGLPOPCLIENTATTRIBPROC
glad_glPopDebugGroup	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOPDEBUGGROUPPROC
glad_glPopDebugGroup	deps/glad_gl.c	/^PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup = NULL;$/;"	v	typeref:typename:PFNGLPOPDEBUGGROUPPROC
glad_glPopMatrix	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOPMATRIXPROC glad_glPopMatrix;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOPMATRIXPROC
glad_glPopMatrix	deps/glad_gl.c	/^PFNGLPOPMATRIXPROC glad_glPopMatrix = NULL;$/;"	v	typeref:typename:PFNGLPOPMATRIXPROC
glad_glPopName	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPOPNAMEPROC glad_glPopName;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPOPNAMEPROC
glad_glPopName	deps/glad_gl.c	/^PFNGLPOPNAMEPROC glad_glPopName = NULL;$/;"	v	typeref:typename:PFNGLPOPNAMEPROC
glad_glPrimitiveRestartIndex	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPRIMITIVERESTARTINDEXPROC
glad_glPrimitiveRestartIndex	deps/glad_gl.c	/^PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex = NULL;$/;"	v	typeref:typename:PFNGLPRIMITIVERESTARTINDEXPROC
glad_glPrioritizeTextures	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPRIORITIZETEXTURESPROC glad_glPrioritizeTextures;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPRIORITIZETEXTURESPROC
glad_glPrioritizeTextures	deps/glad_gl.c	/^PFNGLPRIORITIZETEXTURESPROC glad_glPrioritizeTextures = NULL;$/;"	v	typeref:typename:PFNGLPRIORITIZETEXTURESPROC
glad_glProvokingVertex	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPROVOKINGVERTEXPROC
glad_glProvokingVertex	deps/glad_gl.c	/^PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex = NULL;$/;"	v	typeref:typename:PFNGLPROVOKINGVERTEXPROC
glad_glPushAttrib	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPUSHATTRIBPROC glad_glPushAttrib;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPUSHATTRIBPROC
glad_glPushAttrib	deps/glad_gl.c	/^PFNGLPUSHATTRIBPROC glad_glPushAttrib = NULL;$/;"	v	typeref:typename:PFNGLPUSHATTRIBPROC
glad_glPushClientAttrib	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPUSHCLIENTATTRIBPROC glad_glPushClientAttrib;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPUSHCLIENTATTRIBPROC
glad_glPushClientAttrib	deps/glad_gl.c	/^PFNGLPUSHCLIENTATTRIBPROC glad_glPushClientAttrib = NULL;$/;"	v	typeref:typename:PFNGLPUSHCLIENTATTRIBPROC
glad_glPushDebugGroup	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPUSHDEBUGGROUPPROC
glad_glPushDebugGroup	deps/glad_gl.c	/^PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup = NULL;$/;"	v	typeref:typename:PFNGLPUSHDEBUGGROUPPROC
glad_glPushMatrix	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPUSHMATRIXPROC glad_glPushMatrix;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPUSHMATRIXPROC
glad_glPushMatrix	deps/glad_gl.c	/^PFNGLPUSHMATRIXPROC glad_glPushMatrix = NULL;$/;"	v	typeref:typename:PFNGLPUSHMATRIXPROC
glad_glPushName	deps/glad/gl.h	/^GLAD_API_CALL PFNGLPUSHNAMEPROC glad_glPushName;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLPUSHNAMEPROC
glad_glPushName	deps/glad_gl.c	/^PFNGLPUSHNAMEPROC glad_glPushName = NULL;$/;"	v	typeref:typename:PFNGLPUSHNAMEPROC
glad_glQueryCounter	deps/glad/gl.h	/^GLAD_API_CALL PFNGLQUERYCOUNTERPROC glad_glQueryCounter;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLQUERYCOUNTERPROC
glad_glQueryCounter	deps/glad_gl.c	/^PFNGLQUERYCOUNTERPROC glad_glQueryCounter = NULL;$/;"	v	typeref:typename:PFNGLQUERYCOUNTERPROC
glad_glRasterPos2d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS2DPROC glad_glRasterPos2d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS2DPROC
glad_glRasterPos2d	deps/glad_gl.c	/^PFNGLRASTERPOS2DPROC glad_glRasterPos2d = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS2DPROC
glad_glRasterPos2dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS2DVPROC glad_glRasterPos2dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS2DVPROC
glad_glRasterPos2dv	deps/glad_gl.c	/^PFNGLRASTERPOS2DVPROC glad_glRasterPos2dv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS2DVPROC
glad_glRasterPos2f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS2FPROC glad_glRasterPos2f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS2FPROC
glad_glRasterPos2f	deps/glad_gl.c	/^PFNGLRASTERPOS2FPROC glad_glRasterPos2f = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS2FPROC
glad_glRasterPos2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS2FVPROC glad_glRasterPos2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS2FVPROC
glad_glRasterPos2fv	deps/glad_gl.c	/^PFNGLRASTERPOS2FVPROC glad_glRasterPos2fv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS2FVPROC
glad_glRasterPos2i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS2IPROC glad_glRasterPos2i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS2IPROC
glad_glRasterPos2i	deps/glad_gl.c	/^PFNGLRASTERPOS2IPROC glad_glRasterPos2i = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS2IPROC
glad_glRasterPos2iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS2IVPROC glad_glRasterPos2iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS2IVPROC
glad_glRasterPos2iv	deps/glad_gl.c	/^PFNGLRASTERPOS2IVPROC glad_glRasterPos2iv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS2IVPROC
glad_glRasterPos2s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS2SPROC glad_glRasterPos2s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS2SPROC
glad_glRasterPos2s	deps/glad_gl.c	/^PFNGLRASTERPOS2SPROC glad_glRasterPos2s = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS2SPROC
glad_glRasterPos2sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS2SVPROC glad_glRasterPos2sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS2SVPROC
glad_glRasterPos2sv	deps/glad_gl.c	/^PFNGLRASTERPOS2SVPROC glad_glRasterPos2sv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS2SVPROC
glad_glRasterPos3d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS3DPROC glad_glRasterPos3d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS3DPROC
glad_glRasterPos3d	deps/glad_gl.c	/^PFNGLRASTERPOS3DPROC glad_glRasterPos3d = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS3DPROC
glad_glRasterPos3dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS3DVPROC glad_glRasterPos3dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS3DVPROC
glad_glRasterPos3dv	deps/glad_gl.c	/^PFNGLRASTERPOS3DVPROC glad_glRasterPos3dv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS3DVPROC
glad_glRasterPos3f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS3FPROC glad_glRasterPos3f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS3FPROC
glad_glRasterPos3f	deps/glad_gl.c	/^PFNGLRASTERPOS3FPROC glad_glRasterPos3f = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS3FPROC
glad_glRasterPos3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS3FVPROC glad_glRasterPos3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS3FVPROC
glad_glRasterPos3fv	deps/glad_gl.c	/^PFNGLRASTERPOS3FVPROC glad_glRasterPos3fv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS3FVPROC
glad_glRasterPos3i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS3IPROC glad_glRasterPos3i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS3IPROC
glad_glRasterPos3i	deps/glad_gl.c	/^PFNGLRASTERPOS3IPROC glad_glRasterPos3i = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS3IPROC
glad_glRasterPos3iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS3IVPROC glad_glRasterPos3iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS3IVPROC
glad_glRasterPos3iv	deps/glad_gl.c	/^PFNGLRASTERPOS3IVPROC glad_glRasterPos3iv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS3IVPROC
glad_glRasterPos3s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS3SPROC glad_glRasterPos3s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS3SPROC
glad_glRasterPos3s	deps/glad_gl.c	/^PFNGLRASTERPOS3SPROC glad_glRasterPos3s = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS3SPROC
glad_glRasterPos3sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS3SVPROC glad_glRasterPos3sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS3SVPROC
glad_glRasterPos3sv	deps/glad_gl.c	/^PFNGLRASTERPOS3SVPROC glad_glRasterPos3sv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS3SVPROC
glad_glRasterPos4d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS4DPROC glad_glRasterPos4d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS4DPROC
glad_glRasterPos4d	deps/glad_gl.c	/^PFNGLRASTERPOS4DPROC glad_glRasterPos4d = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS4DPROC
glad_glRasterPos4dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS4DVPROC glad_glRasterPos4dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS4DVPROC
glad_glRasterPos4dv	deps/glad_gl.c	/^PFNGLRASTERPOS4DVPROC glad_glRasterPos4dv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS4DVPROC
glad_glRasterPos4f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS4FPROC glad_glRasterPos4f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS4FPROC
glad_glRasterPos4f	deps/glad_gl.c	/^PFNGLRASTERPOS4FPROC glad_glRasterPos4f = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS4FPROC
glad_glRasterPos4fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS4FVPROC glad_glRasterPos4fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS4FVPROC
glad_glRasterPos4fv	deps/glad_gl.c	/^PFNGLRASTERPOS4FVPROC glad_glRasterPos4fv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS4FVPROC
glad_glRasterPos4i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS4IPROC glad_glRasterPos4i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS4IPROC
glad_glRasterPos4i	deps/glad_gl.c	/^PFNGLRASTERPOS4IPROC glad_glRasterPos4i = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS4IPROC
glad_glRasterPos4iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS4IVPROC glad_glRasterPos4iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS4IVPROC
glad_glRasterPos4iv	deps/glad_gl.c	/^PFNGLRASTERPOS4IVPROC glad_glRasterPos4iv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS4IVPROC
glad_glRasterPos4s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS4SPROC glad_glRasterPos4s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS4SPROC
glad_glRasterPos4s	deps/glad_gl.c	/^PFNGLRASTERPOS4SPROC glad_glRasterPos4s = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS4SPROC
glad_glRasterPos4sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRASTERPOS4SVPROC glad_glRasterPos4sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRASTERPOS4SVPROC
glad_glRasterPos4sv	deps/glad_gl.c	/^PFNGLRASTERPOS4SVPROC glad_glRasterPos4sv = NULL;$/;"	v	typeref:typename:PFNGLRASTERPOS4SVPROC
glad_glReadBuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLREADBUFFERPROC glad_glReadBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLREADBUFFERPROC
glad_glReadBuffer	deps/glad_gl.c	/^PFNGLREADBUFFERPROC glad_glReadBuffer = NULL;$/;"	v	typeref:typename:PFNGLREADBUFFERPROC
glad_glReadPixels	deps/glad/gl.h	/^GLAD_API_CALL PFNGLREADPIXELSPROC glad_glReadPixels;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLREADPIXELSPROC
glad_glReadPixels	deps/glad_gl.c	/^PFNGLREADPIXELSPROC glad_glReadPixels = NULL;$/;"	v	typeref:typename:PFNGLREADPIXELSPROC
glad_glReadnPixels	deps/glad/gl.h	/^GLAD_API_CALL PFNGLREADNPIXELSPROC glad_glReadnPixels;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLREADNPIXELSPROC
glad_glReadnPixels	deps/glad_gl.c	/^PFNGLREADNPIXELSPROC glad_glReadnPixels = NULL;$/;"	v	typeref:typename:PFNGLREADNPIXELSPROC
glad_glReadnPixelsARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLREADNPIXELSARBPROC glad_glReadnPixelsARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLREADNPIXELSARBPROC
glad_glReadnPixelsARB	deps/glad_gl.c	/^PFNGLREADNPIXELSARBPROC glad_glReadnPixelsARB = NULL;$/;"	v	typeref:typename:PFNGLREADNPIXELSARBPROC
glad_glRectd	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRECTDPROC glad_glRectd;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRECTDPROC
glad_glRectd	deps/glad_gl.c	/^PFNGLRECTDPROC glad_glRectd = NULL;$/;"	v	typeref:typename:PFNGLRECTDPROC
glad_glRectdv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRECTDVPROC glad_glRectdv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRECTDVPROC
glad_glRectdv	deps/glad_gl.c	/^PFNGLRECTDVPROC glad_glRectdv = NULL;$/;"	v	typeref:typename:PFNGLRECTDVPROC
glad_glRectf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRECTFPROC glad_glRectf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRECTFPROC
glad_glRectf	deps/glad_gl.c	/^PFNGLRECTFPROC glad_glRectf = NULL;$/;"	v	typeref:typename:PFNGLRECTFPROC
glad_glRectfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRECTFVPROC glad_glRectfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRECTFVPROC
glad_glRectfv	deps/glad_gl.c	/^PFNGLRECTFVPROC glad_glRectfv = NULL;$/;"	v	typeref:typename:PFNGLRECTFVPROC
glad_glRecti	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRECTIPROC glad_glRecti;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRECTIPROC
glad_glRecti	deps/glad_gl.c	/^PFNGLRECTIPROC glad_glRecti = NULL;$/;"	v	typeref:typename:PFNGLRECTIPROC
glad_glRectiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRECTIVPROC glad_glRectiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRECTIVPROC
glad_glRectiv	deps/glad_gl.c	/^PFNGLRECTIVPROC glad_glRectiv = NULL;$/;"	v	typeref:typename:PFNGLRECTIVPROC
glad_glRects	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRECTSPROC glad_glRects;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRECTSPROC
glad_glRects	deps/glad_gl.c	/^PFNGLRECTSPROC glad_glRects = NULL;$/;"	v	typeref:typename:PFNGLRECTSPROC
glad_glRectsv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRECTSVPROC glad_glRectsv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRECTSVPROC
glad_glRectsv	deps/glad_gl.c	/^PFNGLRECTSVPROC glad_glRectsv = NULL;$/;"	v	typeref:typename:PFNGLRECTSVPROC
glad_glRenderMode	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRENDERMODEPROC glad_glRenderMode;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRENDERMODEPROC
glad_glRenderMode	deps/glad_gl.c	/^PFNGLRENDERMODEPROC glad_glRenderMode = NULL;$/;"	v	typeref:typename:PFNGLRENDERMODEPROC
glad_glRenderbufferStorage	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEPROC
glad_glRenderbufferStorage	deps/glad_gl.c	/^PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage = NULL;$/;"	v	typeref:typename:PFNGLRENDERBUFFERSTORAGEPROC
glad_glRenderbufferStorageMultisample	deps/glad/gl.h	/^GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glRenderbufferStorageMultisample;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
glad_glRenderbufferStorageMultisample	deps/glad_gl.c	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glRenderbufferStorageMultisample = NULL;$/;"	v	typeref:typename:PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
glad_glRotated	deps/glad/gl.h	/^GLAD_API_CALL PFNGLROTATEDPROC glad_glRotated;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLROTATEDPROC
glad_glRotated	deps/glad_gl.c	/^PFNGLROTATEDPROC glad_glRotated = NULL;$/;"	v	typeref:typename:PFNGLROTATEDPROC
glad_glRotatef	deps/glad/gl.h	/^GLAD_API_CALL PFNGLROTATEFPROC glad_glRotatef;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLROTATEFPROC
glad_glRotatef	deps/glad_gl.c	/^PFNGLROTATEFPROC glad_glRotatef = NULL;$/;"	v	typeref:typename:PFNGLROTATEFPROC
glad_glSampleCoverage	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSAMPLECOVERAGEPROC glad_glSampleCoverage;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSAMPLECOVERAGEPROC
glad_glSampleCoverage	deps/glad_gl.c	/^PFNGLSAMPLECOVERAGEPROC glad_glSampleCoverage = NULL;$/;"	v	typeref:typename:PFNGLSAMPLECOVERAGEPROC
glad_glSampleCoverageARB	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSAMPLECOVERAGEARBPROC glad_glSampleCoverageARB;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSAMPLECOVERAGEARBPROC
glad_glSampleCoverageARB	deps/glad_gl.c	/^PFNGLSAMPLECOVERAGEARBPROC glad_glSampleCoverageARB = NULL;$/;"	v	typeref:typename:PFNGLSAMPLECOVERAGEARBPROC
glad_glSampleMaski	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSAMPLEMASKIPROC glad_glSampleMaski;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSAMPLEMASKIPROC
glad_glSampleMaski	deps/glad_gl.c	/^PFNGLSAMPLEMASKIPROC glad_glSampleMaski = NULL;$/;"	v	typeref:typename:PFNGLSAMPLEMASKIPROC
glad_glSamplerParameterIiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSAMPLERPARAMETERIIVPROC glad_glSamplerParameterIiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSAMPLERPARAMETERIIVPROC
glad_glSamplerParameterIiv	deps/glad_gl.c	/^PFNGLSAMPLERPARAMETERIIVPROC glad_glSamplerParameterIiv = NULL;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIIVPROC
glad_glSamplerParameterIuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSAMPLERPARAMETERIUIVPROC glad_glSamplerParameterIuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSAMPLERPARAMETERIUIVPROC
glad_glSamplerParameterIuiv	deps/glad_gl.c	/^PFNGLSAMPLERPARAMETERIUIVPROC glad_glSamplerParameterIuiv = NULL;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIUIVPROC
glad_glSamplerParameterf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSAMPLERPARAMETERFPROC glad_glSamplerParameterf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSAMPLERPARAMETERFPROC
glad_glSamplerParameterf	deps/glad_gl.c	/^PFNGLSAMPLERPARAMETERFPROC glad_glSamplerParameterf = NULL;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERFPROC
glad_glSamplerParameterfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSAMPLERPARAMETERFVPROC glad_glSamplerParameterfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSAMPLERPARAMETERFVPROC
glad_glSamplerParameterfv	deps/glad_gl.c	/^PFNGLSAMPLERPARAMETERFVPROC glad_glSamplerParameterfv = NULL;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERFVPROC
glad_glSamplerParameteri	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSAMPLERPARAMETERIPROC glad_glSamplerParameteri;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSAMPLERPARAMETERIPROC
glad_glSamplerParameteri	deps/glad_gl.c	/^PFNGLSAMPLERPARAMETERIPROC glad_glSamplerParameteri = NULL;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIPROC
glad_glSamplerParameteriv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSAMPLERPARAMETERIVPROC glad_glSamplerParameteriv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSAMPLERPARAMETERIVPROC
glad_glSamplerParameteriv	deps/glad_gl.c	/^PFNGLSAMPLERPARAMETERIVPROC glad_glSamplerParameteriv = NULL;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIVPROC
glad_glScaled	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSCALEDPROC glad_glScaled;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSCALEDPROC
glad_glScaled	deps/glad_gl.c	/^PFNGLSCALEDPROC glad_glScaled = NULL;$/;"	v	typeref:typename:PFNGLSCALEDPROC
glad_glScalef	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSCALEFPROC glad_glScalef;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSCALEFPROC
glad_glScalef	deps/glad_gl.c	/^PFNGLSCALEFPROC glad_glScalef = NULL;$/;"	v	typeref:typename:PFNGLSCALEFPROC
glad_glScissor	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSCISSORPROC glad_glScissor;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSCISSORPROC
glad_glScissor	deps/glad_gl.c	/^PFNGLSCISSORPROC glad_glScissor = NULL;$/;"	v	typeref:typename:PFNGLSCISSORPROC
glad_glSecondaryColor3b	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3BPROC glad_glSecondaryColor3b;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3BPROC
glad_glSecondaryColor3b	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3BPROC glad_glSecondaryColor3b = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3BPROC
glad_glSecondaryColor3bv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3BVPROC glad_glSecondaryColor3bv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3BVPROC
glad_glSecondaryColor3bv	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3BVPROC glad_glSecondaryColor3bv = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3BVPROC
glad_glSecondaryColor3d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3DPROC glad_glSecondaryColor3d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3DPROC
glad_glSecondaryColor3d	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3DPROC glad_glSecondaryColor3d = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3DPROC
glad_glSecondaryColor3dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3DVPROC glad_glSecondaryColor3dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3DVPROC
glad_glSecondaryColor3dv	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3DVPROC glad_glSecondaryColor3dv = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3DVPROC
glad_glSecondaryColor3f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3FPROC glad_glSecondaryColor3f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3FPROC
glad_glSecondaryColor3f	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3FPROC glad_glSecondaryColor3f = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3FPROC
glad_glSecondaryColor3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3FVPROC glad_glSecondaryColor3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3FVPROC
glad_glSecondaryColor3fv	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3FVPROC glad_glSecondaryColor3fv = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3FVPROC
glad_glSecondaryColor3i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3IPROC glad_glSecondaryColor3i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3IPROC
glad_glSecondaryColor3i	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3IPROC glad_glSecondaryColor3i = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3IPROC
glad_glSecondaryColor3iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3IVPROC glad_glSecondaryColor3iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3IVPROC
glad_glSecondaryColor3iv	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3IVPROC glad_glSecondaryColor3iv = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3IVPROC
glad_glSecondaryColor3s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3SPROC glad_glSecondaryColor3s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3SPROC
glad_glSecondaryColor3s	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3SPROC glad_glSecondaryColor3s = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3SPROC
glad_glSecondaryColor3sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3SVPROC glad_glSecondaryColor3sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3SVPROC
glad_glSecondaryColor3sv	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3SVPROC glad_glSecondaryColor3sv = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3SVPROC
glad_glSecondaryColor3ub	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3UBPROC glad_glSecondaryColor3ub;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3UBPROC
glad_glSecondaryColor3ub	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3UBPROC glad_glSecondaryColor3ub = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3UBPROC
glad_glSecondaryColor3ubv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3UBVPROC glad_glSecondaryColor3ubv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3UBVPROC
glad_glSecondaryColor3ubv	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3UBVPROC glad_glSecondaryColor3ubv = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3UBVPROC
glad_glSecondaryColor3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3UIPROC glad_glSecondaryColor3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3UIPROC
glad_glSecondaryColor3ui	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3UIPROC glad_glSecondaryColor3ui = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3UIPROC
glad_glSecondaryColor3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3UIVPROC glad_glSecondaryColor3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3UIVPROC
glad_glSecondaryColor3uiv	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3UIVPROC glad_glSecondaryColor3uiv = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3UIVPROC
glad_glSecondaryColor3us	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3USPROC glad_glSecondaryColor3us;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3USPROC
glad_glSecondaryColor3us	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3USPROC glad_glSecondaryColor3us = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3USPROC
glad_glSecondaryColor3usv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLOR3USVPROC glad_glSecondaryColor3usv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLOR3USVPROC
glad_glSecondaryColor3usv	deps/glad_gl.c	/^PFNGLSECONDARYCOLOR3USVPROC glad_glSecondaryColor3usv = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLOR3USVPROC
glad_glSecondaryColorP3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLORP3UIPROC glad_glSecondaryColorP3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLORP3UIPROC
glad_glSecondaryColorP3ui	deps/glad_gl.c	/^PFNGLSECONDARYCOLORP3UIPROC glad_glSecondaryColorP3ui = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLORP3UIPROC
glad_glSecondaryColorP3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLORP3UIVPROC glad_glSecondaryColorP3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLORP3UIVPROC
glad_glSecondaryColorP3uiv	deps/glad_gl.c	/^PFNGLSECONDARYCOLORP3UIVPROC glad_glSecondaryColorP3uiv = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLORP3UIVPROC
glad_glSecondaryColorPointer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSECONDARYCOLORPOINTERPROC glad_glSecondaryColorPointer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSECONDARYCOLORPOINTERPROC
glad_glSecondaryColorPointer	deps/glad_gl.c	/^PFNGLSECONDARYCOLORPOINTERPROC glad_glSecondaryColorPointer = NULL;$/;"	v	typeref:typename:PFNGLSECONDARYCOLORPOINTERPROC
glad_glSelectBuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSELECTBUFFERPROC glad_glSelectBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSELECTBUFFERPROC
glad_glSelectBuffer	deps/glad_gl.c	/^PFNGLSELECTBUFFERPROC glad_glSelectBuffer = NULL;$/;"	v	typeref:typename:PFNGLSELECTBUFFERPROC
glad_glShadeModel	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSHADEMODELPROC glad_glShadeModel;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSHADEMODELPROC
glad_glShadeModel	deps/glad_gl.c	/^PFNGLSHADEMODELPROC glad_glShadeModel = NULL;$/;"	v	typeref:typename:PFNGLSHADEMODELPROC
glad_glShaderSource	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSHADERSOURCEPROC glad_glShaderSource;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSHADERSOURCEPROC
glad_glShaderSource	deps/glad_gl.c	/^PFNGLSHADERSOURCEPROC glad_glShaderSource = NULL;$/;"	v	typeref:typename:PFNGLSHADERSOURCEPROC
glad_glStencilFunc	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSTENCILFUNCPROC glad_glStencilFunc;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSTENCILFUNCPROC
glad_glStencilFunc	deps/glad_gl.c	/^PFNGLSTENCILFUNCPROC glad_glStencilFunc = NULL;$/;"	v	typeref:typename:PFNGLSTENCILFUNCPROC
glad_glStencilFuncSeparate	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSTENCILFUNCSEPARATEPROC glad_glStencilFuncSeparate;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSTENCILFUNCSEPARATEPROC
glad_glStencilFuncSeparate	deps/glad_gl.c	/^PFNGLSTENCILFUNCSEPARATEPROC glad_glStencilFuncSeparate = NULL;$/;"	v	typeref:typename:PFNGLSTENCILFUNCSEPARATEPROC
glad_glStencilMask	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSTENCILMASKPROC glad_glStencilMask;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSTENCILMASKPROC
glad_glStencilMask	deps/glad_gl.c	/^PFNGLSTENCILMASKPROC glad_glStencilMask = NULL;$/;"	v	typeref:typename:PFNGLSTENCILMASKPROC
glad_glStencilMaskSeparate	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSTENCILMASKSEPARATEPROC glad_glStencilMaskSeparate;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSTENCILMASKSEPARATEPROC
glad_glStencilMaskSeparate	deps/glad_gl.c	/^PFNGLSTENCILMASKSEPARATEPROC glad_glStencilMaskSeparate = NULL;$/;"	v	typeref:typename:PFNGLSTENCILMASKSEPARATEPROC
glad_glStencilOp	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSTENCILOPPROC glad_glStencilOp;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSTENCILOPPROC
glad_glStencilOp	deps/glad_gl.c	/^PFNGLSTENCILOPPROC glad_glStencilOp = NULL;$/;"	v	typeref:typename:PFNGLSTENCILOPPROC
glad_glStencilOpSeparate	deps/glad/gl.h	/^GLAD_API_CALL PFNGLSTENCILOPSEPARATEPROC glad_glStencilOpSeparate;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLSTENCILOPSEPARATEPROC
glad_glStencilOpSeparate	deps/glad_gl.c	/^PFNGLSTENCILOPSEPARATEPROC glad_glStencilOpSeparate = NULL;$/;"	v	typeref:typename:PFNGLSTENCILOPSEPARATEPROC
glad_glTexBuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXBUFFERPROC glad_glTexBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXBUFFERPROC
glad_glTexBuffer	deps/glad_gl.c	/^PFNGLTEXBUFFERPROC glad_glTexBuffer = NULL;$/;"	v	typeref:typename:PFNGLTEXBUFFERPROC
glad_glTexCoord1d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD1DPROC glad_glTexCoord1d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD1DPROC
glad_glTexCoord1d	deps/glad_gl.c	/^PFNGLTEXCOORD1DPROC glad_glTexCoord1d = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD1DPROC
glad_glTexCoord1dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD1DVPROC glad_glTexCoord1dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD1DVPROC
glad_glTexCoord1dv	deps/glad_gl.c	/^PFNGLTEXCOORD1DVPROC glad_glTexCoord1dv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD1DVPROC
glad_glTexCoord1f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD1FPROC glad_glTexCoord1f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD1FPROC
glad_glTexCoord1f	deps/glad_gl.c	/^PFNGLTEXCOORD1FPROC glad_glTexCoord1f = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD1FPROC
glad_glTexCoord1fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD1FVPROC glad_glTexCoord1fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD1FVPROC
glad_glTexCoord1fv	deps/glad_gl.c	/^PFNGLTEXCOORD1FVPROC glad_glTexCoord1fv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD1FVPROC
glad_glTexCoord1i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD1IPROC glad_glTexCoord1i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD1IPROC
glad_glTexCoord1i	deps/glad_gl.c	/^PFNGLTEXCOORD1IPROC glad_glTexCoord1i = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD1IPROC
glad_glTexCoord1iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD1IVPROC glad_glTexCoord1iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD1IVPROC
glad_glTexCoord1iv	deps/glad_gl.c	/^PFNGLTEXCOORD1IVPROC glad_glTexCoord1iv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD1IVPROC
glad_glTexCoord1s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD1SPROC glad_glTexCoord1s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD1SPROC
glad_glTexCoord1s	deps/glad_gl.c	/^PFNGLTEXCOORD1SPROC glad_glTexCoord1s = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD1SPROC
glad_glTexCoord1sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD1SVPROC glad_glTexCoord1sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD1SVPROC
glad_glTexCoord1sv	deps/glad_gl.c	/^PFNGLTEXCOORD1SVPROC glad_glTexCoord1sv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD1SVPROC
glad_glTexCoord2d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD2DPROC glad_glTexCoord2d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD2DPROC
glad_glTexCoord2d	deps/glad_gl.c	/^PFNGLTEXCOORD2DPROC glad_glTexCoord2d = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD2DPROC
glad_glTexCoord2dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD2DVPROC glad_glTexCoord2dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD2DVPROC
glad_glTexCoord2dv	deps/glad_gl.c	/^PFNGLTEXCOORD2DVPROC glad_glTexCoord2dv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD2DVPROC
glad_glTexCoord2f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD2FPROC glad_glTexCoord2f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD2FPROC
glad_glTexCoord2f	deps/glad_gl.c	/^PFNGLTEXCOORD2FPROC glad_glTexCoord2f = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD2FPROC
glad_glTexCoord2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD2FVPROC glad_glTexCoord2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD2FVPROC
glad_glTexCoord2fv	deps/glad_gl.c	/^PFNGLTEXCOORD2FVPROC glad_glTexCoord2fv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD2FVPROC
glad_glTexCoord2i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD2IPROC glad_glTexCoord2i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD2IPROC
glad_glTexCoord2i	deps/glad_gl.c	/^PFNGLTEXCOORD2IPROC glad_glTexCoord2i = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD2IPROC
glad_glTexCoord2iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD2IVPROC glad_glTexCoord2iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD2IVPROC
glad_glTexCoord2iv	deps/glad_gl.c	/^PFNGLTEXCOORD2IVPROC glad_glTexCoord2iv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD2IVPROC
glad_glTexCoord2s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD2SPROC glad_glTexCoord2s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD2SPROC
glad_glTexCoord2s	deps/glad_gl.c	/^PFNGLTEXCOORD2SPROC glad_glTexCoord2s = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD2SPROC
glad_glTexCoord2sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD2SVPROC glad_glTexCoord2sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD2SVPROC
glad_glTexCoord2sv	deps/glad_gl.c	/^PFNGLTEXCOORD2SVPROC glad_glTexCoord2sv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD2SVPROC
glad_glTexCoord3d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD3DPROC glad_glTexCoord3d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD3DPROC
glad_glTexCoord3d	deps/glad_gl.c	/^PFNGLTEXCOORD3DPROC glad_glTexCoord3d = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD3DPROC
glad_glTexCoord3dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD3DVPROC glad_glTexCoord3dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD3DVPROC
glad_glTexCoord3dv	deps/glad_gl.c	/^PFNGLTEXCOORD3DVPROC glad_glTexCoord3dv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD3DVPROC
glad_glTexCoord3f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD3FPROC glad_glTexCoord3f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD3FPROC
glad_glTexCoord3f	deps/glad_gl.c	/^PFNGLTEXCOORD3FPROC glad_glTexCoord3f = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD3FPROC
glad_glTexCoord3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD3FVPROC glad_glTexCoord3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD3FVPROC
glad_glTexCoord3fv	deps/glad_gl.c	/^PFNGLTEXCOORD3FVPROC glad_glTexCoord3fv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD3FVPROC
glad_glTexCoord3i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD3IPROC glad_glTexCoord3i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD3IPROC
glad_glTexCoord3i	deps/glad_gl.c	/^PFNGLTEXCOORD3IPROC glad_glTexCoord3i = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD3IPROC
glad_glTexCoord3iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD3IVPROC glad_glTexCoord3iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD3IVPROC
glad_glTexCoord3iv	deps/glad_gl.c	/^PFNGLTEXCOORD3IVPROC glad_glTexCoord3iv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD3IVPROC
glad_glTexCoord3s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD3SPROC glad_glTexCoord3s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD3SPROC
glad_glTexCoord3s	deps/glad_gl.c	/^PFNGLTEXCOORD3SPROC glad_glTexCoord3s = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD3SPROC
glad_glTexCoord3sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD3SVPROC glad_glTexCoord3sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD3SVPROC
glad_glTexCoord3sv	deps/glad_gl.c	/^PFNGLTEXCOORD3SVPROC glad_glTexCoord3sv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD3SVPROC
glad_glTexCoord4d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD4DPROC glad_glTexCoord4d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD4DPROC
glad_glTexCoord4d	deps/glad_gl.c	/^PFNGLTEXCOORD4DPROC glad_glTexCoord4d = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD4DPROC
glad_glTexCoord4dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD4DVPROC glad_glTexCoord4dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD4DVPROC
glad_glTexCoord4dv	deps/glad_gl.c	/^PFNGLTEXCOORD4DVPROC glad_glTexCoord4dv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD4DVPROC
glad_glTexCoord4f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD4FPROC glad_glTexCoord4f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD4FPROC
glad_glTexCoord4f	deps/glad_gl.c	/^PFNGLTEXCOORD4FPROC glad_glTexCoord4f = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD4FPROC
glad_glTexCoord4fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD4FVPROC glad_glTexCoord4fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD4FVPROC
glad_glTexCoord4fv	deps/glad_gl.c	/^PFNGLTEXCOORD4FVPROC glad_glTexCoord4fv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD4FVPROC
glad_glTexCoord4i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD4IPROC glad_glTexCoord4i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD4IPROC
glad_glTexCoord4i	deps/glad_gl.c	/^PFNGLTEXCOORD4IPROC glad_glTexCoord4i = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD4IPROC
glad_glTexCoord4iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD4IVPROC glad_glTexCoord4iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD4IVPROC
glad_glTexCoord4iv	deps/glad_gl.c	/^PFNGLTEXCOORD4IVPROC glad_glTexCoord4iv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD4IVPROC
glad_glTexCoord4s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD4SPROC glad_glTexCoord4s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD4SPROC
glad_glTexCoord4s	deps/glad_gl.c	/^PFNGLTEXCOORD4SPROC glad_glTexCoord4s = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD4SPROC
glad_glTexCoord4sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORD4SVPROC glad_glTexCoord4sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORD4SVPROC
glad_glTexCoord4sv	deps/glad_gl.c	/^PFNGLTEXCOORD4SVPROC glad_glTexCoord4sv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORD4SVPROC
glad_glTexCoordP1ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORDP1UIPROC glad_glTexCoordP1ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORDP1UIPROC
glad_glTexCoordP1ui	deps/glad_gl.c	/^PFNGLTEXCOORDP1UIPROC glad_glTexCoordP1ui = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORDP1UIPROC
glad_glTexCoordP1uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORDP1UIVPROC glad_glTexCoordP1uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORDP1UIVPROC
glad_glTexCoordP1uiv	deps/glad_gl.c	/^PFNGLTEXCOORDP1UIVPROC glad_glTexCoordP1uiv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORDP1UIVPROC
glad_glTexCoordP2ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORDP2UIPROC glad_glTexCoordP2ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORDP2UIPROC
glad_glTexCoordP2ui	deps/glad_gl.c	/^PFNGLTEXCOORDP2UIPROC glad_glTexCoordP2ui = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORDP2UIPROC
glad_glTexCoordP2uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORDP2UIVPROC glad_glTexCoordP2uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORDP2UIVPROC
glad_glTexCoordP2uiv	deps/glad_gl.c	/^PFNGLTEXCOORDP2UIVPROC glad_glTexCoordP2uiv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORDP2UIVPROC
glad_glTexCoordP3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORDP3UIPROC glad_glTexCoordP3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORDP3UIPROC
glad_glTexCoordP3ui	deps/glad_gl.c	/^PFNGLTEXCOORDP3UIPROC glad_glTexCoordP3ui = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORDP3UIPROC
glad_glTexCoordP3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORDP3UIVPROC glad_glTexCoordP3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORDP3UIVPROC
glad_glTexCoordP3uiv	deps/glad_gl.c	/^PFNGLTEXCOORDP3UIVPROC glad_glTexCoordP3uiv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORDP3UIVPROC
glad_glTexCoordP4ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORDP4UIPROC glad_glTexCoordP4ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORDP4UIPROC
glad_glTexCoordP4ui	deps/glad_gl.c	/^PFNGLTEXCOORDP4UIPROC glad_glTexCoordP4ui = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORDP4UIPROC
glad_glTexCoordP4uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORDP4UIVPROC glad_glTexCoordP4uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORDP4UIVPROC
glad_glTexCoordP4uiv	deps/glad_gl.c	/^PFNGLTEXCOORDP4UIVPROC glad_glTexCoordP4uiv = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORDP4UIVPROC
glad_glTexCoordPointer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXCOORDPOINTERPROC glad_glTexCoordPointer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXCOORDPOINTERPROC
glad_glTexCoordPointer	deps/glad_gl.c	/^PFNGLTEXCOORDPOINTERPROC glad_glTexCoordPointer = NULL;$/;"	v	typeref:typename:PFNGLTEXCOORDPOINTERPROC
glad_glTexEnvf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXENVFPROC glad_glTexEnvf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXENVFPROC
glad_glTexEnvf	deps/glad_gl.c	/^PFNGLTEXENVFPROC glad_glTexEnvf = NULL;$/;"	v	typeref:typename:PFNGLTEXENVFPROC
glad_glTexEnvfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXENVFVPROC glad_glTexEnvfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXENVFVPROC
glad_glTexEnvfv	deps/glad_gl.c	/^PFNGLTEXENVFVPROC glad_glTexEnvfv = NULL;$/;"	v	typeref:typename:PFNGLTEXENVFVPROC
glad_glTexEnvi	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXENVIPROC glad_glTexEnvi;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXENVIPROC
glad_glTexEnvi	deps/glad_gl.c	/^PFNGLTEXENVIPROC glad_glTexEnvi = NULL;$/;"	v	typeref:typename:PFNGLTEXENVIPROC
glad_glTexEnviv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXENVIVPROC glad_glTexEnviv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXENVIVPROC
glad_glTexEnviv	deps/glad_gl.c	/^PFNGLTEXENVIVPROC glad_glTexEnviv = NULL;$/;"	v	typeref:typename:PFNGLTEXENVIVPROC
glad_glTexGend	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXGENDPROC glad_glTexGend;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXGENDPROC
glad_glTexGend	deps/glad_gl.c	/^PFNGLTEXGENDPROC glad_glTexGend = NULL;$/;"	v	typeref:typename:PFNGLTEXGENDPROC
glad_glTexGendv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXGENDVPROC glad_glTexGendv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXGENDVPROC
glad_glTexGendv	deps/glad_gl.c	/^PFNGLTEXGENDVPROC glad_glTexGendv = NULL;$/;"	v	typeref:typename:PFNGLTEXGENDVPROC
glad_glTexGenf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXGENFPROC glad_glTexGenf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXGENFPROC
glad_glTexGenf	deps/glad_gl.c	/^PFNGLTEXGENFPROC glad_glTexGenf = NULL;$/;"	v	typeref:typename:PFNGLTEXGENFPROC
glad_glTexGenfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXGENFVPROC glad_glTexGenfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXGENFVPROC
glad_glTexGenfv	deps/glad_gl.c	/^PFNGLTEXGENFVPROC glad_glTexGenfv = NULL;$/;"	v	typeref:typename:PFNGLTEXGENFVPROC
glad_glTexGeni	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXGENIPROC glad_glTexGeni;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXGENIPROC
glad_glTexGeni	deps/glad_gl.c	/^PFNGLTEXGENIPROC glad_glTexGeni = NULL;$/;"	v	typeref:typename:PFNGLTEXGENIPROC
glad_glTexGeniv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXGENIVPROC glad_glTexGeniv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXGENIVPROC
glad_glTexGeniv	deps/glad_gl.c	/^PFNGLTEXGENIVPROC glad_glTexGeniv = NULL;$/;"	v	typeref:typename:PFNGLTEXGENIVPROC
glad_glTexImage1D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXIMAGE1DPROC glad_glTexImage1D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXIMAGE1DPROC
glad_glTexImage1D	deps/glad_gl.c	/^PFNGLTEXIMAGE1DPROC glad_glTexImage1D = NULL;$/;"	v	typeref:typename:PFNGLTEXIMAGE1DPROC
glad_glTexImage2D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXIMAGE2DPROC glad_glTexImage2D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXIMAGE2DPROC
glad_glTexImage2D	deps/glad_gl.c	/^PFNGLTEXIMAGE2DPROC glad_glTexImage2D = NULL;$/;"	v	typeref:typename:PFNGLTEXIMAGE2DPROC
glad_glTexImage2DMultisample	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXIMAGE2DMULTISAMPLEPROC glad_glTexImage2DMultisample;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXIMAGE2DMULTISAMPLEPROC
glad_glTexImage2DMultisample	deps/glad_gl.c	/^PFNGLTEXIMAGE2DMULTISAMPLEPROC glad_glTexImage2DMultisample = NULL;$/;"	v	typeref:typename:PFNGLTEXIMAGE2DMULTISAMPLEPROC
glad_glTexImage3D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXIMAGE3DPROC glad_glTexImage3D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXIMAGE3DPROC
glad_glTexImage3D	deps/glad_gl.c	/^PFNGLTEXIMAGE3DPROC glad_glTexImage3D = NULL;$/;"	v	typeref:typename:PFNGLTEXIMAGE3DPROC
glad_glTexImage3DMultisample	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXIMAGE3DMULTISAMPLEPROC glad_glTexImage3DMultisample;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXIMAGE3DMULTISAMPLEPROC
glad_glTexImage3DMultisample	deps/glad_gl.c	/^PFNGLTEXIMAGE3DMULTISAMPLEPROC glad_glTexImage3DMultisample = NULL;$/;"	v	typeref:typename:PFNGLTEXIMAGE3DMULTISAMPLEPROC
glad_glTexParameterIiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXPARAMETERIIVPROC glad_glTexParameterIiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXPARAMETERIIVPROC
glad_glTexParameterIiv	deps/glad_gl.c	/^PFNGLTEXPARAMETERIIVPROC glad_glTexParameterIiv = NULL;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIIVPROC
glad_glTexParameterIuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXPARAMETERIUIVPROC glad_glTexParameterIuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXPARAMETERIUIVPROC
glad_glTexParameterIuiv	deps/glad_gl.c	/^PFNGLTEXPARAMETERIUIVPROC glad_glTexParameterIuiv = NULL;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIUIVPROC
glad_glTexParameterf	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXPARAMETERFPROC glad_glTexParameterf;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXPARAMETERFPROC
glad_glTexParameterf	deps/glad_gl.c	/^PFNGLTEXPARAMETERFPROC glad_glTexParameterf = NULL;$/;"	v	typeref:typename:PFNGLTEXPARAMETERFPROC
glad_glTexParameterfv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXPARAMETERFVPROC glad_glTexParameterfv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXPARAMETERFVPROC
glad_glTexParameterfv	deps/glad_gl.c	/^PFNGLTEXPARAMETERFVPROC glad_glTexParameterfv = NULL;$/;"	v	typeref:typename:PFNGLTEXPARAMETERFVPROC
glad_glTexParameteri	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXPARAMETERIPROC glad_glTexParameteri;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXPARAMETERIPROC
glad_glTexParameteri	deps/glad_gl.c	/^PFNGLTEXPARAMETERIPROC glad_glTexParameteri = NULL;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIPROC
glad_glTexParameteriv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXPARAMETERIVPROC glad_glTexParameteriv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXPARAMETERIVPROC
glad_glTexParameteriv	deps/glad_gl.c	/^PFNGLTEXPARAMETERIVPROC glad_glTexParameteriv = NULL;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIVPROC
glad_glTexSubImage1D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXSUBIMAGE1DPROC glad_glTexSubImage1D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXSUBIMAGE1DPROC
glad_glTexSubImage1D	deps/glad_gl.c	/^PFNGLTEXSUBIMAGE1DPROC glad_glTexSubImage1D = NULL;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE1DPROC
glad_glTexSubImage2D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXSUBIMAGE2DPROC glad_glTexSubImage2D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXSUBIMAGE2DPROC
glad_glTexSubImage2D	deps/glad_gl.c	/^PFNGLTEXSUBIMAGE2DPROC glad_glTexSubImage2D = NULL;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE2DPROC
glad_glTexSubImage3D	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTEXSUBIMAGE3DPROC glad_glTexSubImage3D;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTEXSUBIMAGE3DPROC
glad_glTexSubImage3D	deps/glad_gl.c	/^PFNGLTEXSUBIMAGE3DPROC glad_glTexSubImage3D = NULL;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE3DPROC
glad_glTransformFeedbackVaryings	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTRANSFORMFEEDBACKVARYINGSPROC glad_glTransformFeedbackVaryings;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTRANSFORMFEEDBACKVARYINGSPROC
glad_glTransformFeedbackVaryings	deps/glad_gl.c	/^PFNGLTRANSFORMFEEDBACKVARYINGSPROC glad_glTransformFeedbackVaryings = NULL;$/;"	v	typeref:typename:PFNGLTRANSFORMFEEDBACKVARYINGSPROC
glad_glTranslated	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTRANSLATEDPROC glad_glTranslated;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTRANSLATEDPROC
glad_glTranslated	deps/glad_gl.c	/^PFNGLTRANSLATEDPROC glad_glTranslated = NULL;$/;"	v	typeref:typename:PFNGLTRANSLATEDPROC
glad_glTranslatef	deps/glad/gl.h	/^GLAD_API_CALL PFNGLTRANSLATEFPROC glad_glTranslatef;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLTRANSLATEFPROC
glad_glTranslatef	deps/glad_gl.c	/^PFNGLTRANSLATEFPROC glad_glTranslatef = NULL;$/;"	v	typeref:typename:PFNGLTRANSLATEFPROC
glad_glUniform1f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM1FPROC glad_glUniform1f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM1FPROC
glad_glUniform1f	deps/glad_gl.c	/^PFNGLUNIFORM1FPROC glad_glUniform1f = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM1FPROC
glad_glUniform1fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM1FVPROC glad_glUniform1fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM1FVPROC
glad_glUniform1fv	deps/glad_gl.c	/^PFNGLUNIFORM1FVPROC glad_glUniform1fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM1FVPROC
glad_glUniform1i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM1IPROC glad_glUniform1i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM1IPROC
glad_glUniform1i	deps/glad_gl.c	/^PFNGLUNIFORM1IPROC glad_glUniform1i = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM1IPROC
glad_glUniform1iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM1IVPROC glad_glUniform1iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM1IVPROC
glad_glUniform1iv	deps/glad_gl.c	/^PFNGLUNIFORM1IVPROC glad_glUniform1iv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM1IVPROC
glad_glUniform1ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM1UIPROC glad_glUniform1ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM1UIPROC
glad_glUniform1ui	deps/glad_gl.c	/^PFNGLUNIFORM1UIPROC glad_glUniform1ui = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM1UIPROC
glad_glUniform1uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM1UIVPROC glad_glUniform1uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM1UIVPROC
glad_glUniform1uiv	deps/glad_gl.c	/^PFNGLUNIFORM1UIVPROC glad_glUniform1uiv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM1UIVPROC
glad_glUniform2f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM2FPROC glad_glUniform2f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM2FPROC
glad_glUniform2f	deps/glad_gl.c	/^PFNGLUNIFORM2FPROC glad_glUniform2f = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM2FPROC
glad_glUniform2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM2FVPROC glad_glUniform2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM2FVPROC
glad_glUniform2fv	deps/glad_gl.c	/^PFNGLUNIFORM2FVPROC glad_glUniform2fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM2FVPROC
glad_glUniform2i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM2IPROC glad_glUniform2i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM2IPROC
glad_glUniform2i	deps/glad_gl.c	/^PFNGLUNIFORM2IPROC glad_glUniform2i = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM2IPROC
glad_glUniform2iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM2IVPROC glad_glUniform2iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM2IVPROC
glad_glUniform2iv	deps/glad_gl.c	/^PFNGLUNIFORM2IVPROC glad_glUniform2iv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM2IVPROC
glad_glUniform2ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM2UIPROC glad_glUniform2ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM2UIPROC
glad_glUniform2ui	deps/glad_gl.c	/^PFNGLUNIFORM2UIPROC glad_glUniform2ui = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM2UIPROC
glad_glUniform2uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM2UIVPROC glad_glUniform2uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM2UIVPROC
glad_glUniform2uiv	deps/glad_gl.c	/^PFNGLUNIFORM2UIVPROC glad_glUniform2uiv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM2UIVPROC
glad_glUniform3f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM3FPROC glad_glUniform3f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM3FPROC
glad_glUniform3f	deps/glad_gl.c	/^PFNGLUNIFORM3FPROC glad_glUniform3f = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM3FPROC
glad_glUniform3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM3FVPROC glad_glUniform3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM3FVPROC
glad_glUniform3fv	deps/glad_gl.c	/^PFNGLUNIFORM3FVPROC glad_glUniform3fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM3FVPROC
glad_glUniform3i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM3IPROC glad_glUniform3i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM3IPROC
glad_glUniform3i	deps/glad_gl.c	/^PFNGLUNIFORM3IPROC glad_glUniform3i = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM3IPROC
glad_glUniform3iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM3IVPROC glad_glUniform3iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM3IVPROC
glad_glUniform3iv	deps/glad_gl.c	/^PFNGLUNIFORM3IVPROC glad_glUniform3iv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM3IVPROC
glad_glUniform3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM3UIPROC glad_glUniform3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM3UIPROC
glad_glUniform3ui	deps/glad_gl.c	/^PFNGLUNIFORM3UIPROC glad_glUniform3ui = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM3UIPROC
glad_glUniform3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM3UIVPROC glad_glUniform3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM3UIVPROC
glad_glUniform3uiv	deps/glad_gl.c	/^PFNGLUNIFORM3UIVPROC glad_glUniform3uiv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM3UIVPROC
glad_glUniform4f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM4FPROC glad_glUniform4f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM4FPROC
glad_glUniform4f	deps/glad_gl.c	/^PFNGLUNIFORM4FPROC glad_glUniform4f = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM4FPROC
glad_glUniform4fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM4FVPROC glad_glUniform4fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM4FVPROC
glad_glUniform4fv	deps/glad_gl.c	/^PFNGLUNIFORM4FVPROC glad_glUniform4fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM4FVPROC
glad_glUniform4i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM4IPROC glad_glUniform4i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM4IPROC
glad_glUniform4i	deps/glad_gl.c	/^PFNGLUNIFORM4IPROC glad_glUniform4i = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM4IPROC
glad_glUniform4iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM4IVPROC glad_glUniform4iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM4IVPROC
glad_glUniform4iv	deps/glad_gl.c	/^PFNGLUNIFORM4IVPROC glad_glUniform4iv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM4IVPROC
glad_glUniform4ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM4UIPROC glad_glUniform4ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM4UIPROC
glad_glUniform4ui	deps/glad_gl.c	/^PFNGLUNIFORM4UIPROC glad_glUniform4ui = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM4UIPROC
glad_glUniform4uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORM4UIVPROC glad_glUniform4uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORM4UIVPROC
glad_glUniform4uiv	deps/glad_gl.c	/^PFNGLUNIFORM4UIVPROC glad_glUniform4uiv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORM4UIVPROC
glad_glUniformBlockBinding	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORMBLOCKBINDINGPROC glad_glUniformBlockBinding;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORMBLOCKBINDINGPROC
glad_glUniformBlockBinding	deps/glad_gl.c	/^PFNGLUNIFORMBLOCKBINDINGPROC glad_glUniformBlockBinding = NULL;$/;"	v	typeref:typename:PFNGLUNIFORMBLOCKBINDINGPROC
glad_glUniformMatrix2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORMMATRIX2FVPROC glad_glUniformMatrix2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORMMATRIX2FVPROC
glad_glUniformMatrix2fv	deps/glad_gl.c	/^PFNGLUNIFORMMATRIX2FVPROC glad_glUniformMatrix2fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2FVPROC
glad_glUniformMatrix2x3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORMMATRIX2X3FVPROC glad_glUniformMatrix2x3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORMMATRIX2X3FVPROC
glad_glUniformMatrix2x3fv	deps/glad_gl.c	/^PFNGLUNIFORMMATRIX2X3FVPROC glad_glUniformMatrix2x3fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X3FVPROC
glad_glUniformMatrix2x4fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORMMATRIX2X4FVPROC glad_glUniformMatrix2x4fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORMMATRIX2X4FVPROC
glad_glUniformMatrix2x4fv	deps/glad_gl.c	/^PFNGLUNIFORMMATRIX2X4FVPROC glad_glUniformMatrix2x4fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X4FVPROC
glad_glUniformMatrix3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORMMATRIX3FVPROC glad_glUniformMatrix3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORMMATRIX3FVPROC
glad_glUniformMatrix3fv	deps/glad_gl.c	/^PFNGLUNIFORMMATRIX3FVPROC glad_glUniformMatrix3fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3FVPROC
glad_glUniformMatrix3x2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORMMATRIX3X2FVPROC glad_glUniformMatrix3x2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORMMATRIX3X2FVPROC
glad_glUniformMatrix3x2fv	deps/glad_gl.c	/^PFNGLUNIFORMMATRIX3X2FVPROC glad_glUniformMatrix3x2fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X2FVPROC
glad_glUniformMatrix3x4fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORMMATRIX3X4FVPROC glad_glUniformMatrix3x4fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORMMATRIX3X4FVPROC
glad_glUniformMatrix3x4fv	deps/glad_gl.c	/^PFNGLUNIFORMMATRIX3X4FVPROC glad_glUniformMatrix3x4fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X4FVPROC
glad_glUniformMatrix4fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORMMATRIX4FVPROC glad_glUniformMatrix4fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORMMATRIX4FVPROC
glad_glUniformMatrix4fv	deps/glad_gl.c	/^PFNGLUNIFORMMATRIX4FVPROC glad_glUniformMatrix4fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4FVPROC
glad_glUniformMatrix4x2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORMMATRIX4X2FVPROC glad_glUniformMatrix4x2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORMMATRIX4X2FVPROC
glad_glUniformMatrix4x2fv	deps/glad_gl.c	/^PFNGLUNIFORMMATRIX4X2FVPROC glad_glUniformMatrix4x2fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X2FVPROC
glad_glUniformMatrix4x3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNIFORMMATRIX4X3FVPROC glad_glUniformMatrix4x3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNIFORMMATRIX4X3FVPROC
glad_glUniformMatrix4x3fv	deps/glad_gl.c	/^PFNGLUNIFORMMATRIX4X3FVPROC glad_glUniformMatrix4x3fv = NULL;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X3FVPROC
glad_glUnmapBuffer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUNMAPBUFFERPROC glad_glUnmapBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUNMAPBUFFERPROC
glad_glUnmapBuffer	deps/glad_gl.c	/^PFNGLUNMAPBUFFERPROC glad_glUnmapBuffer = NULL;$/;"	v	typeref:typename:PFNGLUNMAPBUFFERPROC
glad_glUseProgram	deps/glad/gl.h	/^GLAD_API_CALL PFNGLUSEPROGRAMPROC glad_glUseProgram;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLUSEPROGRAMPROC
glad_glUseProgram	deps/glad_gl.c	/^PFNGLUSEPROGRAMPROC glad_glUseProgram = NULL;$/;"	v	typeref:typename:PFNGLUSEPROGRAMPROC
glad_glValidateProgram	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVALIDATEPROGRAMPROC glad_glValidateProgram;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVALIDATEPROGRAMPROC
glad_glValidateProgram	deps/glad_gl.c	/^PFNGLVALIDATEPROGRAMPROC glad_glValidateProgram = NULL;$/;"	v	typeref:typename:PFNGLVALIDATEPROGRAMPROC
glad_glVertex2d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX2DPROC glad_glVertex2d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX2DPROC
glad_glVertex2d	deps/glad_gl.c	/^PFNGLVERTEX2DPROC glad_glVertex2d = NULL;$/;"	v	typeref:typename:PFNGLVERTEX2DPROC
glad_glVertex2dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX2DVPROC glad_glVertex2dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX2DVPROC
glad_glVertex2dv	deps/glad_gl.c	/^PFNGLVERTEX2DVPROC glad_glVertex2dv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX2DVPROC
glad_glVertex2f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX2FPROC glad_glVertex2f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX2FPROC
glad_glVertex2f	deps/glad_gl.c	/^PFNGLVERTEX2FPROC glad_glVertex2f = NULL;$/;"	v	typeref:typename:PFNGLVERTEX2FPROC
glad_glVertex2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX2FVPROC glad_glVertex2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX2FVPROC
glad_glVertex2fv	deps/glad_gl.c	/^PFNGLVERTEX2FVPROC glad_glVertex2fv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX2FVPROC
glad_glVertex2i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX2IPROC glad_glVertex2i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX2IPROC
glad_glVertex2i	deps/glad_gl.c	/^PFNGLVERTEX2IPROC glad_glVertex2i = NULL;$/;"	v	typeref:typename:PFNGLVERTEX2IPROC
glad_glVertex2iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX2IVPROC glad_glVertex2iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX2IVPROC
glad_glVertex2iv	deps/glad_gl.c	/^PFNGLVERTEX2IVPROC glad_glVertex2iv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX2IVPROC
glad_glVertex2s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX2SPROC glad_glVertex2s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX2SPROC
glad_glVertex2s	deps/glad_gl.c	/^PFNGLVERTEX2SPROC glad_glVertex2s = NULL;$/;"	v	typeref:typename:PFNGLVERTEX2SPROC
glad_glVertex2sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX2SVPROC glad_glVertex2sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX2SVPROC
glad_glVertex2sv	deps/glad_gl.c	/^PFNGLVERTEX2SVPROC glad_glVertex2sv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX2SVPROC
glad_glVertex3d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX3DPROC glad_glVertex3d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX3DPROC
glad_glVertex3d	deps/glad_gl.c	/^PFNGLVERTEX3DPROC glad_glVertex3d = NULL;$/;"	v	typeref:typename:PFNGLVERTEX3DPROC
glad_glVertex3dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX3DVPROC glad_glVertex3dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX3DVPROC
glad_glVertex3dv	deps/glad_gl.c	/^PFNGLVERTEX3DVPROC glad_glVertex3dv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX3DVPROC
glad_glVertex3f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX3FPROC glad_glVertex3f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX3FPROC
glad_glVertex3f	deps/glad_gl.c	/^PFNGLVERTEX3FPROC glad_glVertex3f = NULL;$/;"	v	typeref:typename:PFNGLVERTEX3FPROC
glad_glVertex3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX3FVPROC glad_glVertex3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX3FVPROC
glad_glVertex3fv	deps/glad_gl.c	/^PFNGLVERTEX3FVPROC glad_glVertex3fv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX3FVPROC
glad_glVertex3i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX3IPROC glad_glVertex3i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX3IPROC
glad_glVertex3i	deps/glad_gl.c	/^PFNGLVERTEX3IPROC glad_glVertex3i = NULL;$/;"	v	typeref:typename:PFNGLVERTEX3IPROC
glad_glVertex3iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX3IVPROC glad_glVertex3iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX3IVPROC
glad_glVertex3iv	deps/glad_gl.c	/^PFNGLVERTEX3IVPROC glad_glVertex3iv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX3IVPROC
glad_glVertex3s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX3SPROC glad_glVertex3s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX3SPROC
glad_glVertex3s	deps/glad_gl.c	/^PFNGLVERTEX3SPROC glad_glVertex3s = NULL;$/;"	v	typeref:typename:PFNGLVERTEX3SPROC
glad_glVertex3sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX3SVPROC glad_glVertex3sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX3SVPROC
glad_glVertex3sv	deps/glad_gl.c	/^PFNGLVERTEX3SVPROC glad_glVertex3sv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX3SVPROC
glad_glVertex4d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX4DPROC glad_glVertex4d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX4DPROC
glad_glVertex4d	deps/glad_gl.c	/^PFNGLVERTEX4DPROC glad_glVertex4d = NULL;$/;"	v	typeref:typename:PFNGLVERTEX4DPROC
glad_glVertex4dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX4DVPROC glad_glVertex4dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX4DVPROC
glad_glVertex4dv	deps/glad_gl.c	/^PFNGLVERTEX4DVPROC glad_glVertex4dv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX4DVPROC
glad_glVertex4f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX4FPROC glad_glVertex4f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX4FPROC
glad_glVertex4f	deps/glad_gl.c	/^PFNGLVERTEX4FPROC glad_glVertex4f = NULL;$/;"	v	typeref:typename:PFNGLVERTEX4FPROC
glad_glVertex4fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX4FVPROC glad_glVertex4fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX4FVPROC
glad_glVertex4fv	deps/glad_gl.c	/^PFNGLVERTEX4FVPROC glad_glVertex4fv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX4FVPROC
glad_glVertex4i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX4IPROC glad_glVertex4i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX4IPROC
glad_glVertex4i	deps/glad_gl.c	/^PFNGLVERTEX4IPROC glad_glVertex4i = NULL;$/;"	v	typeref:typename:PFNGLVERTEX4IPROC
glad_glVertex4iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX4IVPROC glad_glVertex4iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX4IVPROC
glad_glVertex4iv	deps/glad_gl.c	/^PFNGLVERTEX4IVPROC glad_glVertex4iv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX4IVPROC
glad_glVertex4s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX4SPROC glad_glVertex4s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX4SPROC
glad_glVertex4s	deps/glad_gl.c	/^PFNGLVERTEX4SPROC glad_glVertex4s = NULL;$/;"	v	typeref:typename:PFNGLVERTEX4SPROC
glad_glVertex4sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEX4SVPROC glad_glVertex4sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEX4SVPROC
glad_glVertex4sv	deps/glad_gl.c	/^PFNGLVERTEX4SVPROC glad_glVertex4sv = NULL;$/;"	v	typeref:typename:PFNGLVERTEX4SVPROC
glad_glVertexAttrib1d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB1DPROC glad_glVertexAttrib1d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB1DPROC
glad_glVertexAttrib1d	deps/glad_gl.c	/^PFNGLVERTEXATTRIB1DPROC glad_glVertexAttrib1d = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1DPROC
glad_glVertexAttrib1dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB1DVPROC glad_glVertexAttrib1dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB1DVPROC
glad_glVertexAttrib1dv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB1DVPROC glad_glVertexAttrib1dv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1DVPROC
glad_glVertexAttrib1f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB1FPROC glad_glVertexAttrib1f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB1FPROC
glad_glVertexAttrib1f	deps/glad_gl.c	/^PFNGLVERTEXATTRIB1FPROC glad_glVertexAttrib1f = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1FPROC
glad_glVertexAttrib1fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB1FVPROC glad_glVertexAttrib1fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB1FVPROC
glad_glVertexAttrib1fv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB1FVPROC glad_glVertexAttrib1fv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1FVPROC
glad_glVertexAttrib1s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB1SPROC glad_glVertexAttrib1s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB1SPROC
glad_glVertexAttrib1s	deps/glad_gl.c	/^PFNGLVERTEXATTRIB1SPROC glad_glVertexAttrib1s = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1SPROC
glad_glVertexAttrib1sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB1SVPROC glad_glVertexAttrib1sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB1SVPROC
glad_glVertexAttrib1sv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB1SVPROC glad_glVertexAttrib1sv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1SVPROC
glad_glVertexAttrib2d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB2DPROC glad_glVertexAttrib2d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB2DPROC
glad_glVertexAttrib2d	deps/glad_gl.c	/^PFNGLVERTEXATTRIB2DPROC glad_glVertexAttrib2d = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2DPROC
glad_glVertexAttrib2dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB2DVPROC glad_glVertexAttrib2dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB2DVPROC
glad_glVertexAttrib2dv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB2DVPROC glad_glVertexAttrib2dv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2DVPROC
glad_glVertexAttrib2f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB2FPROC glad_glVertexAttrib2f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB2FPROC
glad_glVertexAttrib2f	deps/glad_gl.c	/^PFNGLVERTEXATTRIB2FPROC glad_glVertexAttrib2f = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2FPROC
glad_glVertexAttrib2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB2FVPROC glad_glVertexAttrib2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB2FVPROC
glad_glVertexAttrib2fv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB2FVPROC glad_glVertexAttrib2fv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2FVPROC
glad_glVertexAttrib2s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB2SPROC glad_glVertexAttrib2s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB2SPROC
glad_glVertexAttrib2s	deps/glad_gl.c	/^PFNGLVERTEXATTRIB2SPROC glad_glVertexAttrib2s = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2SPROC
glad_glVertexAttrib2sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB2SVPROC glad_glVertexAttrib2sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB2SVPROC
glad_glVertexAttrib2sv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB2SVPROC glad_glVertexAttrib2sv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2SVPROC
glad_glVertexAttrib3d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB3DPROC glad_glVertexAttrib3d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB3DPROC
glad_glVertexAttrib3d	deps/glad_gl.c	/^PFNGLVERTEXATTRIB3DPROC glad_glVertexAttrib3d = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3DPROC
glad_glVertexAttrib3dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB3DVPROC glad_glVertexAttrib3dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB3DVPROC
glad_glVertexAttrib3dv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB3DVPROC glad_glVertexAttrib3dv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3DVPROC
glad_glVertexAttrib3f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB3FPROC glad_glVertexAttrib3f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB3FPROC
glad_glVertexAttrib3f	deps/glad_gl.c	/^PFNGLVERTEXATTRIB3FPROC glad_glVertexAttrib3f = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3FPROC
glad_glVertexAttrib3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB3FVPROC glad_glVertexAttrib3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB3FVPROC
glad_glVertexAttrib3fv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB3FVPROC glad_glVertexAttrib3fv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3FVPROC
glad_glVertexAttrib3s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB3SPROC glad_glVertexAttrib3s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB3SPROC
glad_glVertexAttrib3s	deps/glad_gl.c	/^PFNGLVERTEXATTRIB3SPROC glad_glVertexAttrib3s = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3SPROC
glad_glVertexAttrib3sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB3SVPROC glad_glVertexAttrib3sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB3SVPROC
glad_glVertexAttrib3sv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB3SVPROC glad_glVertexAttrib3sv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3SVPROC
glad_glVertexAttrib4Nbv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4NBVPROC glad_glVertexAttrib4Nbv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4NBVPROC
glad_glVertexAttrib4Nbv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4NBVPROC glad_glVertexAttrib4Nbv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NBVPROC
glad_glVertexAttrib4Niv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4NIVPROC glad_glVertexAttrib4Niv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4NIVPROC
glad_glVertexAttrib4Niv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4NIVPROC glad_glVertexAttrib4Niv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NIVPROC
glad_glVertexAttrib4Nsv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4NSVPROC glad_glVertexAttrib4Nsv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4NSVPROC
glad_glVertexAttrib4Nsv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4NSVPROC glad_glVertexAttrib4Nsv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NSVPROC
glad_glVertexAttrib4Nub	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4NUBPROC glad_glVertexAttrib4Nub;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4NUBPROC
glad_glVertexAttrib4Nub	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4NUBPROC glad_glVertexAttrib4Nub = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUBPROC
glad_glVertexAttrib4Nubv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4NUBVPROC glad_glVertexAttrib4Nubv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4NUBVPROC
glad_glVertexAttrib4Nubv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4NUBVPROC glad_glVertexAttrib4Nubv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUBVPROC
glad_glVertexAttrib4Nuiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4NUIVPROC glad_glVertexAttrib4Nuiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4NUIVPROC
glad_glVertexAttrib4Nuiv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4NUIVPROC glad_glVertexAttrib4Nuiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUIVPROC
glad_glVertexAttrib4Nusv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4NUSVPROC glad_glVertexAttrib4Nusv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4NUSVPROC
glad_glVertexAttrib4Nusv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4NUSVPROC glad_glVertexAttrib4Nusv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUSVPROC
glad_glVertexAttrib4bv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4BVPROC glad_glVertexAttrib4bv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4BVPROC
glad_glVertexAttrib4bv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4BVPROC glad_glVertexAttrib4bv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4BVPROC
glad_glVertexAttrib4d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4DPROC glad_glVertexAttrib4d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4DPROC
glad_glVertexAttrib4d	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4DPROC glad_glVertexAttrib4d = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4DPROC
glad_glVertexAttrib4dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4DVPROC glad_glVertexAttrib4dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4DVPROC
glad_glVertexAttrib4dv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4DVPROC glad_glVertexAttrib4dv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4DVPROC
glad_glVertexAttrib4f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4FPROC glad_glVertexAttrib4f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4FPROC
glad_glVertexAttrib4f	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4FPROC glad_glVertexAttrib4f = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4FPROC
glad_glVertexAttrib4fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4FVPROC glad_glVertexAttrib4fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4FVPROC
glad_glVertexAttrib4fv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4FVPROC glad_glVertexAttrib4fv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4FVPROC
glad_glVertexAttrib4iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4IVPROC glad_glVertexAttrib4iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4IVPROC
glad_glVertexAttrib4iv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4IVPROC glad_glVertexAttrib4iv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4IVPROC
glad_glVertexAttrib4s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4SPROC glad_glVertexAttrib4s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4SPROC
glad_glVertexAttrib4s	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4SPROC glad_glVertexAttrib4s = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4SPROC
glad_glVertexAttrib4sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4SVPROC glad_glVertexAttrib4sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4SVPROC
glad_glVertexAttrib4sv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4SVPROC glad_glVertexAttrib4sv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4SVPROC
glad_glVertexAttrib4ubv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4UBVPROC glad_glVertexAttrib4ubv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4UBVPROC
glad_glVertexAttrib4ubv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4UBVPROC glad_glVertexAttrib4ubv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4UBVPROC
glad_glVertexAttrib4uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4UIVPROC glad_glVertexAttrib4uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4UIVPROC
glad_glVertexAttrib4uiv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4UIVPROC glad_glVertexAttrib4uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4UIVPROC
glad_glVertexAttrib4usv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIB4USVPROC glad_glVertexAttrib4usv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIB4USVPROC
glad_glVertexAttrib4usv	deps/glad_gl.c	/^PFNGLVERTEXATTRIB4USVPROC glad_glVertexAttrib4usv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4USVPROC
glad_glVertexAttribDivisor	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBDIVISORPROC glad_glVertexAttribDivisor;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBDIVISORPROC
glad_glVertexAttribDivisor	deps/glad_gl.c	/^PFNGLVERTEXATTRIBDIVISORPROC glad_glVertexAttribDivisor = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBDIVISORPROC
glad_glVertexAttribI1i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI1IPROC glad_glVertexAttribI1i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI1IPROC
glad_glVertexAttribI1i	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI1IPROC glad_glVertexAttribI1i = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1IPROC
glad_glVertexAttribI1iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI1IVPROC glad_glVertexAttribI1iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI1IVPROC
glad_glVertexAttribI1iv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI1IVPROC glad_glVertexAttribI1iv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1IVPROC
glad_glVertexAttribI1ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI1UIPROC glad_glVertexAttribI1ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI1UIPROC
glad_glVertexAttribI1ui	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI1UIPROC glad_glVertexAttribI1ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1UIPROC
glad_glVertexAttribI1uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI1UIVPROC glad_glVertexAttribI1uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI1UIVPROC
glad_glVertexAttribI1uiv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI1UIVPROC glad_glVertexAttribI1uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1UIVPROC
glad_glVertexAttribI2i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI2IPROC glad_glVertexAttribI2i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI2IPROC
glad_glVertexAttribI2i	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI2IPROC glad_glVertexAttribI2i = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2IPROC
glad_glVertexAttribI2iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI2IVPROC glad_glVertexAttribI2iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI2IVPROC
glad_glVertexAttribI2iv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI2IVPROC glad_glVertexAttribI2iv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2IVPROC
glad_glVertexAttribI2ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI2UIPROC glad_glVertexAttribI2ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI2UIPROC
glad_glVertexAttribI2ui	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI2UIPROC glad_glVertexAttribI2ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2UIPROC
glad_glVertexAttribI2uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI2UIVPROC glad_glVertexAttribI2uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI2UIVPROC
glad_glVertexAttribI2uiv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI2UIVPROC glad_glVertexAttribI2uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2UIVPROC
glad_glVertexAttribI3i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI3IPROC glad_glVertexAttribI3i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI3IPROC
glad_glVertexAttribI3i	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI3IPROC glad_glVertexAttribI3i = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3IPROC
glad_glVertexAttribI3iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI3IVPROC glad_glVertexAttribI3iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI3IVPROC
glad_glVertexAttribI3iv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI3IVPROC glad_glVertexAttribI3iv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3IVPROC
glad_glVertexAttribI3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI3UIPROC glad_glVertexAttribI3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI3UIPROC
glad_glVertexAttribI3ui	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI3UIPROC glad_glVertexAttribI3ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3UIPROC
glad_glVertexAttribI3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI3UIVPROC glad_glVertexAttribI3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI3UIVPROC
glad_glVertexAttribI3uiv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI3UIVPROC glad_glVertexAttribI3uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3UIVPROC
glad_glVertexAttribI4bv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI4BVPROC glad_glVertexAttribI4bv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI4BVPROC
glad_glVertexAttribI4bv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI4BVPROC glad_glVertexAttribI4bv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4BVPROC
glad_glVertexAttribI4i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI4IPROC glad_glVertexAttribI4i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI4IPROC
glad_glVertexAttribI4i	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI4IPROC glad_glVertexAttribI4i = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4IPROC
glad_glVertexAttribI4iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI4IVPROC glad_glVertexAttribI4iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI4IVPROC
glad_glVertexAttribI4iv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI4IVPROC glad_glVertexAttribI4iv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4IVPROC
glad_glVertexAttribI4sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI4SVPROC glad_glVertexAttribI4sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI4SVPROC
glad_glVertexAttribI4sv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI4SVPROC glad_glVertexAttribI4sv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4SVPROC
glad_glVertexAttribI4ubv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI4UBVPROC glad_glVertexAttribI4ubv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI4UBVPROC
glad_glVertexAttribI4ubv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI4UBVPROC glad_glVertexAttribI4ubv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UBVPROC
glad_glVertexAttribI4ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI4UIPROC glad_glVertexAttribI4ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI4UIPROC
glad_glVertexAttribI4ui	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI4UIPROC glad_glVertexAttribI4ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UIPROC
glad_glVertexAttribI4uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI4UIVPROC glad_glVertexAttribI4uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI4UIVPROC
glad_glVertexAttribI4uiv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI4UIVPROC glad_glVertexAttribI4uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UIVPROC
glad_glVertexAttribI4usv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBI4USVPROC glad_glVertexAttribI4usv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBI4USVPROC
glad_glVertexAttribI4usv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBI4USVPROC glad_glVertexAttribI4usv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4USVPROC
glad_glVertexAttribIPointer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBIPOINTERPROC glad_glVertexAttribIPointer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBIPOINTERPROC
glad_glVertexAttribIPointer	deps/glad_gl.c	/^PFNGLVERTEXATTRIBIPOINTERPROC glad_glVertexAttribIPointer = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBIPOINTERPROC
glad_glVertexAttribP1ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBP1UIPROC glad_glVertexAttribP1ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBP1UIPROC
glad_glVertexAttribP1ui	deps/glad_gl.c	/^PFNGLVERTEXATTRIBP1UIPROC glad_glVertexAttribP1ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP1UIPROC
glad_glVertexAttribP1uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBP1UIVPROC glad_glVertexAttribP1uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBP1UIVPROC
glad_glVertexAttribP1uiv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBP1UIVPROC glad_glVertexAttribP1uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP1UIVPROC
glad_glVertexAttribP2ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBP2UIPROC glad_glVertexAttribP2ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBP2UIPROC
glad_glVertexAttribP2ui	deps/glad_gl.c	/^PFNGLVERTEXATTRIBP2UIPROC glad_glVertexAttribP2ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP2UIPROC
glad_glVertexAttribP2uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBP2UIVPROC glad_glVertexAttribP2uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBP2UIVPROC
glad_glVertexAttribP2uiv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBP2UIVPROC glad_glVertexAttribP2uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP2UIVPROC
glad_glVertexAttribP3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBP3UIPROC glad_glVertexAttribP3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBP3UIPROC
glad_glVertexAttribP3ui	deps/glad_gl.c	/^PFNGLVERTEXATTRIBP3UIPROC glad_glVertexAttribP3ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP3UIPROC
glad_glVertexAttribP3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBP3UIVPROC glad_glVertexAttribP3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBP3UIVPROC
glad_glVertexAttribP3uiv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBP3UIVPROC glad_glVertexAttribP3uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP3UIVPROC
glad_glVertexAttribP4ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBP4UIPROC glad_glVertexAttribP4ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBP4UIPROC
glad_glVertexAttribP4ui	deps/glad_gl.c	/^PFNGLVERTEXATTRIBP4UIPROC glad_glVertexAttribP4ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP4UIPROC
glad_glVertexAttribP4uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBP4UIVPROC glad_glVertexAttribP4uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBP4UIVPROC
glad_glVertexAttribP4uiv	deps/glad_gl.c	/^PFNGLVERTEXATTRIBP4UIVPROC glad_glVertexAttribP4uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP4UIVPROC
glad_glVertexAttribPointer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXATTRIBPOINTERPROC glad_glVertexAttribPointer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXATTRIBPOINTERPROC
glad_glVertexAttribPointer	deps/glad_gl.c	/^PFNGLVERTEXATTRIBPOINTERPROC glad_glVertexAttribPointer = NULL;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBPOINTERPROC
glad_glVertexP2ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXP2UIPROC glad_glVertexP2ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXP2UIPROC
glad_glVertexP2ui	deps/glad_gl.c	/^PFNGLVERTEXP2UIPROC glad_glVertexP2ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXP2UIPROC
glad_glVertexP2uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXP2UIVPROC glad_glVertexP2uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXP2UIVPROC
glad_glVertexP2uiv	deps/glad_gl.c	/^PFNGLVERTEXP2UIVPROC glad_glVertexP2uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXP2UIVPROC
glad_glVertexP3ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXP3UIPROC glad_glVertexP3ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXP3UIPROC
glad_glVertexP3ui	deps/glad_gl.c	/^PFNGLVERTEXP3UIPROC glad_glVertexP3ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXP3UIPROC
glad_glVertexP3uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXP3UIVPROC glad_glVertexP3uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXP3UIVPROC
glad_glVertexP3uiv	deps/glad_gl.c	/^PFNGLVERTEXP3UIVPROC glad_glVertexP3uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXP3UIVPROC
glad_glVertexP4ui	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXP4UIPROC glad_glVertexP4ui;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXP4UIPROC
glad_glVertexP4ui	deps/glad_gl.c	/^PFNGLVERTEXP4UIPROC glad_glVertexP4ui = NULL;$/;"	v	typeref:typename:PFNGLVERTEXP4UIPROC
glad_glVertexP4uiv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXP4UIVPROC glad_glVertexP4uiv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXP4UIVPROC
glad_glVertexP4uiv	deps/glad_gl.c	/^PFNGLVERTEXP4UIVPROC glad_glVertexP4uiv = NULL;$/;"	v	typeref:typename:PFNGLVERTEXP4UIVPROC
glad_glVertexPointer	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVERTEXPOINTERPROC glad_glVertexPointer;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVERTEXPOINTERPROC
glad_glVertexPointer	deps/glad_gl.c	/^PFNGLVERTEXPOINTERPROC glad_glVertexPointer = NULL;$/;"	v	typeref:typename:PFNGLVERTEXPOINTERPROC
glad_glViewport	deps/glad/gl.h	/^GLAD_API_CALL PFNGLVIEWPORTPROC glad_glViewport;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLVIEWPORTPROC
glad_glViewport	deps/glad_gl.c	/^PFNGLVIEWPORTPROC glad_glViewport = NULL;$/;"	v	typeref:typename:PFNGLVIEWPORTPROC
glad_glWaitSync	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWAITSYNCPROC glad_glWaitSync;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWAITSYNCPROC
glad_glWaitSync	deps/glad_gl.c	/^PFNGLWAITSYNCPROC glad_glWaitSync = NULL;$/;"	v	typeref:typename:PFNGLWAITSYNCPROC
glad_glWindowPos2d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS2DPROC glad_glWindowPos2d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS2DPROC
glad_glWindowPos2d	deps/glad_gl.c	/^PFNGLWINDOWPOS2DPROC glad_glWindowPos2d = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS2DPROC
glad_glWindowPos2dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS2DVPROC glad_glWindowPos2dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS2DVPROC
glad_glWindowPos2dv	deps/glad_gl.c	/^PFNGLWINDOWPOS2DVPROC glad_glWindowPos2dv = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS2DVPROC
glad_glWindowPos2f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS2FPROC glad_glWindowPos2f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS2FPROC
glad_glWindowPos2f	deps/glad_gl.c	/^PFNGLWINDOWPOS2FPROC glad_glWindowPos2f = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS2FPROC
glad_glWindowPos2fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS2FVPROC glad_glWindowPos2fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS2FVPROC
glad_glWindowPos2fv	deps/glad_gl.c	/^PFNGLWINDOWPOS2FVPROC glad_glWindowPos2fv = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS2FVPROC
glad_glWindowPos2i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS2IPROC glad_glWindowPos2i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS2IPROC
glad_glWindowPos2i	deps/glad_gl.c	/^PFNGLWINDOWPOS2IPROC glad_glWindowPos2i = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS2IPROC
glad_glWindowPos2iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS2IVPROC glad_glWindowPos2iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS2IVPROC
glad_glWindowPos2iv	deps/glad_gl.c	/^PFNGLWINDOWPOS2IVPROC glad_glWindowPos2iv = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS2IVPROC
glad_glWindowPos2s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS2SPROC glad_glWindowPos2s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS2SPROC
glad_glWindowPos2s	deps/glad_gl.c	/^PFNGLWINDOWPOS2SPROC glad_glWindowPos2s = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS2SPROC
glad_glWindowPos2sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS2SVPROC glad_glWindowPos2sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS2SVPROC
glad_glWindowPos2sv	deps/glad_gl.c	/^PFNGLWINDOWPOS2SVPROC glad_glWindowPos2sv = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS2SVPROC
glad_glWindowPos3d	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS3DPROC glad_glWindowPos3d;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS3DPROC
glad_glWindowPos3d	deps/glad_gl.c	/^PFNGLWINDOWPOS3DPROC glad_glWindowPos3d = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS3DPROC
glad_glWindowPos3dv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS3DVPROC glad_glWindowPos3dv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS3DVPROC
glad_glWindowPos3dv	deps/glad_gl.c	/^PFNGLWINDOWPOS3DVPROC glad_glWindowPos3dv = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS3DVPROC
glad_glWindowPos3f	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS3FPROC glad_glWindowPos3f;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS3FPROC
glad_glWindowPos3f	deps/glad_gl.c	/^PFNGLWINDOWPOS3FPROC glad_glWindowPos3f = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS3FPROC
glad_glWindowPos3fv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS3FVPROC glad_glWindowPos3fv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS3FVPROC
glad_glWindowPos3fv	deps/glad_gl.c	/^PFNGLWINDOWPOS3FVPROC glad_glWindowPos3fv = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS3FVPROC
glad_glWindowPos3i	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS3IPROC glad_glWindowPos3i;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS3IPROC
glad_glWindowPos3i	deps/glad_gl.c	/^PFNGLWINDOWPOS3IPROC glad_glWindowPos3i = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS3IPROC
glad_glWindowPos3iv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS3IVPROC glad_glWindowPos3iv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS3IVPROC
glad_glWindowPos3iv	deps/glad_gl.c	/^PFNGLWINDOWPOS3IVPROC glad_glWindowPos3iv = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS3IVPROC
glad_glWindowPos3s	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS3SPROC glad_glWindowPos3s;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS3SPROC
glad_glWindowPos3s	deps/glad_gl.c	/^PFNGLWINDOWPOS3SPROC glad_glWindowPos3s = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS3SPROC
glad_glWindowPos3sv	deps/glad/gl.h	/^GLAD_API_CALL PFNGLWINDOWPOS3SVPROC glad_glWindowPos3sv;$/;"	v	typeref:typename:GLAD_API_CALL PFNGLWINDOWPOS3SVPROC
glad_glWindowPos3sv	deps/glad_gl.c	/^PFNGLWINDOWPOS3SVPROC glad_glWindowPos3sv = NULL;$/;"	v	typeref:typename:PFNGLWINDOWPOS3SVPROC
glad_gl_find_core_gl	deps/glad_gl.c	/^static int glad_gl_find_core_gl(void) {$/;"	f	typeref:typename:int	file:
glad_gl_find_extensions_gl	deps/glad_gl.c	/^static int glad_gl_find_extensions_gl( int version) {$/;"	f	typeref:typename:int	file:
glad_gl_free_extensions	deps/glad_gl.c	/^static void glad_gl_free_extensions(char **exts_i, unsigned int num_exts_i) {$/;"	f	typeref:typename:void	file:
glad_gl_get_extensions	deps/glad_gl.c	/^static int glad_gl_get_extensions( int version, const char **out_exts, unsigned int *out_num_ext/;"	f	typeref:typename:int	file:
glad_gl_get_proc_from_userptr	deps/glad_gl.c	/^static GLADapiproc glad_gl_get_proc_from_userptr(const char* name, void *userptr) {$/;"	f	typeref:typename:GLADapiproc	file:
glad_gl_has_extension	deps/glad_gl.c	/^static int glad_gl_has_extension(int version, const char *exts, unsigned int num_exts_i, char **/;"	f	typeref:typename:int	file:
glad_gl_load_GL_ARB_multisample	deps/glad_gl.c	/^static void glad_gl_load_GL_ARB_multisample( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_ARB_robustness	deps/glad_gl.c	/^static void glad_gl_load_GL_ARB_robustness( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_KHR_debug	deps/glad_gl.c	/^static void glad_gl_load_GL_KHR_debug( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_1_0	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_1_0( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_1_1	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_1_1( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_1_2	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_1_2( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_1_3	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_1_3( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_1_4	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_1_4( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_1_5	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_1_5( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_2_0	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_2_0( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_2_1	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_2_1( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_3_0	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_3_0( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_3_1	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_3_1( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_3_2	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_3_2( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_gl_load_GL_VERSION_3_3	deps/glad_gl.c	/^static void glad_gl_load_GL_VERSION_3_3( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_vkAcquireNextImage2KHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkAcquireNextImage2KHR glad_vkAcquireNextImage2KHR;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkAcquireNextImage2KHR
glad_vkAcquireNextImage2KHR	deps/glad_vulkan.c	/^PFN_vkAcquireNextImage2KHR glad_vkAcquireNextImage2KHR = NULL;$/;"	v	typeref:typename:PFN_vkAcquireNextImage2KHR
glad_vkAcquireNextImageKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkAcquireNextImageKHR glad_vkAcquireNextImageKHR;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkAcquireNextImageKHR
glad_vkAcquireNextImageKHR	deps/glad_vulkan.c	/^PFN_vkAcquireNextImageKHR glad_vkAcquireNextImageKHR = NULL;$/;"	v	typeref:typename:PFN_vkAcquireNextImageKHR
glad_vkAllocateCommandBuffers	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkAllocateCommandBuffers glad_vkAllocateCommandBuffers;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkAllocateCommandBuffers
glad_vkAllocateCommandBuffers	deps/glad_vulkan.c	/^PFN_vkAllocateCommandBuffers glad_vkAllocateCommandBuffers = NULL;$/;"	v	typeref:typename:PFN_vkAllocateCommandBuffers
glad_vkAllocateDescriptorSets	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkAllocateDescriptorSets glad_vkAllocateDescriptorSets;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkAllocateDescriptorSets
glad_vkAllocateDescriptorSets	deps/glad_vulkan.c	/^PFN_vkAllocateDescriptorSets glad_vkAllocateDescriptorSets = NULL;$/;"	v	typeref:typename:PFN_vkAllocateDescriptorSets
glad_vkAllocateMemory	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkAllocateMemory glad_vkAllocateMemory;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkAllocateMemory
glad_vkAllocateMemory	deps/glad_vulkan.c	/^PFN_vkAllocateMemory glad_vkAllocateMemory = NULL;$/;"	v	typeref:typename:PFN_vkAllocateMemory
glad_vkBeginCommandBuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkBeginCommandBuffer glad_vkBeginCommandBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkBeginCommandBuffer
glad_vkBeginCommandBuffer	deps/glad_vulkan.c	/^PFN_vkBeginCommandBuffer glad_vkBeginCommandBuffer = NULL;$/;"	v	typeref:typename:PFN_vkBeginCommandBuffer
glad_vkBindBufferMemory	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkBindBufferMemory glad_vkBindBufferMemory;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkBindBufferMemory
glad_vkBindBufferMemory	deps/glad_vulkan.c	/^PFN_vkBindBufferMemory glad_vkBindBufferMemory = NULL;$/;"	v	typeref:typename:PFN_vkBindBufferMemory
glad_vkBindBufferMemory2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkBindBufferMemory2 glad_vkBindBufferMemory2;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkBindBufferMemory2
glad_vkBindBufferMemory2	deps/glad_vulkan.c	/^PFN_vkBindBufferMemory2 glad_vkBindBufferMemory2 = NULL;$/;"	v	typeref:typename:PFN_vkBindBufferMemory2
glad_vkBindImageMemory	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkBindImageMemory glad_vkBindImageMemory;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkBindImageMemory
glad_vkBindImageMemory	deps/glad_vulkan.c	/^PFN_vkBindImageMemory glad_vkBindImageMemory = NULL;$/;"	v	typeref:typename:PFN_vkBindImageMemory
glad_vkBindImageMemory2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkBindImageMemory2 glad_vkBindImageMemory2;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkBindImageMemory2
glad_vkBindImageMemory2	deps/glad_vulkan.c	/^PFN_vkBindImageMemory2 glad_vkBindImageMemory2 = NULL;$/;"	v	typeref:typename:PFN_vkBindImageMemory2
glad_vkCmdBeginQuery	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdBeginQuery glad_vkCmdBeginQuery;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdBeginQuery
glad_vkCmdBeginQuery	deps/glad_vulkan.c	/^PFN_vkCmdBeginQuery glad_vkCmdBeginQuery = NULL;$/;"	v	typeref:typename:PFN_vkCmdBeginQuery
glad_vkCmdBeginRenderPass	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdBeginRenderPass glad_vkCmdBeginRenderPass;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdBeginRenderPass
glad_vkCmdBeginRenderPass	deps/glad_vulkan.c	/^PFN_vkCmdBeginRenderPass glad_vkCmdBeginRenderPass = NULL;$/;"	v	typeref:typename:PFN_vkCmdBeginRenderPass
glad_vkCmdBindDescriptorSets	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdBindDescriptorSets glad_vkCmdBindDescriptorSets;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdBindDescriptorSets
glad_vkCmdBindDescriptorSets	deps/glad_vulkan.c	/^PFN_vkCmdBindDescriptorSets glad_vkCmdBindDescriptorSets = NULL;$/;"	v	typeref:typename:PFN_vkCmdBindDescriptorSets
glad_vkCmdBindIndexBuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdBindIndexBuffer glad_vkCmdBindIndexBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdBindIndexBuffer
glad_vkCmdBindIndexBuffer	deps/glad_vulkan.c	/^PFN_vkCmdBindIndexBuffer glad_vkCmdBindIndexBuffer = NULL;$/;"	v	typeref:typename:PFN_vkCmdBindIndexBuffer
glad_vkCmdBindPipeline	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdBindPipeline glad_vkCmdBindPipeline;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdBindPipeline
glad_vkCmdBindPipeline	deps/glad_vulkan.c	/^PFN_vkCmdBindPipeline glad_vkCmdBindPipeline = NULL;$/;"	v	typeref:typename:PFN_vkCmdBindPipeline
glad_vkCmdBindVertexBuffers	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdBindVertexBuffers glad_vkCmdBindVertexBuffers;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdBindVertexBuffers
glad_vkCmdBindVertexBuffers	deps/glad_vulkan.c	/^PFN_vkCmdBindVertexBuffers glad_vkCmdBindVertexBuffers = NULL;$/;"	v	typeref:typename:PFN_vkCmdBindVertexBuffers
glad_vkCmdBlitImage	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdBlitImage glad_vkCmdBlitImage;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdBlitImage
glad_vkCmdBlitImage	deps/glad_vulkan.c	/^PFN_vkCmdBlitImage glad_vkCmdBlitImage = NULL;$/;"	v	typeref:typename:PFN_vkCmdBlitImage
glad_vkCmdClearAttachments	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdClearAttachments glad_vkCmdClearAttachments;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdClearAttachments
glad_vkCmdClearAttachments	deps/glad_vulkan.c	/^PFN_vkCmdClearAttachments glad_vkCmdClearAttachments = NULL;$/;"	v	typeref:typename:PFN_vkCmdClearAttachments
glad_vkCmdClearColorImage	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdClearColorImage glad_vkCmdClearColorImage;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdClearColorImage
glad_vkCmdClearColorImage	deps/glad_vulkan.c	/^PFN_vkCmdClearColorImage glad_vkCmdClearColorImage = NULL;$/;"	v	typeref:typename:PFN_vkCmdClearColorImage
glad_vkCmdClearDepthStencilImage	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdClearDepthStencilImage glad_vkCmdClearDepthStencilImage;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdClearDepthStencilImage
glad_vkCmdClearDepthStencilImage	deps/glad_vulkan.c	/^PFN_vkCmdClearDepthStencilImage glad_vkCmdClearDepthStencilImage = NULL;$/;"	v	typeref:typename:PFN_vkCmdClearDepthStencilImage
glad_vkCmdCopyBuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdCopyBuffer glad_vkCmdCopyBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdCopyBuffer
glad_vkCmdCopyBuffer	deps/glad_vulkan.c	/^PFN_vkCmdCopyBuffer glad_vkCmdCopyBuffer = NULL;$/;"	v	typeref:typename:PFN_vkCmdCopyBuffer
glad_vkCmdCopyBufferToImage	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdCopyBufferToImage glad_vkCmdCopyBufferToImage;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdCopyBufferToImage
glad_vkCmdCopyBufferToImage	deps/glad_vulkan.c	/^PFN_vkCmdCopyBufferToImage glad_vkCmdCopyBufferToImage = NULL;$/;"	v	typeref:typename:PFN_vkCmdCopyBufferToImage
glad_vkCmdCopyImage	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdCopyImage glad_vkCmdCopyImage;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdCopyImage
glad_vkCmdCopyImage	deps/glad_vulkan.c	/^PFN_vkCmdCopyImage glad_vkCmdCopyImage = NULL;$/;"	v	typeref:typename:PFN_vkCmdCopyImage
glad_vkCmdCopyImageToBuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdCopyImageToBuffer glad_vkCmdCopyImageToBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdCopyImageToBuffer
glad_vkCmdCopyImageToBuffer	deps/glad_vulkan.c	/^PFN_vkCmdCopyImageToBuffer glad_vkCmdCopyImageToBuffer = NULL;$/;"	v	typeref:typename:PFN_vkCmdCopyImageToBuffer
glad_vkCmdCopyQueryPoolResults	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdCopyQueryPoolResults glad_vkCmdCopyQueryPoolResults;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdCopyQueryPoolResults
glad_vkCmdCopyQueryPoolResults	deps/glad_vulkan.c	/^PFN_vkCmdCopyQueryPoolResults glad_vkCmdCopyQueryPoolResults = NULL;$/;"	v	typeref:typename:PFN_vkCmdCopyQueryPoolResults
glad_vkCmdDispatch	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdDispatch glad_vkCmdDispatch;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdDispatch
glad_vkCmdDispatch	deps/glad_vulkan.c	/^PFN_vkCmdDispatch glad_vkCmdDispatch = NULL;$/;"	v	typeref:typename:PFN_vkCmdDispatch
glad_vkCmdDispatchBase	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdDispatchBase glad_vkCmdDispatchBase;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdDispatchBase
glad_vkCmdDispatchBase	deps/glad_vulkan.c	/^PFN_vkCmdDispatchBase glad_vkCmdDispatchBase = NULL;$/;"	v	typeref:typename:PFN_vkCmdDispatchBase
glad_vkCmdDispatchIndirect	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdDispatchIndirect glad_vkCmdDispatchIndirect;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdDispatchIndirect
glad_vkCmdDispatchIndirect	deps/glad_vulkan.c	/^PFN_vkCmdDispatchIndirect glad_vkCmdDispatchIndirect = NULL;$/;"	v	typeref:typename:PFN_vkCmdDispatchIndirect
glad_vkCmdDraw	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdDraw glad_vkCmdDraw;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdDraw
glad_vkCmdDraw	deps/glad_vulkan.c	/^PFN_vkCmdDraw glad_vkCmdDraw = NULL;$/;"	v	typeref:typename:PFN_vkCmdDraw
glad_vkCmdDrawIndexed	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdDrawIndexed glad_vkCmdDrawIndexed;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdDrawIndexed
glad_vkCmdDrawIndexed	deps/glad_vulkan.c	/^PFN_vkCmdDrawIndexed glad_vkCmdDrawIndexed = NULL;$/;"	v	typeref:typename:PFN_vkCmdDrawIndexed
glad_vkCmdDrawIndexedIndirect	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdDrawIndexedIndirect glad_vkCmdDrawIndexedIndirect;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdDrawIndexedIndirect
glad_vkCmdDrawIndexedIndirect	deps/glad_vulkan.c	/^PFN_vkCmdDrawIndexedIndirect glad_vkCmdDrawIndexedIndirect = NULL;$/;"	v	typeref:typename:PFN_vkCmdDrawIndexedIndirect
glad_vkCmdDrawIndirect	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdDrawIndirect glad_vkCmdDrawIndirect;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdDrawIndirect
glad_vkCmdDrawIndirect	deps/glad_vulkan.c	/^PFN_vkCmdDrawIndirect glad_vkCmdDrawIndirect = NULL;$/;"	v	typeref:typename:PFN_vkCmdDrawIndirect
glad_vkCmdEndQuery	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdEndQuery glad_vkCmdEndQuery;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdEndQuery
glad_vkCmdEndQuery	deps/glad_vulkan.c	/^PFN_vkCmdEndQuery glad_vkCmdEndQuery = NULL;$/;"	v	typeref:typename:PFN_vkCmdEndQuery
glad_vkCmdEndRenderPass	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdEndRenderPass glad_vkCmdEndRenderPass;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdEndRenderPass
glad_vkCmdEndRenderPass	deps/glad_vulkan.c	/^PFN_vkCmdEndRenderPass glad_vkCmdEndRenderPass = NULL;$/;"	v	typeref:typename:PFN_vkCmdEndRenderPass
glad_vkCmdExecuteCommands	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdExecuteCommands glad_vkCmdExecuteCommands;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdExecuteCommands
glad_vkCmdExecuteCommands	deps/glad_vulkan.c	/^PFN_vkCmdExecuteCommands glad_vkCmdExecuteCommands = NULL;$/;"	v	typeref:typename:PFN_vkCmdExecuteCommands
glad_vkCmdFillBuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdFillBuffer glad_vkCmdFillBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdFillBuffer
glad_vkCmdFillBuffer	deps/glad_vulkan.c	/^PFN_vkCmdFillBuffer glad_vkCmdFillBuffer = NULL;$/;"	v	typeref:typename:PFN_vkCmdFillBuffer
glad_vkCmdNextSubpass	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdNextSubpass glad_vkCmdNextSubpass;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdNextSubpass
glad_vkCmdNextSubpass	deps/glad_vulkan.c	/^PFN_vkCmdNextSubpass glad_vkCmdNextSubpass = NULL;$/;"	v	typeref:typename:PFN_vkCmdNextSubpass
glad_vkCmdPipelineBarrier	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdPipelineBarrier glad_vkCmdPipelineBarrier;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdPipelineBarrier
glad_vkCmdPipelineBarrier	deps/glad_vulkan.c	/^PFN_vkCmdPipelineBarrier glad_vkCmdPipelineBarrier = NULL;$/;"	v	typeref:typename:PFN_vkCmdPipelineBarrier
glad_vkCmdPushConstants	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdPushConstants glad_vkCmdPushConstants;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdPushConstants
glad_vkCmdPushConstants	deps/glad_vulkan.c	/^PFN_vkCmdPushConstants glad_vkCmdPushConstants = NULL;$/;"	v	typeref:typename:PFN_vkCmdPushConstants
glad_vkCmdResetEvent	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdResetEvent glad_vkCmdResetEvent;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdResetEvent
glad_vkCmdResetEvent	deps/glad_vulkan.c	/^PFN_vkCmdResetEvent glad_vkCmdResetEvent = NULL;$/;"	v	typeref:typename:PFN_vkCmdResetEvent
glad_vkCmdResetQueryPool	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdResetQueryPool glad_vkCmdResetQueryPool;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdResetQueryPool
glad_vkCmdResetQueryPool	deps/glad_vulkan.c	/^PFN_vkCmdResetQueryPool glad_vkCmdResetQueryPool = NULL;$/;"	v	typeref:typename:PFN_vkCmdResetQueryPool
glad_vkCmdResolveImage	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdResolveImage glad_vkCmdResolveImage;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdResolveImage
glad_vkCmdResolveImage	deps/glad_vulkan.c	/^PFN_vkCmdResolveImage glad_vkCmdResolveImage = NULL;$/;"	v	typeref:typename:PFN_vkCmdResolveImage
glad_vkCmdSetBlendConstants	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetBlendConstants glad_vkCmdSetBlendConstants;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetBlendConstants
glad_vkCmdSetBlendConstants	deps/glad_vulkan.c	/^PFN_vkCmdSetBlendConstants glad_vkCmdSetBlendConstants = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetBlendConstants
glad_vkCmdSetDepthBias	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetDepthBias glad_vkCmdSetDepthBias;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetDepthBias
glad_vkCmdSetDepthBias	deps/glad_vulkan.c	/^PFN_vkCmdSetDepthBias glad_vkCmdSetDepthBias = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetDepthBias
glad_vkCmdSetDepthBounds	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetDepthBounds glad_vkCmdSetDepthBounds;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetDepthBounds
glad_vkCmdSetDepthBounds	deps/glad_vulkan.c	/^PFN_vkCmdSetDepthBounds glad_vkCmdSetDepthBounds = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetDepthBounds
glad_vkCmdSetDeviceMask	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetDeviceMask glad_vkCmdSetDeviceMask;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetDeviceMask
glad_vkCmdSetDeviceMask	deps/glad_vulkan.c	/^PFN_vkCmdSetDeviceMask glad_vkCmdSetDeviceMask = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetDeviceMask
glad_vkCmdSetEvent	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetEvent glad_vkCmdSetEvent;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetEvent
glad_vkCmdSetEvent	deps/glad_vulkan.c	/^PFN_vkCmdSetEvent glad_vkCmdSetEvent = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetEvent
glad_vkCmdSetLineWidth	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetLineWidth glad_vkCmdSetLineWidth;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetLineWidth
glad_vkCmdSetLineWidth	deps/glad_vulkan.c	/^PFN_vkCmdSetLineWidth glad_vkCmdSetLineWidth = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetLineWidth
glad_vkCmdSetScissor	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetScissor glad_vkCmdSetScissor;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetScissor
glad_vkCmdSetScissor	deps/glad_vulkan.c	/^PFN_vkCmdSetScissor glad_vkCmdSetScissor = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetScissor
glad_vkCmdSetStencilCompareMask	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetStencilCompareMask glad_vkCmdSetStencilCompareMask;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetStencilCompareMask
glad_vkCmdSetStencilCompareMask	deps/glad_vulkan.c	/^PFN_vkCmdSetStencilCompareMask glad_vkCmdSetStencilCompareMask = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetStencilCompareMask
glad_vkCmdSetStencilReference	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetStencilReference glad_vkCmdSetStencilReference;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetStencilReference
glad_vkCmdSetStencilReference	deps/glad_vulkan.c	/^PFN_vkCmdSetStencilReference glad_vkCmdSetStencilReference = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetStencilReference
glad_vkCmdSetStencilWriteMask	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetStencilWriteMask glad_vkCmdSetStencilWriteMask;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetStencilWriteMask
glad_vkCmdSetStencilWriteMask	deps/glad_vulkan.c	/^PFN_vkCmdSetStencilWriteMask glad_vkCmdSetStencilWriteMask = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetStencilWriteMask
glad_vkCmdSetViewport	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdSetViewport glad_vkCmdSetViewport;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdSetViewport
glad_vkCmdSetViewport	deps/glad_vulkan.c	/^PFN_vkCmdSetViewport glad_vkCmdSetViewport = NULL;$/;"	v	typeref:typename:PFN_vkCmdSetViewport
glad_vkCmdUpdateBuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdUpdateBuffer glad_vkCmdUpdateBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdUpdateBuffer
glad_vkCmdUpdateBuffer	deps/glad_vulkan.c	/^PFN_vkCmdUpdateBuffer glad_vkCmdUpdateBuffer = NULL;$/;"	v	typeref:typename:PFN_vkCmdUpdateBuffer
glad_vkCmdWaitEvents	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdWaitEvents glad_vkCmdWaitEvents;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdWaitEvents
glad_vkCmdWaitEvents	deps/glad_vulkan.c	/^PFN_vkCmdWaitEvents glad_vkCmdWaitEvents = NULL;$/;"	v	typeref:typename:PFN_vkCmdWaitEvents
glad_vkCmdWriteTimestamp	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCmdWriteTimestamp glad_vkCmdWriteTimestamp;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCmdWriteTimestamp
glad_vkCmdWriteTimestamp	deps/glad_vulkan.c	/^PFN_vkCmdWriteTimestamp glad_vkCmdWriteTimestamp = NULL;$/;"	v	typeref:typename:PFN_vkCmdWriteTimestamp
glad_vkCreateBuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateBuffer glad_vkCreateBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateBuffer
glad_vkCreateBuffer	deps/glad_vulkan.c	/^PFN_vkCreateBuffer glad_vkCreateBuffer = NULL;$/;"	v	typeref:typename:PFN_vkCreateBuffer
glad_vkCreateBufferView	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateBufferView glad_vkCreateBufferView;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateBufferView
glad_vkCreateBufferView	deps/glad_vulkan.c	/^PFN_vkCreateBufferView glad_vkCreateBufferView = NULL;$/;"	v	typeref:typename:PFN_vkCreateBufferView
glad_vkCreateCommandPool	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateCommandPool glad_vkCreateCommandPool;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateCommandPool
glad_vkCreateCommandPool	deps/glad_vulkan.c	/^PFN_vkCreateCommandPool glad_vkCreateCommandPool = NULL;$/;"	v	typeref:typename:PFN_vkCreateCommandPool
glad_vkCreateComputePipelines	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateComputePipelines glad_vkCreateComputePipelines;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateComputePipelines
glad_vkCreateComputePipelines	deps/glad_vulkan.c	/^PFN_vkCreateComputePipelines glad_vkCreateComputePipelines = NULL;$/;"	v	typeref:typename:PFN_vkCreateComputePipelines
glad_vkCreateDebugReportCallbackEXT	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateDebugReportCallbackEXT glad_vkCreateDebugReportCallbackEXT;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateDebugReportCallbackEXT
glad_vkCreateDebugReportCallbackEXT	deps/glad_vulkan.c	/^PFN_vkCreateDebugReportCallbackEXT glad_vkCreateDebugReportCallbackEXT = NULL;$/;"	v	typeref:typename:PFN_vkCreateDebugReportCallbackEXT
glad_vkCreateDescriptorPool	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateDescriptorPool glad_vkCreateDescriptorPool;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateDescriptorPool
glad_vkCreateDescriptorPool	deps/glad_vulkan.c	/^PFN_vkCreateDescriptorPool glad_vkCreateDescriptorPool = NULL;$/;"	v	typeref:typename:PFN_vkCreateDescriptorPool
glad_vkCreateDescriptorSetLayout	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateDescriptorSetLayout glad_vkCreateDescriptorSetLayout;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateDescriptorSetLayout
glad_vkCreateDescriptorSetLayout	deps/glad_vulkan.c	/^PFN_vkCreateDescriptorSetLayout glad_vkCreateDescriptorSetLayout = NULL;$/;"	v	typeref:typename:PFN_vkCreateDescriptorSetLayout
glad_vkCreateDescriptorUpdateTemplate	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateDescriptorUpdateTemplate glad_vkCreateDescriptorUpdateTemplate;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateDescriptorUpdateTemplate
glad_vkCreateDescriptorUpdateTemplate	deps/glad_vulkan.c	/^PFN_vkCreateDescriptorUpdateTemplate glad_vkCreateDescriptorUpdateTemplate = NULL;$/;"	v	typeref:typename:PFN_vkCreateDescriptorUpdateTemplate
glad_vkCreateDevice	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateDevice glad_vkCreateDevice;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateDevice
glad_vkCreateDevice	deps/glad_vulkan.c	/^PFN_vkCreateDevice glad_vkCreateDevice = NULL;$/;"	v	typeref:typename:PFN_vkCreateDevice
glad_vkCreateEvent	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateEvent glad_vkCreateEvent;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateEvent
glad_vkCreateEvent	deps/glad_vulkan.c	/^PFN_vkCreateEvent glad_vkCreateEvent = NULL;$/;"	v	typeref:typename:PFN_vkCreateEvent
glad_vkCreateFence	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateFence glad_vkCreateFence;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateFence
glad_vkCreateFence	deps/glad_vulkan.c	/^PFN_vkCreateFence glad_vkCreateFence = NULL;$/;"	v	typeref:typename:PFN_vkCreateFence
glad_vkCreateFramebuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateFramebuffer glad_vkCreateFramebuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateFramebuffer
glad_vkCreateFramebuffer	deps/glad_vulkan.c	/^PFN_vkCreateFramebuffer glad_vkCreateFramebuffer = NULL;$/;"	v	typeref:typename:PFN_vkCreateFramebuffer
glad_vkCreateGraphicsPipelines	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateGraphicsPipelines glad_vkCreateGraphicsPipelines;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateGraphicsPipelines
glad_vkCreateGraphicsPipelines	deps/glad_vulkan.c	/^PFN_vkCreateGraphicsPipelines glad_vkCreateGraphicsPipelines = NULL;$/;"	v	typeref:typename:PFN_vkCreateGraphicsPipelines
glad_vkCreateImage	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateImage glad_vkCreateImage;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateImage
glad_vkCreateImage	deps/glad_vulkan.c	/^PFN_vkCreateImage glad_vkCreateImage = NULL;$/;"	v	typeref:typename:PFN_vkCreateImage
glad_vkCreateImageView	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateImageView glad_vkCreateImageView;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateImageView
glad_vkCreateImageView	deps/glad_vulkan.c	/^PFN_vkCreateImageView glad_vkCreateImageView = NULL;$/;"	v	typeref:typename:PFN_vkCreateImageView
glad_vkCreateInstance	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateInstance glad_vkCreateInstance;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateInstance
glad_vkCreateInstance	deps/glad_vulkan.c	/^PFN_vkCreateInstance glad_vkCreateInstance = NULL;$/;"	v	typeref:typename:PFN_vkCreateInstance
glad_vkCreatePipelineCache	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreatePipelineCache glad_vkCreatePipelineCache;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreatePipelineCache
glad_vkCreatePipelineCache	deps/glad_vulkan.c	/^PFN_vkCreatePipelineCache glad_vkCreatePipelineCache = NULL;$/;"	v	typeref:typename:PFN_vkCreatePipelineCache
glad_vkCreatePipelineLayout	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreatePipelineLayout glad_vkCreatePipelineLayout;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreatePipelineLayout
glad_vkCreatePipelineLayout	deps/glad_vulkan.c	/^PFN_vkCreatePipelineLayout glad_vkCreatePipelineLayout = NULL;$/;"	v	typeref:typename:PFN_vkCreatePipelineLayout
glad_vkCreateQueryPool	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateQueryPool glad_vkCreateQueryPool;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateQueryPool
glad_vkCreateQueryPool	deps/glad_vulkan.c	/^PFN_vkCreateQueryPool glad_vkCreateQueryPool = NULL;$/;"	v	typeref:typename:PFN_vkCreateQueryPool
glad_vkCreateRenderPass	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateRenderPass glad_vkCreateRenderPass;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateRenderPass
glad_vkCreateRenderPass	deps/glad_vulkan.c	/^PFN_vkCreateRenderPass glad_vkCreateRenderPass = NULL;$/;"	v	typeref:typename:PFN_vkCreateRenderPass
glad_vkCreateSampler	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateSampler glad_vkCreateSampler;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateSampler
glad_vkCreateSampler	deps/glad_vulkan.c	/^PFN_vkCreateSampler glad_vkCreateSampler = NULL;$/;"	v	typeref:typename:PFN_vkCreateSampler
glad_vkCreateSamplerYcbcrConversion	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateSamplerYcbcrConversion glad_vkCreateSamplerYcbcrConversion;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateSamplerYcbcrConversion
glad_vkCreateSamplerYcbcrConversion	deps/glad_vulkan.c	/^PFN_vkCreateSamplerYcbcrConversion glad_vkCreateSamplerYcbcrConversion = NULL;$/;"	v	typeref:typename:PFN_vkCreateSamplerYcbcrConversion
glad_vkCreateSemaphore	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateSemaphore glad_vkCreateSemaphore;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateSemaphore
glad_vkCreateSemaphore	deps/glad_vulkan.c	/^PFN_vkCreateSemaphore glad_vkCreateSemaphore = NULL;$/;"	v	typeref:typename:PFN_vkCreateSemaphore
glad_vkCreateShaderModule	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateShaderModule glad_vkCreateShaderModule;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateShaderModule
glad_vkCreateShaderModule	deps/glad_vulkan.c	/^PFN_vkCreateShaderModule glad_vkCreateShaderModule = NULL;$/;"	v	typeref:typename:PFN_vkCreateShaderModule
glad_vkCreateSwapchainKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkCreateSwapchainKHR glad_vkCreateSwapchainKHR;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkCreateSwapchainKHR
glad_vkCreateSwapchainKHR	deps/glad_vulkan.c	/^PFN_vkCreateSwapchainKHR glad_vkCreateSwapchainKHR = NULL;$/;"	v	typeref:typename:PFN_vkCreateSwapchainKHR
glad_vkDebugReportMessageEXT	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDebugReportMessageEXT glad_vkDebugReportMessageEXT;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDebugReportMessageEXT
glad_vkDebugReportMessageEXT	deps/glad_vulkan.c	/^PFN_vkDebugReportMessageEXT glad_vkDebugReportMessageEXT = NULL;$/;"	v	typeref:typename:PFN_vkDebugReportMessageEXT
glad_vkDestroyBuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyBuffer glad_vkDestroyBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyBuffer
glad_vkDestroyBuffer	deps/glad_vulkan.c	/^PFN_vkDestroyBuffer glad_vkDestroyBuffer = NULL;$/;"	v	typeref:typename:PFN_vkDestroyBuffer
glad_vkDestroyBufferView	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyBufferView glad_vkDestroyBufferView;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyBufferView
glad_vkDestroyBufferView	deps/glad_vulkan.c	/^PFN_vkDestroyBufferView glad_vkDestroyBufferView = NULL;$/;"	v	typeref:typename:PFN_vkDestroyBufferView
glad_vkDestroyCommandPool	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyCommandPool glad_vkDestroyCommandPool;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyCommandPool
glad_vkDestroyCommandPool	deps/glad_vulkan.c	/^PFN_vkDestroyCommandPool glad_vkDestroyCommandPool = NULL;$/;"	v	typeref:typename:PFN_vkDestroyCommandPool
glad_vkDestroyDebugReportCallbackEXT	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyDebugReportCallbackEXT glad_vkDestroyDebugReportCallbackEXT;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyDebugReportCallbackEXT
glad_vkDestroyDebugReportCallbackEXT	deps/glad_vulkan.c	/^PFN_vkDestroyDebugReportCallbackEXT glad_vkDestroyDebugReportCallbackEXT = NULL;$/;"	v	typeref:typename:PFN_vkDestroyDebugReportCallbackEXT
glad_vkDestroyDescriptorPool	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyDescriptorPool glad_vkDestroyDescriptorPool;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyDescriptorPool
glad_vkDestroyDescriptorPool	deps/glad_vulkan.c	/^PFN_vkDestroyDescriptorPool glad_vkDestroyDescriptorPool = NULL;$/;"	v	typeref:typename:PFN_vkDestroyDescriptorPool
glad_vkDestroyDescriptorSetLayout	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyDescriptorSetLayout glad_vkDestroyDescriptorSetLayout;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyDescriptorSetLayout
glad_vkDestroyDescriptorSetLayout	deps/glad_vulkan.c	/^PFN_vkDestroyDescriptorSetLayout glad_vkDestroyDescriptorSetLayout = NULL;$/;"	v	typeref:typename:PFN_vkDestroyDescriptorSetLayout
glad_vkDestroyDescriptorUpdateTemplate	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyDescriptorUpdateTemplate glad_vkDestroyDescriptorUpdateTemplate;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyDescriptorUpdateTemplate
glad_vkDestroyDescriptorUpdateTemplate	deps/glad_vulkan.c	/^PFN_vkDestroyDescriptorUpdateTemplate glad_vkDestroyDescriptorUpdateTemplate = NULL;$/;"	v	typeref:typename:PFN_vkDestroyDescriptorUpdateTemplate
glad_vkDestroyDevice	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyDevice glad_vkDestroyDevice;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyDevice
glad_vkDestroyDevice	deps/glad_vulkan.c	/^PFN_vkDestroyDevice glad_vkDestroyDevice = NULL;$/;"	v	typeref:typename:PFN_vkDestroyDevice
glad_vkDestroyEvent	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyEvent glad_vkDestroyEvent;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyEvent
glad_vkDestroyEvent	deps/glad_vulkan.c	/^PFN_vkDestroyEvent glad_vkDestroyEvent = NULL;$/;"	v	typeref:typename:PFN_vkDestroyEvent
glad_vkDestroyFence	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyFence glad_vkDestroyFence;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyFence
glad_vkDestroyFence	deps/glad_vulkan.c	/^PFN_vkDestroyFence glad_vkDestroyFence = NULL;$/;"	v	typeref:typename:PFN_vkDestroyFence
glad_vkDestroyFramebuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyFramebuffer glad_vkDestroyFramebuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyFramebuffer
glad_vkDestroyFramebuffer	deps/glad_vulkan.c	/^PFN_vkDestroyFramebuffer glad_vkDestroyFramebuffer = NULL;$/;"	v	typeref:typename:PFN_vkDestroyFramebuffer
glad_vkDestroyImage	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyImage glad_vkDestroyImage;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyImage
glad_vkDestroyImage	deps/glad_vulkan.c	/^PFN_vkDestroyImage glad_vkDestroyImage = NULL;$/;"	v	typeref:typename:PFN_vkDestroyImage
glad_vkDestroyImageView	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyImageView glad_vkDestroyImageView;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyImageView
glad_vkDestroyImageView	deps/glad_vulkan.c	/^PFN_vkDestroyImageView glad_vkDestroyImageView = NULL;$/;"	v	typeref:typename:PFN_vkDestroyImageView
glad_vkDestroyInstance	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyInstance glad_vkDestroyInstance;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyInstance
glad_vkDestroyInstance	deps/glad_vulkan.c	/^PFN_vkDestroyInstance glad_vkDestroyInstance = NULL;$/;"	v	typeref:typename:PFN_vkDestroyInstance
glad_vkDestroyPipeline	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyPipeline glad_vkDestroyPipeline;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyPipeline
glad_vkDestroyPipeline	deps/glad_vulkan.c	/^PFN_vkDestroyPipeline glad_vkDestroyPipeline = NULL;$/;"	v	typeref:typename:PFN_vkDestroyPipeline
glad_vkDestroyPipelineCache	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyPipelineCache glad_vkDestroyPipelineCache;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyPipelineCache
glad_vkDestroyPipelineCache	deps/glad_vulkan.c	/^PFN_vkDestroyPipelineCache glad_vkDestroyPipelineCache = NULL;$/;"	v	typeref:typename:PFN_vkDestroyPipelineCache
glad_vkDestroyPipelineLayout	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyPipelineLayout glad_vkDestroyPipelineLayout;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyPipelineLayout
glad_vkDestroyPipelineLayout	deps/glad_vulkan.c	/^PFN_vkDestroyPipelineLayout glad_vkDestroyPipelineLayout = NULL;$/;"	v	typeref:typename:PFN_vkDestroyPipelineLayout
glad_vkDestroyQueryPool	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyQueryPool glad_vkDestroyQueryPool;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyQueryPool
glad_vkDestroyQueryPool	deps/glad_vulkan.c	/^PFN_vkDestroyQueryPool glad_vkDestroyQueryPool = NULL;$/;"	v	typeref:typename:PFN_vkDestroyQueryPool
glad_vkDestroyRenderPass	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyRenderPass glad_vkDestroyRenderPass;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyRenderPass
glad_vkDestroyRenderPass	deps/glad_vulkan.c	/^PFN_vkDestroyRenderPass glad_vkDestroyRenderPass = NULL;$/;"	v	typeref:typename:PFN_vkDestroyRenderPass
glad_vkDestroySampler	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroySampler glad_vkDestroySampler;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroySampler
glad_vkDestroySampler	deps/glad_vulkan.c	/^PFN_vkDestroySampler glad_vkDestroySampler = NULL;$/;"	v	typeref:typename:PFN_vkDestroySampler
glad_vkDestroySamplerYcbcrConversion	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroySamplerYcbcrConversion glad_vkDestroySamplerYcbcrConversion;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroySamplerYcbcrConversion
glad_vkDestroySamplerYcbcrConversion	deps/glad_vulkan.c	/^PFN_vkDestroySamplerYcbcrConversion glad_vkDestroySamplerYcbcrConversion = NULL;$/;"	v	typeref:typename:PFN_vkDestroySamplerYcbcrConversion
glad_vkDestroySemaphore	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroySemaphore glad_vkDestroySemaphore;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroySemaphore
glad_vkDestroySemaphore	deps/glad_vulkan.c	/^PFN_vkDestroySemaphore glad_vkDestroySemaphore = NULL;$/;"	v	typeref:typename:PFN_vkDestroySemaphore
glad_vkDestroyShaderModule	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroyShaderModule glad_vkDestroyShaderModule;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroyShaderModule
glad_vkDestroyShaderModule	deps/glad_vulkan.c	/^PFN_vkDestroyShaderModule glad_vkDestroyShaderModule = NULL;$/;"	v	typeref:typename:PFN_vkDestroyShaderModule
glad_vkDestroySurfaceKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroySurfaceKHR glad_vkDestroySurfaceKHR;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroySurfaceKHR
glad_vkDestroySurfaceKHR	deps/glad_vulkan.c	/^PFN_vkDestroySurfaceKHR glad_vkDestroySurfaceKHR = NULL;$/;"	v	typeref:typename:PFN_vkDestroySurfaceKHR
glad_vkDestroySwapchainKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDestroySwapchainKHR glad_vkDestroySwapchainKHR;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDestroySwapchainKHR
glad_vkDestroySwapchainKHR	deps/glad_vulkan.c	/^PFN_vkDestroySwapchainKHR glad_vkDestroySwapchainKHR = NULL;$/;"	v	typeref:typename:PFN_vkDestroySwapchainKHR
glad_vkDeviceWaitIdle	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkDeviceWaitIdle glad_vkDeviceWaitIdle;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkDeviceWaitIdle
glad_vkDeviceWaitIdle	deps/glad_vulkan.c	/^PFN_vkDeviceWaitIdle glad_vkDeviceWaitIdle = NULL;$/;"	v	typeref:typename:PFN_vkDeviceWaitIdle
glad_vkEndCommandBuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkEndCommandBuffer glad_vkEndCommandBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkEndCommandBuffer
glad_vkEndCommandBuffer	deps/glad_vulkan.c	/^PFN_vkEndCommandBuffer glad_vkEndCommandBuffer = NULL;$/;"	v	typeref:typename:PFN_vkEndCommandBuffer
glad_vkEnumerateDeviceExtensionProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkEnumerateDeviceExtensionProperties glad_vkEnumerateDeviceExtensionProperties/;"	v	typeref:typename:GLAD_API_CALL PFN_vkEnumerateDeviceExtensionProperties
glad_vkEnumerateDeviceExtensionProperties	deps/glad_vulkan.c	/^PFN_vkEnumerateDeviceExtensionProperties glad_vkEnumerateDeviceExtensionProperties = NULL;$/;"	v	typeref:typename:PFN_vkEnumerateDeviceExtensionProperties
glad_vkEnumerateDeviceLayerProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkEnumerateDeviceLayerProperties glad_vkEnumerateDeviceLayerProperties;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkEnumerateDeviceLayerProperties
glad_vkEnumerateDeviceLayerProperties	deps/glad_vulkan.c	/^PFN_vkEnumerateDeviceLayerProperties glad_vkEnumerateDeviceLayerProperties = NULL;$/;"	v	typeref:typename:PFN_vkEnumerateDeviceLayerProperties
glad_vkEnumerateInstanceExtensionProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkEnumerateInstanceExtensionProperties glad_vkEnumerateInstanceExtensionProper/;"	v	typeref:typename:GLAD_API_CALL PFN_vkEnumerateInstanceExtensionProperties
glad_vkEnumerateInstanceExtensionProperties	deps/glad_vulkan.c	/^PFN_vkEnumerateInstanceExtensionProperties glad_vkEnumerateInstanceExtensionProperties = NULL;$/;"	v	typeref:typename:PFN_vkEnumerateInstanceExtensionProperties
glad_vkEnumerateInstanceLayerProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkEnumerateInstanceLayerProperties glad_vkEnumerateInstanceLayerProperties;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkEnumerateInstanceLayerProperties
glad_vkEnumerateInstanceLayerProperties	deps/glad_vulkan.c	/^PFN_vkEnumerateInstanceLayerProperties glad_vkEnumerateInstanceLayerProperties = NULL;$/;"	v	typeref:typename:PFN_vkEnumerateInstanceLayerProperties
glad_vkEnumerateInstanceVersion	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkEnumerateInstanceVersion glad_vkEnumerateInstanceVersion;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkEnumerateInstanceVersion
glad_vkEnumerateInstanceVersion	deps/glad_vulkan.c	/^PFN_vkEnumerateInstanceVersion glad_vkEnumerateInstanceVersion = NULL;$/;"	v	typeref:typename:PFN_vkEnumerateInstanceVersion
glad_vkEnumeratePhysicalDeviceGroups	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkEnumeratePhysicalDeviceGroups glad_vkEnumeratePhysicalDeviceGroups;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkEnumeratePhysicalDeviceGroups
glad_vkEnumeratePhysicalDeviceGroups	deps/glad_vulkan.c	/^PFN_vkEnumeratePhysicalDeviceGroups glad_vkEnumeratePhysicalDeviceGroups = NULL;$/;"	v	typeref:typename:PFN_vkEnumeratePhysicalDeviceGroups
glad_vkEnumeratePhysicalDevices	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkEnumeratePhysicalDevices glad_vkEnumeratePhysicalDevices;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkEnumeratePhysicalDevices
glad_vkEnumeratePhysicalDevices	deps/glad_vulkan.c	/^PFN_vkEnumeratePhysicalDevices glad_vkEnumeratePhysicalDevices = NULL;$/;"	v	typeref:typename:PFN_vkEnumeratePhysicalDevices
glad_vkFlushMappedMemoryRanges	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkFlushMappedMemoryRanges glad_vkFlushMappedMemoryRanges;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkFlushMappedMemoryRanges
glad_vkFlushMappedMemoryRanges	deps/glad_vulkan.c	/^PFN_vkFlushMappedMemoryRanges glad_vkFlushMappedMemoryRanges = NULL;$/;"	v	typeref:typename:PFN_vkFlushMappedMemoryRanges
glad_vkFreeCommandBuffers	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkFreeCommandBuffers glad_vkFreeCommandBuffers;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkFreeCommandBuffers
glad_vkFreeCommandBuffers	deps/glad_vulkan.c	/^PFN_vkFreeCommandBuffers glad_vkFreeCommandBuffers = NULL;$/;"	v	typeref:typename:PFN_vkFreeCommandBuffers
glad_vkFreeDescriptorSets	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkFreeDescriptorSets glad_vkFreeDescriptorSets;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkFreeDescriptorSets
glad_vkFreeDescriptorSets	deps/glad_vulkan.c	/^PFN_vkFreeDescriptorSets glad_vkFreeDescriptorSets = NULL;$/;"	v	typeref:typename:PFN_vkFreeDescriptorSets
glad_vkFreeMemory	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkFreeMemory glad_vkFreeMemory;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkFreeMemory
glad_vkFreeMemory	deps/glad_vulkan.c	/^PFN_vkFreeMemory glad_vkFreeMemory = NULL;$/;"	v	typeref:typename:PFN_vkFreeMemory
glad_vkGetBufferMemoryRequirements	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetBufferMemoryRequirements glad_vkGetBufferMemoryRequirements;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetBufferMemoryRequirements
glad_vkGetBufferMemoryRequirements	deps/glad_vulkan.c	/^PFN_vkGetBufferMemoryRequirements glad_vkGetBufferMemoryRequirements = NULL;$/;"	v	typeref:typename:PFN_vkGetBufferMemoryRequirements
glad_vkGetBufferMemoryRequirements2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetBufferMemoryRequirements2 glad_vkGetBufferMemoryRequirements2;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetBufferMemoryRequirements2
glad_vkGetBufferMemoryRequirements2	deps/glad_vulkan.c	/^PFN_vkGetBufferMemoryRequirements2 glad_vkGetBufferMemoryRequirements2 = NULL;$/;"	v	typeref:typename:PFN_vkGetBufferMemoryRequirements2
glad_vkGetDescriptorSetLayoutSupport	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetDescriptorSetLayoutSupport glad_vkGetDescriptorSetLayoutSupport;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetDescriptorSetLayoutSupport
glad_vkGetDescriptorSetLayoutSupport	deps/glad_vulkan.c	/^PFN_vkGetDescriptorSetLayoutSupport glad_vkGetDescriptorSetLayoutSupport = NULL;$/;"	v	typeref:typename:PFN_vkGetDescriptorSetLayoutSupport
glad_vkGetDeviceGroupPeerMemoryFeatures	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetDeviceGroupPeerMemoryFeatures glad_vkGetDeviceGroupPeerMemoryFeatures;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetDeviceGroupPeerMemoryFeatures
glad_vkGetDeviceGroupPeerMemoryFeatures	deps/glad_vulkan.c	/^PFN_vkGetDeviceGroupPeerMemoryFeatures glad_vkGetDeviceGroupPeerMemoryFeatures = NULL;$/;"	v	typeref:typename:PFN_vkGetDeviceGroupPeerMemoryFeatures
glad_vkGetDeviceGroupPresentCapabilitiesKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetDeviceGroupPresentCapabilitiesKHR glad_vkGetDeviceGroupPresentCapabilitie/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetDeviceGroupPresentCapabilitiesKHR
glad_vkGetDeviceGroupPresentCapabilitiesKHR	deps/glad_vulkan.c	/^PFN_vkGetDeviceGroupPresentCapabilitiesKHR glad_vkGetDeviceGroupPresentCapabilitiesKHR = NULL;$/;"	v	typeref:typename:PFN_vkGetDeviceGroupPresentCapabilitiesKHR
glad_vkGetDeviceGroupSurfacePresentModesKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetDeviceGroupSurfacePresentModesKHR glad_vkGetDeviceGroupSurfacePresentMode/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetDeviceGroupSurfacePresentModesKHR
glad_vkGetDeviceGroupSurfacePresentModesKHR	deps/glad_vulkan.c	/^PFN_vkGetDeviceGroupSurfacePresentModesKHR glad_vkGetDeviceGroupSurfacePresentModesKHR = NULL;$/;"	v	typeref:typename:PFN_vkGetDeviceGroupSurfacePresentModesKHR
glad_vkGetDeviceMemoryCommitment	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetDeviceMemoryCommitment glad_vkGetDeviceMemoryCommitment;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetDeviceMemoryCommitment
glad_vkGetDeviceMemoryCommitment	deps/glad_vulkan.c	/^PFN_vkGetDeviceMemoryCommitment glad_vkGetDeviceMemoryCommitment = NULL;$/;"	v	typeref:typename:PFN_vkGetDeviceMemoryCommitment
glad_vkGetDeviceProcAddr	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetDeviceProcAddr glad_vkGetDeviceProcAddr;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetDeviceProcAddr
glad_vkGetDeviceProcAddr	deps/glad_vulkan.c	/^PFN_vkGetDeviceProcAddr glad_vkGetDeviceProcAddr = NULL;$/;"	v	typeref:typename:PFN_vkGetDeviceProcAddr
glad_vkGetDeviceQueue	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetDeviceQueue glad_vkGetDeviceQueue;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetDeviceQueue
glad_vkGetDeviceQueue	deps/glad_vulkan.c	/^PFN_vkGetDeviceQueue glad_vkGetDeviceQueue = NULL;$/;"	v	typeref:typename:PFN_vkGetDeviceQueue
glad_vkGetDeviceQueue2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetDeviceQueue2 glad_vkGetDeviceQueue2;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetDeviceQueue2
glad_vkGetDeviceQueue2	deps/glad_vulkan.c	/^PFN_vkGetDeviceQueue2 glad_vkGetDeviceQueue2 = NULL;$/;"	v	typeref:typename:PFN_vkGetDeviceQueue2
glad_vkGetEventStatus	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetEventStatus glad_vkGetEventStatus;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetEventStatus
glad_vkGetEventStatus	deps/glad_vulkan.c	/^PFN_vkGetEventStatus glad_vkGetEventStatus = NULL;$/;"	v	typeref:typename:PFN_vkGetEventStatus
glad_vkGetFenceStatus	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetFenceStatus glad_vkGetFenceStatus;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetFenceStatus
glad_vkGetFenceStatus	deps/glad_vulkan.c	/^PFN_vkGetFenceStatus glad_vkGetFenceStatus = NULL;$/;"	v	typeref:typename:PFN_vkGetFenceStatus
glad_vkGetImageMemoryRequirements	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetImageMemoryRequirements glad_vkGetImageMemoryRequirements;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetImageMemoryRequirements
glad_vkGetImageMemoryRequirements	deps/glad_vulkan.c	/^PFN_vkGetImageMemoryRequirements glad_vkGetImageMemoryRequirements = NULL;$/;"	v	typeref:typename:PFN_vkGetImageMemoryRequirements
glad_vkGetImageMemoryRequirements2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetImageMemoryRequirements2 glad_vkGetImageMemoryRequirements2;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetImageMemoryRequirements2
glad_vkGetImageMemoryRequirements2	deps/glad_vulkan.c	/^PFN_vkGetImageMemoryRequirements2 glad_vkGetImageMemoryRequirements2 = NULL;$/;"	v	typeref:typename:PFN_vkGetImageMemoryRequirements2
glad_vkGetImageSparseMemoryRequirements	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetImageSparseMemoryRequirements glad_vkGetImageSparseMemoryRequirements;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetImageSparseMemoryRequirements
glad_vkGetImageSparseMemoryRequirements	deps/glad_vulkan.c	/^PFN_vkGetImageSparseMemoryRequirements glad_vkGetImageSparseMemoryRequirements = NULL;$/;"	v	typeref:typename:PFN_vkGetImageSparseMemoryRequirements
glad_vkGetImageSparseMemoryRequirements2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetImageSparseMemoryRequirements2 glad_vkGetImageSparseMemoryRequirements2;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetImageSparseMemoryRequirements2
glad_vkGetImageSparseMemoryRequirements2	deps/glad_vulkan.c	/^PFN_vkGetImageSparseMemoryRequirements2 glad_vkGetImageSparseMemoryRequirements2 = NULL;$/;"	v	typeref:typename:PFN_vkGetImageSparseMemoryRequirements2
glad_vkGetImageSubresourceLayout	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetImageSubresourceLayout glad_vkGetImageSubresourceLayout;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetImageSubresourceLayout
glad_vkGetImageSubresourceLayout	deps/glad_vulkan.c	/^PFN_vkGetImageSubresourceLayout glad_vkGetImageSubresourceLayout = NULL;$/;"	v	typeref:typename:PFN_vkGetImageSubresourceLayout
glad_vkGetInstanceProcAddr	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetInstanceProcAddr glad_vkGetInstanceProcAddr;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetInstanceProcAddr
glad_vkGetInstanceProcAddr	deps/glad_vulkan.c	/^PFN_vkGetInstanceProcAddr glad_vkGetInstanceProcAddr = NULL;$/;"	v	typeref:typename:PFN_vkGetInstanceProcAddr
glad_vkGetPhysicalDeviceExternalBufferProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceExternalBufferProperties glad_vkGetPhysicalDeviceExternalBu/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceExternalBufferProperties
glad_vkGetPhysicalDeviceExternalBufferProperties	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceExternalBufferProperties glad_vkGetPhysicalDeviceExternalBufferProperties/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceExternalBufferProperties
glad_vkGetPhysicalDeviceExternalFenceProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceExternalFenceProperties glad_vkGetPhysicalDeviceExternalFen/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceExternalFenceProperties
glad_vkGetPhysicalDeviceExternalFenceProperties	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceExternalFenceProperties glad_vkGetPhysicalDeviceExternalFenceProperties =/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceExternalFenceProperties
glad_vkGetPhysicalDeviceExternalSemaphoreProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceExternalSemaphoreProperties glad_vkGetPhysicalDeviceExterna/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceExternalSemaphoreProperties
glad_vkGetPhysicalDeviceExternalSemaphoreProperties	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceExternalSemaphoreProperties glad_vkGetPhysicalDeviceExternalSemaphoreProp/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceExternalSemaphoreProperties
glad_vkGetPhysicalDeviceFeatures	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceFeatures glad_vkGetPhysicalDeviceFeatures;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceFeatures
glad_vkGetPhysicalDeviceFeatures	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceFeatures glad_vkGetPhysicalDeviceFeatures = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceFeatures
glad_vkGetPhysicalDeviceFeatures2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceFeatures2 glad_vkGetPhysicalDeviceFeatures2;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceFeatures2
glad_vkGetPhysicalDeviceFeatures2	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceFeatures2 glad_vkGetPhysicalDeviceFeatures2 = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceFeatures2
glad_vkGetPhysicalDeviceFormatProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceFormatProperties glad_vkGetPhysicalDeviceFormatProperties;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceFormatProperties
glad_vkGetPhysicalDeviceFormatProperties	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceFormatProperties glad_vkGetPhysicalDeviceFormatProperties = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceFormatProperties
glad_vkGetPhysicalDeviceFormatProperties2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceFormatProperties2 glad_vkGetPhysicalDeviceFormatProperties2/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceFormatProperties2
glad_vkGetPhysicalDeviceFormatProperties2	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceFormatProperties2 glad_vkGetPhysicalDeviceFormatProperties2 = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceFormatProperties2
glad_vkGetPhysicalDeviceImageFormatProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceImageFormatProperties glad_vkGetPhysicalDeviceImageFormatPr/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceImageFormatProperties
glad_vkGetPhysicalDeviceImageFormatProperties	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceImageFormatProperties glad_vkGetPhysicalDeviceImageFormatProperties = NUL/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceImageFormatProperties
glad_vkGetPhysicalDeviceImageFormatProperties2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceImageFormatProperties2 glad_vkGetPhysicalDeviceImageFormatP/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceImageFormatProperties2
glad_vkGetPhysicalDeviceImageFormatProperties2	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceImageFormatProperties2 glad_vkGetPhysicalDeviceImageFormatProperties2 = N/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceImageFormatProperties2
glad_vkGetPhysicalDeviceMemoryProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceMemoryProperties glad_vkGetPhysicalDeviceMemoryProperties;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceMemoryProperties
glad_vkGetPhysicalDeviceMemoryProperties	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceMemoryProperties glad_vkGetPhysicalDeviceMemoryProperties = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceMemoryProperties
glad_vkGetPhysicalDeviceMemoryProperties2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceMemoryProperties2 glad_vkGetPhysicalDeviceMemoryProperties2/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceMemoryProperties2
glad_vkGetPhysicalDeviceMemoryProperties2	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceMemoryProperties2 glad_vkGetPhysicalDeviceMemoryProperties2 = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceMemoryProperties2
glad_vkGetPhysicalDevicePresentRectanglesKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDevicePresentRectanglesKHR glad_vkGetPhysicalDevicePresentRectang/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDevicePresentRectanglesKHR
glad_vkGetPhysicalDevicePresentRectanglesKHR	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDevicePresentRectanglesKHR glad_vkGetPhysicalDevicePresentRectanglesKHR = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDevicePresentRectanglesKHR
glad_vkGetPhysicalDeviceProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceProperties glad_vkGetPhysicalDeviceProperties;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceProperties
glad_vkGetPhysicalDeviceProperties	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceProperties glad_vkGetPhysicalDeviceProperties = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceProperties
glad_vkGetPhysicalDeviceProperties2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceProperties2 glad_vkGetPhysicalDeviceProperties2;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceProperties2
glad_vkGetPhysicalDeviceProperties2	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceProperties2 glad_vkGetPhysicalDeviceProperties2 = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceProperties2
glad_vkGetPhysicalDeviceQueueFamilyProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceQueueFamilyProperties glad_vkGetPhysicalDeviceQueueFamilyPr/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceQueueFamilyProperties
glad_vkGetPhysicalDeviceQueueFamilyProperties	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceQueueFamilyProperties glad_vkGetPhysicalDeviceQueueFamilyProperties = NUL/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceQueueFamilyProperties
glad_vkGetPhysicalDeviceQueueFamilyProperties2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceQueueFamilyProperties2 glad_vkGetPhysicalDeviceQueueFamilyP/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceQueueFamilyProperties2
glad_vkGetPhysicalDeviceQueueFamilyProperties2	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceQueueFamilyProperties2 glad_vkGetPhysicalDeviceQueueFamilyProperties2 = N/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceQueueFamilyProperties2
glad_vkGetPhysicalDeviceSparseImageFormatProperties	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceSparseImageFormatProperties glad_vkGetPhysicalDeviceSparseI/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceSparseImageFormatProperties
glad_vkGetPhysicalDeviceSparseImageFormatProperties	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceSparseImageFormatProperties glad_vkGetPhysicalDeviceSparseImageFormatProp/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceSparseImageFormatProperties
glad_vkGetPhysicalDeviceSparseImageFormatProperties2	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceSparseImageFormatProperties2 glad_vkGetPhysicalDeviceSparse/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceSparseImageFormatProperties2
glad_vkGetPhysicalDeviceSparseImageFormatProperties2	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceSparseImageFormatProperties2 glad_vkGetPhysicalDeviceSparseImageFormatPro/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceSparseImageFormatProperties2
glad_vkGetPhysicalDeviceSurfaceCapabilitiesKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR glad_vkGetPhysicalDeviceSurfaceCapab/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR
glad_vkGetPhysicalDeviceSurfaceCapabilitiesKHR	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR glad_vkGetPhysicalDeviceSurfaceCapabilitiesKHR = N/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR
glad_vkGetPhysicalDeviceSurfaceFormatsKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceSurfaceFormatsKHR glad_vkGetPhysicalDeviceSurfaceFormatsKHR/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceSurfaceFormatsKHR
glad_vkGetPhysicalDeviceSurfaceFormatsKHR	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceSurfaceFormatsKHR glad_vkGetPhysicalDeviceSurfaceFormatsKHR = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceSurfaceFormatsKHR
glad_vkGetPhysicalDeviceSurfacePresentModesKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceSurfacePresentModesKHR glad_vkGetPhysicalDeviceSurfacePrese/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceSurfacePresentModesKHR
glad_vkGetPhysicalDeviceSurfacePresentModesKHR	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceSurfacePresentModesKHR glad_vkGetPhysicalDeviceSurfacePresentModesKHR = N/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceSurfacePresentModesKHR
glad_vkGetPhysicalDeviceSurfaceSupportKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPhysicalDeviceSurfaceSupportKHR glad_vkGetPhysicalDeviceSurfaceSupportKHR/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPhysicalDeviceSurfaceSupportKHR
glad_vkGetPhysicalDeviceSurfaceSupportKHR	deps/glad_vulkan.c	/^PFN_vkGetPhysicalDeviceSurfaceSupportKHR glad_vkGetPhysicalDeviceSurfaceSupportKHR = NULL;$/;"	v	typeref:typename:PFN_vkGetPhysicalDeviceSurfaceSupportKHR
glad_vkGetPipelineCacheData	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetPipelineCacheData glad_vkGetPipelineCacheData;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetPipelineCacheData
glad_vkGetPipelineCacheData	deps/glad_vulkan.c	/^PFN_vkGetPipelineCacheData glad_vkGetPipelineCacheData = NULL;$/;"	v	typeref:typename:PFN_vkGetPipelineCacheData
glad_vkGetQueryPoolResults	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetQueryPoolResults glad_vkGetQueryPoolResults;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetQueryPoolResults
glad_vkGetQueryPoolResults	deps/glad_vulkan.c	/^PFN_vkGetQueryPoolResults glad_vkGetQueryPoolResults = NULL;$/;"	v	typeref:typename:PFN_vkGetQueryPoolResults
glad_vkGetRenderAreaGranularity	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetRenderAreaGranularity glad_vkGetRenderAreaGranularity;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetRenderAreaGranularity
glad_vkGetRenderAreaGranularity	deps/glad_vulkan.c	/^PFN_vkGetRenderAreaGranularity glad_vkGetRenderAreaGranularity = NULL;$/;"	v	typeref:typename:PFN_vkGetRenderAreaGranularity
glad_vkGetSwapchainImagesKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkGetSwapchainImagesKHR glad_vkGetSwapchainImagesKHR;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkGetSwapchainImagesKHR
glad_vkGetSwapchainImagesKHR	deps/glad_vulkan.c	/^PFN_vkGetSwapchainImagesKHR glad_vkGetSwapchainImagesKHR = NULL;$/;"	v	typeref:typename:PFN_vkGetSwapchainImagesKHR
glad_vkInvalidateMappedMemoryRanges	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkInvalidateMappedMemoryRanges glad_vkInvalidateMappedMemoryRanges;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkInvalidateMappedMemoryRanges
glad_vkInvalidateMappedMemoryRanges	deps/glad_vulkan.c	/^PFN_vkInvalidateMappedMemoryRanges glad_vkInvalidateMappedMemoryRanges = NULL;$/;"	v	typeref:typename:PFN_vkInvalidateMappedMemoryRanges
glad_vkMapMemory	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkMapMemory glad_vkMapMemory;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkMapMemory
glad_vkMapMemory	deps/glad_vulkan.c	/^PFN_vkMapMemory glad_vkMapMemory = NULL;$/;"	v	typeref:typename:PFN_vkMapMemory
glad_vkMergePipelineCaches	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkMergePipelineCaches glad_vkMergePipelineCaches;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkMergePipelineCaches
glad_vkMergePipelineCaches	deps/glad_vulkan.c	/^PFN_vkMergePipelineCaches glad_vkMergePipelineCaches = NULL;$/;"	v	typeref:typename:PFN_vkMergePipelineCaches
glad_vkQueueBindSparse	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkQueueBindSparse glad_vkQueueBindSparse;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkQueueBindSparse
glad_vkQueueBindSparse	deps/glad_vulkan.c	/^PFN_vkQueueBindSparse glad_vkQueueBindSparse = NULL;$/;"	v	typeref:typename:PFN_vkQueueBindSparse
glad_vkQueuePresentKHR	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkQueuePresentKHR glad_vkQueuePresentKHR;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkQueuePresentKHR
glad_vkQueuePresentKHR	deps/glad_vulkan.c	/^PFN_vkQueuePresentKHR glad_vkQueuePresentKHR = NULL;$/;"	v	typeref:typename:PFN_vkQueuePresentKHR
glad_vkQueueSubmit	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkQueueSubmit glad_vkQueueSubmit;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkQueueSubmit
glad_vkQueueSubmit	deps/glad_vulkan.c	/^PFN_vkQueueSubmit glad_vkQueueSubmit = NULL;$/;"	v	typeref:typename:PFN_vkQueueSubmit
glad_vkQueueWaitIdle	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkQueueWaitIdle glad_vkQueueWaitIdle;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkQueueWaitIdle
glad_vkQueueWaitIdle	deps/glad_vulkan.c	/^PFN_vkQueueWaitIdle glad_vkQueueWaitIdle = NULL;$/;"	v	typeref:typename:PFN_vkQueueWaitIdle
glad_vkResetCommandBuffer	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkResetCommandBuffer glad_vkResetCommandBuffer;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkResetCommandBuffer
glad_vkResetCommandBuffer	deps/glad_vulkan.c	/^PFN_vkResetCommandBuffer glad_vkResetCommandBuffer = NULL;$/;"	v	typeref:typename:PFN_vkResetCommandBuffer
glad_vkResetCommandPool	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkResetCommandPool glad_vkResetCommandPool;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkResetCommandPool
glad_vkResetCommandPool	deps/glad_vulkan.c	/^PFN_vkResetCommandPool glad_vkResetCommandPool = NULL;$/;"	v	typeref:typename:PFN_vkResetCommandPool
glad_vkResetDescriptorPool	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkResetDescriptorPool glad_vkResetDescriptorPool;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkResetDescriptorPool
glad_vkResetDescriptorPool	deps/glad_vulkan.c	/^PFN_vkResetDescriptorPool glad_vkResetDescriptorPool = NULL;$/;"	v	typeref:typename:PFN_vkResetDescriptorPool
glad_vkResetEvent	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkResetEvent glad_vkResetEvent;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkResetEvent
glad_vkResetEvent	deps/glad_vulkan.c	/^PFN_vkResetEvent glad_vkResetEvent = NULL;$/;"	v	typeref:typename:PFN_vkResetEvent
glad_vkResetFences	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkResetFences glad_vkResetFences;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkResetFences
glad_vkResetFences	deps/glad_vulkan.c	/^PFN_vkResetFences glad_vkResetFences = NULL;$/;"	v	typeref:typename:PFN_vkResetFences
glad_vkSetEvent	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkSetEvent glad_vkSetEvent;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkSetEvent
glad_vkSetEvent	deps/glad_vulkan.c	/^PFN_vkSetEvent glad_vkSetEvent = NULL;$/;"	v	typeref:typename:PFN_vkSetEvent
glad_vkTrimCommandPool	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkTrimCommandPool glad_vkTrimCommandPool;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkTrimCommandPool
glad_vkTrimCommandPool	deps/glad_vulkan.c	/^PFN_vkTrimCommandPool glad_vkTrimCommandPool = NULL;$/;"	v	typeref:typename:PFN_vkTrimCommandPool
glad_vkUnmapMemory	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkUnmapMemory glad_vkUnmapMemory;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkUnmapMemory
glad_vkUnmapMemory	deps/glad_vulkan.c	/^PFN_vkUnmapMemory glad_vkUnmapMemory = NULL;$/;"	v	typeref:typename:PFN_vkUnmapMemory
glad_vkUpdateDescriptorSetWithTemplate	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkUpdateDescriptorSetWithTemplate glad_vkUpdateDescriptorSetWithTemplate;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkUpdateDescriptorSetWithTemplate
glad_vkUpdateDescriptorSetWithTemplate	deps/glad_vulkan.c	/^PFN_vkUpdateDescriptorSetWithTemplate glad_vkUpdateDescriptorSetWithTemplate = NULL;$/;"	v	typeref:typename:PFN_vkUpdateDescriptorSetWithTemplate
glad_vkUpdateDescriptorSets	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkUpdateDescriptorSets glad_vkUpdateDescriptorSets;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkUpdateDescriptorSets
glad_vkUpdateDescriptorSets	deps/glad_vulkan.c	/^PFN_vkUpdateDescriptorSets glad_vkUpdateDescriptorSets = NULL;$/;"	v	typeref:typename:PFN_vkUpdateDescriptorSets
glad_vkWaitForFences	deps/glad/vulkan.h	/^GLAD_API_CALL PFN_vkWaitForFences glad_vkWaitForFences;$/;"	v	typeref:typename:GLAD_API_CALL PFN_vkWaitForFences
glad_vkWaitForFences	deps/glad_vulkan.c	/^PFN_vkWaitForFences glad_vkWaitForFences = NULL;$/;"	v	typeref:typename:PFN_vkWaitForFences
glad_vk_find_core_vulkan	deps/glad_vulkan.c	/^static int glad_vk_find_core_vulkan( VkPhysicalDevice physical_device) {$/;"	f	typeref:typename:int	file:
glad_vk_find_extensions_vulkan	deps/glad_vulkan.c	/^static int glad_vk_find_extensions_vulkan( VkPhysicalDevice physical_device) {$/;"	f	typeref:typename:int	file:
glad_vk_free_extensions	deps/glad_vulkan.c	/^static void glad_vk_free_extensions(uint32_t extension_count, char **extensions) {$/;"	f	typeref:typename:void	file:
glad_vk_get_extensions	deps/glad_vulkan.c	/^static int glad_vk_get_extensions( VkPhysicalDevice physical_device, uint32_t *out_extension_cou/;"	f	typeref:typename:int	file:
glad_vk_get_proc_from_userptr	deps/glad_vulkan.c	/^static GLADapiproc glad_vk_get_proc_from_userptr(const char* name, void *userptr) {$/;"	f	typeref:typename:GLADapiproc	file:
glad_vk_has_extension	deps/glad_vulkan.c	/^static int glad_vk_has_extension(const char *name, uint32_t extension_count, char **extensions) /;"	f	typeref:typename:int	file:
glad_vk_load_VK_EXT_debug_report	deps/glad_vulkan.c	/^static void glad_vk_load_VK_EXT_debug_report( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_vk_load_VK_KHR_surface	deps/glad_vulkan.c	/^static void glad_vk_load_VK_KHR_surface( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_vk_load_VK_KHR_swapchain	deps/glad_vulkan.c	/^static void glad_vk_load_VK_KHR_swapchain( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_vk_load_VK_VERSION_1_0	deps/glad_vulkan.c	/^static void glad_vk_load_VK_VERSION_1_0( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_vk_load_VK_VERSION_1_1	deps/glad_vulkan.c	/^static void glad_vk_load_VK_VERSION_1_1( GLADuserptrloadfunc load, void* userptr) {$/;"	f	typeref:typename:void	file:
glad_vulkan_callback	tests/glfwinfo.c	/^static GLADapiproc glad_vulkan_callback(const char* name, void* user)$/;"	f	typeref:typename:GLADapiproc	file:
glad_vulkan_callback	tests/triangle-vulkan.c	/^static GLADapiproc glad_vulkan_callback(const char* name, void* user)$/;"	f	typeref:typename:GLADapiproc	file:
glfw	deps/nuklear_glfw_gl2.h	/^} glfw;$/;"	v	typeref:struct:nk_glfw
glfw	src/CMakeLists.txt	/^add_library(glfw "${GLFW_SOURCE_DIR}\/include\/GLFW\/glfw3.h"$/;"	t
glfwCreateCursor	src/input.c	/^GLFWAPI GLFWcursor* glfwCreateCursor(const GLFWimage* image, int xhot, int yhot)$/;"	f	typeref:typename:GLFWAPI GLFWcursor *
glfwCreateStandardCursor	src/input.c	/^GLFWAPI GLFWcursor* glfwCreateStandardCursor(int shape)$/;"	f	typeref:typename:GLFWAPI GLFWcursor *
glfwCreateWindow	src/window.c	/^GLFWAPI GLFWwindow* glfwCreateWindow(int width, int height,$/;"	f	typeref:typename:GLFWAPI GLFWwindow *
glfwCreateWindowSurface	src/vulkan.c	/^GLFWAPI VkResult glfwCreateWindowSurface(VkInstance instance,$/;"	f	typeref:typename:GLFWAPI VkResult
glfwDefaultWindowHints	src/window.c	/^void glfwDefaultWindowHints(void)$/;"	f	typeref:typename:void
glfwDestroyCursor	src/input.c	/^GLFWAPI void glfwDestroyCursor(GLFWcursor* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwDestroyWindow	src/window.c	/^GLFWAPI void glfwDestroyWindow(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwExtensionSupported	src/context.c	/^GLFWAPI int glfwExtensionSupported(const char* extension)$/;"	f	typeref:typename:GLFWAPI int
glfwFocusWindow	src/window.c	/^GLFWAPI void glfwFocusWindow(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwGetClipboardString	src/input.c	/^GLFWAPI const char* glfwGetClipboardString(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI const char *
glfwGetCocoaMonitor	src/cocoa_monitor.m	/^GLFWAPI CGDirectDisplayID glfwGetCocoaMonitor(GLFWmonitor* handle)$/;"	f
glfwGetCocoaWindow	src/cocoa_window.m	/^GLFWAPI id glfwGetCocoaWindow(GLFWwindow* handle)$/;"	f
glfwGetCurrentContext	src/context.c	/^GLFWAPI GLFWwindow* glfwGetCurrentContext(void)$/;"	f	typeref:typename:GLFWAPI GLFWwindow *
glfwGetCursorPos	src/input.c	/^GLFWAPI void glfwGetCursorPos(GLFWwindow* handle, double* xpos, double* ypos)$/;"	f	typeref:typename:GLFWAPI void
glfwGetEGLContext	src/egl_context.c	/^GLFWAPI EGLContext glfwGetEGLContext(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI EGLContext
glfwGetEGLDisplay	src/egl_context.c	/^GLFWAPI EGLDisplay glfwGetEGLDisplay(void)$/;"	f	typeref:typename:GLFWAPI EGLDisplay
glfwGetEGLSurface	src/egl_context.c	/^GLFWAPI EGLSurface glfwGetEGLSurface(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI EGLSurface
glfwGetError	src/init.c	/^GLFWAPI int glfwGetError(const char** description)$/;"	f	typeref:typename:GLFWAPI int
glfwGetFramebufferSize	src/window.c	/^GLFWAPI void glfwGetFramebufferSize(GLFWwindow* handle, int* width, int* height)$/;"	f	typeref:typename:GLFWAPI void
glfwGetGLXContext	src/glx_context.c	/^GLFWAPI GLXContext glfwGetGLXContext(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI GLXContext
glfwGetGLXWindow	src/glx_context.c	/^GLFWAPI GLXWindow glfwGetGLXWindow(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI GLXWindow
glfwGetGamepadName	src/input.c	/^GLFWAPI const char* glfwGetGamepadName(int jid)$/;"	f	typeref:typename:GLFWAPI const char *
glfwGetGamepadState	src/input.c	/^GLFWAPI int glfwGetGamepadState(int jid, GLFWgamepadstate* state)$/;"	f	typeref:typename:GLFWAPI int
glfwGetGammaRamp	src/monitor.c	/^GLFWAPI const GLFWgammaramp* glfwGetGammaRamp(GLFWmonitor* handle)$/;"	f	typeref:typename:GLFWAPI const GLFWgammaramp *
glfwGetInputMode	src/input.c	/^GLFWAPI int glfwGetInputMode(GLFWwindow* handle, int mode)$/;"	f	typeref:typename:GLFWAPI int
glfwGetInstanceProcAddress	src/vulkan.c	/^GLFWAPI GLFWvkproc glfwGetInstanceProcAddress(VkInstance instance,$/;"	f	typeref:typename:GLFWAPI GLFWvkproc
glfwGetJoystickAxes	src/input.c	/^GLFWAPI const float* glfwGetJoystickAxes(int jid, int* count)$/;"	f	typeref:typename:GLFWAPI const float *
glfwGetJoystickButtons	src/input.c	/^GLFWAPI const unsigned char* glfwGetJoystickButtons(int jid, int* count)$/;"	f	typeref:typename:GLFWAPI const unsigned char *
glfwGetJoystickGUID	src/input.c	/^GLFWAPI const char* glfwGetJoystickGUID(int jid)$/;"	f	typeref:typename:GLFWAPI const char *
glfwGetJoystickHats	src/input.c	/^GLFWAPI const unsigned char* glfwGetJoystickHats(int jid, int* count)$/;"	f	typeref:typename:GLFWAPI const unsigned char *
glfwGetJoystickName	src/input.c	/^GLFWAPI const char* glfwGetJoystickName(int jid)$/;"	f	typeref:typename:GLFWAPI const char *
glfwGetJoystickUserPointer	src/input.c	/^GLFWAPI void* glfwGetJoystickUserPointer(int jid)$/;"	f	typeref:typename:GLFWAPI void *
glfwGetKey	src/input.c	/^GLFWAPI int glfwGetKey(GLFWwindow* handle, int key)$/;"	f	typeref:typename:GLFWAPI int
glfwGetKeyName	src/input.c	/^GLFWAPI const char* glfwGetKeyName(int key, int scancode)$/;"	f	typeref:typename:GLFWAPI const char *
glfwGetKeyScancode	src/input.c	/^GLFWAPI int glfwGetKeyScancode(int key)$/;"	f	typeref:typename:GLFWAPI int
glfwGetMonitorContentScale	src/monitor.c	/^GLFWAPI void glfwGetMonitorContentScale(GLFWmonitor* handle,$/;"	f	typeref:typename:GLFWAPI void
glfwGetMonitorName	src/monitor.c	/^GLFWAPI const char* glfwGetMonitorName(GLFWmonitor* handle)$/;"	f	typeref:typename:GLFWAPI const char *
glfwGetMonitorPhysicalSize	src/monitor.c	/^GLFWAPI void glfwGetMonitorPhysicalSize(GLFWmonitor* handle, int* widthMM, int* heightMM)$/;"	f	typeref:typename:GLFWAPI void
glfwGetMonitorPos	src/monitor.c	/^GLFWAPI void glfwGetMonitorPos(GLFWmonitor* handle, int* xpos, int* ypos)$/;"	f	typeref:typename:GLFWAPI void
glfwGetMonitorUserPointer	src/monitor.c	/^GLFWAPI void* glfwGetMonitorUserPointer(GLFWmonitor* handle)$/;"	f	typeref:typename:GLFWAPI void *
glfwGetMonitorWorkarea	src/monitor.c	/^GLFWAPI void glfwGetMonitorWorkarea(GLFWmonitor* handle,$/;"	f	typeref:typename:GLFWAPI void
glfwGetMonitors	src/monitor.c	/^GLFWAPI GLFWmonitor** glfwGetMonitors(int* count)$/;"	f	typeref:typename:GLFWAPI GLFWmonitor **
glfwGetMouseButton	src/input.c	/^GLFWAPI int glfwGetMouseButton(GLFWwindow* handle, int button)$/;"	f	typeref:typename:GLFWAPI int
glfwGetNSGLContext	src/nsgl_context.m	/^GLFWAPI id glfwGetNSGLContext(GLFWwindow* handle)$/;"	f
glfwGetOSMesaColorBuffer	src/osmesa_context.c	/^GLFWAPI int glfwGetOSMesaColorBuffer(GLFWwindow* handle, int* width,$/;"	f	typeref:typename:GLFWAPI int
glfwGetOSMesaContext	src/osmesa_context.c	/^GLFWAPI OSMesaContext glfwGetOSMesaContext(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI OSMesaContext
glfwGetOSMesaDepthBuffer	src/osmesa_context.c	/^GLFWAPI int glfwGetOSMesaDepthBuffer(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI int
glfwGetPhysicalDevicePresentationSupport	src/vulkan.c	/^GLFWAPI int glfwGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f	typeref:typename:GLFWAPI int
glfwGetPrimaryMonitor	src/monitor.c	/^GLFWAPI GLFWmonitor* glfwGetPrimaryMonitor(void)$/;"	f	typeref:typename:GLFWAPI GLFWmonitor *
glfwGetProcAddress	src/context.c	/^GLFWAPI GLFWglproc glfwGetProcAddress(const char* procname)$/;"	f	typeref:typename:GLFWAPI GLFWglproc
glfwGetRequiredInstanceExtensions	src/vulkan.c	/^GLFWAPI const char** glfwGetRequiredInstanceExtensions(uint32_t* count)$/;"	f	typeref:typename:GLFWAPI const char **
glfwGetTime	src/input.c	/^GLFWAPI double glfwGetTime(void)$/;"	f	typeref:typename:GLFWAPI double
glfwGetTimerFrequency	src/input.c	/^GLFWAPI uint64_t glfwGetTimerFrequency(void)$/;"	f	typeref:typename:GLFWAPI uint64_t
glfwGetTimerValue	src/input.c	/^GLFWAPI uint64_t glfwGetTimerValue(void)$/;"	f	typeref:typename:GLFWAPI uint64_t
glfwGetVersion	src/init.c	/^GLFWAPI void glfwGetVersion(int* major, int* minor, int* rev)$/;"	f	typeref:typename:GLFWAPI void
glfwGetVersionString	src/init.c	/^GLFWAPI const char* glfwGetVersionString(void)$/;"	f	typeref:typename:GLFWAPI const char *
glfwGetVideoMode	src/monitor.c	/^GLFWAPI const GLFWvidmode* glfwGetVideoMode(GLFWmonitor* handle)$/;"	f	typeref:typename:GLFWAPI const GLFWvidmode *
glfwGetVideoModes	src/monitor.c	/^GLFWAPI const GLFWvidmode* glfwGetVideoModes(GLFWmonitor* handle, int* count)$/;"	f	typeref:typename:GLFWAPI const GLFWvidmode *
glfwGetWGLContext	src/wgl_context.c	/^GLFWAPI HGLRC glfwGetWGLContext(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI HGLRC
glfwGetWaylandDisplay	src/wl_window.c	/^GLFWAPI struct wl_display* glfwGetWaylandDisplay(void)$/;"	f	typeref:typename:GLFWAPI struct wl_display *
glfwGetWaylandMonitor	src/wl_monitor.c	/^GLFWAPI struct wl_output* glfwGetWaylandMonitor(GLFWmonitor* handle)$/;"	f	typeref:typename:GLFWAPI struct wl_output *
glfwGetWaylandWindow	src/wl_window.c	/^GLFWAPI struct wl_surface* glfwGetWaylandWindow(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI struct wl_surface *
glfwGetWin32Adapter	src/win32_monitor.c	/^GLFWAPI const char* glfwGetWin32Adapter(GLFWmonitor* handle)$/;"	f	typeref:typename:GLFWAPI const char *
glfwGetWin32Monitor	src/win32_monitor.c	/^GLFWAPI const char* glfwGetWin32Monitor(GLFWmonitor* handle)$/;"	f	typeref:typename:GLFWAPI const char *
glfwGetWin32Window	src/win32_window.c	/^GLFWAPI HWND glfwGetWin32Window(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI HWND
glfwGetWindowAttrib	src/window.c	/^GLFWAPI int glfwGetWindowAttrib(GLFWwindow* handle, int attrib)$/;"	f	typeref:typename:GLFWAPI int
glfwGetWindowContentScale	src/window.c	/^GLFWAPI void glfwGetWindowContentScale(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI void
glfwGetWindowFrameSize	src/window.c	/^GLFWAPI void glfwGetWindowFrameSize(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI void
glfwGetWindowMonitor	src/window.c	/^GLFWAPI GLFWmonitor* glfwGetWindowMonitor(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI GLFWmonitor *
glfwGetWindowOpacity	src/window.c	/^GLFWAPI float glfwGetWindowOpacity(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI float
glfwGetWindowPos	src/window.c	/^GLFWAPI void glfwGetWindowPos(GLFWwindow* handle, int* xpos, int* ypos)$/;"	f	typeref:typename:GLFWAPI void
glfwGetWindowSize	src/window.c	/^GLFWAPI void glfwGetWindowSize(GLFWwindow* handle, int* width, int* height)$/;"	f	typeref:typename:GLFWAPI void
glfwGetWindowUserPointer	src/window.c	/^GLFWAPI void* glfwGetWindowUserPointer(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void *
glfwGetX11Adapter	src/x11_monitor.c	/^GLFWAPI RRCrtc glfwGetX11Adapter(GLFWmonitor* handle)$/;"	f	typeref:typename:GLFWAPI RRCrtc
glfwGetX11Display	src/x11_window.c	/^GLFWAPI Display* glfwGetX11Display(void)$/;"	f	typeref:typename:GLFWAPI Display *
glfwGetX11Monitor	src/x11_monitor.c	/^GLFWAPI RROutput glfwGetX11Monitor(GLFWmonitor* handle)$/;"	f	typeref:typename:GLFWAPI RROutput
glfwGetX11SelectionString	src/x11_window.c	/^GLFWAPI const char* glfwGetX11SelectionString(void)$/;"	f	typeref:typename:GLFWAPI const char *
glfwGetX11Window	src/x11_window.c	/^GLFWAPI Window glfwGetX11Window(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI Window
glfwHideWindow	src/window.c	/^GLFWAPI void glfwHideWindow(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwIconifyWindow	src/window.c	/^GLFWAPI void glfwIconifyWindow(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwInit	src/init.c	/^GLFWAPI int glfwInit(void)$/;"	f	typeref:typename:GLFWAPI int
glfwInitHint	src/init.c	/^GLFWAPI void glfwInitHint(int hint, int value)$/;"	f	typeref:typename:GLFWAPI void
glfwJoystickIsGamepad	src/input.c	/^GLFWAPI int glfwJoystickIsGamepad(int jid)$/;"	f	typeref:typename:GLFWAPI int
glfwJoystickPresent	src/input.c	/^GLFWAPI int glfwJoystickPresent(int jid)$/;"	f	typeref:typename:GLFWAPI int
glfwMakeContextCurrent	src/context.c	/^GLFWAPI void glfwMakeContextCurrent(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwMaximizeWindow	src/window.c	/^GLFWAPI void glfwMaximizeWindow(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwPollEvents	src/window.c	/^GLFWAPI void glfwPollEvents(void)$/;"	f	typeref:typename:GLFWAPI void
glfwPostEmptyEvent	src/window.c	/^GLFWAPI void glfwPostEmptyEvent(void)$/;"	f	typeref:typename:GLFWAPI void
glfwRawMouseMotionSupported	src/input.c	/^GLFWAPI int glfwRawMouseMotionSupported(void)$/;"	f	typeref:typename:GLFWAPI int
glfwRequestWindowAttention	src/window.c	/^GLFWAPI void glfwRequestWindowAttention(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwRestoreWindow	src/window.c	/^GLFWAPI void glfwRestoreWindow(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwSetCharCallback	src/input.c	/^GLFWAPI GLFWcharfun glfwSetCharCallback(GLFWwindow* handle, GLFWcharfun cbfun)$/;"	f	typeref:typename:GLFWAPI GLFWcharfun
glfwSetCharModsCallback	src/input.c	/^GLFWAPI GLFWcharmodsfun glfwSetCharModsCallback(GLFWwindow* handle, GLFWcharmodsfun cbfun)$/;"	f	typeref:typename:GLFWAPI GLFWcharmodsfun
glfwSetClipboardString	src/input.c	/^GLFWAPI void glfwSetClipboardString(GLFWwindow* handle, const char* string)$/;"	f	typeref:typename:GLFWAPI void
glfwSetCursor	src/input.c	/^GLFWAPI void glfwSetCursor(GLFWwindow* windowHandle, GLFWcursor* cursorHandle)$/;"	f	typeref:typename:GLFWAPI void
glfwSetCursorEnterCallback	src/input.c	/^GLFWAPI GLFWcursorenterfun glfwSetCursorEnterCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWcursorenterfun
glfwSetCursorPos	src/input.c	/^GLFWAPI void glfwSetCursorPos(GLFWwindow* handle, double xpos, double ypos)$/;"	f	typeref:typename:GLFWAPI void
glfwSetCursorPosCallback	src/input.c	/^GLFWAPI GLFWcursorposfun glfwSetCursorPosCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWcursorposfun
glfwSetDropCallback	src/input.c	/^GLFWAPI GLFWdropfun glfwSetDropCallback(GLFWwindow* handle, GLFWdropfun cbfun)$/;"	f	typeref:typename:GLFWAPI GLFWdropfun
glfwSetErrorCallback	src/init.c	/^GLFWAPI GLFWerrorfun glfwSetErrorCallback(GLFWerrorfun cbfun)$/;"	f	typeref:typename:GLFWAPI GLFWerrorfun
glfwSetFramebufferSizeCallback	src/window.c	/^GLFWAPI GLFWframebuffersizefun glfwSetFramebufferSizeCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWframebuffersizefun
glfwSetGamma	src/monitor.c	/^GLFWAPI void glfwSetGamma(GLFWmonitor* handle, float gamma)$/;"	f	typeref:typename:GLFWAPI void
glfwSetGammaRamp	src/monitor.c	/^GLFWAPI void glfwSetGammaRamp(GLFWmonitor* handle, const GLFWgammaramp* ramp)$/;"	f	typeref:typename:GLFWAPI void
glfwSetInputMode	src/input.c	/^GLFWAPI void glfwSetInputMode(GLFWwindow* handle, int mode, int value)$/;"	f	typeref:typename:GLFWAPI void
glfwSetJoystickCallback	src/input.c	/^GLFWAPI GLFWjoystickfun glfwSetJoystickCallback(GLFWjoystickfun cbfun)$/;"	f	typeref:typename:GLFWAPI GLFWjoystickfun
glfwSetJoystickUserPointer	src/input.c	/^GLFWAPI void glfwSetJoystickUserPointer(int jid, void* pointer)$/;"	f	typeref:typename:GLFWAPI void
glfwSetKeyCallback	src/input.c	/^GLFWAPI GLFWkeyfun glfwSetKeyCallback(GLFWwindow* handle, GLFWkeyfun cbfun)$/;"	f	typeref:typename:GLFWAPI GLFWkeyfun
glfwSetMonitorCallback	src/monitor.c	/^GLFWAPI GLFWmonitorfun glfwSetMonitorCallback(GLFWmonitorfun cbfun)$/;"	f	typeref:typename:GLFWAPI GLFWmonitorfun
glfwSetMonitorUserPointer	src/monitor.c	/^GLFWAPI void glfwSetMonitorUserPointer(GLFWmonitor* handle, void* pointer)$/;"	f	typeref:typename:GLFWAPI void
glfwSetMouseButtonCallback	src/input.c	/^GLFWAPI GLFWmousebuttonfun glfwSetMouseButtonCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWmousebuttonfun
glfwSetScrollCallback	src/input.c	/^GLFWAPI GLFWscrollfun glfwSetScrollCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWscrollfun
glfwSetTime	src/input.c	/^GLFWAPI void glfwSetTime(double time)$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowAspectRatio	src/window.c	/^GLFWAPI void glfwSetWindowAspectRatio(GLFWwindow* handle, int numer, int denom)$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowAttrib	src/window.c	/^GLFWAPI void glfwSetWindowAttrib(GLFWwindow* handle, int attrib, int value)$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowCloseCallback	src/window.c	/^GLFWAPI GLFWwindowclosefun glfwSetWindowCloseCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWwindowclosefun
glfwSetWindowContentScaleCallback	src/window.c	/^GLFWAPI GLFWwindowcontentscalefun glfwSetWindowContentScaleCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWwindowcontentscalefun
glfwSetWindowFocusCallback	src/window.c	/^GLFWAPI GLFWwindowfocusfun glfwSetWindowFocusCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWwindowfocusfun
glfwSetWindowIcon	src/window.c	/^GLFWAPI void glfwSetWindowIcon(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowIconifyCallback	src/window.c	/^GLFWAPI GLFWwindowiconifyfun glfwSetWindowIconifyCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWwindowiconifyfun
glfwSetWindowMaximizeCallback	src/window.c	/^GLFWAPI GLFWwindowmaximizefun glfwSetWindowMaximizeCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWwindowmaximizefun
glfwSetWindowMonitor	src/window.c	/^GLFWAPI void glfwSetWindowMonitor(GLFWwindow* wh,$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowOpacity	src/window.c	/^GLFWAPI void glfwSetWindowOpacity(GLFWwindow* handle, float opacity)$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowPos	src/window.c	/^GLFWAPI void glfwSetWindowPos(GLFWwindow* handle, int xpos, int ypos)$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowPosCallback	src/window.c	/^GLFWAPI GLFWwindowposfun glfwSetWindowPosCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWwindowposfun
glfwSetWindowRefreshCallback	src/window.c	/^GLFWAPI GLFWwindowrefreshfun glfwSetWindowRefreshCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWwindowrefreshfun
glfwSetWindowShouldClose	src/window.c	/^GLFWAPI void glfwSetWindowShouldClose(GLFWwindow* handle, int value)$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowSize	src/window.c	/^GLFWAPI void glfwSetWindowSize(GLFWwindow* handle, int width, int height)$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowSizeCallback	src/window.c	/^GLFWAPI GLFWwindowsizefun glfwSetWindowSizeCallback(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI GLFWwindowsizefun
glfwSetWindowSizeLimits	src/window.c	/^GLFWAPI void glfwSetWindowSizeLimits(GLFWwindow* handle,$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowTitle	src/window.c	/^GLFWAPI void glfwSetWindowTitle(GLFWwindow* handle, const char* title)$/;"	f	typeref:typename:GLFWAPI void
glfwSetWindowUserPointer	src/window.c	/^GLFWAPI void glfwSetWindowUserPointer(GLFWwindow* handle, void* pointer)$/;"	f	typeref:typename:GLFWAPI void
glfwSetX11SelectionString	src/x11_window.c	/^GLFWAPI void glfwSetX11SelectionString(const char* string)$/;"	f	typeref:typename:GLFWAPI void
glfwShowWindow	src/window.c	/^GLFWAPI void glfwShowWindow(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwSwapBuffers	src/context.c	/^GLFWAPI void glfwSwapBuffers(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI void
glfwSwapInterval	src/context.c	/^GLFWAPI void glfwSwapInterval(int interval)$/;"	f	typeref:typename:GLFWAPI void
glfwTerminate	src/init.c	/^GLFWAPI void glfwTerminate(void)$/;"	f	typeref:typename:GLFWAPI void
glfwUpdateGamepadMappings	src/input.c	/^GLFWAPI int glfwUpdateGamepadMappings(const char* string)$/;"	f	typeref:typename:GLFWAPI int
glfwVulkanSupported	src/vulkan.c	/^GLFWAPI int glfwVulkanSupported(void)$/;"	f	typeref:typename:GLFWAPI int
glfwWaitEvents	src/window.c	/^GLFWAPI void glfwWaitEvents(void)$/;"	f	typeref:typename:GLFWAPI void
glfwWaitEventsTimeout	src/window.c	/^GLFWAPI void glfwWaitEventsTimeout(double timeout)$/;"	f	typeref:typename:GLFWAPI void
glfwWindowHint	src/window.c	/^GLFWAPI void glfwWindowHint(int hint, int value)$/;"	f	typeref:typename:GLFWAPI void
glfwWindowHintString	src/window.c	/^GLFWAPI void glfwWindowHintString(int hint, const char* value)$/;"	f	typeref:typename:GLFWAPI void
glfwWindowShouldClose	src/window.c	/^GLFWAPI int glfwWindowShouldClose(GLFWwindow* handle)$/;"	f	typeref:typename:GLFWAPI int
glfw_PKG_DEPS	CMakeLists.txt	/^    set(glfw_PKG_DEPS "")$/;"	v
glfw_PKG_LIBS	CMakeLists.txt	/^    set(glfw_PKG_LIBS "-framework Cocoa -framework IOKit -framework CoreFoundation")$/;"	v
glfwhome	docs/header.html	/^		<a href="https:\/\/www.glfw.org\/" id="glfwhome">GLFW<\/a>$/;"	I
glfwinfo	tests/CMakeLists.txt	/^add_executable(glfwinfo glfwinfo.c ${GETOPT} ${GLAD_GL} ${GLAD_VULKAN})$/;"	t
global_alpha	deps/nuklear.h	/^    float global_alpha; \/* global alpha value *\/$/;"	m	struct:nk_convert_config	typeref:typename:float
glow_color	examples/particles.c	/^static float glow_color[4];$/;"	v	typeref:typename:float[4]	file:
glow_pos	examples/particles.c	/^static float glow_pos[4];$/;"	v	typeref:typename:float[4]	file:
glyf	deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
glyph_count	deps/nuklear.h	/^    int glyph_count;$/;"	m	struct:nk_font_atlas	typeref:typename:int
glyph_count	deps/nuklear.h	/^    nk_rune glyph_count;$/;"	m	struct:nk_baked_font	typeref:typename:nk_rune
glyph_offset	deps/nuklear.h	/^    nk_rune glyph_offset;$/;"	m	struct:nk_baked_font	typeref:typename:nk_rune
glyphs	deps/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font	typeref:struct:nk_font_glyph *
glyphs	deps/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_glyph *
gpu	tests/triangle-vulkan.c	/^    VkPhysicalDevice gpu;$/;"	m	struct:demo	typeref:typename:VkPhysicalDevice	file:
gpu_features	tests/triangle-vulkan.c	/^    VkPhysicalDeviceFeatures gpu_features;$/;"	m	struct:demo	typeref:typename:VkPhysicalDeviceFeatures	file:
gpu_props	tests/triangle-vulkan.c	/^    VkPhysicalDeviceProperties gpu_props;$/;"	m	struct:demo	typeref:typename:VkPhysicalDeviceProperties	file:
grab	deps/nuklear.h	/^    unsigned char grab;$/;"	m	struct:nk_mouse	typeref:typename:unsigned char
grabbed	deps/nuklear.h	/^    unsigned char grabbed;$/;"	m	struct:nk_mouse	typeref:typename:unsigned char
graphics_queue_node_index	tests/triangle-vulkan.c	/^    uint32_t graphics_queue_node_index;$/;"	m	struct:demo	typeref:typename:uint32_t	file:
green	include/GLFW/glfw3.h	/^    unsigned short* green;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned short *
greenBits	include/GLFW/glfw3.h	/^    int greenBits;$/;"	m	struct:GLFWvidmode	typeref:typename:int
greenBits	src/internal.h	/^    int         greenBits;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
group	src/x11_platform.h	/^        unsigned int group;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00208	typeref:typename:unsigned int
group_border	deps/nuklear.h	/^    float group_border;$/;"	m	struct:nk_style_window	typeref:typename:float
group_border_color	deps/nuklear.h	/^    struct nk_color group_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
group_padding	deps/nuklear.h	/^    struct nk_vec2 group_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
growClipboardString	src/wl_window.c	/^static GLFWbool growClipboardString(void)$/;"	f	typeref:typename:GLFWbool	file:
grow_factor	deps/nuklear.h	/^    float grow_factor;$/;"	m	struct:nk_buffer	typeref:typename:float
guid	deps/mingw/dinput.h	/^	GUID			guid;$/;"	m	struct:DIEFFECTINFOA	typeref:typename:GUID
guid	deps/mingw/dinput.h	/^	GUID			guid;$/;"	m	struct:DIEFFECTINFOW	typeref:typename:GUID
guid	src/internal.h	/^    char            guid[33];$/;"	m	struct:_GLFWjoystick	typeref:typename:char[33]
guid	src/internal.h	/^    char            guid[33];$/;"	m	struct:_GLFWmapping	typeref:typename:char[33]
guid	src/win32_joystick.h	/^    GUID                    guid;$/;"	m	struct:_GLFWjoystickWin32	typeref:typename:GUID
guidActionMap	deps/mingw/dinput.h	/^	GUID		guidActionMap;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:GUID
guidActionMap	deps/mingw/dinput.h	/^	GUID		guidActionMap;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:GUID
guidClass	deps/mingw/dinput.h	/^	GUID    guidClass;$/;"	m	struct:DIPROPGUIDANDPATH	typeref:typename:GUID
guidFFDriver	deps/mingw/dinput.h	/^    GUID	guidFFDriver;$/;"	m	struct:DIDEVICEINSTANCEA	typeref:typename:GUID
guidFFDriver	deps/mingw/dinput.h	/^    GUID	guidFFDriver;$/;"	m	struct:DIDEVICEINSTANCEW	typeref:typename:GUID
guidInstance	deps/mingw/dinput.h	/^	GUID		guidInstance;$/;"	m	struct:_DIACTIONA	typeref:typename:GUID
guidInstance	deps/mingw/dinput.h	/^	GUID		guidInstance;$/;"	m	struct:_DIACTIONW	typeref:typename:GUID
guidInstance	deps/mingw/dinput.h	/^    GUID	guidInstance;$/;"	m	struct:DIDEVICEINSTANCEA	typeref:typename:GUID
guidInstance	deps/mingw/dinput.h	/^    GUID	guidInstance;$/;"	m	struct:DIDEVICEINSTANCEW	typeref:typename:GUID
guidInstance	deps/mingw/dinput.h	/^    GUID    guidInstance;$/;"	m	struct:DIDEVICEINSTANCE_DX3A	typeref:typename:GUID
guidInstance	deps/mingw/dinput.h	/^    GUID    guidInstance;$/;"	m	struct:DIDEVICEINSTANCE_DX3W	typeref:typename:GUID
guidProduct	deps/mingw/dinput.h	/^    GUID	guidProduct;$/;"	m	struct:DIDEVICEINSTANCEA	typeref:typename:GUID
guidProduct	deps/mingw/dinput.h	/^    GUID	guidProduct;$/;"	m	struct:DIDEVICEINSTANCEW	typeref:typename:GUID
guidProduct	deps/mingw/dinput.h	/^    GUID    guidProduct;$/;"	m	struct:DIDEVICEINSTANCE_DX3A	typeref:typename:GUID
guidProduct	deps/mingw/dinput.h	/^    GUID    guidProduct;$/;"	m	struct:DIDEVICEINSTANCE_DX3W	typeref:typename:GUID
guidType	deps/mingw/dinput.h	/^    GUID	guidType;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:GUID
guidType	deps/mingw/dinput.h	/^    GUID	guidType;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:GUID
guidType	deps/mingw/dinput.h	/^    GUID    guidType;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A	typeref:typename:GUID
guidType	deps/mingw/dinput.h	/^    GUID    guidType;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W	typeref:typename:GUID
h	deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
h	deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
h	deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
h	deps/nuklear.h	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord
h	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle	typeref:typename:unsigned short
h	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled	typeref:typename:unsigned short
h	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_custom	typeref:typename:unsigned short
h	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image	typeref:typename:unsigned short
h	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
h	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled	typeref:typename:unsigned short
h	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:unsigned short
h	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor	typeref:typename:unsigned short
h	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text	typeref:typename:unsigned short
h	deps/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	typeref:typename:int
h	deps/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:unsigned short
h	deps/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
h	deps/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
h1	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
h2	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
h2.groupheader	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
h3	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
h4	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
h5	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
h6	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
hInstString	deps/mingw/dinput.h	/^	HINSTANCE	hInstString;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:HINSTANCE
hInstString	deps/mingw/dinput.h	/^	HINSTANCE	hInstString;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:HINSTANCE
hRgnBlur	src/win32_platform.h	/^    HRGN hRgnBlur;$/;"	m	struct:__anon622bd5890208	typeref:typename:HRGN
h_oversample	deps/nuklear.h	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range	typeref:typename:unsigned char
h_oversample	deps/nuklear.h	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context	typeref:typename:unsigned int
handle	deps/nuklear.h	/^    struct nk_user_font handle;$/;"	m	struct:nk_font	typeref:struct:nk_user_font
handle	deps/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:nk_handle
handle	src/egl_context.h	/^    void*           handle;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:void *
handle	src/egl_context.h	/^   EGLContext       handle;$/;"	m	struct:_GLFWcontextEGL	typeref:typename:EGLContext
handle	src/glx_context.h	/^    GLXContext      handle;$/;"	m	struct:_GLFWcontextGLX	typeref:typename:GLXContext
handle	src/glx_context.h	/^    void*           handle;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:void *
handle	src/internal.h	/^        void*           handle;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0908	typeref:typename:void *
handle	src/internal.h	/^    uintptr_t   handle;$/;"	m	struct:_GLFWfbconfig	typeref:typename:uintptr_t
handle	src/osmesa_context.h	/^    OSMesaContext       handle;$/;"	m	struct:_GLFWcontextOSMesa	typeref:typename:OSMesaContext
handle	src/osmesa_context.h	/^    void*           handle;$/;"	m	struct:_GLFWlibraryOSMesa	typeref:typename:void *
handle	src/posix_thread.h	/^    pthread_mutex_t handle;$/;"	m	struct:_GLFWmutexPOSIX	typeref:typename:pthread_mutex_t
handle	src/wgl_context.h	/^    HGLRC     handle;$/;"	m	struct:_GLFWcontextWGL	typeref:typename:HGLRC
handle	src/win32_platform.h	/^    HCURSOR             handle;$/;"	m	struct:_GLFWcursorWin32	typeref:typename:HCURSOR
handle	src/win32_platform.h	/^    HMONITOR            handle;$/;"	m	struct:_GLFWmonitorWin32	typeref:typename:HMONITOR
handle	src/win32_platform.h	/^    HWND                handle;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:HWND
handle	src/wl_platform.h	/^        void*                   handle;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:void *
handle	src/wl_platform.h	/^        void*                   handle;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590508	typeref:typename:void *
handle	src/wl_platform.h	/^        void*                   handle;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590608	typeref:typename:void *
handle	src/x11_platform.h	/^        void*       handle;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:void *
handle	src/x11_platform.h	/^        void*       handle;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00508	typeref:typename:void *
handle	src/x11_platform.h	/^        void*       handle;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00608	typeref:typename:void *
handle	src/x11_platform.h	/^        void*       handle;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00708	typeref:typename:void *
handle	src/x11_platform.h	/^        void*       handle;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00808	typeref:typename:void *
handle	src/x11_platform.h	/^        void*       handle;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00908	typeref:typename:void *
handle	src/x11_platform.h	/^        void*       handle;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00a08	typeref:typename:void *
handle	src/x11_platform.h	/^    Cursor handle;$/;"	m	struct:_GLFWcursorX11	typeref:typename:Cursor
handle	src/x11_platform.h	/^    Window          handle;$/;"	m	struct:_GLFWwindowX11	typeref:typename:Window
handleAbsEvent	src/linux_joystick.c	/^static void handleAbsEvent(_GLFWjoystick* js, int code, int value)$/;"	f	typeref:typename:void	file:
handleEvents	src/wl_window.c	/^static void handleEvents(int timeout)$/;"	f	typeref:typename:void	file:
handleKeyEvent	src/linux_joystick.c	/^static void handleKeyEvent(_GLFWjoystick* js, int code, int value)$/;"	f	typeref:typename:void	file:
handleSelectionClear	src/x11_window.c	/^static void handleSelectionClear(XEvent* event)$/;"	f	typeref:typename:void	file:
handleSelectionRequest	src/x11_window.c	/^static void handleSelectionRequest(XEvent* event)$/;"	f	typeref:typename:void	file:
handleType	deps/glad/vulkan.h	/^    VkExternalFenceHandleTypeFlagBits   handleType;$/;"	m	struct:VkPhysicalDeviceExternalFenceInfo	typeref:typename:VkExternalFenceHandleTypeFlagBits
handleType	deps/glad/vulkan.h	/^    VkExternalMemoryHandleTypeFlagBits   handleType;$/;"	m	struct:VkPhysicalDeviceExternalBufferInfo	typeref:typename:VkExternalMemoryHandleTypeFlagBits
handleType	deps/glad/vulkan.h	/^    VkExternalMemoryHandleTypeFlagBits   handleType;$/;"	m	struct:VkPhysicalDeviceExternalImageFormatInfo	typeref:typename:VkExternalMemoryHandleTypeFlagBits
handleType	deps/glad/vulkan.h	/^    VkExternalSemaphoreHandleTypeFlagBits   handleType;$/;"	m	struct:VkPhysicalDeviceExternalSemaphoreInfo	typeref:typename:VkExternalSemaphoreHandleTypeFlagBits
handleTypes	deps/glad/vulkan.h	/^    VkExternalFenceHandleTypeFlags   handleTypes;$/;"	m	struct:VkExportFenceCreateInfo	typeref:typename:VkExternalFenceHandleTypeFlags
handleTypes	deps/glad/vulkan.h	/^    VkExternalMemoryHandleTypeFlags   handleTypes;$/;"	m	struct:VkExportMemoryAllocateInfo	typeref:typename:VkExternalMemoryHandleTypeFlags
handleTypes	deps/glad/vulkan.h	/^    VkExternalMemoryHandleTypeFlags   handleTypes;$/;"	m	struct:VkExternalMemoryBufferCreateInfo	typeref:typename:VkExternalMemoryHandleTypeFlags
handleTypes	deps/glad/vulkan.h	/^    VkExternalMemoryHandleTypeFlags   handleTypes;$/;"	m	struct:VkExternalMemoryImageCreateInfo	typeref:typename:VkExternalMemoryHandleTypeFlags
handleTypes	deps/glad/vulkan.h	/^    VkExternalSemaphoreHandleTypeFlags   handleTypes;$/;"	m	struct:VkExportSemaphoreCreateInfo	typeref:typename:VkExternalSemaphoreHandleTypeFlags
hasMarkedText	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
hasPC	src/win32_platform.h	/^    GLFWbool            hasPC;$/;"	m	struct:_GLFWtimerWin32	typeref:typename:GLFWbool
hasUsableInputMethodStyle	src/x11_init.c	/^static GLFWbool hasUsableInputMethodStyle(void)$/;"	f	typeref:typename:GLFWbool	file:
has_arg	deps/getopt.h	/^  int has_arg;$/;"	m	struct:option	typeref:typename:int
has_preferred_x	deps/nuklear.h	/^    unsigned char has_preferred_x;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
has_scrolling	deps/nuklear.h	/^    unsigned int has_scrolling;$/;"	m	struct:nk_panel	typeref:typename:unsigned int
hatButtons	src/internal.h	/^    GLFWbool      hatButtons;$/;"	m	struct:_GLFWinitconfig	typeref:typename:GLFWbool
hatCount	src/internal.h	/^    int             hatCount;$/;"	m	struct:_GLFWjoystick	typeref:typename:int
hat_widget	tests/joysticks.c	/^static void hat_widget(struct nk_context* nk, unsigned char state)$/;"	f	typeref:typename:void	file:
hats	src/cocoa_joystick.h	/^    CFMutableArrayRef   hats;$/;"	m	struct:_GLFWjoystickNS	typeref:typename:CFMutableArrayRef
hats	src/internal.h	/^    unsigned char*  hats;$/;"	m	struct:_GLFWjoystick	typeref:typename:unsigned char *
hats	src/linux_joystick.h	/^    int                     hats[4][2];$/;"	m	struct:_GLFWjoystickLinux	typeref:typename:int[4][2]
head	deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
head	deps/nuklear.h	/^    struct nk_tt__hheap_chunk *head;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_tt__hheap_chunk *
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_custom	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_image	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_line	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_scissor	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_text	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command
header	deps/nuklear.h	/^    struct nk_rect header;$/;"	m	struct:nk_popup_state	typeref:struct:nk_rect
header	deps/nuklear.h	/^    struct nk_style_window_header header;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window_header
header_height	deps/nuklear.h	/^    float header_height;$/;"	m	struct:nk_panel	typeref:typename:float
heapIndex	deps/glad/vulkan.h	/^    uint32_t                 heapIndex;$/;"	m	struct:VkMemoryType	typeref:typename:uint32_t
height	deps/glad/vulkan.h	/^    float   height;$/;"	m	struct:VkViewport	typeref:typename:float
height	deps/glad/vulkan.h	/^    uint32_t                 height;$/;"	m	struct:VkFramebufferCreateInfo	typeref:typename:uint32_t
height	deps/glad/vulkan.h	/^    uint32_t          height;$/;"	m	struct:VkExtent2D	typeref:typename:uint32_t
height	deps/glad/vulkan.h	/^    uint32_t          height;$/;"	m	struct:VkExtent3D	typeref:typename:uint32_t
height	deps/nuklear.h	/^    float height;$/;"	m	struct:nk_baked_font	typeref:typename:float
height	deps/nuklear.h	/^    float height;$/;"	m	struct:nk_command_text	typeref:typename:float
height	deps/nuklear.h	/^    float height;$/;"	m	struct:nk_row_layout	typeref:typename:float
height	deps/nuklear.h	/^    float height;$/;"	m	struct:nk_user_font	typeref:typename:float
height	deps/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph	typeref:typename:float
height	deps/nuklear.h	/^    int   height;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int
height	deps/nuklear.h	/^    int height;$/;"	m	struct:nk_rp_context	typeref:typename:int
height	deps/nuklear.h	/^   float height; \/* height of line *\/$/;"	m	struct:nk_text_find	typeref:typename:float
height	deps/nuklear_glfw_gl2.h	/^    int width, height;$/;"	m	struct:nk_glfw	typeref:typename:int
height	examples/boing.c	/^int width, height;$/;"	v	typeref:typename:int
height	examples/splitview.c	/^static int width, height;$/;"	v	typeref:typename:int	file:
height	include/GLFW/glfw3.h	/^    int height;$/;"	m	struct:GLFWimage	typeref:typename:int
height	include/GLFW/glfw3.h	/^    int height;$/;"	m	struct:GLFWvidmode	typeref:typename:int
height	src/cocoa_platform.h	/^    int             width, height;$/;"	E	struct:_GLFWwindowNS
height	src/internal.h	/^    int           height;$/;"	m	struct:_GLFWwndconfig	typeref:typename:int
height	src/null_platform.h	/^    int height;$/;"	m	struct:_GLFWwindowNull	typeref:typename:int
height	src/osmesa_context.h	/^    int                 height;$/;"	m	struct:_GLFWcontextOSMesa	typeref:typename:int
height	src/wl_platform.h	/^    int                         width, height;$/;"	m	struct:_GLFWcursorWayland	typeref:typename:int
height	src/wl_platform.h	/^    int                         width, height;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:int
height	src/wl_platform.h	/^    uint32_t height;$/;"	m	struct:wl_cursor_image	typeref:typename:uint32_t
height	src/x11_platform.h	/^    int             width, height;$/;"	m	struct:_GLFWwindowX11	typeref:typename:int
height	tests/triangle-vulkan.c	/^    int width, height;$/;"	m	struct:demo	typeref:typename:int	file:
heightMM	src/internal.h	/^    int             widthMM, heightMM;$/;"	m	struct:_GLFWmonitor	typeref:typename:int
heightmap	examples/CMakeLists.txt	/^add_executable(heightmap WIN32 MACOSX_BUNDLE heightmap.c ${ICON} ${GLAD_GL})$/;"	t
helperWindowHandle	src/win32_platform.h	/^    HWND                helperWindowHandle;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:HWND
helperWindowHandle	src/x11_platform.h	/^    Window          helperWindowHandle;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Window
heuristic	deps/nuklear.h	/^    int heuristic;$/;"	m	struct:nk_rp_context	typeref:typename:int
hhea	deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
hiddenCursorHandle	src/x11_platform.h	/^    Cursor          hiddenCursorHandle;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Cursor
hideCursor	src/cocoa_window.m	/^static void hideCursor(_GLFWwindow* window)$/;"	f
highlight	deps/nuklear.h	/^    struct nk_color highlight;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_color
hinstance	src/win32_platform.h	/^    HINSTANCE                       hinstance;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR	typeref:typename:HINSTANCE
hints	src/internal.h	/^    } hints;$/;"	m	struct:_GLFWlibrary	typeref:struct:_GLFWlibrary::__anona0faa0af0708
hmtx	deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
hotspot_x	src/wl_platform.h	/^    uint32_t hotspot_x;$/;"	m	struct:wl_cursor_image	typeref:typename:uint32_t
hotspot_y	src/wl_platform.h	/^    uint32_t hotspot_y;$/;"	m	struct:wl_cursor_image	typeref:typename:uint32_t
hover	deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_item
hover	deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_item
hover	deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_item
hover	deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
hover	deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_item
hover	deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
hover	deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
hover	deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
hover	deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
hover	deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_item
hover_active	deps/nuklear.h	/^    struct nk_style_item hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
hovered	src/wl_platform.h	/^    GLFWbool                    hovered;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:GLFWbool
hr	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
html	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
hwnd	deps/mingw/dinput.h	/^	HWND			hwnd;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA	typeref:typename:HWND
hwnd	deps/mingw/dinput.h	/^	HWND			hwnd;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW	typeref:typename:HWND
hwnd	src/win32_platform.h	/^    HWND                            hwnd;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR	typeref:typename:HWND
i	deps/nuklear.h	/^    int i;$/;"	m	union:nk_property	typeref:typename:int
i	deps/nuklear.h	/^    union {const nk_uint *i; const nk_byte *b;} conv = {0};$/;"	m	union:nk_murmur_hash::__anonca785108080a	typeref:typename:const nk_uint *
i	deps/nuklear.h	/^    union {nk_uint i; float f;} conv = {0};$/;"	m	union:nk_inv_sqrt::__anonca785108070a	typeref:typename:nk_uint
ic	src/x11_platform.h	/^    XIC             ic;$/;"	m	struct:_GLFWwindowX11	typeref:typename:XIC
icon	src/x11_window.c	/^        Window icon;$/;"	m	struct:getWindowState::__anon51ee5e7e0108	typeref:typename:Window	file:
icon	tests/CMakeLists.txt	/^add_executable(icon WIN32 MACOSX_BUNDLE icon.c ${GLAD_GL})$/;"	t
icon_colors	tests/icon.c	/^const unsigned char icon_colors[5][4] =$/;"	v	typeref:typename:const unsigned char[5][4]
iconified	src/win32_platform.h	/^    GLFWbool            iconified;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:GLFWbool
iconified	src/x11_platform.h	/^    GLFWbool        iconified;$/;"	m	struct:_GLFWwindowX11	typeref:typename:GLFWbool
iconify	src/internal.h	/^        GLFWwindowiconifyfun    iconify;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWwindowiconifyfun
iconify	tests/CMakeLists.txt	/^add_executable(iconify iconify.c ${GETOPT} ${GLAD_GL})$/;"	t
id	deps/nuklear.h	/^    int id;$/;"	m	struct:nk_rp_rect	typeref:typename:int
id	deps/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anonca785108020a	typeref:typename:int
id	src/cocoa_platform.h	/^typedef void* id;$/;"	t
id	tests/threads.c	/^    thrd_t id;$/;"	m	struct:__anon6fa524230108	typeref:typename:thrd_t	file:
idleInhibitManager	src/wl_platform.h	/^    struct zwp_idle_inhibit_manager_v1*     idleInhibitManager;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:zwp_idle_inhibit_manager_v1 *
idleInhibitor	src/wl_platform.h	/^    struct zwp_idle_inhibitor_v1*          idleInhibitor;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:zwp_idle_inhibitor_v1 *
im	src/x11_platform.h	/^    XIM             im;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:XIM
image	deps/glad/vulkan.h	/^    VkImage                                                                image;$/;"	m	struct:VkImageMemoryRequirementsInfo2	typeref:typename:VkImage
image	deps/glad/vulkan.h	/^    VkImage                                                                image;$/;"	m	struct:VkImageSparseMemoryRequirementsInfo2	typeref:typename:VkImage
image	deps/glad/vulkan.h	/^    VkImage                            image;$/;"	m	struct:VkBindImageMemoryInfo	typeref:typename:VkImage
image	deps/glad/vulkan.h	/^    VkImage                  image;$/;"	m	struct:VkImageMemoryBarrier	typeref:typename:VkImage
image	deps/glad/vulkan.h	/^    VkImage                  image;$/;"	m	struct:VkImageViewCreateInfo	typeref:typename:VkImage
image	deps/glad/vulkan.h	/^    VkImage            image;$/;"	m	struct:VkMemoryDedicatedAllocateInfo	typeref:typename:VkImage
image	deps/glad/vulkan.h	/^    VkImage   image;$/;"	m	struct:VkSparseImageMemoryBindInfo	typeref:typename:VkImage
image	deps/glad/vulkan.h	/^    VkImage   image;$/;"	m	struct:VkSparseImageOpaqueMemoryBindInfo	typeref:typename:VkImage
image	deps/nuklear.h	/^    struct nk_image image;$/;"	m	union:nk_style_item_data	typeref:struct:nk_image
image	tests/triangle-vulkan.c	/^        VkImage image;$/;"	m	struct:demo::__anondab0972c0208	typeref:typename:VkImage	file:
image	tests/triangle-vulkan.c	/^    VkImage image;$/;"	m	struct:__anondab0972c0108	typeref:typename:VkImage	file:
image	tests/triangle-vulkan.c	/^    VkImage image;$/;"	m	struct:texture_object	typeref:typename:VkImage	file:
imageArrayLayers	deps/glad/vulkan.h	/^    uint32_t                           imageArrayLayers;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:uint32_t
imageBindCount	deps/glad/vulkan.h	/^    uint32_t                 imageBindCount;$/;"	m	struct:VkBindSparseInfo	typeref:typename:uint32_t
imageColorSpace	deps/glad/vulkan.h	/^    VkColorSpaceKHR                    imageColorSpace;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkColorSpaceKHR
imageCubeArray	deps/glad/vulkan.h	/^    VkBool32                 imageCubeArray;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
imageExtent	deps/glad/vulkan.h	/^    VkExtent2D                         imageExtent;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkExtent2D
imageExtent	deps/glad/vulkan.h	/^    VkExtent3D               imageExtent;$/;"	m	struct:VkBufferImageCopy	typeref:typename:VkExtent3D
imageFormat	deps/glad/vulkan.h	/^    VkFormat                           imageFormat;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkFormat
imageFormatProperties	deps/glad/vulkan.h	/^    VkImageFormatProperties            imageFormatProperties;$/;"	m	struct:VkImageFormatProperties2	typeref:typename:VkImageFormatProperties
imageGranularity	deps/glad/vulkan.h	/^    VkExtent3D               imageGranularity;$/;"	m	struct:VkSparseImageFormatProperties	typeref:typename:VkExtent3D
imageIndex	deps/glad/vulkan.h	/^    uint32_t                           imageIndex;$/;"	m	struct:VkBindImageMemorySwapchainInfoKHR	typeref:typename:uint32_t
imageLayout	deps/glad/vulkan.h	/^    VkImageLayout     imageLayout;$/;"	m	struct:VkDescriptorImageInfo	typeref:typename:VkImageLayout
imageLayout	tests/triangle-vulkan.c	/^    VkImageLayout imageLayout;$/;"	m	struct:texture_object	typeref:typename:VkImageLayout	file:
imageMipTailFirstLod	deps/glad/vulkan.h	/^    uint32_t                 imageMipTailFirstLod;$/;"	m	struct:VkSparseImageMemoryRequirements	typeref:typename:uint32_t
imageMipTailOffset	deps/glad/vulkan.h	/^    VkDeviceSize             imageMipTailOffset;$/;"	m	struct:VkSparseImageMemoryRequirements	typeref:typename:VkDeviceSize
imageMipTailSize	deps/glad/vulkan.h	/^    VkDeviceSize             imageMipTailSize;$/;"	m	struct:VkSparseImageMemoryRequirements	typeref:typename:VkDeviceSize
imageMipTailStride	deps/glad/vulkan.h	/^    VkDeviceSize             imageMipTailStride;$/;"	m	struct:VkSparseImageMemoryRequirements	typeref:typename:VkDeviceSize
imageOffset	deps/glad/vulkan.h	/^    VkOffset3D               imageOffset;$/;"	m	struct:VkBufferImageCopy	typeref:typename:VkOffset3D
imageOpaqueBindCount	deps/glad/vulkan.h	/^    uint32_t                 imageOpaqueBindCount;$/;"	m	struct:VkBindSparseInfo	typeref:typename:uint32_t
imageSharingMode	deps/glad/vulkan.h	/^    VkSharingMode                      imageSharingMode;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkSharingMode
imageSubresource	deps/glad/vulkan.h	/^    VkImageSubresourceLayers   imageSubresource;$/;"	m	struct:VkBufferImageCopy	typeref:typename:VkImageSubresourceLayers
imageType	deps/glad/vulkan.h	/^    VkImageType              imageType;$/;"	m	struct:VkImageCreateInfo	typeref:typename:VkImageType
imageUsage	deps/glad/vulkan.h	/^    VkImageUsageFlags                  imageUsage;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkImageUsageFlags
imageView	deps/glad/vulkan.h	/^    VkImageView       imageView;$/;"	m	struct:VkDescriptorImageInfo	typeref:typename:VkImageView
image_count	src/wl_platform.h	/^    unsigned int image_count;$/;"	m	struct:wl_cursor	typeref:typename:unsigned int
image_get_buffer	src/wl_platform.h	/^        PFN_wl_cursor_image_get_buffer image_get_buffer;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590508	typeref:typename:PFN_wl_cursor_image_get_buffer
image_padding	deps/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_vec2
image_padding	deps/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_vec2
images	src/wl_platform.h	/^    struct wl_cursor_image** images;$/;"	m	struct:wl_cursor	typeref:struct:wl_cursor_image **
img	deps/nuklear.h	/^    struct nk_image img;$/;"	m	struct:nk_command_image	typeref:struct:nk_image
img	deps/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_image
implementationVersion	deps/glad/vulkan.h	/^    uint32_t          implementationVersion;$/;"	m	struct:VkLayerProperties	typeref:typename:uint32_t
inc_button	deps/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_button
inc_button	deps/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_button
inc_button	deps/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_button
inc_symbol	deps/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_symbol_type
inc_symbol	deps/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_symbol_type
incrementCursorImage	src/wl_window.c	/^static void incrementCursorImage(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
indent	deps/nuklear.h	/^    float indent;$/;"	m	struct:nk_style_tab	typeref:typename:float
independentBlend	deps/glad/vulkan.h	/^    VkBool32                 independentBlend;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
index	deps/nuklear.h	/^    int index;$/;"	m	struct:nk_chart_slot	typeref:typename:int
index	deps/nuklear.h	/^    int index;$/;"	m	struct:nk_row_layout	typeref:typename:int
index	src/cocoa_joystick.m	/^    int             index;$/;"	E	struct:_GLFWjoyelementNS
index	src/internal.h	/^    uint8_t         index;$/;"	m	struct:_GLFWmapelement	typeref:typename:uint8_t
index	src/win32_joystick.h	/^    DWORD                   index;$/;"	m	struct:_GLFWjoystickWin32	typeref:typename:DWORD
index	src/win32_platform.h	/^    DWORD               index;$/;"	m	struct:_GLFWtlsWin32	typeref:typename:DWORD
index	src/x11_platform.h	/^    int             index;$/;"	m	struct:_GLFWmonitorX11	typeref:typename:int
indexCount	deps/glad/vulkan.h	/^    uint32_t                         indexCount;$/;"	m	struct:VkDrawIndexedIndirectCommand	typeref:typename:uint32_t
indexToLocFormat	deps/nuklear.h	/^    int indexToLocFormat; \/* format needed to map from glyph index to glyph *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
index_map	deps/nuklear.h	/^    int index_map; \/* a cmap mapping for our chosen character encoding *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
info	deps/nuklear.h	/^    struct nk_baked_font info;$/;"	m	struct:nk_font	typeref:struct:nk_baked_font
info	deps/nuklear.h	/^    struct nk_tt_fontinfo info;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_tt_fontinfo
inheritedQueries	deps/glad/vulkan.h	/^    VkBool32                 inheritedQueries;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
init	examples/boing.c	/^void init( void )$/;"	f	typeref:typename:void
init	examples/gears.c	/^static void init(void)$/;"	f	typeref:typename:void	file:
init	src/internal.h	/^        _GLFWinitconfig init;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0708	typeref:typename:_GLFWinitconfig
initExtensions	src/x11_init.c	/^static GLFWbool initExtensions(void)$/;"	f	typeref:typename:GLFWbool	file:
initWithGlfwWindow:	src/cocoa_window.m	/^- (instancetype)initWithGlfwWindow:(_GLFWwindow *)initWindow;$/;"	m	interface:GLFWContentView
initWithGlfwWindow:	src/cocoa_window.m	/^- (instancetype)initWithGlfwWindow:(_GLFWwindow *)initWindow;$/;"	m	interface:GLFWWindowDelegate
initWithGlfwWindow:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
initWithGlfwWindow:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWWindowDelegate
init_grid	examples/wave.c	/^void init_grid(void)$/;"	f	typeref:typename:void
init_map	examples/heightmap.c	/^static void init_map(void)$/;"	f	typeref:typename:void	file:
init_mode	deps/nuklear.h	/^    int init_mode;$/;"	m	struct:nk_rp_context	typeref:typename:int
init_opengl	examples/wave.c	/^void init_opengl(void)$/;"	f	typeref:typename:void
init_particle	examples/particles.c	/^static void init_particle(PARTICLE *p, double t)$/;"	f	typeref:typename:void	file:
init_vertices	examples/wave.c	/^void init_vertices(void)$/;"	f	typeref:typename:void
initialDataSize	deps/glad/vulkan.h	/^    size_t                   initialDataSize;$/;"	m	struct:VkPipelineCacheCreateInfo	typeref:typename:size_t
initialLayout	deps/glad/vulkan.h	/^    VkImageLayout            initialLayout;$/;"	m	struct:VkAttachmentDescription	typeref:typename:VkImageLayout
initialLayout	deps/glad/vulkan.h	/^    VkImageLayout            initialLayout;$/;"	m	struct:VkImageCreateInfo	typeref:typename:VkImageLayout
initializeTIS	src/cocoa_init.m	/^static GLFWbool initializeTIS(void)$/;"	f
initialized	deps/nuklear.h	/^    unsigned char initialized;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
initialized	src/internal.h	/^    GLFWbool            initialized;$/;"	m	struct:_GLFWlibrary	typeref:typename:GLFWbool
inkscape	docs/spaces.svg	/^   sodipodi:docname="spaces.svg">$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
inline	deps/linmath.h	/^#define inline /;"	d
inotify	src/linux_joystick.h	/^    int                     inotify;$/;"	m	struct:_GLFWlibraryLinux	typeref:typename:int
input	deps/nuklear.h	/^    struct nk_input input;$/;"	m	struct:nk_context	typeref:struct:nk_input
inputAttachmentCount	deps/glad/vulkan.h	/^    uint32_t                 inputAttachmentCount;$/;"	m	struct:VkSubpassDescription	typeref:typename:uint32_t
inputAttachmentIndex	deps/glad/vulkan.h	/^    uint32_t                          inputAttachmentIndex;$/;"	m	struct:VkInputAttachmentAspectReference	typeref:typename:uint32_t
inputChar	src/wl_init.c	/^static GLFWbool inputChar(_GLFWwindow* window, uint32_t key)$/;"	f	typeref:typename:GLFWbool	file:
inputRate	deps/glad/vulkan.h	/^    VkVertexInputRate        inputRate;$/;"	m	struct:VkVertexInputBindingDescription	typeref:typename:VkVertexInputRate
input_mode	src/x11_window.c	/^        long input_mode;$/;"	m	struct:_glfwPlatformSetWindowDecorated::__anon51ee5e7e0208	typeref:typename:long	file:
inputlag	tests/CMakeLists.txt	/^add_executable(inputlag WIN32 MACOSX_BUNDLE inputlag.c ${GETOPT} ${GLAD_GL})$/;"	t
insertText:replacementRange:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
insert_length	deps/nuklear.h	/^   short insert_length;$/;"	m	struct:nk_text_undo_record	typeref:typename:short
inst	tests/triangle-vulkan.c	/^    VkInstance inst;$/;"	m	struct:demo	typeref:typename:VkInstance	file:
instance	src/wgl_context.h	/^    HINSTANCE                           instance;$/;"	m	struct:_GLFWlibraryWGL	typeref:typename:HINSTANCE
instance	src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890508	typeref:typename:HINSTANCE
instance	src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890608	typeref:typename:HINSTANCE
instance	src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890708	typeref:typename:HINSTANCE
instance	src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890808	typeref:typename:HINSTANCE
instance	src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890908	typeref:typename:HINSTANCE
instance	src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890a08	typeref:typename:HINSTANCE
instance	src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon622bd5890b08	typeref:typename:HINSTANCE
instanceCount	deps/glad/vulkan.h	/^    uint32_t                         instanceCount;$/;"	m	struct:VkDrawIndexedIndirectCommand	typeref:typename:uint32_t
instanceCount	deps/glad/vulkan.h	/^    uint32_t                         instanceCount;$/;"	m	struct:VkDrawIndirectCommand	typeref:typename:uint32_t
instanceName	src/internal.h	/^        char      instanceName[256];$/;"	m	struct:_GLFWwndconfig::__anona0faa0af0308	typeref:typename:char[256]
int16_t	deps/glad/vk_platform.h	/^        typedef signed   __int16 int16_t;$/;"	t	typeref:typename:signed __int16
int16_t	deps/vs2008/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t	typeref:typename:signed __int16
int16_t	deps/vs2008/stdint.h	/^   typedef signed short      int16_t;$/;"	t	typeref:typename:signed short
int32	deps/glad/vulkan.h	/^    int32_t                  int32 [4];$/;"	m	union:VkClearColorValue	typeref:typename:int32_t[4]
int32_t	deps/glad/vk_platform.h	/^        typedef signed   __int32 int32_t;$/;"	t	typeref:typename:signed __int32
int32_t	deps/vs2008/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t	typeref:typename:signed __int32
int32_t	deps/vs2008/stdint.h	/^   typedef signed int        int32_t;$/;"	t	typeref:typename:signed int
int64_t	deps/glad/vk_platform.h	/^        typedef signed   __int64 int64_t;$/;"	t	typeref:typename:signed __int64
int64_t	deps/vs2008/stdint.h	/^typedef signed __int64       int64_t;$/;"	t	typeref:typename:signed __int64
int8_t	deps/glad/vk_platform.h	/^        typedef signed   __int8  int8_t;$/;"	t	typeref:typename:signed __int8
int8_t	deps/vs2008/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t	typeref:typename:signed __int8
int8_t	deps/vs2008/stdint.h	/^   typedef signed char       int8_t;$/;"	t	typeref:typename:signed char
int_fast16_t	deps/vs2008/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t	typeref:typename:int16_t
int_fast32_t	deps/vs2008/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t	typeref:typename:int32_t
int_fast64_t	deps/vs2008/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t	typeref:typename:int64_t
int_fast8_t	deps/vs2008/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t	typeref:typename:int8_t
int_least16_t	deps/vs2008/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t	typeref:typename:int16_t
int_least32_t	deps/vs2008/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t	typeref:typename:int32_t
int_least64_t	deps/vs2008/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t	typeref:typename:int64_t
int_least8_t	deps/vs2008/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t	typeref:typename:int8_t
interval	src/wgl_context.h	/^    int       interval;$/;"	m	struct:_GLFWcontextWGL	typeref:typename:int
interval	src/x11_platform.h	/^        int         interval;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00308	typeref:typename:int
intmax_t	deps/vs2008/stdint.h	/^typedef int64_t   intmax_t;$/;"	t	typeref:typename:int64_t
intptr_t	deps/vs2008/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t	typeref:typename:_W64 signed int
intptr_t	deps/vs2008/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t	typeref:typename:signed __int64
invert	deps/nuklear.h	/^    int invert;$/;"	m	struct:nk_tt__edge	typeref:typename:int
isBitSet	src/linux_joystick.c	/^#define isBitSet(/;"	d	file:
isFrameExtentsEvent	src/x11_window.c	/^static Bool isFrameExtentsEvent(Display* display, XEvent* event, XPointer pointer)$/;"	f	typeref:typename:Bool	file:
isOpaque	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
isPointerLocked	src/wl_window.c	/^static GLFWbool isPointerLocked(_GLFWwindow* window)$/;"	f	typeref:typename:GLFWbool	file:
isSelPropNewValueNotify	src/x11_window.c	/^static Bool isSelPropNewValueNotify(Display* display, XEvent* event, XPointer pointer)$/;"	f	typeref:typename:Bool	file:
isSelectionEvent	src/x11_window.c	/^static Bool isSelectionEvent(Display* display, XEvent* event, XPointer pointer)$/;"	f	typeref:typename:Bool	file:
isValidElementForJoystick	src/input.c	/^static GLFWbool isValidElementForJoystick(const _GLFWmapelement* e,$/;"	f	typeref:typename:GLFWbool	file:
is_double_click_down	deps/nuklear_glfw_gl2.h	/^    int is_double_click_down;$/;"	m	struct:nk_glfw	typeref:typename:int
item	deps/nuklear.h	/^    struct nk_rect item;$/;"	m	struct:nk_row_layout	typeref:struct:nk_rect
item_height	deps/nuklear.h	/^    float item_height;$/;"	m	struct:nk_row_layout	typeref:typename:float
item_offset	deps/nuklear.h	/^    float item_offset;$/;"	m	struct:nk_row_layout	typeref:typename:float
item_width	deps/nuklear.h	/^    float item_width;$/;"	m	struct:nk_row_layout	typeref:typename:float
joystick	src/internal.h	/^        GLFWjoystickfun joystick;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0a08	typeref:typename:GLFWjoystickfun
joystick_callback	tests/events.c	/^static void joystick_callback(int jid, int event)$/;"	f	typeref:typename:void	file:
joystick_callback	tests/joysticks.c	/^static void joystick_callback(int jid, int event)$/;"	f	typeref:typename:void	file:
joystick_count	tests/joysticks.c	/^static int joystick_count = 0;$/;"	v	typeref:typename:int	file:
joystick_label	tests/joysticks.c	/^static const char* joystick_label(int jid)$/;"	f	typeref:typename:const char *	file:
joysticks	src/internal.h	/^    _GLFWjoystick       joysticks[GLFW_JOYSTICK_LAST + 1];$/;"	m	struct:_GLFWlibrary	typeref:typename:_GLFWjoystick[]
joysticks	tests/CMakeLists.txt	/^add_executable(joysticks WIN32 MACOSX_BUNDLE joysticks.c ${GLAD_GL})$/;"	t
joysticks	tests/joysticks.c	/^static int joysticks[GLFW_JOYSTICK_LAST + 1];$/;"	v	typeref:typename:int[]	file:
kPropertyUnicodeKeyLayoutData	src/cocoa_platform.h	/^        CFStringRef     kPropertyUnicodeKeyLayoutData;$/;"	E
kTISPropertyUnicodeKeyLayoutData	src/cocoa_platform.h	/^#define kTISPropertyUnicodeKeyLayoutData _glfw.ns.tis.kPropertyUnicodeKeyLayoutData$/;"	M
kern	deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
key	examples/gears.c	/^void key( GLFWwindow* window, int k, int s, int action, int mods )$/;"	f	typeref:typename:void
key	src/internal.h	/^        GLFWkeyfun              key;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWkeyfun
key	src/posix_thread.h	/^    pthread_key_t   key;$/;"	m	struct:_GLFWtlsPOSIX	typeref:typename:pthread_key_t
keyDown:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
keyMap	src/linux_joystick.h	/^    int                     keyMap[KEY_CNT - BTN_MISC];$/;"	m	struct:_GLFWjoystickLinux	typeref:typename:int[]
keyUp:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
key_callback	examples/boing.c	/^void key_callback( GLFWwindow* window, int key, int scancode, int action, int mods )$/;"	f	typeref:typename:void
key_callback	examples/heightmap.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	examples/particles.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	examples/sharing.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	examples/splitview.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	examples/triangle-opengl.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	examples/wave.c	/^void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void
key_callback	tests/clipboard.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/cursor.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/empty.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/events.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/gamma.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/icon.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/iconify.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/inputlag.c	/^void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void
key_callback	tests/monitors.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/msaa.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/reopen.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/tearing.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/threads.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/timeout.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
key_callback	tests/windows.c	/^static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f	typeref:typename:void	file:
keyboard	deps/nuklear.h	/^    struct nk_keyboard keyboard;$/;"	m	struct:nk_input	typeref:struct:nk_keyboard
keyboard	src/wl_platform.h	/^    struct wl_keyboard*         keyboard;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_keyboard *
keyboardFocus	src/wl_platform.h	/^    _GLFWwindow*                keyboardFocus;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:_GLFWwindow *
keyboardHandleEnter	src/wl_init.c	/^static void keyboardHandleEnter(void* data,$/;"	f	typeref:typename:void	file:
keyboardHandleKey	src/wl_init.c	/^static void keyboardHandleKey(void* data,$/;"	f	typeref:typename:void	file:
keyboardHandleKeymap	src/wl_init.c	/^static void keyboardHandleKeymap(void* data,$/;"	f	typeref:typename:void	file:
keyboardHandleLeave	src/wl_init.c	/^static void keyboardHandleLeave(void* data,$/;"	f	typeref:typename:void	file:
keyboardHandleModifiers	src/wl_init.c	/^static void keyboardHandleModifiers(void* data,$/;"	f	typeref:typename:void	file:
keyboardHandleRepeatInfo	src/wl_init.c	/^static void keyboardHandleRepeatInfo(void* data,$/;"	f	typeref:typename:void	file:
keyboardLastKey	src/wl_platform.h	/^    int                         keyboardLastKey;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:int
keyboardLastScancode	src/wl_platform.h	/^    int                         keyboardLastScancode;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:int
keyboardListener	src/wl_init.c	/^static const struct wl_keyboard_listener keyboardListener = {$/;"	v	typeref:typename:const struct wl_keyboard_listener	file:
keyboardRepeatDelay	src/wl_platform.h	/^    int32_t                     keyboardRepeatDelay;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:int32_t
keyboardRepeatRate	src/wl_platform.h	/^    int32_t                     keyboardRepeatRate;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:int32_t
keycodes	src/win32_platform.h	/^    short int           keycodes[512];$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:short int[512]
keycodes	src/wl_platform.h	/^    short int                   keycodes[256];$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:short int[256]
keycodes	src/x11_platform.h	/^    short int       keycodes[256];$/;"	m	struct:_GLFWlibraryX11	typeref:typename:short int[256]
keymap	src/wl_platform.h	/^        struct xkb_keymap*      keymap;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:struct:xkb_keymap *
keymap_key_repeats	src/wl_platform.h	/^        PFN_xkb_keymap_key_repeats keymap_key_repeats;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_keymap_key_repeats
keymap_mod_get_index	src/wl_platform.h	/^        PFN_xkb_keymap_mod_get_index keymap_mod_get_index;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_keymap_mod_get_index
keymap_new_from_string	src/wl_platform.h	/^        PFN_xkb_keymap_new_from_string keymap_new_from_string;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_keymap_new_from_string
keymap_unref	src/wl_platform.h	/^        PFN_xkb_keymap_unref keymap_unref;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_keymap_unref
keymenu	src/internal.h	/^        GLFWbool  keymenu;$/;"	m	struct:_GLFWwndconfig::__anona0faa0af0408	typeref:typename:GLFWbool
keymenu	src/win32_platform.h	/^    GLFWbool            keymenu;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:GLFWbool
keynames	src/win32_platform.h	/^    char                keynames[GLFW_KEY_LAST + 1][5];$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:char[][5]
keynames	src/x11_platform.h	/^    char            keynames[GLFW_KEY_LAST + 1][5];$/;"	m	struct:_GLFWlibraryX11	typeref:typename:char[][5]
keys	deps/nuklear.h	/^    nk_hash keys[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table	typeref:typename:nk_hash[]
keys	deps/nuklear.h	/^    struct nk_key keys[NK_KEY_MAX];$/;"	m	struct:nk_keyboard	typeref:struct:nk_key[]
keys	src/internal.h	/^    char                keys[GLFW_KEY_LAST + 1];$/;"	m	struct:_GLFWwindow	typeref:typename:char[]
keysym	src/xkb_unicode.c	/^  unsigned short keysym;$/;"	m	struct:codepair	typeref:typename:unsigned short	file:
keysymtab	src/xkb_unicode.c	/^} keysymtab[] = {$/;"	v	typeref:typename:const struct codepair[]
khronos_boolean_enum_t	deps/glad/khrplatform.h	/^} khronos_boolean_enum_t;$/;"	t	typeref:enum:__anon079e76470103
khronos_float_t	deps/glad/khrplatform.h	/^typedef          float         khronos_float_t;$/;"	t	typeref:typename:float
khronos_int16_t	deps/glad/khrplatform.h	/^typedef signed   short int     khronos_int16_t;$/;"	t	typeref:typename:signed short int
khronos_int32_t	deps/glad/khrplatform.h	/^typedef __int32                 khronos_int32_t;$/;"	t	typeref:typename:__int32
khronos_int32_t	deps/glad/khrplatform.h	/^typedef int                     khronos_int32_t;$/;"	t	typeref:typename:int
khronos_int32_t	deps/glad/khrplatform.h	/^typedef int32_t                 khronos_int32_t;$/;"	t	typeref:typename:int32_t
khronos_int64_t	deps/glad/khrplatform.h	/^typedef __int64                 khronos_int64_t;$/;"	t	typeref:typename:__int64
khronos_int64_t	deps/glad/khrplatform.h	/^typedef int64_t                 khronos_int64_t;$/;"	t	typeref:typename:int64_t
khronos_int64_t	deps/glad/khrplatform.h	/^typedef long int                khronos_int64_t;$/;"	t	typeref:typename:long int
khronos_int64_t	deps/glad/khrplatform.h	/^typedef long long int           khronos_int64_t;$/;"	t	typeref:typename:long long int
khronos_int8_t	deps/glad/khrplatform.h	/^typedef signed   char          khronos_int8_t;$/;"	t	typeref:typename:signed char
khronos_intptr_t	deps/glad/khrplatform.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	t	typeref:typename:signed long int
khronos_intptr_t	deps/glad/khrplatform.h	/^typedef signed   long long int khronos_intptr_t;$/;"	t	typeref:typename:signed long long int
khronos_ssize_t	deps/glad/khrplatform.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	t	typeref:typename:signed long int
khronos_ssize_t	deps/glad/khrplatform.h	/^typedef signed   long long int khronos_ssize_t;$/;"	t	typeref:typename:signed long long int
khronos_stime_nanoseconds_t	deps/glad/khrplatform.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	t	typeref:typename:khronos_int64_t
khronos_uint16_t	deps/glad/khrplatform.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	t	typeref:typename:unsigned short int
khronos_uint32_t	deps/glad/khrplatform.h	/^typedef uint32_t                khronos_uint32_t;$/;"	t	typeref:typename:uint32_t
khronos_uint32_t	deps/glad/khrplatform.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	t	typeref:typename:unsigned __int32
khronos_uint32_t	deps/glad/khrplatform.h	/^typedef unsigned int            khronos_uint32_t;$/;"	t	typeref:typename:unsigned int
khronos_uint64_t	deps/glad/khrplatform.h	/^typedef uint64_t                khronos_uint64_t;$/;"	t	typeref:typename:uint64_t
khronos_uint64_t	deps/glad/khrplatform.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	t	typeref:typename:unsigned __int64
khronos_uint64_t	deps/glad/khrplatform.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	t	typeref:typename:unsigned long int
khronos_uint64_t	deps/glad/khrplatform.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	t	typeref:typename:unsigned long long int
khronos_uint8_t	deps/glad/khrplatform.h	/^typedef unsigned char          khronos_uint8_t;$/;"	t	typeref:typename:unsigned char
khronos_uintptr_t	deps/glad/khrplatform.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	t	typeref:typename:unsigned long int
khronos_uintptr_t	deps/glad/khrplatform.h	/^typedef unsigned long long int khronos_uintptr_t;$/;"	t	typeref:typename:unsigned long long int
khronos_usize_t	deps/glad/khrplatform.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	t	typeref:typename:unsigned long int
khronos_usize_t	deps/glad/khrplatform.h	/^typedef unsigned long long int khronos_usize_t;$/;"	t	typeref:typename:unsigned long long int
khronos_utime_nanoseconds_t	deps/glad/khrplatform.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	t	typeref:typename:khronos_uint64_t
kind	deps/nuklear.h	/^    enum nk_property_kind kind;$/;"	m	struct:nk_property_variant	typeref:enum:nk_property_kind
lARx	deps/mingw/dinput.h	/^	LONG	lARx;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lARy	deps/mingw/dinput.h	/^	LONG	lARy;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lARz	deps/mingw/dinput.h	/^	LONG	lARz;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lAX	deps/mingw/dinput.h	/^	LONG	lAX;		\/* 'a' as in acceleration *\/$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lAY	deps/mingw/dinput.h	/^	LONG	lAY;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lAZ	deps/mingw/dinput.h	/^	LONG	lAZ;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lAxisMax	deps/mingw/dinput.h	/^	LONG		lAxisMax;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:LONG
lAxisMax	deps/mingw/dinput.h	/^	LONG		lAxisMax;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:LONG
lAxisMin	deps/mingw/dinput.h	/^	LONG		lAxisMin;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:LONG
lAxisMin	deps/mingw/dinput.h	/^	LONG		lAxisMin;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:LONG
lCenter	deps/mingw/dinput.h	/^	LONG	lCenter;$/;"	m	struct:DIPROPCAL	typeref:typename:LONG
lDeadBand	deps/mingw/dinput.h	/^	LONG			lDeadBand;$/;"	m	struct:DICONDITION	typeref:typename:LONG
lEnd	deps/mingw/dinput.h	/^	LONG			lEnd;$/;"	m	struct:DIRAMPFORCE	typeref:typename:LONG
lFRx	deps/mingw/dinput.h	/^	LONG	lFRx;		\/* 'fr' as in rotational force aka torque *\/$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lFRy	deps/mingw/dinput.h	/^	LONG	lFRy;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lFRz	deps/mingw/dinput.h	/^	LONG	lFRz;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lFX	deps/mingw/dinput.h	/^	LONG	lFX;		\/* 'f' as in force *\/$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lFY	deps/mingw/dinput.h	/^	LONG	lFY;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lFZ	deps/mingw/dinput.h	/^	LONG	lFZ;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lMagnitude	deps/mingw/dinput.h	/^	LONG			lMagnitude;$/;"	m	struct:DICONSTANTFORCE	typeref:typename:LONG
lMax	deps/mingw/dinput.h	/^	LONG		lMax;$/;"	m	struct:DIPROPRANGE	typeref:typename:LONG
lMax	deps/mingw/dinput.h	/^	LONG		lMax[5];$/;"	m	struct:DIPROPCALPOV	typeref:typename:LONG[5]
lMax	deps/mingw/dinput.h	/^	LONG	lMax;$/;"	m	struct:DIPROPCAL	typeref:typename:LONG
lMin	deps/mingw/dinput.h	/^	LONG		lMin;$/;"	m	struct:DIPROPRANGE	typeref:typename:LONG
lMin	deps/mingw/dinput.h	/^	LONG		lMin[5];$/;"	m	struct:DIPROPCALPOV	typeref:typename:LONG[5]
lMin	deps/mingw/dinput.h	/^	LONG	lMin;$/;"	m	struct:DIPROPCAL	typeref:typename:LONG
lNegativeCoefficient	deps/mingw/dinput.h	/^	LONG			lNegativeCoefficient;$/;"	m	struct:DICONDITION	typeref:typename:LONG
lOffset	deps/mingw/dinput.h	/^	LONG			lOffset;$/;"	m	struct:DICONDITION	typeref:typename:LONG
lOffset	deps/mingw/dinput.h	/^	LONG			lOffset;$/;"	m	struct:DIPERIODIC	typeref:typename:LONG
lP	deps/mingw/dinput.h	/^    LONG	lP;$/;"	m	struct:_CPOINT	typeref:typename:LONG
lPositiveCoefficient	deps/mingw/dinput.h	/^	LONG			lPositiveCoefficient;$/;"	m	struct:DICONDITION	typeref:typename:LONG
lRx	deps/mingw/dinput.h	/^	LONG	lRx;$/;"	m	struct:DIJOYSTATE	typeref:typename:LONG
lRx	deps/mingw/dinput.h	/^	LONG	lRx;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lRy	deps/mingw/dinput.h	/^	LONG	lRy;$/;"	m	struct:DIJOYSTATE	typeref:typename:LONG
lRy	deps/mingw/dinput.h	/^	LONG	lRy;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lRz	deps/mingw/dinput.h	/^	LONG	lRz;$/;"	m	struct:DIJOYSTATE	typeref:typename:LONG
lRz	deps/mingw/dinput.h	/^	LONG	lRz;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lStart	deps/mingw/dinput.h	/^	LONG			lStart;$/;"	m	struct:DIRAMPFORCE	typeref:typename:LONG
lVRx	deps/mingw/dinput.h	/^	LONG	lVRx;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lVRy	deps/mingw/dinput.h	/^	LONG	lVRy;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lVRz	deps/mingw/dinput.h	/^	LONG	lVRz;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lVX	deps/mingw/dinput.h	/^	LONG	lVX;		\/* 'v' as in velocity *\/$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lVY	deps/mingw/dinput.h	/^	LONG	lVY;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lVZ	deps/mingw/dinput.h	/^	LONG	lVZ;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lX	deps/mingw/dinput.h	/^	LONG	lX;$/;"	m	struct:DIJOYSTATE	typeref:typename:LONG
lX	deps/mingw/dinput.h	/^	LONG	lX;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lX	deps/mingw/dinput.h	/^  LONG lX;$/;"	m	struct:DIMOUSESTATE	typeref:typename:LONG
lX	deps/mingw/dinput.h	/^  LONG lX;$/;"	m	struct:DIMOUSESTATE2	typeref:typename:LONG
lY	deps/mingw/dinput.h	/^	LONG	lY;$/;"	m	struct:DIJOYSTATE	typeref:typename:LONG
lY	deps/mingw/dinput.h	/^	LONG	lY;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lY	deps/mingw/dinput.h	/^  LONG lY;$/;"	m	struct:DIMOUSESTATE	typeref:typename:LONG
lY	deps/mingw/dinput.h	/^  LONG lY;$/;"	m	struct:DIMOUSESTATE2	typeref:typename:LONG
lZ	deps/mingw/dinput.h	/^	LONG	lZ;$/;"	m	struct:DIJOYSTATE	typeref:typename:LONG
lZ	deps/mingw/dinput.h	/^	LONG	lZ;$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG
lZ	deps/mingw/dinput.h	/^  LONG lZ;$/;"	m	struct:DIMOUSESTATE	typeref:typename:LONG
lZ	deps/mingw/dinput.h	/^  LONG lZ;$/;"	m	struct:DIMOUSESTATE2	typeref:typename:LONG
label_active	deps/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
label_active	deps/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
label_active	deps/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_color
label_hover	deps/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
label_hover	deps/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
label_hover	deps/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_color
label_normal	deps/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
label_normal	deps/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
label_normal	deps/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_color
label_padding	deps/nuklear.h	/^    struct nk_vec2 label_padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_vec2
largePoints	deps/glad/vulkan.h	/^    VkBool32                 largePoints;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
last	deps/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_size
last	deps/nuklear.h	/^    nk_size last;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
last	deps/nuklear.h	/^    struct nk_vec2 last;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_vec2
lastCursorPosX	src/win32_platform.h	/^    int                 lastCursorPosX, lastCursorPosY;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:int
lastCursorPosX	src/x11_platform.h	/^    int             lastCursorPosX, lastCursorPosY;$/;"	m	struct:_GLFWwindowX11	typeref:typename:int
lastCursorPosY	src/win32_platform.h	/^    int                 lastCursorPosX, lastCursorPosY;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:int
lastCursorPosY	src/x11_platform.h	/^    int             lastCursorPosX, lastCursorPosY;$/;"	m	struct:_GLFWwindowX11	typeref:typename:int
lastKeyTime	src/x11_platform.h	/^    Time            lastKeyTime;$/;"	m	struct:_GLFWwindowX11	typeref:typename:Time
last_button_click	deps/nuklear_glfw_gl2.h	/^    double last_button_click;$/;"	m	struct:nk_glfw	typeref:typename:double
last_widget_state	deps/nuklear.h	/^    nk_flags last_widget_state;$/;"	m	struct:nk_context	typeref:typename:nk_flags
layer	src/cocoa_platform.h	/^    id              layer;$/;"	E	struct:_GLFWwindowNS
layer1	docs/spaces.svg	/^     transform="translate(-12.627039,-339.86462)">$/;"	i
layerCount	deps/glad/vulkan.h	/^    uint32_t                 layerCount;$/;"	m	struct:VkImageSubresourceLayers	typeref:typename:uint32_t
layerCount	deps/glad/vulkan.h	/^    uint32_t                 layerCount;$/;"	m	struct:VkImageSubresourceRange	typeref:typename:uint32_t
layerCount	deps/glad/vulkan.h	/^    uint32_t         layerCount;$/;"	m	struct:VkClearRect	typeref:typename:uint32_t
layerName	deps/glad/vulkan.h	/^    char              layerName [ VK_MAX_EXTENSION_NAME_SIZE ];$/;"	m	struct:VkLayerProperties	typeref:typename:char[]
layers	deps/glad/vulkan.h	/^    uint32_t                 layers;$/;"	m	struct:VkFramebufferCreateInfo	typeref:typename:uint32_t
layout	deps/glad/vulkan.h	/^    VkImageLayout            layout;$/;"	m	struct:VkAttachmentReference	typeref:typename:VkImageLayout
layout	deps/glad/vulkan.h	/^    VkPipelineLayout         layout;$/;"	m	struct:VkComputePipelineCreateInfo	typeref:typename:VkPipelineLayout
layout	deps/glad/vulkan.h	/^    VkPipelineLayout         layout;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:VkPipelineLayout
layout	deps/nuklear.h	/^    struct nk_panel *layout;$/;"	m	struct:nk_window	typeref:struct:nk_panel *
left	deps/nuklear.h	/^    struct nk_color left;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
left	src/wl_platform.h	/^        _GLFWdecorationWayland             top, left, right, bottom;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590308	typeref:typename:_GLFWdecorationWayland
leftDecoration	src/wl_platform.h	/^    leftDecoration,$/;"	e	enum:_GLFWdecorationSideWayland
len	deps/nuklear.h	/^    int len; \/* in codepoints\/runes\/glyphs *\/$/;"	m	struct:nk_str	typeref:typename:int
length	deps/nuklear.h	/^    int length;$/;"	m	struct:nk_command_text	typeref:typename:int
length	deps/nuklear.h	/^    int length;$/;"	m	struct:nk_property_state	typeref:typename:int
length	deps/nuklear.h	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find	typeref:typename:int
level	deps/glad/vulkan.h	/^    VkCommandBufferLevel     level;$/;"	m	struct:VkCommandBufferAllocateInfo	typeref:typename:VkCommandBufferLevel
levelCount	deps/glad/vulkan.h	/^    uint32_t                 levelCount;$/;"	m	struct:VkImageSubresourceRange	typeref:typename:uint32_t
life	examples/particles.c	/^    float life;      \/\/ Life of particle (1.0 = newborn, < 0.0 = dead)$/;"	m	struct:__anon62203f4b0408	typeref:typename:float	file:
limits	deps/glad/vulkan.h	/^    VkPhysicalDeviceLimits   limits;$/;"	m	struct:VkPhysicalDeviceProperties	typeref:typename:VkPhysicalDeviceLimits
lineWidth	deps/glad/vulkan.h	/^    float                    lineWidth;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:float
lineWidthGranularity	deps/glad/vulkan.h	/^    float                    lineWidthGranularity;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:float
lineWidthRange	deps/glad/vulkan.h	/^    float                    lineWidthRange [2];$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:float[2]
line_AA	deps/nuklear.h	/^    enum nk_anti_aliasing line_AA; \/* line anti-aliasing flag can be turned off if you are tigh/;"	m	struct:nk_convert_config	typeref:enum:nk_anti_aliasing
line_AA	deps/nuklear.h	/^    enum nk_anti_aliasing line_AA;$/;"	m	struct:nk_draw_list	typeref:enum:nk_anti_aliasing
line_thickness	deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_arc	typeref:typename:unsigned short
line_thickness	deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_circle	typeref:typename:unsigned short
line_thickness	deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_curve	typeref:typename:unsigned short
line_thickness	deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_line	typeref:typename:unsigned short
line_thickness	deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polygon	typeref:typename:unsigned short
line_thickness	deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polyline	typeref:typename:unsigned short
line_thickness	deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
line_thickness	deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_triangle	typeref:typename:unsigned short
linearTilingFeatures	deps/glad/vulkan.h	/^    VkFormatFeatureFlags     linearTilingFeatures;$/;"	m	struct:VkFormatProperties	typeref:typename:VkFormatFeatureFlags
list_context_extensions	tests/glfwinfo.c	/^static void list_context_extensions(int client, int major, int minor)$/;"	f	typeref:typename:void	file:
list_modes	tests/monitors.c	/^static void list_modes(GLFWmonitor* monitor)$/;"	f	typeref:typename:void	file:
list_vulkan_device_extensions	tests/glfwinfo.c	/^static void list_vulkan_device_extensions(VkInstance instance, VkPhysicalDevice device)$/;"	f	typeref:typename:void	file:
list_vulkan_device_layers	tests/glfwinfo.c	/^static void list_vulkan_device_layers(VkInstance instance, VkPhysicalDevice device)$/;"	f	typeref:typename:void	file:
list_vulkan_instance_extensions	tests/glfwinfo.c	/^static void list_vulkan_instance_extensions(void)$/;"	f	typeref:typename:void	file:
list_vulkan_instance_layers	tests/glfwinfo.c	/^static void list_vulkan_instance_layers(void)$/;"	f	typeref:typename:void	file:
loadLibraries	src/win32_init.c	/^static GLFWbool loadLibraries(void)$/;"	f	typeref:typename:GLFWbool	file:
loadOp	deps/glad/vulkan.h	/^    VkAttachmentLoadOp       loadOp;$/;"	m	struct:VkAttachmentDescription	typeref:typename:VkAttachmentLoadOp
loca	deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
location	deps/glad/vulkan.h	/^    uint32_t                 location;$/;"	m	struct:VkVertexInputAttributeDescription	typeref:typename:uint32_t
lockKeyMods	src/internal.h	/^    GLFWbool            lockKeyMods;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWbool
lockPointer	src/wl_window.c	/^static void lockPointer(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
lockedPointer	src/wl_platform.h	/^        struct zwp_locked_pointer_v1*      lockedPointer;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590208	typeref:struct:zwp_locked_pointer_v1 *
lockedPointerHandleLocked	src/wl_window.c	/^static void lockedPointerHandleLocked(void* data,$/;"	f	typeref:typename:void	file:
lockedPointerHandleUnlocked	src/wl_window.c	/^static void lockedPointerHandleUnlocked(void* data,$/;"	f	typeref:typename:void	file:
lockedPointerListener	src/wl_window.c	/^static const struct zwp_locked_pointer_v1_listener lockedPointerListener = {$/;"	v	typeref:typename:const struct zwp_locked_pointer_v1_listener	file:
logicOp	deps/glad/vulkan.h	/^    VkBool32                 logicOp;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
logicOp	deps/glad/vulkan.h	/^    VkLogicOp                logicOp;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo	typeref:typename:VkLogicOp
logicOpEnable	deps/glad/vulkan.h	/^    VkBool32                 logicOpEnable;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo	typeref:typename:VkBool32
logo	tests/icon.c	/^const char* const logo[] =$/;"	v	typeref:typename:const char * const[]
lpDiEffect	deps/mingw/dinput.h	/^  LPCDIEFFECT lpDiEffect;$/;"	m	struct:DIFILEEFFECT	typeref:typename:LPCDIEFFECT
lpEnvelope	deps/mingw/dinput.h	/^	LPDIENVELOPE		lpEnvelope;$/;"	m	struct:DIEFFECT	typeref:typename:LPDIENVELOPE
lpEnvelope	deps/mingw/dinput.h	/^	LPDIENVELOPE		lpEnvelope;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:LPDIENVELOPE
lpUnkDDSTarget	deps/mingw/dinput.h	/^	LPUNKNOWN		lpUnkDDSTarget;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA	typeref:typename:LPUNKNOWN
lpUnkDDSTarget	deps/mingw/dinput.h	/^	LPUNKNOWN		lpUnkDDSTarget;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW	typeref:typename:LPUNKNOWN
lprgFormats	deps/mingw/dinput.h	/^	LPDIACTIONFORMATA	lprgFormats;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA	typeref:typename:LPDIACTIONFORMATA
lprgFormats	deps/mingw/dinput.h	/^	LPDIACTIONFORMATW	lprgFormats;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW	typeref:typename:LPDIACTIONFORMATW
lprgImageInfoArray	deps/mingw/dinput.h	/^	LPDIDEVICEIMAGEINFOA	lprgImageInfoArray;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA	typeref:typename:LPDIDEVICEIMAGEINFOA
lprgImageInfoArray	deps/mingw/dinput.h	/^	LPDIDEVICEIMAGEINFOW	lprgImageInfoArray;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW	typeref:typename:LPDIDEVICEIMAGEINFOW
lptszActionName	deps/mingw/dinput.h	/^		LPCSTR	lptszActionName;$/;"	m	union:_DIACTIONA::__anon8f005edb010a	typeref:typename:LPCSTR
lptszActionName	deps/mingw/dinput.h	/^		LPCWSTR	lptszActionName;$/;"	m	union:_DIACTIONW::__anon8f005edb020a	typeref:typename:LPCWSTR
lptszUserNames	deps/mingw/dinput.h	/^	LPSTR			lptszUserNames;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA	typeref:typename:LPSTR
lptszUserNames	deps/mingw/dinput.h	/^	LPWSTR			lptszUserNames;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW	typeref:typename:LPWSTR
lpvInBuffer	deps/mingw/dinput.h	/^	LPVOID	lpvInBuffer;$/;"	m	struct:DIEFFESCAPE	typeref:typename:LPVOID
lpvOutBuffer	deps/mingw/dinput.h	/^	LPVOID	lpvOutBuffer;$/;"	m	struct:DIEFFESCAPE	typeref:typename:LPVOID
lpvTypeSpecificParams	deps/mingw/dinput.h	/^	LPVOID			lpvTypeSpecificParams;$/;"	m	struct:DIEFFECT	typeref:typename:LPVOID
lpvTypeSpecificParams	deps/mingw/dinput.h	/^	LPVOID			lpvTypeSpecificParams;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:LPVOID
mAlreadyLocked	deps/tinycthread.h	/^  int mAlreadyLocked;         \/* TRUE if the mutex is already locked *\/$/;"	m	struct:__anon92fdd8d50108	typeref:typename:int
mArg	deps/tinycthread.c	/^  void * mArg;            \/**< Function argument for the thread function. *\/$/;"	m	struct:__anon92fdd8d00108	typeref:typename:void *	file:
mEvents	deps/tinycthread.h	/^  HANDLE mEvents[2];                  \/* Signal and broadcast event HANDLEs. *\/$/;"	m	struct:__anon92fdd8d50208	typeref:typename:HANDLE[2]
mFunction	deps/tinycthread.c	/^  thrd_start_t mFunction; \/**< Pointer to the function to be executed. *\/$/;"	m	struct:__anon92fdd8d00108	typeref:typename:thrd_start_t	file:
mHandle	deps/tinycthread.h	/^  CRITICAL_SECTION mHandle;   \/* Critical section handle *\/$/;"	m	struct:__anon92fdd8d50108	typeref:typename:CRITICAL_SECTION
mRecursive	deps/tinycthread.h	/^  int mRecursive;             \/* TRUE if the mutex is recursive *\/$/;"	m	struct:__anon92fdd8d50108	typeref:typename:int
mWaitersCount	deps/tinycthread.h	/^  unsigned int mWaitersCount;         \/* Count of the number of waiters. *\/$/;"	m	struct:__anon92fdd8d50208	typeref:typename:unsigned int
mWaitersCountLock	deps/tinycthread.h	/^  CRITICAL_SECTION mWaitersCountLock; \/* Serialize access to mWaitersCount. *\/$/;"	m	struct:__anon92fdd8d50208	typeref:typename:CRITICAL_SECTION
magFilter	deps/glad/vulkan.h	/^    VkFilter                 magFilter;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkFilter
main	examples/boing.c	/^int main( void )$/;"	f	typeref:typename:int
main	examples/gears.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	examples/heightmap.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	examples/offscreen.c	/^int main(void)$/;"	f	typeref:typename:int
main	examples/particles.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	examples/sharing.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	examples/splitview.c	/^int main(void)$/;"	f	typeref:typename:int
main	examples/triangle-opengl.c	/^int main(void)$/;"	f	typeref:typename:int
main	examples/wave.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	tests/clipboard.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/cursor.c	/^int main(void)$/;"	f	typeref:typename:int
main	tests/empty.c	/^int main(void)$/;"	f	typeref:typename:int
main	tests/events.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/gamma.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/glfwinfo.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/icon.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/iconify.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/inputlag.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/joysticks.c	/^int main(void)$/;"	f	typeref:typename:int
main	tests/monitors.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/msaa.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/opacity.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/reopen.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/tearing.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/threads.c	/^int main(void)$/;"	f	typeref:typename:int
main	tests/timeout.c	/^int main(void)$/;"	f	typeref:typename:int
main	tests/title.c	/^int main(void)$/;"	f	typeref:typename:int
main	tests/triangle-vulkan.c	/^int main(const int argc, const char *argv[]) {$/;"	f	typeref:typename:int
main	tests/windows.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
mainWindow	src/wl_platform.h	/^    mainWindow,$/;"	e	enum:_GLFWdecorationSideWayland
major	src/egl_context.h	/^    EGLint          major, minor;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:EGLint
major	src/glx_context.h	/^    int             major, minor;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:int
major	src/internal.h	/^    int                 major, minor, revision;$/;"	m	struct:_GLFWcontext	typeref:typename:int
major	src/internal.h	/^    int           major;$/;"	m	struct:_GLFWctxconfig	typeref:typename:int
major	src/x11_platform.h	/^        int          major;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00208	typeref:typename:int
major	src/x11_platform.h	/^        int         major;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:int
major	src/x11_platform.h	/^        int         major;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00608	typeref:typename:int
major	src/x11_platform.h	/^        int         major;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00908	typeref:typename:int
major	src/x11_platform.h	/^        int         major;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00a08	typeref:typename:int
majorOpcode	src/x11_platform.h	/^        int          majorOpcode;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00208	typeref:typename:int
majorOpcode	src/x11_platform.h	/^        int         majorOpcode;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00908	typeref:typename:int
makeContextCurrentEGL	src/egl_context.c	/^static void makeContextCurrentEGL(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
makeContextCurrentGLX	src/glx_context.c	/^static void makeContextCurrentGLX(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
makeContextCurrentNSGL	src/nsgl_context.m	/^static void makeContextCurrentNSGL(_GLFWwindow* window)$/;"	f
makeContextCurrentOSMesa	src/osmesa_context.c	/^static void makeContextCurrentOSMesa(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
makeContextCurrentWGL	src/wgl_context.c	/^static void makeContextCurrentWGL(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
makeCurrent	src/internal.h	/^    _GLFWmakecontextcurrentfun  makeCurrent;$/;"	m	struct:_GLFWcontext	typeref:typename:_GLFWmakecontextcurrentfun
make_mesh	examples/heightmap.c	/^static void make_mesh(GLuint program)$/;"	f	typeref:typename:void	file:
make_shader	examples/heightmap.c	/^static GLuint make_shader(GLenum type, const char* text)$/;"	f	typeref:typename:GLuint	file:
make_shader_program	examples/heightmap.c	/^static GLuint make_shader_program(const char* vs_text, const char* fs_text)$/;"	f	typeref:typename:GLuint	file:
mapEntryCount	deps/glad/vulkan.h	/^    uint32_t                 mapEntryCount;$/;"	m	struct:VkSpecializationInfo	typeref:typename:uint32_t
map_line_indices	examples/heightmap.c	/^static GLuint  map_line_indices[2*MAP_NUM_LINES];$/;"	v	typeref:typename:GLuint[]	file:
map_vertices	examples/heightmap.c	/^static GLfloat map_vertices[3][MAP_NUM_TOTAL_VERTICES];$/;"	v	typeref:typename:GLfloat[3][]	file:
mapping	src/internal.h	/^    _GLFWmapping*   mapping;$/;"	m	struct:_GLFWjoystick	typeref:typename:_GLFWmapping *
mappingCount	src/internal.h	/^    int                 mappingCount;$/;"	m	struct:_GLFWlibrary	typeref:typename:int
mappings	src/internal.h	/^    _GLFWmapping*       mappings;$/;"	m	struct:_GLFWlibrary	typeref:typename:_GLFWmapping *
markedRange	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
markedText	src/cocoa_window.m	/^    NSMutableAttributedString* markedText;$/;"	E	interface:GLFWContentView
marker	deps/nuklear.h	/^    struct nk_buffer_marker marker[NK_BUFFER_MAX];$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer_marker[]
mat4x4	deps/linmath.h	/^typedef vec4 mat4x4[4];$/;"	t	typeref:typename:vec4[4]
mat4x4_add	deps/linmath.h	/^static inline void mat4x4_add(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f	typeref:typename:void
mat4x4_col	deps/linmath.h	/^static inline void mat4x4_col(vec4 r, mat4x4 M, int i)$/;"	f	typeref:typename:void
mat4x4_dup	deps/linmath.h	/^static inline void mat4x4_dup(mat4x4 M, mat4x4 N)$/;"	f	typeref:typename:void
mat4x4_from_quat	deps/linmath.h	/^static inline void mat4x4_from_quat(mat4x4 M, quat q)$/;"	f	typeref:typename:void
mat4x4_from_vec3_mul_outer	deps/linmath.h	/^static inline void mat4x4_from_vec3_mul_outer(mat4x4 M, vec3 a, vec3 b)$/;"	f	typeref:typename:void
mat4x4_frustum	deps/linmath.h	/^static inline void mat4x4_frustum(mat4x4 M, float l, float r, float b, float t, float n, float f/;"	f	typeref:typename:void
mat4x4_identity	deps/linmath.h	/^static inline void mat4x4_identity(mat4x4 M)$/;"	f	typeref:typename:void
mat4x4_invert	deps/linmath.h	/^static inline void mat4x4_invert(mat4x4 T, mat4x4 M)$/;"	f	typeref:typename:void
mat4x4_look_at	deps/linmath.h	/^static inline void mat4x4_look_at(mat4x4 m, vec3 eye, vec3 center, vec3 up)$/;"	f	typeref:typename:void
mat4x4_mul	deps/linmath.h	/^static inline void mat4x4_mul(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f	typeref:typename:void
mat4x4_mul_vec4	deps/linmath.h	/^static inline void mat4x4_mul_vec4(vec4 r, mat4x4 M, vec4 v)$/;"	f	typeref:typename:void
mat4x4_ortho	deps/linmath.h	/^static inline void mat4x4_ortho(mat4x4 M, float l, float r, float b, float t, float n, float f)$/;"	f	typeref:typename:void
mat4x4_orthonormalize	deps/linmath.h	/^static inline void mat4x4_orthonormalize(mat4x4 R, mat4x4 M)$/;"	f	typeref:typename:void
mat4x4_perspective	deps/linmath.h	/^static inline void mat4x4_perspective(mat4x4 m, float y_fov, float aspect, float n, float f)$/;"	f	typeref:typename:void
mat4x4_rotate	deps/linmath.h	/^static inline void mat4x4_rotate(mat4x4 R, mat4x4 M, float x, float y, float z, float angle)$/;"	f	typeref:typename:void
mat4x4_rotate_X	deps/linmath.h	/^static inline void mat4x4_rotate_X(mat4x4 Q, mat4x4 M, float angle)$/;"	f	typeref:typename:void
mat4x4_rotate_Y	deps/linmath.h	/^static inline void mat4x4_rotate_Y(mat4x4 Q, mat4x4 M, float angle)$/;"	f	typeref:typename:void
mat4x4_rotate_Z	deps/linmath.h	/^static inline void mat4x4_rotate_Z(mat4x4 Q, mat4x4 M, float angle)$/;"	f	typeref:typename:void
mat4x4_row	deps/linmath.h	/^static inline void mat4x4_row(vec4 r, mat4x4 M, int i)$/;"	f	typeref:typename:void
mat4x4_scale	deps/linmath.h	/^static inline void mat4x4_scale(mat4x4 M, mat4x4 a, float k)$/;"	f	typeref:typename:void
mat4x4_scale_aniso	deps/linmath.h	/^static inline void mat4x4_scale_aniso(mat4x4 M, mat4x4 a, float x, float y, float z)$/;"	f	typeref:typename:void
mat4x4_sub	deps/linmath.h	/^static inline void mat4x4_sub(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f	typeref:typename:void
mat4x4_translate	deps/linmath.h	/^static inline void mat4x4_translate(mat4x4 T, float x, float y, float z)$/;"	f	typeref:typename:void
mat4x4_translate_in_place	deps/linmath.h	/^static inline void mat4x4_translate_in_place(mat4x4 M, float x, float y, float z)$/;"	f	typeref:typename:void
mat4x4_transpose	deps/linmath.h	/^static inline void mat4x4_transpose(mat4x4 M, mat4x4 N)$/;"	f	typeref:typename:void
mat4x4o_mul_quat	deps/linmath.h	/^static inline void mat4x4o_mul_quat(mat4x4 R, mat4x4 M, quat q)$/;"	f	typeref:typename:void
matchCallback	src/cocoa_joystick.m	/^static void matchCallback(void* context,$/;"	f	struct:_GLFWjoyelementNS
max	deps/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot	typeref:typename:float
maxAnisotropy	deps/glad/vulkan.h	/^    float                    maxAnisotropy;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:float
maxArrayLayers	deps/glad/vulkan.h	/^    uint32_t                 maxArrayLayers;$/;"	m	struct:VkImageFormatProperties	typeref:typename:uint32_t
maxBoundDescriptorSets	deps/glad/vulkan.h	/^    uint32_t                 maxBoundDescriptorSets;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxClipDistances	deps/glad/vulkan.h	/^    uint32_t                 maxClipDistances;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxColorAttachments	deps/glad/vulkan.h	/^    uint32_t                 maxColorAttachments;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxCombinedClipAndCullDistances	deps/glad/vulkan.h	/^    uint32_t                 maxCombinedClipAndCullDistances;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxComputeSharedMemorySize	deps/glad/vulkan.h	/^    uint32_t                 maxComputeSharedMemorySize;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxComputeWorkGroupCount	deps/glad/vulkan.h	/^    uint32_t                 maxComputeWorkGroupCount [3];$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t[3]
maxComputeWorkGroupInvocations	deps/glad/vulkan.h	/^    uint32_t                 maxComputeWorkGroupInvocations;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxComputeWorkGroupSize	deps/glad/vulkan.h	/^    uint32_t                 maxComputeWorkGroupSize [3];$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t[3]
maxCullDistances	deps/glad/vulkan.h	/^    uint32_t                 maxCullDistances;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxDepth	deps/glad/vulkan.h	/^    float                         maxDepth;$/;"	m	struct:VkViewport	typeref:typename:float
maxDepthBounds	deps/glad/vulkan.h	/^    float                    maxDepthBounds;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:float
maxDescriptorSetInputAttachments	deps/glad/vulkan.h	/^    uint32_t                 maxDescriptorSetInputAttachments;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxDescriptorSetSampledImages	deps/glad/vulkan.h	/^    uint32_t                 maxDescriptorSetSampledImages;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxDescriptorSetSamplers	deps/glad/vulkan.h	/^    uint32_t                 maxDescriptorSetSamplers;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxDescriptorSetStorageBuffers	deps/glad/vulkan.h	/^    uint32_t                 maxDescriptorSetStorageBuffers;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxDescriptorSetStorageBuffersDynamic	deps/glad/vulkan.h	/^    uint32_t                 maxDescriptorSetStorageBuffersDynamic;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxDescriptorSetStorageImages	deps/glad/vulkan.h	/^    uint32_t                 maxDescriptorSetStorageImages;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxDescriptorSetUniformBuffers	deps/glad/vulkan.h	/^    uint32_t                 maxDescriptorSetUniformBuffers;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxDescriptorSetUniformBuffersDynamic	deps/glad/vulkan.h	/^    uint32_t                 maxDescriptorSetUniformBuffersDynamic;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxDrawIndexedIndexValue	deps/glad/vulkan.h	/^    uint32_t                 maxDrawIndexedIndexValue;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxDrawIndirectCount	deps/glad/vulkan.h	/^    uint32_t                 maxDrawIndirectCount;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxExtent	deps/glad/vulkan.h	/^    VkExtent3D               maxExtent;$/;"	m	struct:VkImageFormatProperties	typeref:typename:VkExtent3D
maxFragmentCombinedOutputResources	deps/glad/vulkan.h	/^    uint32_t                 maxFragmentCombinedOutputResources;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxFragmentDualSrcAttachments	deps/glad/vulkan.h	/^    uint32_t                 maxFragmentDualSrcAttachments;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxFragmentInputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxFragmentInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxFragmentOutputAttachments	deps/glad/vulkan.h	/^    uint32_t                 maxFragmentOutputAttachments;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxFramebufferHeight	deps/glad/vulkan.h	/^    uint32_t                 maxFramebufferHeight;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxFramebufferLayers	deps/glad/vulkan.h	/^    uint32_t                 maxFramebufferLayers;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxFramebufferWidth	deps/glad/vulkan.h	/^    uint32_t                 maxFramebufferWidth;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxGeometryInputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxGeometryInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxGeometryOutputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxGeometryOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxGeometryOutputVertices	deps/glad/vulkan.h	/^    uint32_t                 maxGeometryOutputVertices;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxGeometryShaderInvocations	deps/glad/vulkan.h	/^    uint32_t                 maxGeometryShaderInvocations;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxGeometryTotalOutputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxGeometryTotalOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxImageArrayLayers	deps/glad/vulkan.h	/^    uint32_t                           maxImageArrayLayers;$/;"	m	struct:VkSurfaceCapabilitiesKHR	typeref:typename:uint32_t
maxImageArrayLayers	deps/glad/vulkan.h	/^    uint32_t                 maxImageArrayLayers;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxImageCount	deps/glad/vulkan.h	/^    uint32_t                           maxImageCount;$/;"	m	struct:VkSurfaceCapabilitiesKHR	typeref:typename:uint32_t
maxImageDimension1D	deps/glad/vulkan.h	/^    uint32_t                 maxImageDimension1D;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxImageDimension2D	deps/glad/vulkan.h	/^    uint32_t                 maxImageDimension2D;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxImageDimension3D	deps/glad/vulkan.h	/^    uint32_t                 maxImageDimension3D;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxImageDimensionCube	deps/glad/vulkan.h	/^    uint32_t                 maxImageDimensionCube;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxImageExtent	deps/glad/vulkan.h	/^    VkExtent2D                         maxImageExtent;$/;"	m	struct:VkSurfaceCapabilitiesKHR	typeref:typename:VkExtent2D
maxInterpolationOffset	deps/glad/vulkan.h	/^    float                    maxInterpolationOffset;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:float
maxLod	deps/glad/vulkan.h	/^    float                    maxLod;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:float
maxMemoryAllocationCount	deps/glad/vulkan.h	/^    uint32_t                 maxMemoryAllocationCount;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxMemoryAllocationSize	deps/glad/vulkan.h	/^    VkDeviceSize                       maxMemoryAllocationSize;$/;"	m	struct:VkPhysicalDeviceMaintenance3Properties	typeref:typename:VkDeviceSize
maxMipLevels	deps/glad/vulkan.h	/^    uint32_t                 maxMipLevels;$/;"	m	struct:VkImageFormatProperties	typeref:typename:uint32_t
maxMultiviewInstanceIndex	deps/glad/vulkan.h	/^    uint32_t                           maxMultiviewInstanceIndex;$/;"	m	struct:VkPhysicalDeviceMultiviewProperties	typeref:typename:uint32_t
maxMultiviewViewCount	deps/glad/vulkan.h	/^    uint32_t                           maxMultiviewViewCount;$/;"	m	struct:VkPhysicalDeviceMultiviewProperties	typeref:typename:uint32_t
maxPerSetDescriptors	deps/glad/vulkan.h	/^    uint32_t                           maxPerSetDescriptors;$/;"	m	struct:VkPhysicalDeviceMaintenance3Properties	typeref:typename:uint32_t
maxPerStageDescriptorInputAttachments	deps/glad/vulkan.h	/^    uint32_t                 maxPerStageDescriptorInputAttachments;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxPerStageDescriptorSampledImages	deps/glad/vulkan.h	/^    uint32_t                 maxPerStageDescriptorSampledImages;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxPerStageDescriptorSamplers	deps/glad/vulkan.h	/^    uint32_t                 maxPerStageDescriptorSamplers;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxPerStageDescriptorStorageBuffers	deps/glad/vulkan.h	/^    uint32_t                 maxPerStageDescriptorStorageBuffers;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxPerStageDescriptorStorageImages	deps/glad/vulkan.h	/^    uint32_t                 maxPerStageDescriptorStorageImages;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxPerStageDescriptorUniformBuffers	deps/glad/vulkan.h	/^    uint32_t                 maxPerStageDescriptorUniformBuffers;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxPerStageResources	deps/glad/vulkan.h	/^    uint32_t                 maxPerStageResources;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxPushConstantsSize	deps/glad/vulkan.h	/^    uint32_t                 maxPushConstantsSize;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxResourceSize	deps/glad/vulkan.h	/^    VkDeviceSize             maxResourceSize;$/;"	m	struct:VkImageFormatProperties	typeref:typename:VkDeviceSize
maxSampleMaskWords	deps/glad/vulkan.h	/^    uint32_t                 maxSampleMaskWords;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxSamplerAllocationCount	deps/glad/vulkan.h	/^    uint32_t                 maxSamplerAllocationCount;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxSamplerAnisotropy	deps/glad/vulkan.h	/^    float                    maxSamplerAnisotropy;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:float
maxSamplerLodBias	deps/glad/vulkan.h	/^    float                    maxSamplerLodBias;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:float
maxSets	deps/glad/vulkan.h	/^    uint32_t                 maxSets;$/;"	m	struct:VkDescriptorPoolCreateInfo	typeref:typename:uint32_t
maxStorageBufferRange	deps/glad/vulkan.h	/^    uint32_t                 maxStorageBufferRange;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTessellationControlPerPatchOutputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxTessellationControlPerPatchOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTessellationControlPerVertexInputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxTessellationControlPerVertexInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTessellationControlPerVertexOutputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxTessellationControlPerVertexOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTessellationControlTotalOutputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxTessellationControlTotalOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTessellationEvaluationInputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxTessellationEvaluationInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTessellationEvaluationOutputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxTessellationEvaluationOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTessellationGenerationLevel	deps/glad/vulkan.h	/^    uint32_t                 maxTessellationGenerationLevel;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTessellationPatchSize	deps/glad/vulkan.h	/^    uint32_t                 maxTessellationPatchSize;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTexelBufferElements	deps/glad/vulkan.h	/^    uint32_t                 maxTexelBufferElements;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTexelGatherOffset	deps/glad/vulkan.h	/^    uint32_t                 maxTexelGatherOffset;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxTexelOffset	deps/glad/vulkan.h	/^    uint32_t                 maxTexelOffset;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxUniformBufferRange	deps/glad/vulkan.h	/^    uint32_t                 maxUniformBufferRange;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxVertexInputAttributeOffset	deps/glad/vulkan.h	/^    uint32_t                 maxVertexInputAttributeOffset;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxVertexInputAttributes	deps/glad/vulkan.h	/^    uint32_t                 maxVertexInputAttributes;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxVertexInputBindingStride	deps/glad/vulkan.h	/^    uint32_t                 maxVertexInputBindingStride;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxVertexInputBindings	deps/glad/vulkan.h	/^    uint32_t                 maxVertexInputBindings;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxVertexOutputComponents	deps/glad/vulkan.h	/^    uint32_t                 maxVertexOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
maxViewportDimensions	deps/glad/vulkan.h	/^    uint32_t                 maxViewportDimensions [2];$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t[2]
maxViewports	deps/glad/vulkan.h	/^    uint32_t                 maxViewports;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
max_value	deps/nuklear.h	/^    union nk_property max_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
max_x	deps/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel	typeref:typename:float
maxheight	src/internal.h	/^    int                 maxwidth, maxheight;$/;"	m	struct:_GLFWwindow	typeref:typename:int
maximize	src/internal.h	/^        GLFWwindowmaximizefun   maximize;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWwindowmaximizefun
maximize_symbol	deps/nuklear.h	/^    enum nk_symbol_type maximize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_symbol_type
maximized	src/cocoa_platform.h	/^    GLFWbool        maximized;$/;"	E	struct:_GLFWwindowNS
maximized	src/internal.h	/^    GLFWbool      maximized;$/;"	m	struct:_GLFWwndconfig	typeref:typename:GLFWbool
maximized	src/win32_platform.h	/^    GLFWbool            maximized;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:GLFWbool
maximized	src/wl_platform.h	/^    GLFWbool                    maximized;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:GLFWbool
maximized	src/x11_platform.h	/^    GLFWbool        maximized;$/;"	m	struct:_GLFWwindowX11	typeref:typename:GLFWbool
maximum	src/cocoa_joystick.m	/^    long            maximum;$/;"	E	struct:_GLFWjoyelementNS
maxwidth	src/internal.h	/^    int                 maxwidth, maxheight;$/;"	m	struct:_GLFWwindow	typeref:typename:int
mem	tests/triangle-vulkan.c	/^        VkDeviceMemory mem;$/;"	m	struct:demo::__anondab0972c0208	typeref:typename:VkDeviceMemory	file:
mem	tests/triangle-vulkan.c	/^        VkDeviceMemory mem;$/;"	m	struct:demo::__anondab0972c0308	typeref:typename:VkDeviceMemory	file:
mem	tests/triangle-vulkan.c	/^    VkDeviceMemory mem;$/;"	m	struct:texture_object	typeref:typename:VkDeviceMemory	file:
memory	deps/glad/vulkan.h	/^    VkDeviceMemory                     memory;$/;"	m	struct:VkBindBufferMemoryInfo	typeref:typename:VkDeviceMemory
memory	deps/glad/vulkan.h	/^    VkDeviceMemory                     memory;$/;"	m	struct:VkBindImageMemoryInfo	typeref:typename:VkDeviceMemory
memory	deps/glad/vulkan.h	/^    VkDeviceMemory           memory;$/;"	m	struct:VkMappedMemoryRange	typeref:typename:VkDeviceMemory
memory	deps/glad/vulkan.h	/^    VkDeviceMemory           memory;$/;"	m	struct:VkSparseImageMemoryBind	typeref:typename:VkDeviceMemory
memory	deps/glad/vulkan.h	/^    VkDeviceMemory           memory;$/;"	m	struct:VkSparseMemoryBind	typeref:typename:VkDeviceMemory
memory	deps/nuklear.h	/^    struct nk_buffer memory;$/;"	m	struct:nk_context	typeref:struct:nk_buffer
memory	deps/nuklear.h	/^    struct nk_memory memory;$/;"	m	struct:nk_buffer	typeref:struct:nk_memory
memory	deps/nuklear.h	/^    void *memory;$/;"	m	struct:nk_memory_status	typeref:typename:void *
memoryDeviceIndex	deps/glad/vulkan.h	/^    uint32_t                           memoryDeviceIndex;$/;"	m	struct:VkDeviceGroupBindSparseInfo	typeref:typename:uint32_t
memoryHeapCount	deps/glad/vulkan.h	/^    uint32_t                 memoryHeapCount;$/;"	m	struct:VkPhysicalDeviceMemoryProperties	typeref:typename:uint32_t
memoryHeaps	deps/glad/vulkan.h	/^    VkMemoryHeap             memoryHeaps [ VK_MAX_MEMORY_HEAPS ];$/;"	m	struct:VkPhysicalDeviceMemoryProperties	typeref:typename:VkMemoryHeap[]
memoryOffset	deps/glad/vulkan.h	/^    VkDeviceSize                       memoryOffset;$/;"	m	struct:VkBindBufferMemoryInfo	typeref:typename:VkDeviceSize
memoryOffset	deps/glad/vulkan.h	/^    VkDeviceSize                       memoryOffset;$/;"	m	struct:VkBindImageMemoryInfo	typeref:typename:VkDeviceSize
memoryOffset	deps/glad/vulkan.h	/^    VkDeviceSize             memoryOffset;$/;"	m	struct:VkSparseImageMemoryBind	typeref:typename:VkDeviceSize
memoryOffset	deps/glad/vulkan.h	/^    VkDeviceSize             memoryOffset;$/;"	m	struct:VkSparseMemoryBind	typeref:typename:VkDeviceSize
memoryProperties	deps/glad/vulkan.h	/^    VkPhysicalDeviceMemoryProperties   memoryProperties;$/;"	m	struct:VkPhysicalDeviceMemoryProperties2	typeref:typename:VkPhysicalDeviceMemoryProperties
memoryRequirements	deps/glad/vulkan.h	/^    VkMemoryRequirements                                                   memoryRequirements;$/;"	m	struct:VkMemoryRequirements2	typeref:typename:VkMemoryRequirements
memoryRequirements	deps/glad/vulkan.h	/^    VkSparseImageMemoryRequirements                                        memoryRequirements;$/;"	m	struct:VkSparseImageMemoryRequirements2	typeref:typename:VkSparseImageMemoryRequirements
memoryTypeBits	deps/glad/vulkan.h	/^    uint32_t                 memoryTypeBits;$/;"	m	struct:VkMemoryRequirements	typeref:typename:uint32_t
memoryTypeCount	deps/glad/vulkan.h	/^    uint32_t                 memoryTypeCount;$/;"	m	struct:VkPhysicalDeviceMemoryProperties	typeref:typename:uint32_t
memoryTypeIndex	deps/glad/vulkan.h	/^    uint32_t                 memoryTypeIndex;$/;"	m	struct:VkMemoryAllocateInfo	typeref:typename:uint32_t
memoryTypes	deps/glad/vulkan.h	/^    VkMemoryType             memoryTypes [ VK_MAX_MEMORY_TYPES ];$/;"	m	struct:VkPhysicalDeviceMemoryProperties	typeref:typename:VkMemoryType[]
memory_properties	tests/triangle-vulkan.c	/^    VkPhysicalDeviceMemoryProperties memory_properties;$/;"	m	struct:demo	typeref:typename:VkPhysicalDeviceMemoryProperties	file:
memory_type_from_properties	tests/triangle-vulkan.c	/^static bool memory_type_from_properties(struct demo *demo, uint32_t typeBits,$/;"	f	typeref:typename:bool	file:
menu	deps/nuklear.h	/^    struct nk_menu_state menu;$/;"	m	struct:nk_panel	typeref:struct:nk_menu_state
menu_border	deps/nuklear.h	/^    float menu_border;$/;"	m	struct:nk_style_window	typeref:typename:float
menu_border_color	deps/nuklear.h	/^    struct nk_color menu_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
menu_button	deps/nuklear.h	/^    struct nk_style_button menu_button;$/;"	m	struct:nk_style	typeref:struct:nk_style_button
menu_padding	deps/nuklear.h	/^    struct nk_vec2 menu_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
menubar	src/internal.h	/^        GLFWbool  menubar;$/;"	m	struct:_GLFWinitconfig::__anona0faa0af0108	typeref:typename:GLFWbool
merge_mode	deps/nuklear.h	/^    unsigned char merge_mode;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
mesh	examples/heightmap.c	/^static GLuint mesh;$/;"	v	typeref:typename:GLuint	file:
mesh_vbo	examples/heightmap.c	/^static GLuint mesh_vbo[4];$/;"	v	typeref:typename:GLuint[4]	file:
metadata7	docs/spaces.svg	/^     id="metadata7">$/;"	i
min	deps/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot	typeref:typename:float
min	src/wl_init.c	/^static inline int min(int n1, int n2)$/;"	f	typeref:typename:int	file:
minDepth	deps/glad/vulkan.h	/^    float                         minDepth;$/;"	m	struct:VkViewport	typeref:typename:float
minDepthBounds	deps/glad/vulkan.h	/^    float                    minDepthBounds;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:float
minFilter	deps/glad/vulkan.h	/^    VkFilter                 minFilter;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkFilter
minImageCount	deps/glad/vulkan.h	/^    uint32_t                           minImageCount;$/;"	m	struct:VkSurfaceCapabilitiesKHR	typeref:typename:uint32_t
minImageCount	deps/glad/vulkan.h	/^    uint32_t                           minImageCount;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:uint32_t
minImageExtent	deps/glad/vulkan.h	/^    VkExtent2D                         minImageExtent;$/;"	m	struct:VkSurfaceCapabilitiesKHR	typeref:typename:VkExtent2D
minImageTransferGranularity	deps/glad/vulkan.h	/^    VkExtent3D               minImageTransferGranularity;$/;"	m	struct:VkQueueFamilyProperties	typeref:typename:VkExtent3D
minInterpolationOffset	deps/glad/vulkan.h	/^    float                    minInterpolationOffset;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:float
minLod	deps/glad/vulkan.h	/^    float                    minLod;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:float
minMemoryMapAlignment	deps/glad/vulkan.h	/^    size_t                   minMemoryMapAlignment;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:size_t
minSampleShading	deps/glad/vulkan.h	/^    float                    minSampleShading;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo	typeref:typename:float
minStorageBufferOffsetAlignment	deps/glad/vulkan.h	/^    VkDeviceSize             minStorageBufferOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkDeviceSize
minTexelBufferOffsetAlignment	deps/glad/vulkan.h	/^    VkDeviceSize             minTexelBufferOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkDeviceSize
minTexelGatherOffset	deps/glad/vulkan.h	/^    int32_t                  minTexelGatherOffset;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:int32_t
minTexelOffset	deps/glad/vulkan.h	/^    int32_t                  minTexelOffset;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:int32_t
minUniformBufferOffsetAlignment	deps/glad/vulkan.h	/^    VkDeviceSize             minUniformBufferOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkDeviceSize
min_age	examples/particles.c	/^static float min_age;$/;"	v	typeref:typename:float	file:
min_height	deps/nuklear.h	/^    float min_height;$/;"	m	struct:nk_row_layout	typeref:typename:float
min_row_height_padding	deps/nuklear.h	/^    float min_row_height_padding;$/;"	m	struct:nk_style_window	typeref:typename:float
min_size	deps/nuklear.h	/^    struct nk_vec2 min_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
min_value	deps/nuklear.h	/^    union nk_property min_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
minheight	src/internal.h	/^    int                 minwidth, minheight;$/;"	m	struct:_GLFWwindow	typeref:typename:int
minimize_button	deps/nuklear.h	/^    struct nk_style_button minimize_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_button
minimize_symbol	deps/nuklear.h	/^    enum nk_symbol_type minimize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_symbol_type
minimum	src/cocoa_joystick.m	/^    long            minimum;$/;"	E	struct:_GLFWjoyelementNS
minor	src/egl_context.h	/^    EGLint          major, minor;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:EGLint
minor	src/glx_context.h	/^    int             major, minor;$/;"	m	struct:_GLFWlibraryGLX	typeref:typename:int
minor	src/internal.h	/^    int                 major, minor, revision;$/;"	m	struct:_GLFWcontext	typeref:typename:int
minor	src/internal.h	/^    int           minor;$/;"	m	struct:_GLFWctxconfig	typeref:typename:int
minor	src/x11_platform.h	/^        int          minor;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00208	typeref:typename:int
minor	src/x11_platform.h	/^        int         minor;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:int
minor	src/x11_platform.h	/^        int         minor;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00608	typeref:typename:int
minor	src/x11_platform.h	/^        int         minor;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00908	typeref:typename:int
minor	src/x11_platform.h	/^        int         minor;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00a08	typeref:typename:int
minwidth	src/internal.h	/^    int                 minwidth, minheight;$/;"	m	struct:_GLFWwindow	typeref:typename:int
mipLevel	deps/glad/vulkan.h	/^    uint32_t                 mipLevel;$/;"	m	struct:VkImageSubresource	typeref:typename:uint32_t
mipLevel	deps/glad/vulkan.h	/^    uint32_t                 mipLevel;$/;"	m	struct:VkImageSubresourceLayers	typeref:typename:uint32_t
mipLevels	deps/glad/vulkan.h	/^    uint32_t                 mipLevels;$/;"	m	struct:VkImageCreateInfo	typeref:typename:uint32_t
mipLodBias	deps/glad/vulkan.h	/^    float                    mipLodBias;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:float
mipmapMode	deps/glad/vulkan.h	/^    VkSamplerMipmapMode      mipmapMode;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkSamplerMipmapMode
mipmapPrecisionBits	deps/glad/vulkan.h	/^    uint32_t                 mipmapPrecisionBits;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
mode	deps/glad/vulkan.h	/^    VkDeviceGroupPresentModeFlagBitsKHR   mode;$/;"	m	struct:VkDeviceGroupPresentInfoKHR	typeref:typename:VkDeviceGroupPresentModeFlagBitsKHR
mode	deps/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned char
mode	deps/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
modeChanged	src/win32_platform.h	/^    GLFWbool            modeChanged;$/;"	m	struct:_GLFWmonitorWin32	typeref:typename:GLFWbool
modeCount	src/internal.h	/^    int             modeCount;$/;"	m	struct:_GLFWmonitor	typeref:typename:int
modeIsGood	src/cocoa_monitor.m	/^static GLFWbool modeIsGood(CGDisplayModeRef mode)$/;"	f
modeIsGood	src/x11_monitor.c	/^static GLFWbool modeIsGood(const XRRModeInfo* mi)$/;"	f	typeref:typename:GLFWbool	file:
modelview_matrix	examples/heightmap.c	/^static GLfloat modelview_matrix[16] = {$/;"	v	typeref:typename:GLfloat[16]	file:
modes	deps/glad/vulkan.h	/^    VkDeviceGroupPresentModeFlagsKHR                           modes;$/;"	m	struct:VkDeviceGroupSwapchainCreateInfoKHR	typeref:typename:VkDeviceGroupPresentModeFlagsKHR
modes	deps/glad/vulkan.h	/^    VkDeviceGroupPresentModeFlagsKHR   modes;$/;"	m	struct:VkDeviceGroupPresentCapabilitiesKHR	typeref:typename:VkDeviceGroupPresentModeFlagsKHR
modes	src/internal.h	/^    GLFWvidmode*    modes;$/;"	m	struct:_GLFWmonitor	typeref:typename:GLFWvidmode *
modesPruned	src/win32_platform.h	/^    GLFWbool            modesPruned;$/;"	m	struct:_GLFWmonitorWin32	typeref:typename:GLFWbool
modifiers	src/wl_platform.h	/^        unsigned int            modifiers;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:unsigned int
module	deps/glad/vulkan.h	/^    VkShaderModule           module;$/;"	m	struct:VkPipelineShaderStageCreateInfo	typeref:typename:VkShaderModule
monitor	src/internal.h	/^        GLFWmonitorfun  monitor;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0a08	typeref:typename:GLFWmonitorfun
monitor	src/internal.h	/^    _GLFWmonitor*       monitor;$/;"	m	struct:_GLFWwindow	typeref:typename:_GLFWmonitor *
monitorBroken	src/x11_platform.h	/^        GLFWbool    monitorBroken;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00108	typeref:typename:GLFWbool
monitorCallback	src/win32_monitor.c	/^static BOOL CALLBACK monitorCallback(HMONITOR handle,$/;"	f	typeref:typename:BOOL CALLBACK	file:
monitorCount	src/internal.h	/^    int                 monitorCount;$/;"	m	struct:_GLFWlibrary	typeref:typename:int
monitor_callback	tests/events.c	/^static void monitor_callback(GLFWmonitor* monitor, int event)$/;"	f	typeref:typename:void	file:
monitors	src/internal.h	/^    _GLFWmonitor**      monitors;$/;"	m	struct:_GLFWlibrary	typeref:typename:_GLFWmonitor **
monitors	src/wl_platform.h	/^    _GLFWmonitor**              monitors;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:_GLFWmonitor **
monitors	tests/CMakeLists.txt	/^add_executable(monitors monitors.c ${GETOPT} ${GLAD_GL})$/;"	t
monitorsCount	src/wl_platform.h	/^    int                         monitorsCount;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:int
monitorsSize	src/wl_platform.h	/^    int                         monitorsSize;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:int
monotonic	src/posix_time.h	/^    GLFWbool    monotonic;$/;"	m	struct:_GLFWtimerPOSIX	typeref:typename:GLFWbool
mouse	deps/nuklear.h	/^    struct nk_mouse mouse;$/;"	m	struct:nk_input	typeref:struct:nk_mouse
mouseButton	src/internal.h	/^        GLFWmousebuttonfun      mouseButton;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWmousebuttonfun
mouseButtonFun	examples/splitview.c	/^static void mouseButtonFun(GLFWwindow* window, int button, int action, int mods)$/;"	f	typeref:typename:void	file:
mouseButtons	src/internal.h	/^    char                mouseButtons[GLFW_MOUSE_BUTTON_LAST + 1];$/;"	m	struct:_GLFWwindow	typeref:typename:char[]
mouseDown:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
mouseDragged:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
mouseEntered:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
mouseExited:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
mouseMoved:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
mouseTrailSize	src/win32_platform.h	/^    UINT                mouseTrailSize;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:UINT
mouseUp:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
mouse_button_callback	examples/boing.c	/^void mouse_button_callback( GLFWwindow* window, int button, int action, int mods )$/;"	f	typeref:typename:void
mouse_button_callback	examples/wave.c	/^void mouse_button_callback(GLFWwindow* window, int button, int action, int mods)$/;"	f	typeref:typename:void
mouse_button_callback	tests/events.c	/^static void mouse_button_callback(GLFWwindow* window, int button, int action, int mods)$/;"	f	typeref:typename:void	file:
msaa	tests/CMakeLists.txt	/^add_executable(msaa msaa.c ${GETOPT} ${GLAD_GL})$/;"	t
msg_callback	tests/triangle-vulkan.c	/^    VkDebugReportCallbackEXT msg_callback;$/;"	m	struct:demo	typeref:typename:VkDebugReportCallbackEXT	file:
mtx_destroy	deps/tinycthread.c	/^void mtx_destroy(mtx_t *mtx)$/;"	f	typeref:typename:void
mtx_init	deps/tinycthread.c	/^int mtx_init(mtx_t *mtx, int type)$/;"	f	typeref:typename:int
mtx_lock	deps/tinycthread.c	/^int mtx_lock(mtx_t *mtx)$/;"	f	typeref:typename:int
mtx_plain	deps/tinycthread.h	/^#define mtx_plain /;"	d
mtx_recursive	deps/tinycthread.h	/^#define mtx_recursive /;"	d
mtx_t	deps/tinycthread.h	/^typedef pthread_mutex_t mtx_t;$/;"	t	typeref:typename:pthread_mutex_t
mtx_t	deps/tinycthread.h	/^} mtx_t;$/;"	t	typeref:struct:__anon92fdd8d50108
mtx_timed	deps/tinycthread.h	/^#define mtx_timed /;"	d
mtx_timedlock	deps/tinycthread.c	/^int mtx_timedlock(mtx_t *mtx, const struct timespec *ts)$/;"	f	typeref:typename:int
mtx_try	deps/tinycthread.h	/^#define mtx_try /;"	d
mtx_trylock	deps/tinycthread.c	/^int mtx_trylock(mtx_t *mtx)$/;"	f	typeref:typename:int
mtx_unlock	deps/tinycthread.c	/^int mtx_unlock(mtx_t *mtx)$/;"	f	typeref:typename:int
multiDrawIndirect	deps/glad/vulkan.h	/^    VkBool32                 multiDrawIndirect;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
multiViewport	deps/glad/vulkan.h	/^    VkBool32                 multiViewport;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
multiview	deps/glad/vulkan.h	/^    VkBool32                           multiview;$/;"	m	struct:VkPhysicalDeviceMultiviewFeatures	typeref:typename:VkBool32
multiviewGeometryShader	deps/glad/vulkan.h	/^    VkBool32                           multiviewGeometryShader;$/;"	m	struct:VkPhysicalDeviceMultiviewFeatures	typeref:typename:VkBool32
multiviewTessellationShader	deps/glad/vulkan.h	/^    VkBool32                           multiviewTessellationShader;$/;"	m	struct:VkPhysicalDeviceMultiviewFeatures	typeref:typename:VkBool32
n	deps/nuklear.h	/^    struct nk_font_config *n;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config *
name	deps/getopt.h	/^  const char* name;$/;"	m	struct:option	typeref:typename:const char *
name	deps/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_edit_state	typeref:typename:nk_hash
name	deps/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_popup_state	typeref:typename:nk_hash
name	deps/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_property_state	typeref:typename:nk_hash
name	deps/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_window	typeref:typename:nk_hash
name	src/input.c	/^        const char* name;$/;"	m	struct:parseMapping::__anona860d25d0108	typeref:typename:const char *	file:
name	src/internal.h	/^    char            name[128];$/;"	m	struct:_GLFWmapping	typeref:typename:char[128]
name	src/internal.h	/^    char*           name;$/;"	m	struct:_GLFWjoystick	typeref:typename:char *
name	src/internal.h	/^    char*           name;$/;"	m	struct:_GLFWmonitor	typeref:typename:char *
name	src/wl_platform.h	/^    char* name;$/;"	m	struct:wl_cursor	typeref:typename:char *
name	src/wl_platform.h	/^    uint32_t                    name;$/;"	m	struct:_GLFWmonitorWayland	typeref:typename:uint32_t
name_string	deps/nuklear.h	/^    char name_string[NK_WINDOW_MAX_NAME];$/;"	m	struct:nk_window	typeref:typename:char[]
native	src/cocoa_joystick.m	/^    IOHIDElementRef native;$/;"	E	struct:_GLFWjoyelementNS
native	src/wl_platform.h	/^    struct wl_egl_window*       native;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:wl_egl_window *
needed	deps/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
needed	deps/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
newLayout	deps/glad/vulkan.h	/^    VkImageLayout            newLayout;$/;"	m	struct:VkImageMemoryBarrier	typeref:typename:VkImageLayout
next	deps/nuklear.h	/^    nk_size next;$/;"	m	struct:nk_command	typeref:typename:nk_size
next	deps/nuklear.h	/^    struct nk_font *next;$/;"	m	struct:nk_font	typeref:struct:nk_font *
next	deps/nuklear.h	/^    struct nk_font_config *next;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config *
next	deps/nuklear.h	/^    struct nk_page *next;$/;"	m	struct:nk_page	typeref:struct:nk_page *
next	deps/nuklear.h	/^    struct nk_page_element *next;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element *
next	deps/nuklear.h	/^    struct nk_rp_node  *next;$/;"	m	struct:nk_rp_node	typeref:struct:nk_rp_node *
next	deps/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table *
next	deps/nuklear.h	/^    struct nk_tt__active_edge *next;$/;"	m	struct:nk_tt__active_edge	typeref:struct:nk_tt__active_edge *
next	deps/nuklear.h	/^    struct nk_tt__hheap_chunk *next;$/;"	m	struct:nk_tt__hheap_chunk	typeref:struct:nk_tt__hheap_chunk *
next	deps/nuklear.h	/^    struct nk_window *next;$/;"	m	struct:nk_window	typeref:struct:nk_window *
next	src/internal.h	/^    _GLFWcursor*    next;$/;"	m	struct:_GLFWcursor	typeref:typename:_GLFWcursor *
next	src/internal.h	/^    _GLFWerror*     next;$/;"	m	struct:_GLFWerror	typeref:typename:_GLFWerror *
next	src/internal.h	/^    struct _GLFWwindow* next;$/;"	m	struct:_GLFWwindow	typeref:struct:_GLFWwindow *
nk__barrier	deps/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__barrier2	deps/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier2;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__barrier3	deps/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier3;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__barrier4	deps/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier4;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__begin	deps/nuklear.h	/^nk__begin(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API const struct nk_command *
nk__dout	deps/nuklear.h	/^NK_GLOBAL unsigned char *nk__dout;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__draw_begin	deps/nuklear.h	/^nk__draw_begin(const struct nk_context *ctx,$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_end	deps/nuklear.h	/^nk__draw_end(const struct nk_context *ctx, const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_list_begin	deps/nuklear.h	/^nk__draw_list_begin(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_list_end	deps/nuklear.h	/^nk__draw_list_end(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_list_next	deps/nuklear.h	/^nk__draw_list_next(const struct nk_draw_command *cmd,$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_next	deps/nuklear.h	/^nk__draw_next(const struct nk_draw_command *cmd,$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__in2	deps/nuklear.h	/^    #define nk__in2(/;"	d
nk__in3	deps/nuklear.h	/^    #define nk__in3(/;"	d
nk__in4	deps/nuklear.h	/^    #define nk__in4(/;"	d
nk__lit	deps/nuklear.h	/^nk__lit(unsigned char *data, unsigned int length)$/;"	f	typeref:typename:NK_INTERN void
nk__match	deps/nuklear.h	/^nk__match(unsigned char *data, unsigned int length)$/;"	f	typeref:typename:NK_INTERN void
nk__next	deps/nuklear.h	/^nk__next(struct nk_context *ctx, const struct nk_command *cmd)$/;"	f	typeref:typename:NK_API const struct nk_command *
nk_add_value	deps/nuklear.h	/^nk_add_value(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_LIB nk_uint *
nk_adler32	deps/nuklear.h	/^nk_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_alignof	deps/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s
nk_allocation_type	deps/nuklear.h	/^enum nk_allocation_type {$/;"	g
nk_allocator	deps/nuklear.h	/^struct nk_allocator {$/;"	s
nk_anti_aliasing	deps/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	g
nk_arg_flags	deps/nuklear.h	/^    enum nk_arg_flags {$/;"	g	function:nk_vsnprintf
nk_arg_type	deps/nuklear.h	/^    enum nk_arg_type {$/;"	g	function:nk_vsnprintf
nk_baked_font	deps/nuklear.h	/^struct nk_baked_font {$/;"	s
nk_baker_align	deps/nuklear.h	/^NK_GLOBAL const nk_size nk_baker_align = NK_ALIGNOF(struct nk_font_baker);$/;"	v	typeref:typename:NK_GLOBAL const nk_size
nk_begin	deps/nuklear.h	/^nk_begin(struct nk_context *ctx, const char *title,$/;"	f	typeref:typename:NK_API int
nk_begin_titled	deps/nuklear.h	/^nk_begin_titled(struct nk_context *ctx, const char *name, const char *title,$/;"	f	typeref:typename:NK_API int
nk_black	deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_black = {0,0,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_blue	deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_blue = {0,0,255,255};$/;"	v	typeref:typename:const struct nk_color
nk_buffer	deps/nuklear.h	/^struct nk_buffer {$/;"	s
nk_buffer_align	deps/nuklear.h	/^nk_buffer_align(void *unaligned,$/;"	f	typeref:typename:NK_LIB void *
nk_buffer_alloc	deps/nuklear.h	/^nk_buffer_alloc(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f	typeref:typename:NK_LIB void *
nk_buffer_allocation_type	deps/nuklear.h	/^enum nk_buffer_allocation_type {$/;"	g
nk_buffer_clear	deps/nuklear.h	/^nk_buffer_clear(struct nk_buffer *b)$/;"	f	typeref:typename:NK_API void
nk_buffer_free	deps/nuklear.h	/^nk_buffer_free(struct nk_buffer *b)$/;"	f	typeref:typename:NK_API void
nk_buffer_info	deps/nuklear.h	/^nk_buffer_info(struct nk_memory_status *s, struct nk_buffer *b)$/;"	f	typeref:typename:NK_API void
nk_buffer_init	deps/nuklear.h	/^nk_buffer_init(struct nk_buffer *b, const struct nk_allocator *a,$/;"	f	typeref:typename:NK_API void
nk_buffer_init_default	deps/nuklear.h	/^nk_buffer_init_default(struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API void
nk_buffer_init_fixed	deps/nuklear.h	/^nk_buffer_init_fixed(struct nk_buffer *b, void *m, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_buffer_mark	deps/nuklear.h	/^nk_buffer_mark(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f	typeref:typename:NK_API void
nk_buffer_marker	deps/nuklear.h	/^struct nk_buffer_marker {$/;"	s
nk_buffer_memory	deps/nuklear.h	/^nk_buffer_memory(struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API void *
nk_buffer_memory_const	deps/nuklear.h	/^nk_buffer_memory_const(const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const void *
nk_buffer_push	deps/nuklear.h	/^nk_buffer_push(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f	typeref:typename:NK_API void
nk_buffer_realloc	deps/nuklear.h	/^nk_buffer_realloc(struct nk_buffer *b, nk_size capacity, nk_size *size)$/;"	f	typeref:typename:NK_LIB void *
nk_buffer_reset	deps/nuklear.h	/^nk_buffer_reset(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f	typeref:typename:NK_API void
nk_buffer_total	deps/nuklear.h	/^nk_buffer_total(struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API nk_size
nk_build	deps/nuklear.h	/^nk_build(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_build_align	deps/nuklear.h	/^NK_GLOBAL const nk_size nk_build_align = NK_ALIGNOF(struct nk_font_bake_data);$/;"	v	typeref:typename:NK_GLOBAL const nk_size
nk_button_behavior	deps/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	g
nk_button_behavior	deps/nuklear.h	/^nk_button_behavior(nk_flags *state, struct nk_rect r,$/;"	f	typeref:typename:NK_LIB int
nk_button_color	deps/nuklear.h	/^nk_button_color(struct nk_context *ctx, struct nk_color color)$/;"	f	typeref:typename:NK_API int
nk_button_image	deps/nuklear.h	/^nk_button_image(struct nk_context *ctx, struct nk_image img)$/;"	f	typeref:typename:NK_API int
nk_button_image_label	deps/nuklear.h	/^NK_API int nk_button_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_button_image_label_styled	deps/nuklear.h	/^NK_API int nk_button_image_label_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_image_styled	deps/nuklear.h	/^nk_button_image_styled(struct nk_context *ctx, const struct nk_style_button *style,$/;"	f	typeref:typename:NK_API int
nk_button_image_text	deps/nuklear.h	/^nk_button_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_button_image_text_styled	deps/nuklear.h	/^nk_button_image_text_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_label	deps/nuklear.h	/^NK_API int nk_button_label(struct nk_context *ctx, const char *title)$/;"	f	typeref:typename:NK_API int
nk_button_label_styled	deps/nuklear.h	/^NK_API int nk_button_label_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_pop_behavior	deps/nuklear.h	/^nk_button_pop_behavior(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_button_push_behavior	deps/nuklear.h	/^nk_button_push_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f	typeref:typename:NK_API int
nk_button_set_behavior	deps/nuklear.h	/^nk_button_set_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f	typeref:typename:NK_API void
nk_button_symbol	deps/nuklear.h	/^nk_button_symbol(struct nk_context *ctx, enum nk_symbol_type symbol)$/;"	f	typeref:typename:NK_API int
nk_button_symbol_label	deps/nuklear.h	/^NK_API int nk_button_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_label_styled	deps/nuklear.h	/^NK_API int nk_button_symbol_label_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_styled	deps/nuklear.h	/^nk_button_symbol_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_text	deps/nuklear.h	/^nk_button_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_text_styled	deps/nuklear.h	/^nk_button_symbol_text_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_text	deps/nuklear.h	/^nk_button_text(struct nk_context *ctx, const char *title, int len)$/;"	f	typeref:typename:NK_API int
nk_button_text_styled	deps/nuklear.h	/^nk_button_text_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_buttons	deps/nuklear.h	/^enum nk_buttons {$/;"	g
nk_byte	deps/nuklear.h	/^typedef NK_UINT8 nk_byte;$/;"	t	typeref:typename:NK_UINT8
nk_char	deps/nuklear.h	/^typedef NK_INT8 nk_char;$/;"	t	typeref:typename:NK_INT8
nk_char_align	deps/nuklear.h	/^NK_GLOBAL const nk_size nk_char_align = NK_ALIGNOF(struct nk_tt_packedchar);$/;"	v	typeref:typename:NK_GLOBAL const nk_size
nk_chart	deps/nuklear.h	/^struct nk_chart {$/;"	s
nk_chart_add_slot	deps/nuklear.h	/^nk_chart_add_slot(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f	typeref:typename:NK_API void
nk_chart_add_slot_colored	deps/nuklear.h	/^nk_chart_add_slot_colored(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f	typeref:typename:NK_API void
nk_chart_begin	deps/nuklear.h	/^nk_chart_begin(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f	typeref:typename:NK_API int
nk_chart_begin_colored	deps/nuklear.h	/^nk_chart_begin_colored(struct nk_context *ctx, enum nk_chart_type type,$/;"	f	typeref:typename:NK_API int
nk_chart_end	deps/nuklear.h	/^nk_chart_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_chart_event	deps/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	g
nk_chart_push	deps/nuklear.h	/^nk_chart_push(struct nk_context *ctx, float value)$/;"	f	typeref:typename:NK_API nk_flags
nk_chart_push_column	deps/nuklear.h	/^nk_chart_push_column(const struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN nk_flags
nk_chart_push_line	deps/nuklear.h	/^nk_chart_push_line(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN nk_flags
nk_chart_push_slot	deps/nuklear.h	/^nk_chart_push_slot(struct nk_context *ctx, float value, int slot)$/;"	f	typeref:typename:NK_API nk_flags
nk_chart_slot	deps/nuklear.h	/^struct nk_chart_slot {$/;"	s
nk_chart_type	deps/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	g
nk_check_flags_label	deps/nuklear.h	/^NK_API unsigned int nk_check_flags_label(struct nk_context *ctx, const char *label,$/;"	f	typeref:typename:NK_API unsigned int
nk_check_flags_text	deps/nuklear.h	/^nk_check_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f	typeref:typename:NK_API unsigned int
nk_check_label	deps/nuklear.h	/^NK_API int nk_check_label(struct nk_context *ctx, const char *label, int active)$/;"	f	typeref:typename:NK_API int
nk_check_text	deps/nuklear.h	/^nk_check_text(struct nk_context *ctx, const char *text, int len, int active)$/;"	f	typeref:typename:NK_API int
nk_checkbox_flags_label	deps/nuklear.h	/^NK_API int nk_checkbox_flags_label(struct nk_context *ctx, const char *label,$/;"	f	typeref:typename:NK_API int
nk_checkbox_flags_text	deps/nuklear.h	/^nk_checkbox_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f	typeref:typename:NK_API int
nk_checkbox_label	deps/nuklear.h	/^NK_API int nk_checkbox_label(struct nk_context *ctx, const char *label, int *active)$/;"	f	typeref:typename:NK_API int
nk_checkbox_text	deps/nuklear.h	/^nk_checkbox_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f	typeref:typename:NK_API int
nk_clear	deps/nuklear.h	/^nk_clear(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_clipboard	deps/nuklear.h	/^struct nk_clipboard {$/;"	s
nk_collapse_states	deps/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	g
nk_color	deps/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	s
nk_color_cf	deps/nuklear.h	/^nk_color_cf(struct nk_color in)$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_color_d	deps/nuklear.h	/^nk_color_d(double *r, double *g, double *b, double *a, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_dv	deps/nuklear.h	/^nk_color_dv(double *c, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_f	deps/nuklear.h	/^nk_color_f(float *r, float *g, float *b, float *a, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_format	deps/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	g
nk_color_fv	deps/nuklear.h	/^nk_color_fv(float *c, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hex_rgb	deps/nuklear.h	/^nk_color_hex_rgb(char *output, struct nk_color col)$/;"	f	typeref:typename:NK_API void
nk_color_hex_rgba	deps/nuklear.h	/^nk_color_hex_rgba(char *output, struct nk_color col)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_b	deps/nuklear.h	/^nk_color_hsv_b(nk_byte *out_h, nk_byte *out_s, nk_byte *out_v, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_bv	deps/nuklear.h	/^nk_color_hsv_bv(nk_byte *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_f	deps/nuklear.h	/^nk_color_hsv_f(float *out_h, float *out_s, float *out_v, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_fv	deps/nuklear.h	/^nk_color_hsv_fv(float *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_i	deps/nuklear.h	/^nk_color_hsv_i(int *out_h, int *out_s, int *out_v, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_iv	deps/nuklear.h	/^nk_color_hsv_iv(int *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_b	deps/nuklear.h	/^nk_color_hsva_b(nk_byte *h, nk_byte *s, nk_byte *v, nk_byte *a, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_bv	deps/nuklear.h	/^nk_color_hsva_bv(nk_byte *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_f	deps/nuklear.h	/^nk_color_hsva_f(float *out_h, float *out_s,$/;"	f	typeref:typename:NK_API void
nk_color_hsva_fv	deps/nuklear.h	/^nk_color_hsva_fv(float *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_i	deps/nuklear.h	/^nk_color_hsva_i(int *out_h, int *out_s, int *out_v,$/;"	f	typeref:typename:NK_API void
nk_color_hsva_iv	deps/nuklear.h	/^nk_color_hsva_iv(int *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_names	deps/nuklear.h	/^NK_GLOBAL const char *nk_color_names[NK_COLOR_COUNT] = {$/;"	v	typeref:typename:NK_GLOBAL const char * []
nk_color_pick	deps/nuklear.h	/^nk_color_pick(struct nk_context * ctx, struct nk_colorf *color,$/;"	f	typeref:typename:NK_API int
nk_color_picker	deps/nuklear.h	/^nk_color_picker(struct nk_context *ctx, struct nk_colorf color,$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_color_picker_behavior	deps/nuklear.h	/^nk_color_picker_behavior(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_color_u32	deps/nuklear.h	/^nk_color_u32(struct nk_color in)$/;"	f	typeref:typename:NK_API nk_uint
nk_colorf	deps/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	s
nk_colorf_hsva_f	deps/nuklear.h	/^nk_colorf_hsva_f(float *out_h, float *out_s,$/;"	f	typeref:typename:NK_API void
nk_colorf_hsva_fv	deps/nuklear.h	/^nk_colorf_hsva_fv(float *hsva, struct nk_colorf in)$/;"	f	typeref:typename:NK_API void
nk_combo	deps/nuklear.h	/^nk_combo(struct nk_context *ctx, const char **items, int count,$/;"	f	typeref:typename:NK_API int
nk_combo_begin	deps/nuklear.h	/^nk_combo_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN int
nk_combo_begin_color	deps/nuklear.h	/^nk_combo_begin_color(struct nk_context *ctx, struct nk_color color, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_image	deps/nuklear.h	/^nk_combo_begin_image(struct nk_context *ctx, struct nk_image img, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_image_label	deps/nuklear.h	/^nk_combo_begin_image_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_image_text	deps/nuklear.h	/^nk_combo_begin_image_text(struct nk_context *ctx, const char *selected, int len,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_label	deps/nuklear.h	/^nk_combo_begin_label(struct nk_context *ctx, const char *selected, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_symbol	deps/nuklear.h	/^nk_combo_begin_symbol(struct nk_context *ctx, enum nk_symbol_type symbol, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_symbol_label	deps/nuklear.h	/^nk_combo_begin_symbol_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_symbol_text	deps/nuklear.h	/^nk_combo_begin_symbol_text(struct nk_context *ctx, const char *selected, int len,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_text	deps/nuklear.h	/^nk_combo_begin_text(struct nk_context *ctx, const char *selected, int len,$/;"	f	typeref:typename:NK_API int
nk_combo_callback	deps/nuklear.h	/^nk_combo_callback(struct nk_context *ctx, void(*item_getter)(void*, int, const char**),$/;"	f	typeref:typename:NK_API int
nk_combo_close	deps/nuklear.h	/^NK_API void nk_combo_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_combo_end	deps/nuklear.h	/^NK_API void nk_combo_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_combo_item_image_label	deps/nuklear.h	/^nk_combo_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_combo_item_image_text	deps/nuklear.h	/^nk_combo_item_image_text(struct nk_context *ctx, struct nk_image img, const char *text,$/;"	f	typeref:typename:NK_API int
nk_combo_item_label	deps/nuklear.h	/^nk_combo_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_combo_item_symbol_label	deps/nuklear.h	/^nk_combo_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_combo_item_symbol_text	deps/nuklear.h	/^nk_combo_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_combo_item_text	deps/nuklear.h	/^nk_combo_item_text(struct nk_context *ctx, const char *text, int len,nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_combo_separator	deps/nuklear.h	/^nk_combo_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f	typeref:typename:NK_API int
nk_combo_string	deps/nuklear.h	/^nk_combo_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f	typeref:typename:NK_API int
nk_combobox	deps/nuklear.h	/^nk_combobox(struct nk_context *ctx, const char **items, int count,$/;"	f	typeref:typename:NK_API void
nk_combobox_callback	deps/nuklear.h	/^nk_combobox_callback(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_combobox_separator	deps/nuklear.h	/^nk_combobox_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f	typeref:typename:NK_API void
nk_combobox_string	deps/nuklear.h	/^nk_combobox_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f	typeref:typename:NK_API void
nk_command	deps/nuklear.h	/^struct nk_command {$/;"	s
nk_command_arc	deps/nuklear.h	/^struct nk_command_arc {$/;"	s
nk_command_arc_filled	deps/nuklear.h	/^struct nk_command_arc_filled {$/;"	s
nk_command_buffer	deps/nuklear.h	/^struct nk_command_buffer {$/;"	s
nk_command_buffer_init	deps/nuklear.h	/^nk_command_buffer_init(struct nk_command_buffer *cb,$/;"	f	typeref:typename:NK_LIB void
nk_command_buffer_push	deps/nuklear.h	/^nk_command_buffer_push(struct nk_command_buffer* b,$/;"	f	typeref:typename:NK_LIB void *
nk_command_buffer_reset	deps/nuklear.h	/^nk_command_buffer_reset(struct nk_command_buffer *b)$/;"	f	typeref:typename:NK_LIB void
nk_command_circle	deps/nuklear.h	/^struct nk_command_circle {$/;"	s
nk_command_circle_filled	deps/nuklear.h	/^struct nk_command_circle_filled {$/;"	s
nk_command_clipping	deps/nuklear.h	/^enum nk_command_clipping {$/;"	g
nk_command_curve	deps/nuklear.h	/^struct nk_command_curve {$/;"	s
nk_command_custom	deps/nuklear.h	/^struct nk_command_custom {$/;"	s
nk_command_custom_callback	deps/nuklear.h	/^typedef void (*nk_command_custom_callback)(void *canvas, short x,short y,$/;"	t	typeref:typename:void (*)(void * canvas,short x,short y,unsigned short w,unsigned short h,nk_handle callback_data)
nk_command_image	deps/nuklear.h	/^struct nk_command_image {$/;"	s
nk_command_line	deps/nuklear.h	/^struct nk_command_line {$/;"	s
nk_command_polygon	deps/nuklear.h	/^struct nk_command_polygon {$/;"	s
nk_command_polygon_filled	deps/nuklear.h	/^struct nk_command_polygon_filled {$/;"	s
nk_command_polyline	deps/nuklear.h	/^struct nk_command_polyline {$/;"	s
nk_command_rect	deps/nuklear.h	/^struct nk_command_rect {$/;"	s
nk_command_rect_filled	deps/nuklear.h	/^struct nk_command_rect_filled {$/;"	s
nk_command_rect_multi_color	deps/nuklear.h	/^struct nk_command_rect_multi_color {$/;"	s
nk_command_scissor	deps/nuklear.h	/^struct nk_command_scissor {$/;"	s
nk_command_text	deps/nuklear.h	/^struct nk_command_text {$/;"	s
nk_command_triangle	deps/nuklear.h	/^struct nk_command_triangle {$/;"	s
nk_command_triangle_filled	deps/nuklear.h	/^struct nk_command_triangle_filled {$/;"	s
nk_command_type	deps/nuklear.h	/^enum nk_command_type {$/;"	g
nk_configuration_stacks	deps/nuklear.h	/^struct nk_configuration_stacks {$/;"	s
nk_context	deps/nuklear.h	/^struct nk_context {$/;"	s
nk_contextual_begin	deps/nuklear.h	/^nk_contextual_begin(struct nk_context *ctx, nk_flags flags, struct nk_vec2 size,$/;"	f	typeref:typename:NK_API int
nk_contextual_close	deps/nuklear.h	/^nk_contextual_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_contextual_end	deps/nuklear.h	/^nk_contextual_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_contextual_item_image_label	deps/nuklear.h	/^nk_contextual_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_image_text	deps/nuklear.h	/^nk_contextual_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_label	deps/nuklear.h	/^nk_contextual_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_contextual_item_symbol_label	deps/nuklear.h	/^nk_contextual_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_symbol_text	deps/nuklear.h	/^nk_contextual_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_text	deps/nuklear.h	/^nk_contextual_item_text(struct nk_context *ctx, const char *text, int len,$/;"	f	typeref:typename:NK_API int
nk_convert	deps/nuklear.h	/^nk_convert(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f	typeref:typename:NK_API nk_flags
nk_convert_config	deps/nuklear.h	/^struct nk_convert_config {$/;"	s
nk_convert_result	deps/nuklear.h	/^enum nk_convert_result {$/;"	g
nk_cos	deps/nuklear.h	/^nk_cos(float x)$/;"	f	typeref:typename:NK_LIB float
nk_create_page_element	deps/nuklear.h	/^nk_create_page_element(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB struct nk_page_element *
nk_create_panel	deps/nuklear.h	/^nk_create_panel(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void *
nk_create_table	deps/nuklear.h	/^nk_create_table(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB struct nk_table *
nk_create_window	deps/nuklear.h	/^nk_create_window(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void *
nk_cursor	deps/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	s
nk_custom_cursor_data	deps/nuklear.h	/^NK_GLOBAL const char nk_custom_cursor_data[NK_CURSOR_DATA_W * NK_CURSOR_DATA_H + 1] =$/;"	v	typeref:typename:NK_GLOBAL const char[]
nk_decode_85	deps/nuklear.h	/^nk_decode_85(unsigned char* dst, const unsigned char* src)$/;"	f	typeref:typename:NK_INTERN void
nk_decode_85_byte	deps/nuklear.h	/^nk_decode_85_byte(char c)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_decompress	deps/nuklear.h	/^nk_decompress(unsigned char *output, unsigned char *i, unsigned int length)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_decompress_length	deps/nuklear.h	/^nk_decompress_length(unsigned char *input)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_decompress_token	deps/nuklear.h	/^nk_decompress_token(unsigned char *i)$/;"	f	typeref:typename:NK_INTERN unsigned char *
nk_default_color_style	deps/nuklear.h	/^nk_default_color_style[NK_COLOR_COUNT] = {$/;"	v	typeref:typename:const struct nk_color[]
nk_do_button	deps/nuklear.h	/^nk_do_button(nk_flags *state, struct nk_command_buffer *out, struct nk_rect r,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_image	deps/nuklear.h	/^nk_do_button_image(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_symbol	deps/nuklear.h	/^nk_do_button_symbol(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_text	deps/nuklear.h	/^nk_do_button_text(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_text_image	deps/nuklear.h	/^nk_do_button_text_image(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_text_symbol	deps/nuklear.h	/^nk_do_button_text_symbol(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_color_picker	deps/nuklear.h	/^nk_do_color_picker(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_edit	deps/nuklear.h	/^nk_do_edit(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB nk_flags
nk_do_progress	deps/nuklear.h	/^nk_do_progress(nk_flags *state,$/;"	f	typeref:typename:NK_LIB nk_size
nk_do_property	deps/nuklear.h	/^nk_do_property(nk_flags *ws,$/;"	f	typeref:typename:NK_LIB void
nk_do_scrollbarh	deps/nuklear.h	/^nk_do_scrollbarh(nk_flags *state,$/;"	f	typeref:typename:NK_LIB float
nk_do_scrollbarv	deps/nuklear.h	/^nk_do_scrollbarv(nk_flags *state,$/;"	f	typeref:typename:NK_LIB float
nk_do_selectable	deps/nuklear.h	/^nk_do_selectable(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB int
nk_do_selectable_image	deps/nuklear.h	/^nk_do_selectable_image(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB int
nk_do_selectable_symbol	deps/nuklear.h	/^nk_do_selectable_symbol(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB int
nk_do_slider	deps/nuklear.h	/^nk_do_slider(nk_flags *state,$/;"	f	typeref:typename:NK_LIB float
nk_do_toggle	deps/nuklear.h	/^nk_do_toggle(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_drag_behavior	deps/nuklear.h	/^nk_drag_behavior(nk_flags *state, const struct nk_input *in,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button	deps/nuklear.h	/^nk_draw_button(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB const struct nk_style_item *
nk_draw_button_image	deps/nuklear.h	/^nk_draw_button_image(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_symbol	deps/nuklear.h	/^nk_draw_button_symbol(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_text	deps/nuklear.h	/^nk_draw_button_text(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_text_image	deps/nuklear.h	/^nk_draw_button_text_image(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_text_symbol	deps/nuklear.h	/^nk_draw_button_text_symbol(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_checkbox	deps/nuklear.h	/^nk_draw_checkbox(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_color_picker	deps/nuklear.h	/^nk_draw_color_picker(struct nk_command_buffer *o, const struct nk_rect *matrix,$/;"	f	typeref:typename:NK_LIB void
nk_draw_command	deps/nuklear.h	/^struct nk_draw_command {$/;"	s
nk_draw_foreach	deps/nuklear.h	/^#define nk_draw_foreach(/;"	d
nk_draw_image	deps/nuklear.h	/^nk_draw_image(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_draw_index	deps/nuklear.h	/^typedef nk_ushort nk_draw_index;$/;"	t	typeref:typename:nk_ushort
nk_draw_list	deps/nuklear.h	/^struct nk_draw_list {$/;"	s
nk_draw_list_add_clip	deps/nuklear.h	/^nk_draw_list_add_clip(struct nk_draw_list *list, struct nk_rect rect)$/;"	f	typeref:typename:NK_INTERN void
nk_draw_list_add_image	deps/nuklear.h	/^nk_draw_list_add_image(struct nk_draw_list *list, struct nk_image texture,$/;"	f	typeref:typename:NK_API void
nk_draw_list_add_text	deps/nuklear.h	/^nk_draw_list_add_text(struct nk_draw_list *list, const struct nk_user_font *font,$/;"	f	typeref:typename:NK_API void
nk_draw_list_alloc_elements	deps/nuklear.h	/^nk_draw_list_alloc_elements(struct nk_draw_list *list, nk_size count)$/;"	f	typeref:typename:NK_INTERN nk_draw_index *
nk_draw_list_alloc_path	deps/nuklear.h	/^nk_draw_list_alloc_path(struct nk_draw_list *list, int count)$/;"	f	typeref:typename:NK_INTERN struct nk_vec2 *
nk_draw_list_alloc_vertices	deps/nuklear.h	/^nk_draw_list_alloc_vertices(struct nk_draw_list *list, nk_size count)$/;"	f	typeref:typename:NK_INTERN void *
nk_draw_list_command_last	deps/nuklear.h	/^nk_draw_list_command_last(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_INTERN struct nk_draw_command *
nk_draw_list_fill_circle	deps/nuklear.h	/^nk_draw_list_fill_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_poly_convex	deps/nuklear.h	/^nk_draw_list_fill_poly_convex(struct nk_draw_list *list,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_rect	deps/nuklear.h	/^nk_draw_list_fill_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_rect_multi_color	deps/nuklear.h	/^nk_draw_list_fill_rect_multi_color(struct nk_draw_list *list, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_triangle	deps/nuklear.h	/^nk_draw_list_fill_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_list_foreach	deps/nuklear.h	/^#define nk_draw_list_foreach(/;"	d
nk_draw_list_init	deps/nuklear.h	/^nk_draw_list_init(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_arc_to	deps/nuklear.h	/^nk_draw_list_path_arc_to(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_arc_to_fast	deps/nuklear.h	/^nk_draw_list_path_arc_to_fast(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_clear	deps/nuklear.h	/^nk_draw_list_path_clear(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_curve_to	deps/nuklear.h	/^nk_draw_list_path_curve_to(struct nk_draw_list *list, struct nk_vec2 p2,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_fill	deps/nuklear.h	/^nk_draw_list_path_fill(struct nk_draw_list *list, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_last	deps/nuklear.h	/^nk_draw_list_path_last(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_INTERN struct nk_vec2
nk_draw_list_path_line_to	deps/nuklear.h	/^nk_draw_list_path_line_to(struct nk_draw_list *list, struct nk_vec2 pos)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_rect_to	deps/nuklear.h	/^nk_draw_list_path_rect_to(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_stroke	deps/nuklear.h	/^nk_draw_list_path_stroke(struct nk_draw_list *list, struct nk_color color,$/;"	f	typeref:typename:NK_API void
nk_draw_list_push_command	deps/nuklear.h	/^nk_draw_list_push_command(struct nk_draw_list *list, struct nk_rect clip,$/;"	f	typeref:typename:NK_INTERN struct nk_draw_command *
nk_draw_list_push_image	deps/nuklear.h	/^nk_draw_list_push_image(struct nk_draw_list *list, nk_handle texture)$/;"	f	typeref:typename:NK_INTERN void
nk_draw_list_push_rect_uv	deps/nuklear.h	/^nk_draw_list_push_rect_uv(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_INTERN void
nk_draw_list_push_userdata	deps/nuklear.h	/^nk_draw_list_push_userdata(struct nk_draw_list *list, nk_handle userdata)$/;"	f	typeref:typename:NK_API void
nk_draw_list_setup	deps/nuklear.h	/^nk_draw_list_setup(struct nk_draw_list *canvas, const struct nk_convert_config *config,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke	deps/nuklear.h	/^enum nk_draw_list_stroke {$/;"	g
nk_draw_list_stroke_circle	deps/nuklear.h	/^nk_draw_list_stroke_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_curve	deps/nuklear.h	/^nk_draw_list_stroke_curve(struct nk_draw_list *list, struct nk_vec2 p0,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_line	deps/nuklear.h	/^nk_draw_list_stroke_line(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_poly_line	deps/nuklear.h	/^nk_draw_list_stroke_poly_line(struct nk_draw_list *list, const struct nk_vec2 *points,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_rect	deps/nuklear.h	/^nk_draw_list_stroke_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_triangle	deps/nuklear.h	/^nk_draw_list_stroke_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_null_texture	deps/nuklear.h	/^struct nk_draw_null_texture {$/;"	s
nk_draw_option	deps/nuklear.h	/^nk_draw_option(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_progress	deps/nuklear.h	/^nk_draw_progress(struct nk_command_buffer *out, nk_flags state,$/;"	f	typeref:typename:NK_LIB void
nk_draw_property	deps/nuklear.h	/^nk_draw_property(struct nk_command_buffer *out, const struct nk_style_property *style,$/;"	f	typeref:typename:NK_LIB void
nk_draw_scrollbar	deps/nuklear.h	/^nk_draw_scrollbar(struct nk_command_buffer *out, nk_flags state,$/;"	f	typeref:typename:NK_LIB void
nk_draw_selectable	deps/nuklear.h	/^nk_draw_selectable(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_slider	deps/nuklear.h	/^nk_draw_slider(struct nk_command_buffer *out, nk_flags state,$/;"	f	typeref:typename:NK_LIB void
nk_draw_symbol	deps/nuklear.h	/^nk_draw_symbol(struct nk_command_buffer *out, enum nk_symbol_type type,$/;"	f	typeref:typename:NK_LIB void
nk_draw_text	deps/nuklear.h	/^nk_draw_text(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_draw_vertex	deps/nuklear.h	/^nk_draw_vertex(void *dst, const struct nk_convert_config *config,$/;"	f	typeref:typename:NK_INTERN void *
nk_draw_vertex_color	deps/nuklear.h	/^nk_draw_vertex_color(void *attr, const float *vals,$/;"	f	typeref:typename:NK_INTERN void
nk_draw_vertex_element	deps/nuklear.h	/^nk_draw_vertex_element(void *dst, const float *values, int value_count,$/;"	f	typeref:typename:NK_INTERN void
nk_draw_vertex_layout_attribute	deps/nuklear.h	/^enum nk_draw_vertex_layout_attribute {$/;"	g
nk_draw_vertex_layout_element	deps/nuklear.h	/^struct nk_draw_vertex_layout_element {$/;"	s
nk_draw_vertex_layout_element_is_end_of_layout	deps/nuklear.h	/^nk_draw_vertex_layout_element_is_end_of_layout($/;"	f	typeref:typename:NK_INTERN int
nk_draw_vertex_layout_format	deps/nuklear.h	/^enum nk_draw_vertex_layout_format {$/;"	g
nk_dtoa	deps/nuklear.h	/^nk_dtoa(char *s, double n)$/;"	f	typeref:typename:NK_LIB char *
nk_edit_buffer	deps/nuklear.h	/^nk_edit_buffer(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API nk_flags
nk_edit_draw_text	deps/nuklear.h	/^nk_edit_draw_text(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_edit_events	deps/nuklear.h	/^enum nk_edit_events {$/;"	g
nk_edit_flags	deps/nuklear.h	/^enum nk_edit_flags {$/;"	g
nk_edit_focus	deps/nuklear.h	/^nk_edit_focus(struct nk_context *ctx, nk_flags flags)$/;"	f	typeref:typename:NK_API void
nk_edit_state	deps/nuklear.h	/^struct nk_edit_state {$/;"	s
nk_edit_string	deps/nuklear.h	/^nk_edit_string(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API nk_flags
nk_edit_string_zero_terminated	deps/nuklear.h	/^nk_edit_string_zero_terminated(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API nk_flags
nk_edit_types	deps/nuklear.h	/^enum nk_edit_types {$/;"	g
nk_edit_unfocus	deps/nuklear.h	/^nk_edit_unfocus(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_end	deps/nuklear.h	/^nk_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_false	deps/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anonca7851080103
nk_file_load	deps/nuklear.h	/^nk_file_load(const char* path, nk_size* siz, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_LIB char *
nk_fill_arc	deps/nuklear.h	/^nk_fill_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f	typeref:typename:NK_API void
nk_fill_circle	deps/nuklear.h	/^nk_fill_circle(struct nk_command_buffer *b, struct nk_rect r, struct nk_color c)$/;"	f	typeref:typename:NK_API void
nk_fill_polygon	deps/nuklear.h	/^nk_fill_polygon(struct nk_command_buffer *b, float *points, int point_count,$/;"	f	typeref:typename:NK_API void
nk_fill_rect	deps/nuklear.h	/^nk_fill_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_fill_rect_multi_color	deps/nuklear.h	/^nk_fill_rect_multi_color(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_fill_triangle	deps/nuklear.h	/^nk_fill_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f	typeref:typename:NK_API void
nk_filter_ascii	deps/nuklear.h	/^nk_filter_ascii(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_binary	deps/nuklear.h	/^nk_filter_binary(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_decimal	deps/nuklear.h	/^nk_filter_decimal(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_default	deps/nuklear.h	/^nk_filter_default(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_float	deps/nuklear.h	/^nk_filter_float(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_hex	deps/nuklear.h	/^nk_filter_hex(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_oct	deps/nuklear.h	/^nk_filter_oct(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_find_value	deps/nuklear.h	/^nk_find_value(struct nk_window *win, nk_hash name)$/;"	f	typeref:typename:NK_LIB nk_uint *
nk_find_window	deps/nuklear.h	/^nk_find_window(struct nk_context *ctx, nk_hash hash, const char *name)$/;"	f	typeref:typename:NK_LIB struct nk_window *
nk_finish	deps/nuklear.h	/^nk_finish(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_finish_buffer	deps/nuklear.h	/^nk_finish_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f	typeref:typename:NK_LIB void
nk_finish_popup	deps/nuklear.h	/^nk_finish_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_flags	deps/nuklear.h	/^typedef nk_uint nk_flags;$/;"	t	typeref:typename:nk_uint
nk_float	deps/nuklear.h	/^#define nk_float /;"	d
nk_font	deps/nuklear.h	/^struct nk_font {$/;"	s
nk_font_atlas	deps/nuklear.h	/^struct nk_font_atlas {$/;"	s
nk_font_atlas_add	deps/nuklear.h	/^nk_font_atlas_add(struct nk_font_atlas *atlas, const struct nk_font_config *config)$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_compressed	deps/nuklear.h	/^nk_font_atlas_add_compressed(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_compressed_base85	deps/nuklear.h	/^nk_font_atlas_add_compressed_base85(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_default	deps/nuklear.h	/^nk_font_atlas_add_default(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_from_file	deps/nuklear.h	/^nk_font_atlas_add_from_file(struct nk_font_atlas *atlas, const char *file_path,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_from_memory	deps/nuklear.h	/^nk_font_atlas_add_from_memory(struct nk_font_atlas *atlas, void *memory,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_bake	deps/nuklear.h	/^nk_font_atlas_bake(struct nk_font_atlas *atlas, int *width, int *height,$/;"	f	typeref:typename:NK_API const void *
nk_font_atlas_begin	deps/nuklear.h	/^nk_font_atlas_begin(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_cleanup	deps/nuklear.h	/^nk_font_atlas_cleanup(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_clear	deps/nuklear.h	/^nk_font_atlas_clear(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_end	deps/nuklear.h	/^nk_font_atlas_end(struct nk_font_atlas *atlas, nk_handle texture,$/;"	f	typeref:typename:NK_API void
nk_font_atlas_format	deps/nuklear.h	/^enum nk_font_atlas_format {$/;"	g
nk_font_atlas_init	deps/nuklear.h	/^nk_font_atlas_init(struct nk_font_atlas *atlas, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_init_custom	deps/nuklear.h	/^nk_font_atlas_init_custom(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API void
nk_font_atlas_init_default	deps/nuklear.h	/^nk_font_atlas_init_default(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_bake	deps/nuklear.h	/^nk_font_bake(struct nk_font_baker *baker, void *image_memory, int width, int height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_bake_convert	deps/nuklear.h	/^nk_font_bake_convert(void *out_memory, int img_width, int img_height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_bake_custom_data	deps/nuklear.h	/^nk_font_bake_custom_data(void *img_memory, int img_width, int img_height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_bake_data	deps/nuklear.h	/^struct nk_font_bake_data {$/;"	s
nk_font_bake_pack	deps/nuklear.h	/^nk_font_bake_pack(struct nk_font_baker *baker,$/;"	f	typeref:typename:NK_INTERN int
nk_font_baker	deps/nuklear.h	/^nk_font_baker(void *memory, int glyph_count, int count, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_INTERN struct nk_font_baker *
nk_font_baker	deps/nuklear.h	/^struct nk_font_baker {$/;"	s
nk_font_baker_memory	deps/nuklear.h	/^nk_font_baker_memory(nk_size *temp, int *glyph_count,$/;"	f	typeref:typename:NK_INTERN void
nk_font_chinese_glyph_ranges	deps/nuklear.h	/^nk_font_chinese_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_config	deps/nuklear.h	/^nk_font_config(float pixel_height)$/;"	f	typeref:typename:NK_API struct nk_font_config
nk_font_config	deps/nuklear.h	/^struct nk_font_config {$/;"	s
nk_font_coord_type	deps/nuklear.h	/^enum nk_font_coord_type {$/;"	g
nk_font_cyrillic_glyph_ranges	deps/nuklear.h	/^nk_font_cyrillic_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_default_glyph_ranges	deps/nuklear.h	/^nk_font_default_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_find_glyph	deps/nuklear.h	/^nk_font_find_glyph(struct nk_font *font, nk_rune unicode)$/;"	f	typeref:typename:NK_API const struct nk_font_glyph *
nk_font_glyph	deps/nuklear.h	/^struct nk_font_glyph {$/;"	s
nk_font_init	deps/nuklear.h	/^nk_font_init(struct nk_font *font, float pixel_height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_korean_glyph_ranges	deps/nuklear.h	/^nk_font_korean_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_query_font_glyph	deps/nuklear.h	/^nk_font_query_font_glyph(nk_handle handle, float height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_text_width	deps/nuklear.h	/^nk_font_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f	typeref:typename:NK_INTERN float
nk_foreach	deps/nuklear.h	/^#define nk_foreach(/;"	d
nk_free	deps/nuklear.h	/^nk_free(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_free_page_element	deps/nuklear.h	/^nk_free_page_element(struct nk_context *ctx, struct nk_page_element *elem)$/;"	f	typeref:typename:NK_LIB void
nk_free_panel	deps/nuklear.h	/^nk_free_panel(struct nk_context *ctx, struct nk_panel *pan)$/;"	f	typeref:typename:NK_LIB void
nk_free_table	deps/nuklear.h	/^nk_free_table(struct nk_context *ctx, struct nk_table *tbl)$/;"	f	typeref:typename:NK_LIB void
nk_free_window	deps/nuklear.h	/^nk_free_window(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_get_null_rect	deps/nuklear.h	/^nk_get_null_rect(void)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_gflw3_scroll_callback	deps/nuklear_glfw_gl2.h	/^nk_gflw3_scroll_callback(GLFWwindow *win, double xoff, double yoff)$/;"	f	typeref:typename:NK_API void
nk_glfw	deps/nuklear_glfw_gl2.h	/^static struct nk_glfw {$/;"	s
nk_glfw3_char_callback	deps/nuklear_glfw_gl2.h	/^nk_glfw3_char_callback(GLFWwindow *win, unsigned int codepoint)$/;"	f	typeref:typename:NK_API void
nk_glfw3_clipbard_copy	deps/nuklear_glfw_gl2.h	/^nk_glfw3_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_clipbard_paste	deps/nuklear_glfw_gl2.h	/^nk_glfw3_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_device_upload_atlas	deps/nuklear_glfw_gl2.h	/^nk_glfw3_device_upload_atlas(const void *image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_font_stash_begin	deps/nuklear_glfw_gl2.h	/^nk_glfw3_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_glfw3_font_stash_end	deps/nuklear_glfw_gl2.h	/^nk_glfw3_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_init	deps/nuklear_glfw_gl2.h	/^nk_glfw3_init(GLFWwindow *win, enum nk_glfw_init_state init_state)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_glfw3_mouse_button_callback	deps/nuklear_glfw_gl2.h	/^nk_glfw3_mouse_button_callback(GLFWwindow* window, int button, int action, int mods)$/;"	f	typeref:typename:NK_API void
nk_glfw3_new_frame	deps/nuklear_glfw_gl2.h	/^nk_glfw3_new_frame(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_render	deps/nuklear_glfw_gl2.h	/^nk_glfw3_render(enum nk_anti_aliasing AA)$/;"	f	typeref:typename:NK_API void
nk_glfw3_shutdown	deps/nuklear_glfw_gl2.h	/^void nk_glfw3_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_glfw_device	deps/nuklear_glfw_gl2.h	/^struct nk_glfw_device {$/;"	s
nk_glfw_init_state	deps/nuklear_glfw_gl2.h	/^enum nk_glfw_init_state{$/;"	g
nk_glfw_vertex	deps/nuklear_glfw_gl2.h	/^struct nk_glfw_vertex {$/;"	s
nk_glyph	deps/nuklear.h	/^typedef char nk_glyph[NK_UTF_SIZE];$/;"	t	typeref:typename:char[NK_UTF_SIZE]
nk_green	deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_green = {0,255,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_group_begin	deps/nuklear.h	/^nk_group_begin(struct nk_context *ctx, const char *title, nk_flags flags)$/;"	f	typeref:typename:NK_API int
nk_group_begin_titled	deps/nuklear.h	/^nk_group_begin_titled(struct nk_context *ctx, const char *id,$/;"	f	typeref:typename:NK_API int
nk_group_end	deps/nuklear.h	/^nk_group_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_group_scrolled_begin	deps/nuklear.h	/^nk_group_scrolled_begin(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_group_scrolled_end	deps/nuklear.h	/^nk_group_scrolled_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_group_scrolled_offset_begin	deps/nuklear.h	/^nk_group_scrolled_offset_begin(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_handle	deps/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	t	typeref:union:__anonca785108020a
nk_handle_id	deps/nuklear.h	/^nk_handle_id(int id)$/;"	f	typeref:typename:NK_API nk_handle
nk_handle_ptr	deps/nuklear.h	/^nk_handle_ptr(void *ptr)$/;"	f	typeref:typename:NK_API nk_handle
nk_hash	deps/nuklear.h	/^typedef nk_uint nk_hash;$/;"	t	typeref:typename:nk_uint
nk_heading	deps/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	g
nk_helper	deps/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	s
nk_helper	deps/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	s
nk_hsv	deps/nuklear.h	/^nk_hsv(int h, int s, int v)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_bv	deps/nuklear.h	/^nk_hsv_bv(const nk_byte *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_f	deps/nuklear.h	/^nk_hsv_f(float h, float s, float v)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_fv	deps/nuklear.h	/^nk_hsv_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_iv	deps/nuklear.h	/^nk_hsv_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva	deps/nuklear.h	/^nk_hsva(int h, int s, int v, int a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_bv	deps/nuklear.h	/^nk_hsva_bv(const nk_byte *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_colorf	deps/nuklear.h	/^nk_hsva_colorf(float h, float s, float v, float a)$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_hsva_colorfv	deps/nuklear.h	/^nk_hsva_colorfv(float *c)$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_hsva_f	deps/nuklear.h	/^nk_hsva_f(float h, float s, float v, float a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_fv	deps/nuklear.h	/^nk_hsva_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_iv	deps/nuklear.h	/^nk_hsva_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_iceilf	deps/nuklear.h	/^nk_iceilf(float x)$/;"	f	typeref:typename:NK_LIB int
nk_ifloord	deps/nuklear.h	/^nk_ifloord(double x)$/;"	f	typeref:typename:NK_LIB int
nk_ifloorf	deps/nuklear.h	/^nk_ifloorf(float x)$/;"	f	typeref:typename:NK_LIB int
nk_image	deps/nuklear.h	/^nk_image(struct nk_context *ctx, struct nk_image img)$/;"	f	typeref:typename:NK_API void
nk_image	deps/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	s
nk_image_color	deps/nuklear.h	/^nk_image_color(struct nk_context *ctx, struct nk_image img, struct nk_color col)$/;"	f	typeref:typename:NK_API void
nk_image_handle	deps/nuklear.h	/^nk_image_handle(nk_handle handle)$/;"	f	typeref:typename:NK_API struct nk_image
nk_image_id	deps/nuklear.h	/^nk_image_id(int id)$/;"	f	typeref:typename:NK_API struct nk_image
nk_image_is_subimage	deps/nuklear.h	/^nk_image_is_subimage(const struct nk_image* img)$/;"	f	typeref:typename:NK_API int
nk_image_ptr	deps/nuklear.h	/^nk_image_ptr(void *ptr)$/;"	f	typeref:typename:NK_API struct nk_image
nk_init	deps/nuklear.h	/^nk_init(struct nk_context *ctx, struct nk_allocator *alloc,$/;"	f	typeref:typename:NK_API int
nk_init_custom	deps/nuklear.h	/^nk_init_custom(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f	typeref:typename:NK_API int
nk_init_default	deps/nuklear.h	/^nk_init_default(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_API int
nk_init_fixed	deps/nuklear.h	/^nk_init_fixed(struct nk_context *ctx, void *memory, nk_size size,$/;"	f	typeref:typename:NK_API int
nk_input	deps/nuklear.h	/^struct nk_input {$/;"	s
nk_input_any_mouse_click_in_rect	deps/nuklear.h	/^nk_input_any_mouse_click_in_rect(const struct nk_input *in, struct nk_rect b)$/;"	f	typeref:typename:NK_API int
nk_input_begin	deps/nuklear.h	/^nk_input_begin(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_input_button	deps/nuklear.h	/^nk_input_button(struct nk_context *ctx, enum nk_buttons id, int x, int y, int down)$/;"	f	typeref:typename:NK_API void
nk_input_char	deps/nuklear.h	/^nk_input_char(struct nk_context *ctx, char c)$/;"	f	typeref:typename:NK_API void
nk_input_end	deps/nuklear.h	/^nk_input_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_input_glyph	deps/nuklear.h	/^nk_input_glyph(struct nk_context *ctx, const nk_glyph glyph)$/;"	f	typeref:typename:NK_API void
nk_input_has_mouse_click	deps/nuklear.h	/^nk_input_has_mouse_click(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_has_mouse_click_down_in_rect	deps/nuklear.h	/^nk_input_has_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_has_mouse_click_in_rect	deps/nuklear.h	/^nk_input_has_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_is_key_down	deps/nuklear.h	/^nk_input_is_key_down(const struct nk_input *i, enum nk_keys key)$/;"	f	typeref:typename:NK_API int
nk_input_is_key_pressed	deps/nuklear.h	/^nk_input_is_key_pressed(const struct nk_input *i, enum nk_keys key)$/;"	f	typeref:typename:NK_API int
nk_input_is_key_released	deps/nuklear.h	/^nk_input_is_key_released(const struct nk_input *i, enum nk_keys key)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_click_down_in_rect	deps/nuklear.h	/^nk_input_is_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_click_in_rect	deps/nuklear.h	/^nk_input_is_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_down	deps/nuklear.h	/^nk_input_is_mouse_down(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_hovering_rect	deps/nuklear.h	/^nk_input_is_mouse_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_pressed	deps/nuklear.h	/^nk_input_is_mouse_pressed(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_prev_hovering_rect	deps/nuklear.h	/^nk_input_is_mouse_prev_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_released	deps/nuklear.h	/^nk_input_is_mouse_released(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_key	deps/nuklear.h	/^nk_input_key(struct nk_context *ctx, enum nk_keys key, int down)$/;"	f	typeref:typename:NK_API void
nk_input_motion	deps/nuklear.h	/^nk_input_motion(struct nk_context *ctx, int x, int y)$/;"	f	typeref:typename:NK_API void
nk_input_mouse_clicked	deps/nuklear.h	/^nk_input_mouse_clicked(const struct nk_input *i, enum nk_buttons id, struct nk_rect rect)$/;"	f	typeref:typename:NK_API int
nk_input_scroll	deps/nuklear.h	/^nk_input_scroll(struct nk_context *ctx, struct nk_vec2 val)$/;"	f	typeref:typename:NK_API void
nk_input_unicode	deps/nuklear.h	/^nk_input_unicode(struct nk_context *ctx, nk_rune unicode)$/;"	f	typeref:typename:NK_API void
nk_insert_window	deps/nuklear.h	/^nk_insert_window(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_LIB void
nk_int	deps/nuklear.h	/^typedef NK_INT32 nk_int;$/;"	t	typeref:typename:NK_INT32
nk_inv_sqrt	deps/nuklear.h	/^nk_inv_sqrt(float n)$/;"	f	typeref:typename:NK_LIB float
nk_is_lower	deps/nuklear.h	/^NK_LIB int nk_is_lower(int c) {return (c >= 'a' && c <= 'z') || (c >= 0xE0 && c <= 0xFF);}$/;"	f	typeref:typename:NK_LIB int
nk_is_upper	deps/nuklear.h	/^NK_LIB int nk_is_upper(int c){return (c >= 'A' && c <= 'Z') || (c >= 0xC0 && c <= 0xDF);}$/;"	f	typeref:typename:NK_LIB int
nk_is_word_boundary	deps/nuklear.h	/^nk_is_word_boundary( struct nk_text_edit *state, int idx)$/;"	f	typeref:typename:NK_INTERN int
nk_item_is_any_active	deps/nuklear.h	/^nk_item_is_any_active(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_itoa	deps/nuklear.h	/^nk_itoa(char *s, long n)$/;"	f	typeref:typename:NK_LIB char *
nk_key	deps/nuklear.h	/^struct nk_key {$/;"	s
nk_keyboard	deps/nuklear.h	/^struct nk_keyboard {$/;"	s
nk_keys	deps/nuklear.h	/^enum nk_keys {$/;"	g
nk_label	deps/nuklear.h	/^nk_label(struct nk_context *ctx, const char *str, nk_flags alignment)$/;"	f	typeref:typename:NK_API void
nk_label_colored	deps/nuklear.h	/^nk_label_colored(struct nk_context *ctx, const char *str, nk_flags align,$/;"	f	typeref:typename:NK_API void
nk_label_colored_wrap	deps/nuklear.h	/^nk_label_colored_wrap(struct nk_context *ctx, const char *str, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_label_wrap	deps/nuklear.h	/^nk_label_wrap(struct nk_context *ctx, const char *str)$/;"	f	typeref:typename:NK_API void
nk_labelf	deps/nuklear.h	/^nk_labelf(struct nk_context *ctx, nk_flags flags, const char *fmt, ...)$/;"	f	typeref:typename:NK_API void
nk_labelf_colored	deps/nuklear.h	/^nk_labelf_colored(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API void
nk_labelf_colored_wrap	deps/nuklear.h	/^nk_labelf_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f	typeref:typename:NK_API void
nk_labelf_wrap	deps/nuklear.h	/^nk_labelf_wrap(struct nk_context *ctx, const char *fmt,...)$/;"	f	typeref:typename:NK_API void
nk_labelfv	deps/nuklear.h	/^nk_labelfv(struct nk_context *ctx, nk_flags flags, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_API void
nk_labelfv_colored	deps/nuklear.h	/^nk_labelfv_colored(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API void
nk_labelfv_colored_wrap	deps/nuklear.h	/^nk_labelfv_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f	typeref:typename:NK_API void
nk_labelfv_wrap	deps/nuklear.h	/^nk_labelfv_wrap(struct nk_context *ctx, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_API void
nk_layout_format	deps/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	g
nk_layout_peek	deps/nuklear.h	/^nk_layout_peek(struct nk_rect *bounds, struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_layout_ratio_from_pixel	deps/nuklear.h	/^nk_layout_ratio_from_pixel(struct nk_context *ctx, float pixel_width)$/;"	f	typeref:typename:NK_API float
nk_layout_reset_min_row_height	deps/nuklear.h	/^nk_layout_reset_min_row_height(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row	deps/nuklear.h	/^nk_layout_row(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_API void
nk_layout_row_begin	deps/nuklear.h	/^nk_layout_row_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_API void
nk_layout_row_calculate_usable_space	deps/nuklear.h	/^nk_layout_row_calculate_usable_space(const struct nk_style *style, enum nk_panel_type type,$/;"	f	typeref:typename:NK_LIB float
nk_layout_row_dynamic	deps/nuklear.h	/^nk_layout_row_dynamic(struct nk_context *ctx, float height, int cols)$/;"	f	typeref:typename:NK_API void
nk_layout_row_end	deps/nuklear.h	/^nk_layout_row_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row_push	deps/nuklear.h	/^nk_layout_row_push(struct nk_context *ctx, float ratio_or_width)$/;"	f	typeref:typename:NK_API void
nk_layout_row_static	deps/nuklear.h	/^nk_layout_row_static(struct nk_context *ctx, float height, int item_width, int cols)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_begin	deps/nuklear.h	/^nk_layout_row_template_begin(struct nk_context *ctx, float height)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_end	deps/nuklear.h	/^nk_layout_row_template_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_push_dynamic	deps/nuklear.h	/^nk_layout_row_template_push_dynamic(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_push_static	deps/nuklear.h	/^nk_layout_row_template_push_static(struct nk_context *ctx, float width)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_push_variable	deps/nuklear.h	/^nk_layout_row_template_push_variable(struct nk_context *ctx, float min_width)$/;"	f	typeref:typename:NK_API void
nk_layout_set_min_row_height	deps/nuklear.h	/^nk_layout_set_min_row_height(struct nk_context *ctx, float height)$/;"	f	typeref:typename:NK_API void
nk_layout_space_begin	deps/nuklear.h	/^nk_layout_space_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_API void
nk_layout_space_bounds	deps/nuklear.h	/^nk_layout_space_bounds(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_space_end	deps/nuklear.h	/^nk_layout_space_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_space_push	deps/nuklear.h	/^nk_layout_space_push(struct nk_context *ctx, struct nk_rect rect)$/;"	f	typeref:typename:NK_API void
nk_layout_space_rect_to_local	deps/nuklear.h	/^nk_layout_space_rect_to_local(struct nk_context *ctx, struct nk_rect ret)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_space_rect_to_screen	deps/nuklear.h	/^nk_layout_space_rect_to_screen(struct nk_context *ctx, struct nk_rect ret)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_space_to_local	deps/nuklear.h	/^nk_layout_space_to_local(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_layout_space_to_screen	deps/nuklear.h	/^nk_layout_space_to_screen(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_layout_widget_bounds	deps/nuklear.h	/^nk_layout_widget_bounds(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_widget_space	deps/nuklear.h	/^nk_layout_widget_space(struct nk_rect *bounds, const struct nk_context *ctx,$/;"	f	typeref:typename:NK_LIB void
nk_link_page_element_into_freelist	deps/nuklear.h	/^nk_link_page_element_into_freelist(struct nk_context *ctx,$/;"	f	typeref:typename:NK_LIB void
nk_list_view	deps/nuklear.h	/^struct nk_list_view {$/;"	s
nk_list_view_begin	deps/nuklear.h	/^nk_list_view_begin(struct nk_context *ctx, struct nk_list_view *view,$/;"	f	typeref:typename:NK_API int
nk_list_view_end	deps/nuklear.h	/^nk_list_view_end(struct nk_list_view *view)$/;"	f	typeref:typename:NK_API void
nk_log10	deps/nuklear.h	/^nk_log10(double n)$/;"	f	typeref:typename:NK_LIB int
nk_malloc	deps/nuklear.h	/^nk_malloc(nk_handle unused, void *old,nk_size size)$/;"	f	typeref:typename:NK_LIB void *
nk_memcopy	deps/nuklear.h	/^nk_memcopy(void *dst0, const void *src0, nk_size length)$/;"	f	typeref:typename:NK_LIB void *
nk_memory	deps/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	s
nk_memory_status	deps/nuklear.h	/^struct nk_memory_status {$/;"	s
nk_memset	deps/nuklear.h	/^nk_memset(void *ptr, int c0, nk_size size)$/;"	f	typeref:typename:NK_LIB void
nk_menu_begin	deps/nuklear.h	/^nk_menu_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN int
nk_menu_begin_image	deps/nuklear.h	/^nk_menu_begin_image(struct nk_context *ctx, const char *id, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_image_label	deps/nuklear.h	/^nk_menu_begin_image_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_image_text	deps/nuklear.h	/^nk_menu_begin_image_text(struct nk_context *ctx, const char *title, int len,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_label	deps/nuklear.h	/^NK_API int nk_menu_begin_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_symbol	deps/nuklear.h	/^nk_menu_begin_symbol(struct nk_context *ctx, const char *id,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_symbol_label	deps/nuklear.h	/^nk_menu_begin_symbol_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_symbol_text	deps/nuklear.h	/^nk_menu_begin_symbol_text(struct nk_context *ctx, const char *title, int len,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_text	deps/nuklear.h	/^nk_menu_begin_text(struct nk_context *ctx, const char *title, int len,$/;"	f	typeref:typename:NK_API int
nk_menu_close	deps/nuklear.h	/^NK_API void nk_menu_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_menu_end	deps/nuklear.h	/^nk_menu_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_menu_item_image_label	deps/nuklear.h	/^nk_menu_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_menu_item_image_text	deps/nuklear.h	/^nk_menu_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_menu_item_label	deps/nuklear.h	/^nk_menu_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_menu_item_symbol_label	deps/nuklear.h	/^NK_API int nk_menu_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_menu_item_symbol_text	deps/nuklear.h	/^NK_API int nk_menu_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_menu_item_text	deps/nuklear.h	/^nk_menu_item_text(struct nk_context *ctx, const char *title, int len, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_menu_state	deps/nuklear.h	/^struct nk_menu_state {$/;"	s
nk_menubar_begin	deps/nuklear.h	/^nk_menubar_begin(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_menubar_end	deps/nuklear.h	/^nk_menubar_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_mfree	deps/nuklear.h	/^nk_mfree(nk_handle unused, void *ptr)$/;"	f	typeref:typename:NK_LIB void
nk_modify	deps/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	g
nk_mouse	deps/nuklear.h	/^struct nk_mouse {$/;"	s
nk_mouse_button	deps/nuklear.h	/^struct nk_mouse_button {$/;"	s
nk_murmur_hash	deps/nuklear.h	/^nk_murmur_hash(const void * key, int len, nk_hash seed)$/;"	f	typeref:typename:NK_API nk_hash
nk_nonblock_begin	deps/nuklear.h	/^nk_nonblock_begin(struct nk_context *ctx,$/;"	f	typeref:typename:NK_LIB int
nk_null_rect	deps/nuklear.h	/^NK_GLOBAL const struct nk_rect nk_null_rect = {-8192.0f, -8192.0f, 16384, 16384};$/;"	v	typeref:typename:const struct nk_rect
nk_option_label	deps/nuklear.h	/^nk_option_label(struct nk_context *ctx, const char *label, int active)$/;"	f	typeref:typename:NK_API int
nk_option_text	deps/nuklear.h	/^nk_option_text(struct nk_context *ctx, const char *text, int len, int is_active)$/;"	f	typeref:typename:NK_API int
nk_orientation	deps/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	g
nk_pad_rect	deps/nuklear.h	/^nk_pad_rect(struct nk_rect r, struct nk_vec2 pad)$/;"	f	typeref:typename:NK_LIB struct nk_rect
nk_page	deps/nuklear.h	/^struct nk_page {$/;"	s
nk_page_data	deps/nuklear.h	/^union nk_page_data {$/;"	u
nk_page_element	deps/nuklear.h	/^struct nk_page_element {$/;"	s
nk_panel	deps/nuklear.h	/^struct nk_panel {$/;"	s
nk_panel_alloc_row	deps/nuklear.h	/^nk_panel_alloc_row(const struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_panel_alloc_space	deps/nuklear.h	/^nk_panel_alloc_space(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_panel_begin	deps/nuklear.h	/^nk_panel_begin(struct nk_context *ctx, const char *title, enum nk_panel_type panel_type)$/;"	f	typeref:typename:NK_LIB int
nk_panel_end	deps/nuklear.h	/^nk_panel_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_panel_flags	deps/nuklear.h	/^enum nk_panel_flags {$/;"	g
nk_panel_get_border	deps/nuklear.h	/^nk_panel_get_border(const struct nk_style *style, nk_flags flags,$/;"	f	typeref:typename:NK_LIB float
nk_panel_get_border_color	deps/nuklear.h	/^nk_panel_get_border_color(const struct nk_style *style, enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB struct nk_color
nk_panel_get_padding	deps/nuklear.h	/^nk_panel_get_padding(const struct nk_style *style, enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB struct nk_vec2
nk_panel_has_header	deps/nuklear.h	/^nk_panel_has_header(nk_flags flags, const char *title)$/;"	f	typeref:typename:NK_LIB int
nk_panel_is_nonblock	deps/nuklear.h	/^nk_panel_is_nonblock(enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB int
nk_panel_is_sub	deps/nuklear.h	/^nk_panel_is_sub(enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB int
nk_panel_layout	deps/nuklear.h	/^nk_panel_layout(const struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_LIB void
nk_panel_row_layout_type	deps/nuklear.h	/^enum nk_panel_row_layout_type {$/;"	g
nk_panel_set	deps/nuklear.h	/^enum nk_panel_set {$/;"	g
nk_panel_type	deps/nuklear.h	/^enum nk_panel_type {$/;"	g
nk_parse_hex	deps/nuklear.h	/^nk_parse_hex(const char *p, int length)$/;"	f	typeref:typename:NK_INTERN int
nk_plot	deps/nuklear.h	/^nk_plot(struct nk_context *ctx, enum nk_chart_type type, const float *values,$/;"	f	typeref:typename:NK_API void
nk_plot_function	deps/nuklear.h	/^nk_plot_function(struct nk_context *ctx, enum nk_chart_type type, void *userdata,$/;"	f	typeref:typename:NK_API void
nk_plugin_alloc	deps/nuklear.h	/^typedef void*(*nk_plugin_alloc)(nk_handle, void *old, nk_size);$/;"	t	typeref:typename:void * (*)(nk_handle,void * old,nk_size)
nk_plugin_copy	deps/nuklear.h	/^typedef void(*nk_plugin_copy)(nk_handle, const char*, int len);$/;"	t	typeref:typename:void (*)(nk_handle,const char *,int len)
nk_plugin_filter	deps/nuklear.h	/^typedef int(*nk_plugin_filter)(const struct nk_text_edit*, nk_rune unicode);$/;"	t	typeref:typename:int (*)(const struct nk_text_edit *,nk_rune unicode)
nk_plugin_free	deps/nuklear.h	/^typedef void (*nk_plugin_free)(nk_handle, void *old);$/;"	t	typeref:typename:void (*)(nk_handle,void * old)
nk_plugin_paste	deps/nuklear.h	/^typedef void(*nk_plugin_paste)(nk_handle, struct nk_text_edit*);$/;"	t	typeref:typename:void (*)(nk_handle,struct nk_text_edit *)
nk_pool	deps/nuklear.h	/^struct nk_pool {$/;"	s
nk_pool_alloc	deps/nuklear.h	/^nk_pool_alloc(struct nk_pool *pool)$/;"	f	typeref:typename:NK_LIB struct nk_page_element *
nk_pool_free	deps/nuklear.h	/^nk_pool_free(struct nk_pool *pool)$/;"	f	typeref:typename:NK_LIB void
nk_pool_init	deps/nuklear.h	/^nk_pool_init(struct nk_pool *pool, struct nk_allocator *alloc,$/;"	f	typeref:typename:NK_LIB void
nk_pool_init_fixed	deps/nuklear.h	/^nk_pool_init_fixed(struct nk_pool *pool, void *memory, nk_size size)$/;"	f	typeref:typename:NK_LIB void
nk_popup_begin	deps/nuklear.h	/^nk_popup_begin(struct nk_context *ctx, enum nk_popup_type type,$/;"	f	typeref:typename:NK_API int
nk_popup_buffer	deps/nuklear.h	/^struct nk_popup_buffer {$/;"	s
nk_popup_close	deps/nuklear.h	/^nk_popup_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_popup_end	deps/nuklear.h	/^nk_popup_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_popup_state	deps/nuklear.h	/^struct nk_popup_state {$/;"	s
nk_popup_type	deps/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	g
nk_pow	deps/nuklear.h	/^nk_pow(double x, int n)$/;"	f	typeref:typename:NK_LIB double
nk_prog	deps/nuklear.h	/^nk_prog(struct nk_context *ctx, nk_size cur, nk_size max, int modifyable)$/;"	f	typeref:typename:NK_API nk_size
nk_proggy_clean_ttf_compressed_data_base85	deps/nuklear.h	/^NK_GLOBAL const char nk_proggy_clean_ttf_compressed_data_base85[11980+1] =$/;"	v	typeref:typename:NK_GLOBAL const char[]
nk_progress	deps/nuklear.h	/^nk_progress(struct nk_context *ctx, nk_size *cur, nk_size max, int is_modifyable)$/;"	f	typeref:typename:NK_API int
nk_progress_behavior	deps/nuklear.h	/^nk_progress_behavior(nk_flags *state, struct nk_input *in,$/;"	f	typeref:typename:NK_LIB nk_size
nk_property	deps/nuklear.h	/^nk_property(struct nk_context *ctx, const char *name, struct nk_property_variant *variant,$/;"	f	typeref:typename:NK_LIB void
nk_property	deps/nuklear.h	/^union nk_property {$/;"	u
nk_property_behavior	deps/nuklear.h	/^nk_property_behavior(nk_flags *ws, const struct nk_input *in,$/;"	f	typeref:typename:NK_LIB void
nk_property_double	deps/nuklear.h	/^nk_property_double(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_property_filter	deps/nuklear.h	/^enum nk_property_filter {$/;"	g
nk_property_float	deps/nuklear.h	/^nk_property_float(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_property_int	deps/nuklear.h	/^nk_property_int(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_property_kind	deps/nuklear.h	/^enum nk_property_kind {$/;"	g
nk_property_state	deps/nuklear.h	/^struct nk_property_state {$/;"	s
nk_property_status	deps/nuklear.h	/^enum nk_property_status {$/;"	g
nk_property_variant	deps/nuklear.h	/^struct nk_property_variant {$/;"	s
nk_property_variant_double	deps/nuklear.h	/^nk_property_variant_double(double value, double min_value, double max_value,$/;"	f	typeref:typename:NK_LIB struct nk_property_variant
nk_property_variant_float	deps/nuklear.h	/^nk_property_variant_float(float value, float min_value, float max_value, float step)$/;"	f	typeref:typename:NK_LIB struct nk_property_variant
nk_property_variant_int	deps/nuklear.h	/^nk_property_variant_int(int value, int min_value, int max_value, int step)$/;"	f	typeref:typename:NK_LIB struct nk_property_variant
nk_propertyd	deps/nuklear.h	/^nk_propertyd(struct nk_context *ctx, const char *name, double min,$/;"	f	typeref:typename:NK_API double
nk_propertyf	deps/nuklear.h	/^nk_propertyf(struct nk_context *ctx, const char *name, float min,$/;"	f	typeref:typename:NK_API float
nk_propertyi	deps/nuklear.h	/^nk_propertyi(struct nk_context *ctx, const char *name, int min, int val,$/;"	f	typeref:typename:NK_API int
nk_ptr	deps/nuklear.h	/^typedef NK_POINTER_TYPE nk_ptr;$/;"	t	typeref:typename:NK_POINTER_TYPE
nk_ptr_add	deps/nuklear.h	/^#define nk_ptr_add(/;"	d
nk_ptr_add_const	deps/nuklear.h	/^#define nk_ptr_add_const(/;"	d
nk_push_custom	deps/nuklear.h	/^nk_push_custom(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_push_scissor	deps/nuklear.h	/^nk_push_scissor(struct nk_command_buffer *b, struct nk_rect r)$/;"	f	typeref:typename:NK_API void
nk_push_table	deps/nuklear.h	/^nk_push_table(struct nk_window *win, struct nk_table *tbl)$/;"	f	typeref:typename:NK_LIB void
nk_query_font_glyph_f	deps/nuklear.h	/^typedef void(*nk_query_font_glyph_f)(nk_handle handle, float font_height,$/;"	t	typeref:typename:void (*)(nk_handle handle,float font_height,struct nk_user_font_glyph * glyph,nk_rune codepoint,nk_rune next_codepoint)
nk_radio_label	deps/nuklear.h	/^nk_radio_label(struct nk_context *ctx, const char *label, int *active)$/;"	f	typeref:typename:NK_API int
nk_radio_text	deps/nuklear.h	/^nk_radio_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f	typeref:typename:NK_API int
nk_range_align	deps/nuklear.h	/^NK_GLOBAL const nk_size nk_range_align = NK_ALIGNOF(struct nk_tt_pack_range);$/;"	v	typeref:typename:NK_GLOBAL const nk_size
nk_range_count	deps/nuklear.h	/^nk_range_count(const nk_rune *range)$/;"	f	typeref:typename:NK_INTERN int
nk_range_glyph_count	deps/nuklear.h	/^nk_range_glyph_count(const nk_rune *range, int count)$/;"	f	typeref:typename:NK_INTERN int
nk_rect	deps/nuklear.h	/^nk_rect(float x, float y, float w, float h)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_rect	deps/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	s
nk_rect_align	deps/nuklear.h	/^NK_GLOBAL const nk_size nk_rect_align = NK_ALIGNOF(struct nk_rp_rect);$/;"	v	typeref:typename:NK_GLOBAL const nk_size
nk_rect_height_compare	deps/nuklear.h	/^nk_rect_height_compare(const void *a, const void *b)$/;"	f	typeref:typename:NK_INTERN int
nk_rect_original_order	deps/nuklear.h	/^nk_rect_original_order(const void *a, const void *b)$/;"	f	typeref:typename:NK_INTERN int
nk_rect_pos	deps/nuklear.h	/^nk_rect_pos(struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_rect_size	deps/nuklear.h	/^nk_rect_size(struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_recta	deps/nuklear.h	/^nk_recta(struct nk_vec2 pos, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_recti	deps/nuklear.h	/^nk_recti(int x, int y, int w, int h)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_recti	deps/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	s
nk_rectiv	deps/nuklear.h	/^nk_rectiv(const int *r)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_rectv	deps/nuklear.h	/^nk_rectv(const float *r)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_red	deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_red = {255,0,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_remove_table	deps/nuklear.h	/^nk_remove_table(struct nk_window *win, struct nk_table *tbl)$/;"	f	typeref:typename:NK_LIB void
nk_remove_window	deps/nuklear.h	/^nk_remove_window(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_rgb	deps/nuklear.h	/^nk_rgb(int r, int g, int b)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_bv	deps/nuklear.h	/^nk_rgb_bv(const nk_byte* c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_cf	deps/nuklear.h	/^nk_rgb_cf(struct nk_colorf c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_f	deps/nuklear.h	/^nk_rgb_f(float r, float g, float b)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_fv	deps/nuklear.h	/^nk_rgb_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_hex	deps/nuklear.h	/^nk_rgb_hex(const char *rgb)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_iv	deps/nuklear.h	/^nk_rgb_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba	deps/nuklear.h	/^nk_rgba(int r, int g, int b, int a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_bv	deps/nuklear.h	/^nk_rgba_bv(const nk_byte *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_cf	deps/nuklear.h	/^nk_rgba_cf(struct nk_colorf c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_f	deps/nuklear.h	/^nk_rgba_f(float r, float g, float b, float a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_fv	deps/nuklear.h	/^nk_rgba_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_hex	deps/nuklear.h	/^nk_rgba_hex(const char *rgb)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_iv	deps/nuklear.h	/^nk_rgba_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_u32	deps/nuklear.h	/^nk_rgba_u32(nk_uint in)$/;"	f	typeref:typename:NK_API struct nk_color
nk_round_up_pow2	deps/nuklear.h	/^nk_round_up_pow2(nk_uint v)$/;"	f	typeref:typename:NK_LIB nk_uint
nk_row_layout	deps/nuklear.h	/^nk_row_layout(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_LIB void
nk_row_layout	deps/nuklear.h	/^struct nk_row_layout {$/;"	s
nk_rp__findresult	deps/nuklear.h	/^struct nk_rp__findresult {$/;"	s
nk_rp__skyline_find_best_pos	deps/nuklear.h	/^nk_rp__skyline_find_best_pos(struct nk_rp_context *c, int width, int height)$/;"	f	typeref:typename:NK_INTERN struct nk_rp__findresult
nk_rp__skyline_find_min_y	deps/nuklear.h	/^nk_rp__skyline_find_min_y(struct nk_rp_context *c, struct nk_rp_node *first,$/;"	f	typeref:typename:NK_INTERN int
nk_rp__skyline_pack_rectangle	deps/nuklear.h	/^nk_rp__skyline_pack_rectangle(struct nk_rp_context *context, int width, int height)$/;"	f	typeref:typename:NK_INTERN struct nk_rp__findresult
nk_rp_context	deps/nuklear.h	/^struct nk_rp_context {$/;"	s
nk_rp_coord	deps/nuklear.h	/^typedef unsigned short nk_rp_coord;$/;"	t	typeref:typename:unsigned short
nk_rp_init_target	deps/nuklear.h	/^nk_rp_init_target(struct nk_rp_context *context, int width, int height,$/;"	f	typeref:typename:NK_INTERN void
nk_rp_node	deps/nuklear.h	/^struct nk_rp_node {$/;"	s
nk_rp_pack_rects	deps/nuklear.h	/^nk_rp_pack_rects(struct nk_rp_context *context, struct nk_rp_rect *rects, int num_rects)$/;"	f	typeref:typename:NK_INTERN void
nk_rp_qsort	deps/nuklear.h	/^nk_rp_qsort(struct nk_rp_rect *array, unsigned int len, int(*cmp)(const void*,const void*))$/;"	f	typeref:typename:NK_INTERN void
nk_rp_rect	deps/nuklear.h	/^struct nk_rp_rect {$/;"	s
nk_rp_setup_allow_out_of_mem	deps/nuklear.h	/^nk_rp_setup_allow_out_of_mem(struct nk_rp_context *context, int allow_out_of_mem)$/;"	f	typeref:typename:NK_INTERN void
nk_rune	deps/nuklear.h	/^typedef nk_uint nk_rune;$/;"	t	typeref:typename:nk_uint
nk_scroll	deps/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	s
nk_scrollbar_behavior	deps/nuklear.h	/^nk_scrollbar_behavior(nk_flags *state, struct nk_input *in,$/;"	f	typeref:typename:NK_LIB float
nk_select_image_label	deps/nuklear.h	/^NK_API int nk_select_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_select_image_text	deps/nuklear.h	/^NK_API int nk_select_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_select_label	deps/nuklear.h	/^NK_API int nk_select_label(struct nk_context *ctx, const char *str, nk_flags align, int value)$/;"	f	typeref:typename:NK_API int
nk_select_symbol_label	deps/nuklear.h	/^nk_select_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_select_symbol_text	deps/nuklear.h	/^nk_select_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_select_text	deps/nuklear.h	/^NK_API int nk_select_text(struct nk_context *ctx, const char *str, int len,$/;"	f	typeref:typename:NK_API int
nk_selectable_image_label	deps/nuklear.h	/^NK_API int nk_selectable_image_label(struct nk_context *ctx,struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_selectable_image_text	deps/nuklear.h	/^nk_selectable_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_selectable_label	deps/nuklear.h	/^NK_API int nk_selectable_label(struct nk_context *ctx, const char *str, nk_flags align, int *val/;"	f	typeref:typename:NK_API int
nk_selectable_symbol_label	deps/nuklear.h	/^nk_selectable_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_selectable_symbol_text	deps/nuklear.h	/^nk_selectable_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_selectable_text	deps/nuklear.h	/^nk_selectable_text(struct nk_context *ctx, const char *str, int len,$/;"	f	typeref:typename:NK_API int
nk_set_user_data	deps/nuklear.h	/^nk_set_user_data(struct nk_context *ctx, nk_handle handle)$/;"	f	typeref:typename:NK_API void
nk_setup	deps/nuklear.h	/^nk_setup(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_INTERN void
nk_short	deps/nuklear.h	/^typedef NK_INT16 nk_short;$/;"	t	typeref:typename:NK_INT16
nk_show_states	deps/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	g
nk_shrink_rect	deps/nuklear.h	/^nk_shrink_rect(struct nk_rect r, float amount)$/;"	f	typeref:typename:NK_LIB struct nk_rect
nk_sin	deps/nuklear.h	/^nk_sin(float x)$/;"	f	typeref:typename:NK_LIB float
nk_size	deps/nuklear.h	/^typedef NK_SIZE_TYPE nk_size;$/;"	t	typeref:typename:NK_SIZE_TYPE
nk_slide_float	deps/nuklear.h	/^nk_slide_float(struct nk_context *ctx, float min, float val, float max, float step)$/;"	f	typeref:typename:NK_API float
nk_slide_int	deps/nuklear.h	/^nk_slide_int(struct nk_context *ctx, int min, int val, int max, int step)$/;"	f	typeref:typename:NK_API int
nk_slider_behavior	deps/nuklear.h	/^nk_slider_behavior(nk_flags *state, struct nk_rect *logical_cursor,$/;"	f	typeref:typename:NK_LIB float
nk_slider_float	deps/nuklear.h	/^nk_slider_float(struct nk_context *ctx, float min_value, float *value, float max_value,$/;"	f	typeref:typename:NK_API int
nk_slider_int	deps/nuklear.h	/^nk_slider_int(struct nk_context *ctx, int min, int *val, int max, int step)$/;"	f	typeref:typename:NK_API int
nk_spacing	deps/nuklear.h	/^nk_spacing(struct nk_context *ctx, int cols)$/;"	f	typeref:typename:NK_API void
nk_sqrt	deps/nuklear.h	/^nk_sqrt(float x)$/;"	f	typeref:typename:NK_LIB float
nk_start	deps/nuklear.h	/^nk_start(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_start_buffer	deps/nuklear.h	/^nk_start_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f	typeref:typename:NK_LIB void
nk_start_popup	deps/nuklear.h	/^nk_start_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_str	deps/nuklear.h	/^struct nk_str {$/;"	s
nk_str_append_str_char	deps/nuklear.h	/^nk_str_append_str_char(struct nk_str *s, const char *str)$/;"	f	typeref:typename:NK_API int
nk_str_append_str_runes	deps/nuklear.h	/^nk_str_append_str_runes(struct nk_str *str, const nk_rune *runes)$/;"	f	typeref:typename:NK_API int
nk_str_append_str_utf8	deps/nuklear.h	/^nk_str_append_str_utf8(struct nk_str *str, const char *text)$/;"	f	typeref:typename:NK_API int
nk_str_append_text_char	deps/nuklear.h	/^nk_str_append_text_char(struct nk_str *s, const char *str, int len)$/;"	f	typeref:typename:NK_API int
nk_str_append_text_runes	deps/nuklear.h	/^nk_str_append_text_runes(struct nk_str *str, const nk_rune *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_append_text_utf8	deps/nuklear.h	/^nk_str_append_text_utf8(struct nk_str *str, const char *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_at_char	deps/nuklear.h	/^nk_str_at_char(struct nk_str *s, int pos)$/;"	f	typeref:typename:NK_API char *
nk_str_at_char_const	deps/nuklear.h	/^nk_str_at_char_const(const struct nk_str *s, int pos)$/;"	f	typeref:typename:NK_API const char *
nk_str_at_const	deps/nuklear.h	/^nk_str_at_const(const struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f	typeref:typename:NK_API const char *
nk_str_at_rune	deps/nuklear.h	/^nk_str_at_rune(struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f	typeref:typename:NK_API char *
nk_str_clear	deps/nuklear.h	/^nk_str_clear(struct nk_str *str)$/;"	f	typeref:typename:NK_API void
nk_str_delete_chars	deps/nuklear.h	/^nk_str_delete_chars(struct nk_str *s, int pos, int len)$/;"	f	typeref:typename:NK_API void
nk_str_delete_runes	deps/nuklear.h	/^nk_str_delete_runes(struct nk_str *s, int pos, int len)$/;"	f	typeref:typename:NK_API void
nk_str_free	deps/nuklear.h	/^nk_str_free(struct nk_str *str)$/;"	f	typeref:typename:NK_API void
nk_str_get	deps/nuklear.h	/^nk_str_get(struct nk_str *s)$/;"	f	typeref:typename:NK_API char *
nk_str_get_const	deps/nuklear.h	/^nk_str_get_const(const struct nk_str *s)$/;"	f	typeref:typename:NK_API const char *
nk_str_init	deps/nuklear.h	/^nk_str_init(struct nk_str *str, const struct nk_allocator *alloc, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_str_init_default	deps/nuklear.h	/^nk_str_init_default(struct nk_str *str)$/;"	f	typeref:typename:NK_API void
nk_str_init_fixed	deps/nuklear.h	/^nk_str_init_fixed(struct nk_str *str, void *memory, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_str_insert_at_char	deps/nuklear.h	/^nk_str_insert_at_char(struct nk_str *s, int pos, const char *str, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_at_rune	deps/nuklear.h	/^nk_str_insert_at_rune(struct nk_str *str, int pos, const char *cstr, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_str_char	deps/nuklear.h	/^nk_str_insert_str_char(struct nk_str *str, int pos, const char *text)$/;"	f	typeref:typename:NK_API int
nk_str_insert_str_runes	deps/nuklear.h	/^nk_str_insert_str_runes(struct nk_str *str, int pos, const nk_rune *runes)$/;"	f	typeref:typename:NK_API int
nk_str_insert_str_utf8	deps/nuklear.h	/^nk_str_insert_str_utf8(struct nk_str *str, int pos, const char *text)$/;"	f	typeref:typename:NK_API int
nk_str_insert_text_char	deps/nuklear.h	/^nk_str_insert_text_char(struct nk_str *str, int pos, const char *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_text_runes	deps/nuklear.h	/^nk_str_insert_text_runes(struct nk_str *str, int pos, const nk_rune *runes, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_text_utf8	deps/nuklear.h	/^nk_str_insert_text_utf8(struct nk_str *str, int pos, const char *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_len	deps/nuklear.h	/^nk_str_len(struct nk_str *s)$/;"	f	typeref:typename:NK_API int
nk_str_len_char	deps/nuklear.h	/^nk_str_len_char(struct nk_str *s)$/;"	f	typeref:typename:NK_API int
nk_str_match_here	deps/nuklear.h	/^nk_str_match_here(const char *regexp, const char *text)$/;"	f	typeref:typename:NK_INTERN int
nk_str_match_star	deps/nuklear.h	/^nk_str_match_star(int c, const char *regexp, const char *text)$/;"	f	typeref:typename:NK_INTERN int
nk_str_remove_chars	deps/nuklear.h	/^nk_str_remove_chars(struct nk_str *s, int len)$/;"	f	typeref:typename:NK_API void
nk_str_remove_runes	deps/nuklear.h	/^nk_str_remove_runes(struct nk_str *str, int len)$/;"	f	typeref:typename:NK_API void
nk_str_rune_at	deps/nuklear.h	/^nk_str_rune_at(const struct nk_str *str, int pos)$/;"	f	typeref:typename:NK_API nk_rune
nk_strfilter	deps/nuklear.h	/^nk_strfilter(const char *text, const char *regexp)$/;"	f	typeref:typename:NK_API int
nk_strfmt	deps/nuklear.h	/^nk_strfmt(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_LIB int
nk_stricmp	deps/nuklear.h	/^nk_stricmp(const char *s1, const char *s2)$/;"	f	typeref:typename:NK_API int
nk_stricmpn	deps/nuklear.h	/^nk_stricmpn(const char *s1, const char *s2, int n)$/;"	f	typeref:typename:NK_API int
nk_string_float_limit	deps/nuklear.h	/^nk_string_float_limit(char *string, int prec)$/;"	f	typeref:typename:NK_LIB int
nk_strlen	deps/nuklear.h	/^nk_strlen(const char *str)$/;"	f	typeref:typename:NK_API int
nk_strmatch_fuzzy_string	deps/nuklear.h	/^nk_strmatch_fuzzy_string(char const *str, char const *pattern, int *out_score)$/;"	f	typeref:typename:NK_API int
nk_strmatch_fuzzy_text	deps/nuklear.h	/^nk_strmatch_fuzzy_text(const char *str, int str_len,$/;"	f	typeref:typename:NK_API int
nk_stroke_arc	deps/nuklear.h	/^nk_stroke_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f	typeref:typename:NK_API void
nk_stroke_circle	deps/nuklear.h	/^nk_stroke_circle(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_stroke_curve	deps/nuklear.h	/^nk_stroke_curve(struct nk_command_buffer *b, float ax, float ay,$/;"	f	typeref:typename:NK_API void
nk_stroke_line	deps/nuklear.h	/^nk_stroke_line(struct nk_command_buffer *b, float x0, float y0,$/;"	f	typeref:typename:NK_API void
nk_stroke_polygon	deps/nuklear.h	/^nk_stroke_polygon(struct nk_command_buffer *b,  float *points, int point_count,$/;"	f	typeref:typename:NK_API void
nk_stroke_polyline	deps/nuklear.h	/^nk_stroke_polyline(struct nk_command_buffer *b, float *points, int point_count,$/;"	f	typeref:typename:NK_API void
nk_stroke_rect	deps/nuklear.h	/^nk_stroke_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_stroke_triangle	deps/nuklear.h	/^nk_stroke_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f	typeref:typename:NK_API void
nk_strrev_ascii	deps/nuklear.h	/^nk_strrev_ascii(char *s)$/;"	f	typeref:typename:NK_INTERN void
nk_strtod	deps/nuklear.h	/^nk_strtod(const char *str, const char **endptr)$/;"	f	typeref:typename:NK_API double
nk_strtof	deps/nuklear.h	/^nk_strtof(const char *str, const char **endptr)$/;"	f	typeref:typename:NK_API float
nk_strtoi	deps/nuklear.h	/^nk_strtoi(const char *str, const char **endptr)$/;"	f	typeref:typename:NK_API int
nk_style	deps/nuklear.h	/^struct nk_style {$/;"	s
nk_style_button	deps/nuklear.h	/^struct nk_style_button {$/;"	s
nk_style_chart	deps/nuklear.h	/^struct nk_style_chart {$/;"	s
nk_style_colors	deps/nuklear.h	/^enum nk_style_colors {$/;"	g
nk_style_combo	deps/nuklear.h	/^struct nk_style_combo {$/;"	s
nk_style_cursor	deps/nuklear.h	/^enum nk_style_cursor {$/;"	g
nk_style_default	deps/nuklear.h	/^NK_API void nk_style_default(struct nk_context *ctx){nk_style_from_table(ctx, 0);}$/;"	f	typeref:typename:NK_API void
nk_style_edit	deps/nuklear.h	/^struct nk_style_edit {$/;"	s
nk_style_from_table	deps/nuklear.h	/^nk_style_from_table(struct nk_context *ctx, const struct nk_color *table)$/;"	f	typeref:typename:NK_API void
nk_style_get_color_by_name	deps/nuklear.h	/^nk_style_get_color_by_name(enum nk_style_colors c)$/;"	f	typeref:typename:NK_API const char *
nk_style_header_align	deps/nuklear.h	/^enum nk_style_header_align {$/;"	g
nk_style_hide_cursor	deps/nuklear.h	/^nk_style_hide_cursor(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_style_item	deps/nuklear.h	/^struct nk_style_item {$/;"	s
nk_style_item_color	deps/nuklear.h	/^nk_style_item_color(struct nk_color col)$/;"	f	typeref:typename:NK_API struct nk_style_item
nk_style_item_data	deps/nuklear.h	/^union nk_style_item_data {$/;"	u
nk_style_item_hide	deps/nuklear.h	/^nk_style_item_hide(void)$/;"	f	typeref:typename:NK_API struct nk_style_item
nk_style_item_image	deps/nuklear.h	/^nk_style_item_image(struct nk_image img)$/;"	f	typeref:typename:NK_API struct nk_style_item
nk_style_item_type	deps/nuklear.h	/^enum nk_style_item_type {$/;"	g
nk_style_load_all_cursors	deps/nuklear.h	/^nk_style_load_all_cursors(struct nk_context *ctx, struct nk_cursor *cursors)$/;"	f	typeref:typename:NK_API void
nk_style_load_cursor	deps/nuklear.h	/^nk_style_load_cursor(struct nk_context *ctx, enum nk_style_cursor cursor,$/;"	f	typeref:typename:NK_API void
nk_style_pop_font	deps/nuklear.h	/^nk_style_pop_font(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_style_progress	deps/nuklear.h	/^struct nk_style_progress {$/;"	s
nk_style_property	deps/nuklear.h	/^struct nk_style_property {$/;"	s
nk_style_push_font	deps/nuklear.h	/^nk_style_push_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_API int
nk_style_scrollbar	deps/nuklear.h	/^struct nk_style_scrollbar {$/;"	s
nk_style_selectable	deps/nuklear.h	/^struct nk_style_selectable {$/;"	s
nk_style_set_font	deps/nuklear.h	/^nk_style_set_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_API void
nk_style_show_cursor	deps/nuklear.h	/^nk_style_show_cursor(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_style_slider	deps/nuklear.h	/^struct nk_style_slider {$/;"	s
nk_style_tab	deps/nuklear.h	/^struct nk_style_tab {$/;"	s
nk_style_text	deps/nuklear.h	/^struct nk_style_text {$/;"	s
nk_style_toggle	deps/nuklear.h	/^struct nk_style_toggle {$/;"	s
nk_style_window	deps/nuklear.h	/^struct nk_style_window {$/;"	s
nk_style_window_header	deps/nuklear.h	/^struct nk_style_window_header {$/;"	s
nk_subimage_handle	deps/nuklear.h	/^nk_subimage_handle(nk_handle handle, unsigned short w, unsigned short h,$/;"	f	typeref:typename:NK_API struct nk_image
nk_subimage_id	deps/nuklear.h	/^nk_subimage_id(int id, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_image
nk_subimage_ptr	deps/nuklear.h	/^nk_subimage_ptr(void *ptr, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_image
nk_symbol_type	deps/nuklear.h	/^enum nk_symbol_type {$/;"	g
nk_table	deps/nuklear.h	/^struct nk_table {$/;"	s
nk_text	deps/nuklear.h	/^nk_text(struct nk_context *ctx, const char *str, int len, nk_flags alignment)$/;"	f	typeref:typename:NK_API void
nk_text	deps/nuklear.h	/^struct nk_text {$/;"	s
nk_text_align	deps/nuklear.h	/^enum nk_text_align {$/;"	g
nk_text_alignment	deps/nuklear.h	/^enum nk_text_alignment {$/;"	g
nk_text_calculate_text_bounds	deps/nuklear.h	/^nk_text_calculate_text_bounds(const struct nk_user_font *font,$/;"	f	typeref:typename:NK_LIB struct nk_vec2
nk_text_clamp	deps/nuklear.h	/^nk_text_clamp(const struct nk_user_font *font, const char *text,$/;"	f	typeref:typename:NK_LIB int
nk_text_colored	deps/nuklear.h	/^nk_text_colored(struct nk_context *ctx, const char *str, int len,$/;"	f	typeref:typename:NK_API void
nk_text_edit	deps/nuklear.h	/^struct nk_text_edit {$/;"	s
nk_text_edit_mode	deps/nuklear.h	/^enum nk_text_edit_mode {$/;"	g
nk_text_edit_row	deps/nuklear.h	/^struct nk_text_edit_row {$/;"	s
nk_text_edit_type	deps/nuklear.h	/^enum nk_text_edit_type {$/;"	g
nk_text_find	deps/nuklear.h	/^struct nk_text_find {$/;"	s
nk_text_undo_record	deps/nuklear.h	/^struct nk_text_undo_record {$/;"	s
nk_text_undo_state	deps/nuklear.h	/^struct nk_text_undo_state {$/;"	s
nk_text_width_f	deps/nuklear.h	/^typedef float(*nk_text_width_f)(nk_handle, float h, const char*, int len);$/;"	t	typeref:typename:float (*)(nk_handle,float h,const char *,int len)
nk_text_wrap	deps/nuklear.h	/^nk_text_wrap(struct nk_context *ctx, const char *str, int len)$/;"	f	typeref:typename:NK_API void
nk_text_wrap_colored	deps/nuklear.h	/^nk_text_wrap_colored(struct nk_context *ctx, const char *str,$/;"	f	typeref:typename:NK_API void
nk_textedit_clamp	deps/nuklear.h	/^nk_textedit_clamp(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_clear_state	deps/nuklear.h	/^nk_textedit_clear_state(struct nk_text_edit *state, enum nk_text_edit_type type,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_click	deps/nuklear.h	/^nk_textedit_click(struct nk_text_edit *state, float x, float y,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_create_undo_record	deps/nuklear.h	/^nk_textedit_create_undo_record(struct nk_text_undo_state *state, int numchars)$/;"	f	typeref:typename:NK_INTERN struct nk_text_undo_record *
nk_textedit_createundo	deps/nuklear.h	/^nk_textedit_createundo(struct nk_text_undo_state *state, int pos,$/;"	f	typeref:typename:NK_INTERN nk_rune *
nk_textedit_cut	deps/nuklear.h	/^nk_textedit_cut(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API int
nk_textedit_delete	deps/nuklear.h	/^nk_textedit_delete(struct nk_text_edit *state, int where, int len)$/;"	f	typeref:typename:NK_API void
nk_textedit_delete_selection	deps/nuklear.h	/^nk_textedit_delete_selection(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_discard_redo	deps/nuklear.h	/^nk_textedit_discard_redo(struct nk_text_undo_state *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_discard_undo	deps/nuklear.h	/^nk_textedit_discard_undo(struct nk_text_undo_state *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_drag	deps/nuklear.h	/^nk_textedit_drag(struct nk_text_edit *state, float x, float y,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_find_charpos	deps/nuklear.h	/^nk_textedit_find_charpos(struct nk_text_find *find, struct nk_text_edit *state,$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_flush_redo	deps/nuklear.h	/^nk_textedit_flush_redo(struct nk_text_undo_state *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_free	deps/nuklear.h	/^nk_textedit_free(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_get_width	deps/nuklear.h	/^nk_textedit_get_width(const struct nk_text_edit *edit, int line_start, int char_id,$/;"	f	typeref:typename:NK_INTERN float
nk_textedit_init	deps/nuklear.h	/^nk_textedit_init(struct nk_text_edit *state, struct nk_allocator *alloc, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_textedit_init_default	deps/nuklear.h	/^nk_textedit_init_default(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_init_fixed	deps/nuklear.h	/^nk_textedit_init_fixed(struct nk_text_edit *state, void *memory, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_textedit_key	deps/nuklear.h	/^nk_textedit_key(struct nk_text_edit *state, enum nk_keys key, int shift_mod,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_layout_row	deps/nuklear.h	/^nk_textedit_layout_row(struct nk_text_edit_row *r, struct nk_text_edit *edit,$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_locate_coord	deps/nuklear.h	/^nk_textedit_locate_coord(struct nk_text_edit *edit, float x, float y,$/;"	f	typeref:typename:NK_INTERN int
nk_textedit_makeundo_delete	deps/nuklear.h	/^nk_textedit_makeundo_delete(struct nk_text_edit *state, int where, int length)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_makeundo_insert	deps/nuklear.h	/^nk_textedit_makeundo_insert(struct nk_text_edit *state, int where, int length)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_makeundo_replace	deps/nuklear.h	/^nk_textedit_makeundo_replace(struct nk_text_edit *state, int where,$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_move_to_first	deps/nuklear.h	/^nk_textedit_move_to_first(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_move_to_last	deps/nuklear.h	/^nk_textedit_move_to_last(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_move_to_word_next	deps/nuklear.h	/^nk_textedit_move_to_word_next(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN int
nk_textedit_move_to_word_previous	deps/nuklear.h	/^nk_textedit_move_to_word_previous(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN int
nk_textedit_paste	deps/nuklear.h	/^nk_textedit_paste(struct nk_text_edit *state, char const *ctext, int len)$/;"	f	typeref:typename:NK_API int
nk_textedit_prep_selection_at_cursor	deps/nuklear.h	/^nk_textedit_prep_selection_at_cursor(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_redo	deps/nuklear.h	/^nk_textedit_redo(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_select_all	deps/nuklear.h	/^nk_textedit_select_all(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_sortselection	deps/nuklear.h	/^nk_textedit_sortselection(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_text	deps/nuklear.h	/^nk_textedit_text(struct nk_text_edit *state, const char *text, int total_len)$/;"	f	typeref:typename:NK_API void
nk_textedit_undo	deps/nuklear.h	/^nk_textedit_undo(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_to_lower	deps/nuklear.h	/^NK_LIB int nk_to_lower(int c) {return (c >= 'A' && c <= 'Z') ? (c - ('a' + 'A')) : c;}$/;"	f	typeref:typename:NK_LIB int
nk_to_upper	deps/nuklear.h	/^NK_LIB int nk_to_upper(int c) {return (c >= 'a' && c <= 'z') ? (c - ('a' - 'A')) : c;}$/;"	f	typeref:typename:NK_LIB int
nk_toggle_behavior	deps/nuklear.h	/^nk_toggle_behavior(const struct nk_input *in, struct nk_rect select,$/;"	f	typeref:typename:NK_LIB int
nk_toggle_type	deps/nuklear.h	/^enum nk_toggle_type {$/;"	g
nk_tooltip	deps/nuklear.h	/^nk_tooltip(struct nk_context *ctx, const char *text)$/;"	f	typeref:typename:NK_API void
nk_tooltip_begin	deps/nuklear.h	/^nk_tooltip_begin(struct nk_context *ctx, float width)$/;"	f	typeref:typename:NK_API int
nk_tooltip_end	deps/nuklear.h	/^nk_tooltip_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tooltipf	deps/nuklear.h	/^nk_tooltipf(struct nk_context *ctx, const char *fmt, ...)$/;"	f	typeref:typename:NK_API void
nk_tooltipfv	deps/nuklear.h	/^nk_tooltipfv(struct nk_context *ctx, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_API void
nk_tree_base	deps/nuklear.h	/^nk_tree_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_element_base	deps/nuklear.h	/^nk_tree_element_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_element_image_push_hashed	deps/nuklear.h	/^nk_tree_element_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_element_image_push_hashed_base	deps/nuklear.h	/^nk_tree_element_image_push_hashed_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_element_pop	deps/nuklear.h	/^nk_tree_element_pop(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tree_element_push	deps/nuklear.h	/^#define nk_tree_element_push(/;"	d
nk_tree_element_push_hashed	deps/nuklear.h	/^nk_tree_element_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_element_push_id	deps/nuklear.h	/^#define nk_tree_element_push_id(/;"	d
nk_tree_image_push	deps/nuklear.h	/^#define nk_tree_image_push(/;"	d
nk_tree_image_push_hashed	deps/nuklear.h	/^nk_tree_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_image_push_id	deps/nuklear.h	/^#define nk_tree_image_push_id(/;"	d
nk_tree_pop	deps/nuklear.h	/^nk_tree_pop(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tree_push	deps/nuklear.h	/^#define nk_tree_push(/;"	d
nk_tree_push_hashed	deps/nuklear.h	/^nk_tree_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_push_id	deps/nuklear.h	/^#define nk_tree_push_id(/;"	d
nk_tree_state_base	deps/nuklear.h	/^nk_tree_state_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_state_image_push	deps/nuklear.h	/^nk_tree_state_image_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_state_pop	deps/nuklear.h	/^nk_tree_state_pop(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tree_state_push	deps/nuklear.h	/^nk_tree_state_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_type	deps/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	g
nk_triangle_from_direction	deps/nuklear.h	/^nk_triangle_from_direction(struct nk_vec2 *result, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_true	deps/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anonca7851080103
nk_ttBYTE	deps/nuklear.h	/^#define nk_ttBYTE(/;"	d
nk_ttCHAR	deps/nuklear.h	/^#define nk_ttCHAR(/;"	d
nk_ttLONG	deps/nuklear.h	/^   #define nk_ttLONG(/;"	d
nk_ttSHORT	deps/nuklear.h	/^    static nk_short nk_ttSHORT(const nk_byte *p)   { return (nk_short)(p[0]*256 + p[1]); }$/;"	f	typeref:typename:nk_short
nk_ttSHORT	deps/nuklear.h	/^   #define nk_ttSHORT(/;"	d
nk_ttULONG	deps/nuklear.h	/^    static nk_uint nk_ttULONG(const nk_byte *p)  { return (nk_uint)((p[0]<<24) + (p[1]<<16) + (p/;"	f	typeref:typename:nk_uint
nk_ttULONG	deps/nuklear.h	/^   #define nk_ttULONG(/;"	d
nk_ttUSHORT	deps/nuklear.h	/^    static nk_ushort nk_ttUSHORT(const nk_byte *p) { return (nk_ushort)(p[0]*256 + p[1]); }$/;"	f	typeref:typename:nk_ushort
nk_ttUSHORT	deps/nuklear.h	/^   #define nk_ttUSHORT(/;"	d
nk_tt_FindGlyphIndex	deps/nuklear.h	/^nk_tt_FindGlyphIndex(const struct nk_tt_fontinfo *info, int unicode_codepoint)$/;"	f	typeref:typename:NK_INTERN int
nk_tt_FlattenCurves	deps/nuklear.h	/^nk_tt_FlattenCurves(struct nk_tt_vertex *vertices, int num_verts,$/;"	f	typeref:typename:NK_INTERN struct nk_tt__point *
nk_tt_GetFontVMetrics	deps/nuklear.h	/^nk_tt_GetFontVMetrics(const struct nk_tt_fontinfo *info,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphBitmapBox	deps/nuklear.h	/^nk_tt_GetGlyphBitmapBox(const struct nk_tt_fontinfo *font, int glyph,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphBitmapBoxSubpixel	deps/nuklear.h	/^nk_tt_GetGlyphBitmapBoxSubpixel(const struct nk_tt_fontinfo *font,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphBox	deps/nuklear.h	/^nk_tt_GetGlyphBox(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_GetGlyphHMetrics	deps/nuklear.h	/^nk_tt_GetGlyphHMetrics(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphShape	deps/nuklear.h	/^nk_tt_GetGlyphShape(const struct nk_tt_fontinfo *info, struct nk_allocator *alloc,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_GetPackedQuad	deps/nuklear.h	/^nk_tt_GetPackedQuad(struct nk_tt_packedchar *chardata, int pw, int ph,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_InitFont	deps/nuklear.h	/^nk_tt_InitFont(struct nk_tt_fontinfo *info, const unsigned char *data2, int fontstart)$/;"	f	typeref:typename:NK_INTERN int
nk_tt_MakeGlyphBitmapSubpixel	deps/nuklear.h	/^nk_tt_MakeGlyphBitmapSubpixel(const struct nk_tt_fontinfo *info, unsigned char *output,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_PackBegin	deps/nuklear.h	/^nk_tt_PackBegin(struct nk_tt_pack_context *spc, unsigned char *pixels,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_PackEnd	deps/nuklear.h	/^nk_tt_PackEnd(struct nk_tt_pack_context *spc, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_INTERN void
nk_tt_PackFontRangesGatherRects	deps/nuklear.h	/^nk_tt_PackFontRangesGatherRects(struct nk_tt_pack_context *spc,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_PackFontRangesRenderIntoRects	deps/nuklear.h	/^nk_tt_PackFontRangesRenderIntoRects(struct nk_tt_pack_context *spc,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_PackSetOversampling	deps/nuklear.h	/^nk_tt_PackSetOversampling(struct nk_tt_pack_context *spc,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_Rasterize	deps/nuklear.h	/^nk_tt_Rasterize(struct nk_tt__bitmap *result, float flatness_in_pixels,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_ScaleForMappingEmToPixels	deps/nuklear.h	/^nk_tt_ScaleForMappingEmToPixels(const struct nk_tt_fontinfo *info, float pixels)$/;"	f	typeref:typename:NK_INTERN float
nk_tt_ScaleForPixelHeight	deps/nuklear.h	/^nk_tt_ScaleForPixelHeight(const struct nk_tt_fontinfo *info, float height)$/;"	f	typeref:typename:NK_INTERN float
nk_tt__GetGlyfOffset	deps/nuklear.h	/^nk_tt__GetGlyfOffset(const struct nk_tt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:NK_INTERN int
nk_tt__active_edge	deps/nuklear.h	/^struct nk_tt__active_edge {$/;"	s
nk_tt__add_point	deps/nuklear.h	/^nk_tt__add_point(struct nk_tt__point *points, int n, float x, float y)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__bitmap	deps/nuklear.h	/^struct nk_tt__bitmap{$/;"	s
nk_tt__close_shape	deps/nuklear.h	/^nk_tt__close_shape(struct nk_tt_vertex *vertices, int num_vertices, int was_off,$/;"	f	typeref:typename:NK_INTERN int
nk_tt__edge	deps/nuklear.h	/^struct nk_tt__edge {$/;"	s
nk_tt__fill_active_edges_new	deps/nuklear.h	/^nk_tt__fill_active_edges_new(float *scanline, float *scanline_fill, int len,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__find_table	deps/nuklear.h	/^nk_tt__find_table(const nk_byte *data, nk_uint fontstart, const char *tag)$/;"	f	typeref:typename:NK_INTERN nk_uint
nk_tt__h_prefilter	deps/nuklear.h	/^nk_tt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__handle_clipped_edge	deps/nuklear.h	/^nk_tt__handle_clipped_edge(float *scanline, int x, struct nk_tt__active_edge *e,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__hheap	deps/nuklear.h	/^struct nk_tt__hheap {$/;"	s
nk_tt__hheap_alloc	deps/nuklear.h	/^nk_tt__hheap_alloc(struct nk_tt__hheap *hh, nk_size size)$/;"	f	typeref:typename:NK_INTERN void *
nk_tt__hheap_chunk	deps/nuklear.h	/^struct nk_tt__hheap_chunk {$/;"	s
nk_tt__hheap_cleanup	deps/nuklear.h	/^nk_tt__hheap_cleanup(struct nk_tt__hheap *hh)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__hheap_free	deps/nuklear.h	/^nk_tt__hheap_free(struct nk_tt__hheap *hh, void *p)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__new_active	deps/nuklear.h	/^nk_tt__new_active(struct nk_tt__hheap *hh, struct nk_tt__edge *e,$/;"	f	typeref:typename:NK_INTERN struct nk_tt__active_edge *
nk_tt__oversample_shift	deps/nuklear.h	/^nk_tt__oversample_shift(int oversample)$/;"	f	typeref:typename:NK_INTERN float
nk_tt__point	deps/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	s
nk_tt__rasterize	deps/nuklear.h	/^nk_tt__rasterize(struct nk_tt__bitmap *result, struct nk_tt__point *pts,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__rasterize_sorted_edges	deps/nuklear.h	/^nk_tt__rasterize_sorted_edges(struct nk_tt__bitmap *result, struct nk_tt__edge *e,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__sort_edges	deps/nuklear.h	/^nk_tt__sort_edges(struct nk_tt__edge *p, int n)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__sort_edges_ins_sort	deps/nuklear.h	/^nk_tt__sort_edges_ins_sort(struct nk_tt__edge *p, int n)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__sort_edges_quicksort	deps/nuklear.h	/^nk_tt__sort_edges_quicksort(struct nk_tt__edge *p, int n)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__tesselate_curve	deps/nuklear.h	/^nk_tt__tesselate_curve(struct nk_tt__point *points, int *num_points,$/;"	f	typeref:typename:NK_INTERN int
nk_tt__v_prefilter	deps/nuklear.h	/^nk_tt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_aligned_quad	deps/nuklear.h	/^struct nk_tt_aligned_quad{$/;"	s
nk_tt_bakedchar	deps/nuklear.h	/^struct nk_tt_bakedchar {$/;"	s
nk_tt_fontinfo	deps/nuklear.h	/^struct nk_tt_fontinfo {$/;"	s
nk_tt_pack_context	deps/nuklear.h	/^struct nk_tt_pack_context {$/;"	s
nk_tt_pack_range	deps/nuklear.h	/^struct nk_tt_pack_range {$/;"	s
nk_tt_packedchar	deps/nuklear.h	/^struct nk_tt_packedchar {$/;"	s
nk_tt_setvertex	deps/nuklear.h	/^nk_tt_setvertex(struct nk_tt_vertex *v, nk_byte type, nk_int x, nk_int y, nk_int cx, nk_int cy)$/;"	f	typeref:typename:NK_INTERN void
nk_tt_tag	deps/nuklear.h	/^#define nk_tt_tag(/;"	d
nk_tt_tag4	deps/nuklear.h	/^#define nk_tt_tag4(/;"	d
nk_tt_vertex	deps/nuklear.h	/^struct nk_tt_vertex {$/;"	s
nk_uchar	deps/nuklear.h	/^typedef NK_UINT8 nk_uchar;$/;"	t	typeref:typename:NK_UINT8
nk_uint	deps/nuklear.h	/^typedef NK_UINT32 nk_uint;$/;"	t	typeref:typename:NK_UINT32
nk_unify	deps/nuklear.h	/^nk_unify(struct nk_rect *clip, const struct nk_rect *a, float x0, float y0,$/;"	f	typeref:typename:NK_LIB void
nk_user_font	deps/nuklear.h	/^struct nk_user_font {$/;"	s
nk_user_font_glyph	deps/nuklear.h	/^struct nk_user_font_glyph {$/;"	s
nk_ushort	deps/nuklear.h	/^typedef NK_UINT16 nk_ushort;$/;"	t	typeref:typename:NK_UINT16
nk_utf_at	deps/nuklear.h	/^nk_utf_at(const char *buffer, int length, int index,$/;"	f	typeref:typename:NK_API const char *
nk_utf_decode	deps/nuklear.h	/^nk_utf_decode(const char *c, nk_rune *u, int clen)$/;"	f	typeref:typename:NK_API int
nk_utf_decode_byte	deps/nuklear.h	/^nk_utf_decode_byte(char c, int *i)$/;"	f	typeref:typename:NK_INTERN nk_rune
nk_utf_encode	deps/nuklear.h	/^nk_utf_encode(nk_rune u, char *c, int clen)$/;"	f	typeref:typename:NK_API int
nk_utf_encode_byte	deps/nuklear.h	/^nk_utf_encode_byte(nk_rune u, int i)$/;"	f	typeref:typename:NK_INTERN char
nk_utf_len	deps/nuklear.h	/^nk_utf_len(const char *str, int len)$/;"	f	typeref:typename:NK_API int
nk_utf_validate	deps/nuklear.h	/^nk_utf_validate(nk_rune *u, int i)$/;"	f	typeref:typename:NK_INTERN int
nk_utfbyte	deps/nuklear.h	/^NK_GLOBAL const nk_byte nk_utfbyte[NK_UTF_SIZE+1] = {0x80, 0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:NK_GLOBAL const nk_byte[]
nk_utfmask	deps/nuklear.h	/^NK_GLOBAL const nk_byte nk_utfmask[NK_UTF_SIZE+1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:NK_GLOBAL const nk_byte[]
nk_utfmax	deps/nuklear.h	/^NK_GLOBAL const nk_uint nk_utfmax[NK_UTF_SIZE+1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:NK_GLOBAL const nk_uint[]
nk_utfmin	deps/nuklear.h	/^NK_GLOBAL const nk_uint nk_utfmin[NK_UTF_SIZE+1] = {0, 0, 0x80, 0x800, 0x10000};$/;"	v	typeref:typename:NK_GLOBAL const nk_uint[]
nk_value_bool	deps/nuklear.h	/^nk_value_bool(struct nk_context *ctx, const char *prefix, int value)$/;"	f	typeref:typename:NK_API void
nk_value_color_byte	deps/nuklear.h	/^nk_value_color_byte(struct nk_context *ctx, const char *p, struct nk_color c)$/;"	f	typeref:typename:NK_API void
nk_value_color_float	deps/nuklear.h	/^nk_value_color_float(struct nk_context *ctx, const char *p, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_value_color_hex	deps/nuklear.h	/^nk_value_color_hex(struct nk_context *ctx, const char *prefix, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_value_float	deps/nuklear.h	/^nk_value_float(struct nk_context *ctx, const char *prefix, float value)$/;"	f	typeref:typename:NK_API void
nk_value_int	deps/nuklear.h	/^nk_value_int(struct nk_context *ctx, const char *prefix, int value)$/;"	f	typeref:typename:NK_API void
nk_value_uint	deps/nuklear.h	/^nk_value_uint(struct nk_context *ctx, const char *prefix, unsigned int value)$/;"	f	typeref:typename:NK_API void
nk_vec2	deps/nuklear.h	/^nk_vec2(float x, float y)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vec2	deps/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	s
nk_vec2_add	deps/nuklear.h	/^#define nk_vec2_add(/;"	d
nk_vec2_len_sqr	deps/nuklear.h	/^#define nk_vec2_len_sqr(/;"	d
nk_vec2_muls	deps/nuklear.h	/^#define nk_vec2_muls(/;"	d
nk_vec2_sub	deps/nuklear.h	/^#define nk_vec2_sub(/;"	d
nk_vec2i	deps/nuklear.h	/^nk_vec2i(int x, int y)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vec2i	deps/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	s
nk_vec2iv	deps/nuklear.h	/^nk_vec2iv(const int *v)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vec2v	deps/nuklear.h	/^nk_vec2v(const float *v)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vsnprintf	deps/nuklear.h	/^nk_vsnprintf(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_INTERN int
nk_white	deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_white = {255,255,255,255};$/;"	v	typeref:typename:const struct nk_color
nk_widget	deps/nuklear.h	/^nk_widget(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API enum nk_widget_layout_states
nk_widget_bounds	deps/nuklear.h	/^nk_widget_bounds(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_widget_fitting	deps/nuklear.h	/^nk_widget_fitting(struct nk_rect *bounds, struct nk_context *ctx,$/;"	f	typeref:typename:NK_API enum nk_widget_layout_states
nk_widget_has_mouse_click_down	deps/nuklear.h	/^nk_widget_has_mouse_click_down(struct nk_context *ctx, enum nk_buttons btn, int down)$/;"	f	typeref:typename:NK_API int
nk_widget_height	deps/nuklear.h	/^nk_widget_height(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_widget_is_hovered	deps/nuklear.h	/^nk_widget_is_hovered(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_widget_is_mouse_clicked	deps/nuklear.h	/^nk_widget_is_mouse_clicked(struct nk_context *ctx, enum nk_buttons btn)$/;"	f	typeref:typename:NK_API int
nk_widget_layout_states	deps/nuklear.h	/^enum nk_widget_layout_states {$/;"	g
nk_widget_position	deps/nuklear.h	/^nk_widget_position(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_widget_size	deps/nuklear.h	/^nk_widget_size(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_widget_state_reset	deps/nuklear.h	/^#define nk_widget_state_reset(/;"	d
nk_widget_states	deps/nuklear.h	/^enum nk_widget_states {$/;"	g
nk_widget_text	deps/nuklear.h	/^nk_widget_text(struct nk_command_buffer *o, struct nk_rect b,$/;"	f	typeref:typename:NK_LIB void
nk_widget_text_wrap	deps/nuklear.h	/^nk_widget_text_wrap(struct nk_command_buffer *o, struct nk_rect b,$/;"	f	typeref:typename:NK_LIB void
nk_widget_width	deps/nuklear.h	/^nk_widget_width(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_window	deps/nuklear.h	/^struct nk_window {$/;"	s
nk_window_close	deps/nuklear.h	/^nk_window_close(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API void
nk_window_collapse	deps/nuklear.h	/^nk_window_collapse(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_window_collapse_if	deps/nuklear.h	/^nk_window_collapse_if(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_window_find	deps/nuklear.h	/^nk_window_find(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API struct nk_window *
nk_window_flags	deps/nuklear.h	/^enum nk_window_flags {$/;"	g
nk_window_get_bounds	deps/nuklear.h	/^nk_window_get_bounds(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_window_get_canvas	deps/nuklear.h	/^nk_window_get_canvas(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_command_buffer *
nk_window_get_content_region	deps/nuklear.h	/^nk_window_get_content_region(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_window_get_content_region_max	deps/nuklear.h	/^nk_window_get_content_region_max(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_content_region_min	deps/nuklear.h	/^nk_window_get_content_region_min(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_content_region_size	deps/nuklear.h	/^nk_window_get_content_region_size(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_height	deps/nuklear.h	/^nk_window_get_height(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_window_get_panel	deps/nuklear.h	/^nk_window_get_panel(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_panel *
nk_window_get_position	deps/nuklear.h	/^nk_window_get_position(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_size	deps/nuklear.h	/^nk_window_get_size(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_width	deps/nuklear.h	/^nk_window_get_width(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_window_has_focus	deps/nuklear.h	/^nk_window_has_focus(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_window_insert_location	deps/nuklear.h	/^enum nk_window_insert_location {$/;"	g
nk_window_is_active	deps/nuklear.h	/^nk_window_is_active(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_any_hovered	deps/nuklear.h	/^nk_window_is_any_hovered(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_window_is_closed	deps/nuklear.h	/^nk_window_is_closed(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_collapsed	deps/nuklear.h	/^nk_window_is_collapsed(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_hidden	deps/nuklear.h	/^nk_window_is_hidden(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_hovered	deps/nuklear.h	/^nk_window_is_hovered(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_window_set_bounds	deps/nuklear.h	/^nk_window_set_bounds(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_window_set_focus	deps/nuklear.h	/^nk_window_set_focus(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API void
nk_window_set_position	deps/nuklear.h	/^nk_window_set_position(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_window_set_size	deps/nuklear.h	/^nk_window_set_size(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_window_show	deps/nuklear.h	/^nk_window_show(struct nk_context *ctx, const char *name, enum nk_show_states s)$/;"	f	typeref:typename:NK_API void
nk_window_show_if	deps/nuklear.h	/^nk_window_show_if(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_wmask	deps/nuklear.h	/^    #define nk_wmask /;"	d
nk_word	deps/nuklear.h	/^    #define nk_word /;"	d
nk_wsize	deps/nuklear.h	/^    #define nk_wsize /;"	d
nk_yellow	deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_yellow = {255,255,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_zero	deps/nuklear.h	/^nk_zero(void *ptr, nk_size size)$/;"	f	typeref:typename:NK_LIB void
nk_zero_struct	deps/nuklear.h	/^#define nk_zero_struct(/;"	d
no_argument	deps/getopt.c	/^const int no_argument = 0;$/;"	v	typeref:typename:const int
node_maximize_button	deps/nuklear.h	/^    struct nk_style_button node_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
node_minimize_button	deps/nuklear.h	/^    struct nk_style_button node_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
nodes	deps/nuklear.h	/^    void  *nodes;$/;"	m	struct:nk_tt_pack_context	typeref:typename:void *
noerror	src/internal.h	/^    GLFWbool            forward, debug, noerror;$/;"	m	struct:_GLFWcontext	typeref:typename:GLFWbool
noerror	src/internal.h	/^    GLFWbool      noerror;$/;"	m	struct:_GLFWctxconfig	typeref:typename:GLFWbool
nonCoherentAtomSize	deps/glad/vulkan.h	/^    VkDeviceSize             nonCoherentAtomSize;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkDeviceSize
normal	deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_item
normal	deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_item
normal	deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_item
normal	deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
normal	deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_item
normal	deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
normal	deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
normal	deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
normal	deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
normal	deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_item
normal_active	deps/nuklear.h	/^    struct nk_style_item normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
nrand	tests/empty.c	/^static float nrand(void)$/;"	f	typeref:typename:float	file:
nrand	tests/timeout.c	/^static float nrand(void)$/;"	f	typeref:typename:float	file:
ns	src/internal.h	/^    } ns;$/;"	m	struct:_GLFWinitconfig	typeref:struct:_GLFWinitconfig::__anona0faa0af0108
ns	src/internal.h	/^    } ns;$/;"	m	struct:_GLFWwndconfig	typeref:struct:_GLFWwndconfig::__anona0faa0af0208
ns41bafada0101	docs/spaces.svg	/^   sodipodi:docname="spaces.svg">$/;"	n	uri:http://www.w3.org/2000/svg
nsgl	src/internal.h	/^    } nsgl;$/;"	m	struct:_GLFWctxconfig	typeref:struct:_GLFWctxconfig::__anona0faa0af0508
ntdll	src/win32_platform.h	/^    } ntdll;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon622bd5890b08
null	deps/nuklear.h	/^    struct nk_draw_null_texture null; \/* handle to texture with a white pixel for shape drawing/;"	m	struct:nk_convert_config	typeref:struct:nk_draw_null_texture
null	deps/nuklear_glfw_gl2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_draw_null_texture
numGlyphs	deps/nuklear.h	/^    int numGlyphs;\/* number of glyphs, needed for range checking *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
numLockMask	src/wl_platform.h	/^        xkb_mod_mask_t          numLockMask;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:xkb_mod_mask_t
num_chars	deps/nuklear.h	/^    int num_chars;$/;"	m	struct:nk_tt_pack_range	typeref:typename:int
num_chars	deps/nuklear.h	/^   int num_chars;$/;"	m	struct:nk_text_edit_row	typeref:typename:int
num_nodes	deps/nuklear.h	/^    int num_nodes;$/;"	m	struct:nk_rp_context	typeref:typename:int
num_remaining_in_head_chunk	deps/nuklear.h	/^    int    num_remaining_in_head_chunk;$/;"	m	struct:nk_tt__hheap	typeref:typename:int
number	tests/events.c	/^    int number;$/;"	m	struct:__anon79ddf3cd0108	typeref:typename:int	file:
numer	src/internal.h	/^    int                 numer, denom;$/;"	m	struct:_GLFWwindow	typeref:typename:int
object	src/cocoa_platform.h	/^    id              object;$/;"	E	struct:_GLFWwindowNS
object	src/cocoa_platform.h	/^    id              object;$/;"	t
object	src/nsgl_context.h	/^    id                object;$/;"	m	struct:_GLFWcontextNSGL	typeref:typename:id
objectCount	src/win32_joystick.c	/^    int                     objectCount;$/;"	m	struct:_GLFWobjenumWin32	typeref:typename:int	file:
objectCount	src/win32_joystick.h	/^    int                     objectCount;$/;"	m	struct:_GLFWjoystickWin32	typeref:typename:int
objects	src/win32_joystick.c	/^    _GLFWjoyobjectWin32*    objects;$/;"	m	struct:_GLFWobjenumWin32	typeref:typename:_GLFWjoyobjectWin32 *	file:
objects	src/win32_joystick.h	/^    _GLFWjoyobjectWin32*    objects;$/;"	m	struct:_GLFWjoystickWin32	typeref:typename:_GLFWjoyobjectWin32 *
occlusionQueryEnable	deps/glad/vulkan.h	/^    VkBool32                 occlusionQueryEnable;$/;"	m	struct:VkCommandBufferInheritanceInfo	typeref:typename:VkBool32
occlusionQueryPrecise	deps/glad/vulkan.h	/^    VkBool32                 occlusionQueryPrecise;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
occlusion_query	tests/inputlag.c	/^GLuint occlusion_query;$/;"	v	typeref:typename:GLuint
offline	src/internal.h	/^        GLFWbool  offline;$/;"	m	struct:_GLFWctxconfig::__anona0faa0af0508	typeref:typename:GLFWbool
offscreen	examples/CMakeLists.txt	/^add_executable(offscreen offscreen.c ${ICON} ${GLAD_GL})$/;"	t
offset	deps/glad/vulkan.h	/^    VkDeviceSize             offset;$/;"	m	struct:VkBufferMemoryBarrier	typeref:typename:VkDeviceSize
offset	deps/glad/vulkan.h	/^    VkDeviceSize             offset;$/;"	m	struct:VkBufferViewCreateInfo	typeref:typename:VkDeviceSize
offset	deps/glad/vulkan.h	/^    VkDeviceSize             offset;$/;"	m	struct:VkDescriptorBufferInfo	typeref:typename:VkDeviceSize
offset	deps/glad/vulkan.h	/^    VkDeviceSize             offset;$/;"	m	struct:VkMappedMemoryRange	typeref:typename:VkDeviceSize
offset	deps/glad/vulkan.h	/^    VkDeviceSize             offset;$/;"	m	struct:VkSubresourceLayout	typeref:typename:VkDeviceSize
offset	deps/glad/vulkan.h	/^    VkOffset2D       offset;$/;"	m	struct:VkRect2D	typeref:typename:VkOffset2D
offset	deps/glad/vulkan.h	/^    VkOffset3D               offset;$/;"	m	struct:VkSparseImageMemoryBind	typeref:typename:VkOffset3D
offset	deps/glad/vulkan.h	/^    size_t                             offset;$/;"	m	struct:VkDescriptorUpdateTemplateEntry	typeref:typename:size_t
offset	deps/glad/vulkan.h	/^    uint32_t                       offset;$/;"	m	struct:VkSpecializationMapEntry	typeref:typename:uint32_t
offset	deps/glad/vulkan.h	/^    uint32_t                 offset;$/;"	m	struct:VkPushConstantRange	typeref:typename:uint32_t
offset	deps/glad/vulkan.h	/^    uint32_t                 offset;$/;"	m	struct:VkVertexInputAttributeDescription	typeref:typename:uint32_t
offset	deps/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_buffer_marker	typeref:typename:nk_size
offset	deps/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:typename:nk_size
offset	deps/nuklear.h	/^    struct nk_scroll offset;$/;"	m	struct:nk_menu_state	typeref:struct:nk_scroll
offset	deps/nuklear.h	/^    struct nk_vec2 offset;$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_vec2
offset	deps/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_vec2
offset	src/internal.h	/^        uint64_t        offset;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0808	typeref:typename:uint64_t
offset	src/win32_joystick.h	/^    int                     offset;$/;"	m	struct:_GLFWjoyobjectWin32	typeref:typename:int
offset_x	deps/nuklear.h	/^    nk_uint *offset_x;$/;"	m	struct:nk_panel	typeref:typename:nk_uint *
offset_y	deps/nuklear.h	/^    nk_uint *offset_y;$/;"	m	struct:nk_panel	typeref:typename:nk_uint *
ogl	deps/nuklear_glfw_gl2.h	/^    struct nk_glfw_device ogl;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw_device
old	deps/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned int
old	deps/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_property_state	typeref:typename:unsigned int
oldLayout	deps/glad/vulkan.h	/^    VkImageLayout            oldLayout;$/;"	m	struct:VkImageMemoryBarrier	typeref:typename:VkImageLayout
oldMode	src/x11_platform.h	/^    RRMode          oldMode;$/;"	m	struct:_GLFWmonitorX11	typeref:typename:RRMode
oldSwapchain	deps/glad/vulkan.h	/^    VkSwapchainKHR     oldSwapchain;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkSwapchainKHR
opacity	tests/CMakeLists.txt	/^add_executable(opacity WIN32 MACOSX_BUNDLE opacity.c ${GLAD_GL})$/;"	t
openJoystickDevice	src/linux_joystick.c	/^static GLFWbool openJoystickDevice(const char* path)$/;"	f	typeref:typename:GLFWbool	file:
optarg	deps/getopt.c	/^char* optarg;$/;"	v	typeref:typename:char *
optcursor	deps/getopt.c	/^static char* optcursor = NULL;$/;"	v	typeref:typename:char *	file:
opterr	deps/getopt.c	/^int opterr;$/;"	v	typeref:typename:int
optimalBufferCopyOffsetAlignment	deps/glad/vulkan.h	/^    VkDeviceSize             optimalBufferCopyOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkDeviceSize
optimalBufferCopyRowPitchAlignment	deps/glad/vulkan.h	/^    VkDeviceSize             optimalBufferCopyRowPitchAlignment;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkDeviceSize
optimalTilingFeatures	deps/glad/vulkan.h	/^    VkFormatFeatureFlags     optimalTilingFeatures;$/;"	m	struct:VkFormatProperties	typeref:typename:VkFormatFeatureFlags
optind	deps/getopt.c	/^int optind = 1;$/;"	v	typeref:typename:int
option	deps/getopt.h	/^struct option {$/;"	s
option	deps/nuklear.h	/^    struct nk_style_toggle option;$/;"	m	struct:nk_style	typeref:struct:nk_style_toggle
optional_argument	deps/getopt.c	/^const int optional_argument = 2;$/;"	v	typeref:typename:const int
optopt	deps/getopt.c	/^int optopt;$/;"	v	typeref:typename:int
originalRamp	src/internal.h	/^    GLFWgammaramp   originalRamp;$/;"	m	struct:_GLFWmonitor	typeref:typename:GLFWgammaramp
otherMouseDown:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
otherMouseDragged:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
otherMouseUp:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
output	src/wl_platform.h	/^    struct wl_output*           output;$/;"	m	struct:_GLFWmonitorWayland	typeref:struct:wl_output *
output	src/x11_platform.h	/^    RROutput        output;$/;"	m	struct:_GLFWmonitorX11	typeref:typename:RROutput
outputHandleDone	src/wl_monitor.c	/^static void outputHandleDone(void* data, struct wl_output* output)$/;"	f	typeref:typename:void	file:
outputHandleGeometry	src/wl_monitor.c	/^static void outputHandleGeometry(void* data,$/;"	f	typeref:typename:void	file:
outputHandleMode	src/wl_monitor.c	/^static void outputHandleMode(void* data,$/;"	f	typeref:typename:void	file:
outputHandleScale	src/wl_monitor.c	/^static void outputHandleScale(void* data,$/;"	f	typeref:typename:void	file:
outputListener	src/wl_monitor.c	/^static const struct wl_output_listener outputListener = {$/;"	v	typeref:typename:const struct wl_output_listener	file:
overlay	deps/nuklear.h	/^    struct nk_command_buffer overlay;$/;"	m	struct:nk_context	typeref:struct:nk_command_buffer
overrideRedirect	src/x11_platform.h	/^    GLFWbool        overrideRedirect;$/;"	m	struct:_GLFWwindowX11	typeref:typename:GLFWbool
override_pos	examples/boing.c	/^int override_pos        = GLFW_FALSE;$/;"	v	typeref:typename:int
oversample_h	deps/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
oversample_v	deps/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
p	deps/nuklear.h	/^    struct nk_font_config *p;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config *
p	examples/wave.c	/^double p[GRIDW][GRIDH];$/;"	v	typeref:typename:double[][]
pApplicationInfo	deps/glad/vulkan.h	/^    const  VkApplicationInfo *  pApplicationInfo;$/;"	m	struct:VkInstanceCreateInfo	typeref:typename:const VkApplicationInfo *
pApplicationName	deps/glad/vulkan.h	/^    const  char *      pApplicationName;$/;"	m	struct:VkApplicationInfo	typeref:typename:const char *
pAspectReferences	deps/glad/vulkan.h	/^    const  VkInputAttachmentAspectReference *  pAspectReferences;$/;"	m	struct:VkRenderPassInputAttachmentAspectCreateInfo	typeref:typename:const VkInputAttachmentAspectReference *
pAttachments	deps/glad/vulkan.h	/^    const  VkAttachmentDescription *  pAttachments;$/;"	m	struct:VkRenderPassCreateInfo	typeref:typename:const VkAttachmentDescription *
pAttachments	deps/glad/vulkan.h	/^    const  VkImageView *      pAttachments;$/;"	m	struct:VkFramebufferCreateInfo	typeref:typename:const VkImageView *
pAttachments	deps/glad/vulkan.h	/^    const  VkPipelineColorBlendAttachmentState *  pAttachments;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo	typeref:typename:const VkPipelineColorBlendAttachmentState *
pBindings	deps/glad/vulkan.h	/^    const  VkDescriptorSetLayoutBinding *  pBindings;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo	typeref:typename:const VkDescriptorSetLayoutBinding *
pBinds	deps/glad/vulkan.h	/^    const  VkSparseImageMemoryBind *  pBinds;$/;"	m	struct:VkSparseImageMemoryBindInfo	typeref:typename:const VkSparseImageMemoryBind *
pBinds	deps/glad/vulkan.h	/^    const  VkSparseMemoryBind *  pBinds;$/;"	m	struct:VkSparseBufferMemoryBindInfo	typeref:typename:const VkSparseMemoryBind *
pBinds	deps/glad/vulkan.h	/^    const  VkSparseMemoryBind *  pBinds;$/;"	m	struct:VkSparseImageOpaqueMemoryBindInfo	typeref:typename:const VkSparseMemoryBind *
pBufferBinds	deps/glad/vulkan.h	/^    const  VkSparseBufferMemoryBindInfo *  pBufferBinds;$/;"	m	struct:VkBindSparseInfo	typeref:typename:const VkSparseBufferMemoryBindInfo *
pBufferInfo	deps/glad/vulkan.h	/^    const  VkDescriptorBufferInfo *  pBufferInfo;$/;"	m	struct:VkWriteDescriptorSet	typeref:typename:const VkDescriptorBufferInfo *
pClearValues	deps/glad/vulkan.h	/^    const  VkClearValue *     pClearValues;$/;"	m	struct:VkRenderPassBeginInfo	typeref:typename:const VkClearValue *
pCode	deps/glad/vulkan.h	/^    const  uint32_t *             pCode;$/;"	m	struct:VkShaderModuleCreateInfo	typeref:typename:const uint32_t *
pColorAttachments	deps/glad/vulkan.h	/^    const  VkAttachmentReference *  pColorAttachments;$/;"	m	struct:VkSubpassDescription	typeref:typename:const VkAttachmentReference *
pColorBlendState	deps/glad/vulkan.h	/^    const  VkPipelineColorBlendStateCreateInfo *  pColorBlendState;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const VkPipelineColorBlendStateCreateInfo *
pCommandBufferDeviceMasks	deps/glad/vulkan.h	/^    const  uint32_t *     pCommandBufferDeviceMasks;$/;"	m	struct:VkDeviceGroupSubmitInfo	typeref:typename:const uint32_t *
pCommandBuffers	deps/glad/vulkan.h	/^    const  VkCommandBuffer *      pCommandBuffers;$/;"	m	struct:VkSubmitInfo	typeref:typename:const VkCommandBuffer *
pCorrelationMasks	deps/glad/vulkan.h	/^    const  uint32_t *  pCorrelationMasks;$/;"	m	struct:VkRenderPassMultiviewCreateInfo	typeref:typename:const uint32_t *
pData	deps/glad/vulkan.h	/^    const  void *             pData;$/;"	m	struct:VkSpecializationInfo	typeref:typename:const void *
pDependencies	deps/glad/vulkan.h	/^    const  VkSubpassDependency *  pDependencies;$/;"	m	struct:VkRenderPassCreateInfo	typeref:typename:const VkSubpassDependency *
pDepthStencilAttachment	deps/glad/vulkan.h	/^    const  VkAttachmentReference *  pDepthStencilAttachment;$/;"	m	struct:VkSubpassDescription	typeref:typename:const VkAttachmentReference *
pDepthStencilState	deps/glad/vulkan.h	/^    const  VkPipelineDepthStencilStateCreateInfo *  pDepthStencilState;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const VkPipelineDepthStencilStateCreateInfo *
pDescriptorUpdateEntries	deps/glad/vulkan.h	/^    const  VkDescriptorUpdateTemplateEntry *  pDescriptorUpdateEntries;$/;"	m	struct:VkDescriptorUpdateTemplateCreateInfo	typeref:typename:const VkDescriptorUpdateTemplateEntry *
pDeviceIndices	deps/glad/vulkan.h	/^    const  uint32_t *   pDeviceIndices;$/;"	m	struct:VkBindBufferMemoryDeviceGroupInfo	typeref:typename:const uint32_t *
pDeviceIndices	deps/glad/vulkan.h	/^    const  uint32_t *   pDeviceIndices;$/;"	m	struct:VkBindImageMemoryDeviceGroupInfo	typeref:typename:const uint32_t *
pDeviceMasks	deps/glad/vulkan.h	/^    const  uint32_t *  pDeviceMasks;$/;"	m	struct:VkDeviceGroupPresentInfoKHR	typeref:typename:const uint32_t *
pDeviceRenderAreas	deps/glad/vulkan.h	/^    const  VkRect2D *   pDeviceRenderAreas;$/;"	m	struct:VkDeviceGroupRenderPassBeginInfo	typeref:typename:const VkRect2D *
pDynamicState	deps/glad/vulkan.h	/^    const  VkPipelineDynamicStateCreateInfo *  pDynamicState;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const VkPipelineDynamicStateCreateInfo *
pDynamicStates	deps/glad/vulkan.h	/^    const  VkDynamicState *   pDynamicStates;$/;"	m	struct:VkPipelineDynamicStateCreateInfo	typeref:typename:const VkDynamicState *
pEnabledFeatures	deps/glad/vulkan.h	/^    const  VkPhysicalDeviceFeatures *  pEnabledFeatures;$/;"	m	struct:VkDeviceCreateInfo	typeref:typename:const VkPhysicalDeviceFeatures *
pEngineName	deps/glad/vulkan.h	/^    const  char *      pEngineName;$/;"	m	struct:VkApplicationInfo	typeref:typename:const char *
pImageBinds	deps/glad/vulkan.h	/^    const  VkSparseImageMemoryBindInfo *  pImageBinds;$/;"	m	struct:VkBindSparseInfo	typeref:typename:const VkSparseImageMemoryBindInfo *
pImageIndices	deps/glad/vulkan.h	/^    const  uint32_t *  pImageIndices;$/;"	m	struct:VkPresentInfoKHR	typeref:typename:const uint32_t *
pImageInfo	deps/glad/vulkan.h	/^    const  VkDescriptorImageInfo *  pImageInfo;$/;"	m	struct:VkWriteDescriptorSet	typeref:typename:const VkDescriptorImageInfo *
pImageOpaqueBinds	deps/glad/vulkan.h	/^    const  VkSparseImageOpaqueMemoryBindInfo *  pImageOpaqueBinds;$/;"	m	struct:VkBindSparseInfo	typeref:typename:const VkSparseImageOpaqueMemoryBindInfo *
pImmutableSamplers	deps/glad/vulkan.h	/^    const  VkSampler *        pImmutableSamplers;$/;"	m	struct:VkDescriptorSetLayoutBinding	typeref:typename:const VkSampler *
pInheritanceInfo	deps/glad/vulkan.h	/^    const  VkCommandBufferInheritanceInfo *        pInheritanceInfo;$/;"	m	struct:VkCommandBufferBeginInfo	typeref:typename:const VkCommandBufferInheritanceInfo *
pInitialData	deps/glad/vulkan.h	/^    const  void *             pInitialData;$/;"	m	struct:VkPipelineCacheCreateInfo	typeref:typename:const void *
pInputAssemblyState	deps/glad/vulkan.h	/^    const  VkPipelineInputAssemblyStateCreateInfo *  pInputAssemblyState;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const VkPipelineInputAssemblyStateCreateInfo *
pInputAttachments	deps/glad/vulkan.h	/^    const  VkAttachmentReference *  pInputAttachments;$/;"	m	struct:VkSubpassDescription	typeref:typename:const VkAttachmentReference *
pMapEntries	deps/glad/vulkan.h	/^    const  VkSpecializationMapEntry *  pMapEntries;$/;"	m	struct:VkSpecializationInfo	typeref:typename:const VkSpecializationMapEntry *
pMultisampleState	deps/glad/vulkan.h	/^    const  VkPipelineMultisampleStateCreateInfo *  pMultisampleState;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const VkPipelineMultisampleStateCreateInfo *
pName	deps/glad/vulkan.h	/^    const  char *             pName;$/;"	m	struct:VkPipelineShaderStageCreateInfo	typeref:typename:const char *
pNext	deps/glad/vulkan.h	/^    const  void *                                                           pNext;$/;"	m	struct:VkBufferMemoryRequirementsInfo2	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                                                           pNext;$/;"	m	struct:VkImageMemoryRequirementsInfo2	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                                                           pNext;$/;"	m	struct:VkImageSparseMemoryRequirementsInfo2	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                                pNext;$/;"	m	struct:VkDescriptorUpdateTemplateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                          pNext;$/;"	m	struct:VkDeviceQueueInfo2	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkAcquireNextImageInfoKHR	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkBindBufferMemoryDeviceGroupInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkBindBufferMemoryInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkBindImageMemoryDeviceGroupInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkBindImageMemoryInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkBindImageMemorySwapchainInfoKHR	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkBindImagePlaneMemoryInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkDeviceGroupBindSparseInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkDeviceGroupCommandBufferBeginInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkDeviceGroupDeviceCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkDeviceGroupPresentCapabilitiesKHR	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkDeviceGroupPresentInfoKHR	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkDeviceGroupRenderPassBeginInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkDeviceGroupSubmitInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkDeviceGroupSwapchainCreateInfoKHR	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkExportFenceCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkExportMemoryAllocateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkExportSemaphoreCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkExternalMemoryBufferCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkExternalMemoryImageCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkImagePlaneMemoryRequirementsInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkImageSwapchainCreateInfoKHR	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkMemoryAllocateFlagsInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkMemoryDedicatedAllocateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkPhysicalDeviceExternalBufferInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkPhysicalDeviceExternalFenceInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkPhysicalDeviceExternalImageFormatInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkPhysicalDeviceExternalSemaphoreInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkPipelineTessellationDomainOriginStateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkSamplerYcbcrConversionCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkSamplerYcbcrConversionInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                       pNext;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                      pNext;$/;"	m	struct:VkProtectedSubmitInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *                      pNext;$/;"	m	struct:VkRenderPassInputAttachmentAspectCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkBindSparseInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkBufferCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkBufferMemoryBarrier	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkBufferViewCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkCommandBufferAllocateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkCommandBufferBeginInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkCommandBufferInheritanceInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkCommandPoolCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkComputePipelineCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkCopyDescriptorSet	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkDescriptorPoolCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkDescriptorSetAllocateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkEventCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkFenceCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkFramebufferCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkImageCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkImageMemoryBarrier	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkImageViewCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkMappedMemoryRange	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkMemoryAllocateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkMemoryBarrier	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineCacheCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineDynamicStateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineLayoutCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineShaderStageCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineTessellationStateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkPipelineViewportStateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkQueryPoolCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkRenderPassBeginInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkRenderPassCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkRenderPassMultiviewCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkSemaphoreCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkShaderModuleCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *             pNext;$/;"	m	struct:VkWriteDescriptorSet	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *      pNext;$/;"	m	struct:VkApplicationInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *      pNext;$/;"	m	struct:VkDeviceCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *      pNext;$/;"	m	struct:VkDeviceQueueCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *      pNext;$/;"	m	struct:VkInstanceCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *   pNext;$/;"	m	struct:VkPresentInfoKHR	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *  pNext;$/;"	m	struct:VkImageViewUsageCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *  pNext;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *  pNext;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const  void *  pNext;$/;"	m	struct:VkSubmitInfo	typeref:typename:const void *
pNext	deps/glad/vulkan.h	/^    const struct  VkBaseInStructure *  pNext;$/;"	m	struct:VkBaseInStructure	typeref:typename:const struct VkBaseInStructure *
pNext	deps/glad/vulkan.h	/^    struct  VkBaseOutStructure *  pNext;$/;"	m	struct:VkBaseOutStructure	typeref:struct:VkBaseOutStructure *
pNext	deps/glad/vulkan.h	/^    void *                                        pNext;$/;"	m	struct:VkSparseImageMemoryRequirements2	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                                pNext;$/;"	m	struct:VkPhysicalDeviceProtectedMemoryFeatures	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                                pNext;$/;"	m	struct:VkPhysicalDeviceProtectedMemoryProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkExternalBufferProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkExternalFenceProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkExternalImageFormatProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkExternalSemaphoreProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkFormatProperties2	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkMemoryDedicatedRequirements	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDeviceFeatures2	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDeviceGroupProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDeviceIDProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDeviceMaintenance3Properties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDeviceMemoryProperties2	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDeviceMultiviewFeatures	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDeviceMultiviewProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDevicePointClippingProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDeviceProperties2	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDeviceShaderDrawParametersFeatures	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkPhysicalDeviceVariablePointersFeatures	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkQueueFamilyProperties2	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                             pNext;$/;"	m	struct:VkSparseImageFormatProperties2	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *                    pNext;$/;"	m	struct:VkPhysicalDeviceSubgroupProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *             pNext;$/;"	m	struct:VkDescriptorSetLayoutSupport	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *       pNext;$/;"	m	struct:VkPhysicalDevice16BitStorageFeatures	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *       pNext;$/;"	m	struct:VkPhysicalDeviceSamplerYcbcrConversionFeatures	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *       pNext;$/;"	m	struct:VkSamplerYcbcrConversionImageFormatProperties	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *  pNext;$/;"	m	struct:VkImageFormatProperties2	typeref:typename:void *
pNext	deps/glad/vulkan.h	/^    void *  pNext;$/;"	m	struct:VkMemoryRequirements2	typeref:typename:void *
pNext	src/cocoa_platform.h	/^    const void*                     pNext;$/;"	E	struct:VkMacOSSurfaceCreateInfoMVK
pNext	src/win32_platform.h	/^    const void*                     pNext;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR	typeref:typename:const void *
pNext	src/wl_platform.h	/^    const void*                     pNext;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:typename:const void *
pNext	src/x11_platform.h	/^    const void*                 pNext;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR	typeref:typename:const void *
pNext	src/x11_platform.h	/^    const void*                 pNext;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR	typeref:typename:const void *
pPhysicalDevices	deps/glad/vulkan.h	/^    const  VkPhysicalDevice *   pPhysicalDevices;$/;"	m	struct:VkDeviceGroupDeviceCreateInfo	typeref:typename:const VkPhysicalDevice *
pPoolSizes	deps/glad/vulkan.h	/^    const  VkDescriptorPoolSize *  pPoolSizes;$/;"	m	struct:VkDescriptorPoolCreateInfo	typeref:typename:const VkDescriptorPoolSize *
pPreserveAttachments	deps/glad/vulkan.h	/^    const  uint32_t *  pPreserveAttachments;$/;"	m	struct:VkSubpassDescription	typeref:typename:const uint32_t *
pPushConstantRanges	deps/glad/vulkan.h	/^    const  VkPushConstantRange *  pPushConstantRanges;$/;"	m	struct:VkPipelineLayoutCreateInfo	typeref:typename:const VkPushConstantRange *
pQueueCreateInfos	deps/glad/vulkan.h	/^    const  VkDeviceQueueCreateInfo *  pQueueCreateInfos;$/;"	m	struct:VkDeviceCreateInfo	typeref:typename:const VkDeviceQueueCreateInfo *
pQueueFamilyIndices	deps/glad/vulkan.h	/^    const  uint32_t *                   pQueueFamilyIndices;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:const uint32_t *
pQueueFamilyIndices	deps/glad/vulkan.h	/^    const  uint32_t *         pQueueFamilyIndices;$/;"	m	struct:VkBufferCreateInfo	typeref:typename:const uint32_t *
pQueueFamilyIndices	deps/glad/vulkan.h	/^    const  uint32_t *         pQueueFamilyIndices;$/;"	m	struct:VkImageCreateInfo	typeref:typename:const uint32_t *
pQueuePriorities	deps/glad/vulkan.h	/^    const  float *     pQueuePriorities;$/;"	m	struct:VkDeviceQueueCreateInfo	typeref:typename:const float *
pRasterizationState	deps/glad/vulkan.h	/^    const  VkPipelineRasterizationStateCreateInfo *  pRasterizationState;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const VkPipelineRasterizationStateCreateInfo *
pResolveAttachments	deps/glad/vulkan.h	/^    const  VkAttachmentReference *  pResolveAttachments;$/;"	m	struct:VkSubpassDescription	typeref:typename:const VkAttachmentReference *
pResults	deps/glad/vulkan.h	/^    VkResult *  pResults;$/;"	m	struct:VkPresentInfoKHR	typeref:typename:VkResult *
pSampleMask	deps/glad/vulkan.h	/^    const  VkSampleMask *     pSampleMask;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo	typeref:typename:const VkSampleMask *
pScissors	deps/glad/vulkan.h	/^    const  VkRect2D *         pScissors;$/;"	m	struct:VkPipelineViewportStateCreateInfo	typeref:typename:const VkRect2D *
pSetLayouts	deps/glad/vulkan.h	/^    const  VkDescriptorSetLayout *  pSetLayouts;$/;"	m	struct:VkDescriptorSetAllocateInfo	typeref:typename:const VkDescriptorSetLayout *
pSetLayouts	deps/glad/vulkan.h	/^    const  VkDescriptorSetLayout *  pSetLayouts;$/;"	m	struct:VkPipelineLayoutCreateInfo	typeref:typename:const VkDescriptorSetLayout *
pSignalSemaphoreDeviceIndices	deps/glad/vulkan.h	/^    const  uint32_t *   pSignalSemaphoreDeviceIndices;$/;"	m	struct:VkDeviceGroupSubmitInfo	typeref:typename:const uint32_t *
pSignalSemaphores	deps/glad/vulkan.h	/^    const  VkSemaphore *      pSignalSemaphores;$/;"	m	struct:VkBindSparseInfo	typeref:typename:const VkSemaphore *
pSignalSemaphores	deps/glad/vulkan.h	/^    const  VkSemaphore *      pSignalSemaphores;$/;"	m	struct:VkSubmitInfo	typeref:typename:const VkSemaphore *
pSpecializationInfo	deps/glad/vulkan.h	/^    const  VkSpecializationInfo *  pSpecializationInfo;$/;"	m	struct:VkPipelineShaderStageCreateInfo	typeref:typename:const VkSpecializationInfo *
pSplitInstanceBindRegions	deps/glad/vulkan.h	/^    const  VkRect2D *   pSplitInstanceBindRegions;$/;"	m	struct:VkBindImageMemoryDeviceGroupInfo	typeref:typename:const VkRect2D *
pStages	deps/glad/vulkan.h	/^    const  VkPipelineShaderStageCreateInfo *  pStages;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const VkPipelineShaderStageCreateInfo *
pSubpasses	deps/glad/vulkan.h	/^    const  VkSubpassDescription *  pSubpasses;$/;"	m	struct:VkRenderPassCreateInfo	typeref:typename:const VkSubpassDescription *
pSwapchains	deps/glad/vulkan.h	/^    const  VkSwapchainKHR *  pSwapchains;$/;"	m	struct:VkPresentInfoKHR	typeref:typename:const VkSwapchainKHR *
pTessellationState	deps/glad/vulkan.h	/^    const  VkPipelineTessellationStateCreateInfo *  pTessellationState;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const VkPipelineTessellationStateCreateInfo *
pTexelBufferView	deps/glad/vulkan.h	/^    const  VkBufferView *     pTexelBufferView;$/;"	m	struct:VkWriteDescriptorSet	typeref:typename:const VkBufferView *
pUserData	deps/glad/vulkan.h	/^    void *             pUserData;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT	typeref:typename:void *
pUserData	deps/glad/vulkan.h	/^    void *            pUserData;$/;"	m	struct:VkAllocationCallbacks	typeref:typename:void *
pVertexAttributeDescriptions	deps/glad/vulkan.h	/^    const  VkVertexInputAttributeDescription *  pVertexAttributeDescriptions;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo	typeref:typename:const VkVertexInputAttributeDescription *
pVertexBindingDescriptions	deps/glad/vulkan.h	/^    const  VkVertexInputBindingDescription *  pVertexBindingDescriptions;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo	typeref:typename:const VkVertexInputBindingDescription *
pVertexInputState	deps/glad/vulkan.h	/^    const  VkPipelineVertexInputStateCreateInfo *  pVertexInputState;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const VkPipelineVertexInputStateCreateInfo *
pView	src/cocoa_platform.h	/^    const void*                     pView;$/;"	E	struct:VkMacOSSurfaceCreateInfoMVK
pViewMasks	deps/glad/vulkan.h	/^    const  uint32_t *      pViewMasks;$/;"	m	struct:VkRenderPassMultiviewCreateInfo	typeref:typename:const uint32_t *
pViewOffsets	deps/glad/vulkan.h	/^    const  int32_t *    pViewOffsets;$/;"	m	struct:VkRenderPassMultiviewCreateInfo	typeref:typename:const int32_t *
pViewportState	deps/glad/vulkan.h	/^    const  VkPipelineViewportStateCreateInfo *  pViewportState;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:const VkPipelineViewportStateCreateInfo *
pViewports	deps/glad/vulkan.h	/^    const  VkViewport *       pViewports;$/;"	m	struct:VkPipelineViewportStateCreateInfo	typeref:typename:const VkViewport *
pWaitDstStageMask	deps/glad/vulkan.h	/^    const  VkPipelineStageFlags *            pWaitDstStageMask;$/;"	m	struct:VkSubmitInfo	typeref:typename:const VkPipelineStageFlags *
pWaitSemaphoreDeviceIndices	deps/glad/vulkan.h	/^    const  uint32_t *     pWaitSemaphoreDeviceIndices;$/;"	m	struct:VkDeviceGroupSubmitInfo	typeref:typename:const uint32_t *
pWaitSemaphores	deps/glad/vulkan.h	/^    const  VkSemaphore *      pWaitSemaphores;$/;"	m	struct:VkBindSparseInfo	typeref:typename:const VkSemaphore *
pWaitSemaphores	deps/glad/vulkan.h	/^    const  VkSemaphore *      pWaitSemaphores;$/;"	m	struct:VkSubmitInfo	typeref:typename:const VkSemaphore *
pWaitSemaphores	deps/glad/vulkan.h	/^    const  VkSemaphore *  pWaitSemaphores;$/;"	m	struct:VkPresentInfoKHR	typeref:typename:const VkSemaphore *
p_done	examples/particles.c	/^    cnd_t     p_done;    \/\/ Condition: particle physics done$/;"	m	struct:__anon62203f4b0308	typeref:typename:cnd_t	file:
p_frame	examples/particles.c	/^    int       p_frame;   \/\/ Particle physics frame number$/;"	m	struct:__anon62203f4b0308	typeref:typename:int	file:
pack_info	deps/nuklear.h	/^    void *pack_info;$/;"	m	struct:nk_tt_pack_context	typeref:typename:void *
packed_chars	deps/nuklear.h	/^    struct nk_tt_packedchar *packed_chars;$/;"	m	struct:nk_font_baker	typeref:struct:nk_tt_packedchar *
padding	deps/nuklear.h	/^    int   padding;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_chart	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_edit	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_progress	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_property	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_slider	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_tab	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_text	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_text	typeref:struct:nk_vec2
padding	deps/nuklear.h	/^    unsigned char padding[3];$/;"	m	struct:nk_font_config	typeref:typename:unsigned char[3]
padding	deps/nuklear.h	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex	typeref:typename:unsigned char
padding1	deps/nuklear.h	/^    unsigned char padding1;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
page_count	deps/nuklear.h	/^    unsigned int page_count;$/;"	m	struct:nk_pool	typeref:typename:unsigned int
pages	deps/nuklear.h	/^    struct nk_page *pages;$/;"	m	struct:nk_pool	typeref:struct:nk_page *
pan	deps/nuklear.h	/^    struct nk_panel pan;$/;"	m	union:nk_page_data	typeref:struct:nk_panel
parent	deps/nuklear.h	/^    nk_size parent;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
parent	deps/nuklear.h	/^    struct nk_panel *parent;$/;"	m	struct:nk_panel	typeref:struct:nk_panel *
parent	deps/nuklear.h	/^    struct nk_window *parent;$/;"	m	struct:nk_window	typeref:struct:nk_window *
parent	src/x11_platform.h	/^    Window          parent;$/;"	m	struct:_GLFWwindowX11	typeref:typename:Window
parseMapping	src/input.c	/^static GLFWbool parseMapping(_GLFWmapping* mapping, const char* string)$/;"	f	typeref:typename:GLFWbool	file:
parseUriList	src/x11_window.c	/^static char** parseUriList(char* text, int* count)$/;"	f	typeref:typename:char **	file:
particle_engine	examples/particles.c	/^static void particle_engine(double t, float dt)$/;"	f	typeref:typename:void	file:
particle_tex_id	examples/particles.c	/^GLuint particle_tex_id, floor_tex_id;$/;"	v	typeref:typename:GLuint
particle_texture	examples/particles.c	/^const unsigned char particle_texture[ P_TEX_WIDTH * P_TEX_HEIGHT ] = {$/;"	v	typeref:typename:const unsigned char[]
particles	examples/CMakeLists.txt	/^add_executable(particles WIN32 MACOSX_BUNDLE particles.c ${ICON} ${TINYCTHREAD} ${GETOPT} ${GLAD/;"	t
particles	examples/particles.c	/^static PARTICLE particles[MAX_PARTICLES];$/;"	v	typeref:typename:PARTICLE[]	file:
particles_lock	examples/particles.c	/^    mtx_t     particles_lock; \/\/ Particles data sharing mutex$/;"	m	struct:__anon62203f4b0308	typeref:typename:mtx_t	file:
passOp	deps/glad/vulkan.h	/^    VkStencilOp              passOp;$/;"	m	struct:VkStencilOpState	typeref:typename:VkStencilOp
paste	deps/nuklear.h	/^    nk_plugin_paste paste;$/;"	m	struct:nk_clipboard	typeref:typename:nk_plugin_paste
patchControlPoints	deps/glad/vulkan.h	/^    uint32_t                 patchControlPoints;$/;"	m	struct:VkPipelineTessellationStateCreateInfo	typeref:typename:uint32_t
path	src/linux_joystick.h	/^    char                    path[PATH_MAX];$/;"	m	struct:_GLFWjoystickLinux	typeref:typename:char[]
path3141	docs/spaces.svg	/^         id="path3141" \/>$/;"	i
path3143	docs/spaces.svg	/^         id="path3143" \/>$/;"	i
path3145	docs/spaces.svg	/^         id="path3145" \/>$/;"	i
path3147	docs/spaces.svg	/^         id="path3147" \/>$/;"	i
path3149	docs/spaces.svg	/^         id="path3149" \/>$/;"	i
path3151	docs/spaces.svg	/^         id="path3151" \/>$/;"	i
path3153	docs/spaces.svg	/^         id="path3153" \/>$/;"	i
path3155	docs/spaces.svg	/^         id="path3155" \/>$/;"	i
path3157	docs/spaces.svg	/^         id="path3157" \/>$/;"	i
path3159	docs/spaces.svg	/^         id="path3159" \/>$/;"	i
path3161	docs/spaces.svg	/^         id="path3161" \/>$/;"	i
path3164	docs/spaces.svg	/^         id="path3164" \/>$/;"	i
path3166	docs/spaces.svg	/^         id="path3166" \/>$/;"	i
path3168	docs/spaces.svg	/^         id="path3168" \/>$/;"	i
path3170	docs/spaces.svg	/^         id="path3170" \/>$/;"	i
path3172	docs/spaces.svg	/^         id="path3172" \/>$/;"	i
path3174	docs/spaces.svg	/^         id="path3174" \/>$/;"	i
path3176	docs/spaces.svg	/^         id="path3176" \/>$/;"	i
path3178	docs/spaces.svg	/^         id="path3178" \/>$/;"	i
path3180	docs/spaces.svg	/^         id="path3180" \/>$/;"	i
path3182	docs/spaces.svg	/^         id="path3182" \/>$/;"	i
path3184	docs/spaces.svg	/^         id="path3184" \/>$/;"	i
path3186	docs/spaces.svg	/^         id="path3186" \/>$/;"	i
path3188	docs/spaces.svg	/^         id="path3188" \/>$/;"	i
path3190	docs/spaces.svg	/^         id="path3190" \/>$/;"	i
path3193	docs/spaces.svg	/^         id="path3193" \/>$/;"	i
path3195	docs/spaces.svg	/^         id="path3195" \/>$/;"	i
path3197	docs/spaces.svg	/^         id="path3197" \/>$/;"	i
path3199	docs/spaces.svg	/^         id="path3199" \/>$/;"	i
path3201	docs/spaces.svg	/^         id="path3201" \/>$/;"	i
path3203	docs/spaces.svg	/^         id="path3203" \/>$/;"	i
path3205	docs/spaces.svg	/^         id="path3205" \/>$/;"	i
path3207	docs/spaces.svg	/^         id="path3207" \/>$/;"	i
path3209	docs/spaces.svg	/^         id="path3209" \/>$/;"	i
path3211	docs/spaces.svg	/^         id="path3211" \/>$/;"	i
path3213	docs/spaces.svg	/^         id="path3213" \/>$/;"	i
path3215	docs/spaces.svg	/^         id="path3215" \/>$/;"	i
path3217	docs/spaces.svg	/^         id="path3217" \/>$/;"	i
path3219	docs/spaces.svg	/^         id="path3219" \/>$/;"	i
path3221	docs/spaces.svg	/^         id="path3221" \/>$/;"	i
path3223	docs/spaces.svg	/^         id="path3223" \/>$/;"	i
path3225	docs/spaces.svg	/^         id="path3225" \/>$/;"	i
path3227	docs/spaces.svg	/^         id="path3227" \/>$/;"	i
path3229	docs/spaces.svg	/^         id="path3229" \/>$/;"	i
path3231	docs/spaces.svg	/^         id="path3231" \/>$/;"	i
path3233	docs/spaces.svg	/^         id="path3233" \/>$/;"	i
path3235	docs/spaces.svg	/^         id="path3235" \/>$/;"	i
path3237	docs/spaces.svg	/^         id="path3237" \/>$/;"	i
path3239	docs/spaces.svg	/^         id="path3239" \/>$/;"	i
path3242	docs/spaces.svg	/^         id="path3242" \/>$/;"	i
path3244	docs/spaces.svg	/^         id="path3244" \/>$/;"	i
path3246	docs/spaces.svg	/^         id="path3246" \/>$/;"	i
path3248	docs/spaces.svg	/^         id="path3248" \/>$/;"	i
path3250	docs/spaces.svg	/^         id="path3250" \/>$/;"	i
path3252	docs/spaces.svg	/^         id="path3252" \/>$/;"	i
path3254	docs/spaces.svg	/^         id="path3254" \/>$/;"	i
path3256	docs/spaces.svg	/^         id="path3256" \/>$/;"	i
path3258	docs/spaces.svg	/^         id="path3258" \/>$/;"	i
path3260	docs/spaces.svg	/^         id="path3260" \/>$/;"	i
path3262	docs/spaces.svg	/^         id="path3262" \/>$/;"	i
path3264	docs/spaces.svg	/^         id="path3264" \/>$/;"	i
path3266	docs/spaces.svg	/^         id="path3266" \/>$/;"	i
path3268	docs/spaces.svg	/^         id="path3268" \/>$/;"	i
path3270	docs/spaces.svg	/^         id="path3270" \/>$/;"	i
path3272	docs/spaces.svg	/^         id="path3272" \/>$/;"	i
path3274	docs/spaces.svg	/^         id="path3274" \/>$/;"	i
path3276	docs/spaces.svg	/^         id="path3276" \/>$/;"	i
path3278	docs/spaces.svg	/^         id="path3278" \/>$/;"	i
path3281	docs/spaces.svg	/^         id="path3281" \/>$/;"	i
path3283	docs/spaces.svg	/^         id="path3283" \/>$/;"	i
path3285	docs/spaces.svg	/^         id="path3285" \/>$/;"	i
path3287	docs/spaces.svg	/^         id="path3287" \/>$/;"	i
path3289	docs/spaces.svg	/^         id="path3289" \/>$/;"	i
path3291	docs/spaces.svg	/^         id="path3291" \/>$/;"	i
path3293	docs/spaces.svg	/^         id="path3293" \/>$/;"	i
path3295	docs/spaces.svg	/^         id="path3295" \/>$/;"	i
path3297	docs/spaces.svg	/^         id="path3297" \/>$/;"	i
path3299	docs/spaces.svg	/^         id="path3299" \/>$/;"	i
path3301	docs/spaces.svg	/^         id="path3301" \/>$/;"	i
path3303	docs/spaces.svg	/^         id="path3303" \/>$/;"	i
path3305	docs/spaces.svg	/^         id="path3305" \/>$/;"	i
path3307	docs/spaces.svg	/^         id="path3307" \/>$/;"	i
path3309	docs/spaces.svg	/^         id="path3309" \/>$/;"	i
path3311	docs/spaces.svg	/^         id="path3311" \/>$/;"	i
path3313	docs/spaces.svg	/^         id="path3313" \/>$/;"	i
path3315	docs/spaces.svg	/^         id="path3315" \/>$/;"	i
path3317	docs/spaces.svg	/^         id="path3317" \/>$/;"	i
path3319	docs/spaces.svg	/^         id="path3319" \/>$/;"	i
path3321	docs/spaces.svg	/^         id="path3321" \/>$/;"	i
path3323	docs/spaces.svg	/^         id="path3323" \/>$/;"	i
path3326	docs/spaces.svg	/^         id="path3326" \/>$/;"	i
path3328	docs/spaces.svg	/^         id="path3328" \/>$/;"	i
path3330	docs/spaces.svg	/^         id="path3330" \/>$/;"	i
path3332	docs/spaces.svg	/^         id="path3332" \/>$/;"	i
path3334	docs/spaces.svg	/^         id="path3334" \/>$/;"	i
path3336	docs/spaces.svg	/^         id="path3336" \/>$/;"	i
path3338	docs/spaces.svg	/^         id="path3338" \/>$/;"	i
path3340	docs/spaces.svg	/^         id="path3340" \/>$/;"	i
path3342	docs/spaces.svg	/^         id="path3342" \/>$/;"	i
path3344	docs/spaces.svg	/^         id="path3344" \/>$/;"	i
path3346	docs/spaces.svg	/^         id="path3346" \/>$/;"	i
path3348	docs/spaces.svg	/^         id="path3348" \/>$/;"	i
path3350	docs/spaces.svg	/^         id="path3350" \/>$/;"	i
path3352	docs/spaces.svg	/^         id="path3352" \/>$/;"	i
path3355	docs/spaces.svg	/^         id="path3355" \/>$/;"	i
path3357	docs/spaces.svg	/^         id="path3357" \/>$/;"	i
path3359	docs/spaces.svg	/^         id="path3359" \/>$/;"	i
path3361	docs/spaces.svg	/^         id="path3361" \/>$/;"	i
path3363	docs/spaces.svg	/^         id="path3363" \/>$/;"	i
path3365	docs/spaces.svg	/^         id="path3365" \/>$/;"	i
path3367	docs/spaces.svg	/^         id="path3367" \/>$/;"	i
path3369	docs/spaces.svg	/^         id="path3369" \/>$/;"	i
path3371	docs/spaces.svg	/^         id="path3371" \/>$/;"	i
path3373	docs/spaces.svg	/^         id="path3373" \/>$/;"	i
path3375	docs/spaces.svg	/^         id="path3375" \/>$/;"	i
path3377	docs/spaces.svg	/^         id="path3377" \/>$/;"	i
path3379	docs/spaces.svg	/^         id="path3379" \/>$/;"	i
path3381	docs/spaces.svg	/^         id="path3381" \/>$/;"	i
path3383	docs/spaces.svg	/^         id="path3383" \/>$/;"	i
path3385	docs/spaces.svg	/^         id="path3385" \/>$/;"	i
path3388	docs/spaces.svg	/^         id="path3388" \/>$/;"	i
path3390	docs/spaces.svg	/^         id="path3390" \/>$/;"	i
path3392	docs/spaces.svg	/^         id="path3392" \/>$/;"	i
path3394	docs/spaces.svg	/^         id="path3394" \/>$/;"	i
path3396	docs/spaces.svg	/^         id="path3396" \/>$/;"	i
path3398	docs/spaces.svg	/^         id="path3398" \/>$/;"	i
path3401	docs/spaces.svg	/^         id="path3401" \/>$/;"	i
path3403	docs/spaces.svg	/^         id="path3403" \/>$/;"	i
path3405	docs/spaces.svg	/^         id="path3405" \/>$/;"	i
path3407	docs/spaces.svg	/^         id="path3407" \/>$/;"	i
path3409	docs/spaces.svg	/^         id="path3409" \/>$/;"	i
path3411	docs/spaces.svg	/^         id="path3411" \/>$/;"	i
path3413	docs/spaces.svg	/^         id="path3413" \/>$/;"	i
path3415	docs/spaces.svg	/^         id="path3415" \/>$/;"	i
path3417	docs/spaces.svg	/^         id="path3417" \/>$/;"	i
path3419	docs/spaces.svg	/^         id="path3419" \/>$/;"	i
path3421	docs/spaces.svg	/^         id="path3421" \/>$/;"	i
path3423	docs/spaces.svg	/^         id="path3423" \/>$/;"	i
path3425	docs/spaces.svg	/^         id="path3425" \/>$/;"	i
path3797	docs/spaces.svg	/^       inkscape:export-ydpi="109.89113" \/>$/;"	i
path3799	docs/spaces.svg	/^       inkscape:export-ydpi="109.89113" \/>$/;"	i
path3801	docs/spaces.svg	/^       inkscape:export-ydpi="109.89113" \/>$/;"	i
path3861	docs/spaces.svg	/^       transform="translate(12.627039,339.86462)" \/>$/;"	i
path3888	docs/spaces.svg	/^         transform="scale(1.1) rotate(180) translate(1,0)" \/>$/;"	i
path4091	docs/spaces.svg	/^         id="path4091" \/>$/;"	i
path4093	docs/spaces.svg	/^         id="path4093" \/>$/;"	i
path4095	docs/spaces.svg	/^         id="path4095" \/>$/;"	i
path4097	docs/spaces.svg	/^         id="path4097" \/>$/;"	i
path4099	docs/spaces.svg	/^         id="path4099" \/>$/;"	i
path4101	docs/spaces.svg	/^         id="path4101" \/>$/;"	i
path4103	docs/spaces.svg	/^         id="path4103" \/>$/;"	i
path4105	docs/spaces.svg	/^         id="path4105" \/>$/;"	i
path4107	docs/spaces.svg	/^         id="path4107" \/>$/;"	i
path4109	docs/spaces.svg	/^         id="path4109" \/>$/;"	i
path4111	docs/spaces.svg	/^         id="path4111" \/>$/;"	i
path4113	docs/spaces.svg	/^         id="path4113" \/>$/;"	i
path4115	docs/spaces.svg	/^         id="path4115" \/>$/;"	i
path4117	docs/spaces.svg	/^         id="path4117" \/>$/;"	i
path4119	docs/spaces.svg	/^         id="path4119" \/>$/;"	i
path4121	docs/spaces.svg	/^         id="path4121" \/>$/;"	i
path4123	docs/spaces.svg	/^         id="path4123" \/>$/;"	i
path4307	docs/spaces.svg	/^       style="fill:none;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;/;"	i
path4309	docs/spaces.svg	/^       style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:mite/;"	i
path4493	docs/spaces.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path_count	deps/nuklear.h	/^    unsigned int path_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
path_offset	deps/nuklear.h	/^    unsigned int path_offset;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
performDragOperation:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
permanent	deps/nuklear.h	/^    struct nk_allocator permanent;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_allocator
pfnAllocation	deps/glad/vulkan.h	/^    PFN_vkAllocationFunction     pfnAllocation;$/;"	m	struct:VkAllocationCallbacks	typeref:typename:PFN_vkAllocationFunction
pfnCallback	deps/glad/vulkan.h	/^    PFN_vkDebugReportCallbackEXT       pfnCallback;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT	typeref:typename:PFN_vkDebugReportCallbackEXT
pfnFree	deps/glad/vulkan.h	/^    PFN_vkFreeFunction      pfnFree;$/;"	m	struct:VkAllocationCallbacks	typeref:typename:PFN_vkFreeFunction
pfnInternalAllocation	deps/glad/vulkan.h	/^    PFN_vkInternalAllocationNotification   pfnInternalAllocation;$/;"	m	struct:VkAllocationCallbacks	typeref:typename:PFN_vkInternalAllocationNotification
pfnInternalFree	deps/glad/vulkan.h	/^    PFN_vkInternalFreeNotification   pfnInternalFree;$/;"	m	struct:VkAllocationCallbacks	typeref:typename:PFN_vkInternalFreeNotification
pfnReallocation	deps/glad/vulkan.h	/^    PFN_vkReallocationFunction   pfnReallocation;$/;"	m	struct:VkAllocationCallbacks	typeref:typename:PFN_vkReallocationFunction
pguid	deps/mingw/dinput.h	/^    const GUID *pguid;$/;"	m	struct:_DIOBJECTDATAFORMAT	typeref:typename:const GUID *
physicalDeviceCount	deps/glad/vulkan.h	/^    uint32_t                           physicalDeviceCount;$/;"	m	struct:VkDeviceGroupDeviceCreateInfo	typeref:typename:uint32_t
physicalDeviceCount	deps/glad/vulkan.h	/^    uint32_t                           physicalDeviceCount;$/;"	m	struct:VkPhysicalDeviceGroupProperties	typeref:typename:uint32_t
physicalDevices	deps/glad/vulkan.h	/^    VkPhysicalDevice                   physicalDevices [ VK_MAX_DEVICE_GROUP_SIZE ];$/;"	m	struct:VkPhysicalDeviceGroupProperties	typeref:typename:VkPhysicalDevice[]
physics_thread_main	examples/particles.c	/^static int physics_thread_main(void* arg)$/;"	f	typeref:typename:int	file:
pipeline	tests/triangle-vulkan.c	/^    VkPipeline pipeline;$/;"	m	struct:demo	typeref:typename:VkPipeline	file:
pipelineBindPoint	deps/glad/vulkan.h	/^    VkPipelineBindPoint      pipelineBindPoint;$/;"	m	struct:VkSubpassDescription	typeref:typename:VkPipelineBindPoint
pipelineBindPoint	deps/glad/vulkan.h	/^    VkPipelineBindPoint   pipelineBindPoint;$/;"	m	struct:VkDescriptorUpdateTemplateCreateInfo	typeref:typename:VkPipelineBindPoint
pipelineCache	tests/triangle-vulkan.c	/^    VkPipelineCache pipelineCache;$/;"	m	struct:demo	typeref:typename:VkPipelineCache	file:
pipelineCacheUUID	deps/glad/vulkan.h	/^    uint8_t          pipelineCacheUUID [ VK_UUID_SIZE ];$/;"	m	struct:VkPhysicalDeviceProperties	typeref:typename:uint8_t[]
pipelineLayout	deps/glad/vulkan.h	/^    VkPipelineLayout pipelineLayout;$/;"	m	struct:VkDescriptorUpdateTemplateCreateInfo	typeref:typename:VkPipelineLayout
pipelineStatistics	deps/glad/vulkan.h	/^    VkQueryPipelineStatisticFlags   pipelineStatistics;$/;"	m	struct:VkCommandBufferInheritanceInfo	typeref:typename:VkQueryPipelineStatisticFlags
pipelineStatistics	deps/glad/vulkan.h	/^    VkQueryPipelineStatisticFlags   pipelineStatistics;$/;"	m	struct:VkQueryPoolCreateInfo	typeref:typename:VkQueryPipelineStatisticFlags
pipelineStatisticsQuery	deps/glad/vulkan.h	/^    VkBool32                 pipelineStatisticsQuery;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
pipeline_layout	tests/triangle-vulkan.c	/^    VkPipelineLayout pipeline_layout;$/;"	m	struct:demo	typeref:typename:VkPipelineLayout	file:
pixel	deps/nuklear.h	/^    void *pixel;$/;"	m	struct:nk_font_atlas	typeref:typename:void *
pixelFormat	src/nsgl_context.h	/^    id                pixelFormat;$/;"	m	struct:_GLFWcontextNSGL	typeref:typename:id
pixel_snap	deps/nuklear.h	/^    unsigned char pixel_snap;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
pixels	deps/nuklear.h	/^    unsigned char *pixels;$/;"	m	struct:nk_tt_pack_context	typeref:typename:unsigned char *
pixels	deps/nuklear.h	/^   unsigned char *pixels;$/;"	m	struct:nk_tt__bitmap	typeref:typename:unsigned char *
pixels	include/GLFW/glfw3.h	/^    unsigned char* pixels;$/;"	m	struct:GLFWimage	typeref:typename:unsigned char *
planeAspect	deps/glad/vulkan.h	/^    VkImageAspectFlagBits              planeAspect;$/;"	m	struct:VkBindImagePlaneMemoryInfo	typeref:typename:VkImageAspectFlagBits
planeAspect	deps/glad/vulkan.h	/^    VkImageAspectFlagBits              planeAspect;$/;"	m	struct:VkImagePlaneMemoryRequirementsInfo	typeref:typename:VkImageAspectFlagBits
pointClippingBehavior	deps/glad/vulkan.h	/^    VkPointClippingBehavior        pointClippingBehavior;$/;"	m	struct:VkPhysicalDevicePointClippingProperties	typeref:typename:VkPointClippingBehavior
pointSizeGranularity	deps/glad/vulkan.h	/^    float                    pointSizeGranularity;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:float
pointSizeRange	deps/glad/vulkan.h	/^    float                    pointSizeRange [2];$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:float[2]
point_count	deps/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon	typeref:typename:unsigned short
point_count	deps/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon_filled	typeref:typename:unsigned short
point_count	deps/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polyline	typeref:typename:unsigned short
pointer	src/wl_platform.h	/^    struct wl_pointer*          pointer;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_pointer *
pointerConstraints	src/wl_platform.h	/^    struct zwp_pointer_constraints_v1*      pointerConstraints;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:zwp_pointer_constraints_v1 *
pointerFocus	src/wl_platform.h	/^    _GLFWwindow*                pointerFocus;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:_GLFWwindow *
pointerHandleAxis	src/wl_init.c	/^static void pointerHandleAxis(void* data,$/;"	f	typeref:typename:void	file:
pointerHandleButton	src/wl_init.c	/^static void pointerHandleButton(void* data,$/;"	f	typeref:typename:void	file:
pointerHandleEnter	src/wl_init.c	/^static void pointerHandleEnter(void* data,$/;"	f	typeref:typename:void	file:
pointerHandleLeave	src/wl_init.c	/^static void pointerHandleLeave(void* data,$/;"	f	typeref:typename:void	file:
pointerHandleMotion	src/wl_init.c	/^static void pointerHandleMotion(void* data,$/;"	f	typeref:typename:void	file:
pointerListener	src/wl_init.c	/^static const struct wl_pointer_listener pointerListener = {$/;"	v	typeref:typename:const struct wl_pointer_listener	file:
pointerLock	src/wl_platform.h	/^    } pointerLock;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:_GLFWwindowWayland::__anon32ec62590208
points	deps/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon	typeref:struct:nk_vec2i[1]
points	deps/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_vec2i[1]
points	deps/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polyline	typeref:struct:nk_vec2i[1]
pollAbsState	src/linux_joystick.c	/^static void pollAbsState(_GLFWjoystick* js)$/;"	f	typeref:typename:void	file:
polygonMode	deps/glad/vulkan.h	/^    VkPolygonMode            polygonMode;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:VkPolygonMode
pool	deps/nuklear.h	/^    struct nk_allocator pool;$/;"	m	struct:nk_buffer	typeref:struct:nk_allocator
pool	deps/nuklear.h	/^    struct nk_pool pool;$/;"	m	struct:nk_context	typeref:struct:nk_pool
poolSizeCount	deps/glad/vulkan.h	/^    uint32_t                 poolSizeCount;$/;"	m	struct:VkDescriptorPoolCreateInfo	typeref:typename:uint32_t
popup	deps/nuklear.h	/^    struct nk_popup_state popup;$/;"	m	struct:nk_window	typeref:struct:nk_popup_state
popup_border	deps/nuklear.h	/^    float popup_border;$/;"	m	struct:nk_style_window	typeref:typename:float
popup_border_color	deps/nuklear.h	/^    struct nk_color popup_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
popup_padding	deps/nuklear.h	/^    struct nk_vec2 popup_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
pos	deps/nuklear.h	/^    struct nk_vec2 pos;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
pos	examples/triangle-opengl.c	/^    vec2 pos;$/;"	m	struct:Vertex	typeref:typename:vec2	file:
pos	src/internal.h	/^        GLFWwindowposfun        pos;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWwindowposfun
position	deps/nuklear_glfw_gl2.h	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]
povCount	src/win32_joystick.c	/^    int                     povCount;$/;"	m	struct:_GLFWobjenumWin32	typeref:typename:int	file:
ppEnabledExtensionNames	deps/glad/vulkan.h	/^    const  char * const*       ppEnabledExtensionNames;$/;"	m	struct:VkDeviceCreateInfo	typeref:typename:const char * const *
ppEnabledExtensionNames	deps/glad/vulkan.h	/^    const  char * const*       ppEnabledExtensionNames;$/;"	m	struct:VkInstanceCreateInfo	typeref:typename:const char * const *
ppEnabledLayerNames	deps/glad/vulkan.h	/^    const  char * const*       ppEnabledLayerNames;$/;"	m	struct:VkDeviceCreateInfo	typeref:typename:const char * const *
ppEnabledLayerNames	deps/glad/vulkan.h	/^    const  char * const*       ppEnabledLayerNames;$/;"	m	struct:VkInstanceCreateInfo	typeref:typename:const char * const *
pre.fragment	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
preTransform	deps/glad/vulkan.h	/^    VkSurfaceTransformFlagBitsKHR      preTransform;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkSurfaceTransformFlagBitsKHR
preferred_x	deps/nuklear.h	/^    float preferred_x;$/;"	m	struct:nk_text_edit	typeref:typename:float
prefersDedicatedAllocation	deps/glad/vulkan.h	/^    VkBool32                           prefersDedicatedAllocation;$/;"	m	struct:VkMemoryDedicatedRequirements	typeref:typename:VkBool32
prefix	src/egl_context.h	/^    GLFWbool        prefix;$/;"	m	struct:_GLFWlibraryEGL	typeref:typename:GLFWbool
present	src/internal.h	/^    GLFWbool        present;$/;"	m	struct:_GLFWjoystick	typeref:typename:GLFWbool
presentMask	deps/glad/vulkan.h	/^    uint32_t                           presentMask [ VK_MAX_DEVICE_GROUP_SIZE ];$/;"	m	struct:VkDeviceGroupPresentCapabilitiesKHR	typeref:typename:uint32_t[]
presentMode	deps/glad/vulkan.h	/^    VkPresentModeKHR                   presentMode;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkPresentModeKHR
preserveAttachmentCount	deps/glad/vulkan.h	/^    uint32_t                 preserveAttachmentCount;$/;"	m	struct:VkSubpassDescription	typeref:typename:uint32_t
pressed	deps/nuklear.h	/^    struct nk_style_item pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
pressed_active	deps/nuklear.h	/^    struct nk_style_item pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
prev	deps/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state	typeref:typename:int
prev	deps/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state	typeref:typename:int
prev	deps/nuklear.h	/^    struct nk_page_element *prev;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element *
prev	deps/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table **
prev	deps/nuklear.h	/^    struct nk_vec2 prev;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
prev	deps/nuklear.h	/^    struct nk_window *prev;$/;"	m	struct:nk_window	typeref:struct:nk_window *
prev_first	deps/nuklear.h	/^   int prev_first;  \/*_ first char of previous row *\/$/;"	m	struct:nk_text_find	typeref:typename:int
prev_link	deps/nuklear.h	/^    struct nk_rp_node **prev_link;$/;"	m	struct:nk_rp__findresult	typeref:struct:nk_rp_node **
previousMode	src/cocoa_platform.h	/^    CGDisplayModeRef    previousMode;$/;"	E	struct:_GLFWmonitorNS
primarySelectionString	src/x11_platform.h	/^    char*           primarySelectionString;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:char *
primitiveRestartEnable	deps/glad/vulkan.h	/^    VkBool32                 primitiveRestartEnable;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo	typeref:typename:VkBool32
print_version	tests/glfwinfo.c	/^static void print_version(void)$/;"	f	typeref:typename:void	file:
processEvent	src/x11_window.c	/^static void processEvent(XEvent *event)$/;"	f	typeref:typename:void	file:
profile	src/internal.h	/^    int                 profile;$/;"	m	struct:_GLFWcontext	typeref:typename:int
profile	src/internal.h	/^    int           profile;$/;"	m	struct:_GLFWctxconfig	typeref:typename:int
progress	deps/nuklear.h	/^    struct nk_style_progress progress;$/;"	m	struct:nk_style	typeref:struct:nk_style_progress
projection_matrix	examples/heightmap.c	/^static GLfloat projection_matrix[16] = {$/;"	v	typeref:typename:GLfloat[16]	file:
properties	deps/glad/vulkan.h	/^    VkPhysicalDeviceProperties         properties;$/;"	m	struct:VkPhysicalDeviceProperties2	typeref:typename:VkPhysicalDeviceProperties
properties	deps/glad/vulkan.h	/^    VkSparseImageFormatProperties      properties;$/;"	m	struct:VkSparseImageFormatProperties2	typeref:typename:VkSparseImageFormatProperties
property	deps/nuklear.h	/^    struct nk_property_state property;$/;"	m	struct:nk_window	typeref:struct:nk_property_state
property	deps/nuklear.h	/^    struct nk_style_property property;$/;"	m	struct:nk_style	typeref:struct:nk_style_property
propertyFlags	deps/glad/vulkan.h	/^    VkMemoryPropertyFlags    propertyFlags;$/;"	m	struct:VkMemoryType	typeref:typename:VkMemoryPropertyFlags
protectedMemory	deps/glad/vulkan.h	/^    VkBool32                              protectedMemory;$/;"	m	struct:VkPhysicalDeviceProtectedMemoryFeatures	typeref:typename:VkBool32
protectedNoFault	deps/glad/vulkan.h	/^    VkBool32                              protectedNoFault;$/;"	m	struct:VkPhysicalDeviceProtectedMemoryProperties	typeref:typename:VkBool32
protectedSubmit	deps/glad/vulkan.h	/^    VkBool32                          protectedSubmit;$/;"	m	struct:VkProtectedSubmitInfo	typeref:typename:VkBool32
ptr	deps/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory	typeref:typename:void *
ptr	deps/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anonca785108020a	typeref:typename:void *
publicAdapterName	src/win32_platform.h	/^    char                publicAdapterName[32];$/;"	m	struct:_GLFWmonitorWin32	typeref:typename:char[32]
publicDisplayName	src/win32_platform.h	/^    char                publicDisplayName[32];$/;"	m	struct:_GLFWmonitorWin32	typeref:typename:char[32]
pushConstantRangeCount	deps/glad/vulkan.h	/^    uint32_t                 pushConstantRangeCount;$/;"	m	struct:VkPipelineLayoutCreateInfo	typeref:typename:uint32_t
quad	examples/wave.c	/^GLuint quad[4 * QUADNUM];$/;"	v	typeref:typename:GLuint[]
quadOperationsInAllStages	deps/glad/vulkan.h	/^    VkBool32   quadOperationsInAllStages;$/;"	m	struct:VkPhysicalDeviceSubgroupProperties	typeref:typename:VkBool32
quat	deps/linmath.h	/^typedef float quat[4];$/;"	t	typeref:typename:float[4]
quat_add	deps/linmath.h	/^static inline void quat_add(quat r, quat a, quat b)$/;"	f	typeref:typename:void
quat_conj	deps/linmath.h	/^static inline void quat_conj(quat r, quat q)$/;"	f	typeref:typename:void
quat_from_mat4x4	deps/linmath.h	/^static inline void quat_from_mat4x4(quat q, mat4x4 M)$/;"	f	typeref:typename:void
quat_identity	deps/linmath.h	/^static inline void quat_identity(quat q)$/;"	f	typeref:typename:void
quat_inner_product	deps/linmath.h	/^static inline float quat_inner_product(quat a, quat b)$/;"	f	typeref:typename:float
quat_mul	deps/linmath.h	/^static inline void quat_mul(quat r, quat p, quat q)$/;"	f	typeref:typename:void
quat_mul_vec3	deps/linmath.h	/^static inline void quat_mul_vec3(vec3 r, quat q, vec3 v)$/;"	f	typeref:typename:void
quat_norm	deps/linmath.h	/^#define quat_norm /;"	d
quat_rotate	deps/linmath.h	/^static inline void quat_rotate(quat r, float angle, vec3 axis) {$/;"	f	typeref:typename:void
quat_scale	deps/linmath.h	/^static inline void quat_scale(quat r, quat v, float s)$/;"	f	typeref:typename:void
quat_sub	deps/linmath.h	/^static inline void quat_sub(quat r, quat a, quat b)$/;"	f	typeref:typename:void
query	deps/nuklear.h	/^    nk_query_font_glyph_f query;$/;"	m	struct:nk_user_font	typeref:typename:nk_query_font_glyph_f
queryCount	deps/glad/vulkan.h	/^    uint32_t                 queryCount;$/;"	m	struct:VkQueryPoolCreateInfo	typeref:typename:uint32_t
queryFlags	deps/glad/vulkan.h	/^    VkQueryControlFlags      queryFlags;$/;"	m	struct:VkCommandBufferInheritanceInfo	typeref:typename:VkQueryControlFlags
queryType	deps/glad/vulkan.h	/^    VkQueryType              queryType;$/;"	m	struct:VkQueryPoolCreateInfo	typeref:typename:VkQueryType
queue	tests/triangle-vulkan.c	/^    VkQueue queue;$/;"	m	struct:demo	typeref:typename:VkQueue	file:
queueCount	deps/glad/vulkan.h	/^    uint32_t                 queueCount;$/;"	m	struct:VkQueueFamilyProperties	typeref:typename:uint32_t
queueCount	deps/glad/vulkan.h	/^    uint32_t          queueCount;$/;"	m	struct:VkDeviceQueueCreateInfo	typeref:typename:uint32_t
queueCreateInfoCount	deps/glad/vulkan.h	/^    uint32_t          queueCreateInfoCount;$/;"	m	struct:VkDeviceCreateInfo	typeref:typename:uint32_t
queueFamilyIndex	deps/glad/vulkan.h	/^    uint32_t                              queueFamilyIndex;$/;"	m	struct:VkDeviceQueueInfo2	typeref:typename:uint32_t
queueFamilyIndex	deps/glad/vulkan.h	/^    uint32_t                 queueFamilyIndex;$/;"	m	struct:VkCommandPoolCreateInfo	typeref:typename:uint32_t
queueFamilyIndex	deps/glad/vulkan.h	/^    uint32_t          queueFamilyIndex;$/;"	m	struct:VkDeviceQueueCreateInfo	typeref:typename:uint32_t
queueFamilyIndexCount	deps/glad/vulkan.h	/^    uint32_t                 queueFamilyIndexCount;$/;"	m	struct:VkBufferCreateInfo	typeref:typename:uint32_t
queueFamilyIndexCount	deps/glad/vulkan.h	/^    uint32_t                 queueFamilyIndexCount;$/;"	m	struct:VkImageCreateInfo	typeref:typename:uint32_t
queueFamilyIndexCount	deps/glad/vulkan.h	/^    uint32_t           queueFamilyIndexCount;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:uint32_t
queueFamilyProperties	deps/glad/vulkan.h	/^    VkQueueFamilyProperties            queueFamilyProperties;$/;"	m	struct:VkQueueFamilyProperties2	typeref:typename:VkQueueFamilyProperties
queueFlags	deps/glad/vulkan.h	/^    VkQueueFlags             queueFlags;$/;"	m	struct:VkQueueFamilyProperties	typeref:typename:VkQueueFlags
queueIndex	deps/glad/vulkan.h	/^    uint32_t                              queueIndex;$/;"	m	struct:VkDeviceQueueInfo2	typeref:typename:uint32_t
queue_count	tests/triangle-vulkan.c	/^    uint32_t queue_count;$/;"	m	struct:demo	typeref:typename:uint32_t	file:
queue_props	tests/triangle-vulkan.c	/^    VkQueueFamilyProperties *queue_props;$/;"	m	struct:demo	typeref:typename:VkQueueFamilyProperties *	file:
r	deps/glad/vulkan.h	/^    VkComponentSwizzle   r;$/;"	m	struct:VkComponentMapping	typeref:typename:VkComponentSwizzle
r	deps/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc	typeref:typename:unsigned short
r	deps/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc_filled	typeref:typename:unsigned short
r	deps/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
r	deps/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
r	examples/offscreen.c	/^    float r, g, b;$/;"	m	struct:__anone38272df0108	typeref:typename:float	file:
r	examples/particles.c	/^    float r,g,b;     \/\/ Color of particle$/;"	m	struct:__anon62203f4b0408	typeref:typename:float	file:
r	examples/wave.c	/^    GLfloat r, g, b;$/;"	m	struct:Vertex	typeref:typename:GLfloat	file:
r	tests/threads.c	/^    float r, g, b;$/;"	m	struct:__anon6fa524230108	typeref:typename:float	file:
r	tests/windows.c	/^    float r, g, b;$/;"	m	struct:__anon8425f2a30108	typeref:typename:float	file:
randr	src/x11_platform.h	/^    } randr;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon830d96b00108
range	deps/glad/vulkan.h	/^    VkDeviceSize             range;$/;"	m	struct:VkBufferViewCreateInfo	typeref:typename:VkDeviceSize
range	deps/glad/vulkan.h	/^    VkDeviceSize             range;$/;"	m	struct:VkDescriptorBufferInfo	typeref:typename:VkDeviceSize
range	deps/nuklear.h	/^    const nk_rune *range;$/;"	m	struct:nk_font_config	typeref:typename:const nk_rune *
range	deps/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot	typeref:typename:float
range_count	deps/nuklear.h	/^    nk_rune range_count;$/;"	m	struct:nk_font_bake_data	typeref:typename:nk_rune
ranges	deps/nuklear.h	/^    const nk_rune *ranges;$/;"	m	struct:nk_baked_font	typeref:typename:const nk_rune *
ranges	deps/nuklear.h	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_tt_pack_range *
ranges	deps/nuklear.h	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_baker	typeref:struct:nk_tt_pack_range *
rasterizationSamples	deps/glad/vulkan.h	/^    VkSampleCountFlagBits    rasterizationSamples;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo	typeref:typename:VkSampleCountFlagBits
rasterizerDiscardEnable	deps/glad/vulkan.h	/^    VkBool32                 rasterizerDiscardEnable;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:VkBool32
ratio	deps/nuklear.h	/^    const float *ratio;$/;"	m	struct:nk_row_layout	typeref:typename:const float *
rawInput	src/win32_platform.h	/^    RAWINPUT*           rawInput;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:RAWINPUT *
rawInputSize	src/win32_platform.h	/^    int                 rawInputSize;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:int
rawMouseMotion	src/internal.h	/^    GLFWbool            rawMouseMotion;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWbool
rcCalloutRect	deps/mingw/dinput.h	/^	RECT	rcCalloutRect;$/;"	m	struct:_DIDEVICEIMAGEINFOA	typeref:typename:RECT
rcCalloutRect	deps/mingw/dinput.h	/^	RECT	rcCalloutRect;$/;"	m	struct:_DIDEVICEIMAGEINFOW	typeref:typename:RECT
rcOverlay	deps/mingw/dinput.h	/^	RECT	rcOverlay;$/;"	m	struct:_DIDEVICEIMAGEINFOA	typeref:typename:RECT
rcOverlay	deps/mingw/dinput.h	/^	RECT	rcOverlay;$/;"	m	struct:_DIDEVICEIMAGEINFOW	typeref:typename:RECT
rdf	docs/spaces.svg	/^   sodipodi:docname="spaces.svg">$/;"	n	uri:http://www.w3.org/1999/02/22-rdf-syntax-ns#
rect	deps/glad/vulkan.h	/^    VkRect2D         rect;$/;"	m	struct:VkClearRect	typeref:typename:VkRect2D
rect2985	docs/spaces.svg	/^       inkscape:export-ydpi="109.89113" \/>$/;"	i
rect3757	docs/spaces.svg	/^       inkscape:export-ydpi="109.89113" \/>$/;"	i
rect3767	docs/spaces.svg	/^       inkscape:export-ydpi="109.89113" \/>$/;"	i
rect3789	docs/spaces.svg	/^       inkscape:export-ydpi="109.89113" \/>$/;"	i
rect3795	docs/spaces.svg	/^       inkscape:export-ydpi="109.89113" \/>$/;"	i
rect5577	docs/spaces.svg	/^       y="436.97159" \/>$/;"	i
rects	deps/nuklear.h	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_rp_rect *
rects	deps/nuklear.h	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_baker	typeref:struct:nk_rp_rect *
red	include/GLFW/glfw3.h	/^    unsigned short* red;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned short *
redBits	include/GLFW/glfw3.h	/^    int redBits;$/;"	m	struct:GLFWvidmode	typeref:typename:int
redBits	src/internal.h	/^    int         redBits;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
redo_char_point	deps/nuklear.h	/^   short redo_char_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
redo_point	deps/nuklear.h	/^   short redo_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
reference	deps/glad/vulkan.h	/^    uint32_t                 reference;$/;"	m	struct:VkStencilOpState	typeref:typename:uint32_t
refresh	src/internal.h	/^        GLFWwindowrefreshfun    refresh;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWwindowrefreshfun
refreshMonitorScreen	src/cocoa_monitor.m	/^static GLFWbool refreshMonitorScreen(_GLFWmonitor* monitor)$/;"	f
refreshRate	include/GLFW/glfw3.h	/^    int refreshRate;$/;"	m	struct:GLFWvidmode	typeref:typename:int
refreshRate	src/internal.h	/^        int             refreshRate;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0708	typeref:typename:int
refreshVideoModes	src/monitor.c	/^static GLFWbool refreshVideoModes(_GLFWmonitor* monitor)$/;"	f	typeref:typename:GLFWbool	file:
regex	src/linux_joystick.h	/^    regex_t                 regex;$/;"	m	struct:_GLFWlibraryLinux	typeref:typename:regex_t
region	deps/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:unsigned short[4]
registry	src/wl_platform.h	/^    struct wl_registry*         registry;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_registry *
registryHandleGlobal	src/wl_init.c	/^static void registryHandleGlobal(void* data,$/;"	f	typeref:typename:void	file:
registryHandleGlobalRemove	src/wl_init.c	/^static void registryHandleGlobalRemove(void *data,$/;"	f	typeref:typename:void	file:
registryListener	src/wl_init.c	/^static const struct wl_registry_listener registryListener = {$/;"	v	typeref:typename:const struct wl_registry_listener	file:
relativePointer	src/wl_platform.h	/^        struct zwp_relative_pointer_v1*    relativePointer;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590208	typeref:struct:zwp_relative_pointer_v1 *
relativePointerHandleRelativeMotion	src/wl_window.c	/^static void relativePointerHandleRelativeMotion(void* data,$/;"	f	typeref:typename:void	file:
relativePointerListener	src/wl_window.c	/^static const struct zwp_relative_pointer_v1_listener relativePointerListener = {$/;"	v	typeref:typename:const struct zwp_relative_pointer_v1_listener	file:
relativePointerManager	src/wl_platform.h	/^    struct zwp_relative_pointer_manager_v1* relativePointerManager;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:zwp_relative_pointer_manager_v1 *
release	src/internal.h	/^    int                 release;$/;"	m	struct:_GLFWcontext	typeref:typename:int
release	src/internal.h	/^    int           release;$/;"	m	struct:_GLFWctxconfig	typeref:typename:int
releaseMonitor	src/cocoa_window.m	/^static void releaseMonitor(_GLFWwindow* window)$/;"	f
releaseMonitor	src/win32_window.c	/^static void releaseMonitor(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
releaseMonitor	src/x11_window.c	/^static void releaseMonitor(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
removeCallback	src/cocoa_joystick.m	/^static void removeCallback(void* context,$/;"	f	struct:_GLFWjoyelementNS
renderArea	deps/glad/vulkan.h	/^    VkRect2D                 renderArea;$/;"	m	struct:VkRenderPassBeginInfo	typeref:typename:VkRect2D
renderPass	deps/glad/vulkan.h	/^    VkRenderPass             renderPass;$/;"	m	struct:VkFramebufferCreateInfo	typeref:typename:VkRenderPass
renderPass	deps/glad/vulkan.h	/^    VkRenderPass             renderPass;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:VkRenderPass
renderPass	deps/glad/vulkan.h	/^    VkRenderPass             renderPass;$/;"	m	struct:VkRenderPassBeginInfo	typeref:typename:VkRenderPass
renderPass	deps/glad/vulkan.h	/^    VkRenderPass      renderPass;$/;"	m	struct:VkCommandBufferInheritanceInfo	typeref:typename:VkRenderPass
render_pass	tests/triangle-vulkan.c	/^    VkRenderPass render_pass;$/;"	m	struct:demo	typeref:typename:VkRenderPass	file:
reopen	tests/CMakeLists.txt	/^add_executable(reopen reopen.c ${GLAD_GL})$/;"	t
required_argument	deps/getopt.c	/^const int required_argument = 1;$/;"	v	typeref:typename:const int
requiresDedicatedAllocation	deps/glad/vulkan.h	/^    VkBool32                           requiresDedicatedAllocation;$/;"	m	struct:VkMemoryDedicatedRequirements	typeref:typename:VkBool32
reshape	examples/boing.c	/^void reshape( GLFWwindow* window, int w, int h )$/;"	f	typeref:typename:void
reshape	examples/gears.c	/^void reshape( GLFWwindow* window, int width, int height )$/;"	f	typeref:typename:void
residencyAlignedMipSize	deps/glad/vulkan.h	/^    VkBool32                 residencyAlignedMipSize;$/;"	m	struct:VkPhysicalDeviceSparseProperties	typeref:typename:VkBool32
residencyNonResidentStrict	deps/glad/vulkan.h	/^    VkBool32                 residencyNonResidentStrict;$/;"	m	struct:VkPhysicalDeviceSparseProperties	typeref:typename:VkBool32
residencyStandard2DBlockShape	deps/glad/vulkan.h	/^    VkBool32                 residencyStandard2DBlockShape;$/;"	m	struct:VkPhysicalDeviceSparseProperties	typeref:typename:VkBool32
residencyStandard2DMultisampleBlockShape	deps/glad/vulkan.h	/^    VkBool32                 residencyStandard2DMultisampleBlockShape;$/;"	m	struct:VkPhysicalDeviceSparseProperties	typeref:typename:VkBool32
residencyStandard3DBlockShape	deps/glad/vulkan.h	/^    VkBool32                 residencyStandard3DBlockShape;$/;"	m	struct:VkPhysicalDeviceSparseProperties	typeref:typename:VkBool32
resizable	src/internal.h	/^    GLFWbool            resizable;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWbool
resizable	src/internal.h	/^    GLFWbool      resizable;$/;"	m	struct:_GLFWwndconfig	typeref:typename:GLFWbool
resizeWindow	src/wl_window.c	/^static void resizeWindow(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
resize_callback	examples/particles.c	/^static void resize_callback(GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void	file:
resourceDeviceIndex	deps/glad/vulkan.h	/^    uint32_t                           resourceDeviceIndex;$/;"	m	struct:VkDeviceGroupBindSparseInfo	typeref:typename:uint32_t
resourceOffset	deps/glad/vulkan.h	/^    VkDeviceSize             resourceOffset;$/;"	m	struct:VkSparseMemoryBind	typeref:typename:VkDeviceSize
restoreCursorPosX	src/win32_platform.h	/^    double              restoreCursorPosX, restoreCursorPosY;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:double
restoreCursorPosX	src/x11_platform.h	/^    double          restoreCursorPosX, restoreCursorPosY;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:double
restoreCursorPosY	src/win32_platform.h	/^    double              restoreCursorPosX, restoreCursorPosY;$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:double
restoreCursorPosY	src/x11_platform.h	/^    double          restoreCursorPosX, restoreCursorPosY;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:double
retina	src/cocoa_platform.h	/^    GLFWbool        retina;$/;"	E	struct:_GLFWwindowNS
retina	src/internal.h	/^        GLFWbool  retina;$/;"	m	struct:_GLFWwndconfig::__anona0faa0af0208	typeref:typename:GLFWbool
revision	src/internal.h	/^    int                 major, minor, revision;$/;"	m	struct:_GLFWcontext	typeref:typename:int
rgbButtons	deps/mingw/dinput.h	/^	BYTE	rgbButtons[128];$/;"	m	struct:DIJOYSTATE2	typeref:typename:BYTE[128]
rgbButtons	deps/mingw/dinput.h	/^	BYTE	rgbButtons[32];$/;"	m	struct:DIJOYSTATE	typeref:typename:BYTE[32]
rgbButtons	deps/mingw/dinput.h	/^  BYTE rgbButtons[4];$/;"	m	struct:DIMOUSESTATE	typeref:typename:BYTE[4]
rgbButtons	deps/mingw/dinput.h	/^  BYTE rgbButtons[8];$/;"	m	struct:DIMOUSESTATE2	typeref:typename:BYTE[8]
rgba	examples/particles.c	/^    GLuint  rgba;         \/\/ Color (four ubytes packed into an uint)$/;"	m	struct:__anon62203f4b0208	typeref:typename:GLuint	file:
rgdwAxes	deps/mingw/dinput.h	/^	LPDWORD			rgdwAxes;$/;"	m	struct:DIEFFECT	typeref:typename:LPDWORD
rgdwAxes	deps/mingw/dinput.h	/^	LPDWORD			rgdwAxes;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:LPDWORD
rgdwPOV	deps/mingw/dinput.h	/^	DWORD	rgdwPOV[4];$/;"	m	struct:DIJOYSTATE	typeref:typename:DWORD[4]
rgdwPOV	deps/mingw/dinput.h	/^	DWORD	rgdwPOV[4];$/;"	m	struct:DIJOYSTATE2	typeref:typename:DWORD[4]
rglASlider	deps/mingw/dinput.h	/^	LONG	rglASlider[2];$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG[2]
rglDirection	deps/mingw/dinput.h	/^	LPLONG			rglDirection;$/;"	m	struct:DIEFFECT	typeref:typename:LPLONG
rglDirection	deps/mingw/dinput.h	/^	LPLONG			rglDirection;$/;"	m	struct:DIEFFECT_DX5	typeref:typename:LPLONG
rglFSlider	deps/mingw/dinput.h	/^	LONG	rglFSlider[2];$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG[2]
rglForceData	deps/mingw/dinput.h	/^	LPLONG			rglForceData;$/;"	m	struct:DICUSTOMFORCE	typeref:typename:LPLONG
rglSlider	deps/mingw/dinput.h	/^	LONG	rglSlider[2];$/;"	m	struct:DIJOYSTATE	typeref:typename:LONG[2]
rglSlider	deps/mingw/dinput.h	/^	LONG	rglSlider[2];$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG[2]
rglVSlider	deps/mingw/dinput.h	/^	LONG	rglVSlider[2];$/;"	m	struct:DIJOYSTATE2	typeref:typename:LONG[2]
rgoAction	deps/mingw/dinput.h	/^	LPDIACTIONA	rgoAction;$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:LPDIACTIONA
rgoAction	deps/mingw/dinput.h	/^	LPDIACTIONW	rgoAction;$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:LPDIACTIONW
rgodf	deps/mingw/dinput.h	/^    LPDIOBJECTDATAFORMAT	rgodf;$/;"	m	struct:_DIDATAFORMAT	typeref:typename:LPDIOBJECTDATAFORMAT
rgptCalloutLine	deps/mingw/dinput.h	/^	POINT	rgptCalloutLine[5];$/;"	m	struct:_DIDEVICEIMAGEINFOA	typeref:typename:POINT[5]
rgptCalloutLine	deps/mingw/dinput.h	/^	POINT	rgptCalloutLine[5];$/;"	m	struct:_DIDEVICEIMAGEINFOW	typeref:typename:POINT[5]
right	deps/nuklear.h	/^    struct nk_color right;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
right	src/wl_platform.h	/^        _GLFWdecorationWayland             top, left, right, bottom;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590308	typeref:typename:_GLFWdecorationWayland
rightDecoration	src/wl_platform.h	/^    rightDecoration,$/;"	e	enum:_GLFWdecorationSideWayland
rightMouseDown:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
rightMouseDragged:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
rightMouseUp:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
robustBufferAccess	deps/glad/vulkan.h	/^    VkBool32                 robustBufferAccess;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
robustness	src/internal.h	/^    int                 robustness;$/;"	m	struct:_GLFWcontext	typeref:typename:int
robustness	src/internal.h	/^    int           robustness;$/;"	m	struct:_GLFWctxconfig	typeref:typename:int
root	src/x11_platform.h	/^    Window          root;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Window
rot_x	examples/splitview.c	/^static int rot_x = 0, rot_y = 0, rot_z = 0;$/;"	v	typeref:typename:int	file:
rot_y	examples/splitview.c	/^static int rot_x = 0, rot_y = 0, rot_z = 0;$/;"	v	typeref:typename:int	file:
rot_z	examples/splitview.c	/^static int rot_x = 0, rot_y = 0, rot_z = 0;$/;"	v	typeref:typename:int	file:
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_button	typeref:typename:float
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_chart	typeref:typename:float
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_combo	typeref:typename:float
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_edit	typeref:typename:float
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_progress	typeref:typename:float
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_property	typeref:typename:float
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_selectable	typeref:typename:float
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_slider	typeref:typename:float
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_tab	typeref:typename:float
rounding	deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_window	typeref:typename:float
rounding	deps/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
rounding	deps/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect_filled	typeref:typename:unsigned short
rounding_cursor	deps/nuklear.h	/^    float rounding_cursor;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
row	deps/nuklear.h	/^    struct nk_row_layout row;$/;"	m	struct:nk_panel	typeref:struct:nk_row_layout
rowPitch	deps/glad/vulkan.h	/^    VkDeviceSize             rowPitch;$/;"	m	struct:VkSubresourceLayout	typeref:typename:VkDeviceSize
row_padding	deps/nuklear.h	/^    float row_padding;$/;"	m	struct:nk_style_edit	typeref:typename:float
running	tests/empty.c	/^static volatile int running = GLFW_TRUE;$/;"	v	typeref:typename:volatile int	file:
running	tests/threads.c	/^static volatile int running = GLFW_TRUE;$/;"	v	typeref:typename:volatile int	file:
s	examples/particles.c	/^    GLfloat s, t;         \/\/ Texture coordinates$/;"	m	struct:__anon62203f4b0208	typeref:typename:GLfloat	file:
s0	deps/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
s1	deps/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
sRGB	src/internal.h	/^    GLFWbool    sRGB;$/;"	m	struct:_GLFWfbconfig	typeref:typename:GLFWbool
sThumbLX	deps/mingw/xinput.h	/^    SHORT sThumbLX;$/;"	m	struct:_XINPUT_GAMEPAD	typeref:typename:SHORT
sThumbLY	deps/mingw/xinput.h	/^    SHORT sThumbLY;$/;"	m	struct:_XINPUT_GAMEPAD	typeref:typename:SHORT
sThumbRX	deps/mingw/xinput.h	/^    SHORT sThumbRX;$/;"	m	struct:_XINPUT_GAMEPAD	typeref:typename:SHORT
sThumbRY	deps/mingw/xinput.h	/^    SHORT sThumbRY;$/;"	m	struct:_XINPUT_GAMEPAD	typeref:typename:SHORT
sType	deps/glad/vulkan.h	/^    VkStructureType          sType;$/;"	m	struct:VkRenderPassMultiviewCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkAcquireNextImageInfoKHR	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkApplicationInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBaseInStructure	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBaseOutStructure	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBindBufferMemoryDeviceGroupInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBindBufferMemoryInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBindImageMemoryDeviceGroupInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBindImageMemoryInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBindImageMemorySwapchainInfoKHR	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBindImagePlaneMemoryInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBindSparseInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBufferCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBufferMemoryBarrier	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBufferMemoryRequirementsInfo2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkBufferViewCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkCommandBufferAllocateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkCommandBufferBeginInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkCommandBufferInheritanceInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkCommandPoolCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkComputePipelineCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkCopyDescriptorSet	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDescriptorPoolCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDescriptorSetAllocateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDescriptorSetLayoutSupport	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDescriptorUpdateTemplateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceGroupBindSparseInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceGroupCommandBufferBeginInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceGroupDeviceCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceGroupPresentCapabilitiesKHR	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceGroupPresentInfoKHR	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceGroupRenderPassBeginInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceGroupSubmitInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceGroupSwapchainCreateInfoKHR	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceQueueCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkDeviceQueueInfo2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkEventCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkExportFenceCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkExportMemoryAllocateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkExportSemaphoreCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkExternalBufferProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkExternalFenceProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkExternalImageFormatProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkExternalMemoryBufferCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkExternalMemoryImageCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkExternalSemaphoreProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkFenceCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkFormatProperties2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkFramebufferCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkImageCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkImageFormatProperties2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkImageMemoryBarrier	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkImageMemoryRequirementsInfo2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkImagePlaneMemoryRequirementsInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkImageSparseMemoryRequirementsInfo2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkImageSwapchainCreateInfoKHR	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkImageViewCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkImageViewUsageCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkInstanceCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkMappedMemoryRange	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkMemoryAllocateFlagsInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkMemoryAllocateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkMemoryBarrier	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkMemoryDedicatedAllocateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkMemoryDedicatedRequirements	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkMemoryRequirements2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDevice16BitStorageFeatures	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceExternalBufferInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceExternalFenceInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceExternalImageFormatInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceExternalSemaphoreInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceFeatures2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceGroupProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceIDProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceMaintenance3Properties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceMemoryProperties2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceMultiviewFeatures	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceMultiviewProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDevicePointClippingProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceProperties2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceProtectedMemoryFeatures	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceProtectedMemoryProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceSamplerYcbcrConversionFeatures	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceShaderDrawParametersFeatures	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceSubgroupProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPhysicalDeviceVariablePointersFeatures	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineCacheCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineDynamicStateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineLayoutCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineShaderStageCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineTessellationDomainOriginStateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineTessellationStateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPipelineViewportStateCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkPresentInfoKHR	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkProtectedSubmitInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkQueryPoolCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkQueueFamilyProperties2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkRenderPassBeginInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkRenderPassCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkRenderPassInputAttachmentAspectCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkSamplerYcbcrConversionCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkSamplerYcbcrConversionImageFormatProperties	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkSamplerYcbcrConversionInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkSemaphoreCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkShaderModuleCreateInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkSparseImageFormatProperties2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkSparseImageMemoryRequirements2	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkSubmitInfo	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkStructureType
sType	deps/glad/vulkan.h	/^    VkStructureType   sType;$/;"	m	struct:VkWriteDescriptorSet	typeref:typename:VkStructureType
sType	src/cocoa_platform.h	/^    VkStructureType                 sType;$/;"	E	struct:VkMacOSSurfaceCreateInfoMVK
sType	src/cocoa_platform.h	/^    VkStructureType                 sType;$/;"	t
sType	src/win32_platform.h	/^    VkStructureType                 sType;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR	typeref:typename:VkStructureType
sType	src/wl_platform.h	/^    VkStructureType                 sType;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:typename:VkStructureType
sType	src/x11_platform.h	/^    VkStructureType             sType;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR	typeref:typename:VkStructureType
sType	src/x11_platform.h	/^    VkStructureType             sType;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR	typeref:typename:VkStructureType
sampleCounts	deps/glad/vulkan.h	/^    VkSampleCountFlags       sampleCounts;$/;"	m	struct:VkImageFormatProperties	typeref:typename:VkSampleCountFlags
sampleRateShading	deps/glad/vulkan.h	/^    VkBool32                 sampleRateShading;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
sampleShadingEnable	deps/glad/vulkan.h	/^    VkBool32                 sampleShadingEnable;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo	typeref:typename:VkBool32
sample_input	tests/inputlag.c	/^void sample_input(GLFWwindow* window)$/;"	f	typeref:typename:void
sampledImageColorSampleCounts	deps/glad/vulkan.h	/^    VkSampleCountFlags       sampledImageColorSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkSampleCountFlags
sampledImageDepthSampleCounts	deps/glad/vulkan.h	/^    VkSampleCountFlags       sampledImageDepthSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkSampleCountFlags
sampledImageIntegerSampleCounts	deps/glad/vulkan.h	/^    VkSampleCountFlags       sampledImageIntegerSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkSampleCountFlags
sampledImageStencilSampleCounts	deps/glad/vulkan.h	/^    VkSampleCountFlags       sampledImageStencilSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkSampleCountFlags
sampler	deps/glad/vulkan.h	/^    VkSampler         sampler;$/;"	m	struct:VkDescriptorImageInfo	typeref:typename:VkSampler
sampler	tests/triangle-vulkan.c	/^    VkSampler sampler;$/;"	m	struct:texture_object	typeref:typename:VkSampler	file:
samplerAnisotropy	deps/glad/vulkan.h	/^    VkBool32                 samplerAnisotropy;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
samplerYcbcrConversion	deps/glad/vulkan.h	/^    VkBool32                           samplerYcbcrConversion;$/;"	m	struct:VkPhysicalDeviceSamplerYcbcrConversionFeatures	typeref:typename:VkBool32
samples	deps/glad/vulkan.h	/^    VkSampleCountFlagBits              samples;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2	typeref:typename:VkSampleCountFlagBits
samples	deps/glad/vulkan.h	/^    VkSampleCountFlagBits    samples;$/;"	m	struct:VkAttachmentDescription	typeref:typename:VkSampleCountFlagBits
samples	deps/glad/vulkan.h	/^    VkSampleCountFlagBits    samples;$/;"	m	struct:VkImageCreateInfo	typeref:typename:VkSampleCountFlagBits
samples	src/internal.h	/^    int         samples;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
saver	src/x11_platform.h	/^    } saver;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon830d96b00308
scale	deps/nuklear.h	/^    float scale;$/;"	m	struct:nk_font	typeref:typename:float
scale	src/internal.h	/^        GLFWwindowcontentscalefun scale;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWwindowcontentscalefun
scale	src/wl_platform.h	/^    int                         scale;$/;"	m	struct:_GLFWmonitorWayland	typeref:typename:int
scale	src/wl_platform.h	/^    int                         scale;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:int
scaleToMonitor	src/internal.h	/^    GLFWbool      scaleToMonitor;$/;"	m	struct:_GLFWwndconfig	typeref:typename:GLFWbool
scaleToMonitor	src/win32_platform.h	/^    GLFWbool            scaleToMonitor;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:GLFWbool
scaler	deps/nuklear.h	/^    struct nk_style_item scaler;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_item
scancodes	src/win32_platform.h	/^    short int           scancodes[GLFW_KEY_LAST + 1];$/;"	m	struct:_GLFWlibraryWin32	typeref:typename:short int[]
scancodes	src/wl_platform.h	/^    short int                   scancodes[GLFW_KEY_LAST + 1];$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:short int[]
scancodes	src/x11_platform.h	/^    short int       scancodes[GLFW_KEY_LAST + 1];$/;"	m	struct:_GLFWlibraryX11	typeref:typename:short int[]
scissorCount	deps/glad/vulkan.h	/^    uint32_t                 scissorCount;$/;"	m	struct:VkPipelineViewportStateCreateInfo	typeref:typename:uint32_t
screen	src/cocoa_platform.h	/^    id                  screen;$/;"	E	struct:_GLFWmonitorNS
screen	src/x11_platform.h	/^    int             screen;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:int
scroll	deps/nuklear_glfw_gl2.h	/^    struct nk_vec2 scroll;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
scroll	src/internal.h	/^        GLFWscrollfun           scroll;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWscrollfun
scrollWheel:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
scroll_callback	examples/wave.c	/^void scroll_callback(GLFWwindow* window, double x, double y)$/;"	f	typeref:typename:void
scroll_callback	tests/events.c	/^static void scroll_callback(GLFWwindow* window, double x, double y)$/;"	f	typeref:typename:void	file:
scroll_delta	deps/nuklear.h	/^    struct nk_vec2 scroll_delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
scroll_pointer	deps/nuklear.h	/^    nk_uint *scroll_pointer;$/;"	m	struct:nk_list_view	typeref:typename:nk_uint *
scroll_value	deps/nuklear.h	/^    nk_uint scroll_value;$/;"	m	struct:nk_list_view	typeref:typename:nk_uint
scrollbar	deps/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_edit_state	typeref:struct:nk_scroll
scrollbar	deps/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_window	typeref:struct:nk_scroll
scrollbar	deps/nuklear.h	/^    struct nk_style_scrollbar scrollbar;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_scrollbar
scrollbar	deps/nuklear.h	/^    struct nk_vec2 scrollbar;$/;"	m	struct:nk_text_edit	typeref:struct:nk_vec2
scrollbar_hiding_timer	deps/nuklear.h	/^    float scrollbar_hiding_timer;$/;"	m	struct:nk_window	typeref:typename:float
scrollbar_size	deps/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_edit	typeref:struct:nk_vec2
scrollbar_size	deps/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
scrolled	deps/nuklear.h	/^    unsigned int scrolled;$/;"	m	struct:nk_window	typeref:typename:unsigned int
scrollh	deps/nuklear.h	/^    struct nk_style_scrollbar scrollh;$/;"	m	struct:nk_style	typeref:struct:nk_style_scrollbar
scrollv	deps/nuklear.h	/^    struct nk_style_scrollbar scrollv;$/;"	m	struct:nk_style	typeref:struct:nk_style_scrollbar
seat	src/wl_platform.h	/^    struct wl_seat*             seat;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_seat *
seatHandleCapabilities	src/wl_init.c	/^static void seatHandleCapabilities(void* data,$/;"	f	typeref:typename:void	file:
seatHandleName	src/wl_init.c	/^static void seatHandleName(void* data,$/;"	f	typeref:typename:void	file:
seatListener	src/wl_init.c	/^static const struct wl_seat_listener seatListener = {$/;"	v	typeref:typename:const struct wl_seat_listener	file:
seatVersion	src/wl_platform.h	/^    int                         seatVersion;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:int
section	src/win32_platform.h	/^    CRITICAL_SECTION    section;$/;"	m	struct:_GLFWmutexWin32	typeref:typename:CRITICAL_SECTION
sel_end	deps/nuklear.h	/^    int sel_end;$/;"	m	struct:nk_edit_state	typeref:typename:int
sel_start	deps/nuklear.h	/^    int sel_start;$/;"	m	struct:nk_edit_state	typeref:typename:int
select_end	deps/nuklear.h	/^    int select_end;$/;"	m	struct:nk_property_state	typeref:typename:int
select_end	deps/nuklear.h	/^    int select_end;$/;"	m	struct:nk_text_edit	typeref:typename:int
select_start	deps/nuklear.h	/^    int select_start;$/;"	m	struct:nk_property_state	typeref:typename:int
select_start	deps/nuklear.h	/^    int select_start;$/;"	m	struct:nk_text_edit	typeref:typename:int
selectable	deps/nuklear.h	/^    struct nk_style_selectable selectable;$/;"	m	struct:nk_style	typeref:struct:nk_style_selectable
selectedKeyboardInputSourceChanged:	src/cocoa_init.m	/^{$/;"	m	implementation:GLFWHelper
selectedRange	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
selected_color	deps/nuklear.h	/^    struct nk_color selected_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_color
selected_hover	deps/nuklear.h	/^    struct nk_color selected_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
selected_normal	deps/nuklear.h	/^    struct nk_color selected_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
selected_text_hover	deps/nuklear.h	/^    struct nk_color selected_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
selected_text_normal	deps/nuklear.h	/^    struct nk_color selected_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
semaphore	deps/glad/vulkan.h	/^    VkSemaphore   semaphore;$/;"	m	struct:VkAcquireNextImageInfoKHR	typeref:typename:VkSemaphore
sendEventToWM	src/x11_window.c	/^static void sendEventToWM(_GLFWwindow* window, Atom type,$/;"	f	typeref:typename:void	file:
seq	deps/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_context	typeref:typename:unsigned int
seq	deps/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned int
seq	deps/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_property_state	typeref:typename:unsigned int
seq	deps/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_table	typeref:typename:unsigned int
seq	deps/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_window	typeref:typename:unsigned int
serial	src/wl_platform.h	/^    uint32_t                    serial;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:uint32_t
serverSide	src/wl_platform.h	/^        GLFWbool                           serverSide;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590308	typeref:typename:GLFWbool
set	deps/glad/vulkan.h	/^    uint32_t   set;$/;"	m	struct:VkDescriptorUpdateTemplateCreateInfo	typeref:typename:uint32_t
setAttrib	src/egl_context.c	/^#define setAttrib(/;"	d	file:
setAttrib	src/glx_context.c	/^#define setAttrib(/;"	d	file:
setAttrib	src/osmesa_context.c	/^#define setAttrib(/;"	d	file:
setAttrib	src/wgl_context.c	/^#define setAttrib(/;"	d	file:
setCursor	src/wl_init.c	/^static void setCursor(_GLFWwindow* window, const char* name)$/;"	f	typeref:typename:void	file:
setCursorImage	src/wl_window.c	/^static void setCursorImage(_GLFWwindow* window,$/;"	f	typeref:typename:void	file:
setFullscreen	src/wl_window.c	/^static void setFullscreen(_GLFWwindow* window, _GLFWmonitor* monitor,$/;"	f	typeref:typename:void	file:
setIdleInhibitor	src/wl_window.c	/^static void setIdleInhibitor(_GLFWwindow* window, GLFWbool enable)$/;"	f	typeref:typename:void	file:
setLayoutCount	deps/glad/vulkan.h	/^    uint32_t                 setLayoutCount;$/;"	m	struct:VkPipelineLayoutCreateInfo	typeref:typename:uint32_t
setMarkedText:selectedRange:replacementRange:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
setOpaqueRegion	src/wl_window.c	/^static void setOpaqueRegion(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
setXdgDecorations	src/wl_window.c	/^static void setXdgDecorations(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
set_ball_pos	examples/boing.c	/^static void set_ball_pos ( GLfloat x, GLfloat y )$/;"	f	typeref:typename:void	file:
set_icon	tests/icon.c	/^static void set_icon(GLFWwindow* window, int icon_color)$/;"	f	typeref:typename:void	file:
set_swap_interval	tests/tearing.c	/^static void set_swap_interval(GLFWwindow* window, int interval)$/;"	f	typeref:typename:void	file:
setup_cmd	tests/triangle-vulkan.c	/^    VkCommandBuffer setup_cmd; \/\/ Command Buffer for initialization commands$/;"	m	struct:demo	typeref:typename:VkCommandBuffer	file:
setup_lights	examples/particles.c	/^static void setup_lights(void)$/;"	f	typeref:typename:void	file:
shaderClipDistance	deps/glad/vulkan.h	/^    VkBool32                 shaderClipDistance;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderCullDistance	deps/glad/vulkan.h	/^    VkBool32                 shaderCullDistance;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderDrawParameters	deps/glad/vulkan.h	/^    VkBool32                           shaderDrawParameters;$/;"	m	struct:VkPhysicalDeviceShaderDrawParametersFeatures	typeref:typename:VkBool32
shaderFloat64	deps/glad/vulkan.h	/^    VkBool32                 shaderFloat64;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderImageGatherExtended	deps/glad/vulkan.h	/^    VkBool32                 shaderImageGatherExtended;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderInt16	deps/glad/vulkan.h	/^    VkBool32                 shaderInt16;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderInt64	deps/glad/vulkan.h	/^    VkBool32                 shaderInt64;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderResourceMinLod	deps/glad/vulkan.h	/^    VkBool32                 shaderResourceMinLod;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderResourceResidency	deps/glad/vulkan.h	/^    VkBool32                 shaderResourceResidency;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderSampledImageArrayDynamicIndexing	deps/glad/vulkan.h	/^    VkBool32                 shaderSampledImageArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderStorageBufferArrayDynamicIndexing	deps/glad/vulkan.h	/^    VkBool32                 shaderStorageBufferArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderStorageImageArrayDynamicIndexing	deps/glad/vulkan.h	/^    VkBool32                 shaderStorageImageArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderStorageImageExtendedFormats	deps/glad/vulkan.h	/^    VkBool32                 shaderStorageImageExtendedFormats;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderStorageImageMultisample	deps/glad/vulkan.h	/^    VkBool32                 shaderStorageImageMultisample;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderStorageImageReadWithoutFormat	deps/glad/vulkan.h	/^    VkBool32                 shaderStorageImageReadWithoutFormat;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderStorageImageWriteWithoutFormat	deps/glad/vulkan.h	/^    VkBool32                 shaderStorageImageWriteWithoutFormat;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderTessellationAndGeometryPointSize	deps/glad/vulkan.h	/^    VkBool32                 shaderTessellationAndGeometryPointSize;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shaderUniformBufferArrayDynamicIndexing	deps/glad/vulkan.h	/^    VkBool32                 shaderUniformBufferArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
shape_AA	deps/nuklear.h	/^    enum nk_anti_aliasing shape_AA; \/* shape anti-aliasing flag can be turned off if you are ti/;"	m	struct:nk_convert_config	typeref:enum:nk_anti_aliasing
shape_AA	deps/nuklear.h	/^    enum nk_anti_aliasing shape_AA;$/;"	m	struct:nk_draw_list	typeref:enum:nk_anti_aliasing
share	src/internal.h	/^    _GLFWwindow*  share;$/;"	m	struct:_GLFWctxconfig	typeref:typename:_GLFWwindow *
sharing	examples/CMakeLists.txt	/^add_executable(sharing WIN32 MACOSX_BUNDLE sharing.c ${ICON} ${GLAD_GL})$/;"	t
sharingMode	deps/glad/vulkan.h	/^    VkSharingMode            sharingMode;$/;"	m	struct:VkBufferCreateInfo	typeref:typename:VkSharingMode
sharingMode	deps/glad/vulkan.h	/^    VkSharingMode            sharingMode;$/;"	m	struct:VkImageCreateInfo	typeref:typename:VkSharingMode
shcore	src/win32_platform.h	/^    } shcore;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon622bd5890a08
shiftMask	src/wl_platform.h	/^        xkb_mod_mask_t          shiftMask;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:xkb_mod_mask_t
shm	src/wl_platform.h	/^    struct wl_shm*              shm;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_shm *
shouldClose	src/internal.h	/^    GLFWbool            shouldClose;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWbool
showCursor	src/cocoa_window.m	/^static void showCursor(_GLFWwindow* window)$/;"	f
show_buttons	deps/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_scrollbar	typeref:typename:int
show_buttons	deps/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_slider	typeref:typename:int
signalSemaphoreCount	deps/glad/vulkan.h	/^    uint32_t                 signalSemaphoreCount;$/;"	m	struct:VkBindSparseInfo	typeref:typename:uint32_t
signalSemaphoreCount	deps/glad/vulkan.h	/^    uint32_t           signalSemaphoreCount;$/;"	m	struct:VkDeviceGroupSubmitInfo	typeref:typename:uint32_t
signalSemaphoreCount	deps/glad/vulkan.h	/^    uint32_t         signalSemaphoreCount;$/;"	m	struct:VkSubmitInfo	typeref:typename:uint32_t
sin_deg	examples/boing.c	/^double sin_deg( double deg )$/;"	f	typeref:typename:double
single_line	deps/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned char
single_line	deps/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
size	deps/glad/vulkan.h	/^    VkDeviceSize             size;$/;"	m	struct:VkBufferCreateInfo	typeref:typename:VkDeviceSize
size	deps/glad/vulkan.h	/^    VkDeviceSize             size;$/;"	m	struct:VkBufferMemoryBarrier	typeref:typename:VkDeviceSize
size	deps/glad/vulkan.h	/^    VkDeviceSize             size;$/;"	m	struct:VkMappedMemoryRange	typeref:typename:VkDeviceSize
size	deps/glad/vulkan.h	/^    VkDeviceSize             size;$/;"	m	struct:VkMemoryHeap	typeref:typename:VkDeviceSize
size	deps/glad/vulkan.h	/^    VkDeviceSize             size;$/;"	m	struct:VkMemoryRequirements	typeref:typename:VkDeviceSize
size	deps/glad/vulkan.h	/^    VkDeviceSize             size;$/;"	m	struct:VkSparseMemoryBind	typeref:typename:VkDeviceSize
size	deps/glad/vulkan.h	/^    VkDeviceSize             size;$/;"	m	struct:VkSubresourceLayout	typeref:typename:VkDeviceSize
size	deps/glad/vulkan.h	/^    VkDeviceSize   size;$/;"	m	struct:VkBufferCopy	typeref:typename:VkDeviceSize
size	deps/glad/vulkan.h	/^    size_t   size;$/;"	m	struct:VkSpecializationMapEntry	typeref:typename:size_t
size	deps/glad/vulkan.h	/^    uint32_t                 size;$/;"	m	struct:VkPushConstantRange	typeref:typename:uint32_t
size	deps/nuklear.h	/^    float size;$/;"	m	struct:nk_font_config	typeref:typename:float
size	deps/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
size	deps/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
size	deps/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_pool	typeref:typename:nk_size
size	deps/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_page	typeref:typename:unsigned int
size	deps/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_table	typeref:typename:unsigned int
size	deps/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_vec2
size	deps/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory	typeref:typename:nk_size
size	deps/stb_image_write.h	/^typedef void stbi_write_func(void *context, void *data, int size);$/;"	t	typeref:typename:void stbi_write_func (void * context,void * data,int)
size	include/GLFW/glfw3.h	/^    unsigned int size;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned int
size	src/internal.h	/^        GLFWwindowsizefun       size;$/;"	m	struct:_GLFWwindow::__anona0faa0af0608	typeref:typename:GLFWwindowsizefun
slider	deps/nuklear.h	/^    struct nk_style_slider slider;$/;"	m	struct:nk_style	typeref:struct:nk_style_slider
sliderCount	src/win32_joystick.c	/^    int                     sliderCount;$/;"	m	struct:_GLFWobjenumWin32	typeref:typename:int	file:
slot	deps/nuklear.h	/^    int slot;$/;"	m	struct:nk_chart	typeref:typename:int
slots	deps/nuklear.h	/^    struct nk_chart_slot slots[NK_CHART_MAX_SLOT];$/;"	m	struct:nk_chart	typeref:struct:nk_chart_slot[]
smallIcon	src/win32_platform.h	/^    HICON               smallIcon;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:HICON
sodipodi	docs/spaces.svg	/^   sodipodi:docname="spaces.svg">$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
source	src/internal.h	/^    int                 source;$/;"	m	struct:_GLFWcontext	typeref:typename:int
source	src/internal.h	/^    int           source;$/;"	m	struct:_GLFWctxconfig	typeref:typename:int
source	src/x11_platform.h	/^        Window      source;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00408	typeref:typename:Window
source_path	CMake/GenerateMappings.cmake	/^set(source_path "${CMAKE_CURRENT_BINARY_DIR}\/gamecontrollerdb.txt")$/;"	v
source_url	CMake/GenerateMappings.cmake	/^set(source_url "https:\/\/raw.githubusercontent.com\/gabomdq\/SDL_GameControllerDB\/master\/game/;"	v
spacing	deps/nuklear.h	/^    float spacing;$/;"	m	struct:nk_style_toggle	typeref:typename:float
spacing	deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_font_config	typeref:struct:nk_vec2
spacing	deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_combo	typeref:struct:nk_vec2
spacing	deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_slider	typeref:struct:nk_vec2
spacing	deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_tab	typeref:struct:nk_vec2
spacing	deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
spacing	deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_vec2
span.comment	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
span.keyword	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
span.keywordflow	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
span.keywordtype	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
span.lineno	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
span.lineno a	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
span.lineno a:hover	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
span.preprocessor	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
span.stringliteral	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
sparseAddressSpaceSize	deps/glad/vulkan.h	/^    VkDeviceSize             sparseAddressSpaceSize;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkDeviceSize
sparseBinding	deps/glad/vulkan.h	/^    VkBool32                 sparseBinding;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
sparseProperties	deps/glad/vulkan.h	/^    VkPhysicalDeviceSparseProperties   sparseProperties;$/;"	m	struct:VkPhysicalDeviceProperties	typeref:typename:VkPhysicalDeviceSparseProperties
sparseResidency16Samples	deps/glad/vulkan.h	/^    VkBool32                 sparseResidency16Samples;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
sparseResidency2Samples	deps/glad/vulkan.h	/^    VkBool32                 sparseResidency2Samples;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
sparseResidency4Samples	deps/glad/vulkan.h	/^    VkBool32                 sparseResidency4Samples;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
sparseResidency8Samples	deps/glad/vulkan.h	/^    VkBool32                 sparseResidency8Samples;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
sparseResidencyAliased	deps/glad/vulkan.h	/^    VkBool32                 sparseResidencyAliased;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
sparseResidencyBuffer	deps/glad/vulkan.h	/^    VkBool32                 sparseResidencyBuffer;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
sparseResidencyImage2D	deps/glad/vulkan.h	/^    VkBool32                 sparseResidencyImage2D;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
sparseResidencyImage3D	deps/glad/vulkan.h	/^    VkBool32                 sparseResidencyImage3D;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
spc	deps/nuklear.h	/^    struct nk_tt_pack_context spc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_tt_pack_context
specVersion	deps/glad/vulkan.h	/^    uint32_t          specVersion;$/;"	m	struct:VkExtensionProperties	typeref:typename:uint32_t
specVersion	deps/glad/vulkan.h	/^    uint32_t          specVersion;$/;"	m	struct:VkLayerProperties	typeref:typename:uint32_t
specVersion	src/internal.h	/^    uint32_t        specVersion;$/;"	m	struct:VkExtensionProperties	typeref:typename:uint32_t
splitInstanceBindRegionCount	deps/glad/vulkan.h	/^    uint32_t           splitInstanceBindRegionCount;$/;"	m	struct:VkBindImageMemoryDeviceGroupInfo	typeref:typename:uint32_t
splitview	examples/CMakeLists.txt	/^add_executable(splitview WIN32 MACOSX_BUNDLE splitview.c ${ICON} ${GLAD_GL})$/;"	t
srcAccessMask	deps/glad/vulkan.h	/^    VkAccessFlags            srcAccessMask;$/;"	m	struct:VkBufferMemoryBarrier	typeref:typename:VkAccessFlags
srcAccessMask	deps/glad/vulkan.h	/^    VkAccessFlags            srcAccessMask;$/;"	m	struct:VkImageMemoryBarrier	typeref:typename:VkAccessFlags
srcAccessMask	deps/glad/vulkan.h	/^    VkAccessFlags            srcAccessMask;$/;"	m	struct:VkMemoryBarrier	typeref:typename:VkAccessFlags
srcAccessMask	deps/glad/vulkan.h	/^    VkAccessFlags            srcAccessMask;$/;"	m	struct:VkSubpassDependency	typeref:typename:VkAccessFlags
srcAlphaBlendFactor	deps/glad/vulkan.h	/^    VkBlendFactor            srcAlphaBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState	typeref:typename:VkBlendFactor
srcArrayElement	deps/glad/vulkan.h	/^    uint32_t                 srcArrayElement;$/;"	m	struct:VkCopyDescriptorSet	typeref:typename:uint32_t
srcBinding	deps/glad/vulkan.h	/^    uint32_t                 srcBinding;$/;"	m	struct:VkCopyDescriptorSet	typeref:typename:uint32_t
srcColorBlendFactor	deps/glad/vulkan.h	/^    VkBlendFactor            srcColorBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState	typeref:typename:VkBlendFactor
srcOffset	deps/glad/vulkan.h	/^    VkDeviceSize                         srcOffset;$/;"	m	struct:VkBufferCopy	typeref:typename:VkDeviceSize
srcOffset	deps/glad/vulkan.h	/^    VkOffset3D               srcOffset;$/;"	m	struct:VkImageCopy	typeref:typename:VkOffset3D
srcOffset	deps/glad/vulkan.h	/^    VkOffset3D               srcOffset;$/;"	m	struct:VkImageResolve	typeref:typename:VkOffset3D
srcOffsets	deps/glad/vulkan.h	/^    VkOffset3D               srcOffsets [2];$/;"	m	struct:VkImageBlit	typeref:typename:VkOffset3D[2]
srcQueueFamilyIndex	deps/glad/vulkan.h	/^    uint32_t                 srcQueueFamilyIndex;$/;"	m	struct:VkBufferMemoryBarrier	typeref:typename:uint32_t
srcQueueFamilyIndex	deps/glad/vulkan.h	/^    uint32_t                 srcQueueFamilyIndex;$/;"	m	struct:VkImageMemoryBarrier	typeref:typename:uint32_t
srcSet	deps/glad/vulkan.h	/^    VkDescriptorSet          srcSet;$/;"	m	struct:VkCopyDescriptorSet	typeref:typename:VkDescriptorSet
srcStageMask	deps/glad/vulkan.h	/^    VkPipelineStageFlags     srcStageMask;$/;"	m	struct:VkSubpassDependency	typeref:typename:VkPipelineStageFlags
srcSubpass	deps/glad/vulkan.h	/^    uint32_t                 srcSubpass;$/;"	m	struct:VkSubpassDependency	typeref:typename:uint32_t
srcSubresource	deps/glad/vulkan.h	/^    VkImageSubresourceLayers   srcSubresource;$/;"	m	struct:VkImageBlit	typeref:typename:VkImageSubresourceLayers
srcSubresource	deps/glad/vulkan.h	/^    VkImageSubresourceLayers   srcSubresource;$/;"	m	struct:VkImageCopy	typeref:typename:VkImageSubresourceLayers
srcSubresource	deps/glad/vulkan.h	/^    VkImageSubresourceLayers   srcSubresource;$/;"	m	struct:VkImageResolve	typeref:typename:VkImageSubresourceLayers
stacks	deps/nuklear.h	/^    struct nk_configuration_stacks stacks;$/;"	m	struct:nk_context	typeref:struct:nk_configuration_stacks
stage	deps/glad/vulkan.h	/^    VkPipelineShaderStageCreateInfo   stage;$/;"	m	struct:VkComputePipelineCreateInfo	typeref:typename:VkPipelineShaderStageCreateInfo
stage	deps/glad/vulkan.h	/^    VkShaderStageFlagBits    stage;$/;"	m	struct:VkPipelineShaderStageCreateInfo	typeref:typename:VkShaderStageFlagBits
stageCount	deps/glad/vulkan.h	/^    uint32_t                 stageCount;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:uint32_t
stageFlags	deps/glad/vulkan.h	/^    VkShaderStageFlags       stageFlags;$/;"	m	struct:VkDescriptorSetLayoutBinding	typeref:typename:VkShaderStageFlags
stageFlags	deps/glad/vulkan.h	/^    VkShaderStageFlags       stageFlags;$/;"	m	struct:VkPushConstantRange	typeref:typename:VkShaderStageFlags
standardSampleLocations	deps/glad/vulkan.h	/^    VkBool32                 standardSampleLocations;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkBool32
standard_cursors	tests/cursor.c	/^static GLFWcursor* standard_cursors[10];$/;"	v	typeref:typename:GLFWcursor * [10]	file:
star	tests/cursor.c	/^static float star(int x, int y, float t)$/;"	f	typeref:typename:float	file:
state	deps/nuklear.h	/^    int state;$/;"	m	struct:nk_property_state	typeref:typename:int
state	src/wl_platform.h	/^        struct xkb_state*       state;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:struct:xkb_state *
state	src/x11_window.c	/^        CARD32 state;$/;"	m	struct:getWindowState::__anon51ee5e7e0108	typeref:typename:CARD32	file:
state_key_get_syms	src/wl_platform.h	/^        PFN_xkb_state_key_get_syms state_key_get_syms;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_state_key_get_syms
state_new	src/wl_platform.h	/^        PFN_xkb_state_new state_new;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_state_new
state_serialize_mods	src/wl_platform.h	/^        PFN_xkb_state_serialize_mods state_serialize_mods;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_state_serialize_mods
state_unref	src/wl_platform.h	/^        PFN_xkb_state_unref state_unref;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_state_unref
state_update_mask	src/wl_platform.h	/^        PFN_xkb_state_update_mask state_update_mask;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:PFN_xkb_state_update_mask
status	src/x11_window.c	/^        unsigned long status;$/;"	m	struct:_glfwPlatformSetWindowDecorated::__anon51ee5e7e0208	typeref:typename:unsigned long	file:
stb_image_write_test	deps/stb_image_write.h	/^typedef int stb_image_write_test[sizeof(stbiw_uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:int[sizeof (stbiw_uint32)==4?1:-1]
stbi__end_write_file	deps/stb_image_write.h	/^static void stbi__end_write_file(stbi__write_context *s)$/;"	f	typeref:typename:void
stbi__start_write_callbacks	deps/stb_image_write.h	/^static void stbi__start_write_callbacks(stbi__write_context *s, stbi_write_func *c, void *contex/;"	f	typeref:typename:void
stbi__start_write_file	deps/stb_image_write.h	/^static int stbi__start_write_file(stbi__write_context *s, const char *filename)$/;"	f	typeref:typename:int
stbi__stdio_write	deps/stb_image_write.h	/^static void stbi__stdio_write(void *context, void *data, int size)$/;"	f	typeref:typename:void
stbi__write_context	deps/stb_image_write.h	/^} stbi__write_context;$/;"	t	typeref:struct:__anon955e808b0108
stbi_write_bmp	deps/stb_image_write.h	/^STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)$/;"	f	typeref:typename:STBIWDEF int
stbi_write_bmp_core	deps/stb_image_write.h	/^static int stbi_write_bmp_core(stbi__write_context *s, int x, int y, int comp, const void *data)$/;"	f	typeref:typename:int
stbi_write_bmp_to_func	deps/stb_image_write.h	/^STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_hdr	deps/stb_image_write.h	/^int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)$/;"	f	typeref:typename:int
stbi_write_hdr_core	deps/stb_image_write.h	/^static int stbi_write_hdr_core(stbi__write_context *s, int x, int y, int comp, float *data)$/;"	f	typeref:typename:int
stbi_write_hdr_to_func	deps/stb_image_write.h	/^int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const f/;"	f	typeref:typename:int
stbi_write_png	deps/stb_image_write.h	/^STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int /;"	f	typeref:typename:STBIWDEF int
stbi_write_png_to_func	deps/stb_image_write.h	/^STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_png_to_mem	deps/stb_image_write.h	/^unsigned char *stbi_write_png_to_mem(unsigned char *pixels, int stride_bytes, int x, int y, int /;"	f	typeref:typename:unsigned char *
stbi_write_tga	deps/stb_image_write.h	/^int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)$/;"	f	typeref:typename:int
stbi_write_tga_core	deps/stb_image_write.h	/^static int stbi_write_tga_core(stbi__write_context *s, int x, int y, int comp, void *data)$/;"	f	typeref:typename:int
stbi_write_tga_to_func	deps/stb_image_write.h	/^int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const v/;"	f	typeref:typename:int
stbi_write_tga_with_rle	deps/stb_image_write.h	/^int stbi_write_tga_with_rle = 1;$/;"	v	typeref:typename:int
stbi_write_tga_with_rle	deps/stb_image_write.h	/^static int stbi_write_tga_with_rle = 1;$/;"	v	typeref:typename:int
stbi_zlib_compress	deps/stb_image_write.h	/^unsigned char * stbi_zlib_compress(unsigned char *data, int data_len, int *out_len, int quality)$/;"	f	typeref:typename:unsigned char *
stbiw__ZHASH	deps/stb_image_write.h	/^#define stbiw__ZHASH /;"	d
stbiw__crc32	deps/stb_image_write.h	/^static unsigned int stbiw__crc32(unsigned char *buffer, int len)$/;"	f	typeref:typename:unsigned int
stbiw__linear_to_rgbe	deps/stb_image_write.h	/^void stbiw__linear_to_rgbe(unsigned char *rgbe, float *linear)$/;"	f	typeref:typename:void
stbiw__max	deps/stb_image_write.h	/^#define stbiw__max(/;"	d
stbiw__outfile	deps/stb_image_write.h	/^static int stbiw__outfile(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp,/;"	f	typeref:typename:int
stbiw__paeth	deps/stb_image_write.h	/^static unsigned char stbiw__paeth(int a, int b, int c)$/;"	f	typeref:typename:unsigned char
stbiw__sbcount	deps/stb_image_write.h	/^#define stbiw__sbcount(/;"	d
stbiw__sbfree	deps/stb_image_write.h	/^#define stbiw__sbfree(/;"	d
stbiw__sbgrow	deps/stb_image_write.h	/^#define stbiw__sbgrow(/;"	d
stbiw__sbgrowf	deps/stb_image_write.h	/^static void *stbiw__sbgrowf(void **arr, int increment, int itemsize)$/;"	f	typeref:typename:void *
stbiw__sbm	deps/stb_image_write.h	/^#define stbiw__sbm(/;"	d
stbiw__sbmaybegrow	deps/stb_image_write.h	/^#define stbiw__sbmaybegrow(/;"	d
stbiw__sbn	deps/stb_image_write.h	/^#define stbiw__sbn(/;"	d
stbiw__sbneedgrow	deps/stb_image_write.h	/^#define stbiw__sbneedgrow(/;"	d
stbiw__sbpush	deps/stb_image_write.h	/^#define stbiw__sbpush(/;"	d
stbiw__sbraw	deps/stb_image_write.h	/^#define stbiw__sbraw(/;"	d
stbiw__wp32	deps/stb_image_write.h	/^#define stbiw__wp32(/;"	d
stbiw__wpcrc	deps/stb_image_write.h	/^static void stbiw__wpcrc(unsigned char **data, int len)$/;"	f	typeref:typename:void
stbiw__wpng4	deps/stb_image_write.h	/^#define stbiw__wpng4(/;"	d
stbiw__wptag	deps/stb_image_write.h	/^#define stbiw__wptag(/;"	d
stbiw__write3	deps/stb_image_write.h	/^static void stbiw__write3(stbi__write_context *s, unsigned char a, unsigned char b, unsigned cha/;"	f	typeref:typename:void
stbiw__write_dump_data	deps/stb_image_write.h	/^void stbiw__write_dump_data(stbi__write_context *s, int length, unsigned char *data)$/;"	f	typeref:typename:void
stbiw__write_hdr_scanline	deps/stb_image_write.h	/^void stbiw__write_hdr_scanline(stbi__write_context *s, int width, int ncomp, unsigned char *scra/;"	f	typeref:typename:void
stbiw__write_pixel	deps/stb_image_write.h	/^static void stbiw__write_pixel(stbi__write_context *s, int rgb_dir, int comp, int write_alpha, i/;"	f	typeref:typename:void
stbiw__write_pixels	deps/stb_image_write.h	/^static void stbiw__write_pixels(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int/;"	f	typeref:typename:void
stbiw__write_run_data	deps/stb_image_write.h	/^void stbiw__write_run_data(stbi__write_context *s, int length, unsigned char databyte)$/;"	f	typeref:typename:void
stbiw__writef	deps/stb_image_write.h	/^static void stbiw__writef(stbi__write_context *s, const char *fmt, ...)$/;"	f	typeref:typename:void
stbiw__writefv	deps/stb_image_write.h	/^static void stbiw__writefv(stbi__write_context *s, const char *fmt, va_list v)$/;"	f	typeref:typename:void
stbiw__zhash	deps/stb_image_write.h	/^static unsigned int stbiw__zhash(unsigned char *data)$/;"	f	typeref:typename:unsigned int
stbiw__zlib_add	deps/stb_image_write.h	/^#define stbiw__zlib_add(/;"	d
stbiw__zlib_bitrev	deps/stb_image_write.h	/^static int stbiw__zlib_bitrev(int code, int codebits)$/;"	f	typeref:typename:int
stbiw__zlib_countm	deps/stb_image_write.h	/^static unsigned int stbiw__zlib_countm(unsigned char *a, unsigned char *b, int limit)$/;"	f	typeref:typename:unsigned int
stbiw__zlib_flush	deps/stb_image_write.h	/^#define stbiw__zlib_flush(/;"	d
stbiw__zlib_flushf	deps/stb_image_write.h	/^static unsigned char *stbiw__zlib_flushf(unsigned char *data, unsigned int *bitbuffer, int *bitc/;"	f	typeref:typename:unsigned char *
stbiw__zlib_huff	deps/stb_image_write.h	/^#define stbiw__zlib_huff(/;"	d
stbiw__zlib_huff1	deps/stb_image_write.h	/^#define stbiw__zlib_huff1(/;"	d
stbiw__zlib_huff2	deps/stb_image_write.h	/^#define stbiw__zlib_huff2(/;"	d
stbiw__zlib_huff3	deps/stb_image_write.h	/^#define stbiw__zlib_huff3(/;"	d
stbiw__zlib_huff4	deps/stb_image_write.h	/^#define stbiw__zlib_huff4(/;"	d
stbiw__zlib_huffa	deps/stb_image_write.h	/^#define stbiw__zlib_huffa(/;"	d
stbiw__zlib_huffb	deps/stb_image_write.h	/^#define stbiw__zlib_huffb(/;"	d
stbiw_uint32	deps/stb_image_write.h	/^typedef unsigned int stbiw_uint32;$/;"	t	typeref:typename:unsigned int
stencil	deps/glad/vulkan.h	/^    uint32_t                 stencil;$/;"	m	struct:VkClearDepthStencilValue	typeref:typename:uint32_t
stencilBits	src/internal.h	/^    int         stencilBits;$/;"	m	struct:_GLFWfbconfig	typeref:typename:int
stencilLoadOp	deps/glad/vulkan.h	/^    VkAttachmentLoadOp       stencilLoadOp;$/;"	m	struct:VkAttachmentDescription	typeref:typename:VkAttachmentLoadOp
stencilStoreOp	deps/glad/vulkan.h	/^    VkAttachmentStoreOp      stencilStoreOp;$/;"	m	struct:VkAttachmentDescription	typeref:typename:VkAttachmentStoreOp
stencilTestEnable	deps/glad/vulkan.h	/^    VkBool32                 stencilTestEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo	typeref:typename:VkBool32
step	deps/nuklear.h	/^    union nk_property step;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
stereo	src/internal.h	/^    GLFWbool    stereo;$/;"	m	struct:_GLFWfbconfig	typeref:typename:GLFWbool
stickyKeys	src/internal.h	/^    GLFWbool            stickyKeys;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWbool
stickyMouseButtons	src/internal.h	/^    GLFWbool            stickyMouseButtons;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWbool
storageBuffer16BitAccess	deps/glad/vulkan.h	/^    VkBool32                           storageBuffer16BitAccess;$/;"	m	struct:VkPhysicalDevice16BitStorageFeatures	typeref:typename:VkBool32
storageImageSampleCounts	deps/glad/vulkan.h	/^    VkSampleCountFlags       storageImageSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkSampleCountFlags
storageInputOutput16	deps/glad/vulkan.h	/^    VkBool32                           storageInputOutput16;$/;"	m	struct:VkPhysicalDevice16BitStorageFeatures	typeref:typename:VkBool32
storagePushConstant16	deps/glad/vulkan.h	/^    VkBool32                           storagePushConstant16;$/;"	m	struct:VkPhysicalDevice16BitStorageFeatures	typeref:typename:VkBool32
storeOp	deps/glad/vulkan.h	/^    VkAttachmentStoreOp      storeOp;$/;"	m	struct:VkAttachmentDescription	typeref:typename:VkAttachmentStoreOp
strcasecmp	tests/glfwinfo.c	/^#define strcasecmp(/;"	d	file:
strdup	tests/joysticks.c	/^#define strdup(/;"	d	file:
strictLines	deps/glad/vulkan.h	/^    VkBool32                 strictLines;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkBool32
stride	deps/glad/vulkan.h	/^    size_t                             stride;$/;"	m	struct:VkDescriptorUpdateTemplateEntry	typeref:typename:size_t
stride	deps/glad/vulkan.h	/^    uint32_t                 stride;$/;"	m	struct:VkVertexInputBindingDescription	typeref:typename:uint32_t
stride	deps/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	typeref:typename:int
stride_in_bytes	deps/nuklear.h	/^    int   stride_in_bytes;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int
string	deps/nuklear.h	/^    char string[1];$/;"	m	struct:nk_command_text	typeref:typename:char[1]
string	deps/nuklear.h	/^    struct nk_str string;$/;"	m	struct:nk_text_edit	typeref:struct:nk_str
strong	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
style	deps/nuklear.h	/^    struct nk_style style;$/;"	m	struct:nk_context	typeref:struct:nk_style
style_items	deps/nuklear.h	/^    struct nk_config_stack_style_item style_items;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_style_item
subPixelInterpolationOffsetBits	deps/glad/vulkan.h	/^    uint32_t                 subPixelInterpolationOffsetBits;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
subPixelPrecisionBits	deps/glad/vulkan.h	/^    uint32_t                 subPixelPrecisionBits;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
subTexelPrecisionBits	deps/glad/vulkan.h	/^    uint32_t                 subTexelPrecisionBits;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
subcompositor	src/wl_platform.h	/^    struct wl_subcompositor*    subcompositor;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wl_subcompositor *
subgroupSize	deps/glad/vulkan.h	/^    uint32_t                        subgroupSize;$/;"	m	struct:VkPhysicalDeviceSubgroupProperties	typeref:typename:uint32_t
subpass	deps/glad/vulkan.h	/^    uint32_t                          subpass;$/;"	m	struct:VkInputAttachmentAspectReference	typeref:typename:uint32_t
subpass	deps/glad/vulkan.h	/^    uint32_t                 subpass;$/;"	m	struct:VkCommandBufferInheritanceInfo	typeref:typename:uint32_t
subpass	deps/glad/vulkan.h	/^    uint32_t                 subpass;$/;"	m	struct:VkGraphicsPipelineCreateInfo	typeref:typename:uint32_t
subpassCount	deps/glad/vulkan.h	/^    uint32_t                 subpassCount;$/;"	m	struct:VkRenderPassCreateInfo	typeref:typename:uint32_t
subpassCount	deps/glad/vulkan.h	/^    uint32_t                 subpassCount;$/;"	m	struct:VkRenderPassMultiviewCreateInfo	typeref:typename:uint32_t
subresource	deps/glad/vulkan.h	/^    VkImageSubresource       subresource;$/;"	m	struct:VkSparseImageMemoryBind	typeref:typename:VkImageSubresource
subresourceRange	deps/glad/vulkan.h	/^    VkImageSubresourceRange   subresourceRange;$/;"	m	struct:VkImageMemoryBarrier	typeref:typename:VkImageSubresourceRange
subresourceRange	deps/glad/vulkan.h	/^    VkImageSubresourceRange   subresourceRange;$/;"	m	struct:VkImageViewCreateInfo	typeref:typename:VkImageSubresourceRange
subsetAllocation	deps/glad/vulkan.h	/^    VkBool32                           subsetAllocation;$/;"	m	struct:VkPhysicalDeviceGroupProperties	typeref:typename:VkBool32
subsurface	src/wl_platform.h	/^    struct wl_subsurface*       subsurface;$/;"	m	struct:_GLFWdecorationWayland	typeref:struct:wl_subsurface *
superMask	src/wl_platform.h	/^        xkb_mod_mask_t          superMask;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590408	typeref:typename:xkb_mod_mask_t
supported	deps/glad/vulkan.h	/^    VkBool32           supported;$/;"	m	struct:VkDescriptorSetLayoutSupport	typeref:typename:VkBool32
supportedCompositeAlpha	deps/glad/vulkan.h	/^    VkCompositeAlphaFlagsKHR           supportedCompositeAlpha;$/;"	m	struct:VkSurfaceCapabilitiesKHR	typeref:typename:VkCompositeAlphaFlagsKHR
supportedOperations	deps/glad/vulkan.h	/^    VkSubgroupFeatureFlags          supportedOperations;$/;"	m	struct:VkPhysicalDeviceSubgroupProperties	typeref:typename:VkSubgroupFeatureFlags
supportedStages	deps/glad/vulkan.h	/^    VkShaderStageFlags              supportedStages;$/;"	m	struct:VkPhysicalDeviceSubgroupProperties	typeref:typename:VkShaderStageFlags
supportedTransforms	deps/glad/vulkan.h	/^    VkSurfaceTransformFlagsKHR         supportedTransforms;$/;"	m	struct:VkSurfaceCapabilitiesKHR	typeref:typename:VkSurfaceTransformFlagsKHR
supportedUsageFlags	deps/glad/vulkan.h	/^    VkImageUsageFlags                  supportedUsageFlags;$/;"	m	struct:VkSurfaceCapabilitiesKHR	typeref:typename:VkImageUsageFlags
supportsXInput	src/win32_joystick.c	/^static GLFWbool supportsXInput(const GUID* guid)$/;"	f	typeref:typename:GLFWbool	file:
surface	deps/glad/vulkan.h	/^    VkSurfaceKHR                       surface;$/;"	m	struct:VkSwapchainCreateInfoKHR	typeref:typename:VkSurfaceKHR
surface	src/egl_context.h	/^   EGLSurface       surface;$/;"	m	struct:_GLFWcontextEGL	typeref:typename:EGLSurface
surface	src/wl_platform.h	/^        struct xdg_surface*     surface;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590108	typeref:struct:xdg_surface *
surface	src/wl_platform.h	/^    struct wl_surface*              surface;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:struct:wl_surface *
surface	src/wl_platform.h	/^    struct wl_surface*          surface;$/;"	m	struct:_GLFWdecorationWayland	typeref:struct:wl_surface *
surface	src/wl_platform.h	/^    struct wl_surface*          surface;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:wl_surface *
surface	tests/triangle-vulkan.c	/^    VkSurfaceKHR surface;$/;"	m	struct:demo	typeref:typename:VkSurfaceKHR	file:
surfaceHandleEnter	src/wl_window.c	/^static void surfaceHandleEnter(void *data,$/;"	f	typeref:typename:void	file:
surfaceHandleLeave	src/wl_window.c	/^static void surfaceHandleLeave(void *data,$/;"	f	typeref:typename:void	file:
surfaceListener	src/wl_window.c	/^static const struct wl_surface_listener surfaceListener = {$/;"	v	typeref:typename:const struct wl_surface_listener	file:
svg	docs/spaces.svg	/^   sodipodi:docname="spaces.svg">$/;"	n	uri:http://www.w3.org/2000/svg
svg2	docs/spaces.svg	/^   sodipodi:docname="spaces.svg">$/;"	i
swapBuffers	src/internal.h	/^    _GLFWswapbuffersfun         swapBuffers;$/;"	m	struct:_GLFWcontext	typeref:typename:_GLFWswapbuffersfun
swapBuffersEGL	src/egl_context.c	/^static void swapBuffersEGL(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
swapBuffersGLX	src/glx_context.c	/^static void swapBuffersGLX(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
swapBuffersNSGL	src/nsgl_context.m	/^static void swapBuffersNSGL(_GLFWwindow* window)$/;"	f
swapBuffersOSMesa	src/osmesa_context.c	/^static void swapBuffersOSMesa(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
swapBuffersWGL	src/wgl_context.c	/^static void swapBuffersWGL(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
swapInterval	src/internal.h	/^    _GLFWswapintervalfun        swapInterval;$/;"	m	struct:_GLFWcontext	typeref:typename:_GLFWswapintervalfun
swapIntervalEGL	src/egl_context.c	/^static void swapIntervalEGL(int interval)$/;"	f	typeref:typename:void	file:
swapIntervalGLX	src/glx_context.c	/^static void swapIntervalGLX(int interval)$/;"	f	typeref:typename:void	file:
swapIntervalNSGL	src/nsgl_context.m	/^static void swapIntervalNSGL(int interval)$/;"	f
swapIntervalOSMesa	src/osmesa_context.c	/^static void swapIntervalOSMesa(int interval)$/;"	f	typeref:typename:void	file:
swapIntervalWGL	src/wgl_context.c	/^static void swapIntervalWGL(int interval)$/;"	f	typeref:typename:void	file:
swap_buffers	tests/inputlag.c	/^void swap_buffers(GLFWwindow* window)$/;"	f	typeref:typename:void
swap_clear	tests/inputlag.c	/^int swap_clear = nk_false;$/;"	v	typeref:typename:int
swap_finish	tests/inputlag.c	/^int swap_finish = nk_true;$/;"	v	typeref:typename:int
swap_interval	tests/cursor.c	/^static int swap_interval = 1;$/;"	v	typeref:typename:int	file:
swap_interval	tests/tearing.c	/^static int swap_interval;$/;"	v	typeref:typename:int	file:
swap_occlusion_query	tests/inputlag.c	/^int swap_occlusion_query = nk_false;$/;"	v	typeref:typename:int
swap_read_pixels	tests/inputlag.c	/^int swap_read_pixels = nk_false;$/;"	v	typeref:typename:int
swap_tear	tests/tearing.c	/^static int swap_tear;$/;"	v	typeref:typename:int	file:
swapchain	deps/glad/vulkan.h	/^    VkSwapchainKHR     swapchain;$/;"	m	struct:VkImageSwapchainCreateInfoKHR	typeref:typename:VkSwapchainKHR
swapchain	deps/glad/vulkan.h	/^    VkSwapchainKHR   swapchain;$/;"	m	struct:VkAcquireNextImageInfoKHR	typeref:typename:VkSwapchainKHR
swapchain	deps/glad/vulkan.h	/^    VkSwapchainKHR   swapchain;$/;"	m	struct:VkBindImageMemorySwapchainInfoKHR	typeref:typename:VkSwapchainKHR
swapchain	tests/triangle-vulkan.c	/^    VkSwapchainKHR swapchain;$/;"	m	struct:demo	typeref:typename:VkSwapchainKHR	file:
swapchainCount	deps/glad/vulkan.h	/^    uint32_t                           swapchainCount;$/;"	m	struct:VkPresentInfoKHR	typeref:typename:uint32_t
swapchainCount	deps/glad/vulkan.h	/^    uint32_t           swapchainCount;$/;"	m	struct:VkDeviceGroupPresentInfoKHR	typeref:typename:uint32_t
swapchainImageCount	tests/triangle-vulkan.c	/^    uint32_t swapchainImageCount;$/;"	m	struct:demo	typeref:typename:uint32_t	file:
sy	deps/nuklear.h	/^    float sy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
sym_active	deps/nuklear.h	/^    enum nk_symbol_type sym_active;$/;"	m	struct:nk_style_combo	typeref:enum:nk_symbol_type
sym_hover	deps/nuklear.h	/^    enum nk_symbol_type sym_hover;$/;"	m	struct:nk_style_combo	typeref:enum:nk_symbol_type
sym_left	deps/nuklear.h	/^    enum nk_symbol_type sym_left;$/;"	m	struct:nk_style_property	typeref:enum:nk_symbol_type
sym_maximize	deps/nuklear.h	/^    enum nk_symbol_type sym_maximize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_symbol_type
sym_minimize	deps/nuklear.h	/^    enum nk_symbol_type sym_minimize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_symbol_type
sym_normal	deps/nuklear.h	/^    enum nk_symbol_type sym_normal;$/;"	m	struct:nk_style_combo	typeref:enum:nk_symbol_type
sym_right	deps/nuklear.h	/^    enum nk_symbol_type sym_right;$/;"	m	struct:nk_style_property	typeref:enum:nk_symbol_type
symbol_active	deps/nuklear.h	/^    struct nk_color symbol_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
symbol_hover	deps/nuklear.h	/^    struct nk_color symbol_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
symbol_normal	deps/nuklear.h	/^    struct nk_color symbol_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
szFriendlyName	deps/mingw/dinput.h	/^  CHAR        szFriendlyName[MAX_PATH];$/;"	m	struct:DIFILEEFFECT	typeref:typename:CHAR[]
t	examples/boing.c	/^double  t;$/;"	v	typeref:typename:double
t	examples/particles.c	/^    GLfloat s, t;         \/\/ Texture coordinates$/;"	m	struct:__anon62203f4b0208	typeref:typename:GLfloat	file:
t	examples/particles.c	/^    double    t;         \/\/ Time (s)$/;"	m	struct:__anon62203f4b0308	typeref:typename:double	file:
t0	deps/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
t1	deps/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
t_old	examples/boing.c	/^double  t_old = 0.f;$/;"	v	typeref:typename:double
tab	deps/nuklear.h	/^    struct nk_style_tab tab;$/;"	m	struct:nk_style	typeref:struct:nk_style_tab
tab_maximize_button	deps/nuklear.h	/^    struct nk_style_button tab_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
tab_minimize_button	deps/nuklear.h	/^    struct nk_style_button tab_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
table.doxtable	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
table.doxtable code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
table.doxtable td	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
table.doxtable th	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
table.markdownTable	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
table.markdownTable code	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
table.markdownTable td	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
table.markdownTable th	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	s
table_count	deps/nuklear.h	/^    unsigned int table_count;$/;"	m	struct:nk_window	typeref:typename:unsigned int
tables	deps/nuklear.h	/^    struct nk_table *tables;$/;"	m	struct:nk_window	typeref:struct:nk_table *
target_path	CMake/GenerateMappings.cmake	/^set(target_path "${CMAKE_ARGV4}")$/;"	v
tbl	deps/nuklear.h	/^    struct nk_table tbl;$/;"	m	union:nk_page_data	typeref:struct:nk_table
tearing	tests/CMakeLists.txt	/^add_executable(tearing WIN32 MACOSX_BUNDLE tearing.c ${GLAD_GL})$/;"	t
templateType	deps/glad/vulkan.h	/^    VkDescriptorUpdateTemplateType   templateType;$/;"	m	struct:VkDescriptorUpdateTemplateCreateInfo	typeref:typename:VkDescriptorUpdateTemplateType
template_path	CMake/GenerateMappings.cmake	/^set(template_path "${CMAKE_ARGV3}")$/;"	v
templates	deps/nuklear.h	/^    float templates[NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS];$/;"	m	struct:nk_row_layout	typeref:typename:float[]
temporary	deps/nuklear.h	/^    struct nk_allocator temporary;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_allocator
terminate	src/init.c	/^static void terminate(void)$/;"	f	typeref:typename:void	file:
tessellate_floor	examples/particles.c	/^static void tessellate_floor(float x1, float y1, float x2, float y2, int depth)$/;"	f	typeref:typename:void	file:
tessellationShader	deps/glad/vulkan.h	/^    VkBool32                 tessellationShader;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
test_modes	tests/monitors.c	/^static void test_modes(GLFWmonitor* monitor)$/;"	f	typeref:typename:void	file:
tex_height	deps/nuklear.h	/^    int tex_height;$/;"	m	struct:nk_font_atlas	typeref:typename:int
tex_height	tests/triangle-vulkan.c	/^    int32_t tex_width, tex_height;$/;"	m	struct:texture_object	typeref:typename:int32_t	file:
tex_width	deps/nuklear.h	/^    int tex_width;$/;"	m	struct:nk_font_atlas	typeref:typename:int
tex_width	tests/triangle-vulkan.c	/^    int32_t tex_width, tex_height;$/;"	m	struct:texture_object	typeref:typename:int32_t	file:
text	deps/nuklear.h	/^    char text[NK_INPUT_MAX];$/;"	m	struct:nk_keyboard	typeref:typename:char[]
text	deps/nuklear.h	/^    struct nk_color text;$/;"	m	struct:nk_style_tab	typeref:struct:nk_color
text	deps/nuklear.h	/^    struct nk_color text;$/;"	m	struct:nk_text	typeref:struct:nk_color
text	deps/nuklear.h	/^    struct nk_style_text text;$/;"	m	struct:nk_style	typeref:struct:nk_style_text
text	deps/nuklear_glfw_gl2.h	/^    unsigned int text[NK_GLFW_TEXT_MAX];$/;"	m	struct:nk_glfw	typeref:typename:unsigned int[]
text3017	docs/spaces.svg	/^       id="text3017">$/;"	i
text3769	docs/spaces.svg	/^       id="text3769">$/;"	i
text3773	docs/spaces.svg	/^       id="text3773">$/;"	i
text3777	docs/spaces.svg	/^       id="text3777">$/;"	i
text3781	docs/spaces.svg	/^       id="text3781">$/;"	i
text3791	docs/spaces.svg	/^       id="text3791">$/;"	i
text3803	docs/spaces.svg	/^       inkscape:export-ydpi="109.89113"><tspan$/;"	i
text3807	docs/spaces.svg	/^       id="text3807">$/;"	i
text3817	docs/spaces.svg	/^       id="text3817">$/;"	i
text4089	docs/spaces.svg	/^       id="text4089">$/;"	i
text4495	docs/spaces.svg	/^       id="text4495">$/;"	i
text_active	deps/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_active	deps/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
text_active	deps/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_alignment	deps/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_button	typeref:typename:nk_flags
text_alignment	deps/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_selectable	typeref:typename:nk_flags
text_alignment	deps/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_toggle	typeref:typename:nk_flags
text_background	deps/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_background	deps/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_background	deps/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_edit	deps/nuklear.h	/^    struct nk_text_edit text_edit;$/;"	m	struct:nk_context	typeref:struct:nk_text_edit
text_hover	deps/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_hover	deps/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
text_hover	deps/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_hover	deps/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_hover_active	deps/nuklear.h	/^    struct nk_color text_hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_len	deps/nuklear.h	/^    int text_len;$/;"	m	struct:nk_keyboard	typeref:typename:int
text_len	deps/nuklear_glfw_gl2.h	/^    int text_len;$/;"	m	struct:nk_glfw	typeref:typename:int
text_normal	deps/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_normal	deps/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
text_normal	deps/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_normal	deps/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_normal_active	deps/nuklear.h	/^    struct nk_color text_normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_pressed	deps/nuklear.h	/^    struct nk_color text_pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_pressed_active	deps/nuklear.h	/^    struct nk_color text_pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_uri_list	src/x11_platform.h	/^    Atom            text_uri_list;$/;"	m	struct:_GLFWlibraryX11	typeref:typename:Atom
texture	deps/nuklear.h	/^    nk_handle texture; \/* texture handle to a texture with a white pixel *\/$/;"	m	struct:nk_draw_null_texture	typeref:typename:nk_handle
texture	deps/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_draw_command	typeref:typename:nk_handle
texture	deps/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_font	typeref:typename:nk_handle
texture	deps/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_user_font	typeref:typename:nk_handle
textureCompressionASTC_LDR	deps/glad/vulkan.h	/^    VkBool32                 textureCompressionASTC_LDR;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
textureCompressionBC	deps/glad/vulkan.h	/^    VkBool32                 textureCompressionBC;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
textureCompressionETC2	deps/glad/vulkan.h	/^    VkBool32                 textureCompressionETC2;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
texture_object	tests/triangle-vulkan.c	/^struct texture_object {$/;"	s	file:
textures	tests/triangle-vulkan.c	/^    struct texture_object textures[DEMO_TEXTURE_COUNT];$/;"	m	struct:demo	typeref:struct:texture_object[]	file:
theme_destroy	src/wl_platform.h	/^        PFN_wl_cursor_theme_destroy theme_destroy;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590508	typeref:typename:PFN_wl_cursor_theme_destroy
theme_get_cursor	src/wl_platform.h	/^        PFN_wl_cursor_theme_get_cursor theme_get_cursor;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590508	typeref:typename:PFN_wl_cursor_theme_get_cursor
theme_load	src/wl_platform.h	/^        PFN_wl_cursor_theme_load theme_load;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590508	typeref:typename:PFN_wl_cursor_theme_load
thrd_busy	deps/tinycthread.h	/^#define thrd_busy /;"	d
thrd_create	deps/tinycthread.c	/^int thrd_create(thrd_t *thr, thrd_start_t func, void *arg)$/;"	f	typeref:typename:int
thrd_current	deps/tinycthread.c	/^thrd_t thrd_current(void)$/;"	f	typeref:typename:thrd_t
thrd_detach	deps/tinycthread.c	/^int thrd_detach(thrd_t thr)$/;"	f	typeref:typename:int
thrd_equal	deps/tinycthread.c	/^int thrd_equal(thrd_t thr0, thrd_t thr1)$/;"	f	typeref:typename:int
thrd_error	deps/tinycthread.h	/^#define thrd_error /;"	d
thrd_exit	deps/tinycthread.c	/^void thrd_exit(int res)$/;"	f	typeref:typename:void
thrd_join	deps/tinycthread.c	/^int thrd_join(thrd_t thr, int *res)$/;"	f	typeref:typename:int
thrd_nomem	deps/tinycthread.h	/^#define thrd_nomem /;"	d
thrd_sleep	deps/tinycthread.c	/^int thrd_sleep(const struct timespec *time_point, struct timespec *remaining)$/;"	f	typeref:typename:int
thrd_start_t	deps/tinycthread.h	/^typedef int (*thrd_start_t)(void *arg);$/;"	t	typeref:typename:int (*)(void * arg)
thrd_success	deps/tinycthread.h	/^#define thrd_success /;"	d
thrd_t	deps/tinycthread.h	/^typedef HANDLE thrd_t;$/;"	t	typeref:typename:HANDLE
thrd_t	deps/tinycthread.h	/^typedef pthread_t thrd_t;$/;"	t	typeref:typename:pthread_t
thrd_timeout	deps/tinycthread.h	/^#define thrd_timeout /;"	d
thrd_yield	deps/tinycthread.c	/^void thrd_yield(void)$/;"	f	typeref:typename:void
thread_main	tests/empty.c	/^static int thread_main(void* data)$/;"	f	typeref:typename:int	file:
thread_main	tests/threads.c	/^static int thread_main(void* data)$/;"	f	typeref:typename:int	file:
thread_sync	examples/particles.c	/^} thread_sync;$/;"	v	typeref:struct:__anon62203f4b0308
threads	tests/CMakeLists.txt	/^add_executable(threads WIN32 MACOSX_BUNDLE threads.c ${TINYCTHREAD} ${GLAD_GL})$/;"	t
tiling	deps/glad/vulkan.h	/^    VkImageTiling                      tiling;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2	typeref:typename:VkImageTiling
tiling	deps/glad/vulkan.h	/^    VkImageTiling                      tiling;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2	typeref:typename:VkImageTiling
tiling	deps/glad/vulkan.h	/^    VkImageTiling            tiling;$/;"	m	struct:VkImageCreateInfo	typeref:typename:VkImageTiling
timeGetTime	src/win32_platform.h	/^#define timeGetTime /;"	d
timeout	deps/glad/vulkan.h	/^    uint64_t                           timeout;$/;"	m	struct:VkAcquireNextImageInfoKHR	typeref:typename:uint64_t
timeout	src/x11_platform.h	/^        int         timeout;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00308	typeref:typename:int
timeout	tests/CMakeLists.txt	/^add_executable(timeout WIN32 MACOSX_BUNDLE timeout.c ${GLAD_GL})$/;"	t
timer	src/internal.h	/^    } timer;$/;"	m	struct:_GLFWlibrary	typeref:struct:_GLFWlibrary::__anona0faa0af0808
timerfd	src/wl_platform.h	/^    int                         timerfd;$/;"	m	struct:_GLFWlibraryWayland	typeref:typename:int
timespec	deps/tinycthread.h	/^#define timespec /;"	d
timestampComputeAndGraphics	deps/glad/vulkan.h	/^    VkBool32                 timestampComputeAndGraphics;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:VkBool32
timestampPeriod	deps/glad/vulkan.h	/^    float                    timestampPeriod;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:float
timestampValidBits	deps/glad/vulkan.h	/^    uint32_t                 timestampValidBits;$/;"	m	struct:VkQueueFamilyProperties	typeref:typename:uint32_t
title	src/internal.h	/^    const char*   title;$/;"	m	struct:_GLFWwndconfig	typeref:typename:const char *
title	src/wl_platform.h	/^    char*                       title;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:char *
title	tests/CMakeLists.txt	/^add_executable(title WIN32 MACOSX_BUNDLE title.c ${GLAD_GL})$/;"	t
title	tests/threads.c	/^    const char* title;$/;"	m	struct:__anon6fa524230108	typeref:typename:const char *	file:
titlearea	docs/header.html	/^<div id="titlearea">$/;"	I
titles	tests/windows.c	/^static const char* titles[] =$/;"	v	typeref:typename:const char * []	file:
toGLFWKeyCode	src/wl_init.c	/^static int toGLFWKeyCode(uint32_t key)$/;"	f	typeref:typename:int	file:
tooltip_border	deps/nuklear.h	/^    float tooltip_border;$/;"	m	struct:nk_style_window	typeref:typename:float
tooltip_border_color	deps/nuklear.h	/^    struct nk_color tooltip_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
tooltip_padding	deps/nuklear.h	/^    struct nk_vec2 tooltip_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
top	deps/nuklear.h	/^    struct nk_color top;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
top	docs/header.html	/^<div id="top"><!-- do not remove this div, it is closed by doxygen! -->$/;"	I
top	src/wl_platform.h	/^        _GLFWdecorationWayland             top, left, right, bottom;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590308	typeref:typename:_GLFWdecorationWayland
topDecoration	src/wl_platform.h	/^    topDecoration,$/;"	e	enum:_GLFWdecorationSideWayland
toplevel	src/wl_platform.h	/^        struct xdg_toplevel*    toplevel;$/;"	m	struct:_GLFWwindowWayland::__anon32ec62590108	typeref:struct:xdg_toplevel *
topology	deps/glad/vulkan.h	/^    VkPrimitiveTopology      topology;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo	typeref:typename:VkPrimitiveTopology
total_height	deps/nuklear.h	/^    int total_height;$/;"	m	struct:nk_list_view	typeref:typename:int
touch_padding	deps/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_vec2
touch_padding	deps/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_vec2
touch_padding	deps/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_vec2
tr.even	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
tr.markdownTableBody:nth-child(even)	docs/extra.css	/^.sm-dox,.sm-dox a,.sm-dox a:focus,.sm-dox a:active,.sm-dox a:hover,.sm-dox a.highlighted,.sm-dox/;"	c
track_cursor	tests/cursor.c	/^static int track_cursor = GLFW_FALSE;$/;"	v	typeref:typename:int	file:
trackingArea	src/cocoa_window.m	/^    NSTrackingArea* trackingArea;$/;"	E	interface:GLFWContentView
tracking_cursor	tests/cursor.c	/^static GLFWcursor* tracking_cursor = NULL;$/;"	v	typeref:typename:GLFWcursor *	file:
translateFlags	src/cocoa_window.m	/^static int translateFlags(NSUInteger flags)$/;"	f
translateKey	src/cocoa_window.m	/^static int translateKey(unsigned int key)$/;"	f
translateKey	src/x11_window.c	/^static int translateKey(int scancode)$/;"	f	typeref:typename:int	file:
translateKeyCode	src/x11_init.c	/^static int translateKeyCode(int scancode)$/;"	f	typeref:typename:int	file:
translateKeyToModifierFlag	src/cocoa_window.m	/^static NSUInteger translateKeyToModifierFlag(int key)$/;"	f
translateState	src/x11_window.c	/^static int translateState(int state)$/;"	f	typeref:typename:int	file:
transparent	src/internal.h	/^    GLFWbool    transparent;$/;"	m	struct:_GLFWfbconfig	typeref:typename:GLFWbool
transparent	src/win32_platform.h	/^    GLFWbool            transparent;$/;"	m	struct:_GLFWwindowWin32	typeref:typename:GLFWbool
transparent	src/wl_platform.h	/^    GLFWbool                    transparent;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:GLFWbool
transparent	src/x11_platform.h	/^    GLFWbool        transparent;$/;"	m	struct:_GLFWwindowX11	typeref:typename:GLFWbool
tree_depth	deps/nuklear.h	/^    int tree_depth;$/;"	m	struct:nk_row_layout	typeref:typename:int
triangle-opengl	examples/CMakeLists.txt	/^add_executable(triangle-opengl WIN32 MACOSX_BUNDLE triangle-opengl.c ${ICON} ${GLAD_GL})$/;"	t
triangle-vulkan	tests/CMakeLists.txt	/^add_executable(triangle-vulkan WIN32 triangle-vulkan.c ${GLAD_VULKAN})$/;"	t
tspan3805	docs/spaces.svg	/^         style="font-size:12px;line-height:1.25;font-family:sans-serif"> <\/tspan><\/text>$/;"	i
tss_create	deps/tinycthread.c	/^int tss_create(tss_t *key, tss_dtor_t dtor)$/;"	f	typeref:typename:int
tss_delete	deps/tinycthread.c	/^void tss_delete(tss_t key)$/;"	f	typeref:typename:void
tss_dtor_t	deps/tinycthread.h	/^typedef void (*tss_dtor_t)(void *val);$/;"	t	typeref:typename:void (*)(void * val)
tss_get	deps/tinycthread.c	/^void *tss_get(tss_t key)$/;"	f	typeref:typename:void *
tss_set	deps/tinycthread.c	/^int tss_set(tss_t key, void *val)$/;"	f	typeref:typename:int
tss_t	deps/tinycthread.h	/^typedef DWORD tss_t;$/;"	t	typeref:typename:DWORD
tss_t	deps/tinycthread.h	/^typedef pthread_key_t tss_t;$/;"	t	typeref:typename:pthread_key_t
tszActionMap	deps/mingw/dinput.h	/^	CHAR		tszActionMap[MAX_PATH];$/;"	m	struct:_DIACTIONFORMATA	typeref:typename:CHAR[]
tszActionMap	deps/mingw/dinput.h	/^	WCHAR		tszActionMap[MAX_PATH];$/;"	m	struct:_DIACTIONFORMATW	typeref:typename:WCHAR[]
tszImagePath	deps/mingw/dinput.h	/^	CHAR	tszImagePath[MAX_PATH];$/;"	m	struct:_DIDEVICEIMAGEINFOA	typeref:typename:CHAR[]
tszImagePath	deps/mingw/dinput.h	/^	WCHAR	tszImagePath[MAX_PATH];$/;"	m	struct:_DIDEVICEIMAGEINFOW	typeref:typename:WCHAR[]
tszInstanceName	deps/mingw/dinput.h	/^    CHAR	tszInstanceName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCEA	typeref:typename:CHAR[]
tszInstanceName	deps/mingw/dinput.h	/^    CHAR    tszInstanceName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCE_DX3A	typeref:typename:CHAR[]
tszInstanceName	deps/mingw/dinput.h	/^    WCHAR	tszInstanceName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCEW	typeref:typename:WCHAR[]
tszInstanceName	deps/mingw/dinput.h	/^    WCHAR   tszInstanceName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCE_DX3W	typeref:typename:WCHAR[]
tszName	deps/mingw/dinput.h	/^	CHAR			tszName[MAX_PATH];$/;"	m	struct:DIEFFECTINFOA	typeref:typename:CHAR[]
tszName	deps/mingw/dinput.h	/^	WCHAR			tszName[MAX_PATH];$/;"	m	struct:DIEFFECTINFOW	typeref:typename:WCHAR[]
tszName	deps/mingw/dinput.h	/^    CHAR	tszName[MAX_PATH];$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:CHAR[]
tszName	deps/mingw/dinput.h	/^    CHAR    tszName[MAX_PATH];$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A	typeref:typename:CHAR[]
tszName	deps/mingw/dinput.h	/^    WCHAR	tszName[MAX_PATH];$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:WCHAR[]
tszName	deps/mingw/dinput.h	/^    WCHAR   tszName[MAX_PATH];$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W	typeref:typename:WCHAR[]
tszProductName	deps/mingw/dinput.h	/^    CHAR	tszProductName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCEA	typeref:typename:CHAR[]
tszProductName	deps/mingw/dinput.h	/^    CHAR    tszProductName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCE_DX3A	typeref:typename:CHAR[]
tszProductName	deps/mingw/dinput.h	/^    WCHAR	tszProductName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCEW	typeref:typename:WCHAR[]
tszProductName	deps/mingw/dinput.h	/^    WCHAR   tszProductName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCE_DX3W	typeref:typename:WCHAR[]
ttf_blob	deps/nuklear.h	/^    void *ttf_blob;$/;"	m	struct:nk_font_config	typeref:typename:void *
ttf_data_owned_by_atlas	deps/nuklear.h	/^    unsigned char ttf_data_owned_by_atlas;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
ttf_size	deps/nuklear.h	/^    nk_size ttf_size;$/;"	m	struct:nk_font_config	typeref:typename:nk_size
tv_nsec	deps/tinycthread.h	/^  long   tv_nsec;$/;"	m	struct:_ttherad_timespec	typeref:typename:long
tv_sec	deps/tinycthread.h	/^  time_t tv_sec;$/;"	m	struct:_ttherad_timespec	typeref:typename:time_t
type	deps/glad/vulkan.h	/^    VkDescriptorType         type;$/;"	m	struct:VkDescriptorPoolSize	typeref:typename:VkDescriptorType
type	deps/glad/vulkan.h	/^    VkImageType                        type;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2	typeref:typename:VkImageType
type	deps/glad/vulkan.h	/^    VkImageType                        type;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2	typeref:typename:VkImageType
type	deps/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_buffer	typeref:enum:nk_allocation_type
type	deps/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_pool	typeref:enum:nk_allocation_type
type	deps/nuklear.h	/^    enum nk_chart_type type;$/;"	m	struct:nk_chart_slot	typeref:enum:nk_chart_type
type	deps/nuklear.h	/^    enum nk_command_type type;$/;"	m	struct:nk_command	typeref:enum:nk_command_type
type	deps/nuklear.h	/^    enum nk_panel_row_layout_type type;$/;"	m	struct:nk_row_layout	typeref:enum:nk_panel_row_layout_type
type	deps/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_panel	typeref:enum:nk_panel_type
type	deps/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_popup_state	typeref:enum:nk_panel_type
type	deps/nuklear.h	/^    enum nk_style_item_type type;$/;"	m	struct:nk_style_item	typeref:enum:nk_style_item_type
type	deps/nuklear.h	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex	typeref:typename:unsigned char
type	deps/nuklear.h	/^    unsigned int type;$/;"	m	struct:nk_memory_status	typeref:typename:unsigned int
type	src/internal.h	/^    uint8_t         type;$/;"	m	struct:_GLFWmapelement	typeref:typename:uint8_t
type	src/win32_joystick.h	/^    int                     type;$/;"	m	struct:_GLFWjoyobjectWin32	typeref:typename:int
u0	deps/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
u1	deps/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
uAppData	deps/mingw/dinput.h	/^	UINT_PTR	uAppData;$/;"	m	struct:_DIACTIONA	typeref:typename:UINT_PTR
uAppData	deps/mingw/dinput.h	/^	UINT_PTR	uAppData;$/;"	m	struct:_DIACTIONW	typeref:typename:UINT_PTR
uAppData	deps/mingw/dinput.h	/^    UINT_PTR	uAppData;$/;"	m	struct:DIDEVICEOBJECTDATA	typeref:typename:UINT_PTR
uData	deps/mingw/dinput.h	/^	UINT_PTR     uData;$/;"	m	struct:DIPROPPOINTER	typeref:typename:UINT_PTR
uResIdString	deps/mingw/dinput.h	/^		UINT	uResIdString;$/;"	m	union:_DIACTIONA::__anon8f005edb010a	typeref:typename:UINT
uResIdString	deps/mingw/dinput.h	/^		UINT	uResIdString;$/;"	m	union:_DIACTIONW::__anon8f005edb020a	typeref:typename:UINT
ucs	src/xkb_unicode.c	/^  unsigned short ucs;$/;"	m	struct:codepair	typeref:typename:unsigned short	file:
uint16_t	deps/glad/vk_platform.h	/^        typedef unsigned __int16 uint16_t;$/;"	t	typeref:typename:unsigned __int16
uint16_t	deps/vs2008/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t	typeref:typename:unsigned __int16
uint16_t	deps/vs2008/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t	typeref:typename:unsigned short
uint32	deps/glad/vulkan.h	/^    uint32_t                 uint32 [4];$/;"	m	union:VkClearColorValue	typeref:typename:uint32_t[4]
uint32_t	deps/glad/vk_platform.h	/^        typedef unsigned __int32 uint32_t;$/;"	t	typeref:typename:unsigned __int32
uint32_t	deps/vs2008/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t	typeref:typename:unsigned __int32
uint32_t	deps/vs2008/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	deps/glad/vk_platform.h	/^        typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	deps/vs2008/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint8_t	deps/glad/vk_platform.h	/^        typedef unsigned __int8  uint8_t;$/;"	t	typeref:typename:unsigned __int8
uint8_t	deps/vs2008/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t	typeref:typename:unsigned __int8
uint8_t	deps/vs2008/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t	typeref:typename:unsigned char
uint_fast16_t	deps/vs2008/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t	typeref:typename:uint16_t
uint_fast32_t	deps/vs2008/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t	typeref:typename:uint32_t
uint_fast64_t	deps/vs2008/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t	typeref:typename:uint64_t
uint_fast8_t	deps/vs2008/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t	typeref:typename:uint8_t
uint_least16_t	deps/vs2008/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t	typeref:typename:uint16_t
uint_least32_t	deps/vs2008/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t	typeref:typename:uint32_t
uint_least64_t	deps/vs2008/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t	typeref:typename:uint64_t
uint_least8_t	deps/vs2008/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t	typeref:typename:uint8_t
uintmax_t	deps/vs2008/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t	typeref:typename:uint64_t
uintptr_t	deps/vs2008/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t	typeref:typename:_W64 unsigned int
uintptr_t	deps/vs2008/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t	typeref:typename:unsigned __int64
undo	deps/nuklear.h	/^    struct nk_text_undo_state undo;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_undo_state
undo_char	deps/nuklear.h	/^   nk_rune undo_char[NK_TEXTEDIT_UNDOCHARCOUNT];$/;"	m	struct:nk_text_undo_state	typeref:typename:nk_rune[]
undo_char_point	deps/nuklear.h	/^   short undo_char_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
undo_point	deps/nuklear.h	/^   short undo_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
undo_rec	deps/nuklear.h	/^   struct nk_text_undo_record undo_rec[NK_TEXTEDIT_UNDOSTATECOUNT];$/;"	m	struct:nk_text_undo_state	typeref:struct:nk_text_undo_record[]
ungrab	deps/nuklear.h	/^    unsigned char ungrab;$/;"	m	struct:nk_mouse	typeref:typename:unsigned char
uniformAndStorageBuffer16BitAccess	deps/glad/vulkan.h	/^    VkBool32                           uniformAndStorageBuffer16BitAccess;$/;"	m	struct:VkPhysicalDevice16BitStorageFeatures	typeref:typename:VkBool32
uninstall	CMakeLists.txt	/^        add_custom_target(uninstall$/;"	t
unitNumber	src/cocoa_platform.h	/^    uint32_t            unitNumber;$/;"	E	struct:_GLFWmonitorNS
unlockPointer	src/wl_window.c	/^static void unlockPointer(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
unmarkText	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
unnormalizedCoordinates	deps/glad/vulkan.h	/^    VkBool32                 unnormalizedCoordinates;$/;"	m	struct:VkSamplerCreateInfo	typeref:typename:VkBool32
updateClipRect	src/win32_window.c	/^static void updateClipRect(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
updateCursorImage	src/cocoa_window.m	/^static void updateCursorImage(_GLFWwindow* window)$/;"	f
updateCursorImage	src/win32_window.c	/^static void updateCursorImage(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
updateCursorImage	src/x11_window.c	/^static void updateCursorImage(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
updateCursorMode	src/cocoa_window.m	/^static void updateCursorMode(_GLFWwindow* window)$/;"	f
updateFramebufferTransparency	src/win32_window.c	/^static void updateFramebufferTransparency(const _GLFWwindow* window)$/;"	f	typeref:typename:void	file:
updateLayer	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
updateNormalHints	src/x11_window.c	/^static void updateNormalHints(_GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void	file:
updateTrackingAreas	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
updateUnicodeDataNS	src/cocoa_init.m	/^static GLFWbool updateUnicodeDataNS(void)$/;"	f
updateWindowMode	src/x11_window.c	/^static void updateWindowMode(_GLFWwindow* window)$/;"	f	typeref:typename:void	file:
updateWindowStyles	src/win32_window.c	/^static void updateWindowStyles(const _GLFWwindow* window)$/;"	f	typeref:typename:void	file:
update_map	examples/heightmap.c	/^static void update_map(int num_iter)$/;"	f	typeref:typename:void	file:
update_mesh	examples/heightmap.c	/^static void update_mesh(void)$/;"	f	typeref:typename:void	file:
update_particle	examples/particles.c	/^static void update_particle(PARTICLE *p, float dt)$/;"	f	typeref:typename:void	file:
update_vsync	tests/inputlag.c	/^void update_vsync()$/;"	f	typeref:typename:void
update_window_title	tests/tearing.c	/^static void update_window_title(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
usage	deps/glad/vulkan.h	/^    VkBufferUsageFlags                 usage;$/;"	m	struct:VkPhysicalDeviceExternalBufferInfo	typeref:typename:VkBufferUsageFlags
usage	deps/glad/vulkan.h	/^    VkBufferUsageFlags       usage;$/;"	m	struct:VkBufferCreateInfo	typeref:typename:VkBufferUsageFlags
usage	deps/glad/vulkan.h	/^    VkImageUsageFlags                  usage;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2	typeref:typename:VkImageUsageFlags
usage	deps/glad/vulkan.h	/^    VkImageUsageFlags                  usage;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2	typeref:typename:VkImageUsageFlags
usage	deps/glad/vulkan.h	/^    VkImageUsageFlags        usage;$/;"	m	struct:VkImageCreateInfo	typeref:typename:VkImageUsageFlags
usage	deps/glad/vulkan.h	/^    VkImageUsageFlags   usage;$/;"	m	struct:VkImageViewUsageCreateInfo	typeref:typename:VkImageUsageFlags
usage	examples/particles.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
usage	src/cocoa_joystick.m	/^    uint32_t        usage;$/;"	E	struct:_GLFWjoyelementNS
usage	tests/clipboard.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
usage	tests/events.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
usage	tests/glfwinfo.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
usage	tests/iconify.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
usage	tests/inputlag.c	/^void usage(void)$/;"	f	typeref:typename:void
usage	tests/monitors.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
usage	tests/msaa.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
use_break	tests/triangle-vulkan.c	/^    bool use_break;$/;"	m	struct:demo	typeref:typename:bool	file:
use_clipping	deps/nuklear.h	/^    int use_clipping;$/;"	m	struct:nk_command_buffer	typeref:typename:int
use_pool	deps/nuklear.h	/^    int use_pool;$/;"	m	struct:nk_context	typeref:typename:int
use_staging_buffer	tests/triangle-vulkan.c	/^    bool use_staging_buffer;$/;"	m	struct:demo	typeref:typename:bool	file:
user32	src/win32_platform.h	/^    } user32;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon622bd5890808
userPointer	src/internal.h	/^    void*               userPointer;$/;"	m	struct:_GLFWwindow	typeref:typename:void *
userPointer	src/internal.h	/^    void*           userPointer;$/;"	m	struct:_GLFWjoystick	typeref:typename:void *
userPointer	src/internal.h	/^    void*           userPointer;$/;"	m	struct:_GLFWmonitor	typeref:typename:void *
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_allocator	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_clipboard	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_context	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_command	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_list	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_button	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_progress	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_property	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_scrollbar	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_selectable	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_slider	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_toggle	typeref:typename:nk_handle
userdata	deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_user_font	typeref:typename:nk_handle
uv	deps/nuklear.h	/^    struct nk_vec2 uv; \/* coordinates to a white pixel in the texture  *\/$/;"	m	struct:nk_draw_null_texture	typeref:struct:nk_vec2
uv	deps/nuklear.h	/^    struct nk_vec2 uv[2];$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_vec2[2]
uv	deps/nuklear_glfw_gl2.h	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]
v0	deps/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
v1	deps/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
v_oversample	deps/nuklear.h	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range	typeref:typename:unsigned char
v_oversample	deps/nuklear.h	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context	typeref:typename:unsigned int
val	deps/getopt.h	/^  int val;$/;"	m	struct:option	typeref:typename:int
validAttributesForMarkedText	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
valid_version	tests/glfwinfo.c	/^static int valid_version(void)$/;"	f	typeref:typename:int	file:
validate	tests/triangle-vulkan.c	/^    bool validate;$/;"	m	struct:demo	typeref:typename:bool	file:
validation_error	tests/triangle-vulkan.c	/^static int validation_error = 0;$/;"	v	typeref:typename:int	file:
value	deps/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anonca7851080503
value	deps/nuklear.h	/^    union nk_property value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
value	deps/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	e	enum:nk_helper::__anonca7851080303
value	deps/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	e	enum:nk_helper::__anonca7851080403
values	deps/nuklear.h	/^    nk_uint values[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table	typeref:typename:nk_uint[]
variableMultisampleRate	deps/glad/vulkan.h	/^    VkBool32                 variableMultisampleRate;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
variablePointers	deps/glad/vulkan.h	/^    VkBool32                           variablePointers;$/;"	m	struct:VkPhysicalDeviceVariablePointersFeatures	typeref:typename:VkBool32
variablePointersStorageBuffer	deps/glad/vulkan.h	/^    VkBool32                           variablePointersStorageBuffer;$/;"	m	struct:VkPhysicalDeviceVariablePointersFeatures	typeref:typename:VkBool32
vec3_mul_cross	deps/linmath.h	/^static inline void vec3_mul_cross(vec3 r, vec3 const a, vec3 const b)$/;"	f
vec3_reflect	deps/linmath.h	/^static inline void vec3_reflect(vec3 r, vec3 const v, vec3 const n)$/;"	f	typeref:typename:void
vec4_mul_cross	deps/linmath.h	/^static inline void vec4_mul_cross(vec4 r, vec4 a, vec4 b)$/;"	f	typeref:typename:void
vec4_reflect	deps/linmath.h	/^static inline void vec4_reflect(vec4 r, vec4 v, vec4 n)$/;"	f	typeref:typename:void
vectors	deps/nuklear.h	/^    struct nk_config_stack_vec2 vectors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_vec2
vendorID	deps/glad/vulkan.h	/^    uint32_t         vendorID;$/;"	m	struct:VkPhysicalDeviceProperties	typeref:typename:uint32_t
version	src/x11_platform.h	/^        int         version;$/;"	m	struct:_GLFWlibraryX11::__anon830d96b00408	typeref:typename:int
vertShaderCode	tests/triangle-vulkan.c	/^static const char vertShaderCode[] = {$/;"	v	typeref:typename:const char[]	file:
vert_shader_module	tests/triangle-vulkan.c	/^    VkShaderModule vert_shader_module;$/;"	m	struct:demo	typeref:typename:VkShaderModule	file:
vertex	examples/wave.c	/^struct Vertex vertex[VERTEXNUM];$/;"	v	typeref:struct:Vertex[]
vertexAttributeDescriptionCount	deps/glad/vulkan.h	/^    uint32_t                 vertexAttributeDescriptionCount;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo	typeref:typename:uint32_t
vertexBindingDescriptionCount	deps/glad/vulkan.h	/^    uint32_t                 vertexBindingDescriptionCount;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo	typeref:typename:uint32_t
vertexCount	deps/glad/vulkan.h	/^    uint32_t                         vertexCount;$/;"	m	struct:VkDrawIndirectCommand	typeref:typename:uint32_t
vertexOffset	deps/glad/vulkan.h	/^    int32_t                          vertexOffset;$/;"	m	struct:VkDrawIndexedIndirectCommand	typeref:typename:int32_t
vertexPipelineStoresAndAtomics	deps/glad/vulkan.h	/^    VkBool32                 vertexPipelineStoresAndAtomics;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
vertex_alignment	deps/nuklear.h	/^    nk_size vertex_alignment; \/* vertex alignment: Can be obtained by NK_ALIGNOF *\/$/;"	m	struct:nk_convert_config	typeref:typename:nk_size
vertex_count	deps/nuklear.h	/^    unsigned int vertex_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
vertex_layout	deps/nuklear.h	/^    const struct nk_draw_vertex_layout_element *vertex_layout; \/* describes the vertex output f/;"	m	struct:nk_convert_config	typeref:typename:const struct nk_draw_vertex_layout_element *
vertex_shader_text	examples/heightmap.c	/^static const char* vertex_shader_text =$/;"	v	typeref:typename:const char *	file:
vertex_shader_text	examples/offscreen.c	/^static const char* vertex_shader_text =$/;"	v	typeref:typename:const char *	file:
vertex_shader_text	examples/sharing.c	/^static const char* vertex_shader_text =$/;"	v	typeref:typename:const char *	file:
vertex_shader_text	examples/triangle-opengl.c	/^static const char* vertex_shader_text =$/;"	v	typeref:typename:const char *	file:
vertex_shader_text	tests/cursor.c	/^static const char* vertex_shader_text =$/;"	v	typeref:typename:const char *	file:
vertex_shader_text	tests/msaa.c	/^static const char* vertex_shader_text =$/;"	v	typeref:typename:const char *	file:
vertex_shader_text	tests/reopen.c	/^static const char* vertex_shader_text =$/;"	v	typeref:typename:const char *	file:
vertex_shader_text	tests/tearing.c	/^static const char* vertex_shader_text =$/;"	v	typeref:typename:const char *	file:
vertex_size	deps/nuklear.h	/^    nk_size vertex_size; \/* sizeof one vertex for vertex packing *\/$/;"	m	struct:nk_convert_config	typeref:typename:nk_size
vertex_t	examples/boing.c	/^typedef struct {float x; float y; float z;} vertex_t;$/;"	t	typeref:struct:__anond32b2c930208	file:
vertices	deps/nuklear.h	/^    struct nk_buffer *vertices;$/;"	m	struct:nk_draw_list	typeref:struct:nk_buffer *
vertices	examples/offscreen.c	/^} vertices[3] =$/;"	v	typeref:typename:const struct __anone38272df0108[3]
vertices	examples/sharing.c	/^static const vec2 vertices[4] =$/;"	v	typeref:typename:const vec2[4]	file:
vertices	examples/triangle-opengl.c	/^static const Vertex vertices[3] =$/;"	v	typeref:typename:const Vertex[3]	file:
vertices	tests/msaa.c	/^static const vec2 vertices[4] =$/;"	v	typeref:typename:const vec2[4]	file:
vertices	tests/reopen.c	/^static const vec2 vertices[4] =$/;"	v	typeref:typename:const vec2[4]	file:
vertices	tests/tearing.c	/^} vertices[4] =$/;"	v	typeref:typename:const struct __anonad2ab9a20108[4]
vertices	tests/triangle-vulkan.c	/^    } vertices;$/;"	m	struct:demo	typeref:struct:demo::__anondab0972c0308	file:
vi	tests/triangle-vulkan.c	/^        VkPipelineVertexInputStateCreateInfo vi;$/;"	m	struct:demo::__anondab0972c0308	typeref:typename:VkPipelineVertexInputStateCreateInfo	file:
vi_attrs	tests/triangle-vulkan.c	/^        VkVertexInputAttributeDescription vi_attrs[2];$/;"	m	struct:demo::__anondab0972c0308	typeref:typename:VkVertexInputAttributeDescription[2]	file:
vi_bindings	tests/triangle-vulkan.c	/^        VkVertexInputBindingDescription vi_bindings[1];$/;"	m	struct:demo::__anondab0972c0308	typeref:typename:VkVertexInputBindingDescription[1]	file:
videoMode	src/internal.h	/^    GLFWvidmode         videoMode;$/;"	m	struct:_GLFWwindow	typeref:typename:GLFWvidmode
vidmode	src/x11_platform.h	/^    } vidmode;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon830d96b00808
vidmodeFromCGDisplayMode	src/cocoa_monitor.m	/^static GLFWvidmode vidmodeFromCGDisplayMode(CGDisplayModeRef mode,$/;"	f
vidmodeFromModeInfo	src/x11_monitor.c	/^static GLFWvidmode vidmodeFromModeInfo(const XRRModeInfo* mi,$/;"	f	typeref:typename:GLFWvidmode	file:
view	src/cocoa_platform.h	/^    id              view;$/;"	E	struct:_GLFWwindowNS
view	tests/triangle-vulkan.c	/^        VkImageView view;$/;"	m	struct:demo::__anondab0972c0208	typeref:typename:VkImageView	file:
view	tests/triangle-vulkan.c	/^    VkImageView view;$/;"	m	struct:__anondab0972c0108	typeref:typename:VkImageView	file:
view	tests/triangle-vulkan.c	/^    VkImageView view;$/;"	m	struct:texture_object	typeref:typename:VkImageView	file:
viewDidChangeBackingProperties	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
viewType	deps/glad/vulkan.h	/^    VkImageViewType          viewType;$/;"	m	struct:VkImageViewCreateInfo	typeref:typename:VkImageViewType
view_angle	examples/heightmap.c	/^static GLfloat view_angle = 45.0f;$/;"	v	typeref:typename:GLfloat	file:
view_rotx	examples/gears.c	/^static GLfloat view_rotx = 20.f, view_roty = 30.f, view_rotz = 0.f;$/;"	v	typeref:typename:GLfloat	file:
view_roty	examples/gears.c	/^static GLfloat view_rotx = 20.f, view_roty = 30.f, view_rotz = 0.f;$/;"	v	typeref:typename:GLfloat	file:
view_rotz	examples/gears.c	/^static GLfloat view_rotx = 20.f, view_roty = 30.f, view_rotz = 0.f;$/;"	v	typeref:typename:GLfloat	file:
viewport	src/wl_platform.h	/^    struct wp_viewport*         viewport;$/;"	m	struct:_GLFWdecorationWayland	typeref:struct:wp_viewport *
viewportBoundsRange	deps/glad/vulkan.h	/^    float                    viewportBoundsRange [2];$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:float[2]
viewportCount	deps/glad/vulkan.h	/^    uint32_t                 viewportCount;$/;"	m	struct:VkPipelineViewportStateCreateInfo	typeref:typename:uint32_t
viewportSubPixelBits	deps/glad/vulkan.h	/^    uint32_t                 viewportSubPixelBits;$/;"	m	struct:VkPhysicalDeviceLimits	typeref:typename:uint32_t
viewporter	src/wl_platform.h	/^    struct wp_viewporter*       viewporter;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:wp_viewporter *
virtualCursorPosX	src/internal.h	/^    double              virtualCursorPosX, virtualCursorPosY;$/;"	m	struct:_GLFWwindow	typeref:typename:double
virtualCursorPosY	src/internal.h	/^    double              virtualCursorPosX, virtualCursorPosY;$/;"	m	struct:_GLFWwindow	typeref:typename:double
visible	src/internal.h	/^    GLFWbool      visible;$/;"	m	struct:_GLFWwndconfig	typeref:typename:GLFWbool
visible	src/wl_platform.h	/^    GLFWbool                    visible;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:GLFWbool
vk	src/internal.h	/^    } vk;$/;"	m	struct:_GLFWlibrary	typeref:struct:_GLFWlibrary::__anona0faa0af0908
vkAcquireNextImage2KHR	deps/glad/vulkan.h	/^#define vkAcquireNextImage2KHR /;"	d
vkAcquireNextImageKHR	deps/glad/vulkan.h	/^#define vkAcquireNextImageKHR /;"	d
vkAllocateCommandBuffers	deps/glad/vulkan.h	/^#define vkAllocateCommandBuffers /;"	d
vkAllocateDescriptorSets	deps/glad/vulkan.h	/^#define vkAllocateDescriptorSets /;"	d
vkAllocateMemory	deps/glad/vulkan.h	/^#define vkAllocateMemory /;"	d
vkBeginCommandBuffer	deps/glad/vulkan.h	/^#define vkBeginCommandBuffer /;"	d
vkBindBufferMemory	deps/glad/vulkan.h	/^#define vkBindBufferMemory /;"	d
vkBindBufferMemory2	deps/glad/vulkan.h	/^#define vkBindBufferMemory2 /;"	d
vkBindImageMemory	deps/glad/vulkan.h	/^#define vkBindImageMemory /;"	d
vkBindImageMemory2	deps/glad/vulkan.h	/^#define vkBindImageMemory2 /;"	d
vkCmdBeginQuery	deps/glad/vulkan.h	/^#define vkCmdBeginQuery /;"	d
vkCmdBeginRenderPass	deps/glad/vulkan.h	/^#define vkCmdBeginRenderPass /;"	d
vkCmdBindDescriptorSets	deps/glad/vulkan.h	/^#define vkCmdBindDescriptorSets /;"	d
vkCmdBindIndexBuffer	deps/glad/vulkan.h	/^#define vkCmdBindIndexBuffer /;"	d
vkCmdBindPipeline	deps/glad/vulkan.h	/^#define vkCmdBindPipeline /;"	d
vkCmdBindVertexBuffers	deps/glad/vulkan.h	/^#define vkCmdBindVertexBuffers /;"	d
vkCmdBlitImage	deps/glad/vulkan.h	/^#define vkCmdBlitImage /;"	d
vkCmdClearAttachments	deps/glad/vulkan.h	/^#define vkCmdClearAttachments /;"	d
vkCmdClearColorImage	deps/glad/vulkan.h	/^#define vkCmdClearColorImage /;"	d
vkCmdClearDepthStencilImage	deps/glad/vulkan.h	/^#define vkCmdClearDepthStencilImage /;"	d
vkCmdCopyBuffer	deps/glad/vulkan.h	/^#define vkCmdCopyBuffer /;"	d
vkCmdCopyBufferToImage	deps/glad/vulkan.h	/^#define vkCmdCopyBufferToImage /;"	d
vkCmdCopyImage	deps/glad/vulkan.h	/^#define vkCmdCopyImage /;"	d
vkCmdCopyImageToBuffer	deps/glad/vulkan.h	/^#define vkCmdCopyImageToBuffer /;"	d
vkCmdCopyQueryPoolResults	deps/glad/vulkan.h	/^#define vkCmdCopyQueryPoolResults /;"	d
vkCmdDispatch	deps/glad/vulkan.h	/^#define vkCmdDispatch /;"	d
vkCmdDispatchBase	deps/glad/vulkan.h	/^#define vkCmdDispatchBase /;"	d
vkCmdDispatchIndirect	deps/glad/vulkan.h	/^#define vkCmdDispatchIndirect /;"	d
vkCmdDraw	deps/glad/vulkan.h	/^#define vkCmdDraw /;"	d
vkCmdDrawIndexed	deps/glad/vulkan.h	/^#define vkCmdDrawIndexed /;"	d
vkCmdDrawIndexedIndirect	deps/glad/vulkan.h	/^#define vkCmdDrawIndexedIndirect /;"	d
vkCmdDrawIndirect	deps/glad/vulkan.h	/^#define vkCmdDrawIndirect /;"	d
vkCmdEndQuery	deps/glad/vulkan.h	/^#define vkCmdEndQuery /;"	d
vkCmdEndRenderPass	deps/glad/vulkan.h	/^#define vkCmdEndRenderPass /;"	d
vkCmdExecuteCommands	deps/glad/vulkan.h	/^#define vkCmdExecuteCommands /;"	d
vkCmdFillBuffer	deps/glad/vulkan.h	/^#define vkCmdFillBuffer /;"	d
vkCmdNextSubpass	deps/glad/vulkan.h	/^#define vkCmdNextSubpass /;"	d
vkCmdPipelineBarrier	deps/glad/vulkan.h	/^#define vkCmdPipelineBarrier /;"	d
vkCmdPushConstants	deps/glad/vulkan.h	/^#define vkCmdPushConstants /;"	d
vkCmdResetEvent	deps/glad/vulkan.h	/^#define vkCmdResetEvent /;"	d
vkCmdResetQueryPool	deps/glad/vulkan.h	/^#define vkCmdResetQueryPool /;"	d
vkCmdResolveImage	deps/glad/vulkan.h	/^#define vkCmdResolveImage /;"	d
vkCmdSetBlendConstants	deps/glad/vulkan.h	/^#define vkCmdSetBlendConstants /;"	d
vkCmdSetDepthBias	deps/glad/vulkan.h	/^#define vkCmdSetDepthBias /;"	d
vkCmdSetDepthBounds	deps/glad/vulkan.h	/^#define vkCmdSetDepthBounds /;"	d
vkCmdSetDeviceMask	deps/glad/vulkan.h	/^#define vkCmdSetDeviceMask /;"	d
vkCmdSetEvent	deps/glad/vulkan.h	/^#define vkCmdSetEvent /;"	d
vkCmdSetLineWidth	deps/glad/vulkan.h	/^#define vkCmdSetLineWidth /;"	d
vkCmdSetScissor	deps/glad/vulkan.h	/^#define vkCmdSetScissor /;"	d
vkCmdSetStencilCompareMask	deps/glad/vulkan.h	/^#define vkCmdSetStencilCompareMask /;"	d
vkCmdSetStencilReference	deps/glad/vulkan.h	/^#define vkCmdSetStencilReference /;"	d
vkCmdSetStencilWriteMask	deps/glad/vulkan.h	/^#define vkCmdSetStencilWriteMask /;"	d
vkCmdSetViewport	deps/glad/vulkan.h	/^#define vkCmdSetViewport /;"	d
vkCmdUpdateBuffer	deps/glad/vulkan.h	/^#define vkCmdUpdateBuffer /;"	d
vkCmdWaitEvents	deps/glad/vulkan.h	/^#define vkCmdWaitEvents /;"	d
vkCmdWriteTimestamp	deps/glad/vulkan.h	/^#define vkCmdWriteTimestamp /;"	d
vkCreateBuffer	deps/glad/vulkan.h	/^#define vkCreateBuffer /;"	d
vkCreateBufferView	deps/glad/vulkan.h	/^#define vkCreateBufferView /;"	d
vkCreateCommandPool	deps/glad/vulkan.h	/^#define vkCreateCommandPool /;"	d
vkCreateComputePipelines	deps/glad/vulkan.h	/^#define vkCreateComputePipelines /;"	d
vkCreateDebugReportCallbackEXT	deps/glad/vulkan.h	/^#define vkCreateDebugReportCallbackEXT /;"	d
vkCreateDescriptorPool	deps/glad/vulkan.h	/^#define vkCreateDescriptorPool /;"	d
vkCreateDescriptorSetLayout	deps/glad/vulkan.h	/^#define vkCreateDescriptorSetLayout /;"	d
vkCreateDescriptorUpdateTemplate	deps/glad/vulkan.h	/^#define vkCreateDescriptorUpdateTemplate /;"	d
vkCreateDevice	deps/glad/vulkan.h	/^#define vkCreateDevice /;"	d
vkCreateEvent	deps/glad/vulkan.h	/^#define vkCreateEvent /;"	d
vkCreateFence	deps/glad/vulkan.h	/^#define vkCreateFence /;"	d
vkCreateFramebuffer	deps/glad/vulkan.h	/^#define vkCreateFramebuffer /;"	d
vkCreateGraphicsPipelines	deps/glad/vulkan.h	/^#define vkCreateGraphicsPipelines /;"	d
vkCreateImage	deps/glad/vulkan.h	/^#define vkCreateImage /;"	d
vkCreateImageView	deps/glad/vulkan.h	/^#define vkCreateImageView /;"	d
vkCreateInstance	deps/glad/vulkan.h	/^#define vkCreateInstance /;"	d
vkCreatePipelineCache	deps/glad/vulkan.h	/^#define vkCreatePipelineCache /;"	d
vkCreatePipelineLayout	deps/glad/vulkan.h	/^#define vkCreatePipelineLayout /;"	d
vkCreateQueryPool	deps/glad/vulkan.h	/^#define vkCreateQueryPool /;"	d
vkCreateRenderPass	deps/glad/vulkan.h	/^#define vkCreateRenderPass /;"	d
vkCreateSampler	deps/glad/vulkan.h	/^#define vkCreateSampler /;"	d
vkCreateSamplerYcbcrConversion	deps/glad/vulkan.h	/^#define vkCreateSamplerYcbcrConversion /;"	d
vkCreateSemaphore	deps/glad/vulkan.h	/^#define vkCreateSemaphore /;"	d
vkCreateShaderModule	deps/glad/vulkan.h	/^#define vkCreateShaderModule /;"	d
vkCreateSwapchainKHR	deps/glad/vulkan.h	/^#define vkCreateSwapchainKHR /;"	d
vkDebugReportMessageEXT	deps/glad/vulkan.h	/^#define vkDebugReportMessageEXT /;"	d
vkDestroyBuffer	deps/glad/vulkan.h	/^#define vkDestroyBuffer /;"	d
vkDestroyBufferView	deps/glad/vulkan.h	/^#define vkDestroyBufferView /;"	d
vkDestroyCommandPool	deps/glad/vulkan.h	/^#define vkDestroyCommandPool /;"	d
vkDestroyDebugReportCallbackEXT	deps/glad/vulkan.h	/^#define vkDestroyDebugReportCallbackEXT /;"	d
vkDestroyDescriptorPool	deps/glad/vulkan.h	/^#define vkDestroyDescriptorPool /;"	d
vkDestroyDescriptorSetLayout	deps/glad/vulkan.h	/^#define vkDestroyDescriptorSetLayout /;"	d
vkDestroyDescriptorUpdateTemplate	deps/glad/vulkan.h	/^#define vkDestroyDescriptorUpdateTemplate /;"	d
vkDestroyDevice	deps/glad/vulkan.h	/^#define vkDestroyDevice /;"	d
vkDestroyEvent	deps/glad/vulkan.h	/^#define vkDestroyEvent /;"	d
vkDestroyFence	deps/glad/vulkan.h	/^#define vkDestroyFence /;"	d
vkDestroyFramebuffer	deps/glad/vulkan.h	/^#define vkDestroyFramebuffer /;"	d
vkDestroyImage	deps/glad/vulkan.h	/^#define vkDestroyImage /;"	d
vkDestroyImageView	deps/glad/vulkan.h	/^#define vkDestroyImageView /;"	d
vkDestroyInstance	deps/glad/vulkan.h	/^#define vkDestroyInstance /;"	d
vkDestroyPipeline	deps/glad/vulkan.h	/^#define vkDestroyPipeline /;"	d
vkDestroyPipelineCache	deps/glad/vulkan.h	/^#define vkDestroyPipelineCache /;"	d
vkDestroyPipelineLayout	deps/glad/vulkan.h	/^#define vkDestroyPipelineLayout /;"	d
vkDestroyQueryPool	deps/glad/vulkan.h	/^#define vkDestroyQueryPool /;"	d
vkDestroyRenderPass	deps/glad/vulkan.h	/^#define vkDestroyRenderPass /;"	d
vkDestroySampler	deps/glad/vulkan.h	/^#define vkDestroySampler /;"	d
vkDestroySamplerYcbcrConversion	deps/glad/vulkan.h	/^#define vkDestroySamplerYcbcrConversion /;"	d
vkDestroySemaphore	deps/glad/vulkan.h	/^#define vkDestroySemaphore /;"	d
vkDestroyShaderModule	deps/glad/vulkan.h	/^#define vkDestroyShaderModule /;"	d
vkDestroySurfaceKHR	deps/glad/vulkan.h	/^#define vkDestroySurfaceKHR /;"	d
vkDestroySwapchainKHR	deps/glad/vulkan.h	/^#define vkDestroySwapchainKHR /;"	d
vkDeviceWaitIdle	deps/glad/vulkan.h	/^#define vkDeviceWaitIdle /;"	d
vkEndCommandBuffer	deps/glad/vulkan.h	/^#define vkEndCommandBuffer /;"	d
vkEnumerateDeviceExtensionProperties	deps/glad/vulkan.h	/^#define vkEnumerateDeviceExtensionProperties /;"	d
vkEnumerateDeviceLayerProperties	deps/glad/vulkan.h	/^#define vkEnumerateDeviceLayerProperties /;"	d
vkEnumerateInstanceExtensionProperties	deps/glad/vulkan.h	/^#define vkEnumerateInstanceExtensionProperties /;"	d
vkEnumerateInstanceExtensionProperties	src/internal.h	/^  #define vkEnumerateInstanceExtensionProperties /;"	d
vkEnumerateInstanceLayerProperties	deps/glad/vulkan.h	/^#define vkEnumerateInstanceLayerProperties /;"	d
vkEnumerateInstanceVersion	deps/glad/vulkan.h	/^#define vkEnumerateInstanceVersion /;"	d
vkEnumeratePhysicalDeviceGroups	deps/glad/vulkan.h	/^#define vkEnumeratePhysicalDeviceGroups /;"	d
vkEnumeratePhysicalDevices	deps/glad/vulkan.h	/^#define vkEnumeratePhysicalDevices /;"	d
vkFlushMappedMemoryRanges	deps/glad/vulkan.h	/^#define vkFlushMappedMemoryRanges /;"	d
vkFreeCommandBuffers	deps/glad/vulkan.h	/^#define vkFreeCommandBuffers /;"	d
vkFreeDescriptorSets	deps/glad/vulkan.h	/^#define vkFreeDescriptorSets /;"	d
vkFreeMemory	deps/glad/vulkan.h	/^#define vkFreeMemory /;"	d
vkGetBufferMemoryRequirements	deps/glad/vulkan.h	/^#define vkGetBufferMemoryRequirements /;"	d
vkGetBufferMemoryRequirements2	deps/glad/vulkan.h	/^#define vkGetBufferMemoryRequirements2 /;"	d
vkGetDescriptorSetLayoutSupport	deps/glad/vulkan.h	/^#define vkGetDescriptorSetLayoutSupport /;"	d
vkGetDeviceGroupPeerMemoryFeatures	deps/glad/vulkan.h	/^#define vkGetDeviceGroupPeerMemoryFeatures /;"	d
vkGetDeviceGroupPresentCapabilitiesKHR	deps/glad/vulkan.h	/^#define vkGetDeviceGroupPresentCapabilitiesKHR /;"	d
vkGetDeviceGroupSurfacePresentModesKHR	deps/glad/vulkan.h	/^#define vkGetDeviceGroupSurfacePresentModesKHR /;"	d
vkGetDeviceMemoryCommitment	deps/glad/vulkan.h	/^#define vkGetDeviceMemoryCommitment /;"	d
vkGetDeviceProcAddr	deps/glad/vulkan.h	/^#define vkGetDeviceProcAddr /;"	d
vkGetDeviceQueue	deps/glad/vulkan.h	/^#define vkGetDeviceQueue /;"	d
vkGetDeviceQueue2	deps/glad/vulkan.h	/^#define vkGetDeviceQueue2 /;"	d
vkGetEventStatus	deps/glad/vulkan.h	/^#define vkGetEventStatus /;"	d
vkGetFenceStatus	deps/glad/vulkan.h	/^#define vkGetFenceStatus /;"	d
vkGetImageMemoryRequirements	deps/glad/vulkan.h	/^#define vkGetImageMemoryRequirements /;"	d
vkGetImageMemoryRequirements2	deps/glad/vulkan.h	/^#define vkGetImageMemoryRequirements2 /;"	d
vkGetImageSparseMemoryRequirements	deps/glad/vulkan.h	/^#define vkGetImageSparseMemoryRequirements /;"	d
vkGetImageSparseMemoryRequirements2	deps/glad/vulkan.h	/^#define vkGetImageSparseMemoryRequirements2 /;"	d
vkGetImageSubresourceLayout	deps/glad/vulkan.h	/^#define vkGetImageSubresourceLayout /;"	d
vkGetInstanceProcAddr	deps/glad/vulkan.h	/^#define vkGetInstanceProcAddr /;"	d
vkGetInstanceProcAddr	src/internal.h	/^  #define vkGetInstanceProcAddr /;"	d
vkGetPhysicalDeviceExternalBufferProperties	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceExternalBufferProperties /;"	d
vkGetPhysicalDeviceExternalFenceProperties	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceExternalFenceProperties /;"	d
vkGetPhysicalDeviceExternalSemaphoreProperties	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceExternalSemaphoreProperties /;"	d
vkGetPhysicalDeviceFeatures	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceFeatures /;"	d
vkGetPhysicalDeviceFeatures2	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceFeatures2 /;"	d
vkGetPhysicalDeviceFormatProperties	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceFormatProperties /;"	d
vkGetPhysicalDeviceFormatProperties2	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceFormatProperties2 /;"	d
vkGetPhysicalDeviceImageFormatProperties	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceImageFormatProperties /;"	d
vkGetPhysicalDeviceImageFormatProperties2	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceImageFormatProperties2 /;"	d
vkGetPhysicalDeviceMemoryProperties	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceMemoryProperties /;"	d
vkGetPhysicalDeviceMemoryProperties2	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceMemoryProperties2 /;"	d
vkGetPhysicalDevicePresentRectanglesKHR	deps/glad/vulkan.h	/^#define vkGetPhysicalDevicePresentRectanglesKHR /;"	d
vkGetPhysicalDeviceProperties	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceProperties /;"	d
vkGetPhysicalDeviceProperties2	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceProperties2 /;"	d
vkGetPhysicalDeviceQueueFamilyProperties	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceQueueFamilyProperties /;"	d
vkGetPhysicalDeviceQueueFamilyProperties2	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceQueueFamilyProperties2 /;"	d
vkGetPhysicalDeviceSparseImageFormatProperties	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceSparseImageFormatProperties /;"	d
vkGetPhysicalDeviceSparseImageFormatProperties2	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceSparseImageFormatProperties2 /;"	d
vkGetPhysicalDeviceSurfaceCapabilitiesKHR	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceSurfaceCapabilitiesKHR /;"	d
vkGetPhysicalDeviceSurfaceFormatsKHR	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceSurfaceFormatsKHR /;"	d
vkGetPhysicalDeviceSurfacePresentModesKHR	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceSurfacePresentModesKHR /;"	d
vkGetPhysicalDeviceSurfaceSupportKHR	deps/glad/vulkan.h	/^#define vkGetPhysicalDeviceSurfaceSupportKHR /;"	d
vkGetPipelineCacheData	deps/glad/vulkan.h	/^#define vkGetPipelineCacheData /;"	d
vkGetQueryPoolResults	deps/glad/vulkan.h	/^#define vkGetQueryPoolResults /;"	d
vkGetRenderAreaGranularity	deps/glad/vulkan.h	/^#define vkGetRenderAreaGranularity /;"	d
vkGetSwapchainImagesKHR	deps/glad/vulkan.h	/^#define vkGetSwapchainImagesKHR /;"	d
vkInvalidateMappedMemoryRanges	deps/glad/vulkan.h	/^#define vkInvalidateMappedMemoryRanges /;"	d
vkMapMemory	deps/glad/vulkan.h	/^#define vkMapMemory /;"	d
vkMergePipelineCaches	deps/glad/vulkan.h	/^#define vkMergePipelineCaches /;"	d
vkQueueBindSparse	deps/glad/vulkan.h	/^#define vkQueueBindSparse /;"	d
vkQueuePresentKHR	deps/glad/vulkan.h	/^#define vkQueuePresentKHR /;"	d
vkQueueSubmit	deps/glad/vulkan.h	/^#define vkQueueSubmit /;"	d
vkQueueWaitIdle	deps/glad/vulkan.h	/^#define vkQueueWaitIdle /;"	d
vkResetCommandBuffer	deps/glad/vulkan.h	/^#define vkResetCommandBuffer /;"	d
vkResetCommandPool	deps/glad/vulkan.h	/^#define vkResetCommandPool /;"	d
vkResetDescriptorPool	deps/glad/vulkan.h	/^#define vkResetDescriptorPool /;"	d
vkResetEvent	deps/glad/vulkan.h	/^#define vkResetEvent /;"	d
vkResetFences	deps/glad/vulkan.h	/^#define vkResetFences /;"	d
vkSetEvent	deps/glad/vulkan.h	/^#define vkSetEvent /;"	d
vkTrimCommandPool	deps/glad/vulkan.h	/^#define vkTrimCommandPool /;"	d
vkUnmapMemory	deps/glad/vulkan.h	/^#define vkUnmapMemory /;"	d
vkUpdateDescriptorSetWithTemplate	deps/glad/vulkan.h	/^#define vkUpdateDescriptorSetWithTemplate /;"	d
vkUpdateDescriptorSets	deps/glad/vulkan.h	/^#define vkUpdateDescriptorSets /;"	d
vkWaitForFences	deps/glad/vulkan.h	/^#define vkWaitForFences /;"	d
void	src/cocoa_platform.h	/^typedef TISInputSourceRef (*PFN_TISCopyCurrentKeyboardLayoutInputSource)(void);$/;"	t
void	src/cocoa_platform.h	/^typedef UInt8 (*PFN_LMGetKbdType)(void);$/;"	t
vx	examples/particles.c	/^    float vx,vy,vz;  \/\/ Velocity vector$/;"	m	struct:__anon62203f4b0408	typeref:typename:float	file:
vx	examples/wave.c	/^double vx[GRIDW][GRIDH], vy[GRIDW][GRIDH];$/;"	v	typeref:typename:double[][]
vy	examples/particles.c	/^    float vx,vy,vz;  \/\/ Velocity vector$/;"	m	struct:__anon62203f4b0408	typeref:typename:float	file:
vy	examples/wave.c	/^double vx[GRIDW][GRIDH], vy[GRIDW][GRIDH];$/;"	v	typeref:typename:double[][][][]
vz	examples/particles.c	/^    float vx,vy,vz;  \/\/ Velocity vector$/;"	m	struct:__anon62203f4b0408	typeref:typename:float	file:
w	deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
w	deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
w	deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
w	deps/nuklear.h	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord
w	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle	typeref:typename:unsigned short
w	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled	typeref:typename:unsigned short
w	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_custom	typeref:typename:unsigned short
w	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image	typeref:typename:unsigned short
w	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
w	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled	typeref:typename:unsigned short
w	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:unsigned short
w	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor	typeref:typename:unsigned short
w	deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text	typeref:typename:unsigned short
w	deps/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	typeref:typename:int
w	deps/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:unsigned short
w	deps/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
w	deps/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
wButtons	deps/mingw/xinput.h	/^    WORD wButtons;$/;"	m	struct:_XINPUT_GAMEPAD	typeref:typename:WORD
wCollectionNumber	deps/mingw/dinput.h	/^    WORD	wCollectionNumber;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:WORD
wCollectionNumber	deps/mingw/dinput.h	/^    WORD	wCollectionNumber;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:WORD
wDesignatorIndex	deps/mingw/dinput.h	/^    WORD	wDesignatorIndex;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:WORD
wDesignatorIndex	deps/mingw/dinput.h	/^    WORD	wDesignatorIndex;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:WORD
wExponent	deps/mingw/dinput.h	/^    WORD	wExponent;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:WORD
wExponent	deps/mingw/dinput.h	/^    WORD	wExponent;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:WORD
wLeftMotorSpeed	deps/mingw/xinput.h	/^    WORD wLeftMotorSpeed;$/;"	m	struct:_XINPUT_VIBRATION	typeref:typename:WORD
wReserved	deps/mingw/dinput.h	/^    WORD	wReserved;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:WORD
wReserved	deps/mingw/dinput.h	/^    WORD	wReserved;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:WORD
wRightMotorSpeed	deps/mingw/xinput.h	/^    WORD wRightMotorSpeed;$/;"	m	struct:_XINPUT_VIBRATION	typeref:typename:WORD
wUsage	deps/mingw/dinput.h	/^    WORD	wUsage;$/;"	m	struct:DIDEVICEINSTANCEA	typeref:typename:WORD
wUsage	deps/mingw/dinput.h	/^    WORD	wUsage;$/;"	m	struct:DIDEVICEINSTANCEW	typeref:typename:WORD
wUsage	deps/mingw/dinput.h	/^    WORD	wUsage;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:WORD
wUsage	deps/mingw/dinput.h	/^    WORD	wUsage;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:WORD
wUsagePage	deps/mingw/dinput.h	/^    WORD	wUsagePage;$/;"	m	struct:DIDEVICEINSTANCEA	typeref:typename:WORD
wUsagePage	deps/mingw/dinput.h	/^    WORD	wUsagePage;$/;"	m	struct:DIDEVICEINSTANCEW	typeref:typename:WORD
wUsagePage	deps/mingw/dinput.h	/^    WORD	wUsagePage;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA	typeref:typename:WORD
wUsagePage	deps/mingw/dinput.h	/^    WORD	wUsagePage;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW	typeref:typename:WORD
waitForEvent	src/x11_window.c	/^static GLFWbool waitForEvent(double* timeout)$/;"	f	typeref:typename:GLFWbool	file:
waitForVisibilityNotify	src/x11_window.c	/^static GLFWbool waitForVisibilityNotify(_GLFWwindow* window)$/;"	f	typeref:typename:GLFWbool	file:
waitSemaphoreCount	deps/glad/vulkan.h	/^    uint32_t                 waitSemaphoreCount;$/;"	m	struct:VkBindSparseInfo	typeref:typename:uint32_t
waitSemaphoreCount	deps/glad/vulkan.h	/^    uint32_t           waitSemaphoreCount;$/;"	m	struct:VkDeviceGroupSubmitInfo	typeref:typename:uint32_t
waitSemaphoreCount	deps/glad/vulkan.h	/^    uint32_t           waitSemaphoreCount;$/;"	m	struct:VkPresentInfoKHR	typeref:typename:uint32_t
waitSemaphoreCount	deps/glad/vulkan.h	/^    uint32_t         waitSemaphoreCount;$/;"	m	struct:VkSubmitInfo	typeref:typename:uint32_t
wait_events	tests/cursor.c	/^static int wait_events = GLFW_TRUE;$/;"	v	typeref:typename:int	file:
wantsUpdateLayer	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWContentView
warpCursorPosX	src/x11_platform.h	/^    int             warpCursorPosX, warpCursorPosY;$/;"	m	struct:_GLFWwindowX11	typeref:typename:int
warpCursorPosY	src/x11_platform.h	/^    int             warpCursorPosX, warpCursorPosY;$/;"	m	struct:_GLFWwindowX11	typeref:typename:int
wasFullscreen	src/wl_platform.h	/^    GLFWbool                    wasFullscreen;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:GLFWbool
was_packed	deps/nuklear.h	/^    int was_packed;$/;"	m	struct:nk_rp_rect	typeref:typename:int
watch	src/linux_joystick.h	/^    int                     watch;$/;"	m	struct:_GLFWlibraryLinux	typeref:typename:int
wave	examples/CMakeLists.txt	/^add_executable(wave WIN32 MACOSX_BUNDLE wave.c ${ICON} ${GLAD_GL})$/;"	t
wglCreateContext	src/wgl_context.h	/^#define wglCreateContext /;"	d
wglCreateContextAttribsARB	src/wgl_context.h	/^#define wglCreateContextAttribsARB /;"	d
wglDeleteContext	src/wgl_context.h	/^#define wglDeleteContext /;"	d
wglGetCurrentContext	src/wgl_context.h	/^#define wglGetCurrentContext /;"	d
wglGetCurrentDC	src/wgl_context.h	/^#define wglGetCurrentDC /;"	d
wglGetExtensionsStringARB	src/wgl_context.h	/^#define wglGetExtensionsStringARB /;"	d
wglGetExtensionsStringEXT	src/wgl_context.h	/^#define wglGetExtensionsStringEXT /;"	d
wglGetPixelFormatAttribivARB	src/wgl_context.h	/^#define wglGetPixelFormatAttribivARB /;"	d
wglGetProcAddress	src/wgl_context.h	/^#define wglGetProcAddress /;"	d
wglMakeCurrent	src/wgl_context.h	/^#define wglMakeCurrent /;"	d
wglShareLists	src/wgl_context.h	/^#define wglShareLists /;"	d
wglSwapIntervalEXT	src/wgl_context.h	/^#define wglSwapIntervalEXT /;"	d
where	deps/nuklear.h	/^   int where;$/;"	m	struct:nk_text_undo_record	typeref:typename:int
wideLines	deps/glad/vulkan.h	/^    VkBool32                 wideLines;$/;"	m	struct:VkPhysicalDeviceFeatures	typeref:typename:VkBool32
width	deps/glad/vulkan.h	/^    float   width;$/;"	m	struct:VkViewport	typeref:typename:float
width	deps/glad/vulkan.h	/^    uint32_t                 width;$/;"	m	struct:VkFramebufferCreateInfo	typeref:typename:uint32_t
width	deps/glad/vulkan.h	/^    uint32_t          width;$/;"	m	struct:VkExtent2D	typeref:typename:uint32_t
width	deps/glad/vulkan.h	/^    uint32_t          width;$/;"	m	struct:VkExtent3D	typeref:typename:uint32_t
width	deps/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph	typeref:typename:float
width	deps/nuklear.h	/^    int   width;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int
width	deps/nuklear.h	/^    int width;$/;"	m	struct:nk_rp_context	typeref:typename:int
width	deps/nuklear.h	/^    nk_text_width_f width;$/;"	m	struct:nk_user_font	typeref:typename:nk_text_width_f
width	deps/nuklear_glfw_gl2.h	/^    int width, height;$/;"	m	struct:nk_glfw	typeref:typename:int
width	examples/boing.c	/^int width, height;$/;"	v	typeref:typename:int
width	examples/splitview.c	/^static int width, height;$/;"	v	typeref:typename:int	file:
width	include/GLFW/glfw3.h	/^    int width;$/;"	m	struct:GLFWimage	typeref:typename:int
width	include/GLFW/glfw3.h	/^    int width;$/;"	m	struct:GLFWvidmode	typeref:typename:int
width	src/internal.h	/^    int           width;$/;"	m	struct:_GLFWwndconfig	typeref:typename:int
width	src/null_platform.h	/^    int width;$/;"	m	struct:_GLFWwindowNull	typeref:typename:int
width	src/osmesa_context.h	/^    int                 width;$/;"	m	struct:_GLFWcontextOSMesa	typeref:typename:int
width	src/wl_platform.h	/^    int                         width, height;$/;"	m	struct:_GLFWcursorWayland	typeref:typename:int
width	src/wl_platform.h	/^    int                         width, height;$/;"	m	struct:_GLFWwindowWayland	typeref:typename:int
width	src/wl_platform.h	/^    uint32_t width;$/;"	m	struct:wl_cursor_image	typeref:typename:uint32_t
width	src/x11_platform.h	/^    int             width, height;$/;"	m	struct:_GLFWwindowX11	typeref:typename:int
width	tests/triangle-vulkan.c	/^    int width, height;$/;"	m	struct:demo	typeref:typename:int	file:
widthMM	src/internal.h	/^    int             widthMM, heightMM;$/;"	m	struct:_GLFWmonitor	typeref:typename:int
win	deps/nuklear.h	/^    struct nk_page_element win[1];$/;"	m	struct:nk_page	typeref:struct:nk_page_element[1]
win	deps/nuklear.h	/^    struct nk_window *win;$/;"	m	struct:nk_popup_state	typeref:struct:nk_window *
win	deps/nuklear.h	/^    struct nk_window win;$/;"	m	union:nk_page_data	typeref:struct:nk_window
win	deps/nuklear_glfw_gl2.h	/^    GLFWwindow *win;$/;"	m	struct:nk_glfw	typeref:typename:GLFWwindow *
win32	src/internal.h	/^    } win32;$/;"	m	struct:_GLFWwndconfig	typeref:struct:_GLFWwndconfig::__anona0faa0af0408
window	deps/nuklear.h	/^    struct nk_style_window window;$/;"	m	struct:nk_style	typeref:struct:nk_style_window
window	src/cocoa_window.m	/^    _GLFWwindow* window;$/;"	E	interface:GLFWContentView
window	src/cocoa_window.m	/^    _GLFWwindow* window;$/;"	E	interface:GLFWWindowDelegate
window	src/glx_context.h	/^    GLXWindow       window;$/;"	m	struct:_GLFWcontextGLX	typeref:typename:GLXWindow
window	src/internal.h	/^        _GLFWwndconfig  window;$/;"	m	struct:_GLFWlibrary::__anona0faa0af0708	typeref:typename:_GLFWwndconfig
window	src/internal.h	/^    _GLFWwindow*    window;$/;"	m	struct:_GLFWmonitor	typeref:typename:_GLFWwindow *
window	src/x11_platform.h	/^    Window                      window;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR	typeref:typename:Window
window	src/x11_platform.h	/^    xcb_window_t                window;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR	typeref:typename:xcb_window_t
window	tests/events.c	/^    GLFWwindow* window;$/;"	m	struct:__anon79ddf3cd0108	typeref:typename:GLFWwindow *	file:
window	tests/joysticks.c	/^static GLFWwindow* window;$/;"	v	typeref:typename:GLFWwindow *	file:
window	tests/threads.c	/^    GLFWwindow* window;$/;"	m	struct:__anon6fa524230108	typeref:typename:GLFWwindow *	file:
window	tests/triangle-vulkan.c	/^    GLFWwindow* window;$/;"	m	struct:demo	typeref:typename:GLFWwindow *	file:
windowDidBecomeKey:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWWindowDelegate
windowDidDeminiaturize:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWWindowDelegate
windowDidMiniaturize:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWWindowDelegate
windowDidMove:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWWindowDelegate
windowDidResignKey:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWWindowDelegate
windowDidResize:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWWindowDelegate
windowListHead	src/internal.h	/^    _GLFWwindow*        windowListHead;$/;"	m	struct:_GLFWlibrary	typeref:typename:_GLFWwindow *
windowProc	src/win32_window.c	/^static LRESULT CALLBACK windowProc(HWND hWnd, UINT uMsg,$/;"	f	typeref:typename:LRESULT CALLBACK	file:
windowRefreshFun	examples/splitview.c	/^static void windowRefreshFun(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
windowShouldClose:	src/cocoa_window.m	/^{$/;"	m	implementation:GLFWWindowDelegate
window_close_callback	tests/events.c	/^static void window_close_callback(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
window_close_callback	tests/reopen.c	/^static void window_close_callback(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
window_content_scale_callback	tests/events.c	/^static void window_content_scale_callback(GLFWwindow* window, float xscale, float yscale)$/;"	f	typeref:typename:void	file:
window_create	src/wl_platform.h	/^        PFN_wl_egl_window_create window_create;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590608	typeref:typename:PFN_wl_egl_window_create
window_destroy	src/wl_platform.h	/^        PFN_wl_egl_window_destroy window_destroy;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590608	typeref:typename:PFN_wl_egl_window_destroy
window_focus_callback	tests/events.c	/^static void window_focus_callback(GLFWwindow* window, int focused)$/;"	f	typeref:typename:void	file:
window_focus_callback	tests/iconify.c	/^static void window_focus_callback(GLFWwindow* window, int focused)$/;"	f	typeref:typename:void	file:
window_iconify_callback	tests/events.c	/^static void window_iconify_callback(GLFWwindow* window, int iconified)$/;"	f	typeref:typename:void	file:
window_iconify_callback	tests/iconify.c	/^static void window_iconify_callback(GLFWwindow* window, int iconified)$/;"	f	typeref:typename:void	file:
window_maximize_callback	tests/events.c	/^static void window_maximize_callback(GLFWwindow* window, int maximized)$/;"	f	typeref:typename:void	file:
window_maximize_callback	tests/iconify.c	/^static void window_maximize_callback(GLFWwindow* window, int maximized)$/;"	f	typeref:typename:void	file:
window_pos_callback	tests/events.c	/^static void window_pos_callback(GLFWwindow* window, int x, int y)$/;"	f	typeref:typename:void	file:
window_refresh_callback	tests/events.c	/^static void window_refresh_callback(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
window_refresh_callback	tests/iconify.c	/^static void window_refresh_callback(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
window_resize	src/wl_platform.h	/^        PFN_wl_egl_window_resize window_resize;$/;"	m	struct:_GLFWlibraryWayland::__anon32ec62590608	typeref:typename:PFN_wl_egl_window_resize
window_size_callback	tests/events.c	/^static void window_size_callback(GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void	file:
window_size_callback	tests/iconify.c	/^static void window_size_callback(GLFWwindow* window, int width, int height)$/;"	f	typeref:typename:void	file:
windowed_height	examples/boing.c	/^int windowed_xpos, windowed_ypos, windowed_width, windowed_height;$/;"	v	typeref:typename:int
windowed_height	tests/iconify.c	/^static int windowed_xpos, windowed_ypos, windowed_width, windowed_height;$/;"	v	typeref:typename:int	file:
windowed_width	examples/boing.c	/^int windowed_xpos, windowed_ypos, windowed_width, windowed_height;$/;"	v	typeref:typename:int
windowed_width	tests/iconify.c	/^static int windowed_xpos, windowed_ypos, windowed_width, windowed_height;$/;"	v	typeref:typename:int	file:
windowed_xpos	examples/boing.c	/^int windowed_xpos, windowed_ypos, windowed_width, windowed_height;$/;"	v	typeref:typename:int
windowed_xpos	tests/iconify.c	/^static int windowed_xpos, windowed_ypos, windowed_width, windowed_height;$/;"	v	typeref:typename:int	file:
windowed_ypos	examples/boing.c	/^int windowed_xpos, windowed_ypos, windowed_width, windowed_height;$/;"	v	typeref:typename:int
windowed_ypos	tests/iconify.c	/^static int windowed_xpos, windowed_ypos, windowed_width, windowed_height;$/;"	v	typeref:typename:int	file:
windows	tests/CMakeLists.txt	/^add_executable(windows WIN32 MACOSX_BUNDLE windows.c ${GLAD_GL})$/;"	t
windows	tests/windows.c	/^static GLFWwindow* windows[4];$/;"	v	typeref:typename:GLFWwindow * [4]	file:
winmm	src/win32_platform.h	/^    } winmm;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon622bd5890508
wireframe	examples/particles.c	/^int wireframe;$/;"	v	typeref:typename:int
wl_cursor	src/wl_platform.h	/^struct wl_cursor {$/;"	s
wl_cursor_image	src/wl_platform.h	/^struct wl_cursor_image {$/;"	s
wl_cursor_image_get_buffer	src/wl_platform.h	/^#define wl_cursor_image_get_buffer /;"	d
wl_cursor_theme_destroy	src/wl_platform.h	/^#define wl_cursor_theme_destroy /;"	d
wl_cursor_theme_get_cursor	src/wl_platform.h	/^#define wl_cursor_theme_get_cursor /;"	d
wl_cursor_theme_load	src/wl_platform.h	/^#define wl_cursor_theme_load /;"	d
wl_egl_window_create	src/wl_platform.h	/^#define wl_egl_window_create /;"	d
wl_egl_window_destroy	src/wl_platform.h	/^#define wl_egl_window_destroy /;"	d
wl_egl_window_resize	src/wl_platform.h	/^#define wl_egl_window_resize /;"	d
wmBase	src/wl_platform.h	/^    struct xdg_wm_base*         wmBase;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:xdg_wm_base *
wmBaseHandlePing	src/wl_init.c	/^static void wmBaseHandlePing(void* data,$/;"	f	typeref:typename:void	file:
wmBaseListener	src/wl_init.c	/^static const struct xdg_wm_base_listener wmBaseListener = {$/;"	v	typeref:typename:const struct xdg_wm_base_listener	file:
writeMask	deps/glad/vulkan.h	/^    uint32_t                 writeMask;$/;"	m	struct:VkStencilOpState	typeref:typename:uint32_t
writeTargetToProperty	src/x11_window.c	/^static Atom writeTargetToProperty(const XSelectionRequestEvent* request)$/;"	f	typeref:typename:Atom	file:
wsz	deps/mingw/dinput.h	/^        WCHAR        wsz[MAX_PATH];$/;"	m	struct:DIPROPSTRING	typeref:typename:WCHAR[]
wszPath	deps/mingw/dinput.h	/^	WCHAR   wszPath[MAX_PATH];$/;"	m	struct:DIPROPGUIDANDPATH	typeref:typename:WCHAR[]
x	deps/glad/vulkan.h	/^    float   x;$/;"	m	struct:VkViewport	typeref:typename:float
x	deps/glad/vulkan.h	/^    int32_t          x;$/;"	m	struct:VkOffset2D	typeref:typename:int32_t
x	deps/glad/vulkan.h	/^    int32_t          x;$/;"	m	struct:VkOffset3D	typeref:typename:int32_t
x	deps/glad/vulkan.h	/^    uint32_t   x;$/;"	m	struct:VkDispatchIndirectCommand	typeref:typename:uint32_t
x	deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
x	deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
x	deps/nuklear.h	/^    int x,y;$/;"	m	struct:nk_rp__findresult	typeref:typename:int
x	deps/nuklear.h	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node	typeref:typename:nk_rp_coord
x	deps/nuklear.h	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord
x	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle	typeref:typename:short
x	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled	typeref:typename:short
x	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_custom	typeref:typename:short
x	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image	typeref:typename:short
x	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect	typeref:typename:short
x	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled	typeref:typename:short
x	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:short
x	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor	typeref:typename:short
x	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text	typeref:typename:short
x	deps/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short
x	deps/nuklear.h	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find	typeref:typename:float
x	deps/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
x	deps/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
x	deps/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll	typeref:typename:nk_uint
x	deps/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point	typeref:typename:float
x	deps/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2	typeref:typename:float
x	deps/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i	typeref:typename:short
x	deps/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big	typeref:typename:T
x	examples/boing.c	/^typedef struct {float x; float y; float z;} vertex_t;$/;"	m	struct:__anond32b2c930208	typeref:typename:float	file:
x	examples/offscreen.c	/^    float x, y;$/;"	m	struct:__anone38272df0108	typeref:typename:float	file:
x	examples/particles.c	/^    GLfloat x, y, z;      \/\/ Vertex coordinates$/;"	m	struct:__anon62203f4b0208	typeref:typename:GLfloat	file:
x	examples/particles.c	/^    float x, y, z;$/;"	m	struct:__anon62203f4b0108	typeref:typename:float	file:
x	examples/particles.c	/^    float x,y,z;     \/\/ Position in space$/;"	m	struct:__anon62203f4b0408	typeref:typename:float	file:
x	examples/wave.c	/^    GLfloat x, y, z;$/;"	m	struct:Vertex	typeref:typename:GLfloat	file:
x	src/wl_platform.h	/^    int                         x;$/;"	m	struct:_GLFWmonitorWayland	typeref:typename:int
x	tests/tearing.c	/^    float x, y;$/;"	m	struct:__anonad2ab9a20108	typeref:typename:float	file:
x0	deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
x0	deps/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float
x0	deps/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
x0	deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short
x0	deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short
x0	deps/nuklear.h	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row	typeref:typename:float
x1	deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
x1	deps/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float
x1	deps/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
x1	deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short
x1	deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short
x1	deps/nuklear.h	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row	typeref:typename:float
x11	src/internal.h	/^    } x11;$/;"	m	struct:_GLFWwndconfig	typeref:struct:_GLFWwndconfig::__anona0faa0af0308
x11xcb	src/x11_platform.h	/^    } x11xcb;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon830d96b00708
xChromaOffset	deps/glad/vulkan.h	/^    VkChromaLocation                xChromaOffset;$/;"	m	struct:VkSamplerYcbcrConversionCreateInfo	typeref:typename:VkChromaLocation
xadvance	deps/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_font_glyph	typeref:typename:float
xadvance	deps/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_user_font_glyph	typeref:typename:float
xadvance	deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:float
xadvance	deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float
xcb_connection_t	src/x11_platform.h	/^typedef struct xcb_connection_t xcb_connection_t;$/;"	t	typeref:struct:xcb_connection_t
xcb_visualid_t	src/x11_platform.h	/^typedef XID xcb_visualid_t;$/;"	t	typeref:typename:XID
xcb_window_t	src/x11_platform.h	/^typedef XID xcb_window_t;$/;"	t	typeref:typename:XID
xcursor	src/x11_platform.h	/^    } xcursor;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon830d96b00508
xdg	src/wl_platform.h	/^    } xdg;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:_GLFWwindowWayland::__anon32ec62590108
xdgDecorationHandleConfigure	src/wl_window.c	/^static void xdgDecorationHandleConfigure(void* data,$/;"	f	typeref:typename:void	file:
xdgDecorationListener	src/wl_window.c	/^static const struct zxdg_toplevel_decoration_v1_listener xdgDecorationListener = {$/;"	v	typeref:typename:const struct zxdg_toplevel_decoration_v1_listener	file:
xdgSurfaceHandleConfigure	src/wl_window.c	/^static void xdgSurfaceHandleConfigure(void* data,$/;"	f	typeref:typename:void	file:
xdgSurfaceListener	src/wl_window.c	/^static const struct xdg_surface_listener xdgSurfaceListener = {$/;"	v	typeref:typename:const struct xdg_surface_listener	file:
xdgToplevelHandleClose	src/wl_window.c	/^static void xdgToplevelHandleClose(void* data,$/;"	f	typeref:typename:void	file:
xdgToplevelHandleConfigure	src/wl_window.c	/^static void xdgToplevelHandleConfigure(void* data,$/;"	f	typeref:typename:void	file:
xdgToplevelListener	src/wl_window.c	/^static const struct xdg_toplevel_listener xdgToplevelListener = {$/;"	v	typeref:typename:const struct xdg_toplevel_listener	file:
xdnd	src/x11_platform.h	/^    } xdnd;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon830d96b00408
xhot	src/wl_platform.h	/^    int                         xhot, yhot;$/;"	m	struct:_GLFWcursorWayland	typeref:typename:int
xi	src/x11_platform.h	/^    } xi;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon830d96b00908
xinerama	src/x11_platform.h	/^    } xinerama;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon830d96b00608
xinput	src/win32_platform.h	/^    } xinput;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon622bd5890708
xkb	src/wl_platform.h	/^    } xkb;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::__anon32ec62590408
xkb	src/x11_platform.h	/^    } xkb;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon830d96b00208
xkb_compose_state_feed	src/wl_platform.h	/^#define xkb_compose_state_feed /;"	d
xkb_compose_state_get_one_sym	src/wl_platform.h	/^#define xkb_compose_state_get_one_sym /;"	d
xkb_compose_state_get_status	src/wl_platform.h	/^#define xkb_compose_state_get_status /;"	d
xkb_compose_state_new	src/wl_platform.h	/^#define xkb_compose_state_new /;"	d
xkb_compose_state_unref	src/wl_platform.h	/^#define xkb_compose_state_unref /;"	d
xkb_compose_table_new_from_locale	src/wl_platform.h	/^#define xkb_compose_table_new_from_locale /;"	d
xkb_compose_table_unref	src/wl_platform.h	/^#define xkb_compose_table_unref /;"	d
xkb_context_new	src/wl_platform.h	/^#define xkb_context_new /;"	d
xkb_context_unref	src/wl_platform.h	/^#define xkb_context_unref /;"	d
xkb_keymap_key_repeats	src/wl_platform.h	/^#define xkb_keymap_key_repeats /;"	d
xkb_keymap_mod_get_index	src/wl_platform.h	/^#define xkb_keymap_mod_get_index /;"	d
xkb_keymap_new_from_string	src/wl_platform.h	/^#define xkb_keymap_new_from_string /;"	d
xkb_keymap_unref	src/wl_platform.h	/^#define xkb_keymap_unref /;"	d
xkb_state_key_get_syms	src/wl_platform.h	/^#define xkb_state_key_get_syms /;"	d
xkb_state_new	src/wl_platform.h	/^#define xkb_state_new /;"	d
xkb_state_serialize_mods	src/wl_platform.h	/^#define xkb_state_serialize_mods /;"	d
xkb_state_unref	src/wl_platform.h	/^#define xkb_state_unref /;"	d
xkb_state_update_mask	src/wl_platform.h	/^#define xkb_state_update_mask /;"	d
xoff	deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:float
xoff	deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float
xoff2	deps/nuklear.h	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float
xpos	examples/splitview.c	/^static double xpos = 0, ypos = 0;$/;"	v	typeref:typename:double	file:
xpos	src/x11_platform.h	/^    int             xpos, ypos;$/;"	m	struct:_GLFWwindowX11	typeref:typename:int
xrender	src/x11_platform.h	/^    } xrender;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon830d96b00a08
y	deps/glad/vulkan.h	/^    float   y;$/;"	m	struct:VkViewport	typeref:typename:float
y	deps/glad/vulkan.h	/^    int32_t          y;$/;"	m	struct:VkOffset2D	typeref:typename:int32_t
y	deps/glad/vulkan.h	/^    int32_t          y;$/;"	m	struct:VkOffset3D	typeref:typename:int32_t
y	deps/glad/vulkan.h	/^    uint32_t   y;$/;"	m	struct:VkDispatchIndirectCommand	typeref:typename:uint32_t
y	deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
y	deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
y	deps/nuklear.h	/^    int x,y;$/;"	m	struct:nk_rp__findresult	typeref:typename:int
y	deps/nuklear.h	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node	typeref:typename:nk_rp_coord
y	deps/nuklear.h	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord
y	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle	typeref:typename:short
y	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled	typeref:typename:short
y	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_custom	typeref:typename:short
y	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image	typeref:typename:short
y	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect	typeref:typename:short
y	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled	typeref:typename:short
y	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:short
y	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor	typeref:typename:short
y	deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text	typeref:typename:short
y	deps/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short
y	deps/nuklear.h	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find	typeref:typename:float
y	deps/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
y	deps/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
y	deps/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll	typeref:typename:nk_uint
y	deps/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point	typeref:typename:float
y	deps/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2	typeref:typename:float
y	deps/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i	typeref:typename:short
y	examples/boing.c	/^typedef struct {float x; float y; float z;} vertex_t;$/;"	m	struct:__anond32b2c930208	typeref:typename:float	file:
y	examples/offscreen.c	/^    float x, y;$/;"	m	struct:__anone38272df0108	typeref:typename:float	file:
y	examples/particles.c	/^    GLfloat x, y, z;      \/\/ Vertex coordinates$/;"	m	struct:__anon62203f4b0208	typeref:typename:GLfloat	file:
y	examples/particles.c	/^    float x, y, z;$/;"	m	struct:__anon62203f4b0108	typeref:typename:float	file:
y	examples/particles.c	/^    float x,y,z;     \/\/ Position in space$/;"	m	struct:__anon62203f4b0408	typeref:typename:float	file:
y	examples/wave.c	/^    GLfloat x, y, z;$/;"	m	struct:Vertex	typeref:typename:GLfloat	file:
y	src/wl_platform.h	/^    int                         y;$/;"	m	struct:_GLFWmonitorWayland	typeref:typename:int
y	tests/tearing.c	/^    float x, y;$/;"	m	struct:__anonad2ab9a20108	typeref:typename:float	file:
y0	deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
y0	deps/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float
y0	deps/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
y0	deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short
y0	deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short
y1	deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
y1	deps/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float
y1	deps/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
y1	deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short
y1	deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short
yChromaOffset	deps/glad/vulkan.h	/^    VkChromaLocation                yChromaOffset;$/;"	m	struct:VkSamplerYcbcrConversionCreateInfo	typeref:typename:VkChromaLocation
ycbcrModel	deps/glad/vulkan.h	/^    VkSamplerYcbcrModelConversion   ycbcrModel;$/;"	m	struct:VkSamplerYcbcrConversionCreateInfo	typeref:typename:VkSamplerYcbcrModelConversion
ycbcrRange	deps/glad/vulkan.h	/^    VkSamplerYcbcrRange             ycbcrRange;$/;"	m	struct:VkSamplerYcbcrConversionCreateInfo	typeref:typename:VkSamplerYcbcrRange
yhot	src/wl_platform.h	/^    int                         xhot, yhot;$/;"	m	struct:_GLFWcursorWayland	typeref:typename:int
ymax	deps/nuklear.h	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row	typeref:typename:float
ymin	deps/nuklear.h	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row	typeref:typename:float
yoff	deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:float
yoff	deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float
yoff2	deps/nuklear.h	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float
ypos	examples/splitview.c	/^static double xpos = 0, ypos = 0;$/;"	v	typeref:typename:double	file:
ypos	src/x11_platform.h	/^    int             xpos, ypos;$/;"	m	struct:_GLFWwindowX11	typeref:typename:int
yscale	src/cocoa_platform.h	/^    float           xscale, yscale;$/;"	E	struct:_GLFWwindowNS
z	deps/glad/vulkan.h	/^    int32_t          z;$/;"	m	struct:VkOffset3D	typeref:typename:int32_t
z	deps/glad/vulkan.h	/^    uint32_t   z;$/;"	m	struct:VkDispatchIndirectCommand	typeref:typename:uint32_t
z	examples/boing.c	/^typedef struct {float x; float y; float z;} vertex_t;$/;"	m	struct:__anond32b2c930208	typeref:typename:float	file:
z	examples/particles.c	/^    GLfloat x, y, z;      \/\/ Vertex coordinates$/;"	m	struct:__anon62203f4b0208	typeref:typename:GLfloat	file:
z	examples/particles.c	/^    float x, y, z;$/;"	m	struct:__anon62203f4b0108	typeref:typename:float	file:
z	examples/particles.c	/^    float x,y,z;     \/\/ Position in space$/;"	m	struct:__anon62203f4b0408	typeref:typename:float	file:
z	examples/wave.c	/^    GLfloat x, y, z;$/;"	m	struct:Vertex	typeref:typename:GLfloat	file:
z_far	examples/heightmap.c	/^static GLfloat z_far = 100.f;$/;"	v	typeref:typename:GLfloat	file:
z_near	examples/heightmap.c	/^static GLfloat z_near = 1.0f;$/;"	v	typeref:typename:GLfloat	file:
zoom	examples/wave.c	/^GLfloat zoom = 2.f;$/;"	v	typeref:typename:GLfloat
